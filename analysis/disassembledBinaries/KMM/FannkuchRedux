../../../SkantzBinaries/KMM/fannkuchReduxKmm:
(__TEXT,__text) section
_kfun:kotlin.collections#copyInto__at__kotlin.Array<out|0:0>(kotlin.Array<0:0>;kotlin.Int;kotlin.Int;kotlin.Int){0ยง<kotlin.Any?>}kotlin.Array<0:0>:
0000000000005a14	stp	x22, x21, [sp, #-0x30]!
0000000000005a18	stp	x20, x19, [sp, #0x10]
0000000000005a1c	stp	x29, x30, [sp, #0x20]
0000000000005a20	add	x29, sp, #0x20
0000000000005a24	mov	x20, x3
0000000000005a28	mov	x22, x2
0000000000005a2c	mov	x19, x1
0000000000005a30	mov	x21, x0
0000000000005a34	adr	x8, #0x7ce0f
0000000000005a38	nop
0000000000005a3c	ldarb	w8, [x8]
0000000000005a40	tbz	w8, #0x0, 0x5a48
0000000000005a44	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000005a48	ldr	x8, [x21]
0000000000005a4c	and	x8, x8, #0xfffffffffffffffc
0000000000005a50	ldr	x8, [x8]
0000000000005a54	ldr	w8, [x8, #0x5c]
0000000000005a58	cmp	w8, #0x49
0000000000005a5c	b.ne	0x5b38
0000000000005a60	ldr	x8, [x19]
0000000000005a64	and	x8, x8, #0xfffffffffffffffc
0000000000005a68	ldr	x8, [x8]
0000000000005a6c	ldr	w8, [x8, #0x5c]
0000000000005a70	cmp	w8, #0x49
0000000000005a74	b.ne	0x5b48
0000000000005a78	tbnz	w22, #0x1f, 0x5b34
0000000000005a7c	ldr	w8, [x21, #0x8]
0000000000005a80	cmp	w8, w22
0000000000005a84	b.lo	0x5b34
0000000000005a88	ldr	w8, [x19, #0x8]
0000000000005a8c	cmp	w8, w22
0000000000005a90	b.lo	0x5b34
0000000000005a94	ldr	xzr, [x19]
0000000000005a98	cmp	w22, #0x1
0000000000005a9c	b.lt	0x5afc
0000000000005aa0	mov	w8, w22
0000000000005aa4	cmp	w22, #0x1
0000000000005aa8	b.eq	0x5ad4
0000000000005aac	add	x9, x19, #0x10
0000000000005ab0	add	x10, x21, #0x10
0000000000005ab4	lsl	x11, x8, #3
0000000000005ab8	add	x11, x11, #0x10
0000000000005abc	add	x12, x21, x11
0000000000005ac0	cmp	x9, x12
0000000000005ac4	b.hs	0x5b10
0000000000005ac8	add	x11, x19, x11
0000000000005acc	cmp	x10, x11
0000000000005ad0	b.hs	0x5b10
0000000000005ad4	mov	x11, #0x0
0000000000005ad8	sub	x8, x8, x11
0000000000005adc	lsl	x9, x11, #3
0000000000005ae0	add	x10, x9, #0x10
0000000000005ae4	add	x9, x21, x10
0000000000005ae8	add	x10, x19, x10
0000000000005aec	ldr	x11, [x9], #0x8
0000000000005af0	str	x11, [x10], #0x8
0000000000005af4	subs	x8, x8, #0x1
0000000000005af8	b.ne	0x5aec
0000000000005afc	str	x19, [x20]
0000000000005b00	ldp	x29, x30, [sp, #0x20]
0000000000005b04	ldp	x20, x19, [sp, #0x10]
0000000000005b08	ldp	x22, x21, [sp], #0x30
0000000000005b0c	ret
0000000000005b10	and	x11, x8, #0xfffffffe
0000000000005b14	mov	x12, x11
0000000000005b18	ldr	q0, [x10], #0x10
0000000000005b1c	str	q0, [x9], #0x10
0000000000005b20	subs	x12, x12, #0x2
0000000000005b24	b.ne	0x5b18
0000000000005b28	cmp	x11, x8
0000000000005b2c	b.eq	0x5afc
0000000000005b30	b	0x5ad8
0000000000005b34	bl	_ThrowArrayIndexOutOfBoundsException
0000000000005b38	adr	x1, #0x4eaa8
0000000000005b3c	nop
0000000000005b40	mov	x0, x21
0000000000005b44	bl	_ThrowClassCastException
0000000000005b48	adr	x1, #0x4ea98
0000000000005b4c	nop
0000000000005b50	mov	x0, x19
0000000000005b54	bl	_ThrowClassCastException
_kfun:kotlin.collections#copyOfUninitializedElements__at__kotlin.Array<0:0>(kotlin.Int;kotlin.Int){0ยง<kotlin.Any?>}kotlin.Array<0:0>:
0000000000005b58	sub	sp, sp, #0xc0
0000000000005b5c	stp	x24, x23, [sp, #0x80]
0000000000005b60	stp	x22, x21, [sp, #0x90]
0000000000005b64	stp	x20, x19, [sp, #0xa0]
0000000000005b68	stp	x29, x30, [sp, #0xb0]
0000000000005b6c	add	x29, sp, #0xb0
0000000000005b70	mov	x20, x2
0000000000005b74	mov	x19, x1
0000000000005b78	mov	x21, x0
0000000000005b7c	movi.16b	v0, #0x0
0000000000005b80	stp	q0, q0, [sp, #0x20]
0000000000005b84	stp	q0, q0, [sp, #0x60]
0000000000005b88	stp	q0, q0, [sp, #0x40]
0000000000005b8c	stp	xzr, xzr, [sp, #0x10]
0000000000005b90	adr	x8, #0x52800
0000000000005b94	nop
0000000000005b98	orr	x8, x8, #0x3
0000000000005b9c	str	x8, [sp, #0x8]
0000000000005ba0	adrp	x0, 99 ; 0x68000
0000000000005ba4	add	x0, x0, #0xa00
0000000000005ba8	ldr	x8, [x0]
0000000000005bac	blr	x8
0000000000005bb0	ldr	x23, [x0]
0000000000005bb4	ldr	x8, [x23, #0x110]
0000000000005bb8	add	x9, sp, #0x20
0000000000005bbc	str	x9, [x23, #0x110]
0000000000005bc0	mov	x9, #0xc00000000
0000000000005bc4	stp	x8, x9, [sp, #0x28]
0000000000005bc8	adr	x8, #0x7cc7b
0000000000005bcc	nop
0000000000005bd0	ldarb	w8, [x8]
0000000000005bd4	tbz	w8, #0x0, 0x5bdc
0000000000005bd8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000005bdc	tbnz	w19, #0x1f, 0x5c60
0000000000005be0	ldr	x8, [x23, #0x118]
0000000000005be4	mov	w9, w19
0000000000005be8	lsl	x9, x9, #3
0000000000005bec	add	x9, x9, #0x1f
0000000000005bf0	and	x1, x9, #0xffffffff8
0000000000005bf4	add	x0, x8, #0x70
0000000000005bf8	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000005bfc	mov	x22, x0
0000000000005c00	stp	xzr, xzr, [x22, #0x10]!
0000000000005c04	adr	x8, #0x4e9dc
0000000000005c08	nop
0000000000005c0c	stp	xzr, x8, [x22, #-0x8]
0000000000005c10	str	w19, [x22, #0x8]
0000000000005c14	str	x22, [sp, #0x70]
0000000000005c18	ldr	w8, [x21, #0x8]
0000000000005c1c	cmp	w8, w19
0000000000005c20	csel	w2, w8, w19, lt
0000000000005c24	add	x8, sp, #0x20
0000000000005c28	add	x3, x8, #0x58
0000000000005c2c	mov	x0, x21
0000000000005c30	mov	x1, x22
0000000000005c34	bl	"_kfun:kotlin.collections#copyInto__at__kotlin.Array<out|0:0>(kotlin.Array<0:0>;kotlin.Int;kotlin.Int;kotlin.Int){0ยง<kotlin.Any?>}kotlin.Array<0:0>"
0000000000005c38	str	x22, [x20]
0000000000005c3c	ldr	x8, [sp, #0x28]
0000000000005c40	str	x8, [x23, #0x110]
0000000000005c44	mov	x0, x22
0000000000005c48	ldp	x29, x30, [sp, #0xb0]
0000000000005c4c	ldp	x20, x19, [sp, #0xa0]
0000000000005c50	ldp	x22, x21, [sp, #0x90]
0000000000005c54	ldp	x24, x23, [sp, #0x80]
0000000000005c58	add	sp, sp, #0xc0
0000000000005c5c	ret
0000000000005c60	add	x8, sp, #0x20
0000000000005c64	add	x20, x8, #0x38
0000000000005c68	add	x21, x8, #0x30
0000000000005c6c	add	x22, x8, #0x28
0000000000005c70	mov	x24, x23
0000000000005c74	add	x23, x8, #0x20
0000000000005c78	add	x8, sp, #0x8
0000000000005c7c	str	x8, [sp, #0x38]
0000000000005c80	add	x0, sp, #0x8
0000000000005c84	mov	w1, #0xa
0000000000005c88	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
0000000000005c8c	add	x0, sp, #0x8
0000000000005c90	mov	w1, #0x0
0000000000005c94	mov	x2, x23
0000000000005c98	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
0000000000005c9c	adr	x1, #0x5b484
0000000000005ca0	nop
0000000000005ca4	add	x0, sp, #0x8
0000000000005ca8	mov	x2, x22
0000000000005cac	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000005cb0	add	x0, sp, #0x8
0000000000005cb4	mov	x1, x19
0000000000005cb8	mov	x2, x21
0000000000005cbc	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
0000000000005cc0	add	x0, sp, #0x8
0000000000005cc4	mov	x1, x20
0000000000005cc8	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
0000000000005ccc	mov	x19, x0
0000000000005cd0	ldr	x8, [x24, #0x118]
0000000000005cd4	add	x0, x8, #0x70
0000000000005cd8	mov	w1, #0x38
0000000000005cdc	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000005ce0	mov	x20, x0
0000000000005ce4	adr	x8, #0x4ef9c
0000000000005ce8	nop
0000000000005cec	str	x8, [x20, #0x10]!
0000000000005cf0	stur	xzr, [x20, #-0x8]
0000000000005cf4	str	x20, [sp, #0x60]
0000000000005cf8	mov	x0, x20
0000000000005cfc	mov	x1, x19
0000000000005d00	bl	"_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}"
0000000000005d04	mov	x0, x20
0000000000005d08	bl	_ThrowException
_kfun:kotlin.collections#copyOfUninitializedElements__at__kotlin.IntArray(kotlin.Int;kotlin.Int){}kotlin.IntArray:
0000000000005d0c	sub	sp, sp, #0xc0
0000000000005d10	stp	x24, x23, [sp, #0x80]
0000000000005d14	stp	x22, x21, [sp, #0x90]
0000000000005d18	stp	x20, x19, [sp, #0xa0]
0000000000005d1c	stp	x29, x30, [sp, #0xb0]
0000000000005d20	add	x29, sp, #0xb0
0000000000005d24	mov	x20, x2
0000000000005d28	mov	x19, x1
0000000000005d2c	mov	x21, x0
0000000000005d30	movi.16b	v0, #0x0
0000000000005d34	stp	q0, q0, [sp, #0x20]
0000000000005d38	str	xzr, [sp, #0x70]
0000000000005d3c	stp	q0, q0, [sp, #0x50]
0000000000005d40	str	q0, [sp, #0x40]
0000000000005d44	stp	xzr, xzr, [sp, #0x10]
0000000000005d48	adr	x8, #0x52648
0000000000005d4c	nop
0000000000005d50	orr	x8, x8, #0x3
0000000000005d54	str	x8, [sp, #0x8]
0000000000005d58	adrp	x0, 99 ; 0x68000
0000000000005d5c	add	x0, x0, #0xa00
0000000000005d60	ldr	x8, [x0]
0000000000005d64	blr	x8
0000000000005d68	ldr	x23, [x0]
0000000000005d6c	ldr	x8, [x23, #0x110]
0000000000005d70	add	x9, sp, #0x20
0000000000005d74	str	x9, [x23, #0x110]
0000000000005d78	mov	x9, #0xb00000000
0000000000005d7c	stp	x8, x9, [sp, #0x28]
0000000000005d80	adr	x8, #0x7cac3
0000000000005d84	nop
0000000000005d88	ldarb	w8, [x8]
0000000000005d8c	tbz	w8, #0x0, 0x5d94
0000000000005d90	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000005d94	tbnz	w19, #0x1f, 0x5e48
0000000000005d98	ldr	x8, [x23, #0x118]
0000000000005d9c	mov	w9, w19
0000000000005da0	lsl	x9, x9, #2
0000000000005da4	add	x9, x9, #0x1f
0000000000005da8	and	x1, x9, #0x7fffffff8
0000000000005dac	add	x0, x8, #0x70
0000000000005db0	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000005db4	mov	x22, x0
0000000000005db8	str	xzr, [x22, #0x10]!
0000000000005dbc	str	xzr, [x0, #0x18]
0000000000005dc0	adr	x8, #0x4e940
0000000000005dc4	nop
0000000000005dc8	str	xzr, [x0, #0x8]
0000000000005dcc	str	x8, [x22]
0000000000005dd0	str	w19, [x0, #0x18]
0000000000005dd4	str	x22, [sp, #0x68]
0000000000005dd8	ldr	w8, [x21, #0x8]
0000000000005ddc	cmp	w8, w19
0000000000005de0	b.ge	0x5dec
0000000000005de4	mov	x19, x8
0000000000005de8	tbnz	w8, #0x1f, 0x5e44
0000000000005dec	ldr	w8, [x21, #0x8]
0000000000005df0	cmp	w8, w19
0000000000005df4	b.lo	0x5e44
0000000000005df8	ldr	w8, [x0, #0x18]
0000000000005dfc	cmp	w8, w19
0000000000005e00	b.lo	0x5e44
0000000000005e04	ldr	xzr, [x0, #0x10]
0000000000005e08	add	x0, x0, #0x20
0000000000005e0c	add	x1, x21, #0x10
0000000000005e10	sbfiz	x2, x19, #2, #32
0000000000005e14	bl	0x4dbf8 ; symbol stub for: _memmove
0000000000005e18	str	x22, [sp, #0x70]
0000000000005e1c	str	x22, [x20]
0000000000005e20	ldr	x8, [sp, #0x28]
0000000000005e24	str	x8, [x23, #0x110]
0000000000005e28	mov	x0, x22
0000000000005e2c	ldp	x29, x30, [sp, #0xb0]
0000000000005e30	ldp	x20, x19, [sp, #0xa0]
0000000000005e34	ldp	x22, x21, [sp, #0x90]
0000000000005e38	ldp	x24, x23, [sp, #0x80]
0000000000005e3c	add	sp, sp, #0xc0
0000000000005e40	ret
0000000000005e44	bl	_ThrowArrayIndexOutOfBoundsException
0000000000005e48	add	x8, sp, #0x20
0000000000005e4c	add	x20, x8, #0x38
0000000000005e50	add	x21, x8, #0x30
0000000000005e54	add	x22, x8, #0x28
0000000000005e58	mov	x24, x23
0000000000005e5c	add	x23, x8, #0x20
0000000000005e60	add	x8, sp, #0x8
0000000000005e64	str	x8, [sp, #0x38]
0000000000005e68	add	x0, sp, #0x8
0000000000005e6c	mov	w1, #0xa
0000000000005e70	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
0000000000005e74	add	x0, sp, #0x8
0000000000005e78	mov	w1, #0x0
0000000000005e7c	mov	x2, x23
0000000000005e80	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
0000000000005e84	adr	x1, #0x5b29c
0000000000005e88	nop
0000000000005e8c	add	x0, sp, #0x8
0000000000005e90	mov	x2, x22
0000000000005e94	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000005e98	add	x0, sp, #0x8
0000000000005e9c	mov	x1, x19
0000000000005ea0	mov	x2, x21
0000000000005ea4	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
0000000000005ea8	add	x0, sp, #0x8
0000000000005eac	mov	x1, x20
0000000000005eb0	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
0000000000005eb4	mov	x19, x0
0000000000005eb8	ldr	x8, [x24, #0x118]
0000000000005ebc	add	x0, x8, #0x70
0000000000005ec0	mov	w1, #0x38
0000000000005ec4	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000005ec8	mov	x20, x0
0000000000005ecc	adr	x8, #0x4edb4
0000000000005ed0	nop
0000000000005ed4	str	x8, [x20, #0x10]!
0000000000005ed8	stur	xzr, [x20, #-0x8]
0000000000005edc	str	x20, [sp, #0x60]
0000000000005ee0	mov	x0, x20
0000000000005ee4	mov	x1, x19
0000000000005ee8	bl	"_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}"
0000000000005eec	mov	x0, x20
0000000000005ef0	bl	_ThrowException
_kfun:kotlin.collections#copyOfUninitializedElements__at__kotlin.CharArray(kotlin.Int;kotlin.Int){}kotlin.CharArray:
0000000000005ef4	sub	sp, sp, #0xc0
0000000000005ef8	stp	x24, x23, [sp, #0x80]
0000000000005efc	stp	x22, x21, [sp, #0x90]
0000000000005f00	stp	x20, x19, [sp, #0xa0]
0000000000005f04	stp	x29, x30, [sp, #0xb0]
0000000000005f08	add	x29, sp, #0xb0
0000000000005f0c	mov	x20, x2
0000000000005f10	mov	x19, x1
0000000000005f14	mov	x21, x0
0000000000005f18	movi.16b	v0, #0x0
0000000000005f1c	stp	q0, q0, [sp, #0x20]
0000000000005f20	str	xzr, [sp, #0x70]
0000000000005f24	stp	q0, q0, [sp, #0x50]
0000000000005f28	str	q0, [sp, #0x40]
0000000000005f2c	stp	xzr, xzr, [sp, #0x10]
0000000000005f30	adr	x8, #0x52460
0000000000005f34	nop
0000000000005f38	orr	x8, x8, #0x3
0000000000005f3c	str	x8, [sp, #0x8]
0000000000005f40	adrp	x0, 99 ; 0x68000
0000000000005f44	add	x0, x0, #0xa00
0000000000005f48	ldr	x8, [x0]
0000000000005f4c	blr	x8
0000000000005f50	ldr	x23, [x0]
0000000000005f54	ldr	x8, [x23, #0x110]
0000000000005f58	add	x9, sp, #0x20
0000000000005f5c	str	x9, [x23, #0x110]
0000000000005f60	mov	x9, #0xb00000000
0000000000005f64	stp	x8, x9, [sp, #0x28]
0000000000005f68	adr	x8, #0x7c8db
0000000000005f6c	nop
0000000000005f70	ldarb	w8, [x8]
0000000000005f74	tbz	w8, #0x0, 0x5f7c
0000000000005f78	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000005f7c	tbnz	w19, #0x1f, 0x6030
0000000000005f80	ldr	x8, [x23, #0x118]
0000000000005f84	mov	w9, w19
0000000000005f88	lsl	x9, x9, #1
0000000000005f8c	add	x9, x9, #0x1f
0000000000005f90	and	x1, x9, #0x3fffffff8
0000000000005f94	add	x0, x8, #0x70
0000000000005f98	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000005f9c	mov	x22, x0
0000000000005fa0	str	xzr, [x22, #0x10]!
0000000000005fa4	str	xzr, [x0, #0x18]
0000000000005fa8	adr	x8, #0x4e6c8
0000000000005fac	nop
0000000000005fb0	str	xzr, [x0, #0x8]
0000000000005fb4	str	x8, [x22]
0000000000005fb8	str	w19, [x0, #0x18]
0000000000005fbc	str	x22, [sp, #0x68]
0000000000005fc0	ldr	w8, [x21, #0x8]
0000000000005fc4	cmp	w8, w19
0000000000005fc8	b.ge	0x5fd4
0000000000005fcc	mov	x19, x8
0000000000005fd0	tbnz	w8, #0x1f, 0x602c
0000000000005fd4	ldr	w8, [x21, #0x8]
0000000000005fd8	cmp	w8, w19
0000000000005fdc	b.lo	0x602c
0000000000005fe0	ldr	w8, [x0, #0x18]
0000000000005fe4	cmp	w8, w19
0000000000005fe8	b.lo	0x602c
0000000000005fec	ldr	xzr, [x0, #0x10]
0000000000005ff0	add	x0, x0, #0x20
0000000000005ff4	add	x1, x21, #0x10
0000000000005ff8	sbfiz	x2, x19, #1, #32
0000000000005ffc	bl	0x4dbf8 ; symbol stub for: _memmove
0000000000006000	str	x22, [sp, #0x70]
0000000000006004	str	x22, [x20]
0000000000006008	ldr	x8, [sp, #0x28]
000000000000600c	str	x8, [x23, #0x110]
0000000000006010	mov	x0, x22
0000000000006014	ldp	x29, x30, [sp, #0xb0]
0000000000006018	ldp	x20, x19, [sp, #0xa0]
000000000000601c	ldp	x22, x21, [sp, #0x90]
0000000000006020	ldp	x24, x23, [sp, #0x80]
0000000000006024	add	sp, sp, #0xc0
0000000000006028	ret
000000000000602c	bl	_ThrowArrayIndexOutOfBoundsException
0000000000006030	add	x8, sp, #0x20
0000000000006034	add	x20, x8, #0x38
0000000000006038	add	x21, x8, #0x30
000000000000603c	add	x22, x8, #0x28
0000000000006040	mov	x24, x23
0000000000006044	add	x23, x8, #0x20
0000000000006048	add	x8, sp, #0x8
000000000000604c	str	x8, [sp, #0x38]
0000000000006050	add	x0, sp, #0x8
0000000000006054	mov	w1, #0xa
0000000000006058	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
000000000000605c	add	x0, sp, #0x8
0000000000006060	mov	w1, #0x0
0000000000006064	mov	x2, x23
0000000000006068	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
000000000000606c	adr	x1, #0x5b0b4
0000000000006070	nop
0000000000006074	add	x0, sp, #0x8
0000000000006078	mov	x2, x22
000000000000607c	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000006080	add	x0, sp, #0x8
0000000000006084	mov	x1, x19
0000000000006088	mov	x2, x21
000000000000608c	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
0000000000006090	add	x0, sp, #0x8
0000000000006094	mov	x1, x20
0000000000006098	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
000000000000609c	mov	x19, x0
00000000000060a0	ldr	x8, [x24, #0x118]
00000000000060a4	add	x0, x8, #0x70
00000000000060a8	mov	w1, #0x38
00000000000060ac	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000060b0	mov	x20, x0
00000000000060b4	adr	x8, #0x4ebcc
00000000000060b8	nop
00000000000060bc	str	x8, [x20, #0x10]!
00000000000060c0	stur	xzr, [x20, #-0x8]
00000000000060c4	str	x20, [sp, #0x60]
00000000000060c8	mov	x0, x20
00000000000060cc	mov	x1, x19
00000000000060d0	bl	"_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}"
00000000000060d4	mov	x0, x20
00000000000060d8	bl	_ThrowException
_kfun:kotlin.Any#hashCode(){}kotlin.Int:
00000000000060dc	stp	x20, x19, [sp, #-0x20]!
00000000000060e0	stp	x29, x30, [sp, #0x10]
00000000000060e4	add	x29, sp, #0x10
00000000000060e8	mov	x19, x0
00000000000060ec	adr	x8, #0x7c757
00000000000060f0	nop
00000000000060f4	ldarb	w8, [x8]
00000000000060f8	tbz	w8, #0x0, 0x6100
00000000000060fc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000006100	mov	x0, x19
0000000000006104	ldp	x29, x30, [sp, #0x10]
0000000000006108	ldp	x20, x19, [sp], #0x20
000000000000610c	ret
_kfun:kotlin.Any#toString(){}kotlin.String:
0000000000006110	sub	sp, sp, #0x140
0000000000006114	stp	x28, x27, [sp, #0xe0]
0000000000006118	stp	x26, x25, [sp, #0xf0]
000000000000611c	stp	x24, x23, [sp, #0x100]
0000000000006120	stp	x22, x21, [sp, #0x110]
0000000000006124	stp	x20, x19, [sp, #0x120]
0000000000006128	stp	x29, x30, [sp, #0x130]
000000000000612c	add	x29, sp, #0x130
0000000000006130	mov	x19, x1
0000000000006134	mov	x20, x0
0000000000006138	movi.16b	v0, #0x0
000000000000613c	stp	q0, q0, [sp, #0x30]
0000000000006140	stp	q0, q0, [sp, #0x60]
0000000000006144	str	q0, [sp, #0x50]
0000000000006148	add	x21, sp, #0x30
000000000000614c	adr	x8, #0x4fef4
0000000000006150	nop
0000000000006154	orr	x8, x8, #0x3
0000000000006158	stp	x8, xzr, [sp, #0x20]
000000000000615c	stp	xzr, xzr, [sp, #0x10]
0000000000006160	adr	x8, #0x52230
0000000000006164	nop
0000000000006168	orr	x8, x8, #0x3
000000000000616c	str	x8, [sp, #0x8]
0000000000006170	adrp	x0, 98 ; 0x68000
0000000000006174	add	x0, x0, #0xa00
0000000000006178	ldr	x8, [x0]
000000000000617c	blr	x8
0000000000006180	ldr	x26, [x0]
0000000000006184	ldr	x8, [x26, #0x110]
0000000000006188	str	x21, [x26, #0x110]
000000000000618c	mov	x9, #0xa00000000
0000000000006190	stp	x8, x9, [sp, #0x38]
0000000000006194	adr	x8, #0x7c6af
0000000000006198	nop
000000000000619c	ldarb	w8, [x8]
00000000000061a0	tbz	w8, #0x0, 0x61a8
00000000000061a4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000061a8	ldr	x8, [x20]
00000000000061ac	and	x8, x8, #0xfffffffffffffffc
00000000000061b0	ldr	x8, [x8]
00000000000061b4	add	x9, sp, #0x20
00000000000061b8	str	x9, [sp, #0x48]
00000000000061bc	str	x8, [sp, #0x28]
00000000000061c0	ldr	x8, [sp, #0x20]
00000000000061c4	and	x8, x8, #0xfffffffffffffffc
00000000000061c8	ldr	x8, [x8]
00000000000061cc	ldr	w8, [x8, #0x5c]
00000000000061d0	cmp	w8, #0xd2
00000000000061d4	b.ne	0x61fc
00000000000061d8	add	x1, x21, #0x20
00000000000061dc	add	x0, sp, #0x20
00000000000061e0	bl	"_kfun:kotlin.native.internal.KClassImpl#<get-fullName>(){}kotlin.String?"
00000000000061e4	str	x0, [sp, #0x50]
00000000000061e8	adr	x8, #0x5afa8
00000000000061ec	nop
00000000000061f0	cmp	x0, #0x0
00000000000061f4	csel	x21, x8, x0, eq
00000000000061f8	b	0x6208
00000000000061fc	str	xzr, [sp, #0x50]
0000000000006200	adr	x21, #0x5af90
0000000000006204	nop
0000000000006208	add	x8, sp, #0x30
000000000000620c	add	x22, x8, #0x48
0000000000006210	add	x23, x8, #0x40
0000000000006214	add	x24, x8, #0x38
0000000000006218	add	x25, x8, #0x28
000000000000621c	ldr	x8, [x20]
0000000000006220	and	x8, x8, #0xfffffffffffffffc
0000000000006224	ldr	x8, [x8]
0000000000006228	ldr	x8, [x8, #0x78]
000000000000622c	mov	x0, x20
0000000000006230	blr	x8
0000000000006234	mov	w0, w0
0000000000006238	mov	w1, #0x10
000000000000623c	mov	x2, x25
0000000000006240	bl	_Kotlin_Long_toStringRadix
0000000000006244	mov	x20, x0
0000000000006248	add	x8, sp, #0x8
000000000000624c	str	x8, [sp, #0x60]
0000000000006250	add	x0, sp, #0x8
0000000000006254	mov	w1, #0xa
0000000000006258	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
000000000000625c	add	x0, sp, #0x8
0000000000006260	mov	x1, x21
0000000000006264	mov	x2, x24
0000000000006268	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000626c	adr	x1, #0x5af44
0000000000006270	nop
0000000000006274	add	x0, sp, #0x8
0000000000006278	mov	x2, x23
000000000000627c	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000006280	add	x0, sp, #0x8
0000000000006284	mov	x1, x20
0000000000006288	mov	x2, x22
000000000000628c	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000006290	add	x0, sp, #0x8
0000000000006294	mov	x1, x19
0000000000006298	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
000000000000629c	str	x0, [x19]
00000000000062a0	ldr	x8, [sp, #0x38]
00000000000062a4	str	x8, [x26, #0x110]
00000000000062a8	ldp	x29, x30, [sp, #0x130]
00000000000062ac	ldp	x20, x19, [sp, #0x120]
00000000000062b0	ldp	x22, x21, [sp, #0x110]
00000000000062b4	ldp	x24, x23, [sp, #0x100]
00000000000062b8	ldp	x26, x25, [sp, #0xf0]
00000000000062bc	ldp	x28, x27, [sp, #0xe0]
00000000000062c0	add	sp, sp, #0x140
00000000000062c4	ret
_kfun:kotlin.Boolean#$<bridge-NBNB>compareTo(kotlin.Boolean){}kotlin.Int(kotlin.Any?){}kotlin.Int:
00000000000062c8	stp	x20, x19, [sp, #-0x20]!
00000000000062cc	stp	x29, x30, [sp, #0x10]
00000000000062d0	add	x29, sp, #0x10
00000000000062d4	mov	x19, x1
00000000000062d8	mov	x20, x0
00000000000062dc	adr	x8, #0x7c567
00000000000062e0	nop
00000000000062e4	ldarb	w8, [x8]
00000000000062e8	tbz	w8, #0x0, 0x62f0
00000000000062ec	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000062f0	ldrb	w8, [x20, #0x8]
00000000000062f4	ldrb	w9, [x19, #0x8]
00000000000062f8	eor	w10, w8, w9
00000000000062fc	bic	w8, w9, w8
0000000000006300	tst	w8, #0x1
0000000000006304	mov	w8, #-0x1
0000000000006308	cneg	w8, w8, eq
000000000000630c	tst	w10, #0x1
0000000000006310	csel	w0, w8, wzr, ne
0000000000006314	ldp	x29, x30, [sp, #0x10]
0000000000006318	ldp	x20, x19, [sp], #0x20
000000000000631c	ret
_kfun:kotlin.Boolean#$<bridge-NBNN>equals(kotlin.Any?){}kotlin.Boolean(kotlin.Any?){}kotlin.Boolean:
0000000000006320	stp	x20, x19, [sp, #-0x20]!
0000000000006324	stp	x29, x30, [sp, #0x10]
0000000000006328	add	x29, sp, #0x10
000000000000632c	mov	x19, x1
0000000000006330	mov	x20, x0
0000000000006334	adr	x8, #0x7c50f
0000000000006338	nop
000000000000633c	ldarb	w8, [x8]
0000000000006340	tbz	w8, #0x0, 0x6348
0000000000006344	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000006348	cbz	x19, 0x6384
000000000000634c	ldrb	w8, [x20, #0x8]
0000000000006350	ldr	x9, [x19]
0000000000006354	and	x9, x9, #0xfffffffffffffffc
0000000000006358	ldr	x9, [x9]
000000000000635c	ldr	w9, [x9, #0x5c]
0000000000006360	cmp	w9, #0x53
0000000000006364	b.ne	0x6384
0000000000006368	ldrb	w9, [x19, #0x8]
000000000000636c	eor	w8, w9, w8
0000000000006370	eor	w8, w8, #0x1
0000000000006374	and	w0, w8, #0x1
0000000000006378	ldp	x29, x30, [sp, #0x10]
000000000000637c	ldp	x20, x19, [sp], #0x20
0000000000006380	ret
0000000000006384	mov	w8, #0x0
0000000000006388	and	w0, w8, #0x1
000000000000638c	ldp	x29, x30, [sp, #0x10]
0000000000006390	ldp	x20, x19, [sp], #0x20
0000000000006394	ret
_kfun:kotlin.Boolean#$<bridge-NBN>toString(){}kotlin.String(){}kotlin.String:
0000000000006398	stp	x20, x19, [sp, #-0x20]!
000000000000639c	stp	x29, x30, [sp, #0x10]
00000000000063a0	add	x29, sp, #0x10
00000000000063a4	mov	x19, x1
00000000000063a8	mov	x20, x0
00000000000063ac	adr	x8, #0x7c497
00000000000063b0	nop
00000000000063b4	ldarb	w8, [x8]
00000000000063b8	tbz	w8, #0x0, 0x63c0
00000000000063bc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000063c0	ldrb	w8, [x20, #0x8]
00000000000063c4	adr	x9, #0x5ae2c
00000000000063c8	nop
00000000000063cc	adr	x10, #0x5ae04
00000000000063d0	nop
00000000000063d4	cmp	w8, #0x0
00000000000063d8	csel	x0, x10, x9, ne
00000000000063dc	str	x0, [x19]
00000000000063e0	ldp	x29, x30, [sp, #0x10]
00000000000063e4	ldp	x20, x19, [sp], #0x20
00000000000063e8	ret
_kfun:kotlin.Boolean#$<bridge-NBN>hashCode(){}kotlin.Int(){}kotlin.Int:
00000000000063ec	stp	x20, x19, [sp, #-0x20]!
00000000000063f0	stp	x29, x30, [sp, #0x10]
00000000000063f4	add	x29, sp, #0x10
00000000000063f8	mov	x19, x0
00000000000063fc	adr	x8, #0x7c447
0000000000006400	nop
0000000000006404	ldarb	w8, [x8]
0000000000006408	tbz	w8, #0x0, 0x6410
000000000000640c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000006410	ldrb	w0, [x19, #0x8]
0000000000006414	ldp	x29, x30, [sp, #0x10]
0000000000006418	ldp	x20, x19, [sp], #0x20
000000000000641c	ret
_kfun:kotlin#<Boolean-box>(kotlin.Boolean){}kotlin.Any:
0000000000006420	sub	sp, sp, #0x50
0000000000006424	stp	x22, x21, [sp, #0x20]
0000000000006428	stp	x20, x19, [sp, #0x30]
000000000000642c	stp	x29, x30, [sp, #0x40]
0000000000006430	add	x29, sp, #0x40
0000000000006434	mov	x19, x1
0000000000006438	mov	x20, x0
000000000000643c	movi.16b	v0, #0x0
0000000000006440	stp	q0, q0, [sp]
0000000000006444	adrp	x0, 98 ; 0x68000
0000000000006448	add	x0, x0, #0xa00
000000000000644c	ldr	x8, [x0]
0000000000006450	blr	x8
0000000000006454	ldr	x21, [x0]
0000000000006458	ldr	x8, [x21, #0x110]
000000000000645c	mov	x9, sp
0000000000006460	str	x9, [x21, #0x110]
0000000000006464	mov	x9, #0x400000000
0000000000006468	stp	x8, x9, [sp, #0x8]
000000000000646c	adr	x8, #0x7c3d7
0000000000006470	nop
0000000000006474	ldarb	w8, [x8]
0000000000006478	tbz	w8, #0x0, 0x6480
000000000000647c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000006480	adrp	x8, 72 ; 0x4e000
0000000000006484	ldrb	w8, [x8, #0xbb8]
0000000000006488	cbnz	w8, 0x64bc
000000000000648c	cbz	w20, 0x64bc
0000000000006490	ldr	x8, [x21, #0x118]
0000000000006494	add	x0, x8, #0x70
0000000000006498	mov	w1, #0x18
000000000000649c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000064a0	adr	x8, #0x4e380
00000000000064a4	nop
00000000000064a8	str	x8, [x0, #0x10]!
00000000000064ac	stur	xzr, [x0, #-0x8]
00000000000064b0	str	x0, [sp, #0x18]
00000000000064b4	strb	w20, [x0, #0x8]
00000000000064b8	b	0x64cc
00000000000064bc	adr	x8, #0x56b74
00000000000064c0	nop
00000000000064c4	add	x0, x8, w20, uxtw #4
00000000000064c8	str	x0, [x19]
00000000000064cc	str	x0, [x19]
00000000000064d0	ldr	x8, [sp, #0x8]
00000000000064d4	str	x8, [x21, #0x110]
00000000000064d8	ldp	x29, x30, [sp, #0x40]
00000000000064dc	ldp	x20, x19, [sp, #0x30]
00000000000064e0	ldp	x22, x21, [sp, #0x20]
00000000000064e4	add	sp, sp, #0x50
00000000000064e8	ret
_kfun:kotlin.Enum#compareTo(1:0){}kotlin.Int:
00000000000064ec	stp	x20, x19, [sp, #-0x20]!
00000000000064f0	stp	x29, x30, [sp, #0x10]
00000000000064f4	add	x29, sp, #0x10
00000000000064f8	mov	x19, x1
00000000000064fc	mov	x20, x0
0000000000006500	adr	x8, #0x7c343
0000000000006504	nop
0000000000006508	ldarb	w8, [x8]
000000000000650c	tbz	w8, #0x0, 0x6514
0000000000006510	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000006514	ldr	w8, [x20, #0x10]
0000000000006518	ldr	w9, [x19, #0x10]
000000000000651c	sub	w0, w8, w9
0000000000006520	ldp	x29, x30, [sp, #0x10]
0000000000006524	ldp	x20, x19, [sp], #0x20
0000000000006528	ret
_kfun:kotlin.Enum#equals(kotlin.Any?){}kotlin.Boolean:
000000000000652c	stp	x20, x19, [sp, #-0x20]!
0000000000006530	stp	x29, x30, [sp, #0x10]
0000000000006534	add	x29, sp, #0x10
0000000000006538	mov	x19, x1
000000000000653c	mov	x20, x0
0000000000006540	adr	x8, #0x7c303
0000000000006544	nop
0000000000006548	ldarb	w8, [x8]
000000000000654c	tbz	w8, #0x0, 0x6554
0000000000006550	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000006554	cmp	x20, x19
0000000000006558	cset	w0, eq
000000000000655c	ldp	x29, x30, [sp, #0x10]
0000000000006560	ldp	x20, x19, [sp], #0x20
0000000000006564	ret
_kfun:kotlin.Enum#hashCode(){}kotlin.Int:
0000000000006568	stp	x20, x19, [sp, #-0x20]!
000000000000656c	stp	x29, x30, [sp, #0x10]
0000000000006570	add	x29, sp, #0x10
0000000000006574	mov	x19, x0
0000000000006578	adr	x8, #0x7c2cb
000000000000657c	nop
0000000000006580	ldarb	w8, [x8]
0000000000006584	tbz	w8, #0x0, 0x658c
0000000000006588	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000658c	ldr	w0, [x19, #0x10]
0000000000006590	ldp	x29, x30, [sp, #0x10]
0000000000006594	ldp	x20, x19, [sp], #0x20
0000000000006598	ret
_kfun:kotlin.Enum#toString(){}kotlin.String:
000000000000659c	stp	x20, x19, [sp, #-0x20]!
00000000000065a0	stp	x29, x30, [sp, #0x10]
00000000000065a4	add	x29, sp, #0x10
00000000000065a8	mov	x19, x1
00000000000065ac	mov	x20, x0
00000000000065b0	adr	x8, #0x7c293
00000000000065b4	nop
00000000000065b8	ldarb	w8, [x8]
00000000000065bc	tbz	w8, #0x0, 0x65c4
00000000000065c0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000065c4	ldr	x0, [x20, #0x8]
00000000000065c8	str	x0, [x19]
00000000000065cc	ldp	x29, x30, [sp, #0x10]
00000000000065d0	ldp	x20, x19, [sp], #0x20
00000000000065d4	ret
_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}:
00000000000065d8	stp	x20, x19, [sp, #-0x20]!
00000000000065dc	stp	x29, x30, [sp, #0x10]
00000000000065e0	add	x29, sp, #0x10
00000000000065e4	mov	x19, x1
00000000000065e8	mov	x20, x0
00000000000065ec	adr	x8, #0x7c257
00000000000065f0	nop
00000000000065f4	ldarb	w8, [x8]
00000000000065f8	tbz	w8, #0x0, 0x6600
00000000000065fc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000006600	mov	x0, x20
0000000000006604	mov	x1, x19
0000000000006608	ldp	x29, x30, [sp, #0x10]
000000000000660c	ldp	x20, x19, [sp], #0x20
0000000000006610	b	"_kfun:kotlin.Throwable#<init>(kotlin.String?;kotlin.Throwable?){}"
_kfun:kotlin.Int#$<bridge-NBNB>compareTo(kotlin.Int){}kotlin.Int(kotlin.Any?){}kotlin.Int:
0000000000006614	stp	x20, x19, [sp, #-0x20]!
0000000000006618	stp	x29, x30, [sp, #0x10]
000000000000661c	add	x29, sp, #0x10
0000000000006620	mov	x19, x1
0000000000006624	mov	x20, x0
0000000000006628	adr	x8, #0x7c21b
000000000000662c	nop
0000000000006630	ldarb	w8, [x8]
0000000000006634	tbz	w8, #0x0, 0x663c
0000000000006638	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000663c	ldr	w8, [x20, #0x8]
0000000000006640	ldr	w9, [x19, #0x8]
0000000000006644	cmp	w8, w9
0000000000006648	mov	w8, #-0x1
000000000000664c	cneg	w8, w8, ge
0000000000006650	csel	w0, wzr, w8, eq
0000000000006654	ldp	x29, x30, [sp, #0x10]
0000000000006658	ldp	x20, x19, [sp], #0x20
000000000000665c	ret
_kfun:kotlin.Int#$<bridge-NBN>toByte(){}kotlin.Byte(){}kotlin.Byte:
0000000000006660	stp	x20, x19, [sp, #-0x20]!
0000000000006664	stp	x29, x30, [sp, #0x10]
0000000000006668	add	x29, sp, #0x10
000000000000666c	mov	x19, x0
0000000000006670	adr	x8, #0x7c1d3
0000000000006674	nop
0000000000006678	ldarb	w8, [x8]
000000000000667c	tbz	w8, #0x0, 0x6684
0000000000006680	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000006684	ldrsb	w0, [x19, #0x8]
0000000000006688	ldp	x29, x30, [sp, #0x10]
000000000000668c	ldp	x20, x19, [sp], #0x20
0000000000006690	ret
_kfun:kotlin.Int#$<bridge-NBN>toChar(){}kotlin.Char(){}kotlin.Char:
0000000000006694	stp	x20, x19, [sp, #-0x20]!
0000000000006698	stp	x29, x30, [sp, #0x10]
000000000000669c	add	x29, sp, #0x10
00000000000066a0	mov	x19, x0
00000000000066a4	adr	x8, #0x7c19f
00000000000066a8	nop
00000000000066ac	ldarb	w8, [x8]
00000000000066b0	tbz	w8, #0x0, 0x66b8
00000000000066b4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000066b8	ldrh	w0, [x19, #0x8]
00000000000066bc	ldp	x29, x30, [sp, #0x10]
00000000000066c0	ldp	x20, x19, [sp], #0x20
00000000000066c4	ret
_kfun:kotlin.Int#$<bridge-NBN>toShort(){}kotlin.Short(){}kotlin.Short:
00000000000066c8	stp	x20, x19, [sp, #-0x20]!
00000000000066cc	stp	x29, x30, [sp, #0x10]
00000000000066d0	add	x29, sp, #0x10
00000000000066d4	mov	x19, x0
00000000000066d8	adr	x8, #0x7c16b
00000000000066dc	nop
00000000000066e0	ldarb	w8, [x8]
00000000000066e4	tbz	w8, #0x0, 0x66ec
00000000000066e8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000066ec	ldrsh	w0, [x19, #0x8]
00000000000066f0	ldp	x29, x30, [sp, #0x10]
00000000000066f4	ldp	x20, x19, [sp], #0x20
00000000000066f8	ret
_kfun:kotlin.Int#$<bridge-NBN>toInt(){}kotlin.Int(){}kotlin.Int:
00000000000066fc	stp	x20, x19, [sp, #-0x20]!
0000000000006700	stp	x29, x30, [sp, #0x10]
0000000000006704	add	x29, sp, #0x10
0000000000006708	mov	x19, x0
000000000000670c	adr	x8, #0x7c137
0000000000006710	nop
0000000000006714	ldarb	w8, [x8]
0000000000006718	tbz	w8, #0x0, 0x6720
000000000000671c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000006720	ldr	w0, [x19, #0x8]
0000000000006724	ldp	x29, x30, [sp, #0x10]
0000000000006728	ldp	x20, x19, [sp], #0x20
000000000000672c	ret
_kfun:kotlin.Int#$<bridge-NBN>toLong(){}kotlin.Long(){}kotlin.Long:
0000000000006730	stp	x20, x19, [sp, #-0x20]!
0000000000006734	stp	x29, x30, [sp, #0x10]
0000000000006738	add	x29, sp, #0x10
000000000000673c	mov	x19, x0
0000000000006740	adr	x8, #0x7c103
0000000000006744	nop
0000000000006748	ldarb	w8, [x8]
000000000000674c	tbz	w8, #0x0, 0x6754
0000000000006750	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000006754	ldrsw	x0, [x19, #0x8]
0000000000006758	ldp	x29, x30, [sp, #0x10]
000000000000675c	ldp	x20, x19, [sp], #0x20
0000000000006760	ret
_kfun:kotlin.Int#$<bridge-NBN>toFloat(){}kotlin.Float(){}kotlin.Float:
0000000000006764	stp	x20, x19, [sp, #-0x20]!
0000000000006768	stp	x29, x30, [sp, #0x10]
000000000000676c	add	x29, sp, #0x10
0000000000006770	mov	x19, x0
0000000000006774	adr	x8, #0x7c0cf
0000000000006778	nop
000000000000677c	ldarb	w8, [x8]
0000000000006780	tbz	w8, #0x0, 0x6788
0000000000006784	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000006788	ldr	s0, [x19, #0x8]
000000000000678c	scvtf	s0, s0
0000000000006790	ldp	x29, x30, [sp, #0x10]
0000000000006794	ldp	x20, x19, [sp], #0x20
0000000000006798	ret
_kfun:kotlin.Int#$<bridge-NBN>toDouble(){}kotlin.Double(){}kotlin.Double:
000000000000679c	stp	x20, x19, [sp, #-0x20]!
00000000000067a0	stp	x29, x30, [sp, #0x10]
00000000000067a4	add	x29, sp, #0x10
00000000000067a8	mov	x19, x0
00000000000067ac	adr	x8, #0x7c097
00000000000067b0	nop
00000000000067b4	ldarb	w8, [x8]
00000000000067b8	tbz	w8, #0x0, 0x67c0
00000000000067bc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000067c0	ldr	s0, [x19, #0x8]
00000000000067c4	sshll.2d	v0, v0, #0x0
00000000000067c8	scvtf	d0, d0
00000000000067cc	ldp	x29, x30, [sp, #0x10]
00000000000067d0	ldp	x20, x19, [sp], #0x20
00000000000067d4	ret
_kfun:kotlin.Int#$<bridge-NBNN>equals(kotlin.Any?){}kotlin.Boolean(kotlin.Any?){}kotlin.Boolean:
00000000000067d8	stp	x20, x19, [sp, #-0x20]!
00000000000067dc	stp	x29, x30, [sp, #0x10]
00000000000067e0	add	x29, sp, #0x10
00000000000067e4	mov	x19, x1
00000000000067e8	mov	x20, x0
00000000000067ec	adr	x8, #0x7c057
00000000000067f0	nop
00000000000067f4	ldarb	w8, [x8]
00000000000067f8	tbz	w8, #0x0, 0x6800
00000000000067fc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000006800	cbz	x19, 0x6838
0000000000006804	ldr	w8, [x20, #0x8]
0000000000006808	ldr	x9, [x19]
000000000000680c	and	x9, x9, #0xfffffffffffffffc
0000000000006810	ldr	x9, [x9]
0000000000006814	ldr	w9, [x9, #0x5c]
0000000000006818	cmp	w9, #0x69
000000000000681c	b.ne	0x6838
0000000000006820	ldr	w9, [x19, #0x8]
0000000000006824	cmp	w9, w8
0000000000006828	cset	w0, eq
000000000000682c	ldp	x29, x30, [sp, #0x10]
0000000000006830	ldp	x20, x19, [sp], #0x20
0000000000006834	ret
0000000000006838	mov	w0, #0x0
000000000000683c	ldp	x29, x30, [sp, #0x10]
0000000000006840	ldp	x20, x19, [sp], #0x20
0000000000006844	ret
_kfun:kotlin.Int#$<bridge-NBN>toString(){}kotlin.String(){}kotlin.String:
0000000000006848	sub	sp, sp, #0x40
000000000000684c	stp	x20, x19, [sp, #0x20]
0000000000006850	stp	x29, x30, [sp, #0x30]
0000000000006854	add	x29, sp, #0x30
0000000000006858	mov	x19, x1
000000000000685c	mov	x20, x0
0000000000006860	adr	x8, #0x7bfe3
0000000000006864	nop
0000000000006868	ldarb	w8, [x8]
000000000000686c	tbz	w8, #0x0, 0x6874
0000000000006870	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000006874	ldr	w8, [x20, #0x8]
0000000000006878	str	x8, [sp]
000000000000687c	adr	x2, #0x4c424 ; literal pool for: "%d"
0000000000006880	nop
0000000000006884	add	x0, sp, #0x10
0000000000006888	mov	w1, #0x10
000000000000688c	bl	__ZN5konan8snprintfEPcmPKcz
0000000000006890	add	x0, sp, #0x10
0000000000006894	mov	x1, x19
0000000000006898	bl	_CreateStringFromCString
000000000000689c	str	x0, [x19]
00000000000068a0	ldp	x29, x30, [sp, #0x30]
00000000000068a4	ldp	x20, x19, [sp, #0x20]
00000000000068a8	add	sp, sp, #0x40
00000000000068ac	ret
_kfun:kotlin.Int#$<bridge-NBN>hashCode(){}kotlin.Int(){}kotlin.Int:
00000000000068b0	stp	x20, x19, [sp, #-0x20]!
00000000000068b4	stp	x29, x30, [sp, #0x10]
00000000000068b8	add	x29, sp, #0x10
00000000000068bc	mov	x19, x0
00000000000068c0	adr	x8, #0x7bf83
00000000000068c4	nop
00000000000068c8	ldarb	w8, [x8]
00000000000068cc	tbz	w8, #0x0, 0x68d4
00000000000068d0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000068d4	ldr	w0, [x19, #0x8]
00000000000068d8	ldp	x29, x30, [sp, #0x10]
00000000000068dc	ldp	x20, x19, [sp], #0x20
00000000000068e0	ret
_kfun:kotlin.Double#$<bridge-NBNB>compareTo(kotlin.Double){}kotlin.Int(kotlin.Any?){}kotlin.Int:
00000000000068e4	stp	x20, x19, [sp, #-0x20]!
00000000000068e8	stp	x29, x30, [sp, #0x10]
00000000000068ec	add	x29, sp, #0x10
00000000000068f0	mov	x19, x1
00000000000068f4	mov	x20, x0
00000000000068f8	adr	x8, #0x7bf4b
00000000000068fc	nop
0000000000006900	ldarb	w8, [x8]
0000000000006904	tbz	w8, #0x0, 0x690c
0000000000006908	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000690c	ldr	d1, [x20, #0x8]
0000000000006910	ldr	d0, [x19, #0x8]
0000000000006914	fcmp	d1, d0
0000000000006918	b.le	0x692c
000000000000691c	mov	w0, #0x1
0000000000006920	ldp	x29, x30, [sp, #0x10]
0000000000006924	ldp	x20, x19, [sp], #0x20
0000000000006928	ret
000000000000692c	mov	w0, #-0x1
0000000000006930	b.mi	0x6920
0000000000006934	fmov	x8, d1
0000000000006938	fcmp	d1, d1
000000000000693c	mov	x9, #0x7ff8000000000000
0000000000006940	csel	x8, x9, x8, vs
0000000000006944	fmov	x10, d0
0000000000006948	fcmp	d0, d0
000000000000694c	csel	x9, x9, x10, vs
0000000000006950	cmp	x8, x9
0000000000006954	cneg	w8, w0, ge
0000000000006958	csel	w0, wzr, w8, eq
000000000000695c	ldp	x29, x30, [sp, #0x10]
0000000000006960	ldp	x20, x19, [sp], #0x20
0000000000006964	ret
_kfun:kotlin.Double#$<bridge-NBN>toByte(){}kotlin.Byte(){}kotlin.Byte:
0000000000006968	stp	x20, x19, [sp, #-0x20]!
000000000000696c	stp	x29, x30, [sp, #0x10]
0000000000006970	add	x29, sp, #0x10
0000000000006974	mov	x19, x0
0000000000006978	adr	x8, #0x7becb
000000000000697c	nop
0000000000006980	ldarb	w8, [x8]
0000000000006984	tbz	w8, #0x0, 0x698c
0000000000006988	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000698c	ldr	d0, [x19, #0x8]
0000000000006990	fcmp	d0, d0
0000000000006994	b.vs	0x69e4
0000000000006998	mov	x8, #0xffffffc00000
000000000000699c	movk	x8, #0x41df, lsl #48
00000000000069a0	fmov	d1, x8
00000000000069a4	fcmp	d0, d1
00000000000069a8	b.ge	0x69d0
00000000000069ac	mov	x8, #-0x3e20000000000000
00000000000069b0	fmov	d1, x8
00000000000069b4	fcmp	d0, d1
00000000000069b8	b.ls	0x69e4
00000000000069bc	fcvtzs	w8, d0
00000000000069c0	sxtb	w0, w8
00000000000069c4	ldp	x29, x30, [sp, #0x10]
00000000000069c8	ldp	x20, x19, [sp], #0x20
00000000000069cc	ret
00000000000069d0	mov	w8, #0xff
00000000000069d4	sxtb	w0, w8
00000000000069d8	ldp	x29, x30, [sp, #0x10]
00000000000069dc	ldp	x20, x19, [sp], #0x20
00000000000069e0	ret
00000000000069e4	mov	w8, #0x0
00000000000069e8	sxtb	w0, w8
00000000000069ec	ldp	x29, x30, [sp, #0x10]
00000000000069f0	ldp	x20, x19, [sp], #0x20
00000000000069f4	ret
_kfun:kotlin.Double#$<bridge-NBN>toChar(){}kotlin.Char(){}kotlin.Char:
00000000000069f8	stp	x20, x19, [sp, #-0x20]!
00000000000069fc	stp	x29, x30, [sp, #0x10]
0000000000006a00	add	x29, sp, #0x10
0000000000006a04	mov	x19, x0
0000000000006a08	adr	x8, #0x7be3b
0000000000006a0c	nop
0000000000006a10	ldarb	w8, [x8]
0000000000006a14	tbz	w8, #0x0, 0x6a1c
0000000000006a18	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000006a1c	ldr	d0, [x19, #0x8]
0000000000006a20	fcmp	d0, d0
0000000000006a24	b.vs	0x6a74
0000000000006a28	mov	x8, #0xffffffc00000
0000000000006a2c	movk	x8, #0x41df, lsl #48
0000000000006a30	fmov	d1, x8
0000000000006a34	fcmp	d0, d1
0000000000006a38	b.ge	0x6a60
0000000000006a3c	mov	x8, #-0x3e20000000000000
0000000000006a40	fmov	d1, x8
0000000000006a44	fcmp	d0, d1
0000000000006a48	b.ls	0x6a74
0000000000006a4c	fcvtzs	w8, d0
0000000000006a50	and	w0, w8, #0xffff
0000000000006a54	ldp	x29, x30, [sp, #0x10]
0000000000006a58	ldp	x20, x19, [sp], #0x20
0000000000006a5c	ret
0000000000006a60	mov	w8, #0xffff
0000000000006a64	and	w0, w8, #0xffff
0000000000006a68	ldp	x29, x30, [sp, #0x10]
0000000000006a6c	ldp	x20, x19, [sp], #0x20
0000000000006a70	ret
0000000000006a74	mov	w8, #0x0
0000000000006a78	and	w0, w8, #0xffff
0000000000006a7c	ldp	x29, x30, [sp, #0x10]
0000000000006a80	ldp	x20, x19, [sp], #0x20
0000000000006a84	ret
_kfun:kotlin.Double#$<bridge-NBN>toShort(){}kotlin.Short(){}kotlin.Short:
0000000000006a88	stp	x20, x19, [sp, #-0x20]!
0000000000006a8c	stp	x29, x30, [sp, #0x10]
0000000000006a90	add	x29, sp, #0x10
0000000000006a94	mov	x19, x0
0000000000006a98	adr	x8, #0x7bdab
0000000000006a9c	nop
0000000000006aa0	ldarb	w8, [x8]
0000000000006aa4	tbz	w8, #0x0, 0x6aac
0000000000006aa8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000006aac	ldr	d0, [x19, #0x8]
0000000000006ab0	fcmp	d0, d0
0000000000006ab4	b.vs	0x6b04
0000000000006ab8	mov	x8, #0xffffffc00000
0000000000006abc	movk	x8, #0x41df, lsl #48
0000000000006ac0	fmov	d1, x8
0000000000006ac4	fcmp	d0, d1
0000000000006ac8	b.ge	0x6af0
0000000000006acc	mov	x8, #-0x3e20000000000000
0000000000006ad0	fmov	d1, x8
0000000000006ad4	fcmp	d0, d1
0000000000006ad8	b.ls	0x6b04
0000000000006adc	fcvtzs	w8, d0
0000000000006ae0	sxth	w0, w8
0000000000006ae4	ldp	x29, x30, [sp, #0x10]
0000000000006ae8	ldp	x20, x19, [sp], #0x20
0000000000006aec	ret
0000000000006af0	mov	w8, #0xffff
0000000000006af4	sxth	w0, w8
0000000000006af8	ldp	x29, x30, [sp, #0x10]
0000000000006afc	ldp	x20, x19, [sp], #0x20
0000000000006b00	ret
0000000000006b04	mov	w8, #0x0
0000000000006b08	sxth	w0, w8
0000000000006b0c	ldp	x29, x30, [sp, #0x10]
0000000000006b10	ldp	x20, x19, [sp], #0x20
0000000000006b14	ret
_kfun:kotlin.Double#$<bridge-NBN>toInt(){}kotlin.Int(){}kotlin.Int:
0000000000006b18	stp	x20, x19, [sp, #-0x20]!
0000000000006b1c	stp	x29, x30, [sp, #0x10]
0000000000006b20	add	x29, sp, #0x10
0000000000006b24	mov	x19, x0
0000000000006b28	adr	x8, #0x7bd1b
0000000000006b2c	nop
0000000000006b30	ldarb	w8, [x8]
0000000000006b34	tbz	w8, #0x0, 0x6b3c
0000000000006b38	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000006b3c	ldr	d0, [x19, #0x8]
0000000000006b40	fcmp	d0, d0
0000000000006b44	b.vs	0x6b9c
0000000000006b48	mov	x8, #0xffffffc00000
0000000000006b4c	movk	x8, #0x41df, lsl #48
0000000000006b50	fmov	d1, x8
0000000000006b54	fcmp	d0, d1
0000000000006b58	b.ge	0x6b7c
0000000000006b5c	mov	x8, #-0x3e20000000000000
0000000000006b60	fmov	d1, x8
0000000000006b64	fcmp	d0, d1
0000000000006b68	b.ls	0x6b8c
0000000000006b6c	fcvtzs	w0, d0
0000000000006b70	ldp	x29, x30, [sp, #0x10]
0000000000006b74	ldp	x20, x19, [sp], #0x20
0000000000006b78	ret
0000000000006b7c	mov	w0, #0x7fffffff
0000000000006b80	ldp	x29, x30, [sp, #0x10]
0000000000006b84	ldp	x20, x19, [sp], #0x20
0000000000006b88	ret
0000000000006b8c	mov	w0, #-0x80000000
0000000000006b90	ldp	x29, x30, [sp, #0x10]
0000000000006b94	ldp	x20, x19, [sp], #0x20
0000000000006b98	ret
0000000000006b9c	mov	w0, #0x0
0000000000006ba0	ldp	x29, x30, [sp, #0x10]
0000000000006ba4	ldp	x20, x19, [sp], #0x20
0000000000006ba8	ret
_kfun:kotlin.Double#$<bridge-NBN>toLong(){}kotlin.Long(){}kotlin.Long:
0000000000006bac	stp	x20, x19, [sp, #-0x20]!
0000000000006bb0	stp	x29, x30, [sp, #0x10]
0000000000006bb4	add	x29, sp, #0x10
0000000000006bb8	mov	x19, x0
0000000000006bbc	adr	x8, #0x7bc87
0000000000006bc0	nop
0000000000006bc4	ldarb	w8, [x8]
0000000000006bc8	tbz	w8, #0x0, 0x6bd0
0000000000006bcc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000006bd0	ldr	d0, [x19, #0x8]
0000000000006bd4	fcmp	d0, d0
0000000000006bd8	b.vs	0x6c2c
0000000000006bdc	mov	x8, #0x43e0000000000000
0000000000006be0	fmov	d1, x8
0000000000006be4	fcmp	d0, d1
0000000000006be8	b.ge	0x6c0c
0000000000006bec	mov	x8, #-0x3c20000000000000
0000000000006bf0	fmov	d1, x8
0000000000006bf4	fcmp	d0, d1
0000000000006bf8	b.ls	0x6c1c
0000000000006bfc	fcvtzs	x0, d0
0000000000006c00	ldp	x29, x30, [sp, #0x10]
0000000000006c04	ldp	x20, x19, [sp], #0x20
0000000000006c08	ret
0000000000006c0c	mov	x0, #0x7fffffffffffffff
0000000000006c10	ldp	x29, x30, [sp, #0x10]
0000000000006c14	ldp	x20, x19, [sp], #0x20
0000000000006c18	ret
0000000000006c1c	mov	x0, #-0x8000000000000000
0000000000006c20	ldp	x29, x30, [sp, #0x10]
0000000000006c24	ldp	x20, x19, [sp], #0x20
0000000000006c28	ret
0000000000006c2c	mov	x0, #0x0
0000000000006c30	ldp	x29, x30, [sp, #0x10]
0000000000006c34	ldp	x20, x19, [sp], #0x20
0000000000006c38	ret
_kfun:kotlin.Double#$<bridge-NBN>toFloat(){}kotlin.Float(){}kotlin.Float:
0000000000006c3c	stp	x20, x19, [sp, #-0x20]!
0000000000006c40	stp	x29, x30, [sp, #0x10]
0000000000006c44	add	x29, sp, #0x10
0000000000006c48	mov	x19, x0
0000000000006c4c	adr	x8, #0x7bbf7
0000000000006c50	nop
0000000000006c54	ldarb	w8, [x8]
0000000000006c58	tbz	w8, #0x0, 0x6c60
0000000000006c5c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000006c60	ldr	d0, [x19, #0x8]
0000000000006c64	fcvt	s0, d0
0000000000006c68	ldp	x29, x30, [sp, #0x10]
0000000000006c6c	ldp	x20, x19, [sp], #0x20
0000000000006c70	ret
_kfun:kotlin.Double#$<bridge-NBN>toDouble(){}kotlin.Double(){}kotlin.Double:
0000000000006c74	stp	x20, x19, [sp, #-0x20]!
0000000000006c78	stp	x29, x30, [sp, #0x10]
0000000000006c7c	add	x29, sp, #0x10
0000000000006c80	mov	x19, x0
0000000000006c84	adr	x8, #0x7bbbf
0000000000006c88	nop
0000000000006c8c	ldarb	w8, [x8]
0000000000006c90	tbz	w8, #0x0, 0x6c98
0000000000006c94	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000006c98	ldr	d0, [x19, #0x8]
0000000000006c9c	ldp	x29, x30, [sp, #0x10]
0000000000006ca0	ldp	x20, x19, [sp], #0x20
0000000000006ca4	ret
_kfun:kotlin.Double#$<bridge-NBNN>equals(kotlin.Any?){}kotlin.Boolean(kotlin.Any?){}kotlin.Boolean:
0000000000006ca8	stp	x20, x19, [sp, #-0x20]!
0000000000006cac	stp	x29, x30, [sp, #0x10]
0000000000006cb0	add	x29, sp, #0x10
0000000000006cb4	mov	x19, x1
0000000000006cb8	mov	x20, x0
0000000000006cbc	adr	x8, #0x7bb87
0000000000006cc0	nop
0000000000006cc4	ldarb	w8, [x8]
0000000000006cc8	tbz	w8, #0x0, 0x6cd0
0000000000006ccc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000006cd0	cbz	x19, 0x6d24
0000000000006cd4	ldr	d0, [x20, #0x8]
0000000000006cd8	ldr	x8, [x19]
0000000000006cdc	and	x8, x8, #0xfffffffffffffffc
0000000000006ce0	ldr	x8, [x8]
0000000000006ce4	ldr	w8, [x8, #0x5c]
0000000000006ce8	cmp	w8, #0x6a
0000000000006cec	b.ne	0x6d24
0000000000006cf0	ldr	d1, [x19, #0x8]
0000000000006cf4	fmov	x8, d0
0000000000006cf8	fcmp	d0, d0
0000000000006cfc	mov	x9, #0x7ff8000000000000
0000000000006d00	csel	x8, x9, x8, vs
0000000000006d04	fcmp	d1, d1
0000000000006d08	fmov	x10, d1
0000000000006d0c	csel	x9, x9, x10, vs
0000000000006d10	cmp	x8, x9
0000000000006d14	cset	w0, eq
0000000000006d18	ldp	x29, x30, [sp, #0x10]
0000000000006d1c	ldp	x20, x19, [sp], #0x20
0000000000006d20	ret
0000000000006d24	mov	w0, #0x0
0000000000006d28	ldp	x29, x30, [sp, #0x10]
0000000000006d2c	ldp	x20, x19, [sp], #0x20
0000000000006d30	ret
_kfun:kotlin.Double#$<bridge-NBN>toString(){}kotlin.String(){}kotlin.String:
0000000000006d34	sub	sp, sp, #0xf0
0000000000006d38	stp	d9, d8, [sp, #0x80]
0000000000006d3c	stp	x28, x27, [sp, #0x90]
0000000000006d40	stp	x26, x25, [sp, #0xa0]
0000000000006d44	stp	x24, x23, [sp, #0xb0]
0000000000006d48	stp	x22, x21, [sp, #0xc0]
0000000000006d4c	stp	x20, x19, [sp, #0xd0]
0000000000006d50	stp	x29, x30, [sp, #0xe0]
0000000000006d54	add	x29, sp, #0xe0
0000000000006d58	mov	x19, x1
0000000000006d5c	mov	x20, x0
0000000000006d60	adr	x26, #0x7bae3
0000000000006d64	nop
0000000000006d68	ldarb	w8, [x26]
0000000000006d6c	tbz	w8, #0x0, 0x6d74
0000000000006d70	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000006d74	ldr	d8, [x20, #0x8]
0000000000006d78	movi.16b	v0, #0x0
0000000000006d7c	stp	q0, q0, [sp, #0x10]
0000000000006d80	adrp	x23, 98 ; 0x68000
0000000000006d84	add	x23, x23, #0xa00
0000000000006d88	ldr	x25, [x23]
0000000000006d8c	mov	x0, x23
0000000000006d90	blr	x25
0000000000006d94	ldr	x8, [x0]
0000000000006d98	ldr	x9, [x8, #0x110]
0000000000006d9c	add	x10, sp, #0x10
0000000000006da0	str	x10, [x8, #0x110]
0000000000006da4	mov	x24, #0x400000000
0000000000006da8	stp	x9, x24, [sp, #0x18]
0000000000006dac	adr	x27, #0x7bb04
0000000000006db0	nop
0000000000006db4	ldar	x8, [x27]
0000000000006db8	cmp	x8, #0x2
0000000000006dbc	b.hs	0x6fac
0000000000006dc0	mov	x0, x23
0000000000006dc4	blr	x25
0000000000006dc8	ldr	x28, [x0]
0000000000006dcc	ldp	x8, x9, [x28, #0x120]
0000000000006dd0	cmp	x8, x9
0000000000006dd4	b.eq	0x6df4
0000000000006dd8	mov	x10, x9
0000000000006ddc	ldr	x11, [x10, #-0x10]!
0000000000006de0	cmp	x11, x27
0000000000006de4	b.eq	0x6eb8
0000000000006de8	mov	x9, x10
0000000000006dec	cmp	x10, x8
0000000000006df0	b.ne	0x6ddc
0000000000006df4	add	x21, x28, #0x120
0000000000006df8	add	x0, x28, #0x138
0000000000006dfc	mov	w9, #0x1
0000000000006e00	ldaxr	w8, [x0]
0000000000006e04	stlxr	w10, w9, [x0]
0000000000006e08	cbnz	w10, 0x6e00
0000000000006e0c	b	0x6e1c
0000000000006e10	mov	w23, #0x1
0000000000006e14	stlxr	w9, x23, [x27]
0000000000006e18	cbz	w9, 0x6e2c
0000000000006e1c	ldaxr	x22, [x27]
0000000000006e20	cbz	x22, 0x6e10
0000000000006e24	mov	w23, #0x0
0000000000006e28	clrex
0000000000006e2c	cmp	x22, #0x1
0000000000006e30	b.eq	0x6e1c
0000000000006e34	cbz	x28, 0x6e60
0000000000006e38	ldaxr	w9, [x0]
0000000000006e3c	stlxr	w10, w8, [x0]
0000000000006e40	cbnz	w10, 0x6e38
0000000000006e44	cbnz	w8, 0x6e60
0000000000006e48	cmp	w9, #0x1
0000000000006e4c	b.ne	0x6e60
0000000000006e50	ldarb	w8, [x26]
0000000000006e54	tbz	w8, #0x0, 0x6e60
0000000000006e58	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000006e5c	movi.16b	v0, #0x0
0000000000006e60	tbz	w23, #0x0, 0x6ea8
0000000000006e64	ldr	x8, [x28, #0x118]
0000000000006e68	add	x0, x8, #0x70
0000000000006e6c	mov	w1, #0x20
0000000000006e70	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000006e74	mov	x22, x0
0000000000006e78	adr	x8, #0x4f3e8
0000000000006e7c	nop
0000000000006e80	str	x8, [x22, #0x10]!
0000000000006e84	stur	xzr, [x22, #-0x8]
0000000000006e88	str	x22, [sp, #0x28]
0000000000006e8c	ldp	x9, x8, [x28, #0x128]
0000000000006e90	cmp	x9, x8
0000000000006e94	b.hs	0x6ec4
0000000000006e98	stp	x27, x22, [x9]
0000000000006e9c	add	x8, x9, #0x10
0000000000006ea0	str	x8, [x28, #0x128]
0000000000006ea4	b	0x6f54
0000000000006ea8	str	x22, [sp, #0x28]
0000000000006eac	adrp	x23, 98 ; 0x68000
0000000000006eb0	add	x23, x23, #0xa00
0000000000006eb4	b	0x6fac
0000000000006eb8	ldur	x8, [x9, #-0x8]
0000000000006ebc	str	x8, [sp, #0x28]
0000000000006ec0	b	0x6fac
0000000000006ec4	str	x21, [sp, #0x8]
0000000000006ec8	ldr	x10, [x21]
0000000000006ecc	sub	x9, x9, x10
0000000000006ed0	asr	x21, x9, #4
0000000000006ed4	add	x9, x21, #0x1
0000000000006ed8	lsr	x11, x9, #60
0000000000006edc	cbnz	x11, 0x71f0
0000000000006ee0	sub	x8, x8, x10
0000000000006ee4	asr	x10, x8, #3
0000000000006ee8	cmp	x10, x9
0000000000006eec	csel	x9, x9, x10, lo
0000000000006ef0	mov	x10, #0x7ffffffffffffff
0000000000006ef4	cmp	x10, x8, asr #4
0000000000006ef8	mov	x8, #0xfffffffffffffff
0000000000006efc	csel	x23, x9, x8, hi
0000000000006f00	mov	x0, x23
0000000000006f04	mov	w1, #0x10
0000000000006f08	bl	0x4db20 ; symbol stub for: _calloc
0000000000006f0c	add	x8, x0, x21, lsl #4
0000000000006f10	add	x20, x0, x23, lsl #4
0000000000006f14	stp	x27, x22, [x8]
0000000000006f18	add	x21, x8, #0x10
0000000000006f1c	ldp	x1, x9, [x28, #0x120]
0000000000006f20	sub	x2, x9, x1
0000000000006f24	sub	x23, x8, x2
0000000000006f28	cmp	x2, #0x1
0000000000006f2c	b.lt	0x6f40
0000000000006f30	mov	x0, x23
0000000000006f34	bl	0x4dbec ; symbol stub for: _memcpy
0000000000006f38	ldr	x8, [sp, #0x8]
0000000000006f3c	ldr	x1, [x8]
0000000000006f40	stp	x23, x21, [x28, #0x120]
0000000000006f44	str	x20, [x28, #0x130]
0000000000006f48	cbz	x1, 0x6f54
0000000000006f4c	mov	x0, x1
0000000000006f50	bl	0x4dba4 ; symbol stub for: _free
0000000000006f54	mov	x0, x22
0000000000006f58	bl	"_kfun:kotlin.native.internal.NumberConverter.Companion#<init>(){}"
0000000000006f5c	adrp	x23, 98 ; 0x68000
0000000000006f60	add	x23, x23, #0xa00
0000000000006f64	mov	w0, #0x1
0000000000006f68	mov	w1, #0x28
0000000000006f6c	bl	0x4db20 ; symbol stub for: _calloc
0000000000006f70	ldr	x8, [x28, #0x18]!
0000000000006f74	sub	x9, x28, #0x8
0000000000006f78	stp	x27, x9, [x0, #0x10]
0000000000006f7c	stp	x8, x28, [x0]
0000000000006f80	str	x0, [x8, #0x8]
0000000000006f84	str	x0, [x28]
0000000000006f88	ldr	x8, [x28, #0x10]
0000000000006f8c	add	x8, x8, #0x1
0000000000006f90	str	x8, [x28, #0x10]
0000000000006f94	str	x0, [x0, #0x20]
0000000000006f98	stlr	x22, [x27]
0000000000006f9c	ldr	x8, [x28, #0x110]
0000000000006fa0	sub	x8, x8, #0x10
0000000000006fa4	str	x8, [x28, #0x110]
0000000000006fa8	movi.16b	v0, #0x0
0000000000006fac	stp	q0, q0, [sp, #0x30]
0000000000006fb0	add	x9, sp, #0x30
0000000000006fb4	add	x8, x9, #0x18
0000000000006fb8	mov	x0, x23
0000000000006fbc	blr	x25
0000000000006fc0	mov	x21, x0
0000000000006fc4	ldr	x10, [x0]
0000000000006fc8	ldr	x11, [x10, #0x110]
0000000000006fcc	str	x9, [x10, #0x110]
0000000000006fd0	stp	x11, x24, [sp, #0x38]
0000000000006fd4	mov	x0, x8
0000000000006fd8	bl	"_kfun:kotlin.native.internal.NumberConverter.Companion.<get-converter>#internal"
0000000000006fdc	movi.16b	v0, #0x0
0000000000006fe0	stp	q0, q0, [sp, #0x50]
0000000000006fe4	str	xzr, [sp, #0x70]
0000000000006fe8	add	x27, sp, #0x50
0000000000006fec	ldr	x8, [x21]
0000000000006ff0	ldr	x9, [x8, #0x110]
0000000000006ff4	str	x27, [x8, #0x110]
0000000000006ff8	mov	x8, #0x500000000
0000000000006ffc	stp	x9, x8, [sp, #0x58]
0000000000007000	adr	x8, #0x5a5e0
0000000000007004	nop
0000000000007008	adr	x9, #0x5a080
000000000000700c	nop
0000000000007010	fmov	x10, d8
0000000000007014	cmp	x10, #0x0
0000000000007018	csel	x21, x9, x8, ge
000000000000701c	ubfx	x28, x10, #52, #11
0000000000007020	and	x20, x10, #0xfffffffffffff
0000000000007024	cmp	w28, #0x7ff
0000000000007028	b.ne	0x703c
000000000000702c	cbz	x20, 0x7064
0000000000007030	adr	x8, #0x5a5f0
0000000000007034	nop
0000000000007038	b	0x718c
000000000000703c	mov	x22, x0
0000000000007040	cbz	w28, 0x7070
0000000000007044	orr	x1, x20, #0x10000000000000
0000000000007048	sub	w2, w28, #0x433
000000000000704c	cmp	w28, #0x3f9
0000000000007050	b.lo	0x7088
0000000000007054	cmp	w28, #0x439
0000000000007058	b.lo	0x709c
000000000000705c	mov	w24, #0x34
0000000000007060	b	0x70b8
0000000000007064	adr	x1, #0x5a59c
0000000000007068	nop
000000000000706c	b	0x717c
0000000000007070	cbz	x20, 0x70c0
0000000000007074	cmp	x20, #0x1
0000000000007078	b.ne	0x70cc
000000000000707c	adr	x1, #0x5a5e4
0000000000007080	nop
0000000000007084	b	0x717c
0000000000007088	mov	w24, #0x34
000000000000708c	cmn	w2, #0x3b
0000000000007090	b.ne	0x70b8
0000000000007094	cbz	x20, 0x70b8
0000000000007098	mov	w2, #-0x3b
000000000000709c	cmp	x20, #0x0
00000000000070a0	cset	w4, eq
00000000000070a4	mov	x0, x22
00000000000070a8	mov	w3, #0x0
00000000000070ac	mov	w5, #0x34
00000000000070b0	bl	"_kfun:kotlin.native.internal.NumberConverter.longDigitGenerator#internal"
00000000000070b4	b	0x7118
00000000000070b8	mov	x20, x1
00000000000070bc	b	0x7100
00000000000070c0	adr	x1, #0x5a580
00000000000070c4	nop
00000000000070c8	b	0x717c
00000000000070cc	mov	w24, #0x34
00000000000070d0	mov	x23, x20
00000000000070d4	b	0x70e0
00000000000070d8	lsl	x23, x23, #1
00000000000070dc	sub	w24, w24, #0x1
00000000000070e0	tbnz	x23, #0x34, 0x70f4
00000000000070e4	ldarb	w8, [x26]
00000000000070e8	tbz	w8, #0x0, 0x70d8
00000000000070ec	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000070f0	b	0x70d8
00000000000070f4	mov	w2, #-0x432
00000000000070f8	adrp	x23, 97 ; 0x68000
00000000000070fc	add	x23, x23, #0xa00
0000000000007100	cmp	w28, #0x0
0000000000007104	cset	w3, eq
0000000000007108	mov	x0, x22
000000000000710c	mov	x1, x20
0000000000007110	mov	x4, x24
0000000000007114	bl	"_kfun:kotlin.native.internal.NumberConverter.bigIntDigitGeneratorInstImpl#internal"
0000000000007118	mov	x8, #0x12d000000000
000000000000711c	movk	x8, #0x4163, lsl #48
0000000000007120	fmov	d0, x8
0000000000007124	fcmp	d8, d0
0000000000007128	mov	x8, #0x12d000000000
000000000000712c	movk	x8, #0xc163, lsl #48
0000000000007130	fmov	d0, x8
0000000000007134	fccmp	d8, d0, #0x0, lt
0000000000007138	b.ls	0x715c
000000000000713c	nop
0000000000007140	ldr	d0, 0x4e540
0000000000007144	fcmp	d8, d0
0000000000007148	b.le	0x716c
000000000000714c	nop
0000000000007150	ldr	d0, 0x4e548
0000000000007154	fcmp	d8, d0
0000000000007158	b.pl	0x716c
000000000000715c	add	x1, x27, #0x18
0000000000007160	mov	x0, x22
0000000000007164	bl	"_kfun:kotlin.native.internal.NumberConverter.freeFormatExponential#internal"
0000000000007168	b	0x7178
000000000000716c	add	x1, x27, #0x20
0000000000007170	mov	x0, x22
0000000000007174	bl	"_kfun:kotlin.native.internal.NumberConverter.freeFormat#internal"
0000000000007178	mov	x1, x0
000000000000717c	mov	x0, x21
0000000000007180	mov	x2, x19
0000000000007184	bl	_Kotlin_String_plusImpl
0000000000007188	mov	x8, x0
000000000000718c	str	x8, [x19]
0000000000007190	mov	x0, x23
0000000000007194	blr	x25
0000000000007198	ldr	x9, [x0]
000000000000719c	ldr	x10, [sp, #0x58]
00000000000071a0	str	x10, [x9, #0x110]
00000000000071a4	str	x8, [x19]
00000000000071a8	ldr	x9, [x0]
00000000000071ac	ldr	x10, [sp, #0x38]
00000000000071b0	str	x10, [x9, #0x110]
00000000000071b4	str	x8, [x19]
00000000000071b8	ldr	x9, [x0]
00000000000071bc	ldr	x10, [sp, #0x18]
00000000000071c0	str	x10, [x9, #0x110]
00000000000071c4	str	x8, [x19]
00000000000071c8	mov	x0, x8
00000000000071cc	ldp	x29, x30, [sp, #0xe0]
00000000000071d0	ldp	x20, x19, [sp, #0xd0]
00000000000071d4	ldp	x22, x21, [sp, #0xc0]
00000000000071d8	ldp	x24, x23, [sp, #0xb0]
00000000000071dc	ldp	x26, x25, [sp, #0xa0]
00000000000071e0	ldp	x28, x27, [sp, #0x90]
00000000000071e4	ldp	d9, d8, [sp, #0x80]
00000000000071e8	add	sp, sp, #0xf0
00000000000071ec	ret
00000000000071f0	ldr	x0, [sp, #0x8]
00000000000071f4	bl	0x4d8ec ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
00000000000071f8	bl	0x4da78 ; symbol stub for: ___cxa_begin_catch
00000000000071fc	str	xzr, [sp, #0x28]
0000000000007200	stlr	xzr, [x27]
0000000000007204	ldr	x8, [x28, #0x128]
0000000000007208	sub	x8, x8, #0x10
000000000000720c	str	x8, [x28, #0x128]
0000000000007210	bl	0x4daa8 ; symbol stub for: ___cxa_rethrow
0000000000007214	brk	#0x1
0000000000007218	mov	x19, x0
000000000000721c	bl	0x4da84 ; symbol stub for: ___cxa_end_catch
0000000000007220	mov	x0, x19
0000000000007224	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
_kfun:kotlin.Double#$<bridge-NBN>hashCode(){}kotlin.Int(){}kotlin.Int:
0000000000007228	stp	x20, x19, [sp, #-0x20]!
000000000000722c	stp	x29, x30, [sp, #0x10]
0000000000007230	add	x29, sp, #0x10
0000000000007234	mov	x19, x0
0000000000007238	adr	x8, #0x7b60b
000000000000723c	nop
0000000000007240	ldarb	w8, [x8]
0000000000007244	tbz	w8, #0x0, 0x724c
0000000000007248	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000724c	ldr	d0, [x19, #0x8]
0000000000007250	fcmp	d0, d0
0000000000007254	fmov	x8, d0
0000000000007258	mov	x9, #0x7ff8000000000000
000000000000725c	csel	x8, x9, x8, vs
0000000000007260	lsr	x9, x8, #32
0000000000007264	eor	w0, w9, w8
0000000000007268	ldp	x29, x30, [sp, #0x10]
000000000000726c	ldp	x20, x19, [sp], #0x20
0000000000007270	ret
_kfun:kotlin.Long#$<bridge-NBNB>compareTo(kotlin.Long){}kotlin.Int(kotlin.Any?){}kotlin.Int:
0000000000007274	stp	x20, x19, [sp, #-0x20]!
0000000000007278	stp	x29, x30, [sp, #0x10]
000000000000727c	add	x29, sp, #0x10
0000000000007280	mov	x19, x1
0000000000007284	mov	x20, x0
0000000000007288	adr	x8, #0x7b5bb
000000000000728c	nop
0000000000007290	ldarb	w8, [x8]
0000000000007294	tbz	w8, #0x0, 0x729c
0000000000007298	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000729c	ldr	x8, [x20, #0x8]
00000000000072a0	ldr	x9, [x19, #0x8]
00000000000072a4	cmp	x8, x9
00000000000072a8	mov	w8, #-0x1
00000000000072ac	cneg	w8, w8, ge
00000000000072b0	csel	w0, wzr, w8, eq
00000000000072b4	ldp	x29, x30, [sp, #0x10]
00000000000072b8	ldp	x20, x19, [sp], #0x20
00000000000072bc	ret
_kfun:kotlin.Long#$<bridge-NBN>toByte(){}kotlin.Byte(){}kotlin.Byte:
00000000000072c0	stp	x20, x19, [sp, #-0x20]!
00000000000072c4	stp	x29, x30, [sp, #0x10]
00000000000072c8	add	x29, sp, #0x10
00000000000072cc	mov	x19, x0
00000000000072d0	adr	x8, #0x7b573
00000000000072d4	nop
00000000000072d8	ldarb	w8, [x8]
00000000000072dc	tbz	w8, #0x0, 0x72e4
00000000000072e0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000072e4	ldrsb	w0, [x19, #0x8]
00000000000072e8	ldp	x29, x30, [sp, #0x10]
00000000000072ec	ldp	x20, x19, [sp], #0x20
00000000000072f0	ret
_kfun:kotlin.Long#$<bridge-NBN>toChar(){}kotlin.Char(){}kotlin.Char:
00000000000072f4	stp	x20, x19, [sp, #-0x20]!
00000000000072f8	stp	x29, x30, [sp, #0x10]
00000000000072fc	add	x29, sp, #0x10
0000000000007300	mov	x19, x0
0000000000007304	adr	x8, #0x7b53f
0000000000007308	nop
000000000000730c	ldarb	w8, [x8]
0000000000007310	tbz	w8, #0x0, 0x7318
0000000000007314	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000007318	ldrh	w0, [x19, #0x8]
000000000000731c	ldp	x29, x30, [sp, #0x10]
0000000000007320	ldp	x20, x19, [sp], #0x20
0000000000007324	ret
_kfun:kotlin.Long#$<bridge-NBN>toShort(){}kotlin.Short(){}kotlin.Short:
0000000000007328	stp	x20, x19, [sp, #-0x20]!
000000000000732c	stp	x29, x30, [sp, #0x10]
0000000000007330	add	x29, sp, #0x10
0000000000007334	mov	x19, x0
0000000000007338	adr	x8, #0x7b50b
000000000000733c	nop
0000000000007340	ldarb	w8, [x8]
0000000000007344	tbz	w8, #0x0, 0x734c
0000000000007348	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000734c	ldrsh	w0, [x19, #0x8]
0000000000007350	ldp	x29, x30, [sp, #0x10]
0000000000007354	ldp	x20, x19, [sp], #0x20
0000000000007358	ret
_kfun:kotlin.Long#$<bridge-NBN>toInt(){}kotlin.Int(){}kotlin.Int:
000000000000735c	stp	x20, x19, [sp, #-0x20]!
0000000000007360	stp	x29, x30, [sp, #0x10]
0000000000007364	add	x29, sp, #0x10
0000000000007368	mov	x19, x0
000000000000736c	adr	x8, #0x7b4d7
0000000000007370	nop
0000000000007374	ldarb	w8, [x8]
0000000000007378	tbz	w8, #0x0, 0x7380
000000000000737c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000007380	ldr	w0, [x19, #0x8]
0000000000007384	ldp	x29, x30, [sp, #0x10]
0000000000007388	ldp	x20, x19, [sp], #0x20
000000000000738c	ret
_kfun:kotlin.Long#$<bridge-NBN>toLong(){}kotlin.Long(){}kotlin.Long:
0000000000007390	stp	x20, x19, [sp, #-0x20]!
0000000000007394	stp	x29, x30, [sp, #0x10]
0000000000007398	add	x29, sp, #0x10
000000000000739c	mov	x19, x0
00000000000073a0	adr	x8, #0x7b4a3
00000000000073a4	nop
00000000000073a8	ldarb	w8, [x8]
00000000000073ac	tbz	w8, #0x0, 0x73b4
00000000000073b0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000073b4	ldr	x0, [x19, #0x8]
00000000000073b8	ldp	x29, x30, [sp, #0x10]
00000000000073bc	ldp	x20, x19, [sp], #0x20
00000000000073c0	ret
_kfun:kotlin.Long#$<bridge-NBN>toFloat(){}kotlin.Float(){}kotlin.Float:
00000000000073c4	stp	x20, x19, [sp, #-0x20]!
00000000000073c8	stp	x29, x30, [sp, #0x10]
00000000000073cc	add	x29, sp, #0x10
00000000000073d0	mov	x19, x0
00000000000073d4	adr	x8, #0x7b46f
00000000000073d8	nop
00000000000073dc	ldarb	w8, [x8]
00000000000073e0	tbz	w8, #0x0, 0x73e8
00000000000073e4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000073e8	ldr	x8, [x19, #0x8]
00000000000073ec	scvtf	s0, x8
00000000000073f0	ldp	x29, x30, [sp, #0x10]
00000000000073f4	ldp	x20, x19, [sp], #0x20
00000000000073f8	ret
_kfun:kotlin.Long#$<bridge-NBN>toDouble(){}kotlin.Double(){}kotlin.Double:
00000000000073fc	stp	x20, x19, [sp, #-0x20]!
0000000000007400	stp	x29, x30, [sp, #0x10]
0000000000007404	add	x29, sp, #0x10
0000000000007408	mov	x19, x0
000000000000740c	adr	x8, #0x7b437
0000000000007410	nop
0000000000007414	ldarb	w8, [x8]
0000000000007418	tbz	w8, #0x0, 0x7420
000000000000741c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000007420	ldr	d0, [x19, #0x8]
0000000000007424	scvtf	d0, d0
0000000000007428	ldp	x29, x30, [sp, #0x10]
000000000000742c	ldp	x20, x19, [sp], #0x20
0000000000007430	ret
_kfun:kotlin.Long#$<bridge-NBNN>equals(kotlin.Any?){}kotlin.Boolean(kotlin.Any?){}kotlin.Boolean:
0000000000007434	stp	x20, x19, [sp, #-0x20]!
0000000000007438	stp	x29, x30, [sp, #0x10]
000000000000743c	add	x29, sp, #0x10
0000000000007440	mov	x19, x1
0000000000007444	mov	x20, x0
0000000000007448	adr	x8, #0x7b3fb
000000000000744c	nop
0000000000007450	ldarb	w8, [x8]
0000000000007454	tbz	w8, #0x0, 0x745c
0000000000007458	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000745c	cbz	x19, 0x7494
0000000000007460	ldr	x8, [x20, #0x8]
0000000000007464	ldr	x9, [x19]
0000000000007468	and	x9, x9, #0xfffffffffffffffc
000000000000746c	ldr	x9, [x9]
0000000000007470	ldr	w9, [x9, #0x5c]
0000000000007474	cmp	w9, #0x6b
0000000000007478	b.ne	0x7494
000000000000747c	ldr	x9, [x19, #0x8]
0000000000007480	cmp	x9, x8
0000000000007484	cset	w0, eq
0000000000007488	ldp	x29, x30, [sp, #0x10]
000000000000748c	ldp	x20, x19, [sp], #0x20
0000000000007490	ret
0000000000007494	mov	w0, #0x0
0000000000007498	ldp	x29, x30, [sp, #0x10]
000000000000749c	ldp	x20, x19, [sp], #0x20
00000000000074a0	ret
_kfun:kotlin.Long#$<bridge-NBN>toString(){}kotlin.String(){}kotlin.String:
00000000000074a4	sub	sp, sp, #0x50
00000000000074a8	stp	x20, x19, [sp, #0x30]
00000000000074ac	stp	x29, x30, [sp, #0x40]
00000000000074b0	add	x29, sp, #0x40
00000000000074b4	mov	x19, x1
00000000000074b8	mov	x20, x0
00000000000074bc	adr	x8, #0x7b387
00000000000074c0	nop
00000000000074c4	ldarb	w8, [x8]
00000000000074c8	tbz	w8, #0x0, 0x74d0
00000000000074cc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000074d0	ldr	x8, [x20, #0x8]
00000000000074d4	str	x8, [sp]
00000000000074d8	adr	x2, #0x4b7c3 ; literal pool for: "%lld"
00000000000074dc	nop
00000000000074e0	add	x0, sp, #0x10
00000000000074e4	mov	w1, #0x20
00000000000074e8	bl	__ZN5konan8snprintfEPcmPKcz
00000000000074ec	add	x0, sp, #0x10
00000000000074f0	mov	x1, x19
00000000000074f4	bl	_CreateStringFromCString
00000000000074f8	str	x0, [x19]
00000000000074fc	ldp	x29, x30, [sp, #0x40]
0000000000007500	ldp	x20, x19, [sp, #0x30]
0000000000007504	add	sp, sp, #0x50
0000000000007508	ret
_kfun:kotlin.Long#$<bridge-NBN>hashCode(){}kotlin.Int(){}kotlin.Int:
000000000000750c	stp	x20, x19, [sp, #-0x20]!
0000000000007510	stp	x29, x30, [sp, #0x10]
0000000000007514	add	x29, sp, #0x10
0000000000007518	mov	x19, x0
000000000000751c	adr	x8, #0x7b327
0000000000007520	nop
0000000000007524	ldarb	w8, [x8]
0000000000007528	tbz	w8, #0x0, 0x7530
000000000000752c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000007530	ldp	w8, w9, [x19, #0x8]
0000000000007534	eor	w0, w9, w8
0000000000007538	ldp	x29, x30, [sp, #0x10]
000000000000753c	ldp	x20, x19, [sp], #0x20
0000000000007540	ret
_kfun:kotlin.Byte#$<bridge-NBNB>compareTo(kotlin.Byte){}kotlin.Int(kotlin.Any?){}kotlin.Int:
0000000000007544	stp	x20, x19, [sp, #-0x20]!
0000000000007548	stp	x29, x30, [sp, #0x10]
000000000000754c	add	x29, sp, #0x10
0000000000007550	mov	x19, x1
0000000000007554	mov	x20, x0
0000000000007558	adr	x8, #0x7b2eb
000000000000755c	nop
0000000000007560	ldarb	w8, [x8]
0000000000007564	tbz	w8, #0x0, 0x756c
0000000000007568	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000756c	ldrb	w8, [x20, #0x8]
0000000000007570	sxtb	w9, w8
0000000000007574	ldrb	w10, [x19, #0x8]
0000000000007578	cmp	w9, w10, sxtb
000000000000757c	mov	w9, #-0x1
0000000000007580	cneg	w9, w9, ge
0000000000007584	cmp	w8, w10
0000000000007588	csel	w0, wzr, w9, eq
000000000000758c	ldp	x29, x30, [sp, #0x10]
0000000000007590	ldp	x20, x19, [sp], #0x20
0000000000007594	ret
_kfun:kotlin.Byte#$<bridge-NBN>toByte(){}kotlin.Byte(){}kotlin.Byte:
0000000000007598	stp	x20, x19, [sp, #-0x20]!
000000000000759c	stp	x29, x30, [sp, #0x10]
00000000000075a0	add	x29, sp, #0x10
00000000000075a4	mov	x19, x0
00000000000075a8	adr	x8, #0x7b29b
00000000000075ac	nop
00000000000075b0	ldarb	w8, [x8]
00000000000075b4	tbz	w8, #0x0, 0x75bc
00000000000075b8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000075bc	ldrsb	w0, [x19, #0x8]
00000000000075c0	ldp	x29, x30, [sp, #0x10]
00000000000075c4	ldp	x20, x19, [sp], #0x20
00000000000075c8	ret
_kfun:kotlin.Byte#$<bridge-NBN>toChar(){}kotlin.Char(){}kotlin.Char:
00000000000075cc	stp	x20, x19, [sp, #-0x20]!
00000000000075d0	stp	x29, x30, [sp, #0x10]
00000000000075d4	add	x29, sp, #0x10
00000000000075d8	mov	x19, x0
00000000000075dc	adr	x8, #0x7b267
00000000000075e0	nop
00000000000075e4	ldarb	w8, [x8]
00000000000075e8	tbz	w8, #0x0, 0x75f0
00000000000075ec	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000075f0	ldrsb	w8, [x19, #0x8]
00000000000075f4	and	w0, w8, #0xffff
00000000000075f8	ldp	x29, x30, [sp, #0x10]
00000000000075fc	ldp	x20, x19, [sp], #0x20
0000000000007600	ret
_kfun:kotlin.Byte#$<bridge-NBN>toShort(){}kotlin.Short(){}kotlin.Short:
0000000000007604	stp	x20, x19, [sp, #-0x20]!
0000000000007608	stp	x29, x30, [sp, #0x10]
000000000000760c	add	x29, sp, #0x10
0000000000007610	mov	x19, x0
0000000000007614	adr	x8, #0x7b22f
0000000000007618	nop
000000000000761c	ldarb	w8, [x8]
0000000000007620	tbz	w8, #0x0, 0x7628
0000000000007624	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000007628	ldrsb	w0, [x19, #0x8]
000000000000762c	ldp	x29, x30, [sp, #0x10]
0000000000007630	ldp	x20, x19, [sp], #0x20
0000000000007634	ret
_kfun:kotlin.Byte#$<bridge-NBN>toInt(){}kotlin.Int(){}kotlin.Int:
0000000000007638	stp	x20, x19, [sp, #-0x20]!
000000000000763c	stp	x29, x30, [sp, #0x10]
0000000000007640	add	x29, sp, #0x10
0000000000007644	mov	x19, x0
0000000000007648	adr	x8, #0x7b1fb
000000000000764c	nop
0000000000007650	ldarb	w8, [x8]
0000000000007654	tbz	w8, #0x0, 0x765c
0000000000007658	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000765c	ldrsb	w0, [x19, #0x8]
0000000000007660	ldp	x29, x30, [sp, #0x10]
0000000000007664	ldp	x20, x19, [sp], #0x20
0000000000007668	ret
_kfun:kotlin.Byte#$<bridge-NBN>toLong(){}kotlin.Long(){}kotlin.Long:
000000000000766c	stp	x20, x19, [sp, #-0x20]!
0000000000007670	stp	x29, x30, [sp, #0x10]
0000000000007674	add	x29, sp, #0x10
0000000000007678	mov	x19, x0
000000000000767c	adr	x8, #0x7b1c7
0000000000007680	nop
0000000000007684	ldarb	w8, [x8]
0000000000007688	tbz	w8, #0x0, 0x7690
000000000000768c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000007690	ldrsb	x0, [x19, #0x8]
0000000000007694	ldp	x29, x30, [sp, #0x10]
0000000000007698	ldp	x20, x19, [sp], #0x20
000000000000769c	ret
_kfun:kotlin.Byte#$<bridge-NBN>toFloat(){}kotlin.Float(){}kotlin.Float:
00000000000076a0	stp	x20, x19, [sp, #-0x20]!
00000000000076a4	stp	x29, x30, [sp, #0x10]
00000000000076a8	add	x29, sp, #0x10
00000000000076ac	mov	x19, x0
00000000000076b0	adr	x8, #0x7b193
00000000000076b4	nop
00000000000076b8	ldarb	w8, [x8]
00000000000076bc	tbz	w8, #0x0, 0x76c4
00000000000076c0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000076c4	ldr	b0, [x19, #0x8]
00000000000076c8	sshll.8h	v0, v0, #0x0
00000000000076cc	sshll.4s	v0, v0, #0x0
00000000000076d0	scvtf	s0, s0
00000000000076d4	ldp	x29, x30, [sp, #0x10]
00000000000076d8	ldp	x20, x19, [sp], #0x20
00000000000076dc	ret
_kfun:kotlin.Byte#$<bridge-NBN>toDouble(){}kotlin.Double(){}kotlin.Double:
00000000000076e0	stp	x20, x19, [sp, #-0x20]!
00000000000076e4	stp	x29, x30, [sp, #0x10]
00000000000076e8	add	x29, sp, #0x10
00000000000076ec	mov	x19, x0
00000000000076f0	adr	x8, #0x7b153
00000000000076f4	nop
00000000000076f8	ldarb	w8, [x8]
00000000000076fc	tbz	w8, #0x0, 0x7704
0000000000007700	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000007704	ldrsb	w8, [x19, #0x8]
0000000000007708	scvtf	d0, w8
000000000000770c	ldp	x29, x30, [sp, #0x10]
0000000000007710	ldp	x20, x19, [sp], #0x20
0000000000007714	ret
_kfun:kotlin.Byte#$<bridge-NBNN>equals(kotlin.Any?){}kotlin.Boolean(kotlin.Any?){}kotlin.Boolean:
0000000000007718	stp	x20, x19, [sp, #-0x20]!
000000000000771c	stp	x29, x30, [sp, #0x10]
0000000000007720	add	x29, sp, #0x10
0000000000007724	mov	x19, x1
0000000000007728	mov	x20, x0
000000000000772c	adr	x8, #0x7b117
0000000000007730	nop
0000000000007734	ldarb	w8, [x8]
0000000000007738	tbz	w8, #0x0, 0x7740
000000000000773c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000007740	cbz	x19, 0x7778
0000000000007744	ldrb	w8, [x20, #0x8]
0000000000007748	ldr	x9, [x19]
000000000000774c	and	x9, x9, #0xfffffffffffffffc
0000000000007750	ldr	x9, [x9]
0000000000007754	ldr	w9, [x9, #0x5c]
0000000000007758	cmp	w9, #0x6c
000000000000775c	b.ne	0x7778
0000000000007760	ldrb	w9, [x19, #0x8]
0000000000007764	cmp	w9, w8
0000000000007768	cset	w0, eq
000000000000776c	ldp	x29, x30, [sp, #0x10]
0000000000007770	ldp	x20, x19, [sp], #0x20
0000000000007774	ret
0000000000007778	mov	w0, #0x0
000000000000777c	ldp	x29, x30, [sp, #0x10]
0000000000007780	ldp	x20, x19, [sp], #0x20
0000000000007784	ret
_kfun:kotlin.Byte#$<bridge-NBN>toString(){}kotlin.String(){}kotlin.String:
0000000000007788	sub	sp, sp, #0x30
000000000000778c	stp	x20, x19, [sp, #0x10]
0000000000007790	stp	x29, x30, [sp, #0x20]
0000000000007794	add	x29, sp, #0x20
0000000000007798	mov	x19, x1
000000000000779c	mov	x20, x0
00000000000077a0	adr	x8, #0x7b0a3
00000000000077a4	nop
00000000000077a8	ldarb	w8, [x8]
00000000000077ac	tbz	w8, #0x0, 0x77b4
00000000000077b0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000077b4	ldrsb	x8, [x20, #0x8]
00000000000077b8	str	x8, [sp]
00000000000077bc	adr	x2, #0x4b4e4 ; literal pool for: "%d"
00000000000077c0	nop
00000000000077c4	add	x0, sp, #0x8
00000000000077c8	mov	w1, #0x8
00000000000077cc	bl	__ZN5konan8snprintfEPcmPKcz
00000000000077d0	add	x0, sp, #0x8
00000000000077d4	mov	x1, x19
00000000000077d8	bl	_CreateStringFromCString
00000000000077dc	str	x0, [x19]
00000000000077e0	ldp	x29, x30, [sp, #0x20]
00000000000077e4	ldp	x20, x19, [sp, #0x10]
00000000000077e8	add	sp, sp, #0x30
00000000000077ec	ret
_kfun:kotlin.Byte#$<bridge-NBN>hashCode(){}kotlin.Int(){}kotlin.Int:
00000000000077f0	stp	x20, x19, [sp, #-0x20]!
00000000000077f4	stp	x29, x30, [sp, #0x10]
00000000000077f8	add	x29, sp, #0x10
00000000000077fc	mov	x19, x0
0000000000007800	adr	x8, #0x7b043
0000000000007804	nop
0000000000007808	ldarb	w8, [x8]
000000000000780c	tbz	w8, #0x0, 0x7814
0000000000007810	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000007814	ldrsb	w0, [x19, #0x8]
0000000000007818	ldp	x29, x30, [sp, #0x10]
000000000000781c	ldp	x20, x19, [sp], #0x20
0000000000007820	ret
_kfun:kotlin.Short#$<bridge-NBNB>compareTo(kotlin.Short){}kotlin.Int(kotlin.Any?){}kotlin.Int:
0000000000007824	stp	x20, x19, [sp, #-0x20]!
0000000000007828	stp	x29, x30, [sp, #0x10]
000000000000782c	add	x29, sp, #0x10
0000000000007830	mov	x19, x1
0000000000007834	mov	x20, x0
0000000000007838	adr	x8, #0x7b00b
000000000000783c	nop
0000000000007840	ldarb	w8, [x8]
0000000000007844	tbz	w8, #0x0, 0x784c
0000000000007848	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000784c	ldrh	w8, [x20, #0x8]
0000000000007850	sxth	w9, w8
0000000000007854	ldrh	w10, [x19, #0x8]
0000000000007858	cmp	w9, w10, sxth
000000000000785c	mov	w9, #-0x1
0000000000007860	cneg	w9, w9, ge
0000000000007864	cmp	w8, w10
0000000000007868	csel	w0, wzr, w9, eq
000000000000786c	ldp	x29, x30, [sp, #0x10]
0000000000007870	ldp	x20, x19, [sp], #0x20
0000000000007874	ret
_kfun:kotlin.Short#$<bridge-NBN>toByte(){}kotlin.Byte(){}kotlin.Byte:
0000000000007878	stp	x20, x19, [sp, #-0x20]!
000000000000787c	stp	x29, x30, [sp, #0x10]
0000000000007880	add	x29, sp, #0x10
0000000000007884	mov	x19, x0
0000000000007888	adr	x8, #0x7afbb
000000000000788c	nop
0000000000007890	ldarb	w8, [x8]
0000000000007894	tbz	w8, #0x0, 0x789c
0000000000007898	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000789c	ldrsb	w0, [x19, #0x8]
00000000000078a0	ldp	x29, x30, [sp, #0x10]
00000000000078a4	ldp	x20, x19, [sp], #0x20
00000000000078a8	ret
_kfun:kotlin.Short#$<bridge-NBN>toChar(){}kotlin.Char(){}kotlin.Char:
00000000000078ac	stp	x20, x19, [sp, #-0x20]!
00000000000078b0	stp	x29, x30, [sp, #0x10]
00000000000078b4	add	x29, sp, #0x10
00000000000078b8	mov	x19, x0
00000000000078bc	adr	x8, #0x7af87
00000000000078c0	nop
00000000000078c4	ldarb	w8, [x8]
00000000000078c8	tbz	w8, #0x0, 0x78d0
00000000000078cc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000078d0	ldrh	w0, [x19, #0x8]
00000000000078d4	ldp	x29, x30, [sp, #0x10]
00000000000078d8	ldp	x20, x19, [sp], #0x20
00000000000078dc	ret
_kfun:kotlin.Short#$<bridge-NBN>toShort(){}kotlin.Short(){}kotlin.Short:
00000000000078e0	stp	x20, x19, [sp, #-0x20]!
00000000000078e4	stp	x29, x30, [sp, #0x10]
00000000000078e8	add	x29, sp, #0x10
00000000000078ec	mov	x19, x0
00000000000078f0	adr	x8, #0x7af53
00000000000078f4	nop
00000000000078f8	ldarb	w8, [x8]
00000000000078fc	tbz	w8, #0x0, 0x7904
0000000000007900	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000007904	ldrsh	w0, [x19, #0x8]
0000000000007908	ldp	x29, x30, [sp, #0x10]
000000000000790c	ldp	x20, x19, [sp], #0x20
0000000000007910	ret
_kfun:kotlin.Short#$<bridge-NBN>toInt(){}kotlin.Int(){}kotlin.Int:
0000000000007914	stp	x20, x19, [sp, #-0x20]!
0000000000007918	stp	x29, x30, [sp, #0x10]
000000000000791c	add	x29, sp, #0x10
0000000000007920	mov	x19, x0
0000000000007924	adr	x8, #0x7af1f
0000000000007928	nop
000000000000792c	ldarb	w8, [x8]
0000000000007930	tbz	w8, #0x0, 0x7938
0000000000007934	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000007938	ldrsh	w0, [x19, #0x8]
000000000000793c	ldp	x29, x30, [sp, #0x10]
0000000000007940	ldp	x20, x19, [sp], #0x20
0000000000007944	ret
_kfun:kotlin.Short#$<bridge-NBN>toLong(){}kotlin.Long(){}kotlin.Long:
0000000000007948	stp	x20, x19, [sp, #-0x20]!
000000000000794c	stp	x29, x30, [sp, #0x10]
0000000000007950	add	x29, sp, #0x10
0000000000007954	mov	x19, x0
0000000000007958	adr	x8, #0x7aeeb
000000000000795c	nop
0000000000007960	ldarb	w8, [x8]
0000000000007964	tbz	w8, #0x0, 0x796c
0000000000007968	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000796c	ldrsh	x0, [x19, #0x8]
0000000000007970	ldp	x29, x30, [sp, #0x10]
0000000000007974	ldp	x20, x19, [sp], #0x20
0000000000007978	ret
_kfun:kotlin.Short#$<bridge-NBN>toFloat(){}kotlin.Float(){}kotlin.Float:
000000000000797c	stp	x20, x19, [sp, #-0x20]!
0000000000007980	stp	x29, x30, [sp, #0x10]
0000000000007984	add	x29, sp, #0x10
0000000000007988	mov	x19, x0
000000000000798c	adr	x8, #0x7aeb7
0000000000007990	nop
0000000000007994	ldarb	w8, [x8]
0000000000007998	tbz	w8, #0x0, 0x79a0
000000000000799c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000079a0	ldr	h0, [x19, #0x8]
00000000000079a4	sshll.4s	v0, v0, #0x0
00000000000079a8	scvtf	s0, s0
00000000000079ac	ldp	x29, x30, [sp, #0x10]
00000000000079b0	ldp	x20, x19, [sp], #0x20
00000000000079b4	ret
_kfun:kotlin.Short#$<bridge-NBN>toDouble(){}kotlin.Double(){}kotlin.Double:
00000000000079b8	stp	x20, x19, [sp, #-0x20]!
00000000000079bc	stp	x29, x30, [sp, #0x10]
00000000000079c0	add	x29, sp, #0x10
00000000000079c4	mov	x19, x0
00000000000079c8	adr	x8, #0x7ae7b
00000000000079cc	nop
00000000000079d0	ldarb	w8, [x8]
00000000000079d4	tbz	w8, #0x0, 0x79dc
00000000000079d8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000079dc	ldr	h0, [x19, #0x8]
00000000000079e0	sshll.4s	v0, v0, #0x0
00000000000079e4	sshll.2d	v0, v0, #0x0
00000000000079e8	scvtf	d0, d0
00000000000079ec	ldp	x29, x30, [sp, #0x10]
00000000000079f0	ldp	x20, x19, [sp], #0x20
00000000000079f4	ret
_kfun:kotlin.Short#$<bridge-NBNN>equals(kotlin.Any?){}kotlin.Boolean(kotlin.Any?){}kotlin.Boolean:
00000000000079f8	stp	x20, x19, [sp, #-0x20]!
00000000000079fc	stp	x29, x30, [sp, #0x10]
0000000000007a00	add	x29, sp, #0x10
0000000000007a04	mov	x19, x1
0000000000007a08	mov	x20, x0
0000000000007a0c	adr	x8, #0x7ae37
0000000000007a10	nop
0000000000007a14	ldarb	w8, [x8]
0000000000007a18	tbz	w8, #0x0, 0x7a20
0000000000007a1c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000007a20	cbz	x19, 0x7a58
0000000000007a24	ldrh	w8, [x20, #0x8]
0000000000007a28	ldr	x9, [x19]
0000000000007a2c	and	x9, x9, #0xfffffffffffffffc
0000000000007a30	ldr	x9, [x9]
0000000000007a34	ldr	w9, [x9, #0x5c]
0000000000007a38	cmp	w9, #0x6d
0000000000007a3c	b.ne	0x7a58
0000000000007a40	ldrh	w9, [x19, #0x8]
0000000000007a44	cmp	w9, w8
0000000000007a48	cset	w0, eq
0000000000007a4c	ldp	x29, x30, [sp, #0x10]
0000000000007a50	ldp	x20, x19, [sp], #0x20
0000000000007a54	ret
0000000000007a58	mov	w0, #0x0
0000000000007a5c	ldp	x29, x30, [sp, #0x10]
0000000000007a60	ldp	x20, x19, [sp], #0x20
0000000000007a64	ret
_kfun:kotlin.Short#$<bridge-NBN>toString(){}kotlin.String(){}kotlin.String:
0000000000007a68	sub	sp, sp, #0x30
0000000000007a6c	stp	x20, x19, [sp, #0x10]
0000000000007a70	stp	x29, x30, [sp, #0x20]
0000000000007a74	add	x29, sp, #0x20
0000000000007a78	mov	x19, x1
0000000000007a7c	mov	x20, x0
0000000000007a80	adr	x8, #0x7adc3
0000000000007a84	nop
0000000000007a88	ldarb	w8, [x8]
0000000000007a8c	tbz	w8, #0x0, 0x7a94
0000000000007a90	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000007a94	ldrsh	x8, [x20, #0x8]
0000000000007a98	str	x8, [sp]
0000000000007a9c	adr	x2, #0x4b204 ; literal pool for: "%d"
0000000000007aa0	nop
0000000000007aa4	add	x0, sp, #0x8
0000000000007aa8	mov	w1, #0x8
0000000000007aac	bl	__ZN5konan8snprintfEPcmPKcz
0000000000007ab0	add	x0, sp, #0x8
0000000000007ab4	mov	x1, x19
0000000000007ab8	bl	_CreateStringFromCString
0000000000007abc	str	x0, [x19]
0000000000007ac0	ldp	x29, x30, [sp, #0x20]
0000000000007ac4	ldp	x20, x19, [sp, #0x10]
0000000000007ac8	add	sp, sp, #0x30
0000000000007acc	ret
_kfun:kotlin.Short#$<bridge-NBN>hashCode(){}kotlin.Int(){}kotlin.Int:
0000000000007ad0	stp	x20, x19, [sp, #-0x20]!
0000000000007ad4	stp	x29, x30, [sp, #0x10]
0000000000007ad8	add	x29, sp, #0x10
0000000000007adc	mov	x19, x0
0000000000007ae0	adr	x8, #0x7ad63
0000000000007ae4	nop
0000000000007ae8	ldarb	w8, [x8]
0000000000007aec	tbz	w8, #0x0, 0x7af4
0000000000007af0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000007af4	ldrsh	w0, [x19, #0x8]
0000000000007af8	ldp	x29, x30, [sp, #0x10]
0000000000007afc	ldp	x20, x19, [sp], #0x20
0000000000007b00	ret
_kfun:kotlin.Float#$<bridge-NBNB>compareTo(kotlin.Float){}kotlin.Int(kotlin.Any?){}kotlin.Int:
0000000000007b04	stp	x20, x19, [sp, #-0x20]!
0000000000007b08	stp	x29, x30, [sp, #0x10]
0000000000007b0c	add	x29, sp, #0x10
0000000000007b10	mov	x19, x1
0000000000007b14	mov	x20, x0
0000000000007b18	adr	x8, #0x7ad2b
0000000000007b1c	nop
0000000000007b20	ldarb	w8, [x8]
0000000000007b24	tbz	w8, #0x0, 0x7b2c
0000000000007b28	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000007b2c	ldr	s1, [x20, #0x8]
0000000000007b30	ldr	s0, [x19, #0x8]
0000000000007b34	fcmp	s1, s0
0000000000007b38	b.le	0x7b4c
0000000000007b3c	mov	w0, #0x1
0000000000007b40	ldp	x29, x30, [sp, #0x10]
0000000000007b44	ldp	x20, x19, [sp], #0x20
0000000000007b48	ret
0000000000007b4c	mov	w0, #-0x1
0000000000007b50	b.mi	0x7b40
0000000000007b54	fmov	w8, s1
0000000000007b58	fcmp	s1, s1
0000000000007b5c	mov	w9, #0x7fc00000
0000000000007b60	csel	w8, w9, w8, vs
0000000000007b64	fmov	w10, s0
0000000000007b68	fcmp	s0, s0
0000000000007b6c	csel	w9, w9, w10, vs
0000000000007b70	cmp	w8, w9
0000000000007b74	cneg	w8, w0, ge
0000000000007b78	csel	w0, wzr, w8, eq
0000000000007b7c	ldp	x29, x30, [sp, #0x10]
0000000000007b80	ldp	x20, x19, [sp], #0x20
0000000000007b84	ret
_kfun:kotlin.Float#$<bridge-NBN>toByte(){}kotlin.Byte(){}kotlin.Byte:
0000000000007b88	stp	x20, x19, [sp, #-0x20]!
0000000000007b8c	stp	x29, x30, [sp, #0x10]
0000000000007b90	add	x29, sp, #0x10
0000000000007b94	mov	x19, x0
0000000000007b98	adr	x8, #0x7acab
0000000000007b9c	nop
0000000000007ba0	ldarb	w8, [x8]
0000000000007ba4	tbz	w8, #0x0, 0x7bac
0000000000007ba8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000007bac	ldr	s0, [x19, #0x8]
0000000000007bb0	fcmp	s0, s0
0000000000007bb4	b.vs	0x7c00
0000000000007bb8	mov	w8, #0x4f000000
0000000000007bbc	fmov	s1, w8
0000000000007bc0	fcmp	s0, s1
0000000000007bc4	b.ge	0x7bec
0000000000007bc8	mov	w8, #-0x31000000
0000000000007bcc	fmov	s1, w8
0000000000007bd0	fcmp	s0, s1
0000000000007bd4	b.ls	0x7c00
0000000000007bd8	fcvtzs	w8, s0
0000000000007bdc	sxtb	w0, w8
0000000000007be0	ldp	x29, x30, [sp, #0x10]
0000000000007be4	ldp	x20, x19, [sp], #0x20
0000000000007be8	ret
0000000000007bec	mov	w8, #0xff
0000000000007bf0	sxtb	w0, w8
0000000000007bf4	ldp	x29, x30, [sp, #0x10]
0000000000007bf8	ldp	x20, x19, [sp], #0x20
0000000000007bfc	ret
0000000000007c00	mov	w8, #0x0
0000000000007c04	sxtb	w0, w8
0000000000007c08	ldp	x29, x30, [sp, #0x10]
0000000000007c0c	ldp	x20, x19, [sp], #0x20
0000000000007c10	ret
_kfun:kotlin.Float#$<bridge-NBN>toChar(){}kotlin.Char(){}kotlin.Char:
0000000000007c14	stp	x20, x19, [sp, #-0x20]!
0000000000007c18	stp	x29, x30, [sp, #0x10]
0000000000007c1c	add	x29, sp, #0x10
0000000000007c20	mov	x19, x0
0000000000007c24	adr	x8, #0x7ac1f
0000000000007c28	nop
0000000000007c2c	ldarb	w8, [x8]
0000000000007c30	tbz	w8, #0x0, 0x7c38
0000000000007c34	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000007c38	ldr	s0, [x19, #0x8]
0000000000007c3c	fcmp	s0, s0
0000000000007c40	b.vs	0x7c8c
0000000000007c44	mov	w8, #0x4f000000
0000000000007c48	fmov	s1, w8
0000000000007c4c	fcmp	s0, s1
0000000000007c50	b.ge	0x7c78
0000000000007c54	mov	w8, #-0x31000000
0000000000007c58	fmov	s1, w8
0000000000007c5c	fcmp	s0, s1
0000000000007c60	b.ls	0x7c8c
0000000000007c64	fcvtzs	w8, s0
0000000000007c68	and	w0, w8, #0xffff
0000000000007c6c	ldp	x29, x30, [sp, #0x10]
0000000000007c70	ldp	x20, x19, [sp], #0x20
0000000000007c74	ret
0000000000007c78	mov	w8, #0xffff
0000000000007c7c	and	w0, w8, #0xffff
0000000000007c80	ldp	x29, x30, [sp, #0x10]
0000000000007c84	ldp	x20, x19, [sp], #0x20
0000000000007c88	ret
0000000000007c8c	mov	w8, #0x0
0000000000007c90	and	w0, w8, #0xffff
0000000000007c94	ldp	x29, x30, [sp, #0x10]
0000000000007c98	ldp	x20, x19, [sp], #0x20
0000000000007c9c	ret
_kfun:kotlin.Float#$<bridge-NBN>toShort(){}kotlin.Short(){}kotlin.Short:
0000000000007ca0	stp	x20, x19, [sp, #-0x20]!
0000000000007ca4	stp	x29, x30, [sp, #0x10]
0000000000007ca8	add	x29, sp, #0x10
0000000000007cac	mov	x19, x0
0000000000007cb0	adr	x8, #0x7ab93
0000000000007cb4	nop
0000000000007cb8	ldarb	w8, [x8]
0000000000007cbc	tbz	w8, #0x0, 0x7cc4
0000000000007cc0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000007cc4	ldr	s0, [x19, #0x8]
0000000000007cc8	fcmp	s0, s0
0000000000007ccc	b.vs	0x7d18
0000000000007cd0	mov	w8, #0x4f000000
0000000000007cd4	fmov	s1, w8
0000000000007cd8	fcmp	s0, s1
0000000000007cdc	b.ge	0x7d04
0000000000007ce0	mov	w8, #-0x31000000
0000000000007ce4	fmov	s1, w8
0000000000007ce8	fcmp	s0, s1
0000000000007cec	b.ls	0x7d18
0000000000007cf0	fcvtzs	w8, s0
0000000000007cf4	sxth	w0, w8
0000000000007cf8	ldp	x29, x30, [sp, #0x10]
0000000000007cfc	ldp	x20, x19, [sp], #0x20
0000000000007d00	ret
0000000000007d04	mov	w8, #0xffff
0000000000007d08	sxth	w0, w8
0000000000007d0c	ldp	x29, x30, [sp, #0x10]
0000000000007d10	ldp	x20, x19, [sp], #0x20
0000000000007d14	ret
0000000000007d18	mov	w8, #0x0
0000000000007d1c	sxth	w0, w8
0000000000007d20	ldp	x29, x30, [sp, #0x10]
0000000000007d24	ldp	x20, x19, [sp], #0x20
0000000000007d28	ret
_kfun:kotlin.Float#$<bridge-NBN>toInt(){}kotlin.Int(){}kotlin.Int:
0000000000007d2c	stp	x20, x19, [sp, #-0x20]!
0000000000007d30	stp	x29, x30, [sp, #0x10]
0000000000007d34	add	x29, sp, #0x10
0000000000007d38	mov	x19, x0
0000000000007d3c	adr	x8, #0x7ab07
0000000000007d40	nop
0000000000007d44	ldarb	w8, [x8]
0000000000007d48	tbz	w8, #0x0, 0x7d50
0000000000007d4c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000007d50	ldr	s0, [x19, #0x8]
0000000000007d54	fcmp	s0, s0
0000000000007d58	b.vs	0x7dac
0000000000007d5c	mov	w8, #0x4f000000
0000000000007d60	fmov	s1, w8
0000000000007d64	fcmp	s0, s1
0000000000007d68	b.ge	0x7d8c
0000000000007d6c	mov	w8, #-0x31000000
0000000000007d70	fmov	s1, w8
0000000000007d74	fcmp	s0, s1
0000000000007d78	b.ls	0x7d9c
0000000000007d7c	fcvtzs	w0, s0
0000000000007d80	ldp	x29, x30, [sp, #0x10]
0000000000007d84	ldp	x20, x19, [sp], #0x20
0000000000007d88	ret
0000000000007d8c	mov	w0, #0x7fffffff
0000000000007d90	ldp	x29, x30, [sp, #0x10]
0000000000007d94	ldp	x20, x19, [sp], #0x20
0000000000007d98	ret
0000000000007d9c	mov	w0, #-0x80000000
0000000000007da0	ldp	x29, x30, [sp, #0x10]
0000000000007da4	ldp	x20, x19, [sp], #0x20
0000000000007da8	ret
0000000000007dac	mov	w0, #0x0
0000000000007db0	ldp	x29, x30, [sp, #0x10]
0000000000007db4	ldp	x20, x19, [sp], #0x20
0000000000007db8	ret
_kfun:kotlin.Float#$<bridge-NBN>toLong(){}kotlin.Long(){}kotlin.Long:
0000000000007dbc	stp	x20, x19, [sp, #-0x20]!
0000000000007dc0	stp	x29, x30, [sp, #0x10]
0000000000007dc4	add	x29, sp, #0x10
0000000000007dc8	mov	x19, x0
0000000000007dcc	adr	x8, #0x7aa77
0000000000007dd0	nop
0000000000007dd4	ldarb	w8, [x8]
0000000000007dd8	tbz	w8, #0x0, 0x7de0
0000000000007ddc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000007de0	ldr	s0, [x19, #0x8]
0000000000007de4	fcmp	s0, s0
0000000000007de8	b.vs	0x7e3c
0000000000007dec	mov	w8, #0x5f000000
0000000000007df0	fmov	s1, w8
0000000000007df4	fcmp	s0, s1
0000000000007df8	b.ge	0x7e1c
0000000000007dfc	mov	w8, #-0x21000000
0000000000007e00	fmov	s1, w8
0000000000007e04	fcmp	s0, s1
0000000000007e08	b.ls	0x7e2c
0000000000007e0c	fcvtzs	x0, s0
0000000000007e10	ldp	x29, x30, [sp, #0x10]
0000000000007e14	ldp	x20, x19, [sp], #0x20
0000000000007e18	ret
0000000000007e1c	mov	x0, #0x7fffffffffffffff
0000000000007e20	ldp	x29, x30, [sp, #0x10]
0000000000007e24	ldp	x20, x19, [sp], #0x20
0000000000007e28	ret
0000000000007e2c	mov	x0, #-0x8000000000000000
0000000000007e30	ldp	x29, x30, [sp, #0x10]
0000000000007e34	ldp	x20, x19, [sp], #0x20
0000000000007e38	ret
0000000000007e3c	mov	x0, #0x0
0000000000007e40	ldp	x29, x30, [sp, #0x10]
0000000000007e44	ldp	x20, x19, [sp], #0x20
0000000000007e48	ret
_kfun:kotlin.Float#$<bridge-NBN>toFloat(){}kotlin.Float(){}kotlin.Float:
0000000000007e4c	stp	x20, x19, [sp, #-0x20]!
0000000000007e50	stp	x29, x30, [sp, #0x10]
0000000000007e54	add	x29, sp, #0x10
0000000000007e58	mov	x19, x0
0000000000007e5c	adr	x8, #0x7a9e7
0000000000007e60	nop
0000000000007e64	ldarb	w8, [x8]
0000000000007e68	tbz	w8, #0x0, 0x7e70
0000000000007e6c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000007e70	ldr	s0, [x19, #0x8]
0000000000007e74	ldp	x29, x30, [sp, #0x10]
0000000000007e78	ldp	x20, x19, [sp], #0x20
0000000000007e7c	ret
_kfun:kotlin.Float#$<bridge-NBN>toDouble(){}kotlin.Double(){}kotlin.Double:
0000000000007e80	stp	x20, x19, [sp, #-0x20]!
0000000000007e84	stp	x29, x30, [sp, #0x10]
0000000000007e88	add	x29, sp, #0x10
0000000000007e8c	mov	x19, x0
0000000000007e90	adr	x8, #0x7a9b3
0000000000007e94	nop
0000000000007e98	ldarb	w8, [x8]
0000000000007e9c	tbz	w8, #0x0, 0x7ea4
0000000000007ea0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000007ea4	ldr	s0, [x19, #0x8]
0000000000007ea8	fcvt	d0, s0
0000000000007eac	ldp	x29, x30, [sp, #0x10]
0000000000007eb0	ldp	x20, x19, [sp], #0x20
0000000000007eb4	ret
_kfun:kotlin.Float#$<bridge-NBNN>equals(kotlin.Any?){}kotlin.Boolean(kotlin.Any?){}kotlin.Boolean:
0000000000007eb8	stp	x20, x19, [sp, #-0x20]!
0000000000007ebc	stp	x29, x30, [sp, #0x10]
0000000000007ec0	add	x29, sp, #0x10
0000000000007ec4	mov	x19, x1
0000000000007ec8	mov	x20, x0
0000000000007ecc	adr	x8, #0x7a977
0000000000007ed0	nop
0000000000007ed4	ldarb	w8, [x8]
0000000000007ed8	tbz	w8, #0x0, 0x7ee0
0000000000007edc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000007ee0	cbz	x19, 0x7f34
0000000000007ee4	ldr	s0, [x20, #0x8]
0000000000007ee8	ldr	x8, [x19]
0000000000007eec	and	x8, x8, #0xfffffffffffffffc
0000000000007ef0	ldr	x8, [x8]
0000000000007ef4	ldr	w8, [x8, #0x5c]
0000000000007ef8	cmp	w8, #0x6e
0000000000007efc	b.ne	0x7f34
0000000000007f00	ldr	s1, [x19, #0x8]
0000000000007f04	fmov	w8, s0
0000000000007f08	fcmp	s0, s0
0000000000007f0c	mov	w9, #0x7fc00000
0000000000007f10	csel	w8, w9, w8, vs
0000000000007f14	fcmp	s1, s1
0000000000007f18	fmov	w10, s1
0000000000007f1c	csel	w9, w9, w10, vs
0000000000007f20	cmp	w8, w9
0000000000007f24	cset	w0, eq
0000000000007f28	ldp	x29, x30, [sp, #0x10]
0000000000007f2c	ldp	x20, x19, [sp], #0x20
0000000000007f30	ret
0000000000007f34	mov	w0, #0x0
0000000000007f38	ldp	x29, x30, [sp, #0x10]
0000000000007f3c	ldp	x20, x19, [sp], #0x20
0000000000007f40	ret
_kfun:kotlin.Float#$<bridge-NBN>toString(){}kotlin.String(){}kotlin.String:
0000000000007f44	sub	sp, sp, #0xf0
0000000000007f48	stp	d9, d8, [sp, #0x80]
0000000000007f4c	stp	x28, x27, [sp, #0x90]
0000000000007f50	stp	x26, x25, [sp, #0xa0]
0000000000007f54	stp	x24, x23, [sp, #0xb0]
0000000000007f58	stp	x22, x21, [sp, #0xc0]
0000000000007f5c	stp	x20, x19, [sp, #0xd0]
0000000000007f60	stp	x29, x30, [sp, #0xe0]
0000000000007f64	add	x29, sp, #0xe0
0000000000007f68	mov	x19, x1
0000000000007f6c	mov	x20, x0
0000000000007f70	adr	x27, #0x7a8d3
0000000000007f74	nop
0000000000007f78	ldarb	w8, [x27]
0000000000007f7c	tbz	w8, #0x0, 0x7f84
0000000000007f80	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000007f84	ldr	s8, [x20, #0x8]
0000000000007f88	movi.16b	v0, #0x0
0000000000007f8c	stp	q0, q0, [sp, #0x10]
0000000000007f90	adrp	x23, 97 ; 0x68000
0000000000007f94	add	x23, x23, #0xa00
0000000000007f98	ldr	x26, [x23]
0000000000007f9c	mov	x0, x23
0000000000007fa0	blr	x26
0000000000007fa4	ldr	x8, [x0]
0000000000007fa8	ldr	x9, [x8, #0x110]
0000000000007fac	add	x10, sp, #0x10
0000000000007fb0	str	x10, [x8, #0x110]
0000000000007fb4	mov	x24, #0x400000000
0000000000007fb8	stp	x9, x24, [sp, #0x18]
0000000000007fbc	adr	x25, #0x7a8f4
0000000000007fc0	nop
0000000000007fc4	ldar	x8, [x25]
0000000000007fc8	cmp	x8, #0x2
0000000000007fcc	b.hs	0x81b4
0000000000007fd0	mov	x0, x23
0000000000007fd4	blr	x26
0000000000007fd8	ldr	x28, [x0]
0000000000007fdc	ldp	x8, x9, [x28, #0x120]
0000000000007fe0	cmp	x8, x9
0000000000007fe4	b.eq	0x8004
0000000000007fe8	mov	x10, x9
0000000000007fec	ldr	x11, [x10, #-0x10]!
0000000000007ff0	cmp	x11, x25
0000000000007ff4	b.eq	0x80c0
0000000000007ff8	mov	x9, x10
0000000000007ffc	cmp	x10, x8
0000000000008000	b.ne	0x7fec
0000000000008004	add	x21, x28, #0x120
0000000000008008	add	x0, x28, #0x138
000000000000800c	mov	w9, #0x1
0000000000008010	ldaxr	w8, [x0]
0000000000008014	stlxr	w10, w9, [x0]
0000000000008018	cbnz	w10, 0x8010
000000000000801c	b	0x802c
0000000000008020	mov	w22, #0x1
0000000000008024	stlxr	w9, x22, [x25]
0000000000008028	cbz	w9, 0x803c
000000000000802c	ldaxr	x20, [x25]
0000000000008030	cbz	x20, 0x8020
0000000000008034	mov	w22, #0x0
0000000000008038	clrex
000000000000803c	cmp	x20, #0x1
0000000000008040	b.eq	0x802c
0000000000008044	cbz	x28, 0x8070
0000000000008048	ldaxr	w9, [x0]
000000000000804c	stlxr	w10, w8, [x0]
0000000000008050	cbnz	w10, 0x8048
0000000000008054	cbnz	w8, 0x8070
0000000000008058	cmp	w9, #0x1
000000000000805c	b.ne	0x8070
0000000000008060	ldarb	w8, [x27]
0000000000008064	tbz	w8, #0x0, 0x8070
0000000000008068	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000000806c	movi.16b	v0, #0x0
0000000000008070	tbz	w22, #0x0, 0x80b8
0000000000008074	ldr	x8, [x28, #0x118]
0000000000008078	add	x0, x8, #0x70
000000000000807c	mov	w1, #0x20
0000000000008080	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000008084	mov	x22, x0
0000000000008088	adr	x8, #0x4e1d8
000000000000808c	nop
0000000000008090	str	x8, [x22, #0x10]!
0000000000008094	stur	xzr, [x22, #-0x8]
0000000000008098	str	x22, [sp, #0x28]
000000000000809c	ldp	x9, x8, [x28, #0x128]
00000000000080a0	cmp	x9, x8
00000000000080a4	b.hs	0x80cc
00000000000080a8	stp	x25, x22, [x9]
00000000000080ac	add	x8, x9, #0x10
00000000000080b0	str	x8, [x28, #0x128]
00000000000080b4	b	0x8164
00000000000080b8	str	x20, [sp, #0x28]
00000000000080bc	b	0x81b4
00000000000080c0	ldur	x8, [x9, #-0x8]
00000000000080c4	str	x8, [sp, #0x28]
00000000000080c8	b	0x81b4
00000000000080cc	str	x21, [sp, #0x8]
00000000000080d0	ldr	x10, [x21]
00000000000080d4	sub	x9, x9, x10
00000000000080d8	asr	x20, x9, #4
00000000000080dc	add	x9, x20, #0x1
00000000000080e0	lsr	x11, x9, #60
00000000000080e4	cbnz	x11, 0x8410
00000000000080e8	sub	x8, x8, x10
00000000000080ec	asr	x10, x8, #3
00000000000080f0	cmp	x10, x9
00000000000080f4	csel	x9, x9, x10, lo
00000000000080f8	mov	x10, #0x7ffffffffffffff
00000000000080fc	cmp	x10, x8, asr #4
0000000000008100	mov	x8, #0xfffffffffffffff
0000000000008104	csel	x23, x9, x8, hi
0000000000008108	mov	x0, x23
000000000000810c	mov	w1, #0x10
0000000000008110	bl	0x4db20 ; symbol stub for: _calloc
0000000000008114	add	x8, x0, x20, lsl #4
0000000000008118	add	x20, x0, x23, lsl #4
000000000000811c	stp	x25, x22, [x8]
0000000000008120	add	x21, x8, #0x10
0000000000008124	ldp	x1, x9, [x28, #0x120]
0000000000008128	sub	x2, x9, x1
000000000000812c	sub	x23, x8, x2
0000000000008130	cmp	x2, #0x1
0000000000008134	b.lt	0x8148
0000000000008138	mov	x0, x23
000000000000813c	bl	0x4dbec ; symbol stub for: _memcpy
0000000000008140	ldr	x8, [sp, #0x8]
0000000000008144	ldr	x1, [x8]
0000000000008148	stp	x23, x21, [x28, #0x120]
000000000000814c	str	x20, [x28, #0x130]
0000000000008150	adrp	x23, 96 ; 0x68000
0000000000008154	add	x23, x23, #0xa00
0000000000008158	cbz	x1, 0x8164
000000000000815c	mov	x0, x1
0000000000008160	bl	0x4dba4 ; symbol stub for: _free
0000000000008164	mov	x0, x22
0000000000008168	bl	"_kfun:kotlin.native.internal.NumberConverter.Companion#<init>(){}"
000000000000816c	mov	w0, #0x1
0000000000008170	mov	w1, #0x28
0000000000008174	bl	0x4db20 ; symbol stub for: _calloc
0000000000008178	ldr	x8, [x28, #0x18]!
000000000000817c	sub	x9, x28, #0x8
0000000000008180	stp	x25, x9, [x0, #0x10]
0000000000008184	stp	x8, x28, [x0]
0000000000008188	str	x0, [x8, #0x8]
000000000000818c	str	x0, [x28]
0000000000008190	ldr	x8, [x28, #0x10]
0000000000008194	add	x8, x8, #0x1
0000000000008198	str	x8, [x28, #0x10]
000000000000819c	str	x0, [x0, #0x20]
00000000000081a0	stlr	x22, [x25]
00000000000081a4	ldr	x8, [x28, #0x110]
00000000000081a8	sub	x8, x8, #0x10
00000000000081ac	str	x8, [x28, #0x110]
00000000000081b0	movi.16b	v0, #0x0
00000000000081b4	stp	q0, q0, [sp, #0x30]
00000000000081b8	add	x9, sp, #0x30
00000000000081bc	add	x8, x9, #0x18
00000000000081c0	mov	x0, x23
00000000000081c4	blr	x26
00000000000081c8	mov	x21, x0
00000000000081cc	ldr	x10, [x0]
00000000000081d0	ldr	x11, [x10, #0x110]
00000000000081d4	str	x9, [x10, #0x110]
00000000000081d8	stp	x11, x24, [sp, #0x38]
00000000000081dc	mov	x0, x8
00000000000081e0	bl	"_kfun:kotlin.native.internal.NumberConverter.Companion.<get-converter>#internal"
00000000000081e4	movi.16b	v0, #0x0
00000000000081e8	stp	q0, q0, [sp, #0x50]
00000000000081ec	str	xzr, [sp, #0x70]
00000000000081f0	add	x28, sp, #0x50
00000000000081f4	ldr	x8, [x21]
00000000000081f8	ldr	x9, [x8, #0x110]
00000000000081fc	str	x28, [x8, #0x110]
0000000000008200	mov	x8, #0x500000000
0000000000008204	stp	x9, x8, [sp, #0x58]
0000000000008208	adr	x8, #0x593d8
000000000000820c	nop
0000000000008210	adr	x9, #0x58e78
0000000000008214	nop
0000000000008218	fmov	w10, s8
000000000000821c	cmp	w10, #0x0
0000000000008220	csel	x21, x9, x8, ge
0000000000008224	ubfx	w20, w10, #23, #8
0000000000008228	and	w8, w10, #0x7fffff
000000000000822c	cmp	w20, #0xff
0000000000008230	b.ne	0x8244
0000000000008234	cbz	w8, 0x826c
0000000000008238	adr	x8, #0x593e8
000000000000823c	nop
0000000000008240	b	0x83ac
0000000000008244	mov	x22, x0
0000000000008248	cbz	w20, 0x8278
000000000000824c	orr	w24, w8, #0x800000
0000000000008250	sub	w23, w20, #0x96
0000000000008254	cmp	w20, #0x5c
0000000000008258	b.lo	0x82c0
000000000000825c	cmp	w20, #0xb9
0000000000008260	b.lo	0x82d4
0000000000008264	mov	w25, #0x17
0000000000008268	b	0x82fc
000000000000826c	adr	x1, #0x59394
0000000000008270	nop
0000000000008274	b	0x839c
0000000000008278	cbz	w8, 0x8394
000000000000827c	lsl	w9, w8, #2
0000000000008280	cmp	w8, #0x8
0000000000008284	mov	w10, #-0x95
0000000000008288	mov	w11, #-0x97
000000000000828c	csel	w23, w11, w10, lo
0000000000008290	csel	w24, w9, w8, lo
0000000000008294	mov	w25, #0x17
0000000000008298	tbnz	w24, #0x17, 0x82fc
000000000000829c	mov	x28, x24
00000000000082a0	b	0x82b0
00000000000082a4	lsl	w28, w28, #1
00000000000082a8	sub	w25, w25, #0x1
00000000000082ac	tbnz	w28, #0x17, 0x82f8
00000000000082b0	ldarb	w8, [x27]
00000000000082b4	tbz	w8, #0x0, 0x82a4
00000000000082b8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000082bc	b	0x82a4
00000000000082c0	mov	w25, #0x17
00000000000082c4	cmn	w23, #0x3b
00000000000082c8	b.ne	0x82fc
00000000000082cc	cbz	w8, 0x82fc
00000000000082d0	mov	w23, #-0x3b
00000000000082d4	cmp	w8, #0x0
00000000000082d8	cset	w4, eq
00000000000082dc	mov	x0, x22
00000000000082e0	mov	x1, x24
00000000000082e4	mov	x2, x23
00000000000082e8	mov	w3, #0x0
00000000000082ec	mov	w5, #0x17
00000000000082f0	bl	"_kfun:kotlin.native.internal.NumberConverter.longDigitGenerator#internal"
00000000000082f4	b	0x8318
00000000000082f8	add	x28, sp, #0x50
00000000000082fc	cmp	w20, #0x0
0000000000008300	cset	w3, eq
0000000000008304	mov	w1, w24
0000000000008308	mov	x0, x22
000000000000830c	mov	x2, x23
0000000000008310	mov	x4, x25
0000000000008314	bl	"_kfun:kotlin.native.internal.NumberConverter.bigIntDigitGeneratorInstImpl#internal"
0000000000008318	mov	w8, #0x9680
000000000000831c	movk	w8, #0x4b18, lsl #16
0000000000008320	fmov	s0, w8
0000000000008324	fcmp	s8, s0
0000000000008328	mov	w8, #0x9680
000000000000832c	movk	w8, #0xcb18, lsl #16
0000000000008330	fmov	s0, w8
0000000000008334	fccmp	s8, s0, #0x0, lt
0000000000008338	adrp	x23, 96 ; 0x68000
000000000000833c	add	x23, x23, #0xa00
0000000000008340	b.ls	0x836c
0000000000008344	mov	w8, #0x126f
0000000000008348	movk	w8, #0xba83, lsl #16
000000000000834c	fmov	s0, w8
0000000000008350	fcmp	s8, s0
0000000000008354	b.le	0x8380
0000000000008358	mov	w8, #0x126f
000000000000835c	movk	w8, #0x3a83, lsl #16
0000000000008360	fmov	s0, w8
0000000000008364	fcmp	s8, s0
0000000000008368	b.pl	0x8380
000000000000836c	add	x1, x28, #0x18
0000000000008370	mov	x0, x22
0000000000008374	bl	"_kfun:kotlin.native.internal.NumberConverter.freeFormatExponential#internal"
0000000000008378	mov	x1, x0
000000000000837c	b	0x839c
0000000000008380	add	x1, x28, #0x20
0000000000008384	mov	x0, x22
0000000000008388	bl	"_kfun:kotlin.native.internal.NumberConverter.freeFormat#internal"
000000000000838c	mov	x1, x0
0000000000008390	b	0x839c
0000000000008394	adr	x1, #0x592ac
0000000000008398	nop
000000000000839c	mov	x0, x21
00000000000083a0	mov	x2, x19
00000000000083a4	bl	_Kotlin_String_plusImpl
00000000000083a8	mov	x8, x0
00000000000083ac	str	x8, [x19]
00000000000083b0	mov	x0, x23
00000000000083b4	blr	x26
00000000000083b8	ldr	x9, [x0]
00000000000083bc	ldr	x10, [sp, #0x58]
00000000000083c0	str	x10, [x9, #0x110]
00000000000083c4	str	x8, [x19]
00000000000083c8	ldr	x9, [x0]
00000000000083cc	ldr	x10, [sp, #0x38]
00000000000083d0	str	x10, [x9, #0x110]
00000000000083d4	str	x8, [x19]
00000000000083d8	ldr	x9, [x0]
00000000000083dc	ldr	x10, [sp, #0x18]
00000000000083e0	str	x10, [x9, #0x110]
00000000000083e4	str	x8, [x19]
00000000000083e8	mov	x0, x8
00000000000083ec	ldp	x29, x30, [sp, #0xe0]
00000000000083f0	ldp	x20, x19, [sp, #0xd0]
00000000000083f4	ldp	x22, x21, [sp, #0xc0]
00000000000083f8	ldp	x24, x23, [sp, #0xb0]
00000000000083fc	ldp	x26, x25, [sp, #0xa0]
0000000000008400	ldp	x28, x27, [sp, #0x90]
0000000000008404	ldp	d9, d8, [sp, #0x80]
0000000000008408	add	sp, sp, #0xf0
000000000000840c	ret
0000000000008410	ldr	x0, [sp, #0x8]
0000000000008414	bl	0x4d8ec ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
0000000000008418	bl	0x4da78 ; symbol stub for: ___cxa_begin_catch
000000000000841c	str	xzr, [sp, #0x28]
0000000000008420	stlr	xzr, [x25]
0000000000008424	ldr	x8, [x28, #0x128]
0000000000008428	sub	x8, x8, #0x10
000000000000842c	str	x8, [x28, #0x128]
0000000000008430	bl	0x4daa8 ; symbol stub for: ___cxa_rethrow
0000000000008434	brk	#0x1
0000000000008438	mov	x19, x0
000000000000843c	bl	0x4da84 ; symbol stub for: ___cxa_end_catch
0000000000008440	mov	x0, x19
0000000000008444	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
_kfun:kotlin.Float#$<bridge-NBN>hashCode(){}kotlin.Int(){}kotlin.Int:
0000000000008448	stp	x20, x19, [sp, #-0x20]!
000000000000844c	stp	x29, x30, [sp, #0x10]
0000000000008450	add	x29, sp, #0x10
0000000000008454	mov	x19, x0
0000000000008458	adr	x8, #0x7a3eb
000000000000845c	nop
0000000000008460	ldarb	w8, [x8]
0000000000008464	tbz	w8, #0x0, 0x846c
0000000000008468	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000846c	ldr	s0, [x19, #0x8]
0000000000008470	fcmp	s0, s0
0000000000008474	fmov	w8, s0
0000000000008478	mov	w9, #0x7fc00000
000000000000847c	csel	w0, w9, w8, vs
0000000000008480	ldp	x29, x30, [sp, #0x10]
0000000000008484	ldp	x20, x19, [sp], #0x20
0000000000008488	ret
_kfun:kotlin#<Int-box>(kotlin.Int){}kotlin.Any:
000000000000848c	sub	sp, sp, #0x50
0000000000008490	stp	x22, x21, [sp, #0x20]
0000000000008494	stp	x20, x19, [sp, #0x30]
0000000000008498	stp	x29, x30, [sp, #0x40]
000000000000849c	add	x29, sp, #0x40
00000000000084a0	mov	x19, x1
00000000000084a4	mov	x20, x0
00000000000084a8	movi.16b	v0, #0x0
00000000000084ac	stp	q0, q0, [sp]
00000000000084b0	adrp	x0, 96 ; 0x68000
00000000000084b4	add	x0, x0, #0xa00
00000000000084b8	ldr	x8, [x0]
00000000000084bc	blr	x8
00000000000084c0	ldr	x21, [x0]
00000000000084c4	ldr	x8, [x21, #0x110]
00000000000084c8	mov	x9, sp
00000000000084cc	str	x9, [x21, #0x110]
00000000000084d0	mov	x9, #0x400000000
00000000000084d4	stp	x8, x9, [sp, #0x8]
00000000000084d8	adr	x8, #0x7a36b
00000000000084dc	nop
00000000000084e0	ldarb	w8, [x8]
00000000000084e4	tbz	w8, #0x0, 0x84ec
00000000000084e8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000084ec	cmp	w20, w20, sxtb
00000000000084f0	b.ne	0x850c
00000000000084f4	add	w8, w20, #0x80
00000000000084f8	adr	x9, #0x56b58
00000000000084fc	nop
0000000000008500	add	x0, x9, w8, sxtw #4
0000000000008504	str	x0, [x19]
0000000000008508	b	0x8534
000000000000850c	ldr	x8, [x21, #0x118]
0000000000008510	add	x0, x8, #0x70
0000000000008514	mov	w1, #0x18
0000000000008518	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000851c	adr	x8, #0x4cd44
0000000000008520	nop
0000000000008524	str	x8, [x0, #0x10]!
0000000000008528	stur	xzr, [x0, #-0x8]
000000000000852c	str	x0, [sp, #0x18]
0000000000008530	str	w20, [x0, #0x8]
0000000000008534	str	x0, [x19]
0000000000008538	ldr	x8, [sp, #0x8]
000000000000853c	str	x8, [x21, #0x110]
0000000000008540	ldp	x29, x30, [sp, #0x40]
0000000000008544	ldp	x20, x19, [sp, #0x30]
0000000000008548	ldp	x22, x21, [sp, #0x20]
000000000000854c	add	sp, sp, #0x50
0000000000008550	ret
_kfun:kotlin.String#toString(){}kotlin.String:
0000000000008554	stp	x20, x19, [sp, #-0x20]!
0000000000008558	stp	x29, x30, [sp, #0x10]
000000000000855c	add	x29, sp, #0x10
0000000000008560	mov	x20, x1
0000000000008564	mov	x19, x0
0000000000008568	adr	x8, #0x7a2db
000000000000856c	nop
0000000000008570	ldarb	w8, [x8]
0000000000008574	tbz	w8, #0x0, 0x857c
0000000000008578	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000857c	str	x19, [x20]
0000000000008580	mov	x0, x19
0000000000008584	ldp	x29, x30, [sp, #0x10]
0000000000008588	ldp	x20, x19, [sp], #0x20
000000000000858c	ret
_kfun:kotlin.String#<get-length>(){}kotlin.Int:
0000000000008590	stp	x20, x19, [sp, #-0x20]!
0000000000008594	stp	x29, x30, [sp, #0x10]
0000000000008598	add	x29, sp, #0x10
000000000000859c	mov	x19, x0
00000000000085a0	adr	x8, #0x7a2a3
00000000000085a4	nop
00000000000085a8	ldarb	w8, [x8]
00000000000085ac	tbz	w8, #0x0, 0x85b4
00000000000085b0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000085b4	ldr	w0, [x19, #0x8]
00000000000085b8	ldp	x29, x30, [sp, #0x10]
00000000000085bc	ldp	x20, x19, [sp], #0x20
00000000000085c0	ret
_kfun:kotlin.Throwable#<init>(kotlin.String?;kotlin.Throwable?){}:
00000000000085c4	sub	sp, sp, #0x140
00000000000085c8	stp	x28, x27, [sp, #0xe0]
00000000000085cc	stp	x26, x25, [sp, #0xf0]
00000000000085d0	stp	x24, x23, [sp, #0x100]
00000000000085d4	stp	x22, x21, [sp, #0x110]
00000000000085d8	stp	x20, x19, [sp, #0x120]
00000000000085dc	stp	x29, x30, [sp, #0x130]
00000000000085e0	add	x29, sp, #0x130
00000000000085e4	mov	x20, x1
00000000000085e8	mov	x19, x0
00000000000085ec	movi.16b	v0, #0x0
00000000000085f0	stp	q0, q0, [sp, #0x10]
00000000000085f4	str	q0, [sp, #0x30]
00000000000085f8	add	x8, sp, #0x10
00000000000085fc	add	x21, x8, #0x18
0000000000008600	adrp	x0, 96 ; 0x68000
0000000000008604	add	x0, x0, #0xa00
0000000000008608	ldr	x9, [x0]
000000000000860c	blr	x9
0000000000008610	ldr	x24, [x0]
0000000000008614	ldr	x9, [x24, #0x110]
0000000000008618	str	x8, [x24, #0x110]
000000000000861c	mov	x8, #0x600000000
0000000000008620	stp	x9, x8, [sp, #0x18]
0000000000008624	adr	x23, #0x7a21f
0000000000008628	nop
000000000000862c	ldarb	w8, [x23]
0000000000008630	tbz	w8, #0x0, 0x8638
0000000000008634	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000008638	stp	x20, xzr, [x19, #0x8]
000000000000863c	mov	x0, x21
0000000000008640	bl	_Kotlin_getCurrentStackTrace
0000000000008644	str	x0, [x19, #0x18]
0000000000008648	ldr	x8, [x24, #0x118]
000000000000864c	add	x0, x8, #0x70
0000000000008650	mov	w1, #0x18
0000000000008654	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000008658	mov	x21, x0
000000000000865c	adr	x8, #0x4d244
0000000000008660	nop
0000000000008664	str	x8, [x21, #0x10]!
0000000000008668	stur	xzr, [x21, #-0x8]
000000000000866c	str	x21, [sp, #0x30]
0000000000008670	str	x19, [x21, #0x8]
0000000000008674	ldr	x8, [x24, #0x118]
0000000000008678	add	x0, x8, #0x70
000000000000867c	mov	w1, #0x28
0000000000008680	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000008684	mov	x20, x0
0000000000008688	adr	x8, #0x4d5e8
000000000000868c	nop
0000000000008690	mov	x25, x0
0000000000008694	str	x8, [x25, #0x10]!
0000000000008698	str	xzr, [x0, #0x8]
000000000000869c	movi.16b	v0, #0x0
00000000000086a0	stp	q0, q0, [sp, #0x40]
00000000000086a4	add	x8, sp, #0x40
00000000000086a8	ldp	x9, x10, [x24, #0x110]
00000000000086ac	str	x8, [x24, #0x110]
00000000000086b0	mov	x8, #0x700000000
00000000000086b4	stp	x9, x8, [sp, #0x48]
00000000000086b8	str	x25, [sp, #0x38]
00000000000086bc	str	xzr, [sp, #0x70]
00000000000086c0	str	q0, [sp, #0x60]
00000000000086c4	add	x0, x10, #0x70
00000000000086c8	mov	w1, #0x20
00000000000086cc	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000086d0	adr	x26, #0x4d480
00000000000086d4	nop
00000000000086d8	str	x26, [x0, #0x10]!
00000000000086dc	stur	xzr, [x0, #-0x8]
00000000000086e0	str	x0, [sp, #0x58]
00000000000086e4	str	x21, [x0, #0x8]
00000000000086e8	str	x0, [x20, #0x18]
00000000000086ec	adr	x27, #0x7a1b4
00000000000086f0	nop
00000000000086f4	ldar	x21, [x27]
00000000000086f8	cmp	x21, #0x1
00000000000086fc	b.hi	0x88c4
0000000000008700	ldp	x8, x9, [x24, #0x120]
0000000000008704	cmp	x8, x9
0000000000008708	b.eq	0x8728
000000000000870c	mov	x10, x9
0000000000008710	ldr	x11, [x10, #-0x10]!
0000000000008714	cmp	x11, x27
0000000000008718	b.eq	0x87e0
000000000000871c	mov	x9, x10
0000000000008720	cmp	x10, x8
0000000000008724	b.ne	0x8710
0000000000008728	add	x22, x24, #0x120
000000000000872c	add	x0, x24, #0x138
0000000000008730	mov	w9, #0x1
0000000000008734	ldaxr	w8, [x0]
0000000000008738	stlxr	w10, w9, [x0]
000000000000873c	cbnz	w10, 0x8734
0000000000008740	b	0x8750
0000000000008744	mov	w28, #0x1
0000000000008748	stlxr	w9, x28, [x27]
000000000000874c	cbz	w9, 0x8760
0000000000008750	ldaxr	x21, [x27]
0000000000008754	cbz	x21, 0x8744
0000000000008758	mov	w28, #0x0
000000000000875c	clrex
0000000000008760	cmp	x21, #0x1
0000000000008764	b.eq	0x8750
0000000000008768	cbz	x24, 0x8790
000000000000876c	ldaxr	w9, [x0]
0000000000008770	stlxr	w10, w8, [x0]
0000000000008774	cbnz	w10, 0x876c
0000000000008778	cbnz	w8, 0x8790
000000000000877c	cmp	w9, #0x1
0000000000008780	b.ne	0x8790
0000000000008784	ldarb	w8, [x23]
0000000000008788	tbz	w8, #0x0, 0x8790
000000000000878c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000008790	tbz	w28, #0x0, 0x87d8
0000000000008794	ldr	x8, [x24, #0x118]
0000000000008798	add	x0, x8, #0x70
000000000000879c	mov	w1, #0x10
00000000000087a0	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000087a4	mov	x21, x0
00000000000087a8	adr	x8, #0x4d558
00000000000087ac	nop
00000000000087b0	str	x8, [x21, #0x10]!
00000000000087b4	stur	xzr, [x21, #-0x8]
00000000000087b8	str	x21, [sp, #0x60]
00000000000087bc	ldp	x9, x8, [x24, #0x128]
00000000000087c0	cmp	x9, x8
00000000000087c4	b.hs	0x87ec
00000000000087c8	stp	x27, x21, [x9]
00000000000087cc	add	x8, x9, #0x10
00000000000087d0	str	x8, [x24, #0x128]
00000000000087d4	b	0x887c
00000000000087d8	str	x21, [sp, #0x60]
00000000000087dc	b	0x88c4
00000000000087e0	ldur	x21, [x9, #-0x8]
00000000000087e4	str	x21, [sp, #0x60]
00000000000087e8	b	0x88c4
00000000000087ec	str	x22, [sp, #0x8]
00000000000087f0	ldr	x10, [x22]
00000000000087f4	sub	x9, x9, x10
00000000000087f8	asr	x22, x9, #4
00000000000087fc	add	x9, x22, #0x1
0000000000008800	lsr	x11, x9, #60
0000000000008804	cbnz	x11, 0x89b0
0000000000008808	sub	x8, x8, x10
000000000000880c	asr	x10, x8, #3
0000000000008810	cmp	x10, x9
0000000000008814	csel	x9, x9, x10, lo
0000000000008818	mov	x10, #0x7ffffffffffffff
000000000000881c	cmp	x10, x8, asr #4
0000000000008820	mov	x8, #0xfffffffffffffff
0000000000008824	csel	x23, x9, x8, hi
0000000000008828	mov	x0, x23
000000000000882c	mov	w1, #0x10
0000000000008830	bl	0x4db20 ; symbol stub for: _calloc
0000000000008834	add	x8, x0, x22, lsl #4
0000000000008838	add	x28, x0, x23, lsl #4
000000000000883c	stp	x27, x21, [x8]
0000000000008840	add	x22, x8, #0x10
0000000000008844	ldp	x1, x9, [x24, #0x120]
0000000000008848	sub	x2, x9, x1
000000000000884c	sub	x23, x8, x2
0000000000008850	cmp	x2, #0x1
0000000000008854	b.lt	0x8868
0000000000008858	mov	x0, x23
000000000000885c	bl	0x4dbec ; symbol stub for: _memcpy
0000000000008860	ldr	x8, [sp, #0x8]
0000000000008864	ldr	x1, [x8]
0000000000008868	stp	x23, x22, [x24, #0x120]
000000000000886c	str	x28, [x24, #0x130]
0000000000008870	cbz	x1, 0x887c
0000000000008874	mov	x0, x1
0000000000008878	bl	0x4dba4 ; symbol stub for: _free
000000000000887c	mov	w0, #0x1
0000000000008880	mov	w1, #0x28
0000000000008884	bl	0x4db20 ; symbol stub for: _calloc
0000000000008888	mov	x8, x24
000000000000888c	ldr	x9, [x8, #0x18]!
0000000000008890	sub	x10, x8, #0x8
0000000000008894	stp	x27, x10, [x0, #0x10]
0000000000008898	stp	x9, x8, [x0]
000000000000889c	str	x0, [x9, #0x8]
00000000000088a0	str	x0, [x8]
00000000000088a4	ldr	x9, [x8, #0x10]
00000000000088a8	add	x9, x9, #0x1
00000000000088ac	str	x9, [x8, #0x10]
00000000000088b0	str	x0, [x0, #0x20]
00000000000088b4	stlr	x21, [x27]
00000000000088b8	ldr	x9, [x8, #0x110]
00000000000088bc	sub	x9, x9, #0x10
00000000000088c0	str	x9, [x8, #0x110]
00000000000088c4	ldr	x8, [x24, #0x118]
00000000000088c8	add	x0, x8, #0x70
00000000000088cc	mov	w1, #0x20
00000000000088d0	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000088d4	str	x26, [x0, #0x10]!
00000000000088d8	stur	xzr, [x0, #-0x8]
00000000000088dc	str	x0, [sp, #0x68]
00000000000088e0	str	x21, [x0, #0x8]
00000000000088e4	str	x0, [x20, #0x20]
00000000000088e8	ldr	x8, [x24, #0x118]
00000000000088ec	add	x0, x8, #0x70
00000000000088f0	mov	w1, #0x20
00000000000088f4	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000088f8	mov	x21, x0
00000000000088fc	adr	x8, #0x4d494
0000000000008900	nop
0000000000008904	str	x8, [x21, #0x10]!
0000000000008908	stur	xzr, [x21, #-0x8]
000000000000890c	movi.16b	v0, #0x0
0000000000008910	stp	q0, q0, [sp, #0x80]
0000000000008914	add	x8, sp, #0x80
0000000000008918	ldp	x9, x10, [x24, #0x110]
000000000000891c	str	x8, [x24, #0x110]
0000000000008920	mov	x8, #0x500000000
0000000000008924	stp	x9, x8, [sp, #0x88]
0000000000008928	str	x21, [sp, #0x70]
000000000000892c	str	xzr, [sp, #0xa0]
0000000000008930	add	x0, x10, #0x70
0000000000008934	mov	w1, #0x18
0000000000008938	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000893c	adr	x22, #0x4d2a4
0000000000008940	nop
0000000000008944	str	x22, [x0, #0x10]!
0000000000008948	stur	xzr, [x0, #-0x8]
000000000000894c	str	x0, [sp, #0x98]
0000000000008950	str	wzr, [x0, #0x8]
0000000000008954	str	x0, [x21, #0x8]
0000000000008958	ldr	x8, [x24, #0x118]
000000000000895c	add	x0, x8, #0x70
0000000000008960	mov	w1, #0x18
0000000000008964	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000008968	str	x22, [x0, #0x10]!
000000000000896c	stur	xzr, [x0, #-0x8]
0000000000008970	str	x0, [sp, #0xa0]
0000000000008974	str	wzr, [x0, #0x8]
0000000000008978	str	x0, [x21, #0x10]
000000000000897c	str	x21, [x20, #0x28]
0000000000008980	str	x25, [sp, #0x38]
0000000000008984	str	x25, [x19, #0x20]
0000000000008988	ldr	x8, [sp, #0x18]
000000000000898c	str	x8, [x24, #0x110]
0000000000008990	ldp	x29, x30, [sp, #0x130]
0000000000008994	ldp	x20, x19, [sp, #0x120]
0000000000008998	ldp	x22, x21, [sp, #0x110]
000000000000899c	ldp	x24, x23, [sp, #0x100]
00000000000089a0	ldp	x26, x25, [sp, #0xf0]
00000000000089a4	ldp	x28, x27, [sp, #0xe0]
00000000000089a8	add	sp, sp, #0x140
00000000000089ac	ret
00000000000089b0	ldr	x0, [sp, #0x8]
00000000000089b4	bl	0x4d8ec ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
_kfun:kotlin.Throwable#<get-message>(){}kotlin.String?:
00000000000089b8	stp	x20, x19, [sp, #-0x20]!
00000000000089bc	stp	x29, x30, [sp, #0x10]
00000000000089c0	add	x29, sp, #0x10
00000000000089c4	mov	x19, x1
00000000000089c8	mov	x20, x0
00000000000089cc	adr	x8, #0x79e77
00000000000089d0	nop
00000000000089d4	ldarb	w8, [x8]
00000000000089d8	tbz	w8, #0x0, 0x89e0
00000000000089dc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000089e0	ldr	x0, [x20, #0x8]
00000000000089e4	str	x0, [x19]
00000000000089e8	ldp	x29, x30, [sp, #0x10]
00000000000089ec	ldp	x20, x19, [sp], #0x20
00000000000089f0	ret
_kfun:kotlin.Throwable#<get-cause>(){}kotlin.Throwable?:
00000000000089f4	stp	x20, x19, [sp, #-0x20]!
00000000000089f8	stp	x29, x30, [sp, #0x10]
00000000000089fc	add	x29, sp, #0x10
0000000000008a00	mov	x19, x1
0000000000008a04	mov	x20, x0
0000000000008a08	adr	x8, #0x79e3b
0000000000008a0c	nop
0000000000008a10	ldarb	w8, [x8]
0000000000008a14	tbz	w8, #0x0, 0x8a1c
0000000000008a18	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000008a1c	ldr	x0, [x20, #0x10]
0000000000008a20	str	x0, [x19]
0000000000008a24	ldp	x29, x30, [sp, #0x10]
0000000000008a28	ldp	x20, x19, [sp], #0x20
0000000000008a2c	ret
_kfun:kotlin.Throwable.<get-stackTraceStrings>#internal:
0000000000008a30	stp	x20, x19, [sp, #-0x20]!
0000000000008a34	stp	x29, x30, [sp, #0x10]
0000000000008a38	add	x29, sp, #0x10
0000000000008a3c	mov	x19, x1
0000000000008a40	mov	x20, x0
0000000000008a44	adr	x8, #0x79dff
0000000000008a48	nop
0000000000008a4c	ldarb	w8, [x8]
0000000000008a50	tbz	w8, #0x0, 0x8a58
0000000000008a54	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000008a58	ldr	x0, [x20, #0x20]
0000000000008a5c	ldr	x8, [x0]
0000000000008a60	and	x8, x8, #0xfffffffffffffffc
0000000000008a64	ldr	x8, [x8]
0000000000008a68	ldr	w9, [x8, #0x3c]
0000000000008a6c	ldr	x8, [x8, #0x40]
0000000000008a70	tbnz	w9, #0x1f, 0x8a80
0000000000008a74	mov	w10, #0x150
0000000000008a78	and	x9, x9, x10
0000000000008a7c	b	0x8b04
0000000000008a80	neg	w10, w9
0000000000008a84	mvn	w9, w9
0000000000008a88	cmp	w10, #0x9
0000000000008a8c	b.ge	0x8ac4
0000000000008a90	cmp	w10, #0x2
0000000000008a94	b.lt	0x8af8
0000000000008a98	mov	x10, #0x0
0000000000008a9c	mov	x11, x8
0000000000008aa0	ldr	w12, [x11]
0000000000008aa4	cmp	w12, #0x14f
0000000000008aa8	b.gt	0x8b00
0000000000008aac	add	x10, x10, #0x1
0000000000008ab0	add	x11, x11, #0x10
0000000000008ab4	cmp	x9, x10
0000000000008ab8	b.ne	0x8aa0
0000000000008abc	mov	x10, x9
0000000000008ac0	b	0x8b00
0000000000008ac4	mov	w10, #0x0
0000000000008ac8	add	w11, w9, w10
0000000000008acc	cmp	w11, #0x0
0000000000008ad0	cinc	w11, w11, lt
0000000000008ad4	asr	w11, w11, #1
0000000000008ad8	sbfiz	x12, x11, #4, #32
0000000000008adc	ldr	w12, [x8, x12]
0000000000008ae0	cmp	w12, #0x150
0000000000008ae4	csinc	w10, w10, w11, ge
0000000000008ae8	csel	w9, w9, w11, lt
0000000000008aec	cmp	w10, w9
0000000000008af0	b.lt	0x8ac8
0000000000008af4	b	0x8b00
0000000000008af8	mov	w10, #0x0
0000000000008afc	b	0x8b00
0000000000008b00	sxtw	x9, w10
0000000000008b04	add	x8, x8, x9, lsl #4
0000000000008b08	ldr	x8, [x8, #0x8]
0000000000008b0c	ldr	x8, [x8]
0000000000008b10	mov	x1, x19
0000000000008b14	blr	x8
0000000000008b18	str	x0, [x19]
0000000000008b1c	ldp	x29, x30, [sp, #0x10]
0000000000008b20	ldp	x20, x19, [sp], #0x20
0000000000008b24	ret
_kfun:kotlin.Throwable#printStackTrace(){}:
0000000000008b28	sub	sp, sp, #0xd0
0000000000008b2c	stp	x22, x21, [sp, #0xa0]
0000000000008b30	stp	x20, x19, [sp, #0xb0]
0000000000008b34	stp	x29, x30, [sp, #0xc0]
0000000000008b38	add	x29, sp, #0xc0
0000000000008b3c	mov	x19, x0
0000000000008b40	movi.16b	v0, #0x0
0000000000008b44	stp	q0, q0, [sp, #0x30]
0000000000008b48	stp	q0, q0, [sp, #0x10]
0000000000008b4c	adr	x8, #0x4ccc4
0000000000008b50	nop
0000000000008b54	orr	x8, x8, #0x3
0000000000008b58	str	x8, [sp, #0x8]
0000000000008b5c	adrp	x0, 96 ; 0x68000
0000000000008b60	add	x0, x0, #0xa00
0000000000008b64	ldr	x8, [x0]
0000000000008b68	blr	x8
0000000000008b6c	ldr	x21, [x0]
0000000000008b70	ldr	x8, [x21, #0x110]
0000000000008b74	add	x9, sp, #0x30
0000000000008b78	str	x9, [x21, #0x110]
0000000000008b7c	mov	x20, #0x400000000
0000000000008b80	stp	x8, x20, [sp, #0x38]
0000000000008b84	adr	x8, #0x79cbf
0000000000008b88	nop
0000000000008b8c	ldarb	w8, [x8]
0000000000008b90	tbz	w8, #0x0, 0x8b98
0000000000008b94	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000008b98	add	x8, sp, #0x8
0000000000008b9c	str	x8, [sp, #0x48]
0000000000008ba0	movi.16b	v0, #0x0
0000000000008ba4	stp	q0, q0, [sp, #0x50]
0000000000008ba8	str	xzr, [sp, #0x70]
0000000000008bac	add	x8, sp, #0x50
0000000000008bb0	ldp	x9, x10, [x21, #0x110]
0000000000008bb4	str	x8, [x21, #0x110]
0000000000008bb8	mov	x8, #0x500000000
0000000000008bbc	stp	x9, x8, [sp, #0x58]
0000000000008bc0	str	x19, [sp, #0x10]
0000000000008bc4	add	x0, x10, #0x70
0000000000008bc8	mov	w1, #0x20
0000000000008bcc	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000008bd0	mov	x19, x0
0000000000008bd4	adr	x8, #0x4f7bc
0000000000008bd8	nop
0000000000008bdc	str	x8, [x19, #0x10]!
0000000000008be0	stur	xzr, [x19, #-0x8]
0000000000008be4	str	x19, [sp, #0x68]
0000000000008be8	mov	x0, x19
0000000000008bec	mov	w1, #0xa
0000000000008bf0	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
0000000000008bf4	str	x19, [sp, #0x18]
0000000000008bf8	ldr	x8, [x21, #0x118]
0000000000008bfc	add	x0, x8, #0x70
0000000000008c00	mov	w1, #0x18
0000000000008c04	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000008c08	mov	x19, x0
0000000000008c0c	adr	x8, #0x4f074
0000000000008c10	nop
0000000000008c14	str	x8, [x19, #0x10]!
0000000000008c18	stur	xzr, [x19, #-0x8]
0000000000008c1c	str	x19, [sp, #0x70]
0000000000008c20	movi.16b	v0, #0x0
0000000000008c24	stp	q0, q0, [x29, #-0x40]
0000000000008c28	sub	x8, x29, #0x40
0000000000008c2c	ldp	x9, x10, [x21, #0x110]
0000000000008c30	str	x8, [x21, #0x110]
0000000000008c34	stp	x9, x20, [x29, #-0x38]
0000000000008c38	add	x0, x10, #0x70
0000000000008c3c	mov	w1, #0x60
0000000000008c40	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000008c44	mov	x20, x0
0000000000008c48	adr	x8, #0x4e988
0000000000008c4c	nop
0000000000008c50	str	x8, [x20, #0x10]!
0000000000008c54	stur	xzr, [x20, #-0x8]
0000000000008c58	stur	x20, [x29, #-0x28]
0000000000008c5c	mov	x0, x20
0000000000008c60	mov	w1, #0x8
0000000000008c64	bl	"_kfun:kotlin.collections.HashMap#<init>(kotlin.Int){}"
0000000000008c68	str	x20, [x19, #0x8]
0000000000008c6c	str	x19, [sp, #0x20]
0000000000008c70	ldr	x8, [sp, #0x58]
0000000000008c74	str	x8, [x21, #0x110]
0000000000008c78	mov	w8, #0x1
0000000000008c7c	strb	w8, [sp, #0x28]
0000000000008c80	ldr	x1, [sp, #0x10]
0000000000008c84	adr	x2, #0x58404
0000000000008c88	nop
0000000000008c8c	add	x0, sp, #0x8
0000000000008c90	mov	x3, x2
0000000000008c94	bl	"_kfun:kotlin.Throwable.ExceptionTraceBuilder.dumpFullTrace#internal"
0000000000008c98	ldr	x8, [sp, #0x38]
0000000000008c9c	str	x8, [x21, #0x110]
0000000000008ca0	ldp	x29, x30, [sp, #0xc0]
0000000000008ca4	ldp	x20, x19, [sp, #0xb0]
0000000000008ca8	ldp	x22, x21, [sp, #0xa0]
0000000000008cac	add	sp, sp, #0xd0
0000000000008cb0	ret
_kfun:kotlin.Throwable.ExceptionTraceBuilder.endln#internal:
0000000000008cb4	sub	sp, sp, #0xd0
0000000000008cb8	stp	x24, x23, [sp, #0x90]
0000000000008cbc	stp	x22, x21, [sp, #0xa0]
0000000000008cc0	stp	x20, x19, [sp, #0xb0]
0000000000008cc4	stp	x29, x30, [sp, #0xc0]
0000000000008cc8	add	x29, sp, #0xc0
0000000000008ccc	mov	x19, x1
0000000000008cd0	mov	x20, x0
0000000000008cd4	movi.16b	v0, #0x0
0000000000008cd8	stp	q0, q0, [sp]
0000000000008cdc	str	xzr, [sp, #0x20]
0000000000008ce0	adrp	x0, 96 ; 0x68000
0000000000008ce4	add	x0, x0, #0xa00
0000000000008ce8	ldr	x8, [x0]
0000000000008cec	blr	x8
0000000000008cf0	ldr	x22, [x0]
0000000000008cf4	ldr	x8, [x22, #0x110]
0000000000008cf8	mov	x9, sp
0000000000008cfc	str	x9, [x22, #0x110]
0000000000008d00	mov	x9, #0x500000000
0000000000008d04	stp	x8, x9, [sp, #0x8]
0000000000008d08	adr	x8, #0x79b3b
0000000000008d0c	nop
0000000000008d10	ldarb	w8, [x8]
0000000000008d14	tbz	w8, #0x0, 0x8d1c
0000000000008d18	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000008d1c	ldrb	w8, [x20, #0x20]
0000000000008d20	cmp	w8, #0x1
0000000000008d24	b.ne	0x8e04
0000000000008d28	mov	x0, x19
0000000000008d2c	bl	"_kfun:kotlin.io#println(kotlin.Any?){}"
0000000000008d30	movi.16b	v0, #0x0
0000000000008d34	stp	q0, q0, [sp, #0x30]
0000000000008d38	str	xzr, [sp, #0x80]
0000000000008d3c	stp	q0, q0, [sp, #0x60]
0000000000008d40	str	q0, [sp, #0x50]
0000000000008d44	ldr	x8, [x22, #0x110]
0000000000008d48	add	x9, sp, #0x30
0000000000008d4c	str	x9, [x22, #0x110]
0000000000008d50	mov	x9, #0xb00000000
0000000000008d54	stp	x8, x9, [sp, #0x38]
0000000000008d58	ldr	w20, [x19, #0x10]
0000000000008d5c	tbz	w20, #0x1f, 0x8de4
0000000000008d60	ldr	x23, [x19, #0x8]
0000000000008d64	stp	x23, x23, [sp, #0x78]
0000000000008d68	ldr	w2, [x23, #0x8]
0000000000008d6c	and	w21, w2, w2, asr #31
0000000000008d70	mov	x0, x20
0000000000008d74	mov	x1, x21
0000000000008d78	bl	_checkRangeIndexes
0000000000008d7c	ldr	xzr, [x23]
0000000000008d80	cmp	w20, w21
0000000000008d84	b.ge	0x8de4
0000000000008d88	sxtw	x8, w20
0000000000008d8c	add	x8, x23, x8, lsl #1
0000000000008d90	add	x8, x8, #0x10
0000000000008d94	mvn	w9, w20
0000000000008d98	add	w9, w21, w9
0000000000008d9c	cmp	w9, #0xf
0000000000008da0	b.lo	0x8dd4
0000000000008da4	add	x10, x9, #0x1
0000000000008da8	and	x9, x10, #0x1fffffff0
0000000000008dac	add	w20, w20, w9
0000000000008db0	movi.16b	v0, #0x0
0000000000008db4	mov	x11, x8
0000000000008db8	mov	x12, x9
0000000000008dbc	stp	q0, q0, [x11], #0x20
0000000000008dc0	subs	x12, x12, #0x10
0000000000008dc4	b.ne	0x8dbc
0000000000008dc8	cmp	x10, x9
0000000000008dcc	b.eq	0x8de4
0000000000008dd0	add	x8, x8, x9, lsl #1
0000000000008dd4	sub	w9, w21, w20
0000000000008dd8	strh	wzr, [x8], #0x2
0000000000008ddc	subs	w9, w9, #0x1
0000000000008de0	b.ne	0x8dd8
0000000000008de4	mov	x0, x19
0000000000008de8	mov	w1, #0x0
0000000000008dec	bl	"_kfun:kotlin.text.StringBuilder#ensureCapacity(kotlin.Int){}"
0000000000008df0	str	wzr, [x19, #0x10]
0000000000008df4	ldr	x8, [sp, #0x38]
0000000000008df8	str	x8, [x22, #0x110]
0000000000008dfc	str	x19, [sp, #0x18]
0000000000008e00	b	0x8e18
0000000000008e04	mov	x8, sp
0000000000008e08	add	x2, x8, #0x20
0000000000008e0c	mov	x0, x19
0000000000008e10	mov	w1, #0xa
0000000000008e14	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Char){}kotlin.text.StringBuilder"
0000000000008e18	ldr	x8, [sp, #0x8]
0000000000008e1c	str	x8, [x22, #0x110]
0000000000008e20	ldp	x29, x30, [sp, #0xc0]
0000000000008e24	ldp	x20, x19, [sp, #0xb0]
0000000000008e28	ldp	x22, x21, [sp, #0xa0]
0000000000008e2c	ldp	x24, x23, [sp, #0x90]
0000000000008e30	add	sp, sp, #0xd0
0000000000008e34	ret
_kfun:kotlin.Throwable.ExceptionTraceBuilder.dumpFullTrace#internal:
0000000000008e38	sub	sp, sp, #0xa0
0000000000008e3c	stp	x26, x25, [sp, #0x50]
0000000000008e40	stp	x24, x23, [sp, #0x60]
0000000000008e44	stp	x22, x21, [sp, #0x70]
0000000000008e48	stp	x20, x19, [sp, #0x80]
0000000000008e4c	stp	x29, x30, [sp, #0x90]
0000000000008e50	add	x29, sp, #0x90
0000000000008e54	mov	x21, x3
0000000000008e58	mov	x19, x2
0000000000008e5c	mov	x22, x1
0000000000008e60	mov	x20, x0
0000000000008e64	movi.16b	v0, #0x0
0000000000008e68	stp	q0, q0, [sp]
0000000000008e6c	str	xzr, [sp, #0x40]
0000000000008e70	stp	q0, q0, [sp, #0x20]
0000000000008e74	mov	x25, sp
0000000000008e78	adrp	x0, 96 ; 0x68000
0000000000008e7c	add	x0, x0, #0xa00
0000000000008e80	ldr	x8, [x0]
0000000000008e84	blr	x8
0000000000008e88	ldr	x23, [x0]
0000000000008e8c	ldr	x8, [x23, #0x110]
0000000000008e90	str	x25, [x23, #0x110]
0000000000008e94	mov	x9, #0x900000000
0000000000008e98	stp	x8, x9, [sp, #0x8]
0000000000008e9c	adr	x24, #0x799a7
0000000000008ea0	nop
0000000000008ea4	ldarb	w8, [x24]
0000000000008ea8	tbz	w8, #0x0, 0x8eb0
0000000000008eac	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000008eb0	mov	x0, x20
0000000000008eb4	mov	x1, x22
0000000000008eb8	mov	x2, x19
0000000000008ebc	mov	x3, x21
0000000000008ec0	bl	"_kfun:kotlin.Throwable.ExceptionTraceBuilder.dumpSelfTrace#internal"
0000000000008ec4	cbz	w0, 0x8f48
0000000000008ec8	add	x21, x25, #0x40
0000000000008ecc	mov	x8, sp
0000000000008ed0	add	x1, x8, #0x18
0000000000008ed4	ldr	x8, [x22]
0000000000008ed8	and	x8, x8, #0xfffffffffffffffc
0000000000008edc	ldr	x8, [x8]
0000000000008ee0	ldr	x8, [x8, #0x88]
0000000000008ee4	mov	x0, x22
0000000000008ee8	blr	x8
0000000000008eec	adr	x22, #0x58324
0000000000008ef0	nop
0000000000008ef4	b	0x8f30
0000000000008ef8	ldr	x1, [sp, #0x20]
0000000000008efc	str	x1, [sp, #0x30]
0000000000008f00	mov	x0, x20
0000000000008f04	mov	x2, x19
0000000000008f08	mov	x3, x22
0000000000008f0c	bl	"_kfun:kotlin.Throwable.ExceptionTraceBuilder.dumpSelfTrace#internal"
0000000000008f10	ldr	x0, [sp, #0x20]
0000000000008f14	str	x0, [sp, #0x38]
0000000000008f18	ldr	x8, [x0]
0000000000008f1c	and	x8, x8, #0xfffffffffffffffc
0000000000008f20	ldr	x8, [x8]
0000000000008f24	ldr	x8, [x8, #0x88]
0000000000008f28	mov	x1, x21
0000000000008f2c	blr	x8
0000000000008f30	stp	x0, x0, [sp, #0x20]
0000000000008f34	cbz	x0, 0x8f48
0000000000008f38	ldarb	w8, [x24]
0000000000008f3c	tbz	w8, #0x0, 0x8ef8
0000000000008f40	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000008f44	b	0x8ef8
0000000000008f48	ldr	x8, [sp, #0x8]
0000000000008f4c	str	x8, [x23, #0x110]
0000000000008f50	ldp	x29, x30, [sp, #0x90]
0000000000008f54	ldp	x20, x19, [sp, #0x80]
0000000000008f58	ldp	x22, x21, [sp, #0x70]
0000000000008f5c	ldp	x24, x23, [sp, #0x60]
0000000000008f60	ldp	x26, x25, [sp, #0x50]
0000000000008f64	add	sp, sp, #0xa0
0000000000008f68	ret
_kfun:kotlin.Throwable.ExceptionTraceBuilder.dumpSelfTrace#internal:
0000000000008f6c	sub	sp, sp, #0x170
0000000000008f70	stp	x28, x27, [sp, #0x110]
0000000000008f74	stp	x26, x25, [sp, #0x120]
0000000000008f78	stp	x24, x23, [sp, #0x130]
0000000000008f7c	stp	x22, x21, [sp, #0x140]
0000000000008f80	stp	x20, x19, [sp, #0x150]
0000000000008f84	stp	x29, x30, [sp, #0x160]
0000000000008f88	add	x29, sp, #0x160
0000000000008f8c	mov	x22, x3
0000000000008f90	str	x2, [sp, #0x28]
0000000000008f94	mov	x28, x1
0000000000008f98	mov	x20, x0
0000000000008f9c	movi.16b	v0, #0x0
0000000000008fa0	stp	q0, q0, [sp, #0x30]
0000000000008fa4	str	xzr, [sp, #0x100]
0000000000008fa8	stp	q0, q0, [sp, #0xe0]
0000000000008fac	stp	q0, q0, [sp, #0xc0]
0000000000008fb0	stp	q0, q0, [sp, #0xa0]
0000000000008fb4	stp	q0, q0, [sp, #0x80]
0000000000008fb8	stp	q0, q0, [sp, #0x60]
0000000000008fbc	str	q0, [sp, #0x50]
0000000000008fc0	add	x21, sp, #0x30
0000000000008fc4	adrp	x0, 96 ; 0x68000
0000000000008fc8	add	x0, x0, #0xa00
0000000000008fcc	ldr	x8, [x0]
0000000000008fd0	blr	x8
0000000000008fd4	ldr	x19, [x0]
0000000000008fd8	ldr	x8, [x19, #0x110]
0000000000008fdc	str	x21, [x19, #0x110]
0000000000008fe0	mov	x9, #0x1b00000000
0000000000008fe4	stp	x8, x9, [sp, #0x38]
0000000000008fe8	adr	x8, #0x7985b
0000000000008fec	nop
0000000000008ff0	ldarb	w8, [x8]
0000000000008ff4	tbz	w8, #0x0, 0x8ffc
0000000000008ff8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000008ffc	ldr	x0, [x20, #0x18]
0000000000009000	ldr	x8, [x0]
0000000000009004	and	x8, x8, #0xfffffffffffffffc
0000000000009008	ldr	x8, [x8]
000000000000900c	ldr	w9, [x8, #0x3c]
0000000000009010	ldr	x8, [x8, #0x40]
0000000000009014	tbnz	w9, #0x1f, 0x9020
0000000000009018	and	x9, x9, #0xc0
000000000000901c	b	0x90a4
0000000000009020	neg	w10, w9
0000000000009024	mvn	w9, w9
0000000000009028	cmp	w10, #0x9
000000000000902c	b.ge	0x9064
0000000000009030	cmp	w10, #0x2
0000000000009034	b.lt	0x9098
0000000000009038	mov	x10, #0x0
000000000000903c	mov	x11, x8
0000000000009040	ldr	w12, [x11]
0000000000009044	cmp	w12, #0xbf
0000000000009048	b.gt	0x90a0
000000000000904c	add	x10, x10, #0x1
0000000000009050	add	x11, x11, #0x10
0000000000009054	cmp	x9, x10
0000000000009058	b.ne	0x9040
000000000000905c	mov	x10, x9
0000000000009060	b	0x90a0
0000000000009064	mov	w10, #0x0
0000000000009068	add	w11, w9, w10
000000000000906c	cmp	w11, #0x0
0000000000009070	cinc	w11, w11, lt
0000000000009074	asr	w11, w11, #1
0000000000009078	sbfiz	x12, x11, #4, #32
000000000000907c	ldr	w12, [x8, x12]
0000000000009080	cmp	w12, #0xc0
0000000000009084	csinc	w10, w10, w11, ge
0000000000009088	csel	w9, w9, w11, lt
000000000000908c	cmp	w10, w9
0000000000009090	b.lt	0x9068
0000000000009094	b	0x90a0
0000000000009098	mov	w10, #0x0
000000000000909c	b	0x90a0
00000000000090a0	sxtw	x9, w10
00000000000090a4	add	x8, x8, x9, lsl #4
00000000000090a8	ldr	x8, [x8, #0x8]
00000000000090ac	ldr	x8, [x8]
00000000000090b0	mov	x1, x28
00000000000090b4	blr	x8
00000000000090b8	ldr	x23, [x20, #0x10]
00000000000090bc	tbz	w0, #0x0, 0x91c0
00000000000090c0	str	x19, [sp, #0x10]
00000000000090c4	add	x24, x21, #0x50
00000000000090c8	add	x25, x21, #0x60
00000000000090cc	add	x2, x21, #0x48
00000000000090d0	add	x26, x21, #0x58
00000000000090d4	mov	x0, x23
00000000000090d8	ldr	x1, [sp, #0x28]
00000000000090dc	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
00000000000090e0	mov	x1, x22
00000000000090e4	mov	x2, x24
00000000000090e8	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
00000000000090ec	ldr	x8, [x28]
00000000000090f0	and	x8, x8, #0xfffffffffffffffc
00000000000090f4	ldr	x8, [x8]
00000000000090f8	ldr	x8, [x8, #0x80]
00000000000090fc	mov	x0, x28
0000000000009100	mov	x1, x26
0000000000009104	blr	x8
0000000000009108	mov	x1, x0
000000000000910c	mov	x0, x23
0000000000009110	mov	x2, x25
0000000000009114	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000009118	mov	x0, x20
000000000000911c	mov	x1, x23
0000000000009120	bl	"_kfun:kotlin.Throwable.ExceptionTraceBuilder.endln#internal"
0000000000009124	stp	x28, x20, [sp, #0x18]
0000000000009128	ldr	x8, [x20, #0x8]
000000000000912c	cmp	x8, x28
0000000000009130	b.eq	0x9258
0000000000009134	mov	x20, #0x0
0000000000009138	ldr	x22, [x8, #0x18]
000000000000913c	ldr	w8, [x22, #0x8]
0000000000009140	ldr	x23, [x28, #0x18]
0000000000009144	ldr	w9, [x23, #0x8]
0000000000009148	cmp	w8, w9
000000000000914c	csel	w10, w9, w8, gt
0000000000009150	add	x25, x23, #0x10
0000000000009154	add	x26, x22, #0x10
0000000000009158	bic	w24, w10, w10, asr #31
000000000000915c	sub	w27, w8, #0x1
0000000000009160	sub	w28, w9, #0x1
0000000000009164	cmp	x24, x20
0000000000009168	b.eq	0x9264
000000000000916c	adr	x8, #0x796d7
0000000000009170	nop
0000000000009174	ldarb	w8, [x8]
0000000000009178	tbz	w8, #0x0, 0x9180
000000000000917c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000009180	ldr	w8, [x23, #0x8]
0000000000009184	cmp	w8, w28
0000000000009188	b.ls	0x9770
000000000000918c	ldr	w8, [x22, #0x8]
0000000000009190	cmp	w8, w27
0000000000009194	b.ls	0x9770
0000000000009198	ldr	x8, [x25, w28, sxtw #3]
000000000000919c	ldr	x9, [x26, w27, sxtw #3]
00000000000091a0	cmp	x8, x9
00000000000091a4	b.ne	0x9260
00000000000091a8	add	x20, x20, #0x1
00000000000091ac	sub	w27, w27, #0x1
00000000000091b0	sub	w28, w28, #0x1
00000000000091b4	cmp	x24, x20
00000000000091b8	b.ne	0x916c
00000000000091bc	b	0x9264
00000000000091c0	add	x24, x21, #0x20
00000000000091c4	add	x25, x21, #0x30
00000000000091c8	add	x26, x21, #0x40
00000000000091cc	add	x2, x21, #0x18
00000000000091d0	add	x8, sp, #0x30
00000000000091d4	add	x27, x8, #0x28
00000000000091d8	mov	x21, x28
00000000000091dc	add	x28, x8, #0x38
00000000000091e0	mov	x0, x23
00000000000091e4	ldr	x1, [sp, #0x28]
00000000000091e8	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
00000000000091ec	mov	x1, x22
00000000000091f0	mov	x2, x24
00000000000091f4	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
00000000000091f8	adr	x1, #0x58048
00000000000091fc	nop
0000000000009200	mov	x2, x27
0000000000009204	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000009208	ldr	x8, [x21]
000000000000920c	and	x8, x8, #0xfffffffffffffffc
0000000000009210	ldr	x8, [x8]
0000000000009214	ldr	x8, [x8, #0x80]
0000000000009218	mov	x0, x21
000000000000921c	mov	x1, x25
0000000000009220	blr	x8
0000000000009224	mov	x1, x0
0000000000009228	mov	x0, x23
000000000000922c	mov	x2, x28
0000000000009230	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000009234	adr	x1, #0x57ecc
0000000000009238	nop
000000000000923c	mov	x2, x26
0000000000009240	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000009244	mov	x0, x20
0000000000009248	mov	x1, x23
000000000000924c	bl	"_kfun:kotlin.Throwable.ExceptionTraceBuilder.endln#internal"
0000000000009250	mov	w0, #0x0
0000000000009254	b	0x9748
0000000000009258	mov	w19, #0x0
000000000000925c	b	0x9274
0000000000009260	mov	x24, x20
0000000000009264	sub	w8, w24, #0x1
0000000000009268	bic	w19, w8, w8, asr #31
000000000000926c	add	x21, sp, #0x30
0000000000009270	ldr	x28, [sp, #0x18]
0000000000009274	add	x1, x21, #0x68
0000000000009278	mov	x0, x28
000000000000927c	bl	"_kfun:kotlin.Throwable.<get-stackTraceStrings>#internal"
0000000000009280	ldr	w8, [x0, #0x8]
0000000000009284	str	w19, [sp, #0xc]
0000000000009288	sub	w20, w8, w19
000000000000928c	cmp	w20, #0x1
0000000000009290	b.lt	0x933c
0000000000009294	mov	x22, #0x0
0000000000009298	add	x8, sp, #0x30
000000000000929c	add	x23, x8, #0x70
00000000000092a0	add	x24, x8, #0x80
00000000000092a4	add	x25, x8, #0x90
00000000000092a8	add	x26, x8, #0x88
00000000000092ac	adr	x27, #0x57fe4
00000000000092b0	nop
00000000000092b4	ldr	x21, [sp, #0x20]
00000000000092b8	adr	x8, #0x7958b
00000000000092bc	nop
00000000000092c0	ldarb	w8, [x8]
00000000000092c4	tbz	w8, #0x0, 0x92cc
00000000000092c8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000092cc	mov	x0, x28
00000000000092d0	mov	x1, x23
00000000000092d4	bl	"_kfun:kotlin.Throwable.<get-stackTraceStrings>#internal"
00000000000092d8	ldr	w8, [x0, #0x8]
00000000000092dc	cmp	x22, x8
00000000000092e0	b.hs	0x9770
00000000000092e4	add	x19, x22, #0x1
00000000000092e8	add	x8, x0, x22, lsl #3
00000000000092ec	ldr	x28, [x8, #0x10]
00000000000092f0	str	x28, [sp, #0xa8]
00000000000092f4	ldr	x22, [x21, #0x10]
00000000000092f8	mov	x0, x22
00000000000092fc	ldr	x1, [sp, #0x28]
0000000000009300	mov	x2, x24
0000000000009304	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000009308	mov	x1, x27
000000000000930c	mov	x2, x26
0000000000009310	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000009314	mov	x1, x28
0000000000009318	mov	x2, x25
000000000000931c	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000009320	mov	x0, x21
0000000000009324	mov	x1, x22
0000000000009328	bl	"_kfun:kotlin.Throwable.ExceptionTraceBuilder.endln#internal"
000000000000932c	mov	x22, x19
0000000000009330	cmp	x20, x19
0000000000009334	ldr	x28, [sp, #0x18]
0000000000009338	b.ne	0x92b8
000000000000933c	ldr	x26, [sp, #0x20]
0000000000009340	add	x20, sp, #0x30
0000000000009344	ldr	w19, [sp, #0xc]
0000000000009348	cbz	w19, 0x93a4
000000000000934c	add	x22, x20, #0xa0
0000000000009350	add	x23, x20, #0xb0
0000000000009354	add	x2, x20, #0x98
0000000000009358	add	x24, x20, #0xa8
000000000000935c	ldr	x25, [x26, #0x10]
0000000000009360	mov	x0, x25
0000000000009364	ldr	x1, [sp, #0x28]
0000000000009368	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000936c	adr	x1, #0x57f44
0000000000009370	nop
0000000000009374	mov	x2, x22
0000000000009378	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000937c	mov	x1, x19
0000000000009380	mov	x2, x24
0000000000009384	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
0000000000009388	adr	x1, #0x57f58
000000000000938c	nop
0000000000009390	mov	x2, x23
0000000000009394	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000009398	mov	x0, x26
000000000000939c	mov	x1, x25
00000000000093a0	bl	"_kfun:kotlin.Throwable.ExceptionTraceBuilder.endln#internal"
00000000000093a4	ldr	x22, [x28, #0x28]
00000000000093a8	str	x22, [sp, #0xe8]
00000000000093ac	ldr	x19, [sp, #0x10]
00000000000093b0	cbz	x22, 0x93ec
00000000000093b4	ldr	x8, [x22]
00000000000093b8	and	x8, x8, #0xfffffffffffffffc
00000000000093bc	ldr	x8, [x8]
00000000000093c0	ldr	w9, [x8, #0x3c]
00000000000093c4	ldr	x8, [x8, #0x40]
00000000000093c8	tbnz	w9, #0x1f, 0x93f4
00000000000093cc	mov	w10, #0x12
00000000000093d0	and	x9, x9, x10
00000000000093d4	add	x8, x8, x9, lsl #4
00000000000093d8	ldr	x8, [x8, #0x8]
00000000000093dc	ldr	x8, [x8, #0x18]
00000000000093e0	mov	x0, x22
00000000000093e4	blr	x8
00000000000093e8	tbz	w0, #0x0, 0x9490
00000000000093ec	mov	w0, #0x1
00000000000093f0	b	0x9748
00000000000093f4	neg	w10, w9
00000000000093f8	mvn	w9, w9
00000000000093fc	cmp	w10, #0x9
0000000000009400	b.ge	0x9438
0000000000009404	cmp	w10, #0x2
0000000000009408	b.lt	0x946c
000000000000940c	mov	x10, #0x0
0000000000009410	mov	x11, x8
0000000000009414	ldr	w12, [x11]
0000000000009418	cmp	w12, #0x11
000000000000941c	b.gt	0x9474
0000000000009420	add	x10, x10, #0x1
0000000000009424	add	x11, x11, #0x10
0000000000009428	cmp	x9, x10
000000000000942c	b.ne	0x9414
0000000000009430	mov	x10, x9
0000000000009434	b	0x9474
0000000000009438	mov	w10, #0x0
000000000000943c	add	w11, w9, w10
0000000000009440	cmp	w11, #0x0
0000000000009444	cinc	w11, w11, lt
0000000000009448	asr	w11, w11, #1
000000000000944c	sbfiz	x12, x11, #4, #32
0000000000009450	ldr	w12, [x8, x12]
0000000000009454	cmp	w12, #0x12
0000000000009458	csinc	w10, w10, w11, ge
000000000000945c	csel	w9, w9, w11, lt
0000000000009460	cmp	w10, w9
0000000000009464	b.lt	0x943c
0000000000009468	b	0x9474
000000000000946c	mov	w10, #0x0
0000000000009470	b	0x9474
0000000000009474	sxtw	x9, w10
0000000000009478	add	x8, x8, x9, lsl #4
000000000000947c	ldr	x8, [x8, #0x8]
0000000000009480	ldr	x8, [x8, #0x18]
0000000000009484	mov	x0, x22
0000000000009488	blr	x8
000000000000948c	tbnz	w0, #0x0, 0x93ec
0000000000009490	add	x2, x20, #0xc0
0000000000009494	add	x21, x20, #0xd0
0000000000009498	add	x23, x20, #0xc8
000000000000949c	adr	x1, #0x57ea4
00000000000094a0	nop
00000000000094a4	ldr	x0, [sp, #0x28]
00000000000094a8	bl	_Kotlin_String_plusImpl
00000000000094ac	mov	x20, x0
00000000000094b0	ldr	x8, [x22]
00000000000094b4	and	x8, x8, #0xfffffffffffffffc
00000000000094b8	ldr	x8, [x8]
00000000000094bc	ldr	w9, [x8, #0x3c]
00000000000094c0	ldr	x8, [x8, #0x40]
00000000000094c4	tbnz	w9, #0x1f, 0x94d4
00000000000094c8	mov	w10, #0x2b
00000000000094cc	and	x9, x9, x10
00000000000094d0	b	0x9558
00000000000094d4	neg	w10, w9
00000000000094d8	mvn	w9, w9
00000000000094dc	cmp	w10, #0x9
00000000000094e0	b.ge	0x9518
00000000000094e4	cmp	w10, #0x2
00000000000094e8	b.lt	0x954c
00000000000094ec	mov	x10, #0x0
00000000000094f0	mov	x11, x8
00000000000094f4	ldr	w12, [x11]
00000000000094f8	cmp	w12, #0x2a
00000000000094fc	b.gt	0x9554
0000000000009500	add	x10, x10, #0x1
0000000000009504	add	x11, x11, #0x10
0000000000009508	cmp	x9, x10
000000000000950c	b.ne	0x94f4
0000000000009510	mov	x10, x9
0000000000009514	b	0x9554
0000000000009518	mov	w10, #0x0
000000000000951c	add	w11, w9, w10
0000000000009520	cmp	w11, #0x0
0000000000009524	cinc	w11, w11, lt
0000000000009528	asr	w11, w11, #1
000000000000952c	sbfiz	x12, x11, #4, #32
0000000000009530	ldr	w12, [x8, x12]
0000000000009534	cmp	w12, #0x2b
0000000000009538	csinc	w10, w10, w11, ge
000000000000953c	csel	w9, w9, w11, lt
0000000000009540	cmp	w10, w9
0000000000009544	b.lt	0x951c
0000000000009548	b	0x9554
000000000000954c	mov	w10, #0x0
0000000000009550	b	0x9554
0000000000009554	sxtw	x9, w10
0000000000009558	add	x8, x8, x9, lsl #4
000000000000955c	ldr	x8, [x8, #0x8]
0000000000009560	ldr	x8, [x8, #0x30]
0000000000009564	mov	x0, x22
0000000000009568	mov	x1, x23
000000000000956c	blr	x8
0000000000009570	mov	x22, x0
0000000000009574	mov	w24, #0xa0
0000000000009578	adr	x23, #0x57de8
000000000000957c	nop
0000000000009580	b	0x95cc
0000000000009584	ldr	x8, [x22]
0000000000009588	and	x8, x8, #0xfffffffffffffffc
000000000000958c	ldr	x8, [x8]
0000000000009590	ldr	w9, [x8, #0x3c]
0000000000009594	ldr	x8, [x8, #0x40]
0000000000009598	tbnz	w9, #0x1f, 0x9648
000000000000959c	and	x9, x9, x24
00000000000095a0	add	x8, x8, x9, lsl #4
00000000000095a4	ldr	x8, [x8, #0x8]
00000000000095a8	ldr	x8, [x8, #0x8]
00000000000095ac	mov	x0, x22
00000000000095b0	mov	x1, x21
00000000000095b4	blr	x8
00000000000095b8	mov	x1, x0
00000000000095bc	mov	x0, x26
00000000000095c0	mov	x2, x20
00000000000095c4	mov	x3, x23
00000000000095c8	bl	"_kfun:kotlin.Throwable.ExceptionTraceBuilder.dumpFullTrace#internal"
00000000000095cc	ldr	x8, [x22]
00000000000095d0	and	x8, x8, #0xfffffffffffffffc
00000000000095d4	ldr	x8, [x8]
00000000000095d8	ldr	w9, [x8, #0x3c]
00000000000095dc	ldr	x8, [x8, #0x40]
00000000000095e0	tbnz	w9, #0x1f, 0x9604
00000000000095e4	and	x9, x9, x24
00000000000095e8	add	x8, x8, x9, lsl #4
00000000000095ec	ldr	x8, [x8, #0x8]
00000000000095f0	ldr	x8, [x8]
00000000000095f4	mov	x0, x22
00000000000095f8	blr	x8
00000000000095fc	tbnz	w0, #0x0, 0x9720
0000000000009600	b	0x9740
0000000000009604	neg	w10, w9
0000000000009608	mvn	w9, w9
000000000000960c	cmp	w10, #0x9
0000000000009610	b.ge	0x968c
0000000000009614	cmp	w10, #0x2
0000000000009618	b.lt	0x96f4
000000000000961c	mov	x10, #0x0
0000000000009620	mov	x11, x8
0000000000009624	ldr	w12, [x11]
0000000000009628	cmp	w12, #0x9f
000000000000962c	b.gt	0x9704
0000000000009630	add	x10, x10, #0x1
0000000000009634	add	x11, x11, #0x10
0000000000009638	cmp	x9, x10
000000000000963c	b.ne	0x9624
0000000000009640	mov	x10, x9
0000000000009644	b	0x9704
0000000000009648	neg	w10, w9
000000000000964c	mvn	w9, w9
0000000000009650	cmp	w10, #0x9
0000000000009654	b.ge	0x96c0
0000000000009658	cmp	w10, #0x2
000000000000965c	b.lt	0x96fc
0000000000009660	mov	x10, #0x0
0000000000009664	mov	x11, x8
0000000000009668	ldr	w12, [x11]
000000000000966c	cmp	w12, #0x9f
0000000000009670	b.gt	0x9738
0000000000009674	add	x10, x10, #0x1
0000000000009678	add	x11, x11, #0x10
000000000000967c	cmp	x9, x10
0000000000009680	b.ne	0x9668
0000000000009684	mov	x10, x9
0000000000009688	b	0x9738
000000000000968c	mov	w10, #0x0
0000000000009690	add	w11, w9, w10
0000000000009694	cmp	w11, #0x0
0000000000009698	cinc	w11, w11, lt
000000000000969c	asr	w11, w11, #1
00000000000096a0	sbfiz	x12, x11, #4, #32
00000000000096a4	ldr	w12, [x8, x12]
00000000000096a8	cmp	w12, #0xa0
00000000000096ac	csinc	w10, w10, w11, ge
00000000000096b0	csel	w9, w9, w11, lt
00000000000096b4	cmp	w10, w9
00000000000096b8	b.lt	0x9690
00000000000096bc	b	0x9704
00000000000096c0	mov	w10, #0x0
00000000000096c4	add	w11, w9, w10
00000000000096c8	cmp	w11, #0x0
00000000000096cc	cinc	w11, w11, lt
00000000000096d0	asr	w11, w11, #1
00000000000096d4	sbfiz	x12, x11, #4, #32
00000000000096d8	ldr	w12, [x8, x12]
00000000000096dc	cmp	w12, #0xa0
00000000000096e0	csinc	w10, w10, w11, ge
00000000000096e4	csel	w9, w9, w11, lt
00000000000096e8	cmp	w10, w9
00000000000096ec	b.lt	0x96c4
00000000000096f0	b	0x9738
00000000000096f4	mov	w10, #0x0
00000000000096f8	b	0x9704
00000000000096fc	mov	w10, #0x0
0000000000009700	b	0x9738
0000000000009704	sxtw	x9, w10
0000000000009708	add	x8, x8, x9, lsl #4
000000000000970c	ldr	x8, [x8, #0x8]
0000000000009710	ldr	x8, [x8]
0000000000009714	mov	x0, x22
0000000000009718	blr	x8
000000000000971c	tbz	w0, #0x0, 0x9740
0000000000009720	adr	x8, #0x79123
0000000000009724	nop
0000000000009728	ldarb	w8, [x8]
000000000000972c	tbz	w8, #0x0, 0x9584
0000000000009730	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000009734	b	0x9584
0000000000009738	sxtw	x9, w10
000000000000973c	b	0x95a0
0000000000009740	mov	w0, #0x1
0000000000009744	ldr	x19, [sp, #0x10]
0000000000009748	ldr	x8, [sp, #0x38]
000000000000974c	str	x8, [x19, #0x110]
0000000000009750	ldp	x29, x30, [sp, #0x160]
0000000000009754	ldp	x20, x19, [sp, #0x150]
0000000000009758	ldp	x22, x21, [sp, #0x140]
000000000000975c	ldp	x24, x23, [sp, #0x130]
0000000000009760	ldp	x26, x25, [sp, #0x120]
0000000000009764	ldp	x28, x27, [sp, #0x110]
0000000000009768	add	sp, sp, #0x170
000000000000976c	ret
0000000000009770	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.Throwable#toString(){}kotlin.String:
0000000000009774	sub	sp, sp, #0x100
0000000000009778	stp	x28, x27, [sp, #0xa0]
000000000000977c	stp	x26, x25, [sp, #0xb0]
0000000000009780	stp	x24, x23, [sp, #0xc0]
0000000000009784	stp	x22, x21, [sp, #0xd0]
0000000000009788	stp	x20, x19, [sp, #0xe0]
000000000000978c	stp	x29, x30, [sp, #0xf0]
0000000000009790	add	x29, sp, #0xf0
0000000000009794	mov	x19, x1
0000000000009798	mov	x20, x0
000000000000979c	movi.16b	v0, #0x0
00000000000097a0	stp	q0, q0, [sp, #0x30]
00000000000097a4	str	xzr, [sp, #0x90]
00000000000097a8	stp	q0, q0, [sp, #0x70]
00000000000097ac	stp	q0, q0, [sp, #0x50]
00000000000097b0	add	x27, sp, #0x30
00000000000097b4	add	x22, x27, #0x20
00000000000097b8	add	x21, x27, #0x30
00000000000097bc	adr	x8, #0x4c884
00000000000097c0	nop
00000000000097c4	orr	x8, x8, #0x3
00000000000097c8	stp	x8, xzr, [sp, #0x20]
00000000000097cc	stp	xzr, xzr, [sp, #0x10]
00000000000097d0	adr	x8, #0x4ebc0
00000000000097d4	nop
00000000000097d8	orr	x8, x8, #0x3
00000000000097dc	str	x8, [sp, #0x8]
00000000000097e0	adrp	x0, 95 ; 0x68000
00000000000097e4	add	x0, x0, #0xa00
00000000000097e8	ldr	x8, [x0]
00000000000097ec	blr	x8
00000000000097f0	ldr	x26, [x0]
00000000000097f4	ldr	x8, [x26, #0x110]
00000000000097f8	str	x27, [x26, #0x110]
00000000000097fc	mov	x9, #0xd00000000
0000000000009800	stp	x8, x9, [sp, #0x38]
0000000000009804	adr	x8, #0x7903f
0000000000009808	nop
000000000000980c	ldarb	w8, [x8]
0000000000009810	tbz	w8, #0x0, 0x9818
0000000000009814	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000009818	ldr	x8, [x20]
000000000000981c	and	x8, x8, #0xfffffffffffffffc
0000000000009820	ldr	x8, [x8]
0000000000009824	add	x9, sp, #0x20
0000000000009828	str	x9, [sp, #0x48]
000000000000982c	str	x8, [sp, #0x28]
0000000000009830	add	x0, sp, #0x20
0000000000009834	mov	x1, x22
0000000000009838	bl	"_kfun:kotlin.native.internal.KClassImpl#<get-qualifiedName>(){}kotlin.String?"
000000000000983c	mov	x22, x0
0000000000009840	cbnz	x0, 0x9864
0000000000009844	add	x8, sp, #0x30
0000000000009848	add	x1, x8, #0x28
000000000000984c	add	x0, sp, #0x20
0000000000009850	bl	"_kfun:kotlin.native.internal.KClassImpl#<get-simpleName>(){}kotlin.String?"
0000000000009854	adr	x8, #0x5016c
0000000000009858	nop
000000000000985c	cmp	x0, #0x0
0000000000009860	csel	x22, x8, x0, eq
0000000000009864	ldr	x8, [x20]
0000000000009868	and	x8, x8, #0xfffffffffffffffc
000000000000986c	ldr	x8, [x8]
0000000000009870	ldr	x8, [x8, #0x90]
0000000000009874	mov	x0, x20
0000000000009878	mov	x1, x21
000000000000987c	blr	x8
0000000000009880	cbz	x0, 0x9930
0000000000009884	add	x23, x27, #0x40
0000000000009888	add	x24, x27, #0x50
000000000000988c	add	x21, x27, #0x60
0000000000009890	add	x25, x27, #0x48
0000000000009894	add	x8, sp, #0x8
0000000000009898	str	x8, [sp, #0x68]
000000000000989c	add	x0, sp, #0x8
00000000000098a0	mov	w1, #0xa
00000000000098a4	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
00000000000098a8	add	x0, sp, #0x8
00000000000098ac	mov	x1, x22
00000000000098b0	mov	x2, x23
00000000000098b4	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
00000000000098b8	adr	x1, #0x57ad8
00000000000098bc	nop
00000000000098c0	add	x0, sp, #0x8
00000000000098c4	mov	x2, x25
00000000000098c8	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
00000000000098cc	ldr	x8, [x20]
00000000000098d0	and	x8, x8, #0xfffffffffffffffc
00000000000098d4	ldr	x8, [x8]
00000000000098d8	ldr	x8, [x8, #0x90]
00000000000098dc	mov	x0, x20
00000000000098e0	mov	x1, x24
00000000000098e4	blr	x8
00000000000098e8	cbz	x0, 0x990c
00000000000098ec	add	x1, x27, #0x58
00000000000098f0	ldr	x8, [x0]
00000000000098f4	and	x8, x8, #0xfffffffffffffffc
00000000000098f8	ldr	x8, [x8]
00000000000098fc	ldr	x8, [x8, #0x80]
0000000000009900	blr	x8
0000000000009904	mov	x1, x0
0000000000009908	b	0x9914
000000000000990c	adr	x1, #0x57794
0000000000009910	nop
0000000000009914	add	x0, sp, #0x8
0000000000009918	mov	x2, x21
000000000000991c	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000009920	add	x0, sp, #0x8
0000000000009924	mov	x1, x19
0000000000009928	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
000000000000992c	mov	x22, x0
0000000000009930	str	x22, [x19]
0000000000009934	ldr	x8, [sp, #0x38]
0000000000009938	str	x8, [x26, #0x110]
000000000000993c	mov	x0, x22
0000000000009940	ldp	x29, x30, [sp, #0xf0]
0000000000009944	ldp	x20, x19, [sp, #0xe0]
0000000000009948	ldp	x22, x21, [sp, #0xd0]
000000000000994c	ldp	x24, x23, [sp, #0xc0]
0000000000009950	ldp	x26, x25, [sp, #0xb0]
0000000000009954	ldp	x28, x27, [sp, #0xa0]
0000000000009958	add	sp, sp, #0x100
000000000000995c	ret
_kfun:kotlin.Throwable.$<init>$lambda$0$FUNCTION_REFERENCE$2.invoke#internal:
0000000000009960	stp	x28, x27, [sp, #-0x60]!
0000000000009964	stp	x26, x25, [sp, #0x10]
0000000000009968	stp	x24, x23, [sp, #0x20]
000000000000996c	stp	x22, x21, [sp, #0x30]
0000000000009970	stp	x20, x19, [sp, #0x40]
0000000000009974	stp	x29, x30, [sp, #0x50]
0000000000009978	add	x29, sp, #0x50
000000000000997c	sub	sp, sp, #0x4a0
0000000000009980	str	x1, [sp, #0x10]
0000000000009984	mov	x20, x0
0000000000009988	adr	x23, #0x78ebb
000000000000998c	nop
0000000000009990	ldarb	w8, [x23]
0000000000009994	tbz	w8, #0x0, 0x999c
0000000000009998	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000999c	ldr	x8, [x20, #0x8]
00000000000099a0	movi.16b	v0, #0x0
00000000000099a4	stp	q0, q0, [sp, #0x20]
00000000000099a8	adrp	x0, 95 ; 0x68000
00000000000099ac	add	x0, x0, #0xa00
00000000000099b0	ldr	x9, [x0]
00000000000099b4	str	x9, [sp, #0x18]
00000000000099b8	blr	x9
00000000000099bc	ldr	x20, [x0]
00000000000099c0	ldr	x9, [x20, #0x110]
00000000000099c4	add	x10, sp, #0x20
00000000000099c8	str	x10, [x20, #0x110]
00000000000099cc	mov	x10, #0x400000000
00000000000099d0	stp	x9, x10, [sp, #0x28]
00000000000099d4	ldr	x8, [x8, #0x18]
00000000000099d8	add	x28, x8, #0x10
00000000000099dc	ldr	w22, [x8, #0x8]
00000000000099e0	add	x21, x20, #0x138
00000000000099e4	mov	w8, #0x1
00000000000099e8	ldaxr	w19, [x21]
00000000000099ec	stlxr	w9, w8, [x21]
00000000000099f0	cbnz	w9, 0x99e8
00000000000099f4	str	xzr, [sp, #0x50]
00000000000099f8	mov	w8, #0x1
00000000000099fc	str	w8, [sp, #0x58]
0000000000009a00	strb	wzr, [sp, #0x5c]
0000000000009a04	adrp	x0, 95 ; 0x68000
0000000000009a08	add	x0, x0, #0xa00
0000000000009a0c	ldr	x8, [sp, #0x18]
0000000000009a10	blr	x8
0000000000009a14	ldr	x8, [x0]
0000000000009a18	cbz	x8, 0x9a40
0000000000009a1c	add	x9, x8, #0x138
0000000000009a20	mov	w11, #0x1
0000000000009a24	ldaxr	w10, [x9]
0000000000009a28	stlxr	w12, w11, [x9]
0000000000009a2c	cbnz	w12, 0x9a24
0000000000009a30	str	x8, [sp, #0x50]
0000000000009a34	str	w10, [sp, #0x58]
0000000000009a38	mov	w9, #0x1
0000000000009a3c	strb	w9, [sp, #0x5c]
0000000000009a40	stp	xzr, xzr, [sp, #0x68]
0000000000009a44	str	xzr, [sp, #0x78]
0000000000009a48	cbz	w22, 0x9cc0
0000000000009a4c	str	x20, [sp, #0x8]
0000000000009a50	mov	w23, #0x18
0000000000009a54	mov	x0, x22
0000000000009a58	mov	w1, #0x18
0000000000009a5c	bl	0x4db20 ; symbol stub for: _calloc
0000000000009a60	mov	x20, #0x0
0000000000009a64	madd	x8, x22, x23, x0
0000000000009a68	stp	x0, x0, [sp, #0x68]
0000000000009a6c	str	x8, [sp, #0x78]
0000000000009a70	mov	x23, #-0x5555555555555556
0000000000009a74	movk	x23, #0xaaab
0000000000009a78	adr	x27, #0x48f6f ; literal pool for: ""
0000000000009a7c	nop
0000000000009a80	b	0x9ab0
0000000000009a84	ldr	q0, [sp, #0x80]
0000000000009a88	ldr	x8, [sp, #0x90]
0000000000009a8c	str	x8, [x26, #0x10]
0000000000009a90	str	q0, [x26]
0000000000009a94	stp	xzr, xzr, [sp, #0x88]
0000000000009a98	str	xzr, [sp, #0x80]
0000000000009a9c	add	x8, x26, #0x18
0000000000009aa0	str	x8, [sp, #0x70]
0000000000009aa4	add	x20, x20, #0x1
0000000000009aa8	cmp	x20, x22
0000000000009aac	b.eq	0x9cb0
0000000000009ab0	ldr	x8, [x28, x20, lsl #3]
0000000000009ab4	cmp	x8, #0x2
0000000000009ab8	b.lo	0x9aa4
0000000000009abc	and	x8, x8, #0xfffffffffffffffe
0000000000009ac0	sub	x3, x8, #0x1
0000000000009ac4	ldp	x9, x8, [sp, #0x68]
0000000000009ac8	sub	x8, x8, x9
0000000000009acc	asr	x8, x8, #3
0000000000009ad0	mul	x2, x8, x23
0000000000009ad4	str	x27, [sp]
0000000000009ad8	add	x0, sp, #0x98
0000000000009adc	mov	w4, #0x0
0000000000009ae0	adr	x5, #0x48e51 ; literal pool for: "%s"
0000000000009ae4	nop
0000000000009ae8	bl	__ZL18snprintf_with_addrPcmmPKvbPKcz
0000000000009aec	add	x0, sp, #0x98
0000000000009af0	bl	0x4de74 ; symbol stub for: _strlen
0000000000009af4	cmn	x0, #0x10
0000000000009af8	b.hs	0x9f24
0000000000009afc	mov	x24, x0
0000000000009b00	cmp	x0, #0x17
0000000000009b04	b.hs	0x9b28
0000000000009b08	add	x25, sp, #0x80
0000000000009b0c	strb	w24, [sp, #0x97]
0000000000009b10	cbnz	x24, 0x9b4c
0000000000009b14	strb	wzr, [x25, x24]
0000000000009b18	ldp	x26, x8, [sp, #0x70]
0000000000009b1c	cmp	x26, x8
0000000000009b20	b.lo	0x9a84
0000000000009b24	b	0x9b6c
0000000000009b28	add	x8, x24, #0x10
0000000000009b2c	and	x26, x8, #0xfffffffffffffff0
0000000000009b30	mov	x0, x26
0000000000009b34	mov	w1, #0x1
0000000000009b38	bl	0x4db20 ; symbol stub for: _calloc
0000000000009b3c	mov	x25, x0
0000000000009b40	orr	x8, x26, #0x8000000000000000
0000000000009b44	stp	x24, x8, [sp, #0x88]
0000000000009b48	str	x0, [sp, #0x80]
0000000000009b4c	add	x1, sp, #0x98
0000000000009b50	mov	x0, x25
0000000000009b54	mov	x2, x24
0000000000009b58	bl	0x4dbec ; symbol stub for: _memcpy
0000000000009b5c	strb	wzr, [x25, x24]
0000000000009b60	ldp	x26, x8, [sp, #0x70]
0000000000009b64	cmp	x26, x8
0000000000009b68	b.lo	0x9a84
0000000000009b6c	mov	x10, #-0x5555555555555556
0000000000009b70	movk	x10, #0xaaab
0000000000009b74	mov	x23, x27
0000000000009b78	ldr	x25, [sp, #0x68]
0000000000009b7c	sub	x9, x26, x25
0000000000009b80	asr	x9, x9, #3
0000000000009b84	mov	x11, #-0x5555555555555556
0000000000009b88	movk	x11, #0xaaa, lsl #48
0000000000009b8c	mul	x27, x9, x10
0000000000009b90	add	x9, x27, #0x1
0000000000009b94	cmp	x9, x11
0000000000009b98	b.hi	0x9f30
0000000000009b9c	sub	x8, x8, x25
0000000000009ba0	asr	x8, x8, #3
0000000000009ba4	mul	x8, x8, x10
0000000000009ba8	lsl	x10, x8, #1
0000000000009bac	cmp	x10, x9
0000000000009bb0	csel	x9, x9, x10, lo
0000000000009bb4	mov	x10, #0x5555555555555555
0000000000009bb8	movk	x10, #0x555, lsl #48
0000000000009bbc	cmp	x8, x10
0000000000009bc0	csel	x24, x9, x11, lo
0000000000009bc4	cbz	x24, 0x9bd8
0000000000009bc8	mov	x0, x24
0000000000009bcc	mov	w1, #0x18
0000000000009bd0	bl	0x4db20 ; symbol stub for: _calloc
0000000000009bd4	b	0x9bdc
0000000000009bd8	mov	x0, #0x0
0000000000009bdc	mov	w8, #0x18
0000000000009be0	madd	x8, x27, x8, x0
0000000000009be4	mov	w11, #0x18
0000000000009be8	ldr	q0, [sp, #0x80]
0000000000009bec	str	q0, [x8]
0000000000009bf0	ldr	x9, [sp, #0x90]
0000000000009bf4	str	x9, [x8, #0x10]
0000000000009bf8	stp	xzr, xzr, [sp, #0x88]
0000000000009bfc	str	xzr, [sp, #0x80]
0000000000009c00	mov	x9, x8
0000000000009c04	cmp	x26, x25
0000000000009c08	b.eq	0x9c44
0000000000009c0c	mov	x27, x23
0000000000009c10	ldur	q0, [x26, #-0x18]
0000000000009c14	ldur	x10, [x26, #-0x8]
0000000000009c18	stur	x10, [x9, #-0x8]
0000000000009c1c	stur	q0, [x9, #-0x18]
0000000000009c20	stp	xzr, xzr, [x26, #-0x10]
0000000000009c24	stur	xzr, [x26, #-0x18]
0000000000009c28	sub	x10, x26, #0x18
0000000000009c2c	sub	x9, x9, #0x18
0000000000009c30	mov	x26, x10
0000000000009c34	cmp	x10, x25
0000000000009c38	b.ne	0x9c10
0000000000009c3c	ldp	x25, x26, [sp, #0x68]
0000000000009c40	b	0x9c4c
0000000000009c44	mov	x25, x26
0000000000009c48	mov	x27, x23
0000000000009c4c	mov	x23, #-0x5555555555555556
0000000000009c50	movk	x23, #0xaaab
0000000000009c54	madd	x10, x24, x11, x0
0000000000009c58	add	x8, x8, #0x18
0000000000009c5c	stp	x9, x8, [sp, #0x68]
0000000000009c60	str	x10, [sp, #0x78]
0000000000009c64	cmp	x26, x25
0000000000009c68	b.ne	0x9c98
0000000000009c6c	cbz	x25, 0x9c78
0000000000009c70	mov	x0, x25
0000000000009c74	bl	0x4dba4 ; symbol stub for: _free
0000000000009c78	ldrsb	w8, [sp, #0x97]
0000000000009c7c	tbz	w8, #0x1f, 0x9aa4
0000000000009c80	ldr	x0, [sp, #0x80]
0000000000009c84	bl	0x4dba4 ; symbol stub for: _free
0000000000009c88	b	0x9aa4
0000000000009c8c	mov	x26, x24
0000000000009c90	cmp	x24, x25
0000000000009c94	b.eq	0x9c6c
0000000000009c98	sub	x24, x26, #0x18
0000000000009c9c	ldursb	w8, [x26, #-0x1]
0000000000009ca0	tbz	w8, #0x1f, 0x9c8c
0000000000009ca4	ldur	x0, [x26, #-0x18]
0000000000009ca8	bl	0x4dba4 ; symbol stub for: _free
0000000000009cac	b	0x9c8c
0000000000009cb0	ldr	x8, [sp, #0x50]
0000000000009cb4	adr	x23, #0x78b8f
0000000000009cb8	nop
0000000000009cbc	ldr	x20, [sp, #0x8]
0000000000009cc0	cbz	x8, 0x9cf0
0000000000009cc4	ldr	w9, [sp, #0x58]
0000000000009cc8	add	x0, x8, #0x138
0000000000009ccc	ldaxr	w8, [x0]
0000000000009cd0	stlxr	w10, w9, [x0]
0000000000009cd4	cbnz	w10, 0x9ccc
0000000000009cd8	cbnz	w9, 0x9cf0
0000000000009cdc	cmp	w8, #0x1
0000000000009ce0	b.ne	0x9cf0
0000000000009ce4	ldarb	w8, [x23]
0000000000009ce8	tbz	w8, #0x0, 0x9cf0
0000000000009cec	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000009cf0	cbz	x20, 0x9d1c
0000000000009cf4	ldaxr	w8, [x21]
0000000000009cf8	stlxr	w9, w19, [x21]
0000000000009cfc	cbnz	w9, 0x9cf4
0000000000009d00	cbnz	w19, 0x9d1c
0000000000009d04	cmp	w8, #0x1
0000000000009d08	b.ne	0x9d1c
0000000000009d0c	ldarb	w8, [x23]
0000000000009d10	tbz	w8, #0x0, 0x9d1c
0000000000009d14	mov	x0, x21
0000000000009d18	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000009d1c	str	xzr, [sp, #0xb0]
0000000000009d20	adrp	x0, 95 ; 0x68000
0000000000009d24	add	x0, x0, #0xa00
0000000000009d28	ldr	x8, [sp, #0x18]
0000000000009d2c	blr	x8
0000000000009d30	ldr	x8, [x0]
0000000000009d34	ldr	x9, [x8, #0x110]
0000000000009d38	add	x10, sp, #0x98
0000000000009d3c	str	x10, [x8, #0x110]
0000000000009d40	mov	x10, #0x400000000
0000000000009d44	stp	x9, x10, [sp, #0xa0]
0000000000009d48	ldp	x10, x9, [sp, #0x68]
0000000000009d4c	sub	x9, x9, x10
0000000000009d50	asr	x9, x9, #3
0000000000009d54	mov	x10, #-0x5555555555555556
0000000000009d58	movk	x10, #0xaaab
0000000000009d5c	mul	x19, x9, x10
0000000000009d60	tbnz	w19, #0x1f, 0x9f3c
0000000000009d64	ldr	x8, [x8, #0x118]
0000000000009d68	ubfiz	x9, x19, #3, #32
0000000000009d6c	add	x9, x9, #0x1f
0000000000009d70	and	x1, x9, #0xffffffff8
0000000000009d74	add	x0, x8, #0x70
0000000000009d78	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000009d7c	mov	x21, x0
0000000000009d80	str	xzr, [x21, #0x10]!
0000000000009d84	str	xzr, [x0, #0x18]
0000000000009d88	str	xzr, [x0, #0x8]
0000000000009d8c	adr	x8, #0x4a854
0000000000009d90	nop
0000000000009d94	str	x8, [x21]
0000000000009d98	str	w19, [x0, #0x18]
0000000000009d9c	str	x21, [sp, #0xb0]
0000000000009da0	ldp	x19, x9, [sp, #0x68]
0000000000009da4	cmp	x9, x19
0000000000009da8	b.ne	0x9dd4
0000000000009dac	adrp	x0, 95 ; 0x68000
0000000000009db0	add	x0, x0, #0xa00
0000000000009db4	ldr	x8, [sp, #0x18]
0000000000009db8	blr	x8
0000000000009dbc	ldr	x8, [x0]
0000000000009dc0	str	x21, [sp, #0x38]
0000000000009dc4	ldr	x10, [sp, #0xa0]
0000000000009dc8	str	x10, [x8, #0x110]
0000000000009dcc	cbnz	x19, 0x9e9c
0000000000009dd0	b	0x9edc
0000000000009dd4	str	x21, [sp, #0x8]
0000000000009dd8	add	x20, sp, #0x48
0000000000009ddc	add	x22, x20, #0x18
0000000000009de0	add	x23, x0, #0x20
0000000000009de4	adrp	x0, 95 ; 0x68000
0000000000009de8	add	x0, x0, #0xa00
0000000000009dec	ldr	x8, [sp, #0x18]
0000000000009df0	blr	x8
0000000000009df4	mov	x24, #0x0
0000000000009df8	mov	x25, #0x0
0000000000009dfc	mov	x26, #0x0
0000000000009e00	ldr	x8, [x0]
0000000000009e04	ldr	x10, [x8, #0x110]
0000000000009e08	mov	x28, #0x400000000
0000000000009e0c	mov	x27, #-0x5555555555555556
0000000000009e10	movk	x27, #0xaaab
0000000000009e14	mov	x21, #0x100000000
0000000000009e18	stp	x28, xzr, [sp, #0x58]
0000000000009e1c	str	x20, [x8, #0x110]
0000000000009e20	str	x10, [sp, #0x50]
0000000000009e24	add	x0, x19, x24
0000000000009e28	ldrsb	w8, [x0, #0x17]
0000000000009e2c	tbz	w8, #0x1f, 0x9e34
0000000000009e30	ldr	x0, [x19, x24]
0000000000009e34	mov	x1, x22
0000000000009e38	bl	_CreateStringFromCString
0000000000009e3c	asr	x8, x25, #29
0000000000009e40	ldr	x9, [sp, #0x60]
0000000000009e44	str	x9, [x23, x8]
0000000000009e48	adrp	x0, 95 ; 0x68000
0000000000009e4c	add	x0, x0, #0xa00
0000000000009e50	ldr	x8, [sp, #0x18]
0000000000009e54	blr	x8
0000000000009e58	ldr	x8, [x0]
0000000000009e5c	ldr	x10, [sp, #0x50]
0000000000009e60	str	x10, [x8, #0x110]
0000000000009e64	add	x26, x26, #0x1
0000000000009e68	ldp	x19, x9, [sp, #0x68]
0000000000009e6c	sub	x11, x9, x19
0000000000009e70	asr	x11, x11, #3
0000000000009e74	mul	x11, x11, x27
0000000000009e78	add	x25, x25, x21
0000000000009e7c	add	x24, x24, #0x18
0000000000009e80	cmp	x26, x11
0000000000009e84	b.lo	0x9e18
0000000000009e88	ldr	x21, [sp, #0x8]
0000000000009e8c	str	x21, [sp, #0x38]
0000000000009e90	ldr	x10, [sp, #0xa0]
0000000000009e94	str	x10, [x8, #0x110]
0000000000009e98	cbz	x19, 0x9edc
0000000000009e9c	cmp	x19, x9
0000000000009ea0	b.ne	0x9eb8
0000000000009ea4	mov	x0, x19
0000000000009ea8	b	0x9ed4
0000000000009eac	mov	x9, x20
0000000000009eb0	cmp	x20, x19
0000000000009eb4	b.eq	0x9ed0
0000000000009eb8	sub	x20, x9, #0x18
0000000000009ebc	ldursb	w8, [x9, #-0x1]
0000000000009ec0	tbz	w8, #0x1f, 0x9eac
0000000000009ec4	ldur	x0, [x9, #-0x18]
0000000000009ec8	bl	0x4dba4 ; symbol stub for: _free
0000000000009ecc	b	0x9eac
0000000000009ed0	ldr	x0, [sp, #0x68]
0000000000009ed4	str	x19, [sp, #0x70]
0000000000009ed8	bl	0x4dba4 ; symbol stub for: _free
0000000000009edc	ldp	x10, x8, [sp, #0x10]
0000000000009ee0	str	x21, [x10]
0000000000009ee4	adrp	x0, 95 ; 0x68000
0000000000009ee8	add	x0, x0, #0xa00
0000000000009eec	blr	x8
0000000000009ef0	ldr	x8, [x0]
0000000000009ef4	ldr	x9, [sp, #0x28]
0000000000009ef8	str	x9, [x8, #0x110]
0000000000009efc	str	x21, [x10]
0000000000009f00	mov	x0, x21
0000000000009f04	add	sp, sp, #0x4a0
0000000000009f08	ldp	x29, x30, [sp, #0x50]
0000000000009f0c	ldp	x20, x19, [sp, #0x40]
0000000000009f10	ldp	x22, x21, [sp, #0x30]
0000000000009f14	ldp	x24, x23, [sp, #0x20]
0000000000009f18	ldp	x26, x25, [sp, #0x10]
0000000000009f1c	ldp	x28, x27, [sp], #0x60
0000000000009f20	ret
0000000000009f24	add	x0, sp, #0x80
0000000000009f28	bl	0x4d8f8 ; symbol stub for: __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv
0000000000009f2c	b	0x9f40
0000000000009f30	add	x0, sp, #0x68
0000000000009f34	bl	0x4d8ec ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
0000000000009f38	b	0x9f40
0000000000009f3c	bl	_ThrowIllegalArgumentException
0000000000009f40	brk	#0x1
0000000000009f44	mov	x19, x0
0000000000009f48	adrp	x0, 95 ; 0x68000
0000000000009f4c	add	x0, x0, #0xa00
0000000000009f50	ldr	x8, [sp, #0x18]
0000000000009f54	blr	x8
0000000000009f58	ldr	x8, [x0]
0000000000009f5c	b	0x9fb8
0000000000009f60	mov	x19, x0
0000000000009f64	ldrsb	w8, [sp, #0x97]
0000000000009f68	tbz	w8, #0x1f, 0x9f80
0000000000009f6c	ldr	x0, [sp, #0x80]
0000000000009f70	bl	0x4dba4 ; symbol stub for: _free
0000000000009f74	b	0x9f80
0000000000009f78	b	0x9f7c
0000000000009f7c	mov	x19, x0
0000000000009f80	add	x0, sp, #0x68
0000000000009f84	bl	__ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEEN6kotlin11std_support9allocatorIcEEEENS6_IS8_EEED1Ev
0000000000009f88	add	x0, sp, #0x48
0000000000009f8c	bl	__ZN6kotlin31NativeOrUnregisteredThreadGuardD1Ev
0000000000009f90	mov	x0, x19
0000000000009f94	bl	___clang_call_terminate
0000000000009f98	mov	x19, x0
0000000000009f9c	adrp	x0, 95 ; 0x68000
0000000000009fa0	add	x0, x0, #0xa00
0000000000009fa4	ldr	x8, [sp, #0x18]
0000000000009fa8	blr	x8
0000000000009fac	ldr	x8, [x0]
0000000000009fb0	ldr	x9, [sp, #0x50]
0000000000009fb4	str	x9, [x8, #0x110]
0000000000009fb8	ldr	x9, [sp, #0xa0]
0000000000009fbc	str	x9, [x8, #0x110]
0000000000009fc0	ldr	x0, [sp, #0x68]
0000000000009fc4	cbz	x0, 0x9fd8
0000000000009fc8	add	x8, sp, #0x68
0000000000009fcc	add	x1, x8, #0x8
0000000000009fd0	add	x2, sp, #0x68
0000000000009fd4	bl	_Kotlin_getStackTraceStrings.cold.1
0000000000009fd8	mov	x0, x19
0000000000009fdc	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
_kfun:kotlin.Unit#toString(){}kotlin.String:
0000000000009fe0	stp	x20, x19, [sp, #-0x20]!
0000000000009fe4	stp	x29, x30, [sp, #0x10]
0000000000009fe8	add	x29, sp, #0x10
0000000000009fec	mov	x19, x1
0000000000009ff0	adr	x8, #0x78853
0000000000009ff4	nop
0000000000009ff8	ldarb	w8, [x8]
0000000000009ffc	tbz	w8, #0x0, 0xa004
000000000000a000	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000a004	adr	x0, #0x573ac
000000000000a008	nop
000000000000a00c	str	x0, [x19]
000000000000a010	ldp	x29, x30, [sp, #0x10]
000000000000a014	ldp	x20, x19, [sp], #0x20
000000000000a018	ret
_checkRangeIndexes:
000000000000a01c	sub	sp, sp, #0x120
000000000000a020	stp	x28, x27, [sp, #0xd0]
000000000000a024	stp	x24, x23, [sp, #0xe0]
000000000000a028	stp	x22, x21, [sp, #0xf0]
000000000000a02c	stp	x20, x19, [sp, #0x100]
000000000000a030	stp	x29, x30, [sp, #0x110]
000000000000a034	add	x29, sp, #0x110
000000000000a038	mov	x21, x2
000000000000a03c	mov	x20, x1
000000000000a040	mov	x22, x0
000000000000a044	str	xzr, [sp, #0xc0]
000000000000a048	movi.16b	v0, #0x0
000000000000a04c	stp	q0, q0, [sp, #0xa0]
000000000000a050	stp	q0, q0, [sp, #0x80]
000000000000a054	stp	q0, q0, [sp, #0x60]
000000000000a058	stp	q0, q0, [sp, #0x40]
000000000000a05c	str	q0, [sp, #0x30]
000000000000a060	add	x24, sp, #0x30
000000000000a064	stp	xzr, xzr, [sp, #0x20]
000000000000a068	adr	x8, #0x4e328
000000000000a06c	nop
000000000000a070	orr	x8, x8, #0x3
000000000000a074	stp	xzr, x8, [sp, #0x10]
000000000000a078	stp	x8, xzr, [sp]
000000000000a07c	adrp	x19, 94 ; 0x68000
000000000000a080	add	x19, x19, #0xa00
000000000000a084	ldr	x23, [x19]
000000000000a088	mov	x0, x19
000000000000a08c	blr	x23
000000000000a090	ldr	x8, [x0]
000000000000a094	ldr	x9, [x8, #0x110]
000000000000a098	str	x24, [x8, #0x110]
000000000000a09c	mov	x8, #0x1300000000
000000000000a0a0	stp	x9, x8, [sp, #0x38]
000000000000a0a4	adr	x8, #0x7879f
000000000000a0a8	nop
000000000000a0ac	ldarb	w8, [x8]
000000000000a0b0	tbz	w8, #0x0, 0xa0b8
000000000000a0b4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000a0b8	tbnz	w22, #0x1f, 0xa0fc
000000000000a0bc	cmp	w20, w21
000000000000a0c0	b.gt	0xa0fc
000000000000a0c4	cmp	w22, w20
000000000000a0c8	b.gt	0xa1d8
000000000000a0cc	mov	x0, x19
000000000000a0d0	blr	x23
000000000000a0d4	ldr	x8, [x0]
000000000000a0d8	ldr	x9, [sp, #0x38]
000000000000a0dc	str	x9, [x8, #0x110]
000000000000a0e0	ldp	x29, x30, [sp, #0x110]
000000000000a0e4	ldp	x20, x19, [sp, #0x100]
000000000000a0e8	ldp	x22, x21, [sp, #0xf0]
000000000000a0ec	ldp	x24, x23, [sp, #0xe0]
000000000000a0f0	ldp	x28, x27, [sp, #0xd0]
000000000000a0f4	add	sp, sp, #0x120
000000000000a0f8	ret
000000000000a0fc	add	x8, sp, #0x18
000000000000a100	str	x8, [sp, #0x48]
000000000000a104	add	x0, sp, #0x18
000000000000a108	mov	w1, #0xa
000000000000a10c	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
000000000000a110	add	x2, x24, #0x20
000000000000a114	adr	x1, #0x572cc
000000000000a118	nop
000000000000a11c	add	x0, sp, #0x18
000000000000a120	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000a124	add	x2, x24, #0x28
000000000000a128	add	x0, sp, #0x18
000000000000a12c	mov	x1, x22
000000000000a130	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
000000000000a134	add	x2, x24, #0x30
000000000000a138	adr	x1, #0x572d8
000000000000a13c	nop
000000000000a140	add	x0, sp, #0x18
000000000000a144	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000a148	add	x2, x24, #0x38
000000000000a14c	add	x0, sp, #0x18
000000000000a150	mov	x1, x20
000000000000a154	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
000000000000a158	add	x2, x24, #0x40
000000000000a15c	adr	x1, #0x572e4
000000000000a160	nop
000000000000a164	add	x0, sp, #0x18
000000000000a168	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000a16c	add	x2, x24, #0x48
000000000000a170	add	x0, sp, #0x18
000000000000a174	mov	x1, x21
000000000000a178	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
000000000000a17c	add	x1, x24, #0x50
000000000000a180	add	x0, sp, #0x18
000000000000a184	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
000000000000a188	mov	x20, x0
000000000000a18c	mov	x0, x19
000000000000a190	blr	x23
000000000000a194	ldr	x8, [x0]
000000000000a198	ldr	x8, [x8, #0x118]
000000000000a19c	add	x0, x8, #0x70
000000000000a1a0	mov	w1, #0x38
000000000000a1a4	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000a1a8	mov	x21, x0
000000000000a1ac	adr	x8, #0x4aa34
000000000000a1b0	nop
000000000000a1b4	str	x8, [x21, #0x10]!
000000000000a1b8	stur	xzr, [x21, #-0x8]
000000000000a1bc	str	x21, [sp, #0x88]
000000000000a1c0	mov	x0, x21
000000000000a1c4	mov	x1, x20
000000000000a1c8	bl	"_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}"
000000000000a1cc	mov	x0, x21
000000000000a1d0	bl	_ThrowException
000000000000a1d4	b	0xa28c
000000000000a1d8	mov	x8, sp
000000000000a1dc	str	x8, [sp, #0x90]
000000000000a1e0	mov	x0, sp
000000000000a1e4	mov	w1, #0xa
000000000000a1e8	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
000000000000a1ec	add	x2, x24, #0x68
000000000000a1f0	adr	x1, #0x571f0
000000000000a1f4	nop
000000000000a1f8	mov	x0, sp
000000000000a1fc	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000a200	add	x2, x24, #0x70
000000000000a204	mov	x0, sp
000000000000a208	mov	x1, x22
000000000000a20c	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
000000000000a210	add	x2, x24, #0x78
000000000000a214	adr	x1, #0x5724c
000000000000a218	nop
000000000000a21c	mov	x0, sp
000000000000a220	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000a224	add	x2, x24, #0x80
000000000000a228	mov	x0, sp
000000000000a22c	mov	x1, x20
000000000000a230	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
000000000000a234	add	x1, x24, #0x88
000000000000a238	mov	x0, sp
000000000000a23c	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
000000000000a240	mov	x20, x0
000000000000a244	mov	x0, x19
000000000000a248	blr	x23
000000000000a24c	ldr	x8, [x0]
000000000000a250	ldr	x8, [x8, #0x118]
000000000000a254	add	x0, x8, #0x70
000000000000a258	mov	w1, #0x38
000000000000a25c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000a260	mov	x21, x0
000000000000a264	adr	x8, #0x4aa1c
000000000000a268	nop
000000000000a26c	str	x8, [x21, #0x10]!
000000000000a270	stur	xzr, [x21, #-0x8]
000000000000a274	str	x21, [sp, #0xc0]
000000000000a278	mov	x0, x21
000000000000a27c	mov	x1, x20
000000000000a280	bl	"_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}"
000000000000a284	mov	x0, x21
000000000000a288	bl	_ThrowException
000000000000a28c	brk	#0x1
000000000000a290	mov	x1, x0
000000000000a294	mov	x0, x19
000000000000a298	blr	x23
000000000000a29c	ldr	x8, [x0]
000000000000a2a0	ldr	x9, [sp, #0x38]
000000000000a2a4	str	x9, [x8, #0x110]
000000000000a2a8	mov	x0, x1
000000000000a2ac	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
_kfun:kotlin.collections#resetAt__at__kotlin.Array<0:0>(kotlin.Int){0ยง<kotlin.Any?>}:
000000000000a2b0	stp	x20, x19, [sp, #-0x20]!
000000000000a2b4	stp	x29, x30, [sp, #0x10]
000000000000a2b8	add	x29, sp, #0x10
000000000000a2bc	mov	x20, x1
000000000000a2c0	mov	x19, x0
000000000000a2c4	adr	x8, #0x7857f
000000000000a2c8	nop
000000000000a2cc	ldarb	w8, [x8]
000000000000a2d0	tbz	w8, #0x0, 0xa2d8
000000000000a2d4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000a2d8	ldr	x8, [x19]
000000000000a2dc	and	x8, x8, #0xfffffffffffffffc
000000000000a2e0	ldr	x8, [x8]
000000000000a2e4	ldr	w8, [x8, #0x5c]
000000000000a2e8	cmp	w8, #0x49
000000000000a2ec	b.ne	0xa314
000000000000a2f0	ldr	w8, [x19, #0x8]
000000000000a2f4	cmp	w8, w20
000000000000a2f8	b.ls	0xa324
000000000000a2fc	ldr	xzr, [x19]
000000000000a300	add	x8, x19, w20, sxtw #3
000000000000a304	str	xzr, [x8, #0x10]
000000000000a308	ldp	x29, x30, [sp, #0x10]
000000000000a30c	ldp	x20, x19, [sp], #0x20
000000000000a310	ret
000000000000a314	adr	x1, #0x4a2cc
000000000000a318	nop
000000000000a31c	mov	x0, x19
000000000000a320	bl	_ThrowClassCastException
000000000000a324	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.collections#resetRange__at__kotlin.Array<0:0>(kotlin.Int;kotlin.Int){0ยง<kotlin.Any?>}:
000000000000a328	stp	x22, x21, [sp, #-0x30]!
000000000000a32c	stp	x20, x19, [sp, #0x10]
000000000000a330	stp	x29, x30, [sp, #0x20]
000000000000a334	add	x29, sp, #0x20
000000000000a338	mov	x20, x2
000000000000a33c	mov	x21, x1
000000000000a340	mov	x19, x0
000000000000a344	adr	x8, #0x784ff
000000000000a348	nop
000000000000a34c	ldarb	w8, [x8]
000000000000a350	tbz	w8, #0x0, 0xa358
000000000000a354	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000a358	ldr	x8, [x19]
000000000000a35c	and	x8, x8, #0xfffffffffffffffc
000000000000a360	ldr	x8, [x8]
000000000000a364	ldr	w8, [x8, #0x5c]
000000000000a368	cmp	w8, #0x49
000000000000a36c	b.ne	0xa3f8
000000000000a370	ldr	w2, [x19, #0x8]
000000000000a374	mov	x0, x21
000000000000a378	mov	x1, x20
000000000000a37c	bl	_checkRangeIndexes
000000000000a380	ldr	xzr, [x19]
000000000000a384	cmp	w21, w20
000000000000a388	b.ge	0xa3e8
000000000000a38c	sxtw	x11, w21
000000000000a390	mvn	w8, w21
000000000000a394	adds	w8, w8, w20
000000000000a398	b.eq	0xa3cc
000000000000a39c	add	x9, x8, #0x1
000000000000a3a0	and	x10, x9, #0x1fffffffe
000000000000a3a4	add	x8, x10, x11
000000000000a3a8	add	x11, x19, x11, lsl #3
000000000000a3ac	add	x11, x11, #0x10
000000000000a3b0	mov	x12, x10
000000000000a3b4	stp	xzr, xzr, [x11], #0x10
000000000000a3b8	subs	x12, x12, #0x2
000000000000a3bc	b.ne	0xa3b4
000000000000a3c0	cmp	x9, x10
000000000000a3c4	b.ne	0xa3d0
000000000000a3c8	b	0xa3e8
000000000000a3cc	mov	x8, x11
000000000000a3d0	sub	w9, w20, w8
000000000000a3d4	add	x8, x19, x8, lsl #3
000000000000a3d8	add	x8, x8, #0x10
000000000000a3dc	str	xzr, [x8], #0x8
000000000000a3e0	subs	w9, w9, #0x1
000000000000a3e4	b.ne	0xa3dc
000000000000a3e8	ldp	x29, x30, [sp, #0x20]
000000000000a3ec	ldp	x20, x19, [sp, #0x10]
000000000000a3f0	ldp	x22, x21, [sp], #0x30
000000000000a3f4	ret
000000000000a3f8	adr	x1, #0x4a1e8
000000000000a3fc	nop
000000000000a400	mov	x0, x19
000000000000a404	bl	_ThrowClassCastException
_kfun:kotlin.io#println(kotlin.Any?){}:
000000000000a408	sub	sp, sp, #0x40
000000000000a40c	stp	x20, x19, [sp, #0x20]
000000000000a410	stp	x29, x30, [sp, #0x30]
000000000000a414	add	x29, sp, #0x30
000000000000a418	mov	x19, x0
000000000000a41c	movi.16b	v0, #0x0
000000000000a420	stp	q0, q0, [sp]
000000000000a424	adrp	x0, 94 ; 0x68000
000000000000a428	add	x0, x0, #0xa00
000000000000a42c	ldr	x8, [x0]
000000000000a430	blr	x8
000000000000a434	ldr	x20, [x0]
000000000000a438	ldr	x8, [x20, #0x110]
000000000000a43c	mov	x9, sp
000000000000a440	str	x9, [x20, #0x110]
000000000000a444	mov	x9, #0x400000000
000000000000a448	stp	x8, x9, [sp, #0x8]
000000000000a44c	adr	x8, #0x783f7
000000000000a450	nop
000000000000a454	ldarb	w8, [x8]
000000000000a458	tbz	w8, #0x0, 0xa460
000000000000a45c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000a460	cbz	x19, 0xa488
000000000000a464	mov	x8, sp
000000000000a468	add	x1, x8, #0x18
000000000000a46c	ldr	x8, [x19]
000000000000a470	and	x8, x8, #0xfffffffffffffffc
000000000000a474	ldr	x8, [x8]
000000000000a478	ldr	x8, [x8, #0x80]
000000000000a47c	mov	x0, x19
000000000000a480	blr	x8
000000000000a484	b	0xa490
000000000000a488	adr	x0, #0x56c18
000000000000a48c	nop
000000000000a490	bl	_Kotlin_io_Console_println
000000000000a494	ldr	x8, [sp, #0x8]
000000000000a498	str	x8, [x20, #0x110]
000000000000a49c	ldp	x29, x30, [sp, #0x30]
000000000000a4a0	ldp	x20, x19, [sp, #0x20]
000000000000a4a4	add	sp, sp, #0x40
000000000000a4a8	ret
_kfun:kotlin.native.MemoryModel.$OBJECT#<init>(){}:
000000000000a4ac	sub	sp, sp, #0x170
000000000000a4b0	stp	x24, x23, [sp, #0x130]
000000000000a4b4	stp	x22, x21, [sp, #0x140]
000000000000a4b8	stp	x20, x19, [sp, #0x150]
000000000000a4bc	stp	x29, x30, [sp, #0x160]
000000000000a4c0	add	x29, sp, #0x160
000000000000a4c4	mov	x19, x0
000000000000a4c8	str	xzr, [sp, #0x120]
000000000000a4cc	movi.16b	v0, #0x0
000000000000a4d0	stp	q0, q0, [sp, #0x100]
000000000000a4d4	stp	q0, q0, [sp, #0xe0]
000000000000a4d8	stp	q0, q0, [sp, #0xc0]
000000000000a4dc	stp	q0, q0, [sp, #0xa0]
000000000000a4e0	stp	q0, q0, [sp, #0x80]
000000000000a4e4	stp	q0, q0, [sp, #0x60]
000000000000a4e8	stp	q0, q0, [sp, #0x40]
000000000000a4ec	stp	q0, q0, [sp, #0x20]
000000000000a4f0	stp	q0, q0, [sp]
000000000000a4f4	mov	x8, sp
000000000000a4f8	add	x20, x8, #0x120
000000000000a4fc	adrp	x0, 94 ; 0x68000
000000000000a500	add	x0, x0, #0xa00
000000000000a504	ldr	x9, [x0]
000000000000a508	blr	x9
000000000000a50c	ldr	x21, [x0]
000000000000a510	ldr	x9, [x21, #0x110]
000000000000a514	str	x8, [x21, #0x110]
000000000000a518	mov	x8, #0x2500000000
000000000000a51c	stp	x9, x8, [sp, #0x8]
000000000000a520	adr	x8, #0x78323
000000000000a524	nop
000000000000a528	ldarb	w8, [x8]
000000000000a52c	tbz	w8, #0x0, 0xa534
000000000000a530	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000a534	ldr	x8, [x21, #0x118]
000000000000a538	add	x0, x8, #0x70
000000000000a53c	mov	w1, #0x20
000000000000a540	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000a544	adr	x22, #0x4b4ec
000000000000a548	nop
000000000000a54c	str	x22, [x0, #0x10]!
000000000000a550	stur	xzr, [x0, #-0x8]
000000000000a554	stp	x0, x0, [sp, #0x18]
000000000000a558	ldr	x8, [x21, #0x118]
000000000000a55c	add	x0, x8, #0x70
000000000000a560	mov	w1, #0x20
000000000000a564	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000a568	str	x22, [x0, #0x10]!
000000000000a56c	stur	xzr, [x0, #-0x8]
000000000000a570	stp	x0, x0, [sp, #0x28]
000000000000a574	ldr	x8, [x21, #0x118]
000000000000a578	add	x0, x8, #0x70
000000000000a57c	mov	w1, #0x20
000000000000a580	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000a584	str	x22, [x0, #0x10]!
000000000000a588	stur	xzr, [x0, #-0x8]
000000000000a58c	stp	x0, x0, [sp, #0x38]
000000000000a590	ldr	x8, [x21, #0x118]
000000000000a594	add	x0, x8, #0x70
000000000000a598	mov	w1, #0x30
000000000000a59c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000a5a0	adr	x22, #0x4a040
000000000000a5a4	nop
000000000000a5a8	stp	x22, xzr, [x0, #0x10]!
000000000000a5ac	stur	xzr, [x0, #-0x8]
000000000000a5b0	mov	w23, #0x3
000000000000a5b4	str	w23, [x0, #0x8]
000000000000a5b8	stp	x0, x0, [sp, #0x48]
000000000000a5bc	ldr	x8, [sp, #0x20]
000000000000a5c0	stp	x0, x8, [sp, #0x58]
000000000000a5c4	ldr	xzr, [x0]
000000000000a5c8	str	x8, [x0, #0x10]
000000000000a5cc	ldr	x8, [sp, #0x50]
000000000000a5d0	ldr	x9, [sp, #0x30]
000000000000a5d4	stp	x8, x9, [sp, #0x68]
000000000000a5d8	ldr	xzr, [x8]
000000000000a5dc	str	x9, [x8, #0x18]
000000000000a5e0	ldr	x8, [sp, #0x50]
000000000000a5e4	ldr	x9, [sp, #0x40]
000000000000a5e8	stp	x8, x9, [sp, #0x78]
000000000000a5ec	ldr	xzr, [x8]
000000000000a5f0	str	x9, [x8, #0x20]
000000000000a5f4	ldr	x8, [sp, #0x50]
000000000000a5f8	str	x8, [sp, #0x88]
000000000000a5fc	str	x8, [x19, #0x8]
000000000000a600	ldr	x9, [x8, #0x20]
000000000000a604	str	x9, [sp, #0x90]
000000000000a608	adr	x10, #0x56e88
000000000000a60c	nop
000000000000a610	str	x10, [x9, #0x8]
000000000000a614	str	wzr, [x9, #0x10]
000000000000a618	ldr	x9, [x8, #0x18]
000000000000a61c	str	x9, [sp, #0x98]
000000000000a620	adr	x10, #0x56e90
000000000000a624	nop
000000000000a628	str	x10, [x9, #0x8]
000000000000a62c	mov	w10, #0x1
000000000000a630	str	w10, [x9, #0x10]
000000000000a634	ldr	x8, [x8, #0x10]
000000000000a638	str	x8, [sp, #0xa0]
000000000000a63c	adr	x9, #0x56e94
000000000000a640	nop
000000000000a644	str	x9, [x8, #0x8]
000000000000a648	mov	w9, #0x2
000000000000a64c	str	w9, [x8, #0x10]
000000000000a650	ldr	x8, [x19, #0x8]
000000000000a654	ldr	x9, [x8, #0x20]
000000000000a658	stp	x9, x9, [sp, #0xa8]
000000000000a65c	ldr	x9, [x8, #0x18]
000000000000a660	stp	x9, x9, [sp, #0xb8]
000000000000a664	ldr	x8, [x8, #0x10]
000000000000a668	stp	x8, x8, [sp, #0xc8]
000000000000a66c	ldr	x8, [x21, #0x118]
000000000000a670	add	x0, x8, #0x70
000000000000a674	mov	w1, #0x30
000000000000a678	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000a67c	stp	x22, xzr, [x0, #0x10]!
000000000000a680	stur	xzr, [x0, #-0x8]
000000000000a684	str	w23, [x0, #0x8]
000000000000a688	stp	x0, x0, [sp, #0xd8]
000000000000a68c	ldr	x8, [sp, #0xb0]
000000000000a690	stp	x0, x8, [sp, #0xe8]
000000000000a694	ldr	xzr, [x0]
000000000000a698	str	x8, [x0, #0x10]
000000000000a69c	ldr	x8, [sp, #0xe0]
000000000000a6a0	ldr	x9, [sp, #0xc0]
000000000000a6a4	stp	x8, x9, [sp, #0xf8]
000000000000a6a8	ldr	xzr, [x8]
000000000000a6ac	str	x9, [x8, #0x18]
000000000000a6b0	ldr	x8, [sp, #0xe0]
000000000000a6b4	ldr	x9, [sp, #0xd0]
000000000000a6b8	stp	x8, x9, [sp, #0x108]
000000000000a6bc	ldr	xzr, [x8]
000000000000a6c0	str	x9, [x8, #0x20]
000000000000a6c4	ldr	x0, [sp, #0xe0]
000000000000a6c8	str	x0, [sp, #0x118]
000000000000a6cc	mov	x1, x20
000000000000a6d0	bl	"_kfun:kotlin.enums#enumEntries(kotlin.Array<0:0>){0ยง<kotlin.Enum<0:0>>}kotlin.enums.EnumEntries<0:0>"
000000000000a6d4	str	x0, [x19, #0x10]
000000000000a6d8	ldr	x8, [sp, #0x8]
000000000000a6dc	str	x8, [x21, #0x110]
000000000000a6e0	ldp	x29, x30, [sp, #0x160]
000000000000a6e4	ldp	x20, x19, [sp, #0x150]
000000000000a6e8	ldp	x22, x21, [sp, #0x140]
000000000000a6ec	ldp	x24, x23, [sp, #0x130]
000000000000a6f0	add	sp, sp, #0x170
000000000000a6f4	ret
_kfun:kotlin.native.concurrent.FreezableAtomicReference#toString(){}kotlin.String:
000000000000a6f8	sub	sp, sp, #0xc0
000000000000a6fc	stp	x26, x25, [sp, #0x70]
000000000000a700	stp	x24, x23, [sp, #0x80]
000000000000a704	stp	x22, x21, [sp, #0x90]
000000000000a708	stp	x20, x19, [sp, #0xa0]
000000000000a70c	stp	x29, x30, [sp, #0xb0]
000000000000a710	add	x29, sp, #0xb0
000000000000a714	mov	x19, x1
000000000000a718	mov	x20, x0
000000000000a71c	movi.16b	v0, #0x0
000000000000a720	stp	q0, q0, [sp, #0x20]
000000000000a724	stp	q0, q0, [sp, #0x50]
000000000000a728	str	q0, [sp, #0x40]
000000000000a72c	add	x8, sp, #0x20
000000000000a730	add	x25, x8, #0x20
000000000000a734	add	x23, x8, #0x30
000000000000a738	add	x22, x8, #0x40
000000000000a73c	add	x24, x8, #0x28
000000000000a740	add	x21, x8, #0x48
000000000000a744	stp	xzr, xzr, [sp, #0x10]
000000000000a748	adr	x9, #0x4dc48
000000000000a74c	nop
000000000000a750	orr	x9, x9, #0x3
000000000000a754	str	x9, [sp, #0x8]
000000000000a758	adrp	x0, 94 ; 0x68000
000000000000a75c	add	x0, x0, #0xa00
000000000000a760	ldr	x9, [x0]
000000000000a764	blr	x9
000000000000a768	ldr	x26, [x0]
000000000000a76c	ldr	x9, [x26, #0x110]
000000000000a770	str	x8, [x26, #0x110]
000000000000a774	mov	x8, #0xa00000000
000000000000a778	stp	x9, x8, [sp, #0x28]
000000000000a77c	adr	x8, #0x780c7
000000000000a780	nop
000000000000a784	ldarb	w8, [x8]
000000000000a788	tbz	w8, #0x0, 0xa790
000000000000a78c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000a790	add	x8, sp, #0x8
000000000000a794	str	x8, [sp, #0x38]
000000000000a798	add	x0, sp, #0x8
000000000000a79c	mov	w1, #0xa
000000000000a7a0	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
000000000000a7a4	mov	x0, x20
000000000000a7a8	mov	x1, x25
000000000000a7ac	bl	"_kfun:kotlin.native.concurrent.debugString#internal"
000000000000a7b0	mov	x1, x0
000000000000a7b4	add	x0, sp, #0x8
000000000000a7b8	mov	x2, x24
000000000000a7bc	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000a7c0	adr	x1, #0x56d40
000000000000a7c4	nop
000000000000a7c8	add	x0, sp, #0x8
000000000000a7cc	mov	x2, x23
000000000000a7d0	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000a7d4	add	x8, x20, #0x8
000000000000a7d8	ldar	x0, [x8]
000000000000a7dc	str	x0, [sp, #0x58]
000000000000a7e0	mov	x1, x22
000000000000a7e4	bl	"_kfun:kotlin.native.concurrent.debugString#internal"
000000000000a7e8	mov	x1, x0
000000000000a7ec	add	x0, sp, #0x8
000000000000a7f0	mov	x2, x21
000000000000a7f4	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000a7f8	add	x0, sp, #0x8
000000000000a7fc	mov	x1, x19
000000000000a800	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
000000000000a804	str	x0, [x19]
000000000000a808	ldr	x8, [sp, #0x28]
000000000000a80c	str	x8, [x26, #0x110]
000000000000a810	ldp	x29, x30, [sp, #0xb0]
000000000000a814	ldp	x20, x19, [sp, #0xa0]
000000000000a818	ldp	x22, x21, [sp, #0x90]
000000000000a81c	ldp	x24, x23, [sp, #0x80]
000000000000a820	ldp	x26, x25, [sp, #0x70]
000000000000a824	add	sp, sp, #0xc0
000000000000a828	ret
_kfun:kotlin.native.concurrent.debugString#internal:
000000000000a82c	sub	sp, sp, #0x150
000000000000a830	stp	x26, x25, [sp, #0x100]
000000000000a834	stp	x24, x23, [sp, #0x110]
000000000000a838	stp	x22, x21, [sp, #0x120]
000000000000a83c	stp	x20, x19, [sp, #0x130]
000000000000a840	stp	x29, x30, [sp, #0x140]
000000000000a844	add	x29, sp, #0x140
000000000000a848	mov	x19, x1
000000000000a84c	mov	x20, x0
000000000000a850	movi.16b	v0, #0x0
000000000000a854	stp	q0, q0, [sp, #0x30]
000000000000a858	stp	q0, q0, [sp, #0x60]
000000000000a85c	str	q0, [sp, #0x50]
000000000000a860	stp	xzr, xzr, [sp, #0x20]
000000000000a864	adr	x8, #0x4db2c
000000000000a868	nop
000000000000a86c	orr	x8, x8, #0x3
000000000000a870	stp	xzr, x8, [sp, #0x10]
000000000000a874	adr	x8, #0x4b7cc
000000000000a878	nop
000000000000a87c	orr	x8, x8, #0x3
000000000000a880	str	x8, [sp, #0x8]
000000000000a884	adrp	x0, 94 ; 0x68000
000000000000a888	add	x0, x0, #0xa00
000000000000a88c	ldr	x8, [x0]
000000000000a890	blr	x8
000000000000a894	ldr	x25, [x0]
000000000000a898	ldr	x8, [x25, #0x110]
000000000000a89c	add	x9, sp, #0x30
000000000000a8a0	str	x9, [x25, #0x110]
000000000000a8a4	mov	x9, #0xa00000000
000000000000a8a8	stp	x8, x9, [sp, #0x38]
000000000000a8ac	adr	x8, #0x77f97
000000000000a8b0	nop
000000000000a8b4	ldarb	w8, [x8]
000000000000a8b8	tbz	w8, #0x0, 0xa8c0
000000000000a8bc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000a8c0	cbz	x20, 0xa9a8
000000000000a8c4	add	x8, sp, #0x30
000000000000a8c8	add	x21, x8, #0x48
000000000000a8cc	add	x22, x8, #0x38
000000000000a8d0	add	x23, x8, #0x30
000000000000a8d4	add	x24, x8, #0x28
000000000000a8d8	add	x8, sp, #0x18
000000000000a8dc	str	x8, [sp, #0x48]
000000000000a8e0	add	x0, sp, #0x18
000000000000a8e4	mov	w1, #0xa
000000000000a8e8	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
000000000000a8ec	ldr	x8, [x20]
000000000000a8f0	and	x8, x8, #0xfffffffffffffffc
000000000000a8f4	ldr	x8, [x8]
000000000000a8f8	add	x9, sp, #0x8
000000000000a8fc	str	x9, [sp, #0x50]
000000000000a900	str	x8, [sp, #0x10]
000000000000a904	add	x0, sp, #0x8
000000000000a908	mov	x1, x24
000000000000a90c	bl	"_kfun:kotlin.native.internal.KClassImpl#<get-qualifiedName>(){}kotlin.String?"
000000000000a910	mov	x1, x0
000000000000a914	add	x0, sp, #0x18
000000000000a918	mov	x2, x23
000000000000a91c	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000a920	adr	x1, #0x56a70
000000000000a924	nop
000000000000a928	add	x0, sp, #0x18
000000000000a92c	mov	x2, x22
000000000000a930	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000a934	movi.16b	v0, #0x0
000000000000a938	stp	q0, q0, [sp, #0x80]
000000000000a93c	add	x8, sp, #0x80
000000000000a940	add	x22, x8, #0x18
000000000000a944	ldr	x9, [x25, #0x110]
000000000000a948	str	x8, [x25, #0x110]
000000000000a94c	mov	x8, #0x400000000
000000000000a950	stp	x9, x8, [sp, #0x88]
000000000000a954	ldr	x8, [x20]
000000000000a958	and	x8, x8, #0xfffffffffffffffc
000000000000a95c	ldr	x8, [x8]
000000000000a960	ldr	x8, [x8, #0x78]
000000000000a964	mov	x0, x20
000000000000a968	blr	x8
000000000000a96c	mov	w0, w0
000000000000a970	mov	w1, #0x10
000000000000a974	mov	x2, x22
000000000000a978	bl	_Kotlin_Long_toStringRadix
000000000000a97c	mov	x1, x0
000000000000a980	str	x0, [sp, #0x70]
000000000000a984	ldr	x8, [sp, #0x88]
000000000000a988	str	x8, [x25, #0x110]
000000000000a98c	add	x0, sp, #0x18
000000000000a990	mov	x2, x21
000000000000a994	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000a998	add	x0, sp, #0x18
000000000000a99c	mov	x1, x19
000000000000a9a0	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
000000000000a9a4	b	0xa9b0
000000000000a9a8	adr	x0, #0x566f8
000000000000a9ac	nop
000000000000a9b0	str	x0, [x19]
000000000000a9b4	ldr	x8, [sp, #0x38]
000000000000a9b8	str	x8, [x25, #0x110]
000000000000a9bc	ldp	x29, x30, [sp, #0x140]
000000000000a9c0	ldp	x20, x19, [sp, #0x130]
000000000000a9c4	ldp	x22, x21, [sp, #0x120]
000000000000a9c8	ldp	x24, x23, [sp, #0x110]
000000000000a9cc	ldp	x26, x25, [sp, #0x100]
000000000000a9d0	add	sp, sp, #0x150
000000000000a9d4	ret
_kfun:kotlin.native.concurrent.AtomicInt#toString(){}kotlin.String:
000000000000a9d8	sub	sp, sp, #0x40
000000000000a9dc	stp	x20, x19, [sp, #0x20]
000000000000a9e0	stp	x29, x30, [sp, #0x30]
000000000000a9e4	add	x29, sp, #0x30
000000000000a9e8	mov	x19, x1
000000000000a9ec	mov	x20, x0
000000000000a9f0	adr	x8, #0x77e53
000000000000a9f4	nop
000000000000a9f8	ldarb	w8, [x8]
000000000000a9fc	tbz	w8, #0x0, 0xaa04
000000000000aa00	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000aa04	add	x8, x20, #0x8
000000000000aa08	ldar	w8, [x8]
000000000000aa0c	str	x8, [sp]
000000000000aa10	adr	x2, #0x48290 ; literal pool for: "%d"
000000000000aa14	nop
000000000000aa18	add	x0, sp, #0x10
000000000000aa1c	mov	w1, #0x10
000000000000aa20	bl	__ZN5konan8snprintfEPcmPKcz
000000000000aa24	add	x0, sp, #0x10
000000000000aa28	mov	x1, x19
000000000000aa2c	bl	_CreateStringFromCString
000000000000aa30	str	x0, [x19]
000000000000aa34	ldp	x29, x30, [sp, #0x30]
000000000000aa38	ldp	x20, x19, [sp, #0x20]
000000000000aa3c	add	sp, sp, #0x40
000000000000aa40	ret
_kfun:kotlin.native.concurrent.SynchronizedLazyImpl#<get-value>(){}1:0:
000000000000aa44	sub	sp, sp, #0x150
000000000000aa48	stp	x28, x27, [sp, #0xf0]
000000000000aa4c	stp	x26, x25, [sp, #0x100]
000000000000aa50	stp	x24, x23, [sp, #0x110]
000000000000aa54	stp	x22, x21, [sp, #0x120]
000000000000aa58	stp	x20, x19, [sp, #0x130]
000000000000aa5c	stp	x29, x30, [sp, #0x140]
000000000000aa60	add	x29, sp, #0x140
000000000000aa64	mov	x27, x1
000000000000aa68	mov	x20, x0
000000000000aa6c	movi.16b	v0, #0x0
000000000000aa70	stp	q0, q0, [sp, #0x10]
000000000000aa74	str	xzr, [sp, #0x90]
000000000000aa78	stp	q0, q0, [sp, #0x70]
000000000000aa7c	stp	q0, q0, [sp, #0x50]
000000000000aa80	stp	q0, q0, [sp, #0x30]
000000000000aa84	add	x19, sp, #0x10
000000000000aa88	adrp	x0, 94 ; 0x68000
000000000000aa8c	add	x0, x0, #0xa00
000000000000aa90	ldr	x8, [x0]
000000000000aa94	blr	x8
000000000000aa98	ldr	x26, [x0]
000000000000aa9c	ldr	x8, [x26, #0x110]
000000000000aaa0	str	x19, [x26, #0x110]
000000000000aaa4	mov	x9, #0x1100000000
000000000000aaa8	stp	x8, x9, [sp, #0x18]
000000000000aaac	adr	x25, #0x77d97
000000000000aab0	nop
000000000000aab4	ldarb	w8, [x25]
000000000000aab8	tbz	w8, #0x0, 0xaac0
000000000000aabc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000aac0	ldr	x8, [x20, #0x10]
000000000000aac4	str	x8, [sp, #0x28]
000000000000aac8	add	x8, x8, #0x8
000000000000aacc	ldar	x21, [x8]
000000000000aad0	str	x21, [sp, #0x30]
000000000000aad4	adr	x28, #0x77dcc
000000000000aad8	nop
000000000000aadc	ldar	x22, [x28]
000000000000aae0	cmp	x22, #0x2
000000000000aae4	b.hs	0xabd8
000000000000aae8	ldp	x8, x9, [x26, #0x120]
000000000000aaec	cmp	x8, x9
000000000000aaf0	b.eq	0xab10
000000000000aaf4	mov	x10, x9
000000000000aaf8	ldr	x11, [x10, #-0x10]!
000000000000aafc	cmp	x11, x28
000000000000ab00	b.eq	0xabd0
000000000000ab04	mov	x9, x10
000000000000ab08	cmp	x10, x8
000000000000ab0c	b.ne	0xaaf8
000000000000ab10	add	x23, x26, #0x120
000000000000ab14	add	x0, x26, #0x138
000000000000ab18	mov	w9, #0x1
000000000000ab1c	ldaxr	w8, [x0]
000000000000ab20	stlxr	w10, w9, [x0]
000000000000ab24	cbnz	w10, 0xab1c
000000000000ab28	b	0xab38
000000000000ab2c	mov	w24, #0x1
000000000000ab30	stlxr	w9, x24, [x28]
000000000000ab34	cbz	w9, 0xab48
000000000000ab38	ldaxr	x22, [x28]
000000000000ab3c	cbz	x22, 0xab2c
000000000000ab40	mov	w24, #0x0
000000000000ab44	clrex
000000000000ab48	cmp	x22, #0x1
000000000000ab4c	b.eq	0xab38
000000000000ab50	cbz	x26, 0xab78
000000000000ab54	ldaxr	w9, [x0]
000000000000ab58	stlxr	w10, w8, [x0]
000000000000ab5c	cbnz	w10, 0xab54
000000000000ab60	cbnz	w8, 0xab78
000000000000ab64	cmp	w9, #0x1
000000000000ab68	b.ne	0xab78
000000000000ab6c	ldarb	w8, [x25]
000000000000ab70	tbz	w8, #0x0, 0xab78
000000000000ab74	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000000ab78	tbz	w24, #0x0, 0xabc0
000000000000ab7c	ldr	x8, [x26, #0x118]
000000000000ab80	add	x0, x8, #0x70
000000000000ab84	mov	w1, #0x10
000000000000ab88	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000ab8c	mov	x22, x0
000000000000ab90	adr	x8, #0x4b170
000000000000ab94	nop
000000000000ab98	str	x8, [x22, #0x10]!
000000000000ab9c	stur	xzr, [x22, #-0x8]
000000000000aba0	str	x22, [sp, #0x38]
000000000000aba4	ldp	x9, x8, [x26, #0x128]
000000000000aba8	cmp	x9, x8
000000000000abac	b.hs	0xace8
000000000000abb0	stp	x28, x22, [x9]
000000000000abb4	add	x8, x9, #0x10
000000000000abb8	str	x8, [x26, #0x128]
000000000000abbc	b	0xad7c
000000000000abc0	str	x22, [sp, #0x38]
000000000000abc4	cmp	x22, x21
000000000000abc8	b.ne	0xafd8
000000000000abcc	b	0xabe0
000000000000abd0	ldur	x22, [x9, #-0x8]
000000000000abd4	str	x22, [sp, #0x38]
000000000000abd8	cmp	x22, x21
000000000000abdc	b.ne	0xafd8
000000000000abe0	ldr	x22, [x20, #0x18]
000000000000abe4	mov	x0, x22
000000000000abe8	bl	"_kfun:kotlin.native.concurrent.Lock#lock(){}"
000000000000abec	ldr	x8, [x20, #0x10]
000000000000abf0	str	x8, [sp, #0x40]
000000000000abf4	add	x8, x8, #0x8
000000000000abf8	ldar	x21, [x8]
000000000000abfc	str	x21, [sp, #0x48]
000000000000ac00	ldar	x23, [x28]
000000000000ac04	cmp	x23, #0x2
000000000000ac08	b.hs	0xade8
000000000000ac0c	ldp	x8, x9, [x26, #0x120]
000000000000ac10	cmp	x8, x9
000000000000ac14	b.eq	0xac34
000000000000ac18	mov	x10, x9
000000000000ac1c	ldr	x11, [x10, #-0x10]!
000000000000ac20	cmp	x11, x28
000000000000ac24	b.eq	0xade0
000000000000ac28	mov	x9, x10
000000000000ac2c	cmp	x10, x8
000000000000ac30	b.ne	0xac1c
000000000000ac34	add	x8, x26, #0x120
000000000000ac38	str	x8, [sp, #0x8]
000000000000ac3c	add	x0, x26, #0x138
000000000000ac40	mov	w9, #0x1
000000000000ac44	ldaxr	w8, [x0]
000000000000ac48	stlxr	w10, w9, [x0]
000000000000ac4c	cbnz	w10, 0xac44
000000000000ac50	b	0xac60
000000000000ac54	mov	w24, #0x1
000000000000ac58	stlxr	w9, x24, [x28]
000000000000ac5c	cbz	w9, 0xac70
000000000000ac60	ldaxr	x23, [x28]
000000000000ac64	cbz	x23, 0xac54
000000000000ac68	mov	w24, #0x0
000000000000ac6c	clrex
000000000000ac70	cmp	x23, #0x1
000000000000ac74	b.eq	0xac60
000000000000ac78	cbz	x26, 0xaca0
000000000000ac7c	ldaxr	w9, [x0]
000000000000ac80	stlxr	w10, w8, [x0]
000000000000ac84	cbnz	w10, 0xac7c
000000000000ac88	cbnz	w8, 0xaca0
000000000000ac8c	cmp	w9, #0x1
000000000000ac90	b.ne	0xaca0
000000000000ac94	ldarb	w8, [x25]
000000000000ac98	tbz	w8, #0x0, 0xaca0
000000000000ac9c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000000aca0	tbz	w24, #0x0, 0xadd0
000000000000aca4	ldr	x8, [x26, #0x118]
000000000000aca8	add	x0, x8, #0x70
000000000000acac	mov	w1, #0x10
000000000000acb0	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000acb4	mov	x23, x0
000000000000acb8	adr	x8, #0x4b048
000000000000acbc	nop
000000000000acc0	str	x8, [x23, #0x10]!
000000000000acc4	stur	xzr, [x23, #-0x8]
000000000000acc8	str	x23, [sp, #0x58]
000000000000accc	ldp	x9, x8, [x26, #0x128]
000000000000acd0	cmp	x9, x8
000000000000acd4	b.hs	0xae74
000000000000acd8	stp	x28, x23, [x9]
000000000000acdc	add	x8, x9, #0x10
000000000000ace0	str	x8, [x26, #0x128]
000000000000ace4	b	0xaf08
000000000000ace8	str	x27, [sp, #0x8]
000000000000acec	ldr	x10, [x23]
000000000000acf0	sub	x9, x9, x10
000000000000acf4	asr	x19, x9, #4
000000000000acf8	add	x9, x19, #0x1
000000000000acfc	lsr	x11, x9, #60
000000000000ad00	cbnz	x11, 0xb010
000000000000ad04	sub	x8, x8, x10
000000000000ad08	asr	x10, x8, #3
000000000000ad0c	cmp	x10, x9
000000000000ad10	csel	x9, x9, x10, lo
000000000000ad14	mov	x10, #0x7ffffffffffffff
000000000000ad18	cmp	x10, x8, asr #4
000000000000ad1c	mov	x8, #0xfffffffffffffff
000000000000ad20	csel	x24, x9, x8, hi
000000000000ad24	mov	x0, x24
000000000000ad28	mov	w1, #0x10
000000000000ad2c	bl	0x4db20 ; symbol stub for: _calloc
000000000000ad30	add	x8, x0, x19, lsl #4
000000000000ad34	add	x27, x0, x24, lsl #4
000000000000ad38	stp	x28, x22, [x8]
000000000000ad3c	add	x19, x8, #0x10
000000000000ad40	ldp	x1, x9, [x26, #0x120]
000000000000ad44	sub	x2, x9, x1
000000000000ad48	sub	x24, x8, x2
000000000000ad4c	cmp	x2, #0x1
000000000000ad50	b.lt	0xad60
000000000000ad54	mov	x0, x24
000000000000ad58	bl	0x4dbec ; symbol stub for: _memcpy
000000000000ad5c	ldr	x1, [x23]
000000000000ad60	stp	x24, x19, [x26, #0x120]
000000000000ad64	str	x27, [x26, #0x130]
000000000000ad68	ldr	x27, [sp, #0x8]
000000000000ad6c	add	x19, sp, #0x10
000000000000ad70	cbz	x1, 0xad7c
000000000000ad74	mov	x0, x1
000000000000ad78	bl	0x4dba4 ; symbol stub for: _free
000000000000ad7c	mov	w0, #0x1
000000000000ad80	mov	w1, #0x28
000000000000ad84	bl	0x4db20 ; symbol stub for: _calloc
000000000000ad88	mov	x8, x26
000000000000ad8c	ldr	x9, [x8, #0x18]!
000000000000ad90	sub	x10, x8, #0x8
000000000000ad94	stp	x28, x10, [x0, #0x10]
000000000000ad98	stp	x9, x8, [x0]
000000000000ad9c	str	x0, [x9, #0x8]
000000000000ada0	str	x0, [x8]
000000000000ada4	ldr	x9, [x8, #0x10]
000000000000ada8	add	x9, x9, #0x1
000000000000adac	str	x9, [x8, #0x10]
000000000000adb0	str	x0, [x0, #0x20]
000000000000adb4	stlr	x22, [x28]
000000000000adb8	ldr	x9, [x8, #0x110]
000000000000adbc	sub	x9, x9, #0x10
000000000000adc0	str	x9, [x8, #0x110]
000000000000adc4	cmp	x22, x21
000000000000adc8	b.ne	0xafd8
000000000000adcc	b	0xabe0
000000000000add0	str	x23, [sp, #0x58]
000000000000add4	cmp	x23, x21
000000000000add8	b.ne	0xafd0
000000000000addc	b	0xadf0
000000000000ade0	ldur	x23, [x9, #-0x8]
000000000000ade4	str	x23, [sp, #0x58]
000000000000ade8	cmp	x23, x21
000000000000adec	b.ne	0xafd0
000000000000adf0	ldr	x8, [x20, #0x8]
000000000000adf4	str	x8, [sp, #0x60]
000000000000adf8	add	x8, x8, #0x8
000000000000adfc	ldar	x0, [x8]
000000000000ae00	str	x0, [sp, #0x68]
000000000000ae04	cbz	x0, 0xb008
000000000000ae08	add	x1, x19, #0x60
000000000000ae0c	ldr	x8, [x0]
000000000000ae10	and	x8, x8, #0xfffffffffffffffc
000000000000ae14	ldr	x8, [x8]
000000000000ae18	ldr	w9, [x8, #0x3c]
000000000000ae1c	ldr	x8, [x8, #0x40]
000000000000ae20	tbnz	w9, #0x1f, 0xae30
000000000000ae24	mov	w10, #0x59
000000000000ae28	and	x9, x9, x10
000000000000ae2c	b	0xaf9c
000000000000ae30	neg	w10, w9
000000000000ae34	mvn	w9, w9
000000000000ae38	cmp	w10, #0x9
000000000000ae3c	b.ge	0xaf5c
000000000000ae40	cmp	w10, #0x2
000000000000ae44	b.lt	0xaf90
000000000000ae48	mov	x10, #0x0
000000000000ae4c	mov	x11, x8
000000000000ae50	ldr	w12, [x11]
000000000000ae54	cmp	w12, #0x58
000000000000ae58	b.gt	0xaf98
000000000000ae5c	add	x10, x10, #0x1
000000000000ae60	add	x11, x11, #0x10
000000000000ae64	cmp	x9, x10
000000000000ae68	b.ne	0xae50
000000000000ae6c	mov	x10, x9
000000000000ae70	b	0xaf98
000000000000ae74	ldr	x10, [sp, #0x8]
000000000000ae78	ldr	x10, [x10]
000000000000ae7c	sub	x9, x9, x10
000000000000ae80	asr	x19, x9, #4
000000000000ae84	add	x9, x19, #0x1
000000000000ae88	lsr	x11, x9, #60
000000000000ae8c	cbnz	x11, 0xb018
000000000000ae90	sub	x8, x8, x10
000000000000ae94	asr	x10, x8, #3
000000000000ae98	cmp	x10, x9
000000000000ae9c	csel	x9, x9, x10, lo
000000000000aea0	mov	x10, #0x7ffffffffffffff
000000000000aea4	cmp	x10, x8, asr #4
000000000000aea8	mov	x8, #0xfffffffffffffff
000000000000aeac	csel	x25, x9, x8, hi
000000000000aeb0	mov	x0, x25
000000000000aeb4	mov	w1, #0x10
000000000000aeb8	bl	0x4db20 ; symbol stub for: _calloc
000000000000aebc	add	x8, x0, x19, lsl #4
000000000000aec0	add	x24, x0, x25, lsl #4
000000000000aec4	stp	x28, x23, [x8]
000000000000aec8	add	x19, x8, #0x10
000000000000aecc	ldp	x1, x9, [x26, #0x120]
000000000000aed0	sub	x2, x9, x1
000000000000aed4	sub	x25, x8, x2
000000000000aed8	cmp	x2, #0x1
000000000000aedc	b.lt	0xaef0
000000000000aee0	mov	x0, x25
000000000000aee4	bl	0x4dbec ; symbol stub for: _memcpy
000000000000aee8	ldr	x8, [sp, #0x8]
000000000000aeec	ldr	x1, [x8]
000000000000aef0	stp	x25, x19, [x26, #0x120]
000000000000aef4	str	x24, [x26, #0x130]
000000000000aef8	add	x19, sp, #0x10
000000000000aefc	cbz	x1, 0xaf08
000000000000af00	mov	x0, x1
000000000000af04	bl	0x4dba4 ; symbol stub for: _free
000000000000af08	mov	w0, #0x1
000000000000af0c	mov	w1, #0x28
000000000000af10	bl	0x4db20 ; symbol stub for: _calloc
000000000000af14	mov	x8, x26
000000000000af18	ldr	x9, [x8, #0x18]!
000000000000af1c	sub	x10, x8, #0x8
000000000000af20	stp	x28, x10, [x0, #0x10]
000000000000af24	stp	x9, x8, [x0]
000000000000af28	str	x0, [x9, #0x8]
000000000000af2c	str	x0, [x8]
000000000000af30	ldr	x9, [x8, #0x10]
000000000000af34	add	x9, x9, #0x1
000000000000af38	str	x9, [x8, #0x10]
000000000000af3c	str	x0, [x0, #0x20]
000000000000af40	stlr	x23, [x28]
000000000000af44	ldr	x9, [x8, #0x110]
000000000000af48	sub	x9, x9, #0x10
000000000000af4c	str	x9, [x8, #0x110]
000000000000af50	cmp	x23, x21
000000000000af54	b.ne	0xafd0
000000000000af58	b	0xadf0
000000000000af5c	mov	w10, #0x0
000000000000af60	add	w11, w9, w10
000000000000af64	cmp	w11, #0x0
000000000000af68	cinc	w11, w11, lt
000000000000af6c	asr	w11, w11, #1
000000000000af70	sbfiz	x12, x11, #4, #32
000000000000af74	ldr	w12, [x8, x12]
000000000000af78	cmp	w12, #0x59
000000000000af7c	csinc	w10, w10, w11, ge
000000000000af80	csel	w9, w9, w11, lt
000000000000af84	cmp	w10, w9
000000000000af88	b.lt	0xaf60
000000000000af8c	b	0xaf98
000000000000af90	mov	w10, #0x0
000000000000af94	b	0xaf98
000000000000af98	sxtw	x9, w10
000000000000af9c	add	x8, x8, x9, lsl #4
000000000000afa0	ldr	x8, [x8, #0x8]
000000000000afa4	ldr	x8, [x8]
000000000000afa8	blr	x8
000000000000afac	mov	x21, x0
000000000000afb0	ldr	x8, [x20, #0x10]
000000000000afb4	str	x8, [sp, #0x88]
000000000000afb8	add	x8, x8, #0x8
000000000000afbc	stlr	x0, [x8]
000000000000afc0	ldr	x8, [x20, #0x8]
000000000000afc4	str	x8, [sp, #0x90]
000000000000afc8	add	x8, x8, #0x8
000000000000afcc	stlr	xzr, [x8]
000000000000afd0	mov	x0, x22
000000000000afd4	bl	"_kfun:kotlin.native.concurrent.Lock#unlock(){}"
000000000000afd8	str	x21, [x27]
000000000000afdc	ldr	x8, [sp, #0x18]
000000000000afe0	str	x8, [x26, #0x110]
000000000000afe4	mov	x0, x21
000000000000afe8	ldp	x29, x30, [sp, #0x140]
000000000000afec	ldp	x20, x19, [sp, #0x130]
000000000000aff0	ldp	x22, x21, [sp, #0x120]
000000000000aff4	ldp	x24, x23, [sp, #0x110]
000000000000aff8	ldp	x26, x25, [sp, #0x100]
000000000000affc	ldp	x28, x27, [sp, #0xf0]
000000000000b000	add	sp, sp, #0x150
000000000000b004	ret
000000000000b008	bl	_ThrowNullPointerException
000000000000b00c	b	0xb020
000000000000b010	mov	x0, x23
000000000000b014	bl	0x4d8ec ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
000000000000b018	ldr	x0, [sp, #0x8]
000000000000b01c	bl	0x4d8ec ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
000000000000b020	brk	#0x1
000000000000b024	add	x8, sp, #0x10
000000000000b028	str	x8, [x26, #0x110]
000000000000b02c	bl	0x4da78 ; symbol stub for: ___cxa_begin_catch
000000000000b030	ldr	x8, [x0, #0x8]
000000000000b034	ldr	x19, [x8]
000000000000b038	str	x19, [sp, #0x50]
000000000000b03c	bl	0x4da84 ; symbol stub for: ___cxa_end_catch
000000000000b040	mov	x0, x22
000000000000b044	bl	"_kfun:kotlin.native.concurrent.Lock#unlock(){}"
000000000000b048	mov	x0, x19
000000000000b04c	bl	_ThrowException
_kfun:kotlin.native.concurrent.SynchronizedLazyImpl#isInitialized(){}kotlin.Boolean:
000000000000b050	sub	sp, sp, #0xa0
000000000000b054	stp	x26, x25, [sp, #0x50]
000000000000b058	stp	x24, x23, [sp, #0x60]
000000000000b05c	stp	x22, x21, [sp, #0x70]
000000000000b060	stp	x20, x19, [sp, #0x80]
000000000000b064	stp	x29, x30, [sp, #0x90]
000000000000b068	add	x29, sp, #0x90
000000000000b06c	mov	x19, x0
000000000000b070	movi.16b	v0, #0x0
000000000000b074	stp	q0, q0, [sp]
000000000000b078	str	q0, [sp, #0x20]
000000000000b07c	adrp	x0, 93 ; 0x68000
000000000000b080	add	x0, x0, #0xa00
000000000000b084	ldr	x8, [x0]
000000000000b088	blr	x8
000000000000b08c	ldr	x22, [x0]
000000000000b090	ldr	x8, [x22, #0x110]
000000000000b094	mov	x9, sp
000000000000b098	str	x9, [x22, #0x110]
000000000000b09c	mov	x9, #0x600000000
000000000000b0a0	stp	x8, x9, [sp, #0x8]
000000000000b0a4	adr	x21, #0x7779f
000000000000b0a8	nop
000000000000b0ac	ldarb	w8, [x21]
000000000000b0b0	tbz	w8, #0x0, 0xb0b8
000000000000b0b4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000b0b8	ldr	x8, [x19, #0x10]
000000000000b0bc	str	x8, [sp, #0x18]
000000000000b0c0	add	x8, x8, #0x8
000000000000b0c4	ldar	x23, [x8]
000000000000b0c8	str	x23, [sp, #0x20]
000000000000b0cc	adr	x24, #0x777d4
000000000000b0d0	nop
000000000000b0d4	ldar	x19, [x24]
000000000000b0d8	cmp	x19, #0x1
000000000000b0dc	b.hi	0xb29c
000000000000b0e0	ldp	x8, x9, [x22, #0x120]
000000000000b0e4	cmp	x8, x9
000000000000b0e8	b.eq	0xb108
000000000000b0ec	mov	x10, x9
000000000000b0f0	ldr	x11, [x10, #-0x10]!
000000000000b0f4	cmp	x11, x24
000000000000b0f8	b.eq	0xb1c0
000000000000b0fc	mov	x9, x10
000000000000b100	cmp	x10, x8
000000000000b104	b.ne	0xb0f0
000000000000b108	add	x20, x22, #0x120
000000000000b10c	add	x0, x22, #0x138
000000000000b110	mov	w9, #0x1
000000000000b114	ldaxr	w8, [x0]
000000000000b118	stlxr	w10, w9, [x0]
000000000000b11c	cbnz	w10, 0xb114
000000000000b120	b	0xb130
000000000000b124	mov	w25, #0x1
000000000000b128	stlxr	w9, x25, [x24]
000000000000b12c	cbz	w9, 0xb140
000000000000b130	ldaxr	x19, [x24]
000000000000b134	cbz	x19, 0xb124
000000000000b138	mov	w25, #0x0
000000000000b13c	clrex
000000000000b140	cmp	x19, #0x1
000000000000b144	b.eq	0xb130
000000000000b148	cbz	x22, 0xb170
000000000000b14c	ldaxr	w9, [x0]
000000000000b150	stlxr	w10, w8, [x0]
000000000000b154	cbnz	w10, 0xb14c
000000000000b158	cbnz	w8, 0xb170
000000000000b15c	cmp	w9, #0x1
000000000000b160	b.ne	0xb170
000000000000b164	ldarb	w8, [x21]
000000000000b168	tbz	w8, #0x0, 0xb170
000000000000b16c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000000b170	tbz	w25, #0x0, 0xb1b8
000000000000b174	ldr	x8, [x22, #0x118]
000000000000b178	add	x0, x8, #0x70
000000000000b17c	mov	w1, #0x10
000000000000b180	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000b184	mov	x19, x0
000000000000b188	adr	x8, #0x4ab78
000000000000b18c	nop
000000000000b190	str	x8, [x19, #0x10]!
000000000000b194	stur	xzr, [x19, #-0x8]
000000000000b198	str	x19, [sp, #0x28]
000000000000b19c	ldp	x9, x8, [x22, #0x128]
000000000000b1a0	cmp	x9, x8
000000000000b1a4	b.hs	0xb1cc
000000000000b1a8	stp	x24, x19, [x9]
000000000000b1ac	add	x8, x9, #0x10
000000000000b1b0	str	x8, [x22, #0x128]
000000000000b1b4	b	0xb254
000000000000b1b8	str	x19, [sp, #0x28]
000000000000b1bc	b	0xb29c
000000000000b1c0	ldur	x19, [x9, #-0x8]
000000000000b1c4	str	x19, [sp, #0x28]
000000000000b1c8	b	0xb29c
000000000000b1cc	ldr	x10, [x20]
000000000000b1d0	sub	x9, x9, x10
000000000000b1d4	asr	x25, x9, #4
000000000000b1d8	add	x9, x25, #0x1
000000000000b1dc	lsr	x11, x9, #60
000000000000b1e0	cbnz	x11, 0xb2c8
000000000000b1e4	sub	x8, x8, x10
000000000000b1e8	asr	x10, x8, #3
000000000000b1ec	cmp	x10, x9
000000000000b1f0	csel	x9, x9, x10, lo
000000000000b1f4	mov	x10, #0x7ffffffffffffff
000000000000b1f8	cmp	x10, x8, asr #4
000000000000b1fc	mov	x8, #0xfffffffffffffff
000000000000b200	csel	x21, x9, x8, hi
000000000000b204	mov	x0, x21
000000000000b208	mov	w1, #0x10
000000000000b20c	bl	0x4db20 ; symbol stub for: _calloc
000000000000b210	add	x8, x0, x25, lsl #4
000000000000b214	add	x25, x0, x21, lsl #4
000000000000b218	stp	x24, x19, [x8]
000000000000b21c	add	x26, x8, #0x10
000000000000b220	ldp	x1, x9, [x22, #0x120]
000000000000b224	sub	x2, x9, x1
000000000000b228	sub	x21, x8, x2
000000000000b22c	cmp	x2, #0x1
000000000000b230	b.lt	0xb240
000000000000b234	mov	x0, x21
000000000000b238	bl	0x4dbec ; symbol stub for: _memcpy
000000000000b23c	ldr	x1, [x20]
000000000000b240	stp	x21, x26, [x22, #0x120]
000000000000b244	str	x25, [x22, #0x130]
000000000000b248	cbz	x1, 0xb254
000000000000b24c	mov	x0, x1
000000000000b250	bl	0x4dba4 ; symbol stub for: _free
000000000000b254	mov	w0, #0x1
000000000000b258	mov	w1, #0x28
000000000000b25c	bl	0x4db20 ; symbol stub for: _calloc
000000000000b260	mov	x8, x22
000000000000b264	ldr	x9, [x8, #0x18]!
000000000000b268	sub	x10, x8, #0x8
000000000000b26c	stp	x24, x10, [x0, #0x10]
000000000000b270	stp	x9, x8, [x0]
000000000000b274	str	x0, [x9, #0x8]
000000000000b278	str	x0, [x8]
000000000000b27c	ldr	x9, [x8, #0x10]
000000000000b280	add	x9, x9, #0x1
000000000000b284	str	x9, [x8, #0x10]
000000000000b288	str	x0, [x0, #0x20]
000000000000b28c	stlr	x19, [x24]
000000000000b290	ldr	x9, [x8, #0x110]
000000000000b294	sub	x9, x9, #0x10
000000000000b298	str	x9, [x8, #0x110]
000000000000b29c	cmp	x19, x23
000000000000b2a0	cset	w0, ne
000000000000b2a4	ldr	x8, [sp, #0x8]
000000000000b2a8	str	x8, [x22, #0x110]
000000000000b2ac	ldp	x29, x30, [sp, #0x90]
000000000000b2b0	ldp	x20, x19, [sp, #0x80]
000000000000b2b4	ldp	x22, x21, [sp, #0x70]
000000000000b2b8	ldp	x24, x23, [sp, #0x60]
000000000000b2bc	ldp	x26, x25, [sp, #0x50]
000000000000b2c0	add	sp, sp, #0xa0
000000000000b2c4	ret
000000000000b2c8	mov	x0, x20
000000000000b2cc	bl	0x4d8ec ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
_kfun:kotlin.native.concurrent.SynchronizedLazyImpl#toString(){}kotlin.String:
000000000000b2d0	sub	sp, sp, #0x50
000000000000b2d4	stp	x22, x21, [sp, #0x20]
000000000000b2d8	stp	x20, x19, [sp, #0x30]
000000000000b2dc	stp	x29, x30, [sp, #0x40]
000000000000b2e0	add	x29, sp, #0x40
000000000000b2e4	mov	x19, x1
000000000000b2e8	mov	x20, x0
000000000000b2ec	movi.16b	v0, #0x0
000000000000b2f0	stp	q0, q0, [sp]
000000000000b2f4	adrp	x0, 93 ; 0x68000
000000000000b2f8	add	x0, x0, #0xa00
000000000000b2fc	ldr	x8, [x0]
000000000000b300	blr	x8
000000000000b304	ldr	x21, [x0]
000000000000b308	ldr	x8, [x21, #0x110]
000000000000b30c	mov	x9, sp
000000000000b310	str	x9, [x21, #0x110]
000000000000b314	mov	x9, #0x400000000
000000000000b318	stp	x8, x9, [sp, #0x8]
000000000000b31c	adr	x8, #0x77527
000000000000b320	nop
000000000000b324	ldarb	w8, [x8]
000000000000b328	tbnz	w8, #0x0, 0xb368
000000000000b32c	mov	x0, x20
000000000000b330	bl	"_kfun:kotlin.native.concurrent.SynchronizedLazyImpl#isInitialized(){}kotlin.Boolean"
000000000000b334	cbz	w0, 0xb378
000000000000b338	mov	x8, sp
000000000000b33c	add	x1, x8, #0x18
000000000000b340	mov	x0, x20
000000000000b344	bl	"_kfun:kotlin.native.concurrent.SynchronizedLazyImpl#<get-value>(){}1:0"
000000000000b348	cbz	x0, 0xb384
000000000000b34c	ldr	x8, [x0]
000000000000b350	and	x8, x8, #0xfffffffffffffffc
000000000000b354	ldr	x8, [x8]
000000000000b358	ldr	x8, [x8, #0x80]
000000000000b35c	mov	x1, x19
000000000000b360	blr	x8
000000000000b364	b	0xb38c
000000000000b368	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000b36c	mov	x0, x20
000000000000b370	bl	"_kfun:kotlin.native.concurrent.SynchronizedLazyImpl#isInitialized(){}kotlin.Boolean"
000000000000b374	cbnz	w0, 0xb338
000000000000b378	adr	x0, #0x561a8
000000000000b37c	nop
000000000000b380	b	0xb38c
000000000000b384	adr	x0, #0x55d1c
000000000000b388	nop
000000000000b38c	str	x0, [x19]
000000000000b390	ldr	x8, [sp, #0x8]
000000000000b394	str	x8, [x21, #0x110]
000000000000b398	ldp	x29, x30, [sp, #0x40]
000000000000b39c	ldp	x20, x19, [sp, #0x30]
000000000000b3a0	ldp	x22, x21, [sp, #0x20]
000000000000b3a4	add	sp, sp, #0x50
000000000000b3a8	ret
_kfun:kotlin.native.concurrent.Lock#lock(){}:
000000000000b3ac	sub	sp, sp, #0x90
000000000000b3b0	stp	x24, x23, [sp, #0x50]
000000000000b3b4	stp	x22, x21, [sp, #0x60]
000000000000b3b8	stp	x20, x19, [sp, #0x70]
000000000000b3bc	stp	x29, x30, [sp, #0x80]
000000000000b3c0	add	x29, sp, #0x80
000000000000b3c4	mov	x19, x0
000000000000b3c8	movi.16b	v0, #0x0
000000000000b3cc	stp	q0, q0, [sp]
000000000000b3d0	adrp	x0, 93 ; 0x68000
000000000000b3d4	add	x0, x0, #0xa00
000000000000b3d8	ldr	x8, [x0]
000000000000b3dc	blr	x8
000000000000b3e0	ldr	x22, [x0]
000000000000b3e4	ldr	x8, [x22, #0x110]
000000000000b3e8	mov	x9, sp
000000000000b3ec	str	x9, [x22, #0x110]
000000000000b3f0	mov	x9, #0x400000000
000000000000b3f4	stp	x8, x9, [sp, #0x8]
000000000000b3f8	adr	x23, #0x7744b
000000000000b3fc	nop
000000000000b400	ldarb	w8, [x23]
000000000000b404	tbz	w8, #0x0, 0xb40c
000000000000b408	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000b40c	bl	_LookupTLS
000000000000b410	ldar	x20, [x0]
000000000000b414	cmp	x20, #0x2
000000000000b418	b.hs	0xb4a4
000000000000b41c	cbz	x20, 0xb428
000000000000b420	str	x20, [sp, #0x18]
000000000000b424	b	0xb4a4
000000000000b428	mov	x21, x0
000000000000b42c	ldr	x8, [x22, #0x118]
000000000000b430	add	x0, x8, #0x70
000000000000b434	mov	w1, #0x18
000000000000b438	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000b43c	mov	x20, x0
000000000000b440	adr	x8, #0x4a9e0
000000000000b444	nop
000000000000b448	str	x8, [x20, #0x10]!
000000000000b44c	stur	xzr, [x20, #-0x8]
000000000000b450	str	x20, [sp, #0x18]
000000000000b454	str	x20, [x21]
000000000000b458	movi.16b	v0, #0x0
000000000000b45c	stp	q0, q0, [sp, #0x20]
000000000000b460	str	xzr, [sp, #0x40]
000000000000b464	add	x8, sp, #0x20
000000000000b468	ldp	x9, x10, [x22, #0x110]
000000000000b46c	str	x8, [x22, #0x110]
000000000000b470	mov	x8, #0x500000000
000000000000b474	stp	x9, x8, [sp, #0x28]
000000000000b478	add	x0, x10, #0x70
000000000000b47c	mov	w1, #0x10
000000000000b480	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000b484	adr	x8, #0x490cc
000000000000b488	nop
000000000000b48c	str	x8, [x0, #0x10]!
000000000000b490	stur	xzr, [x0, #-0x8]
000000000000b494	stp	x0, x0, [sp, #0x38]
000000000000b498	str	x0, [x20, #0x8]
000000000000b49c	ldr	x8, [sp, #0x28]
000000000000b4a0	str	x8, [x22, #0x110]
000000000000b4a4	ldr	x0, [x20, #0x8]
000000000000b4a8	ldr	x8, [x0]
000000000000b4ac	and	x8, x8, #0xfffffffffffffffc
000000000000b4b0	ldr	x8, [x8]
000000000000b4b4	ldr	x8, [x8, #0x78]
000000000000b4b8	blr	x8
000000000000b4bc	mov	x20, x0
000000000000b4c0	ldarb	w8, [x23]
000000000000b4c4	tbz	w8, #0x0, 0xb4cc
000000000000b4c8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000b4cc	ldr	x8, [x19, #0x8]
000000000000b4d0	add	x9, x8, #0x8
000000000000b4d4	ldaxr	w8, [x9]
000000000000b4d8	cbnz	w8, 0xb4f4
000000000000b4dc	stlxr	w10, w20, [x9]
000000000000b4e0	cbnz	w10, 0xb4d4
000000000000b4e4	mov	w9, #0x1
000000000000b4e8	cmp	w8, w20
000000000000b4ec	b.ne	0xb504
000000000000b4f0	b	0xb50c
000000000000b4f4	mov	w9, #0x0
000000000000b4f8	clrex
000000000000b4fc	cmp	w8, w20
000000000000b500	b.eq	0xb50c
000000000000b504	tbz	w9, #0x0, 0xb4c0
000000000000b508	b	0xb524
000000000000b50c	ldr	x8, [x19, #0x10]
000000000000b510	add	x8, x8, #0x8
000000000000b514	ldaxr	w9, [x8]
000000000000b518	add	w9, w9, #0x1
000000000000b51c	stlxr	w10, w9, [x8]
000000000000b520	cbnz	w10, 0xb514
000000000000b524	ldr	x8, [sp, #0x8]
000000000000b528	str	x8, [x22, #0x110]
000000000000b52c	ldp	x29, x30, [sp, #0x80]
000000000000b530	ldp	x20, x19, [sp, #0x70]
000000000000b534	ldp	x22, x21, [sp, #0x60]
000000000000b538	ldp	x24, x23, [sp, #0x50]
000000000000b53c	add	sp, sp, #0x90
000000000000b540	ret
_kfun:kotlin.native.concurrent.Lock#unlock(){}:
000000000000b544	sub	sp, sp, #0x80
000000000000b548	stp	x22, x21, [sp, #0x50]
000000000000b54c	stp	x20, x19, [sp, #0x60]
000000000000b550	stp	x29, x30, [sp, #0x70]
000000000000b554	add	x29, sp, #0x70
000000000000b558	mov	x19, x0
000000000000b55c	movi.16b	v0, #0x0
000000000000b560	stp	q0, q0, [sp]
000000000000b564	adrp	x0, 93 ; 0x68000
000000000000b568	add	x0, x0, #0xa00
000000000000b56c	ldr	x8, [x0]
000000000000b570	blr	x8
000000000000b574	ldr	x22, [x0]
000000000000b578	ldr	x8, [x22, #0x110]
000000000000b57c	mov	x9, sp
000000000000b580	str	x9, [x22, #0x110]
000000000000b584	mov	x9, #0x400000000
000000000000b588	stp	x8, x9, [sp, #0x8]
000000000000b58c	adr	x8, #0x772b7
000000000000b590	nop
000000000000b594	ldarb	w8, [x8]
000000000000b598	tbz	w8, #0x0, 0xb5a0
000000000000b59c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000b5a0	ldr	x8, [x19, #0x10]
000000000000b5a4	add	x8, x8, #0x8
000000000000b5a8	ldar	w8, [x8]
000000000000b5ac	cmp	w8, #0x1
000000000000b5b0	b.lt	0xb5d0
000000000000b5b4	ldr	x8, [x19, #0x10]
000000000000b5b8	add	x8, x8, #0x8
000000000000b5bc	ldaxr	w9, [x8]
000000000000b5c0	sub	w9, w9, #0x1
000000000000b5c4	stlxr	w10, w9, [x8]
000000000000b5c8	cbnz	w10, 0xb5bc
000000000000b5cc	b	0xb6a4
000000000000b5d0	bl	_LookupTLS
000000000000b5d4	ldar	x20, [x0]
000000000000b5d8	cmp	x20, #0x2
000000000000b5dc	b.hs	0xb668
000000000000b5e0	cbz	x20, 0xb5ec
000000000000b5e4	str	x20, [sp, #0x18]
000000000000b5e8	b	0xb668
000000000000b5ec	mov	x21, x0
000000000000b5f0	ldr	x8, [x22, #0x118]
000000000000b5f4	add	x0, x8, #0x70
000000000000b5f8	mov	w1, #0x18
000000000000b5fc	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000b600	mov	x20, x0
000000000000b604	adr	x8, #0x4a81c
000000000000b608	nop
000000000000b60c	str	x8, [x20, #0x10]!
000000000000b610	stur	xzr, [x20, #-0x8]
000000000000b614	str	x20, [sp, #0x18]
000000000000b618	str	x20, [x21]
000000000000b61c	movi.16b	v0, #0x0
000000000000b620	stp	q0, q0, [sp, #0x20]
000000000000b624	str	xzr, [sp, #0x40]
000000000000b628	add	x8, sp, #0x20
000000000000b62c	ldp	x9, x10, [x22, #0x110]
000000000000b630	str	x8, [x22, #0x110]
000000000000b634	mov	x8, #0x500000000
000000000000b638	stp	x9, x8, [sp, #0x28]
000000000000b63c	add	x0, x10, #0x70
000000000000b640	mov	w1, #0x10
000000000000b644	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000b648	adr	x8, #0x48f08
000000000000b64c	nop
000000000000b650	str	x8, [x0, #0x10]!
000000000000b654	stur	xzr, [x0, #-0x8]
000000000000b658	stp	x0, x0, [sp, #0x38]
000000000000b65c	str	x0, [x20, #0x8]
000000000000b660	ldr	x8, [sp, #0x28]
000000000000b664	str	x8, [x22, #0x110]
000000000000b668	ldr	x0, [x20, #0x8]
000000000000b66c	ldr	x8, [x0]
000000000000b670	and	x8, x8, #0xfffffffffffffffc
000000000000b674	ldr	x8, [x8]
000000000000b678	ldr	x8, [x8, #0x78]
000000000000b67c	blr	x8
000000000000b680	ldr	x8, [x19, #0x8]
000000000000b684	add	x8, x8, #0x8
000000000000b688	ldaxr	w9, [x8]
000000000000b68c	cmp	w9, w0
000000000000b690	b.ne	0xb6a0
000000000000b694	stlxr	w9, wzr, [x8]
000000000000b698	cbnz	w9, 0xb688
000000000000b69c	b	0xb6a4
000000000000b6a0	clrex
000000000000b6a4	ldr	x8, [sp, #0x8]
000000000000b6a8	str	x8, [x22, #0x110]
000000000000b6ac	ldp	x29, x30, [sp, #0x70]
000000000000b6b0	ldp	x20, x19, [sp, #0x60]
000000000000b6b4	ldp	x22, x21, [sp, #0x50]
000000000000b6b8	add	sp, sp, #0x80
000000000000b6bc	ret
_Kotlin_boxByte:
000000000000b6c0	sub	sp, sp, #0x70
000000000000b6c4	stp	x22, x21, [sp, #0x40]
000000000000b6c8	stp	x20, x19, [sp, #0x50]
000000000000b6cc	stp	x29, x30, [sp, #0x60]
000000000000b6d0	add	x29, sp, #0x60
000000000000b6d4	mov	x19, x1
000000000000b6d8	mov	x20, x0
000000000000b6dc	str	xzr, [sp, #0x8]
000000000000b6e0	adrp	x21, 93 ; 0x68000
000000000000b6e4	add	x21, x21, #0xa00
000000000000b6e8	ldr	x22, [x21]
000000000000b6ec	mov	x0, x21
000000000000b6f0	blr	x22
000000000000b6f4	ldr	x8, [x0]
000000000000b6f8	ldr	x9, [x8, #0x110]
000000000000b6fc	add	x10, sp, #0x8
000000000000b700	str	x10, [x8, #0x110]
000000000000b704	mov	x8, #0x300000000
000000000000b708	stp	x9, x8, [sp, #0x10]
000000000000b70c	adr	x8, #0x77137
000000000000b710	nop
000000000000b714	ldarb	w8, [x8]
000000000000b718	tbz	w8, #0x0, 0xb720
000000000000b71c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000b720	mov	x0, x21
000000000000b724	blr	x22
000000000000b728	ldr	x8, [x0]
000000000000b72c	ldr	x9, [x8, #0x110]
000000000000b730	add	x10, sp, #0x20
000000000000b734	str	x10, [x8, #0x110]
000000000000b738	adr	x8, #0x51918
000000000000b73c	nop
000000000000b740	add	x8, x8, w20, sxtw #4
000000000000b744	add	x8, x8, #0x800
000000000000b748	str	x8, [x19]
000000000000b74c	ldr	x10, [x0]
000000000000b750	str	x9, [x10, #0x110]
000000000000b754	str	x8, [x19]
000000000000b758	ldr	x9, [x0]
000000000000b75c	ldr	x10, [sp, #0x10]
000000000000b760	str	x10, [x9, #0x110]
000000000000b764	mov	x0, x8
000000000000b768	ldp	x29, x30, [sp, #0x60]
000000000000b76c	ldp	x20, x19, [sp, #0x50]
000000000000b770	ldp	x22, x21, [sp, #0x40]
000000000000b774	add	sp, sp, #0x70
000000000000b778	ret
_Kotlin_boxShort:
000000000000b77c	sub	sp, sp, #0x70
000000000000b780	stp	x22, x21, [sp, #0x40]
000000000000b784	stp	x20, x19, [sp, #0x50]
000000000000b788	stp	x29, x30, [sp, #0x60]
000000000000b78c	add	x29, sp, #0x60
000000000000b790	mov	x19, x1
000000000000b794	mov	x21, x0
000000000000b798	str	xzr, [sp, #0x8]
000000000000b79c	adrp	x20, 93 ; 0x68000
000000000000b7a0	add	x20, x20, #0xa00
000000000000b7a4	ldr	x22, [x20]
000000000000b7a8	mov	x0, x20
000000000000b7ac	blr	x22
000000000000b7b0	ldr	x8, [x0]
000000000000b7b4	ldr	x9, [x8, #0x110]
000000000000b7b8	add	x10, sp, #0x8
000000000000b7bc	str	x10, [x8, #0x110]
000000000000b7c0	mov	x8, #0x300000000
000000000000b7c4	stp	x9, x8, [sp, #0x10]
000000000000b7c8	adr	x8, #0x7707b
000000000000b7cc	nop
000000000000b7d0	ldarb	w8, [x8]
000000000000b7d4	tbz	w8, #0x0, 0xb7dc
000000000000b7d8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000b7dc	movi.16b	v0, #0x0
000000000000b7e0	stp	q0, q0, [sp, #0x20]
000000000000b7e4	mov	x0, x20
000000000000b7e8	blr	x22
000000000000b7ec	ldr	x8, [x0]
000000000000b7f0	ldr	x9, [x8, #0x110]
000000000000b7f4	add	x10, sp, #0x20
000000000000b7f8	str	x10, [x8, #0x110]
000000000000b7fc	mov	x8, #0x400000000
000000000000b800	stp	x9, x8, [sp, #0x28]
000000000000b804	cmp	w21, w21, sxtb
000000000000b808	b.ne	0xb824
000000000000b80c	adr	x8, #0x52844
000000000000b810	nop
000000000000b814	add	x8, x8, w21, sxtw #4
000000000000b818	add	x8, x8, #0x800
000000000000b81c	str	x8, [x19]
000000000000b820	b	0xb85c
000000000000b824	mov	x0, x20
000000000000b828	blr	x22
000000000000b82c	ldr	x8, [x0]
000000000000b830	ldr	x8, [x8, #0x118]
000000000000b834	add	x0, x8, #0x70
000000000000b838	mov	w1, #0x18
000000000000b83c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000b840	adr	x9, #0x49d20
000000000000b844	nop
000000000000b848	mov	x8, x0
000000000000b84c	str	x9, [x8, #0x10]!
000000000000b850	stur	xzr, [x8, #-0x8]
000000000000b854	str	x8, [sp, #0x38]
000000000000b858	strh	w21, [x8, #0x8]
000000000000b85c	str	x8, [x19]
000000000000b860	mov	x0, x20
000000000000b864	blr	x22
000000000000b868	ldr	x9, [x0]
000000000000b86c	ldr	x10, [sp, #0x28]
000000000000b870	str	x10, [x9, #0x110]
000000000000b874	str	x8, [x19]
000000000000b878	ldr	x9, [x0]
000000000000b87c	ldr	x10, [sp, #0x10]
000000000000b880	str	x10, [x9, #0x110]
000000000000b884	mov	x0, x8
000000000000b888	ldp	x29, x30, [sp, #0x60]
000000000000b88c	ldp	x20, x19, [sp, #0x50]
000000000000b890	ldp	x22, x21, [sp, #0x40]
000000000000b894	add	sp, sp, #0x70
000000000000b898	ret
_Kotlin_boxLong:
000000000000b89c	sub	sp, sp, #0x70
000000000000b8a0	stp	x22, x21, [sp, #0x40]
000000000000b8a4	stp	x20, x19, [sp, #0x50]
000000000000b8a8	stp	x29, x30, [sp, #0x60]
000000000000b8ac	add	x29, sp, #0x60
000000000000b8b0	mov	x19, x1
000000000000b8b4	mov	x21, x0
000000000000b8b8	str	xzr, [sp, #0x8]
000000000000b8bc	adrp	x20, 93 ; 0x68000
000000000000b8c0	add	x20, x20, #0xa00
000000000000b8c4	ldr	x22, [x20]
000000000000b8c8	mov	x0, x20
000000000000b8cc	blr	x22
000000000000b8d0	ldr	x8, [x0]
000000000000b8d4	ldr	x9, [x8, #0x110]
000000000000b8d8	add	x10, sp, #0x8
000000000000b8dc	str	x10, [x8, #0x110]
000000000000b8e0	mov	x8, #0x300000000
000000000000b8e4	stp	x9, x8, [sp, #0x10]
000000000000b8e8	adr	x8, #0x76f5b
000000000000b8ec	nop
000000000000b8f0	ldarb	w8, [x8]
000000000000b8f4	tbz	w8, #0x0, 0xb8fc
000000000000b8f8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000b8fc	movi.16b	v0, #0x0
000000000000b900	stp	q0, q0, [sp, #0x20]
000000000000b904	mov	x0, x20
000000000000b908	blr	x22
000000000000b90c	ldr	x8, [x0]
000000000000b910	ldr	x9, [x8, #0x110]
000000000000b914	add	x10, sp, #0x20
000000000000b918	str	x10, [x8, #0x110]
000000000000b91c	mov	x8, #0x400000000
000000000000b920	stp	x9, x8, [sp, #0x28]
000000000000b924	cmp	x21, w21, sxtb
000000000000b928	b.ne	0xb944
000000000000b92c	add	x8, x21, #0x80
000000000000b930	adr	x9, #0x54720
000000000000b934	nop
000000000000b938	add	x8, x9, x8, lsl #4
000000000000b93c	str	x8, [x19]
000000000000b940	b	0xb97c
000000000000b944	mov	x0, x20
000000000000b948	blr	x22
000000000000b94c	ldr	x8, [x0]
000000000000b950	ldr	x8, [x8, #0x118]
000000000000b954	add	x0, x8, #0x70
000000000000b958	mov	w1, #0x18
000000000000b95c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000b960	adr	x9, #0x49a80
000000000000b964	nop
000000000000b968	mov	x8, x0
000000000000b96c	str	x9, [x8, #0x10]!
000000000000b970	stur	xzr, [x8, #-0x8]
000000000000b974	str	x8, [sp, #0x38]
000000000000b978	str	x21, [x8, #0x8]
000000000000b97c	str	x8, [x19]
000000000000b980	mov	x0, x20
000000000000b984	blr	x22
000000000000b988	ldr	x9, [x0]
000000000000b98c	ldr	x10, [sp, #0x28]
000000000000b990	str	x10, [x9, #0x110]
000000000000b994	str	x8, [x19]
000000000000b998	ldr	x9, [x0]
000000000000b99c	ldr	x10, [sp, #0x10]
000000000000b9a0	str	x10, [x9, #0x110]
000000000000b9a4	mov	x0, x8
000000000000b9a8	ldp	x29, x30, [sp, #0x60]
000000000000b9ac	ldp	x20, x19, [sp, #0x50]
000000000000b9b0	ldp	x22, x21, [sp, #0x40]
000000000000b9b4	add	sp, sp, #0x70
000000000000b9b8	ret
_Kotlin_boxUByte:
000000000000b9bc	sub	sp, sp, #0x70
000000000000b9c0	stp	x22, x21, [sp, #0x40]
000000000000b9c4	stp	x20, x19, [sp, #0x50]
000000000000b9c8	stp	x29, x30, [sp, #0x60]
000000000000b9cc	add	x29, sp, #0x60
000000000000b9d0	mov	x19, x1
000000000000b9d4	mov	x20, x0
000000000000b9d8	str	xzr, [sp, #0x8]
000000000000b9dc	adrp	x21, 93 ; 0x68000
000000000000b9e0	add	x21, x21, #0xa00
000000000000b9e4	ldr	x22, [x21]
000000000000b9e8	mov	x0, x21
000000000000b9ec	blr	x22
000000000000b9f0	ldr	x8, [x0]
000000000000b9f4	ldr	x9, [x8, #0x110]
000000000000b9f8	add	x10, sp, #0x8
000000000000b9fc	str	x10, [x8, #0x110]
000000000000ba00	mov	x8, #0x300000000
000000000000ba04	stp	x9, x8, [sp, #0x10]
000000000000ba08	adr	x8, #0x76e3b
000000000000ba0c	nop
000000000000ba10	ldarb	w8, [x8]
000000000000ba14	tbz	w8, #0x0, 0xba1c
000000000000ba18	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000ba1c	movi.16b	v0, #0x0
000000000000ba20	stp	q0, q0, [sp, #0x20]
000000000000ba24	mov	x0, x21
000000000000ba28	blr	x22
000000000000ba2c	mov	x21, x0
000000000000ba30	ldr	x8, [x0]
000000000000ba34	add	x9, sp, #0x20
000000000000ba38	ldp	x10, x11, [x8, #0x110]
000000000000ba3c	str	x9, [x8, #0x110]
000000000000ba40	mov	x8, #0x400000000
000000000000ba44	stp	x10, x8, [sp, #0x28]
000000000000ba48	add	x0, x11, #0x70
000000000000ba4c	mov	w1, #0x18
000000000000ba50	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000ba54	adr	x8, #0x4d25c
000000000000ba58	nop
000000000000ba5c	str	x8, [x0, #0x10]!
000000000000ba60	stur	xzr, [x0, #-0x8]
000000000000ba64	str	x0, [sp, #0x38]
000000000000ba68	strb	w20, [x0, #0x8]
000000000000ba6c	str	x0, [x19]
000000000000ba70	ldr	x8, [x21]
000000000000ba74	ldr	x9, [sp, #0x28]
000000000000ba78	str	x9, [x8, #0x110]
000000000000ba7c	str	x0, [x19]
000000000000ba80	ldr	x8, [x21]
000000000000ba84	ldr	x9, [sp, #0x10]
000000000000ba88	str	x9, [x8, #0x110]
000000000000ba8c	ldp	x29, x30, [sp, #0x60]
000000000000ba90	ldp	x20, x19, [sp, #0x50]
000000000000ba94	ldp	x22, x21, [sp, #0x40]
000000000000ba98	add	sp, sp, #0x70
000000000000ba9c	ret
_Kotlin_boxUShort:
000000000000baa0	sub	sp, sp, #0x70
000000000000baa4	stp	x22, x21, [sp, #0x40]
000000000000baa8	stp	x20, x19, [sp, #0x50]
000000000000baac	stp	x29, x30, [sp, #0x60]
000000000000bab0	add	x29, sp, #0x60
000000000000bab4	mov	x19, x1
000000000000bab8	mov	x20, x0
000000000000babc	str	xzr, [sp, #0x8]
000000000000bac0	adrp	x21, 93 ; 0x68000
000000000000bac4	add	x21, x21, #0xa00
000000000000bac8	ldr	x22, [x21]
000000000000bacc	mov	x0, x21
000000000000bad0	blr	x22
000000000000bad4	ldr	x8, [x0]
000000000000bad8	ldr	x9, [x8, #0x110]
000000000000badc	add	x10, sp, #0x8
000000000000bae0	str	x10, [x8, #0x110]
000000000000bae4	mov	x8, #0x300000000
000000000000bae8	stp	x9, x8, [sp, #0x10]
000000000000baec	adr	x8, #0x76d57
000000000000baf0	nop
000000000000baf4	ldarb	w8, [x8]
000000000000baf8	tbz	w8, #0x0, 0xbb00
000000000000bafc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000bb00	movi.16b	v0, #0x0
000000000000bb04	stp	q0, q0, [sp, #0x20]
000000000000bb08	mov	x0, x21
000000000000bb0c	blr	x22
000000000000bb10	mov	x21, x0
000000000000bb14	ldr	x8, [x0]
000000000000bb18	add	x9, sp, #0x20
000000000000bb1c	ldp	x10, x11, [x8, #0x110]
000000000000bb20	str	x9, [x8, #0x110]
000000000000bb24	mov	x8, #0x400000000
000000000000bb28	stp	x10, x8, [sp, #0x28]
000000000000bb2c	add	x0, x11, #0x70
000000000000bb30	mov	w1, #0x18
000000000000bb34	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000bb38	adr	x8, #0x4d328
000000000000bb3c	nop
000000000000bb40	str	x8, [x0, #0x10]!
000000000000bb44	stur	xzr, [x0, #-0x8]
000000000000bb48	str	x0, [sp, #0x38]
000000000000bb4c	strh	w20, [x0, #0x8]
000000000000bb50	str	x0, [x19]
000000000000bb54	ldr	x8, [x21]
000000000000bb58	ldr	x9, [sp, #0x28]
000000000000bb5c	str	x9, [x8, #0x110]
000000000000bb60	str	x0, [x19]
000000000000bb64	ldr	x8, [x21]
000000000000bb68	ldr	x9, [sp, #0x10]
000000000000bb6c	str	x9, [x8, #0x110]
000000000000bb70	ldp	x29, x30, [sp, #0x60]
000000000000bb74	ldp	x20, x19, [sp, #0x50]
000000000000bb78	ldp	x22, x21, [sp, #0x40]
000000000000bb7c	add	sp, sp, #0x70
000000000000bb80	ret
_Kotlin_boxUInt:
000000000000bb84	sub	sp, sp, #0x70
000000000000bb88	stp	x22, x21, [sp, #0x40]
000000000000bb8c	stp	x20, x19, [sp, #0x50]
000000000000bb90	stp	x29, x30, [sp, #0x60]
000000000000bb94	add	x29, sp, #0x60
000000000000bb98	mov	x19, x1
000000000000bb9c	mov	x20, x0
000000000000bba0	str	xzr, [sp, #0x8]
000000000000bba4	adrp	x21, 93 ; 0x68000
000000000000bba8	add	x21, x21, #0xa00
000000000000bbac	ldr	x22, [x21]
000000000000bbb0	mov	x0, x21
000000000000bbb4	blr	x22
000000000000bbb8	ldr	x8, [x0]
000000000000bbbc	ldr	x9, [x8, #0x110]
000000000000bbc0	add	x10, sp, #0x8
000000000000bbc4	str	x10, [x8, #0x110]
000000000000bbc8	mov	x8, #0x300000000
000000000000bbcc	stp	x9, x8, [sp, #0x10]
000000000000bbd0	adr	x8, #0x76c73
000000000000bbd4	nop
000000000000bbd8	ldarb	w8, [x8]
000000000000bbdc	tbz	w8, #0x0, 0xbbe4
000000000000bbe0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000bbe4	movi.16b	v0, #0x0
000000000000bbe8	stp	q0, q0, [sp, #0x20]
000000000000bbec	mov	x0, x21
000000000000bbf0	blr	x22
000000000000bbf4	mov	x21, x0
000000000000bbf8	ldr	x8, [x0]
000000000000bbfc	add	x9, sp, #0x20
000000000000bc00	ldp	x10, x11, [x8, #0x110]
000000000000bc04	str	x9, [x8, #0x110]
000000000000bc08	mov	x8, #0x400000000
000000000000bc0c	stp	x10, x8, [sp, #0x28]
000000000000bc10	add	x0, x11, #0x70
000000000000bc14	mov	w1, #0x18
000000000000bc18	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000bc1c	adr	x8, #0x4d124
000000000000bc20	nop
000000000000bc24	str	x8, [x0, #0x10]!
000000000000bc28	stur	xzr, [x0, #-0x8]
000000000000bc2c	str	x0, [sp, #0x38]
000000000000bc30	str	w20, [x0, #0x8]
000000000000bc34	str	x0, [x19]
000000000000bc38	ldr	x8, [x21]
000000000000bc3c	ldr	x9, [sp, #0x28]
000000000000bc40	str	x9, [x8, #0x110]
000000000000bc44	str	x0, [x19]
000000000000bc48	ldr	x8, [x21]
000000000000bc4c	ldr	x9, [sp, #0x10]
000000000000bc50	str	x9, [x8, #0x110]
000000000000bc54	ldp	x29, x30, [sp, #0x60]
000000000000bc58	ldp	x20, x19, [sp, #0x50]
000000000000bc5c	ldp	x22, x21, [sp, #0x40]
000000000000bc60	add	sp, sp, #0x70
000000000000bc64	ret
_Kotlin_boxULong:
000000000000bc68	sub	sp, sp, #0x70
000000000000bc6c	stp	x22, x21, [sp, #0x40]
000000000000bc70	stp	x20, x19, [sp, #0x50]
000000000000bc74	stp	x29, x30, [sp, #0x60]
000000000000bc78	add	x29, sp, #0x60
000000000000bc7c	mov	x19, x1
000000000000bc80	mov	x20, x0
000000000000bc84	str	xzr, [sp, #0x8]
000000000000bc88	adrp	x21, 93 ; 0x68000
000000000000bc8c	add	x21, x21, #0xa00
000000000000bc90	ldr	x22, [x21]
000000000000bc94	mov	x0, x21
000000000000bc98	blr	x22
000000000000bc9c	ldr	x8, [x0]
000000000000bca0	ldr	x9, [x8, #0x110]
000000000000bca4	add	x10, sp, #0x8
000000000000bca8	str	x10, [x8, #0x110]
000000000000bcac	mov	x8, #0x300000000
000000000000bcb0	stp	x9, x8, [sp, #0x10]
000000000000bcb4	adr	x8, #0x76b8f
000000000000bcb8	nop
000000000000bcbc	ldarb	w8, [x8]
000000000000bcc0	tbz	w8, #0x0, 0xbcc8
000000000000bcc4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000bcc8	movi.16b	v0, #0x0
000000000000bccc	stp	q0, q0, [sp, #0x20]
000000000000bcd0	mov	x0, x21
000000000000bcd4	blr	x22
000000000000bcd8	mov	x21, x0
000000000000bcdc	ldr	x8, [x0]
000000000000bce0	add	x9, sp, #0x20
000000000000bce4	ldp	x10, x11, [x8, #0x110]
000000000000bce8	str	x9, [x8, #0x110]
000000000000bcec	mov	x8, #0x400000000
000000000000bcf0	stp	x10, x8, [sp, #0x28]
000000000000bcf4	add	x0, x11, #0x70
000000000000bcf8	mov	w1, #0x18
000000000000bcfc	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000bd00	adr	x8, #0x4d0d0
000000000000bd04	nop
000000000000bd08	str	x8, [x0, #0x10]!
000000000000bd0c	stur	xzr, [x0, #-0x8]
000000000000bd10	str	x0, [sp, #0x38]
000000000000bd14	str	x20, [x0, #0x8]
000000000000bd18	str	x0, [x19]
000000000000bd1c	ldr	x8, [x21]
000000000000bd20	ldr	x9, [sp, #0x28]
000000000000bd24	str	x9, [x8, #0x110]
000000000000bd28	str	x0, [x19]
000000000000bd2c	ldr	x8, [x21]
000000000000bd30	ldr	x9, [sp, #0x10]
000000000000bd34	str	x9, [x8, #0x110]
000000000000bd38	ldp	x29, x30, [sp, #0x60]
000000000000bd3c	ldp	x20, x19, [sp, #0x50]
000000000000bd40	ldp	x22, x21, [sp, #0x40]
000000000000bd44	add	sp, sp, #0x70
000000000000bd48	ret
_Kotlin_boxFloat:
000000000000bd4c	sub	sp, sp, #0x80
000000000000bd50	stp	d9, d8, [sp, #0x40]
000000000000bd54	stp	x22, x21, [sp, #0x50]
000000000000bd58	stp	x20, x19, [sp, #0x60]
000000000000bd5c	stp	x29, x30, [sp, #0x70]
000000000000bd60	add	x29, sp, #0x70
000000000000bd64	mov	x19, x0
000000000000bd68	fmov	s8, s0
000000000000bd6c	str	xzr, [sp, #0x8]
000000000000bd70	adrp	x20, 93 ; 0x68000
000000000000bd74	add	x20, x20, #0xa00
000000000000bd78	ldr	x21, [x20]
000000000000bd7c	mov	x0, x20
000000000000bd80	blr	x21
000000000000bd84	ldr	x8, [x0]
000000000000bd88	ldr	x9, [x8, #0x110]
000000000000bd8c	add	x10, sp, #0x8
000000000000bd90	str	x10, [x8, #0x110]
000000000000bd94	mov	x8, #0x300000000
000000000000bd98	stp	x9, x8, [sp, #0x10]
000000000000bd9c	adr	x8, #0x76aa7
000000000000bda0	nop
000000000000bda4	ldarb	w8, [x8]
000000000000bda8	tbz	w8, #0x0, 0xbdb0
000000000000bdac	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000bdb0	movi.16b	v0, #0x0
000000000000bdb4	stp	q0, q0, [sp, #0x20]
000000000000bdb8	mov	x0, x20
000000000000bdbc	blr	x21
000000000000bdc0	mov	x20, x0
000000000000bdc4	ldr	x8, [x0]
000000000000bdc8	add	x9, sp, #0x20
000000000000bdcc	ldp	x10, x11, [x8, #0x110]
000000000000bdd0	str	x9, [x8, #0x110]
000000000000bdd4	mov	x8, #0x400000000
000000000000bdd8	stp	x10, x8, [sp, #0x28]
000000000000bddc	add	x0, x11, #0x70
000000000000bde0	mov	w1, #0x18
000000000000bde4	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000bde8	adr	x8, #0x49838
000000000000bdec	nop
000000000000bdf0	str	x8, [x0, #0x10]!
000000000000bdf4	stur	xzr, [x0, #-0x8]
000000000000bdf8	str	x0, [sp, #0x38]
000000000000bdfc	str	s8, [x0, #0x8]
000000000000be00	str	x0, [x19]
000000000000be04	ldr	x8, [x20]
000000000000be08	ldr	x9, [sp, #0x28]
000000000000be0c	str	x9, [x8, #0x110]
000000000000be10	str	x0, [x19]
000000000000be14	ldr	x8, [x20]
000000000000be18	ldr	x9, [sp, #0x10]
000000000000be1c	str	x9, [x8, #0x110]
000000000000be20	ldp	x29, x30, [sp, #0x70]
000000000000be24	ldp	x20, x19, [sp, #0x60]
000000000000be28	ldp	x22, x21, [sp, #0x50]
000000000000be2c	ldp	d9, d8, [sp, #0x40]
000000000000be30	add	sp, sp, #0x80
000000000000be34	ret
_Kotlin_boxDouble:
000000000000be38	sub	sp, sp, #0x80
000000000000be3c	stp	d9, d8, [sp, #0x40]
000000000000be40	stp	x22, x21, [sp, #0x50]
000000000000be44	stp	x20, x19, [sp, #0x60]
000000000000be48	stp	x29, x30, [sp, #0x70]
000000000000be4c	add	x29, sp, #0x70
000000000000be50	mov	x19, x0
000000000000be54	fmov	d8, d0
000000000000be58	str	xzr, [sp, #0x8]
000000000000be5c	adrp	x20, 93 ; 0x68000
000000000000be60	add	x20, x20, #0xa00
000000000000be64	ldr	x21, [x20]
000000000000be68	mov	x0, x20
000000000000be6c	blr	x21
000000000000be70	ldr	x8, [x0]
000000000000be74	ldr	x9, [x8, #0x110]
000000000000be78	add	x10, sp, #0x8
000000000000be7c	str	x10, [x8, #0x110]
000000000000be80	mov	x8, #0x300000000
000000000000be84	stp	x9, x8, [sp, #0x10]
000000000000be88	adr	x8, #0x769bb
000000000000be8c	nop
000000000000be90	ldarb	w8, [x8]
000000000000be94	tbz	w8, #0x0, 0xbe9c
000000000000be98	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000be9c	movi.16b	v0, #0x0
000000000000bea0	stp	q0, q0, [sp, #0x20]
000000000000bea4	mov	x0, x20
000000000000bea8	blr	x21
000000000000beac	mov	x20, x0
000000000000beb0	ldr	x8, [x0]
000000000000beb4	add	x9, sp, #0x20
000000000000beb8	ldp	x10, x11, [x8, #0x110]
000000000000bebc	str	x9, [x8, #0x110]
000000000000bec0	mov	x8, #0x400000000
000000000000bec4	stp	x10, x8, [sp, #0x28]
000000000000bec8	add	x0, x11, #0x70
000000000000becc	mov	w1, #0x18
000000000000bed0	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000bed4	adr	x8, #0x4944c
000000000000bed8	nop
000000000000bedc	str	x8, [x0, #0x10]!
000000000000bee0	stur	xzr, [x0, #-0x8]
000000000000bee4	str	x0, [sp, #0x38]
000000000000bee8	str	d8, [x0, #0x8]
000000000000beec	str	x0, [x19]
000000000000bef0	ldr	x8, [x20]
000000000000bef4	ldr	x9, [sp, #0x28]
000000000000bef8	str	x9, [x8, #0x110]
000000000000befc	str	x0, [x19]
000000000000bf00	ldr	x8, [x20]
000000000000bf04	ldr	x9, [sp, #0x10]
000000000000bf08	str	x9, [x8, #0x110]
000000000000bf0c	ldp	x29, x30, [sp, #0x70]
000000000000bf10	ldp	x20, x19, [sp, #0x60]
000000000000bf14	ldp	x22, x21, [sp, #0x50]
000000000000bf18	ldp	d9, d8, [sp, #0x40]
000000000000bf1c	add	sp, sp, #0x80
000000000000bf20	ret
_kfun:kotlin.native.internal.KClassImpl#<get-simpleName>(){}kotlin.String?:
000000000000bf24	sub	sp, sp, #0x60
000000000000bf28	stp	x22, x21, [sp, #0x30]
000000000000bf2c	stp	x20, x19, [sp, #0x40]
000000000000bf30	stp	x29, x30, [sp, #0x50]
000000000000bf34	add	x29, sp, #0x50
000000000000bf38	mov	x19, x1
000000000000bf3c	mov	x20, x0
000000000000bf40	movi.16b	v0, #0x0
000000000000bf44	stp	q0, q0, [sp]
000000000000bf48	str	xzr, [sp, #0x20]
000000000000bf4c	mov	x22, sp
000000000000bf50	adrp	x0, 93 ; 0x68000
000000000000bf54	add	x0, x0, #0xa00
000000000000bf58	ldr	x8, [x0]
000000000000bf5c	blr	x8
000000000000bf60	ldr	x21, [x0]
000000000000bf64	ldr	x8, [x21, #0x110]
000000000000bf68	str	x22, [x21, #0x110]
000000000000bf6c	mov	x9, #0x500000000
000000000000bf70	stp	x8, x9, [sp, #0x8]
000000000000bf74	adr	x8, #0x768cf
000000000000bf78	nop
000000000000bf7c	ldarb	w8, [x8]
000000000000bf80	tbz	w8, #0x0, 0xbf88
000000000000bf84	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000bf88	ldr	x8, [x20, #0x8]
000000000000bf8c	ldrb	w9, [x8, #0x59]
000000000000bf90	tbnz	w9, #0x1, 0xbf9c
000000000000bf94	mov	x0, #0x0
000000000000bf98	b	0xbfc0
000000000000bf9c	ldr	x0, [x8, #0x50]
000000000000bfa0	str	x0, [sp, #0x18]
000000000000bfa4	cbz	x0, 0xbfc0
000000000000bfa8	add	x2, x22, #0x20
000000000000bfac	mov	w1, #0x2e
000000000000bfb0	bl	"_kfun:kotlin.text#substringAfterLast$default__at__kotlin.String(kotlin.Char;kotlin.String?;kotlin.Int){}kotlin.String"
000000000000bfb4	mov	w1, #0x24
000000000000bfb8	mov	x2, x19
000000000000bfbc	bl	"_kfun:kotlin.text#substringAfterLast$default__at__kotlin.String(kotlin.Char;kotlin.String?;kotlin.Int){}kotlin.String"
000000000000bfc0	str	x0, [x19]
000000000000bfc4	ldr	x8, [sp, #0x8]
000000000000bfc8	str	x8, [x21, #0x110]
000000000000bfcc	ldp	x29, x30, [sp, #0x50]
000000000000bfd0	ldp	x20, x19, [sp, #0x40]
000000000000bfd4	ldp	x22, x21, [sp, #0x30]
000000000000bfd8	add	sp, sp, #0x60
000000000000bfdc	ret
_kfun:kotlin.native.internal.KClassImpl#<get-qualifiedName>(){}kotlin.String?:
000000000000bfe0	sub	sp, sp, #0xc0
000000000000bfe4	stp	x26, x25, [sp, #0x70]
000000000000bfe8	stp	x24, x23, [sp, #0x80]
000000000000bfec	stp	x22, x21, [sp, #0x90]
000000000000bff0	stp	x20, x19, [sp, #0xa0]
000000000000bff4	stp	x29, x30, [sp, #0xb0]
000000000000bff8	add	x29, sp, #0xb0
000000000000bffc	mov	x19, x1
000000000000c000	mov	x20, x0
000000000000c004	movi.16b	v0, #0x0
000000000000c008	stp	q0, q0, [sp, #0x20]
000000000000c00c	str	xzr, [sp, #0x60]
000000000000c010	stp	q0, q0, [sp, #0x40]
000000000000c014	add	x24, sp, #0x20
000000000000c018	stp	xzr, xzr, [sp, #0x10]
000000000000c01c	adr	x8, #0x4c374
000000000000c020	nop
000000000000c024	orr	x8, x8, #0x3
000000000000c028	str	x8, [sp, #0x8]
000000000000c02c	adrp	x0, 92 ; 0x68000
000000000000c030	add	x0, x0, #0xa00
000000000000c034	ldr	x8, [x0]
000000000000c038	blr	x8
000000000000c03c	ldr	x25, [x0]
000000000000c040	ldr	x8, [x25, #0x110]
000000000000c044	str	x24, [x25, #0x110]
000000000000c048	mov	x9, #0x900000000
000000000000c04c	stp	x8, x9, [sp, #0x28]
000000000000c050	adr	x8, #0x767f3
000000000000c054	nop
000000000000c058	ldarb	w8, [x8]
000000000000c05c	tbz	w8, #0x0, 0xc064
000000000000c060	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000c064	ldr	x8, [x20, #0x8]
000000000000c068	ldr	w9, [x8, #0x58]
000000000000c06c	tbnz	w9, #0x8, 0xc0a0
000000000000c070	mov	x20, #0x0
000000000000c074	str	x20, [x19]
000000000000c078	ldr	x8, [sp, #0x28]
000000000000c07c	str	x8, [x25, #0x110]
000000000000c080	mov	x0, x20
000000000000c084	ldp	x29, x30, [sp, #0xb0]
000000000000c088	ldp	x20, x19, [sp, #0xa0]
000000000000c08c	ldp	x22, x21, [sp, #0x90]
000000000000c090	ldp	x24, x23, [sp, #0x80]
000000000000c094	ldp	x26, x25, [sp, #0x70]
000000000000c098	add	sp, sp, #0xc0
000000000000c09c	ret
000000000000c0a0	mov	x20, #0x0
000000000000c0a4	ldr	x21, [x8, #0x48]
000000000000c0a8	str	x21, [sp, #0x38]
000000000000c0ac	cbz	x21, 0xc074
000000000000c0b0	tbz	w9, #0x9, 0xc074
000000000000c0b4	ldr	x20, [x8, #0x50]
000000000000c0b8	str	x20, [sp, #0x40]
000000000000c0bc	cbz	x20, 0xc074
000000000000c0c0	ldr	w8, [x21, #0x8]
000000000000c0c4	cbz	w8, 0xc074
000000000000c0c8	add	x22, x24, #0x30
000000000000c0cc	add	x23, x24, #0x40
000000000000c0d0	add	x24, x24, #0x38
000000000000c0d4	add	x8, sp, #0x8
000000000000c0d8	str	x8, [sp, #0x48]
000000000000c0dc	add	x0, sp, #0x8
000000000000c0e0	mov	w1, #0xa
000000000000c0e4	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
000000000000c0e8	add	x0, sp, #0x8
000000000000c0ec	mov	x1, x21
000000000000c0f0	mov	x2, x22
000000000000c0f4	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000c0f8	adr	x1, #0x55478
000000000000c0fc	nop
000000000000c100	add	x0, sp, #0x8
000000000000c104	mov	x2, x24
000000000000c108	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000c10c	add	x0, sp, #0x8
000000000000c110	mov	x1, x20
000000000000c114	mov	x2, x23
000000000000c118	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000c11c	add	x0, sp, #0x8
000000000000c120	mov	x1, x19
000000000000c124	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
000000000000c128	mov	x20, x0
000000000000c12c	b	0xc074
_kfun:kotlin.native.internal.KClassImpl#isInstance(kotlin.Any?){}kotlin.Boolean:
000000000000c130	stp	x20, x19, [sp, #-0x20]!
000000000000c134	stp	x29, x30, [sp, #0x10]
000000000000c138	add	x29, sp, #0x10
000000000000c13c	mov	x19, x1
000000000000c140	mov	x20, x0
000000000000c144	adr	x8, #0x766ff
000000000000c148	nop
000000000000c14c	ldarb	w8, [x8]
000000000000c150	tbz	w8, #0x0, 0xc158
000000000000c154	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000c158	cbz	x19, 0xc1cc
000000000000c15c	ldr	x8, [x20, #0x8]
000000000000c160	ldr	x9, [x19]
000000000000c164	and	x9, x9, #0xfffffffffffffffc
000000000000c168	ldr	x9, [x9]
000000000000c16c	ldrb	w10, [x8, #0x58]
000000000000c170	tbnz	w10, #0x2, 0xc1a4
000000000000c174	cmp	x9, #0x0
000000000000c178	cset	w0, ne
000000000000c17c	ccmp	x8, x9, #0x4, ne
000000000000c180	b.eq	0xc198
000000000000c184	ldr	x9, [x9, #0x18]
000000000000c188	cmp	x9, #0x0
000000000000c18c	cset	w0, ne
000000000000c190	ccmp	x9, x8, #0x4, ne
000000000000c194	b.ne	0xc184
000000000000c198	ldp	x29, x30, [sp, #0x10]
000000000000c19c	ldp	x20, x19, [sp], #0x20
000000000000c1a0	ret
000000000000c1a4	ldrsw	x10, [x9, #0x38]
000000000000c1a8	cmp	w10, #0x1
000000000000c1ac	b.lt	0xc1cc
000000000000c1b0	ldr	x9, [x9, #0x30]
000000000000c1b4	ldr	x11, [x9]
000000000000c1b8	cmp	x11, x8
000000000000c1bc	b.eq	0xc1dc
000000000000c1c0	add	x9, x9, #0x8
000000000000c1c4	subs	x10, x10, #0x1
000000000000c1c8	b.ne	0xc1b4
000000000000c1cc	mov	w0, #0x0
000000000000c1d0	ldp	x29, x30, [sp, #0x10]
000000000000c1d4	ldp	x20, x19, [sp], #0x20
000000000000c1d8	ret
000000000000c1dc	mov	w0, #0x1
000000000000c1e0	ldp	x29, x30, [sp, #0x10]
000000000000c1e4	ldp	x20, x19, [sp], #0x20
000000000000c1e8	ret
_kfun:kotlin.native.internal.KClassImpl#equals(kotlin.Any?){}kotlin.Boolean:
000000000000c1ec	stp	x20, x19, [sp, #-0x20]!
000000000000c1f0	stp	x29, x30, [sp, #0x10]
000000000000c1f4	add	x29, sp, #0x10
000000000000c1f8	mov	x19, x1
000000000000c1fc	mov	x20, x0
000000000000c200	adr	x8, #0x76643
000000000000c204	nop
000000000000c208	ldarb	w8, [x8]
000000000000c20c	tbz	w8, #0x0, 0xc214
000000000000c210	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000c214	cbz	x19, 0xc24c
000000000000c218	ldr	x8, [x19]
000000000000c21c	and	x8, x8, #0xfffffffffffffffc
000000000000c220	ldr	x8, [x8]
000000000000c224	ldr	w8, [x8, #0x5c]
000000000000c228	cmp	w8, #0xd2
000000000000c22c	b.ne	0xc24c
000000000000c230	ldr	x8, [x20, #0x8]
000000000000c234	ldr	x9, [x19, #0x8]
000000000000c238	cmp	x8, x9
000000000000c23c	cset	w0, eq
000000000000c240	ldp	x29, x30, [sp, #0x10]
000000000000c244	ldp	x20, x19, [sp], #0x20
000000000000c248	ret
000000000000c24c	mov	w0, #0x0
000000000000c250	ldp	x29, x30, [sp, #0x10]
000000000000c254	ldp	x20, x19, [sp], #0x20
000000000000c258	ret
_kfun:kotlin.native.internal.KClassImpl#hashCode(){}kotlin.Int:
000000000000c25c	stp	x20, x19, [sp, #-0x20]!
000000000000c260	stp	x29, x30, [sp, #0x10]
000000000000c264	add	x29, sp, #0x10
000000000000c268	mov	x19, x0
000000000000c26c	adr	x8, #0x765d7
000000000000c270	nop
000000000000c274	ldarb	w8, [x8]
000000000000c278	tbz	w8, #0x0, 0xc280
000000000000c27c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000c280	ldp	w8, w9, [x19, #0x8]
000000000000c284	eor	w0, w9, w8
000000000000c288	ldp	x29, x30, [sp, #0x10]
000000000000c28c	ldp	x20, x19, [sp], #0x20
000000000000c290	ret
_kfun:kotlin.native.internal.KClassImpl#toString(){}kotlin.String:
000000000000c294	sub	sp, sp, #0x50
000000000000c298	stp	x22, x21, [sp, #0x20]
000000000000c29c	stp	x20, x19, [sp, #0x30]
000000000000c2a0	stp	x29, x30, [sp, #0x40]
000000000000c2a4	add	x29, sp, #0x40
000000000000c2a8	mov	x19, x1
000000000000c2ac	mov	x20, x0
000000000000c2b0	movi.16b	v0, #0x0
000000000000c2b4	stp	q0, q0, [sp]
000000000000c2b8	mov	x8, sp
000000000000c2bc	add	x21, x8, #0x18
000000000000c2c0	adrp	x0, 92 ; 0x68000
000000000000c2c4	add	x0, x0, #0xa00
000000000000c2c8	ldr	x9, [x0]
000000000000c2cc	blr	x9
000000000000c2d0	ldr	x22, [x0]
000000000000c2d4	ldr	x9, [x22, #0x110]
000000000000c2d8	str	x8, [x22, #0x110]
000000000000c2dc	mov	x8, #0x400000000
000000000000c2e0	stp	x9, x8, [sp, #0x8]
000000000000c2e4	adr	x8, #0x7655f
000000000000c2e8	nop
000000000000c2ec	ldarb	w8, [x8]
000000000000c2f0	tbz	w8, #0x0, 0xc2f8
000000000000c2f4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000c2f8	mov	x0, x20
000000000000c2fc	mov	x1, x21
000000000000c300	bl	"_kfun:kotlin.native.internal.KClassImpl#<get-fullName>(){}kotlin.String?"
000000000000c304	adr	x8, #0x552ac
000000000000c308	nop
000000000000c30c	cmp	x0, #0x0
000000000000c310	csel	x1, x8, x0, eq
000000000000c314	adr	x0, #0x5527c
000000000000c318	nop
000000000000c31c	mov	x2, x19
000000000000c320	bl	_Kotlin_String_plusImpl
000000000000c324	str	x0, [x19]
000000000000c328	ldr	x8, [sp, #0x8]
000000000000c32c	str	x8, [x22, #0x110]
000000000000c330	ldp	x29, x30, [sp, #0x40]
000000000000c334	ldp	x20, x19, [sp, #0x30]
000000000000c338	ldp	x22, x21, [sp, #0x20]
000000000000c33c	add	sp, sp, #0x50
000000000000c340	ret
_kfun:kotlin.native.internal.KClassImpl#<get-fullName>(){}kotlin.String?:
000000000000c344	sub	sp, sp, #0xc0
000000000000c348	stp	x26, x25, [sp, #0x70]
000000000000c34c	stp	x24, x23, [sp, #0x80]
000000000000c350	stp	x22, x21, [sp, #0x90]
000000000000c354	stp	x20, x19, [sp, #0xa0]
000000000000c358	stp	x29, x30, [sp, #0xb0]
000000000000c35c	add	x29, sp, #0xb0
000000000000c360	mov	x19, x1
000000000000c364	mov	x20, x0
000000000000c368	movi.16b	v0, #0x0
000000000000c36c	stp	q0, q0, [sp, #0x20]
000000000000c370	stp	q0, q0, [sp, #0x50]
000000000000c374	str	q0, [sp, #0x40]
000000000000c378	add	x24, sp, #0x20
000000000000c37c	stp	xzr, xzr, [sp, #0x10]
000000000000c380	adr	x8, #0x4c010
000000000000c384	nop
000000000000c388	orr	x8, x8, #0x3
000000000000c38c	str	x8, [sp, #0x8]
000000000000c390	adrp	x0, 92 ; 0x68000
000000000000c394	add	x0, x0, #0xa00
000000000000c398	ldr	x8, [x0]
000000000000c39c	blr	x8
000000000000c3a0	ldr	x25, [x0]
000000000000c3a4	ldr	x8, [x25, #0x110]
000000000000c3a8	str	x24, [x25, #0x110]
000000000000c3ac	mov	x9, #0xa00000000
000000000000c3b0	stp	x8, x9, [sp, #0x28]
000000000000c3b4	adr	x8, #0x7648f
000000000000c3b8	nop
000000000000c3bc	ldarb	w8, [x8]
000000000000c3c0	tbz	w8, #0x0, 0xc3c8
000000000000c3c4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000c3c8	ldr	x8, [x20, #0x8]
000000000000c3cc	ldr	x20, [x8, #0x50]
000000000000c3d0	str	x20, [sp, #0x38]
000000000000c3d4	cbz	x20, 0xc468
000000000000c3d8	ldr	x21, [x8, #0x48]
000000000000c3dc	str	x21, [sp, #0x40]
000000000000c3e0	cbz	x21, 0xc468
000000000000c3e4	add	x1, x24, #0x28
000000000000c3e8	ldr	w8, [x21, #0x8]
000000000000c3ec	cmp	w8, #0x0
000000000000c3f0	cset	w0, eq
000000000000c3f4	bl	"_kfun:kotlin#<Boolean-box>(kotlin.Boolean){}kotlin.Any"
000000000000c3f8	cbz	x0, 0xc468
000000000000c3fc	ldrb	w8, [x0, #0x8]
000000000000c400	tbnz	w8, #0x0, 0xc468
000000000000c404	add	x22, x24, #0x40
000000000000c408	add	x23, x24, #0x38
000000000000c40c	add	x24, x24, #0x48
000000000000c410	add	x8, sp, #0x8
000000000000c414	str	x8, [sp, #0x50]
000000000000c418	add	x0, sp, #0x8
000000000000c41c	mov	w1, #0xa
000000000000c420	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
000000000000c424	add	x0, sp, #0x8
000000000000c428	mov	x1, x21
000000000000c42c	mov	x2, x23
000000000000c430	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000c434	adr	x1, #0x5513c
000000000000c438	nop
000000000000c43c	add	x0, sp, #0x8
000000000000c440	mov	x2, x22
000000000000c444	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000c448	add	x0, sp, #0x8
000000000000c44c	mov	x1, x20
000000000000c450	mov	x2, x24
000000000000c454	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000c458	add	x0, sp, #0x8
000000000000c45c	mov	x1, x19
000000000000c460	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
000000000000c464	mov	x20, x0
000000000000c468	str	x20, [x19]
000000000000c46c	ldr	x8, [sp, #0x28]
000000000000c470	str	x8, [x25, #0x110]
000000000000c474	mov	x0, x20
000000000000c478	ldp	x29, x30, [sp, #0xb0]
000000000000c47c	ldp	x20, x19, [sp, #0xa0]
000000000000c480	ldp	x22, x21, [sp, #0x90]
000000000000c484	ldp	x24, x23, [sp, #0x80]
000000000000c488	ldp	x26, x25, [sp, #0x70]
000000000000c48c	add	sp, sp, #0xc0
000000000000c490	ret
_kfun:kotlin.native.internal.NumberConverter.freeFormatExponential#internal:
000000000000c494	sub	sp, sp, #0xe0
000000000000c498	stp	x26, x25, [sp, #0x90]
000000000000c49c	stp	x24, x23, [sp, #0xa0]
000000000000c4a0	stp	x22, x21, [sp, #0xb0]
000000000000c4a4	stp	x20, x19, [sp, #0xc0]
000000000000c4a8	stp	x29, x30, [sp, #0xd0]
000000000000c4ac	add	x29, sp, #0xd0
000000000000c4b0	mov	x19, x1
000000000000c4b4	mov	x20, x0
000000000000c4b8	movi.16b	v0, #0x0
000000000000c4bc	stp	q0, q0, [sp, #0x50]
000000000000c4c0	str	q0, [sp, #0x70]
000000000000c4c4	adr	x8, #0x481ac
000000000000c4c8	nop
000000000000c4cc	orr	x8, x8, #0x3
000000000000c4d0	str	x8, [sp, #0x8]
000000000000c4d4	mov	w8, #0x19
000000000000c4d8	str	w8, [sp, #0x10]
000000000000c4dc	stur	q0, [sp, #0x18]
000000000000c4e0	stur	q0, [sp, #0x28]
000000000000c4e4	stur	q0, [sp, #0x38]
000000000000c4e8	strh	wzr, [sp, #0x48]
000000000000c4ec	adrp	x0, 92 ; 0x68000
000000000000c4f0	add	x0, x0, #0xa00
000000000000c4f4	ldr	x8, [x0]
000000000000c4f8	blr	x8
000000000000c4fc	ldr	x23, [x0]
000000000000c500	ldr	x8, [x23, #0x110]
000000000000c504	add	x9, sp, #0x50
000000000000c508	str	x9, [x23, #0x110]
000000000000c50c	mov	x9, #0x600000000
000000000000c510	stp	x8, x9, [sp, #0x58]
000000000000c514	adr	x22, #0x7632f
000000000000c518	nop
000000000000c51c	ldarb	w8, [x22]
000000000000c520	tbz	w8, #0x0, 0xc528
000000000000c524	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000c528	add	x8, sp, #0x8
000000000000c52c	str	x8, [sp, #0x68]
000000000000c530	ldr	x8, [x20, #0x8]
000000000000c534	ldrsw	x9, [x20, #0x14]
000000000000c538	add	w10, w9, #0x1
000000000000c53c	str	w10, [x20, #0x14]
000000000000c540	ldr	w10, [x8, #0x8]
000000000000c544	cmp	w10, w9
000000000000c548	b.ls	0xc6ec
000000000000c54c	ldr	w10, [sp, #0x10]
000000000000c550	cbz	w10, 0xc6ec
000000000000c554	add	x8, x8, x9, lsl #2
000000000000c558	ldr	w8, [x8, #0x10]
000000000000c55c	add	w8, w8, #0x30
000000000000c560	ldr	x9, [sp, #0x8]
000000000000c564	strh	w8, [sp, #0x18]
000000000000c568	cmp	w10, #0x1
000000000000c56c	b.eq	0xc6ec
000000000000c570	add	x26, sp, #0x8
000000000000c574	add	x21, x26, #0x10
000000000000c578	ldr	x8, [sp, #0x8]
000000000000c57c	mov	w8, #0x2e
000000000000c580	strh	w8, [sp, #0x1a]
000000000000c584	ldr	w24, [x20, #0x18]
000000000000c588	mov	w25, #0x2
000000000000c58c	ldarb	w8, [x22]
000000000000c590	tbz	w8, #0x0, 0xc598
000000000000c594	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000c598	ldp	w9, w8, [x20, #0x10]
000000000000c59c	sxtw	x8, w8
000000000000c5a0	cmp	w8, w9
000000000000c5a4	b.ge	0xc5f4
000000000000c5a8	ldr	x9, [x20, #0x8]
000000000000c5ac	add	w10, w8, #0x1
000000000000c5b0	str	w10, [x20, #0x14]
000000000000c5b4	ldr	w10, [x9, #0x8]
000000000000c5b8	cmp	w10, w8
000000000000c5bc	b.ls	0xc6ec
000000000000c5c0	ldr	w10, [sp, #0x10]
000000000000c5c4	cmp	w10, w25
000000000000c5c8	b.ls	0xc6ec
000000000000c5cc	add	x8, x9, x8, lsl #2
000000000000c5d0	ldr	w8, [x8, #0x10]
000000000000c5d4	add	w8, w8, #0x30
000000000000c5d8	ldr	x9, [sp, #0x8]
000000000000c5dc	add	x9, x26, w25, sxtw #1
000000000000c5e0	strh	w8, [x9, #0x10]
000000000000c5e4	add	w25, w25, #0x1
000000000000c5e8	ldarb	w8, [x22]
000000000000c5ec	tbnz	w8, #0x0, 0xc594
000000000000c5f0	b	0xc598
000000000000c5f4	ldr	w8, [sp, #0x10]
000000000000c5f8	cmp	w25, #0x2
000000000000c5fc	b.ne	0xc620
000000000000c600	cmp	w8, w25
000000000000c604	b.ls	0xc6ec
000000000000c608	ldr	x9, [sp, #0x8]
000000000000c60c	add	x9, sp, #0x8
000000000000c610	add	x9, x9, w25, sxtw #1
000000000000c614	mov	w10, #0x30
000000000000c618	strh	w10, [x9, #0x10]
000000000000c61c	add	w25, w25, #0x1
000000000000c620	cmp	w8, w25
000000000000c624	b.ls	0xc6ec
000000000000c628	ldr	x8, [sp, #0x8]
000000000000c62c	add	x8, sp, #0x8
000000000000c630	add	x8, x8, w25, sxtw #1
000000000000c634	mov	w9, #0x45
000000000000c638	strh	w9, [x8, #0x10]
000000000000c63c	adds	w25, w25, #0x1
000000000000c640	b.mi	0xc6f0
000000000000c644	add	x8, sp, #0x50
000000000000c648	add	x20, x8, #0x28
000000000000c64c	ldr	x8, [x23, #0x118]
000000000000c650	lsl	x9, x25, #1
000000000000c654	add	x9, x9, #0x1f
000000000000c658	and	x1, x9, #0x3fffffff8
000000000000c65c	add	x0, x8, #0x70
000000000000c660	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000c664	mov	x22, x0
000000000000c668	adr	x8, #0x49078
000000000000c66c	nop
000000000000c670	stp	x8, xzr, [x22, #0x10]!
000000000000c674	stur	xzr, [x22, #-0x8]
000000000000c678	str	w25, [x22, #0x8]
000000000000c67c	add	x0, x22, #0x10
000000000000c680	sbfiz	x2, x25, #1, #32
000000000000c684	mov	x1, x21
000000000000c688	bl	0x4dbec ; symbol stub for: _memcpy
000000000000c68c	str	x22, [sp, #0x70]
000000000000c690	str	x24, [sp]
000000000000c694	adr	x2, #0x4660c ; literal pool for: "%d"
000000000000c698	nop
000000000000c69c	sub	x0, x29, #0x50
000000000000c6a0	mov	w1, #0x10
000000000000c6a4	bl	__ZN5konan8snprintfEPcmPKcz
000000000000c6a8	sub	x0, x29, #0x50
000000000000c6ac	mov	x1, x20
000000000000c6b0	bl	_CreateStringFromCString
000000000000c6b4	mov	x1, x0
000000000000c6b8	mov	x0, x22
000000000000c6bc	mov	x2, x19
000000000000c6c0	bl	_Kotlin_String_plusImpl
000000000000c6c4	str	x0, [x19]
000000000000c6c8	ldr	x8, [sp, #0x58]
000000000000c6cc	str	x8, [x23, #0x110]
000000000000c6d0	ldp	x29, x30, [sp, #0xd0]
000000000000c6d4	ldp	x20, x19, [sp, #0xc0]
000000000000c6d8	ldp	x22, x21, [sp, #0xb0]
000000000000c6dc	ldp	x24, x23, [sp, #0xa0]
000000000000c6e0	ldp	x26, x25, [sp, #0x90]
000000000000c6e4	add	sp, sp, #0xe0
000000000000c6e8	ret
000000000000c6ec	bl	_ThrowArrayIndexOutOfBoundsException
000000000000c6f0	bl	_ThrowIllegalArgumentException
_kfun:kotlin.native.internal.NumberConverter.freeFormat#internal:
000000000000c6f4	sub	sp, sp, #0xf0
000000000000c6f8	stp	x28, x27, [sp, #0x90]
000000000000c6fc	stp	x26, x25, [sp, #0xa0]
000000000000c700	stp	x24, x23, [sp, #0xb0]
000000000000c704	stp	x22, x21, [sp, #0xc0]
000000000000c708	stp	x20, x19, [sp, #0xd0]
000000000000c70c	stp	x29, x30, [sp, #0xe0]
000000000000c710	add	x29, sp, #0xe0
000000000000c714	mov	x19, x1
000000000000c718	mov	x20, x0
000000000000c71c	movi.16b	v0, #0x0
000000000000c720	stp	q0, q0, [sp, #0x50]
000000000000c724	adr	x8, #0x47f4c
000000000000c728	nop
000000000000c72c	orr	x8, x8, #0x3
000000000000c730	str	x8, [sp, #0x8]
000000000000c734	mov	w8, #0x19
000000000000c738	str	w8, [sp, #0x10]
000000000000c73c	stur	q0, [sp, #0x18]
000000000000c740	stur	q0, [sp, #0x28]
000000000000c744	stur	q0, [sp, #0x38]
000000000000c748	strh	wzr, [sp, #0x48]
000000000000c74c	adrp	x0, 92 ; 0x68000
000000000000c750	add	x0, x0, #0xa00
000000000000c754	ldr	x8, [x0]
000000000000c758	blr	x8
000000000000c75c	ldr	x21, [x0]
000000000000c760	ldr	x8, [x21, #0x110]
000000000000c764	add	x9, sp, #0x50
000000000000c768	str	x9, [x21, #0x110]
000000000000c76c	mov	x9, #0x400000000
000000000000c770	stp	x8, x9, [sp, #0x58]
000000000000c774	adr	x22, #0x760cf
000000000000c778	nop
000000000000c77c	ldarb	w8, [x22]
000000000000c780	tbz	w8, #0x0, 0xc788
000000000000c784	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000c788	add	x8, sp, #0x8
000000000000c78c	str	x8, [sp, #0x68]
000000000000c790	ldr	w23, [x20, #0x18]
000000000000c794	tbnz	w23, #0x1f, 0xc7a0
000000000000c798	mov	w26, #0x0
000000000000c79c	b	0xc820
000000000000c7a0	ldr	w8, [sp, #0x10]
000000000000c7a4	cbz	w8, 0xc9e4
000000000000c7a8	ldr	x9, [sp, #0x8]
000000000000c7ac	mov	w9, #0x30
000000000000c7b0	strh	w9, [sp, #0x18]
000000000000c7b4	cmp	w8, #0x1
000000000000c7b8	b.eq	0xc9e4
000000000000c7bc	ldr	x8, [sp, #0x8]
000000000000c7c0	mov	w8, #0x2e
000000000000c7c4	strh	w8, [sp, #0x1a]
000000000000c7c8	cmn	w23, #0x1
000000000000c7cc	b.mi	0xc7d8
000000000000c7d0	mov	w26, #0x2
000000000000c7d4	b	0xc820
000000000000c7d8	neg	w25, w23
000000000000c7dc	mov	w24, #0x1
000000000000c7e0	add	x26, sp, #0x8
000000000000c7e4	mov	w27, #0x30
000000000000c7e8	ldarb	w8, [x22]
000000000000c7ec	tbz	w8, #0x0, 0xc7f4
000000000000c7f0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000c7f4	add	w8, w24, #0x1
000000000000c7f8	ldr	w9, [sp, #0x10]
000000000000c7fc	cmp	w9, w8
000000000000c800	b.ls	0xc9e4
000000000000c804	ldr	x9, [sp, #0x8]
000000000000c808	add	x8, x26, w8, sxtw #1
000000000000c80c	strh	w27, [x8, #0x10]
000000000000c810	add	w24, w24, #0x1
000000000000c814	cmp	w25, w24
000000000000c818	b.ne	0xc7e8
000000000000c81c	add	w26, w24, #0x1
000000000000c820	ldr	x8, [x20, #0x8]
000000000000c824	ldrsw	x9, [x20, #0x14]
000000000000c828	add	w10, w9, #0x1
000000000000c82c	str	w10, [x20, #0x14]
000000000000c830	ldr	w10, [x8, #0x8]
000000000000c834	cmp	w10, w9
000000000000c838	b.ls	0xc9e4
000000000000c83c	add	x8, x8, x9, lsl #2
000000000000c840	ldr	w28, [x8, #0x10]
000000000000c844	add	x24, sp, #0x8
000000000000c848	mov	w25, #0x2e
000000000000c84c	b	0xc860
000000000000c850	mov	w28, #-0x1
000000000000c854	mov	x26, x27
000000000000c858	cmn	w23, #0x2
000000000000c85c	b.le	0xc940
000000000000c860	ldarb	w8, [x22]
000000000000c864	tbz	w8, #0x0, 0xc86c
000000000000c868	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000c86c	cmn	w28, #0x1
000000000000c870	b.eq	0xc89c
000000000000c874	ldr	w8, [sp, #0x10]
000000000000c878	cmp	w8, w26
000000000000c87c	b.ls	0xc9e4
000000000000c880	add	w9, w28, #0x30
000000000000c884	ldr	x10, [sp, #0x8]
000000000000c888	add	x10, x24, w26, sxtw #1
000000000000c88c	strh	w9, [x10, #0x10]
000000000000c890	add	w27, w26, #0x1
000000000000c894	cbnz	w23, 0xc8e0
000000000000c898	b	0xc8c8
000000000000c89c	cmn	w23, #0x1
000000000000c8a0	b.lt	0xc924
000000000000c8a4	ldr	w8, [sp, #0x10]
000000000000c8a8	cmp	w8, w26
000000000000c8ac	b.ls	0xc9e4
000000000000c8b0	ldr	x9, [sp, #0x8]
000000000000c8b4	mov	w9, #0x30
000000000000c8b8	add	x10, x24, w26, sxtw #1
000000000000c8bc	strh	w9, [x10, #0x10]
000000000000c8c0	add	w27, w26, #0x1
000000000000c8c4	cbnz	w23, 0xc8e0
000000000000c8c8	cmp	w8, w27
000000000000c8cc	b.ls	0xc9e4
000000000000c8d0	ldr	x8, [sp, #0x8]
000000000000c8d4	add	x8, x24, w27, sxtw #1
000000000000c8d8	strh	w25, [x8, #0x10]
000000000000c8dc	add	w27, w26, #0x2
000000000000c8e0	sub	w23, w23, #0x1
000000000000c8e4	ldp	w9, w8, [x20, #0x10]
000000000000c8e8	sxtw	x8, w8
000000000000c8ec	cmp	w8, w9
000000000000c8f0	b.ge	0xc850
000000000000c8f4	ldr	x9, [x20, #0x8]
000000000000c8f8	add	w10, w8, #0x1
000000000000c8fc	str	w10, [x20, #0x14]
000000000000c900	ldr	w10, [x9, #0x8]
000000000000c904	cmp	w10, w8
000000000000c908	b.ls	0xc9e4
000000000000c90c	add	x8, x9, x8, lsl #2
000000000000c910	ldr	w28, [x8, #0x10]
000000000000c914	mov	x26, x27
000000000000c918	cmn	w28, #0x1
000000000000c91c	b.ne	0xc860
000000000000c920	b	0xc850
000000000000c924	mov	x27, x26
000000000000c928	sub	w23, w23, #0x1
000000000000c92c	ldp	w9, w8, [x20, #0x10]
000000000000c930	sxtw	x8, w8
000000000000c934	cmp	w8, w9
000000000000c938	b.ge	0xc850
000000000000c93c	b	0xc8f4
000000000000c940	cbz	w27, 0xc998
000000000000c944	tbnz	w27, #0x1f, 0xc9e8
000000000000c948	ldr	x8, [x21, #0x118]
000000000000c94c	mov	w9, w27
000000000000c950	lsl	x9, x9, #1
000000000000c954	add	x9, x9, #0x1f
000000000000c958	and	x1, x9, #0x3fffffff8
000000000000c95c	add	x0, x8, #0x70
000000000000c960	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000c964	mov	x20, x0
000000000000c968	adr	x8, #0x48d78
000000000000c96c	nop
000000000000c970	stp	x8, xzr, [x20, #0x10]!
000000000000c974	stur	xzr, [x20, #-0x8]
000000000000c978	str	w27, [x20, #0x8]
000000000000c97c	add	x0, x20, #0x10
000000000000c980	add	x8, sp, #0x8
000000000000c984	add	x1, x8, #0x10
000000000000c988	sbfiz	x2, x27, #1, #32
000000000000c98c	bl	0x4dbec ; symbol stub for: _memcpy
000000000000c990	str	x20, [x19]
000000000000c994	b	0xc9b4
000000000000c998	ldr	x8, [x21, #0x110]
000000000000c99c	sub	x9, x29, #0x68
000000000000c9a0	str	x9, [x21, #0x110]
000000000000c9a4	adr	x20, #0x546e4
000000000000c9a8	nop
000000000000c9ac	str	x20, [x19]
000000000000c9b0	str	x8, [x21, #0x110]
000000000000c9b4	str	x20, [x19]
000000000000c9b8	ldr	x8, [sp, #0x58]
000000000000c9bc	str	x8, [x21, #0x110]
000000000000c9c0	mov	x0, x20
000000000000c9c4	ldp	x29, x30, [sp, #0xe0]
000000000000c9c8	ldp	x20, x19, [sp, #0xd0]
000000000000c9cc	ldp	x22, x21, [sp, #0xc0]
000000000000c9d0	ldp	x24, x23, [sp, #0xb0]
000000000000c9d4	ldp	x26, x25, [sp, #0xa0]
000000000000c9d8	ldp	x28, x27, [sp, #0x90]
000000000000c9dc	add	sp, sp, #0xf0
000000000000c9e0	ret
000000000000c9e4	bl	_ThrowArrayIndexOutOfBoundsException
000000000000c9e8	bl	_ThrowIllegalArgumentException
_kfun:kotlin.native.internal.NumberConverter.bigIntDigitGeneratorInstImpl#internal:
000000000000c9ec	stp	x28, x27, [sp, #-0x60]!
000000000000c9f0	stp	x26, x25, [sp, #0x10]
000000000000c9f4	stp	x24, x23, [sp, #0x20]
000000000000c9f8	stp	x22, x21, [sp, #0x30]
000000000000c9fc	stp	x20, x19, [sp, #0x40]
000000000000ca00	stp	x29, x30, [sp, #0x50]
000000000000ca04	add	x29, sp, #0x50
000000000000ca08	sub	sp, sp, #0x400
000000000000ca0c	mov	x22, x4
000000000000ca10	mov	x23, x3
000000000000ca14	mov	x20, x2
000000000000ca18	mov	x21, x1
000000000000ca1c	mov	x24, x0
000000000000ca20	movi.16b	v0, #0x0
000000000000ca24	stp	q0, q0, [sp, #0x70]
000000000000ca28	adr	x8, #0x47cd8
000000000000ca2c	nop
000000000000ca30	orr	x8, x8, #0x3
000000000000ca34	str	x8, [sp, #0x50]
000000000000ca38	mov	w8, #0x3
000000000000ca3c	str	w8, [sp, #0x58]
000000000000ca40	str	xzr, [sp, #0x60]
000000000000ca44	str	wzr, [sp, #0x68]
000000000000ca48	adrp	x0, 92 ; 0x68000
000000000000ca4c	add	x0, x0, #0xa00
000000000000ca50	ldr	x8, [x0]
000000000000ca54	blr	x8
000000000000ca58	ldr	x10, [x0]
000000000000ca5c	ldr	x8, [x10, #0x110]
000000000000ca60	add	x9, sp, #0x70
000000000000ca64	str	x10, [sp]
000000000000ca68	str	x9, [x10, #0x110]
000000000000ca6c	mov	x9, #0x400000000
000000000000ca70	stp	x8, x9, [sp, #0x78]
000000000000ca74	adr	x8, #0x75dcf
000000000000ca78	nop
000000000000ca7c	ldarb	w8, [x8]
000000000000ca80	tbz	w8, #0x0, 0xca8c
000000000000ca84	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000ca88	movi.16b	v0, #0x0
000000000000ca8c	add	x8, sp, #0x50
000000000000ca90	str	x8, [sp, #0x88]
000000000000ca94	ldr	x26, [x24, #0x8]
000000000000ca98	stp	q0, q0, [x29, #-0x100]
000000000000ca9c	stp	q0, q0, [x29, #-0xe0]
000000000000caa0	stp	q0, q0, [x29, #-0xc0]
000000000000caa4	stp	q0, q0, [x29, #-0xa0]
000000000000caa8	stp	q0, q0, [x29, #-0x80]
000000000000caac	stur	xzr, [x29, #-0x60]
000000000000cab0	stp	q0, q0, [sp, #0x2a0]
000000000000cab4	stp	q0, q0, [sp, #0x2c0]
000000000000cab8	stp	q0, q0, [sp, #0x2e0]
000000000000cabc	stp	q0, q0, [sp, #0x300]
000000000000cac0	stp	q0, q0, [sp, #0x320]
000000000000cac4	str	q0, [sp, #0x340]
000000000000cac8	str	xzr, [sp, #0x290]
000000000000cacc	stp	q0, q0, [sp, #0x270]
000000000000cad0	stp	q0, q0, [sp, #0x250]
000000000000cad4	stp	q0, q0, [sp, #0x230]
000000000000cad8	stp	q0, q0, [sp, #0x210]
000000000000cadc	stp	q0, q0, [sp, #0x1f0]
000000000000cae0	str	xzr, [sp, #0x1e0]
000000000000cae4	stp	q0, q0, [sp, #0x1c0]
000000000000cae8	stp	q0, q0, [sp, #0x1a0]
000000000000caec	stp	q0, q0, [sp, #0x180]
000000000000caf0	stp	q0, q0, [sp, #0x160]
000000000000caf4	stp	q0, q0, [sp, #0x140]
000000000000caf8	stp	q0, q0, [sp, #0x120]
000000000000cafc	stp	q0, q0, [sp, #0x100]
000000000000cb00	stp	q0, q0, [sp, #0xe0]
000000000000cb04	stp	q0, q0, [sp, #0xc0]
000000000000cb08	stp	q0, q0, [sp, #0xa0]
000000000000cb0c	str	q0, [sp, #0x90]
000000000000cb10	str	x24, [sp, #0x10]
000000000000cb14	tbnz	w20, #0x1f, 0xcb7c
000000000000cb18	stur	x21, [x29, #-0x100]
000000000000cb1c	mov	w8, #0x1
000000000000cb20	str	x8, [sp, #0x140]
000000000000cb24	str	x8, [sp, #0x1f0]
000000000000cb28	add	x0, sp, #0x140
000000000000cb2c	mov	w1, #0x15
000000000000cb30	mov	x2, x20
000000000000cb34	bl	_simpleShiftLeftHighPrecision
000000000000cb38	sub	w19, w22, #0x1
000000000000cb3c	mov	w8, #0x2
000000000000cb40	lsl	w8, w8, w19
000000000000cb44	sxtw	x8, w8
000000000000cb48	cmp	x8, x21
000000000000cb4c	b.ne	0xcbc4
000000000000cb50	add	w2, w20, #0x2
000000000000cb54	sub	x0, x29, #0x100
000000000000cb58	mov	w1, #0x15
000000000000cb5c	bl	_simpleShiftLeftHighPrecision
000000000000cb60	mov	w8, #0x4
000000000000cb64	str	x8, [sp, #0x2a0]
000000000000cb68	add	w2, w20, #0x1
000000000000cb6c	add	x0, sp, #0x1f0
000000000000cb70	mov	w1, #0x15
000000000000cb74	bl	_simpleShiftLeftHighPrecision
000000000000cb78	b	0xcc18
000000000000cb7c	sub	w19, w22, #0x1
000000000000cb80	tbnz	w23, #0x0, 0xcbf0
000000000000cb84	mov	w22, #0x2
000000000000cb88	lsl	w8, w22, w19
000000000000cb8c	sxtw	x8, w8
000000000000cb90	cmp	x8, x21
000000000000cb94	b.ne	0xcbf0
000000000000cb98	lsl	x8, x21, #2
000000000000cb9c	stur	x8, [x29, #-0x100]
000000000000cba0	mov	w21, #0x1
000000000000cba4	str	x21, [sp, #0x2a0]
000000000000cba8	sub	w2, w22, w20
000000000000cbac	add	x0, sp, #0x2a0
000000000000cbb0	mov	w1, #0x16
000000000000cbb4	bl	_simpleShiftLeftHighPrecision
000000000000cbb8	str	x22, [sp, #0x1f0]
000000000000cbbc	str	x21, [sp, #0x140]
000000000000cbc0	b	0xcc18
000000000000cbc4	add	w2, w20, #0x1
000000000000cbc8	sub	x0, x29, #0x100
000000000000cbcc	mov	w1, #0x15
000000000000cbd0	bl	_simpleShiftLeftHighPrecision
000000000000cbd4	mov	w8, #0x2
000000000000cbd8	str	x8, [sp, #0x2a0]
000000000000cbdc	add	x0, sp, #0x1f0
000000000000cbe0	mov	w1, #0x15
000000000000cbe4	mov	x2, x20
000000000000cbe8	bl	_simpleShiftLeftHighPrecision
000000000000cbec	b	0xcc18
000000000000cbf0	lsl	x8, x21, #1
000000000000cbf4	stur	x8, [x29, #-0x100]
000000000000cbf8	mov	w21, #0x1
000000000000cbfc	str	x21, [sp, #0x2a0]
000000000000cc00	sub	w2, w21, w20
000000000000cc04	add	x0, sp, #0x2a0
000000000000cc08	mov	w1, #0x16
000000000000cc0c	bl	_simpleShiftLeftHighPrecision
000000000000cc10	str	x21, [sp, #0x140]
000000000000cc14	str	x21, [sp, #0x1f0]
000000000000cc18	add	w8, w19, w20
000000000000cc1c	scvtf	d0, w8
000000000000cc20	nop
000000000000cc24	ldr	d1, 0x4e550
000000000000cc28	fmul	d0, d0, d1
000000000000cc2c	nop
000000000000cc30	ldr	d1, 0x4e558
000000000000cc34	fadd	d0, d0, d1
000000000000cc38	fcvtps	w24, d0
000000000000cc3c	subs	w27, w24, #0x1
000000000000cc40	b.lt	0xcc54
000000000000cc44	add	x0, sp, #0x2a0
000000000000cc48	mov	w1, #0x16
000000000000cc4c	mov	x2, x24
000000000000cc50	b	0xcc84
000000000000cc54	neg	w20, w24
000000000000cc58	sub	x0, x29, #0x100
000000000000cc5c	mov	w1, #0x15
000000000000cc60	mov	x2, x20
000000000000cc64	bl	_timesTenToTheEHighPrecision
000000000000cc68	add	x0, sp, #0x1f0
000000000000cc6c	mov	w1, #0x15
000000000000cc70	mov	x2, x20
000000000000cc74	bl	_timesTenToTheEHighPrecision
000000000000cc78	add	x0, sp, #0x140
000000000000cc7c	mov	w1, #0x15
000000000000cc80	mov	x2, x20
000000000000cc84	bl	_timesTenToTheEHighPrecision
000000000000cc88	ldp	q0, q1, [x29, #-0x80]
000000000000cc8c	stp	q0, q1, [sp, #0x110]
000000000000cc90	ldur	x8, [x29, #-0x60]
000000000000cc94	stp	x8, xzr, [sp, #0x130]
000000000000cc98	ldp	q0, q1, [x29, #-0xc0]
000000000000cc9c	stp	q0, q1, [sp, #0xd0]
000000000000cca0	ldp	q1, q0, [x29, #-0xa0]
000000000000cca4	stp	q1, q0, [sp, #0xf0]
000000000000cca8	ldp	q0, q1, [x29, #-0x100]
000000000000ccac	stp	q0, q1, [sp, #0x90]
000000000000ccb0	ldp	q1, q0, [x29, #-0xe0]
000000000000ccb4	mov	w8, #0x14
000000000000ccb8	sub	x9, x29, #0x100
000000000000ccbc	stp	q1, q0, [sp, #0xb0]
000000000000ccc0	add	x10, x8, #0x1
000000000000ccc4	cmp	x10, #0x2
000000000000ccc8	b.lo	0xcce0
000000000000cccc	ldr	x10, [x9, x8, lsl #3]
000000000000ccd0	sub	x8, x8, #0x1
000000000000ccd4	cbz	x10, 0xccc0
000000000000ccd8	add	w21, w8, #0x2
000000000000ccdc	b	0xcce4
000000000000cce0	mov	w21, #0x1
000000000000cce4	mov	w8, #0x14
000000000000cce8	add	x9, sp, #0x1f0
000000000000ccec	add	x10, x8, #0x1
000000000000ccf0	cmp	x10, #0x2
000000000000ccf4	b.lo	0xcd0c
000000000000ccf8	ldr	x10, [x9, x8, lsl #3]
000000000000ccfc	sub	x8, x8, #0x1
000000000000cd00	cbz	x10, 0xccec
000000000000cd04	add	w22, w8, #0x2
000000000000cd08	b	0xcd10
000000000000cd0c	mov	w22, #0x1
000000000000cd10	mov	w8, #0x14
000000000000cd14	add	x9, sp, #0x140
000000000000cd18	add	x10, x8, #0x1
000000000000cd1c	cmp	x10, #0x2
000000000000cd20	b.lo	0xcd38
000000000000cd24	ldr	x10, [x9, x8, lsl #3]
000000000000cd28	sub	x8, x8, #0x1
000000000000cd2c	cbz	x10, 0xcd18
000000000000cd30	add	w23, w8, #0x2
000000000000cd34	b	0xcd3c
000000000000cd38	mov	w23, #0x1
000000000000cd3c	mov	w8, #0x15
000000000000cd40	add	x9, sp, #0x2a0
000000000000cd44	add	x10, x8, #0x1
000000000000cd48	cmp	x10, #0x2
000000000000cd4c	b.lo	0xcd64
000000000000cd50	ldr	x10, [x9, x8, lsl #3]
000000000000cd54	sub	x8, x8, #0x1
000000000000cd58	cbz	x10, 0xcd44
000000000000cd5c	add	w20, w8, #0x2
000000000000cd60	b	0xcd68
000000000000cd64	mov	w20, #0x1
000000000000cd68	cmp	w21, w22
000000000000cd6c	csel	w8, w21, w22, gt
000000000000cd70	add	w25, w8, #0x1
000000000000cd74	add	x19, sp, #0x90
000000000000cd78	add	x0, sp, #0x90
000000000000cd7c	add	x2, sp, #0x1f0
000000000000cd80	mov	x1, x25
000000000000cd84	mov	x3, x22
000000000000cd88	bl	_addHighPrecision
000000000000cd8c	add	x0, sp, #0x90
000000000000cd90	add	x2, sp, #0x2a0
000000000000cd94	mov	x1, x25
000000000000cd98	str	x20, [sp, #0x28]
000000000000cd9c	mov	x3, x20
000000000000cda0	bl	_compareHighPrecision
000000000000cda4	tbnz	w0, #0x1f, 0xcdb0
000000000000cda8	str	w24, [sp, #0xc]
000000000000cdac	b	0xcee0
000000000000cdb0	mov	x9, #0x0
000000000000cdb4	cmp	w21, #0x1
000000000000cdb8	mov	w8, #0x1
000000000000cdbc	csinc	w8, w8, w21, lt
000000000000cdc0	sub	x10, x29, #0x100
000000000000cdc4	mov	w11, #0xa
000000000000cdc8	ldp	w12, w13, [x10]
000000000000cdcc	madd	x12, x12, x11, x9
000000000000cdd0	mul	x9, x13, x11
000000000000cdd4	add	x13, x9, x12, lsr #32
000000000000cdd8	lsr	x9, x13, #32
000000000000cddc	stp	w12, w13, [x10], #0x8
000000000000cde0	subs	x8, x8, #0x1
000000000000cde4	b.ne	0xcdc8
000000000000cde8	mov	x9, #0x0
000000000000cdec	cmp	w22, #0x1
000000000000cdf0	mov	w8, #0x1
000000000000cdf4	csinc	w8, w8, w22, lt
000000000000cdf8	add	x10, sp, #0x1f0
000000000000cdfc	mov	w11, #0xa
000000000000ce00	ldp	w12, w13, [x10]
000000000000ce04	madd	x12, x12, x11, x9
000000000000ce08	mul	x9, x13, x11
000000000000ce0c	add	x13, x9, x12, lsr #32
000000000000ce10	lsr	x9, x13, #32
000000000000ce14	stp	w12, w13, [x10], #0x8
000000000000ce18	subs	x8, x8, #0x1
000000000000ce1c	b.ne	0xce00
000000000000ce20	mov	x9, #0x0
000000000000ce24	cmp	w23, #0x1
000000000000ce28	mov	w8, #0x1
000000000000ce2c	csinc	w8, w8, w23, lt
000000000000ce30	add	x10, sp, #0x140
000000000000ce34	mov	w11, #0xa
000000000000ce38	ldp	w12, w13, [x10]
000000000000ce3c	madd	x12, x12, x11, x9
000000000000ce40	mul	x9, x13, x11
000000000000ce44	add	x13, x9, x12, lsr #32
000000000000ce48	lsr	x9, x13, #32
000000000000ce4c	stp	w12, w13, [x10], #0x8
000000000000ce50	subs	x8, x8, #0x1
000000000000ce54	b.ne	0xce38
000000000000ce58	mov	w8, w21
000000000000ce5c	sub	x9, x29, #0x100
000000000000ce60	add	x10, x8, #0x1
000000000000ce64	cmp	x10, #0x2
000000000000ce68	b.lt	0xce80
000000000000ce6c	ldr	x10, [x9, x8, lsl #3]
000000000000ce70	sub	x8, x8, #0x1
000000000000ce74	cbz	x10, 0xce60
000000000000ce78	add	w21, w8, #0x2
000000000000ce7c	b	0xce84
000000000000ce80	mov	w21, #0x1
000000000000ce84	mov	w8, w22
000000000000ce88	add	x9, sp, #0x1f0
000000000000ce8c	add	x10, x8, #0x1
000000000000ce90	cmp	x10, #0x2
000000000000ce94	b.lt	0xceac
000000000000ce98	ldr	x10, [x9, x8, lsl #3]
000000000000ce9c	sub	x8, x8, #0x1
000000000000cea0	cbz	x10, 0xce8c
000000000000cea4	add	w22, w8, #0x2
000000000000cea8	b	0xceb0
000000000000ceac	mov	w22, #0x1
000000000000ceb0	mov	w8, w23
000000000000ceb4	add	x9, sp, #0x140
000000000000ceb8	str	w27, [sp, #0xc]
000000000000cebc	add	x10, x8, #0x1
000000000000cec0	cmp	x10, #0x2
000000000000cec4	b.lt	0xcedc
000000000000cec8	ldr	x10, [x9, x8, lsl #3]
000000000000cecc	sub	x8, x8, #0x1
000000000000ced0	cbz	x10, 0xcebc
000000000000ced4	add	w23, w8, #0x2
000000000000ced8	b	0xcee0
000000000000cedc	mov	w23, #0x1
000000000000cee0	ldr	x27, [sp, #0x28]
000000000000cee4	add	w24, w27, #0x1
000000000000cee8	sxtw	x8, w27
000000000000ceec	str	x8, [sp, #0x48]
000000000000cef0	sbfiz	x8, x27, #3, #32
000000000000cef4	stp	xzr, x8, [sp, #0x38]
000000000000cef8	add	x8, x26, #0x10
000000000000cefc	stp	x8, x26, [sp, #0x18]
000000000000cf00	sub	x25, x19, #0x8
000000000000cf04	add	x20, sp, #0x140
000000000000cf08	mov	w28, #0xa
000000000000cf0c	ldp	x2, x8, [sp, #0x40]
000000000000cf10	str	xzr, [x19, x8, lsl #3]
000000000000cf14	add	x0, sp, #0x90
000000000000cf18	add	x1, sp, #0x2a0
000000000000cf1c	bl	0x4dbec ; symbol stub for: _memcpy
000000000000cf20	cmp	w27, #0x1
000000000000cf24	b.lt	0xcf54
000000000000cf28	mov	x8, x24
000000000000cf2c	lsl	x9, x8, #3
000000000000cf30	sub	w10, w8, #0x2
000000000000cf34	sub	x11, x8, #0x1
000000000000cf38	ldr	x12, [x25, x9]
000000000000cf3c	ldr	x10, [x19, w10, uxtw #3]
000000000000cf40	extr	x10, x12, x10, #0x3d
000000000000cf44	str	x10, [x25, x9]
000000000000cf48	cmp	x8, #0x2
000000000000cf4c	mov	x8, x11
000000000000cf50	b.gt	0xcf2c
000000000000cf54	ldr	x8, [sp, #0x90]
000000000000cf58	lsl	x8, x8, #3
000000000000cf5c	str	x8, [sp, #0x90]
000000000000cf60	sub	x0, x29, #0x100
000000000000cf64	add	x2, sp, #0x90
000000000000cf68	mov	x1, x21
000000000000cf6c	mov	x3, x24
000000000000cf70	bl	_compareHighPrecision
000000000000cf74	tbnz	w0, #0x1f, 0xcf94
000000000000cf78	sub	x0, x29, #0x100
000000000000cf7c	add	x2, sp, #0x90
000000000000cf80	mov	x1, x21
000000000000cf84	mov	x3, x24
000000000000cf88	bl	_subtractHighPrecision
000000000000cf8c	mov	w26, #0x8
000000000000cf90	b	0xcf98
000000000000cf94	mov	w26, #0x0
000000000000cf98	ldp	x2, x8, [sp, #0x40]
000000000000cf9c	str	xzr, [x19, x8, lsl #3]
000000000000cfa0	add	x0, sp, #0x90
000000000000cfa4	add	x1, sp, #0x2a0
000000000000cfa8	bl	0x4dbec ; symbol stub for: _memcpy
000000000000cfac	cmp	w27, #0x1
000000000000cfb0	b.lt	0xcfe0
000000000000cfb4	mov	x8, x24
000000000000cfb8	lsl	x9, x8, #3
000000000000cfbc	sub	w10, w8, #0x2
000000000000cfc0	sub	x11, x8, #0x1
000000000000cfc4	ldr	x12, [x25, x9]
000000000000cfc8	ldr	x10, [x19, w10, uxtw #3]
000000000000cfcc	extr	x10, x12, x10, #0x3e
000000000000cfd0	str	x10, [x25, x9]
000000000000cfd4	cmp	x8, #0x2
000000000000cfd8	mov	x8, x11
000000000000cfdc	b.gt	0xcfb8
000000000000cfe0	ldr	x8, [sp, #0x90]
000000000000cfe4	lsl	x8, x8, #2
000000000000cfe8	str	x8, [sp, #0x90]
000000000000cfec	sub	x0, x29, #0x100
000000000000cff0	add	x2, sp, #0x90
000000000000cff4	mov	x1, x21
000000000000cff8	mov	x3, x24
000000000000cffc	bl	_compareHighPrecision
000000000000d000	tbnz	w0, #0x1f, 0xd01c
000000000000d004	sub	x0, x29, #0x100
000000000000d008	add	x2, sp, #0x90
000000000000d00c	mov	x1, x21
000000000000d010	mov	x3, x24
000000000000d014	bl	_subtractHighPrecision
000000000000d018	orr	w26, w26, #0x4
000000000000d01c	ldp	x2, x8, [sp, #0x40]
000000000000d020	str	xzr, [x19, x8, lsl #3]
000000000000d024	add	x0, sp, #0x90
000000000000d028	add	x1, sp, #0x2a0
000000000000d02c	bl	0x4dbec ; symbol stub for: _memcpy
000000000000d030	cmp	w27, #0x1
000000000000d034	b.lt	0xd064
000000000000d038	mov	x8, x24
000000000000d03c	lsl	x9, x8, #3
000000000000d040	sub	w10, w8, #0x2
000000000000d044	sub	x11, x8, #0x1
000000000000d048	ldr	x12, [x25, x9]
000000000000d04c	ldr	x10, [x19, w10, uxtw #3]
000000000000d050	extr	x10, x12, x10, #0x3f
000000000000d054	str	x10, [x25, x9]
000000000000d058	cmp	x8, #0x2
000000000000d05c	mov	x8, x11
000000000000d060	b.gt	0xd03c
000000000000d064	ldr	x8, [sp, #0x90]
000000000000d068	lsl	x8, x8, #1
000000000000d06c	str	x8, [sp, #0x90]
000000000000d070	sub	x0, x29, #0x100
000000000000d074	add	x2, sp, #0x90
000000000000d078	mov	x1, x21
000000000000d07c	mov	x3, x24
000000000000d080	bl	_compareHighPrecision
000000000000d084	tbnz	w0, #0x1f, 0xd0a0
000000000000d088	sub	x0, x29, #0x100
000000000000d08c	add	x2, sp, #0x90
000000000000d090	mov	x1, x21
000000000000d094	mov	x3, x24
000000000000d098	bl	_subtractHighPrecision
000000000000d09c	add	w26, w26, #0x2
000000000000d0a0	ldp	x2, x8, [sp, #0x40]
000000000000d0a4	str	xzr, [x19, x8, lsl #3]
000000000000d0a8	add	x0, sp, #0x90
000000000000d0ac	add	x1, sp, #0x2a0
000000000000d0b0	bl	0x4dbec ; symbol stub for: _memcpy
000000000000d0b4	sub	x0, x29, #0x100
000000000000d0b8	add	x2, sp, #0x90
000000000000d0bc	mov	x1, x21
000000000000d0c0	mov	x3, x24
000000000000d0c4	bl	_compareHighPrecision
000000000000d0c8	tbnz	w0, #0x1f, 0xd0e4
000000000000d0cc	sub	x0, x29, #0x100
000000000000d0d0	add	x2, sp, #0x90
000000000000d0d4	mov	x1, x21
000000000000d0d8	mov	x3, x24
000000000000d0dc	bl	_subtractHighPrecision
000000000000d0e0	add	w26, w26, #0x1
000000000000d0e4	str	w26, [sp, #0x34]
000000000000d0e8	sub	x0, x29, #0x100
000000000000d0ec	add	x2, sp, #0x140
000000000000d0f0	mov	x1, x21
000000000000d0f4	mov	x3, x23
000000000000d0f8	bl	_compareHighPrecision
000000000000d0fc	mov	x26, x0
000000000000d100	sbfiz	x27, x21, #3, #32
000000000000d104	add	x0, x19, x27
000000000000d108	mov	w8, #0x16
000000000000d10c	sub	w8, w8, w21
000000000000d110	sbfiz	x1, x8, #3, #32
000000000000d114	bl	0x4db14 ; symbol stub for: _bzero
000000000000d118	add	x0, sp, #0x90
000000000000d11c	sub	x1, x29, #0x100
000000000000d120	mov	x2, x27
000000000000d124	bl	0x4dbec ; symbol stub for: _memcpy
000000000000d128	cmp	w21, w22
000000000000d12c	csel	w8, w21, w22, gt
000000000000d130	add	w27, w8, #0x1
000000000000d134	add	x0, sp, #0x90
000000000000d138	add	x2, sp, #0x1f0
000000000000d13c	mov	x1, x27
000000000000d140	mov	x3, x22
000000000000d144	bl	_addHighPrecision
000000000000d148	add	x0, sp, #0x90
000000000000d14c	add	x2, sp, #0x2a0
000000000000d150	mov	x1, x27
000000000000d154	ldr	x27, [sp, #0x28]
000000000000d158	mov	x3, x27
000000000000d15c	bl	_compareHighPrecision
000000000000d160	add	w1, w21, #0x1
000000000000d164	cmp	w26, #0x1
000000000000d168	b.lt	0xd2d8
000000000000d16c	tbz	w0, #0x1f, 0xd2d8
000000000000d170	mov	x9, #0x0
000000000000d174	cmp	w1, #0x1
000000000000d178	csinc	w8, w1, wzr, gt
000000000000d17c	sub	x10, x29, #0x100
000000000000d180	ldp	w11, w12, [x10]
000000000000d184	madd	x11, x11, x28, x9
000000000000d188	mul	x9, x12, x28
000000000000d18c	add	x12, x9, x11, lsr #32
000000000000d190	lsr	x9, x12, #32
000000000000d194	stp	w11, w12, [x10], #0x8
000000000000d198	subs	x8, x8, #0x1
000000000000d19c	b.ne	0xd180
000000000000d1a0	mov	x10, #0x0
000000000000d1a4	add	w8, w22, #0x1
000000000000d1a8	cmp	w8, #0x1
000000000000d1ac	mov	w14, #0x1
000000000000d1b0	csinc	w9, w14, w22, le
000000000000d1b4	add	x11, sp, #0x1f0
000000000000d1b8	ldr	x15, [sp, #0x20]
000000000000d1bc	ldr	w16, [sp, #0x34]
000000000000d1c0	ldp	w12, w13, [x11]
000000000000d1c4	madd	x12, x12, x28, x10
000000000000d1c8	mul	x10, x13, x28
000000000000d1cc	add	x13, x10, x12, lsr #32
000000000000d1d0	lsr	x10, x13, #32
000000000000d1d4	stp	w12, w13, [x11], #0x8
000000000000d1d8	subs	x9, x9, #0x1
000000000000d1dc	b.ne	0xd1c0
000000000000d1e0	mov	x11, #0x0
000000000000d1e4	add	w9, w23, #0x1
000000000000d1e8	cmp	w9, #0x1
000000000000d1ec	csinc	w10, w14, w23, le
000000000000d1f0	add	x12, sp, #0x140
000000000000d1f4	ldp	w13, w14, [x12]
000000000000d1f8	madd	x13, x13, x28, x11
000000000000d1fc	mul	x11, x14, x28
000000000000d200	add	x14, x11, x13, lsr #32
000000000000d204	lsr	x11, x14, #32
000000000000d208	stp	w13, w14, [x12], #0x8
000000000000d20c	subs	x10, x10, #0x1
000000000000d210	b.ne	0xd1f4
000000000000d214	cmp	w1, #0x1
000000000000d218	csinc	w10, w1, wzr, lt
000000000000d21c	mov	w14, #-0x1
000000000000d220	add	x11, x14, w1, uxtw
000000000000d224	add	w21, w21, #0x2
000000000000d228	sub	x13, x29, #0x100
000000000000d22c	sub	w21, w21, #0x1
000000000000d230	cmp	w21, #0x2
000000000000d234	b.lt	0xd248
000000000000d238	ldr	x12, [x13, w11, uxtw #3]
000000000000d23c	sub	x11, x11, #0x1
000000000000d240	cbz	x12, 0xd22c
000000000000d244	b	0xd24c
000000000000d248	mov	x21, x10
000000000000d24c	cmp	w8, #0x1
000000000000d250	csinc	w10, w8, wzr, lt
000000000000d254	add	x8, x14, w8, uxtw
000000000000d258	add	w22, w22, #0x2
000000000000d25c	add	x12, sp, #0x1f0
000000000000d260	sub	w22, w22, #0x1
000000000000d264	cmp	w22, #0x2
000000000000d268	b.lt	0xd27c
000000000000d26c	ldr	x11, [x12, w8, uxtw #3]
000000000000d270	sub	x8, x8, #0x1
000000000000d274	cbz	x11, 0xd260
000000000000d278	b	0xd280
000000000000d27c	mov	x22, x10
000000000000d280	cmp	w9, #0x1
000000000000d284	csinc	w8, w9, wzr, lt
000000000000d288	add	x9, x14, w9, uxtw
000000000000d28c	add	w23, w23, #0x2
000000000000d290	sub	w23, w23, #0x1
000000000000d294	cmp	w23, #0x2
000000000000d298	b.lt	0xd2ac
000000000000d29c	ldr	x10, [x20, w9, uxtw #3]
000000000000d2a0	sub	x9, x9, #0x1
000000000000d2a4	cbz	x10, 0xd290
000000000000d2a8	b	0xd2b0
000000000000d2ac	mov	x23, x8
000000000000d2b0	ldr	w8, [x15, #0x8]
000000000000d2b4	ldr	x9, [sp, #0x38]
000000000000d2b8	cmp	x9, x8
000000000000d2bc	b.hs	0xd404
000000000000d2c0	ldr	xzr, [x15]
000000000000d2c4	ldr	x8, [sp, #0x18]
000000000000d2c8	str	w16, [x8, x9, lsl #2]
000000000000d2cc	add	x8, x9, #0x1
000000000000d2d0	str	x8, [sp, #0x38]
000000000000d2d4	b	0xcf0c
000000000000d2d8	cmp	w1, #0x1
000000000000d2dc	b.le	0xd318
000000000000d2e0	mov	w8, #-0x2
000000000000d2e4	add	x8, x8, w1, sxtw
000000000000d2e8	sub	x9, x29, #0x100
000000000000d2ec	add	x10, x9, w1, sxtw #3
000000000000d2f0	sub	x10, x10, #0x8
000000000000d2f4	add	x11, x1, #0x1
000000000000d2f8	ldr	x12, [x10]
000000000000d2fc	ldr	x13, [x9, w8, uxtw #3]
000000000000d300	extr	x12, x12, x13, #0x3f
000000000000d304	str	x12, [x10], #-0x8
000000000000d308	sub	x8, x8, #0x1
000000000000d30c	sub	x11, x11, #0x1
000000000000d310	cmp	x11, #0x2
000000000000d314	b.gt	0xd2f8
000000000000d318	ldur	x8, [x29, #-0x100]
000000000000d31c	lsl	x8, x8, #1
000000000000d320	stur	x8, [x29, #-0x100]
000000000000d324	ldr	x19, [sp, #0x10]
000000000000d328	ldr	w20, [sp, #0xc]
000000000000d32c	tbz	w0, #0x1f, 0xd348
000000000000d330	cmp	w26, #0x1
000000000000d334	b.ge	0xd348
000000000000d338	ldr	x9, [sp, #0x20]
000000000000d33c	ldr	x10, [sp, #0x38]
000000000000d340	ldr	w11, [sp, #0x34]
000000000000d344	b	0xd384
000000000000d348	cmp	w26, #0x1
000000000000d34c	b.lt	0xd360
000000000000d350	tbnz	w0, #0x1f, 0xd360
000000000000d354	ldr	w11, [sp, #0x34]
000000000000d358	add	w11, w11, #0x1
000000000000d35c	b	0xd37c
000000000000d360	sub	x0, x29, #0x100
000000000000d364	add	x2, sp, #0x2a0
000000000000d368	mov	x3, x27
000000000000d36c	bl	_compareHighPrecision
000000000000d370	mvn	w8, w0
000000000000d374	ldr	w11, [sp, #0x34]
000000000000d378	add	w11, w11, w8, lsr #31
000000000000d37c	ldr	x9, [sp, #0x20]
000000000000d380	ldr	x10, [sp, #0x38]
000000000000d384	ldr	w8, [x9, #0x8]
000000000000d388	cmp	w8, w10
000000000000d38c	b.ls	0xd404
000000000000d390	ldr	xzr, [x9]
000000000000d394	ldr	x8, [sp, #0x18]
000000000000d398	str	w11, [x8, w10, uxtw #2]
000000000000d39c	ldr	w9, [sp, #0x58]
000000000000d3a0	cbz	w9, 0xd404
000000000000d3a4	add	w8, w10, #0x1
000000000000d3a8	ldr	x10, [sp, #0x50]
000000000000d3ac	str	w8, [sp, #0x60]
000000000000d3b0	cmp	w9, #0x1
000000000000d3b4	b.eq	0xd404
000000000000d3b8	ldr	x10, [sp, #0x50]
000000000000d3bc	str	wzr, [sp, #0x64]
000000000000d3c0	cmp	w9, #0x2
000000000000d3c4	b.ls	0xd404
000000000000d3c8	ldr	x9, [sp, #0x50]
000000000000d3cc	str	w20, [sp, #0x68]
000000000000d3d0	stp	w8, wzr, [x19, #0x10]
000000000000d3d4	str	w20, [x19, #0x18]
000000000000d3d8	ldr	x8, [sp, #0x78]
000000000000d3dc	ldr	x9, [sp]
000000000000d3e0	str	x8, [x9, #0x110]
000000000000d3e4	add	sp, sp, #0x400
000000000000d3e8	ldp	x29, x30, [sp, #0x50]
000000000000d3ec	ldp	x20, x19, [sp, #0x40]
000000000000d3f0	ldp	x22, x21, [sp, #0x30]
000000000000d3f4	ldp	x24, x23, [sp, #0x20]
000000000000d3f8	ldp	x26, x25, [sp, #0x10]
000000000000d3fc	ldp	x28, x27, [sp], #0x60
000000000000d400	ret
000000000000d404	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.native.internal.NumberConverter.longDigitGenerator#internal:
000000000000d408	sub	sp, sp, #0x130
000000000000d40c	stp	x28, x27, [sp, #0xd0]
000000000000d410	stp	x26, x25, [sp, #0xe0]
000000000000d414	stp	x24, x23, [sp, #0xf0]
000000000000d418	stp	x22, x21, [sp, #0x100]
000000000000d41c	stp	x20, x19, [sp, #0x110]
000000000000d420	stp	x29, x30, [sp, #0x120]
000000000000d424	add	x29, sp, #0x120
000000000000d428	mov	x23, x4
000000000000d42c	mov	x24, x3
000000000000d430	mov	x21, x2
000000000000d434	mov	x25, x1
000000000000d438	mov	x19, x0
000000000000d43c	movi.16b	v0, #0x0
000000000000d440	stp	q0, q0, [sp, #0x60]
000000000000d444	str	xzr, [sp, #0xc0]
000000000000d448	stp	q0, q0, [sp, #0xa0]
000000000000d44c	stp	q0, q0, [sp, #0x80]
000000000000d450	adr	x8, #0x47340
000000000000d454	nop
000000000000d458	orr	x8, x8, #0x3
000000000000d45c	str	x8, [sp, #0x30]
000000000000d460	mov	w8, #0x4
000000000000d464	str	w8, [sp, #0x38]
000000000000d468	stp	q0, q0, [sp, #0x40]
000000000000d46c	adrp	x0, 91 ; 0x68000
000000000000d470	add	x0, x0, #0xa00
000000000000d474	ldr	x8, [x0]
000000000000d478	blr	x8
000000000000d47c	ldr	x26, [x0]
000000000000d480	ldr	x8, [x26, #0x110]
000000000000d484	add	x9, sp, #0x60
000000000000d488	str	x9, [x26, #0x110]
000000000000d48c	mov	x9, #0xd00000000
000000000000d490	stp	x8, x9, [sp, #0x68]
000000000000d494	adr	x27, #0x753af
000000000000d498	nop
000000000000d49c	ldarb	w8, [x27]
000000000000d4a0	tbz	w8, #0x0, 0xd4b0
000000000000d4a4	mov	x20, x5
000000000000d4a8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000d4ac	mov	x5, x20
000000000000d4b0	eor	w8, w23, #0x1
000000000000d4b4	orr	w8, w8, w24
000000000000d4b8	cmp	w8, #0x0
000000000000d4bc	mov	w8, #0x1
000000000000d4c0	cinc	w9, w8, eq
000000000000d4c4	cinc	x10, x8, eq
000000000000d4c8	sub	w9, w9, w21
000000000000d4cc	lsl	x9, x8, x9
000000000000d4d0	lsl	x11, x8, x21
000000000000d4d4	cmp	w23, #0x0
000000000000d4d8	mov	w12, #0x2
000000000000d4dc	mov	w13, #0x4
000000000000d4e0	csel	x12, x13, x12, ne
000000000000d4e4	cinc	w13, w8, ne
000000000000d4e8	add	w13, w13, w21
000000000000d4ec	and	w13, w13, #0x3f
000000000000d4f0	tst	w21, #0x80000000
000000000000d4f4	csel	x24, x8, x11, ne
000000000000d4f8	csel	x28, x9, x12, ne
000000000000d4fc	csel	x20, x10, x13, ne
000000000000d500	adr	x22, #0x753b0
000000000000d504	nop
000000000000d508	ldar	x23, [x22]
000000000000d50c	cmp	x23, #0x2
000000000000d510	b.hs	0xd70c
000000000000d514	ldp	x8, x9, [x26, #0x120]
000000000000d518	cmp	x8, x9
000000000000d51c	b.eq	0xd53c
000000000000d520	mov	x10, x9
000000000000d524	ldr	x11, [x10, #-0x10]!
000000000000d528	cmp	x11, x22
000000000000d52c	b.eq	0xd608
000000000000d530	mov	x9, x10
000000000000d534	cmp	x10, x8
000000000000d538	b.ne	0xd524
000000000000d53c	add	x8, x26, #0x120
000000000000d540	stp	x8, x25, [sp, #0x20]
000000000000d544	add	x0, x26, #0x138
000000000000d548	mov	w9, #0x1
000000000000d54c	ldaxr	w8, [x0]
000000000000d550	stlxr	w10, w9, [x0]
000000000000d554	cbnz	w10, 0xd54c
000000000000d558	b	0xd568
000000000000d55c	mov	w25, #0x1
000000000000d560	stlxr	w9, x25, [x22]
000000000000d564	cbz	w9, 0xd578
000000000000d568	ldaxr	x23, [x22]
000000000000d56c	cbz	x23, 0xd55c
000000000000d570	mov	w25, #0x0
000000000000d574	clrex
000000000000d578	cmp	x23, #0x1
000000000000d57c	b.eq	0xd568
000000000000d580	cbz	x26, 0xd5b0
000000000000d584	ldaxr	w9, [x0]
000000000000d588	stlxr	w10, w8, [x0]
000000000000d58c	cbnz	w10, 0xd584
000000000000d590	cbnz	w8, 0xd5b0
000000000000d594	cmp	w9, #0x1
000000000000d598	b.ne	0xd5b0
000000000000d59c	ldarb	w8, [x27]
000000000000d5a0	tbz	w8, #0x0, 0xd5b0
000000000000d5a4	str	w5, [sp, #0x18]
000000000000d5a8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000000d5ac	ldr	w5, [sp, #0x18]
000000000000d5b0	tbz	w25, #0x0, 0xd5fc
000000000000d5b4	str	w5, [sp, #0x18]
000000000000d5b8	ldr	x8, [x26, #0x118]
000000000000d5bc	add	x0, x8, #0x70
000000000000d5c0	mov	w1, #0x20
000000000000d5c4	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000d5c8	mov	x23, x0
000000000000d5cc	adr	x8, #0x48c94
000000000000d5d0	nop
000000000000d5d4	str	x8, [x23, #0x10]!
000000000000d5d8	stur	xzr, [x23, #-0x8]
000000000000d5dc	str	x23, [sp, #0x78]
000000000000d5e0	ldp	x9, x8, [x26, #0x128]
000000000000d5e4	cmp	x9, x8
000000000000d5e8	b.hs	0xd614
000000000000d5ec	stp	x22, x23, [x9]
000000000000d5f0	add	x8, x9, #0x10
000000000000d5f4	str	x8, [x26, #0x128]
000000000000d5f8	b	0xd6b4
000000000000d5fc	str	x23, [sp, #0x78]
000000000000d600	ldr	x25, [sp, #0x28]
000000000000d604	b	0xd70c
000000000000d608	ldur	x23, [x9, #-0x8]
000000000000d60c	str	x23, [sp, #0x78]
000000000000d610	b	0xd70c
000000000000d614	ldr	x10, [sp, #0x20]
000000000000d618	ldr	x10, [x10]
000000000000d61c	sub	x9, x9, x10
000000000000d620	asr	x9, x9, #4
000000000000d624	str	x9, [sp, #0x10]
000000000000d628	add	x9, x9, #0x1
000000000000d62c	lsr	x11, x9, #60
000000000000d630	cbnz	x11, 0xde10
000000000000d634	sub	x8, x8, x10
000000000000d638	asr	x10, x8, #3
000000000000d63c	cmp	x10, x9
000000000000d640	csel	x9, x9, x10, lo
000000000000d644	mov	x10, #0x7ffffffffffffff
000000000000d648	cmp	x10, x8, asr #4
000000000000d64c	mov	x8, #0xfffffffffffffff
000000000000d650	csel	x25, x9, x8, hi
000000000000d654	mov	x0, x25
000000000000d658	mov	w1, #0x10
000000000000d65c	bl	0x4db20 ; symbol stub for: _calloc
000000000000d660	ldr	x8, [sp, #0x10]
000000000000d664	add	x8, x0, x8, lsl #4
000000000000d668	add	x10, x0, x25, lsl #4
000000000000d66c	stp	x22, x23, [x8]
000000000000d670	add	x11, x8, #0x10
000000000000d674	ldp	x1, x9, [x26, #0x120]
000000000000d678	sub	x2, x9, x1
000000000000d67c	sub	x25, x8, x2
000000000000d680	cmp	x2, #0x1
000000000000d684	b.lt	0xd6a0
000000000000d688	mov	x0, x25
000000000000d68c	stp	x11, x10, [sp, #0x8]
000000000000d690	bl	0x4dbec ; symbol stub for: _memcpy
000000000000d694	ldp	x11, x10, [sp, #0x8]
000000000000d698	ldr	x8, [sp, #0x20]
000000000000d69c	ldr	x1, [x8]
000000000000d6a0	stp	x25, x11, [x26, #0x120]
000000000000d6a4	str	x10, [x26, #0x130]
000000000000d6a8	cbz	x1, 0xd6b4
000000000000d6ac	mov	x0, x1
000000000000d6b0	bl	0x4dba4 ; symbol stub for: _free
000000000000d6b4	mov	x0, x23
000000000000d6b8	bl	"_kfun:kotlin.native.internal.NumberConverter.Companion#<init>(){}"
000000000000d6bc	ldr	x25, [sp, #0x28]
000000000000d6c0	mov	w0, #0x1
000000000000d6c4	mov	w1, #0x28
000000000000d6c8	bl	0x4db20 ; symbol stub for: _calloc
000000000000d6cc	mov	x8, x26
000000000000d6d0	ldr	x9, [x8, #0x18]!
000000000000d6d4	sub	x10, x8, #0x8
000000000000d6d8	stp	x22, x10, [x0, #0x10]
000000000000d6dc	stp	x9, x8, [x0]
000000000000d6e0	str	x0, [x9, #0x8]
000000000000d6e4	str	x0, [x8]
000000000000d6e8	ldr	x9, [x8, #0x10]
000000000000d6ec	add	x9, x9, #0x1
000000000000d6f0	str	x9, [x8, #0x10]
000000000000d6f4	str	x0, [x0, #0x20]
000000000000d6f8	stlr	x23, [x22]
000000000000d6fc	ldr	x9, [x8, #0x110]
000000000000d700	sub	x9, x9, #0x10
000000000000d704	str	x9, [x8, #0x110]
000000000000d708	ldr	w5, [sp, #0x18]
000000000000d70c	lsl	x25, x25, x20
000000000000d710	add	w8, w21, w5
000000000000d714	sub	w8, w8, #0x1
000000000000d718	ldr	d0, [x23, #0x8]
000000000000d71c	scvtf	d1, w8
000000000000d720	fmul	d0, d0, d1
000000000000d724	nop
000000000000d728	ldr	d1, 0x4e558
000000000000d72c	fadd	d0, d0, d1
000000000000d730	frintp	d0, d0
000000000000d734	fcmp	d0, d0
000000000000d738	b.vs	0xdbc8
000000000000d73c	mov	x8, #0xffffffc00000
000000000000d740	movk	x8, #0x41df, lsl #48
000000000000d744	fmov	d1, x8
000000000000d748	fcmp	d0, d1
000000000000d74c	b.ge	0xd77c
000000000000d750	mov	x8, #-0x3e20000000000000
000000000000d754	fmov	d1, x8
000000000000d758	fcmp	d0, d1
000000000000d75c	b.ls	0xd868
000000000000d760	fcvtzs	w21, d0
000000000000d764	cmp	w21, #0x1
000000000000d768	b.lt	0xd968
000000000000d76c	ldar	x20, [x22]
000000000000d770	cmp	x20, #0x2
000000000000d774	b.lo	0xd78c
000000000000d778	b	0xda60
000000000000d77c	mov	w21, #0x7fffffff
000000000000d780	ldar	x20, [x22]
000000000000d784	cmp	x20, #0x2
000000000000d788	b.hs	0xda60
000000000000d78c	ldp	x8, x9, [x26, #0x120]
000000000000d790	cmp	x8, x9
000000000000d794	b.eq	0xd7b4
000000000000d798	mov	x10, x9
000000000000d79c	ldr	x11, [x10, #-0x10]!
000000000000d7a0	cmp	x11, x22
000000000000d7a4	b.eq	0xd95c
000000000000d7a8	mov	x9, x10
000000000000d7ac	cmp	x10, x8
000000000000d7b0	b.ne	0xd79c
000000000000d7b4	add	x8, x26, #0x120
000000000000d7b8	str	x8, [sp, #0x28]
000000000000d7bc	add	x0, x26, #0x138
000000000000d7c0	mov	w9, #0x1
000000000000d7c4	ldaxr	w8, [x0]
000000000000d7c8	stlxr	w10, w9, [x0]
000000000000d7cc	cbnz	w10, 0xd7c4
000000000000d7d0	b	0xd7e0
000000000000d7d4	mov	w23, #0x1
000000000000d7d8	stlxr	w9, x23, [x22]
000000000000d7dc	cbz	w9, 0xd7f0
000000000000d7e0	ldaxr	x20, [x22]
000000000000d7e4	cbz	x20, 0xd7d4
000000000000d7e8	mov	w23, #0x0
000000000000d7ec	clrex
000000000000d7f0	cmp	x20, #0x1
000000000000d7f4	b.eq	0xd7e0
000000000000d7f8	cbz	x26, 0xd820
000000000000d7fc	ldaxr	w9, [x0]
000000000000d800	stlxr	w10, w8, [x0]
000000000000d804	cbnz	w10, 0xd7fc
000000000000d808	cbnz	w8, 0xd820
000000000000d80c	cmp	w9, #0x1
000000000000d810	b.ne	0xd820
000000000000d814	ldarb	w8, [x27]
000000000000d818	tbz	w8, #0x0, 0xd820
000000000000d81c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000000d820	tbz	w23, #0x0, 0xd954
000000000000d824	ldr	x8, [x26, #0x118]
000000000000d828	add	x0, x8, #0x70
000000000000d82c	mov	w1, #0x20
000000000000d830	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000d834	mov	x20, x0
000000000000d838	adr	x8, #0x48a28
000000000000d83c	nop
000000000000d840	str	x8, [x20, #0x10]!
000000000000d844	stur	xzr, [x20, #-0x8]
000000000000d848	str	x20, [sp, #0x80]
000000000000d84c	ldp	x9, x8, [x26, #0x128]
000000000000d850	cmp	x9, x8
000000000000d854	b.hs	0xd970
000000000000d858	stp	x22, x20, [x9]
000000000000d85c	add	x8, x9, #0x10
000000000000d860	str	x8, [x26, #0x128]
000000000000d864	b	0xda10
000000000000d868	mov	w21, #-0x80000000
000000000000d86c	ldar	x20, [x22]
000000000000d870	cmp	x20, #0x2
000000000000d874	b.hs	0xdb90
000000000000d878	ldp	x8, x9, [x26, #0x120]
000000000000d87c	cmp	x8, x9
000000000000d880	b.eq	0xd8a0
000000000000d884	mov	x10, x9
000000000000d888	ldr	x11, [x10, #-0x10]!
000000000000d88c	cmp	x11, x22
000000000000d890	b.eq	0xda94
000000000000d894	mov	x9, x10
000000000000d898	cmp	x10, x8
000000000000d89c	b.ne	0xd888
000000000000d8a0	add	x8, x26, #0x120
000000000000d8a4	str	x8, [sp, #0x28]
000000000000d8a8	add	x0, x26, #0x138
000000000000d8ac	mov	w9, #0x1
000000000000d8b0	ldaxr	w8, [x0]
000000000000d8b4	stlxr	w10, w9, [x0]
000000000000d8b8	cbnz	w10, 0xd8b0
000000000000d8bc	b	0xd8cc
000000000000d8c0	mov	w23, #0x1
000000000000d8c4	stlxr	w9, x23, [x22]
000000000000d8c8	cbz	w9, 0xd8dc
000000000000d8cc	ldaxr	x20, [x22]
000000000000d8d0	cbz	x20, 0xd8c0
000000000000d8d4	mov	w23, #0x0
000000000000d8d8	clrex
000000000000d8dc	cmp	x20, #0x1
000000000000d8e0	b.eq	0xd8cc
000000000000d8e4	cbz	x26, 0xd90c
000000000000d8e8	ldaxr	w9, [x0]
000000000000d8ec	stlxr	w10, w8, [x0]
000000000000d8f0	cbnz	w10, 0xd8e8
000000000000d8f4	cbnz	w8, 0xd90c
000000000000d8f8	cmp	w9, #0x1
000000000000d8fc	b.ne	0xd90c
000000000000d900	ldarb	w8, [x27]
000000000000d904	tbz	w8, #0x0, 0xd90c
000000000000d908	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000000d90c	tbz	w23, #0x0, 0xda8c
000000000000d910	ldr	x8, [x26, #0x118]
000000000000d914	add	x0, x8, #0x70
000000000000d918	mov	w1, #0x20
000000000000d91c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000d920	mov	x20, x0
000000000000d924	adr	x8, #0x4893c
000000000000d928	nop
000000000000d92c	str	x8, [x20, #0x10]!
000000000000d930	stur	xzr, [x20, #-0x8]
000000000000d934	str	x20, [sp, #0x88]
000000000000d938	ldp	x9, x8, [x26, #0x128]
000000000000d93c	cmp	x9, x8
000000000000d940	b.hs	0xdaa0
000000000000d944	stp	x22, x20, [x9]
000000000000d948	add	x8, x9, #0x10
000000000000d94c	str	x8, [x26, #0x128]
000000000000d950	b	0xdb40
000000000000d954	str	x20, [sp, #0x80]
000000000000d958	b	0xda60
000000000000d95c	ldur	x20, [x9, #-0x8]
000000000000d960	str	x20, [sp, #0x80]
000000000000d964	b	0xda60
000000000000d968	tbz	w21, #0x1f, 0xdbb4
000000000000d96c	b	0xd86c
000000000000d970	ldr	x10, [sp, #0x28]
000000000000d974	ldr	x10, [x10]
000000000000d978	sub	x9, x9, x10
000000000000d97c	asr	x9, x9, #4
000000000000d980	str	x9, [sp, #0x20]
000000000000d984	add	x9, x9, #0x1
000000000000d988	lsr	x11, x9, #60
000000000000d98c	cbnz	x11, 0xde18
000000000000d990	sub	x8, x8, x10
000000000000d994	asr	x10, x8, #3
000000000000d998	cmp	x10, x9
000000000000d99c	csel	x9, x9, x10, lo
000000000000d9a0	mov	x10, #0x7ffffffffffffff
000000000000d9a4	cmp	x10, x8, asr #4
000000000000d9a8	mov	x8, #0xfffffffffffffff
000000000000d9ac	csel	x23, x9, x8, hi
000000000000d9b0	mov	x0, x23
000000000000d9b4	mov	w1, #0x10
000000000000d9b8	bl	0x4db20 ; symbol stub for: _calloc
000000000000d9bc	ldr	x8, [sp, #0x20]
000000000000d9c0	add	x8, x0, x8, lsl #4
000000000000d9c4	add	x10, x0, x23, lsl #4
000000000000d9c8	stp	x22, x20, [x8]
000000000000d9cc	add	x11, x8, #0x10
000000000000d9d0	ldp	x1, x9, [x26, #0x120]
000000000000d9d4	sub	x2, x9, x1
000000000000d9d8	sub	x23, x8, x2
000000000000d9dc	cmp	x2, #0x1
000000000000d9e0	b.lt	0xd9fc
000000000000d9e4	mov	x0, x23
000000000000d9e8	stp	x11, x10, [sp, #0x18]
000000000000d9ec	bl	0x4dbec ; symbol stub for: _memcpy
000000000000d9f0	ldp	x11, x10, [sp, #0x18]
000000000000d9f4	ldr	x8, [sp, #0x28]
000000000000d9f8	ldr	x1, [x8]
000000000000d9fc	stp	x23, x11, [x26, #0x120]
000000000000da00	str	x10, [x26, #0x130]
000000000000da04	cbz	x1, 0xda10
000000000000da08	mov	x0, x1
000000000000da0c	bl	0x4dba4 ; symbol stub for: _free
000000000000da10	mov	x0, x20
000000000000da14	bl	"_kfun:kotlin.native.internal.NumberConverter.Companion#<init>(){}"
000000000000da18	mov	w0, #0x1
000000000000da1c	mov	w1, #0x28
000000000000da20	bl	0x4db20 ; symbol stub for: _calloc
000000000000da24	mov	x8, x26
000000000000da28	ldr	x9, [x8, #0x18]!
000000000000da2c	sub	x10, x8, #0x8
000000000000da30	stp	x22, x10, [x0, #0x10]
000000000000da34	stp	x9, x8, [x0]
000000000000da38	str	x0, [x9, #0x8]
000000000000da3c	str	x0, [x8]
000000000000da40	ldr	x9, [x8, #0x10]
000000000000da44	add	x9, x9, #0x1
000000000000da48	str	x9, [x8, #0x10]
000000000000da4c	str	x0, [x0, #0x20]
000000000000da50	stlr	x20, [x22]
000000000000da54	ldr	x9, [x8, #0x110]
000000000000da58	sub	x9, x9, #0x10
000000000000da5c	str	x9, [x8, #0x110]
000000000000da60	ldr	x8, [x20, #0x10]
000000000000da64	ldr	w9, [x8, #0x8]
000000000000da68	cmp	w9, w21
000000000000da6c	b.ls	0xde0c
000000000000da70	add	x8, x8, w21, sxtw #3
000000000000da74	ldr	x8, [x8, #0x10]
000000000000da78	mul	x28, x28, x8
000000000000da7c	add	x8, x25, x24
000000000000da80	cmp	x8, x28
000000000000da84	b.gt	0xdbc0
000000000000da88	b	0xdbd8
000000000000da8c	str	x20, [sp, #0x88]
000000000000da90	b	0xdb90
000000000000da94	ldur	x20, [x9, #-0x8]
000000000000da98	str	x20, [sp, #0x88]
000000000000da9c	b	0xdb90
000000000000daa0	ldr	x10, [sp, #0x28]
000000000000daa4	ldr	x10, [x10]
000000000000daa8	sub	x9, x9, x10
000000000000daac	asr	x9, x9, #4
000000000000dab0	str	x9, [sp, #0x20]
000000000000dab4	add	x9, x9, #0x1
000000000000dab8	lsr	x11, x9, #60
000000000000dabc	cbnz	x11, 0xde18
000000000000dac0	sub	x8, x8, x10
000000000000dac4	asr	x10, x8, #3
000000000000dac8	cmp	x10, x9
000000000000dacc	csel	x9, x9, x10, lo
000000000000dad0	mov	x10, #0x7ffffffffffffff
000000000000dad4	cmp	x10, x8, asr #4
000000000000dad8	mov	x8, #0xfffffffffffffff
000000000000dadc	csel	x23, x9, x8, hi
000000000000dae0	mov	x0, x23
000000000000dae4	mov	w1, #0x10
000000000000dae8	bl	0x4db20 ; symbol stub for: _calloc
000000000000daec	ldr	x8, [sp, #0x20]
000000000000daf0	add	x8, x0, x8, lsl #4
000000000000daf4	add	x10, x0, x23, lsl #4
000000000000daf8	stp	x22, x20, [x8]
000000000000dafc	add	x11, x8, #0x10
000000000000db00	ldp	x1, x9, [x26, #0x120]
000000000000db04	sub	x2, x9, x1
000000000000db08	sub	x23, x8, x2
000000000000db0c	cmp	x2, #0x1
000000000000db10	b.lt	0xdb2c
000000000000db14	mov	x0, x23
000000000000db18	stp	x11, x10, [sp, #0x18]
000000000000db1c	bl	0x4dbec ; symbol stub for: _memcpy
000000000000db20	ldp	x11, x10, [sp, #0x18]
000000000000db24	ldr	x8, [sp, #0x28]
000000000000db28	ldr	x1, [x8]
000000000000db2c	stp	x23, x11, [x26, #0x120]
000000000000db30	str	x10, [x26, #0x130]
000000000000db34	cbz	x1, 0xdb40
000000000000db38	mov	x0, x1
000000000000db3c	bl	0x4dba4 ; symbol stub for: _free
000000000000db40	mov	x0, x20
000000000000db44	bl	"_kfun:kotlin.native.internal.NumberConverter.Companion#<init>(){}"
000000000000db48	mov	w0, #0x1
000000000000db4c	mov	w1, #0x28
000000000000db50	bl	0x4db20 ; symbol stub for: _calloc
000000000000db54	mov	x8, x26
000000000000db58	ldr	x9, [x8, #0x18]!
000000000000db5c	sub	x10, x8, #0x8
000000000000db60	stp	x22, x10, [x0, #0x10]
000000000000db64	stp	x9, x8, [x0]
000000000000db68	str	x0, [x9, #0x8]
000000000000db6c	str	x0, [x8]
000000000000db70	ldr	x9, [x8, #0x10]
000000000000db74	add	x9, x9, #0x1
000000000000db78	str	x9, [x8, #0x10]
000000000000db7c	str	x0, [x0, #0x20]
000000000000db80	stlr	x20, [x22]
000000000000db84	ldr	x9, [x8, #0x110]
000000000000db88	sub	x9, x9, #0x10
000000000000db8c	str	x9, [x8, #0x110]
000000000000db90	ldr	x8, [x20, #0x10]
000000000000db94	neg	w9, w21
000000000000db98	ldr	w10, [x8, #0x8]
000000000000db9c	cmp	w10, w9
000000000000dba0	b.ls	0xde0c
000000000000dba4	add	x8, x8, w9, sxtw #3
000000000000dba8	ldr	x8, [x8, #0x10]
000000000000dbac	mul	x25, x25, x8
000000000000dbb0	mul	x24, x24, x8
000000000000dbb4	add	x8, x25, x24
000000000000dbb8	cmp	x8, x28
000000000000dbbc	b.le	0xdbd8
000000000000dbc0	str	w21, [x19, #0x18]
000000000000dbc4	b	0xdbf0
000000000000dbc8	mov	w21, #0x0
000000000000dbcc	add	x8, x25, x24
000000000000dbd0	cmp	x8, x28
000000000000dbd4	b.gt	0xdbc0
000000000000dbd8	sub	w8, w21, #0x1
000000000000dbdc	str	w8, [x19, #0x18]
000000000000dbe0	add	x8, x25, x25, lsl #2
000000000000dbe4	lsl	x25, x8, #1
000000000000dbe8	add	x8, x24, x24, lsl #2
000000000000dbec	lsl	x24, x8, #1
000000000000dbf0	str	xzr, [x19, #0x10]
000000000000dbf4	lsl	x8, x28, #1
000000000000dbf8	lsl	x9, x28, #2
000000000000dbfc	lsl	x10, x28, #3
000000000000dc00	add	x11, sp, #0x30
000000000000dc04	stp	x11, x11, [sp, #0x90]
000000000000dc08	stp	x11, x11, [sp, #0xa0]
000000000000dc0c	ldr	x12, [sp, #0x30]
000000000000dc10	stp	x28, x8, [sp, #0x40]
000000000000dc14	ldr	x12, [sp, #0x30]
000000000000dc18	stp	x11, x11, [sp, #0xb0]
000000000000dc1c	ldr	x8, [sp, #0x30]
000000000000dc20	stp	x9, x10, [sp, #0x50]
000000000000dc24	ldr	x8, [sp, #0x30]
000000000000dc28	str	x11, [sp, #0xc0]
000000000000dc2c	ldarb	w8, [x27]
000000000000dc30	tbnz	w8, #0x0, 0xdc4c
000000000000dc34	ldarb	w8, [x27]
000000000000dc38	tbnz	w8, #0x0, 0xdc58
000000000000dc3c	ldr	w8, [sp, #0x38]
000000000000dc40	cmp	w8, #0x3
000000000000dc44	b.hi	0xdc68
000000000000dc48	b	0xde0c
000000000000dc4c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000dc50	ldarb	w8, [x27]
000000000000dc54	tbz	w8, #0x0, 0xdc3c
000000000000dc58	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000dc5c	ldr	w8, [sp, #0x38]
000000000000dc60	cmp	w8, #0x3
000000000000dc64	b.ls	0xde0c
000000000000dc68	ldr	x8, [sp, #0x58]
000000000000dc6c	sub	x21, x25, x8
000000000000dc70	cmp	x21, #0x0
000000000000dc74	csel	x20, x21, x25, ge
000000000000dc78	ldarb	w8, [x27]
000000000000dc7c	tbz	w8, #0x0, 0xdc84
000000000000dc80	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000dc84	ldr	w8, [sp, #0x38]
000000000000dc88	cmp	w8, #0x3
000000000000dc8c	b.lo	0xde0c
000000000000dc90	lsr	x8, x21, #60
000000000000dc94	mvn	w8, w8
000000000000dc98	and	w8, w8, #0x8
000000000000dc9c	ldr	x9, [sp, #0x50]
000000000000dca0	sub	x9, x20, x9
000000000000dca4	orr	w10, w8, #0x4
000000000000dca8	cmp	x9, #0x0
000000000000dcac	csel	w21, w10, w8, ge
000000000000dcb0	csel	x20, x9, x20, ge
000000000000dcb4	ldarb	w8, [x27]
000000000000dcb8	tbz	w8, #0x0, 0xdcc0
000000000000dcbc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000dcc0	ldr	w8, [sp, #0x38]
000000000000dcc4	cmp	w8, #0x2
000000000000dcc8	b.lo	0xde0c
000000000000dccc	ldr	x8, [sp, #0x48]
000000000000dcd0	sub	x8, x20, x8
000000000000dcd4	orr	w9, w21, #0x2
000000000000dcd8	cmp	x8, #0x0
000000000000dcdc	csel	w21, w9, w21, ge
000000000000dce0	csel	x20, x8, x20, ge
000000000000dce4	ldarb	w8, [x27]
000000000000dce8	tbz	w8, #0x0, 0xdcf0
000000000000dcec	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000dcf0	ldr	w8, [sp, #0x38]
000000000000dcf4	cbz	w8, 0xde0c
000000000000dcf8	ldr	x8, [sp, #0x40]
000000000000dcfc	sub	x9, x20, x8
000000000000dd00	lsr	x8, x9, #63
000000000000dd04	orr	w8, w21, w8
000000000000dd08	eor	w8, w8, #0x1
000000000000dd0c	cmp	x9, #0x0
000000000000dd10	csel	x11, x9, x20, ge
000000000000dd14	add	x12, x11, x24
000000000000dd18	cmp	x11, x24
000000000000dd1c	b.lt	0xdd70
000000000000dd20	ldr	x9, [x19, #0x8]
000000000000dd24	ldr	w10, [x19, #0x10]
000000000000dd28	add	w13, w10, #0x1
000000000000dd2c	str	w13, [x19, #0x10]
000000000000dd30	ldr	w13, [x9, #0x8]
000000000000dd34	cmp	x12, x28
000000000000dd38	b.gt	0xdda0
000000000000dd3c	cmp	w13, w10
000000000000dd40	b.ls	0xde0c
000000000000dd44	sxtw	x10, w10
000000000000dd48	add	x12, x24, x24, lsl #2
000000000000dd4c	lsl	x24, x12, #1
000000000000dd50	add	x11, x11, x11, lsl #2
000000000000dd54	ldr	xzr, [x9]
000000000000dd58	add	x9, x9, x10, lsl #2
000000000000dd5c	str	w8, [x9, #0x10]
000000000000dd60	lsl	x25, x11, #1
000000000000dd64	ldarb	w8, [x27]
000000000000dd68	tbnz	w8, #0x0, 0xdc4c
000000000000dd6c	b	0xdc34
000000000000dd70	cmp	x12, x28
000000000000dd74	b.le	0xddac
000000000000dd78	ldr	x9, [x19, #0x8]
000000000000dd7c	ldr	w10, [x19, #0x10]
000000000000dd80	add	w12, w10, #0x1
000000000000dd84	str	w12, [x19, #0x10]
000000000000dd88	ldr	w12, [x9, #0x8]
000000000000dd8c	cmp	x28, x11, lsl #1
000000000000dd90	b.le	0xddcc
000000000000dd94	cmp	w12, w10
000000000000dd98	b.hi	0xddd8
000000000000dd9c	b	0xde0c
000000000000dda0	cmp	w13, w10
000000000000dda4	b.hi	0xddd4
000000000000dda8	b	0xde0c
000000000000ddac	ldr	x9, [x19, #0x8]
000000000000ddb0	ldr	w10, [x19, #0x10]
000000000000ddb4	add	w11, w10, #0x1
000000000000ddb8	str	w11, [x19, #0x10]
000000000000ddbc	ldr	w11, [x9, #0x8]
000000000000ddc0	cmp	w11, w10
000000000000ddc4	b.hi	0xddd8
000000000000ddc8	b	0xde0c
000000000000ddcc	cmp	w12, w10
000000000000ddd0	b.ls	0xde0c
000000000000ddd4	add	w8, w8, #0x1
000000000000ddd8	ldr	xzr, [x9]
000000000000dddc	add	x9, x9, w10, sxtw #2
000000000000dde0	str	w8, [x9, #0x10]
000000000000dde4	ldr	x8, [sp, #0x68]
000000000000dde8	str	x8, [x26, #0x110]
000000000000ddec	ldp	x29, x30, [sp, #0x120]
000000000000ddf0	ldp	x20, x19, [sp, #0x110]
000000000000ddf4	ldp	x22, x21, [sp, #0x100]
000000000000ddf8	ldp	x24, x23, [sp, #0xf0]
000000000000ddfc	ldp	x26, x25, [sp, #0xe0]
000000000000de00	ldp	x28, x27, [sp, #0xd0]
000000000000de04	add	sp, sp, #0x130
000000000000de08	ret
000000000000de0c	bl	_ThrowArrayIndexOutOfBoundsException
000000000000de10	ldr	x0, [sp, #0x20]
000000000000de14	bl	0x4d8ec ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
000000000000de18	ldr	x0, [sp, #0x28]
000000000000de1c	bl	0x4d8ec ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
000000000000de20	bl	0x4da78 ; symbol stub for: ___cxa_begin_catch
000000000000de24	str	xzr, [sp, #0x88]
000000000000de28	stlr	xzr, [x22]
000000000000de2c	ldr	x8, [x26, #0x128]
000000000000de30	sub	x8, x8, #0x10
000000000000de34	str	x8, [x26, #0x128]
000000000000de38	bl	0x4daa8 ; symbol stub for: ___cxa_rethrow
000000000000de3c	b	0xde84
000000000000de40	b	0xde88
000000000000de44	bl	0x4da78 ; symbol stub for: ___cxa_begin_catch
000000000000de48	str	xzr, [sp, #0x80]
000000000000de4c	stlr	xzr, [x22]
000000000000de50	ldr	x8, [x26, #0x128]
000000000000de54	sub	x8, x8, #0x10
000000000000de58	str	x8, [x26, #0x128]
000000000000de5c	bl	0x4daa8 ; symbol stub for: ___cxa_rethrow
000000000000de60	b	0xde84
000000000000de64	b	0xde88
000000000000de68	bl	0x4da78 ; symbol stub for: ___cxa_begin_catch
000000000000de6c	str	xzr, [sp, #0x78]
000000000000de70	stlr	xzr, [x22]
000000000000de74	ldr	x8, [x26, #0x128]
000000000000de78	sub	x8, x8, #0x10
000000000000de7c	str	x8, [x26, #0x128]
000000000000de80	bl	0x4daa8 ; symbol stub for: ___cxa_rethrow
000000000000de84	brk	#0x1
000000000000de88	mov	x19, x0
000000000000de8c	bl	0x4da84 ; symbol stub for: ___cxa_end_catch
000000000000de90	mov	x0, x19
000000000000de94	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
_kfun:kotlin.native.internal.NumberConverter.Companion#<init>(){}:
000000000000de98	sub	sp, sp, #0x60
000000000000de9c	stp	x24, x23, [sp, #0x20]
000000000000dea0	stp	x22, x21, [sp, #0x30]
000000000000dea4	stp	x20, x19, [sp, #0x40]
000000000000dea8	stp	x29, x30, [sp, #0x50]
000000000000deac	add	x29, sp, #0x50
000000000000deb0	mov	x19, x0
000000000000deb4	movi.16b	v0, #0x0
000000000000deb8	stp	q0, q0, [sp]
000000000000debc	adrp	x0, 91 ; 0x68000
000000000000dec0	add	x0, x0, #0xa00
000000000000dec4	ldr	x8, [x0]
000000000000dec8	blr	x8
000000000000decc	ldr	x20, [x0]
000000000000ded0	ldr	x8, [x20, #0x110]
000000000000ded4	mov	x9, sp
000000000000ded8	str	x9, [x20, #0x110]
000000000000dedc	mov	x9, #0x400000000
000000000000dee0	stp	x8, x9, [sp, #0x8]
000000000000dee4	adr	x21, #0x7495f
000000000000dee8	nop
000000000000deec	ldarb	w8, [x21]
000000000000def0	tbz	w8, #0x0, 0xdef8
000000000000def4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000def8	mov	x8, #0x79fe
000000000000defc	movk	x8, #0x509f, lsl #16
000000000000df00	movk	x8, #0x4413, lsl #32
000000000000df04	movk	x8, #0x3fd3, lsl #48
000000000000df08	str	x8, [x19, #0x8]
000000000000df0c	ldr	x8, [x20, #0x118]
000000000000df10	add	x0, x8, #0x70
000000000000df14	mov	w1, #0xb8
000000000000df18	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000df1c	str	xzr, [x0, #0x18]
000000000000df20	str	xzr, [x0, #0x8]
000000000000df24	adr	x8, #0x4686c
000000000000df28	nop
000000000000df2c	mov	x9, x0
000000000000df30	str	x8, [x9, #0x10]!
000000000000df34	mov	w8, #0x14
000000000000df38	str	w8, [x0, #0x18]
000000000000df3c	str	x9, [sp, #0x18]
000000000000df40	str	x9, [x19, #0x10]
000000000000df44	cbz	w8, 0xdfcc
000000000000df48	ldr	xzr, [x0, #0x10]
000000000000df4c	mov	w8, #0x1
000000000000df50	str	x8, [x0, #0x20]
000000000000df54	ldr	x8, [x19, #0x10]
000000000000df58	ldr	w8, [x8, #0x8]
000000000000df5c	cmp	w8, #0x2
000000000000df60	b.lt	0xdfac
000000000000df64	mov	x22, #0x0
000000000000df68	sub	x23, x8, #0x1
000000000000df6c	ldarb	w8, [x21]
000000000000df70	tbz	w8, #0x0, 0xdf78
000000000000df74	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000df78	ldr	x8, [x19, #0x10]
000000000000df7c	ldr	w9, [x8, #0x8]
000000000000df80	cmp	x22, x9
000000000000df84	b.hs	0xdfcc
000000000000df88	add	x9, x8, x22, lsl #3
000000000000df8c	ldr	x10, [x9, #0x10]
000000000000df90	add	x10, x10, x10, lsl #2
000000000000df94	lsl	x10, x10, #1
000000000000df98	ldr	xzr, [x8]
000000000000df9c	str	x10, [x9, #0x18]
000000000000dfa0	add	x22, x22, #0x1
000000000000dfa4	cmp	x23, x22
000000000000dfa8	b.ne	0xdf6c
000000000000dfac	ldr	x8, [sp, #0x8]
000000000000dfb0	str	x8, [x20, #0x110]
000000000000dfb4	ldp	x29, x30, [sp, #0x50]
000000000000dfb8	ldp	x20, x19, [sp, #0x40]
000000000000dfbc	ldp	x22, x21, [sp, #0x30]
000000000000dfc0	ldp	x24, x23, [sp, #0x20]
000000000000dfc4	add	sp, sp, #0x60
000000000000dfc8	ret
000000000000dfcc	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.native.internal.NumberConverter.Companion.<get-converter>#internal:
000000000000dfd0	sub	sp, sp, #0x50
000000000000dfd4	stp	x22, x21, [sp, #0x20]
000000000000dfd8	stp	x20, x19, [sp, #0x30]
000000000000dfdc	stp	x29, x30, [sp, #0x40]
000000000000dfe0	add	x29, sp, #0x40
000000000000dfe4	mov	x19, x0
000000000000dfe8	adr	x8, #0x7485b
000000000000dfec	nop
000000000000dff0	ldarb	w8, [x8]
000000000000dff4	tbz	w8, #0x0, 0xdffc
000000000000dff8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000dffc	adrp	x0, 91 ; 0x68000
000000000000e000	add	x0, x0, #0xa00
000000000000e004	ldr	x8, [x0]
000000000000e008	blr	x8
000000000000e00c	mov	x20, x0
000000000000e010	ldr	x8, [x0]
000000000000e014	ldr	x8, [x8, #0x118]
000000000000e018	add	x0, x8, #0x70
000000000000e01c	mov	w1, #0x28
000000000000e020	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000e024	mov	x21, x0
000000000000e028	adr	x8, #0x481a8
000000000000e02c	nop
000000000000e030	str	x8, [x21, #0x10]!
000000000000e034	stur	xzr, [x21, #-0x8]
000000000000e038	str	x21, [x19]
000000000000e03c	ldr	x8, [x20]
000000000000e040	mov	x9, sp
000000000000e044	ldp	x10, x11, [x8, #0x110]
000000000000e048	str	x9, [x8, #0x110]
000000000000e04c	movi.16b	v0, #0x0
000000000000e050	stp	q0, q0, [sp]
000000000000e054	mov	x8, #0x400000000
000000000000e058	stp	x10, x8, [sp, #0x8]
000000000000e05c	add	x0, x11, #0x70
000000000000e060	mov	w1, #0x118
000000000000e064	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000e068	str	xzr, [x0, #0x10]!
000000000000e06c	adr	x8, #0x46694
000000000000e070	nop
000000000000e074	stp	xzr, x8, [x0, #-0x8]
000000000000e078	str	xzr, [x0, #0x8]
000000000000e07c	mov	w8, #0x40
000000000000e080	str	w8, [x0, #0x8]
000000000000e084	str	x0, [sp, #0x18]
000000000000e088	str	x0, [x21, #0x8]
000000000000e08c	ldr	x8, [x20]
000000000000e090	ldr	x9, [sp, #0x8]
000000000000e094	str	x9, [x8, #0x110]
000000000000e098	str	x21, [x19]
000000000000e09c	mov	x0, x21
000000000000e0a0	ldp	x29, x30, [sp, #0x40]
000000000000e0a4	ldp	x20, x19, [sp, #0x30]
000000000000e0a8	ldp	x22, x21, [sp, #0x20]
000000000000e0ac	add	sp, sp, #0x50
000000000000e0b0	ret
_Kotlin_Collection_getSize:
000000000000e0b4	sub	sp, sp, #0x50
000000000000e0b8	stp	x22, x21, [sp, #0x20]
000000000000e0bc	stp	x20, x19, [sp, #0x30]
000000000000e0c0	stp	x29, x30, [sp, #0x40]
000000000000e0c4	add	x29, sp, #0x40
000000000000e0c8	mov	x20, x0
000000000000e0cc	str	xzr, [sp, #0x8]
000000000000e0d0	adrp	x19, 90 ; 0x68000
000000000000e0d4	add	x19, x19, #0xa00
000000000000e0d8	ldr	x21, [x19]
000000000000e0dc	mov	x0, x19
000000000000e0e0	blr	x21
000000000000e0e4	ldr	x8, [x0]
000000000000e0e8	ldr	x9, [x8, #0x110]
000000000000e0ec	add	x10, sp, #0x8
000000000000e0f0	str	x10, [x8, #0x110]
000000000000e0f4	mov	x8, #0x300000000
000000000000e0f8	stp	x9, x8, [sp, #0x10]
000000000000e0fc	adr	x8, #0x74747
000000000000e100	nop
000000000000e104	ldarb	w8, [x8]
000000000000e108	tbz	w8, #0x0, 0xe110
000000000000e10c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000e110	ldr	x8, [x20]
000000000000e114	and	x8, x8, #0xfffffffffffffffc
000000000000e118	ldr	x8, [x8]
000000000000e11c	ldr	w9, [x8, #0x3c]
000000000000e120	ldr	x8, [x8, #0x40]
000000000000e124	tbnz	w9, #0x1f, 0xe134
000000000000e128	mov	w10, #0x12
000000000000e12c	and	x9, x9, x10
000000000000e130	b	0xe1b8
000000000000e134	neg	w10, w9
000000000000e138	mvn	w9, w9
000000000000e13c	cmp	w10, #0x9
000000000000e140	b.ge	0xe178
000000000000e144	cmp	w10, #0x2
000000000000e148	b.lt	0xe1ac
000000000000e14c	mov	x10, #0x0
000000000000e150	mov	x11, x8
000000000000e154	ldr	w12, [x11]
000000000000e158	cmp	w12, #0x11
000000000000e15c	b.gt	0xe1b4
000000000000e160	add	x10, x10, #0x1
000000000000e164	add	x11, x11, #0x10
000000000000e168	cmp	x9, x10
000000000000e16c	b.ne	0xe154
000000000000e170	mov	x10, x9
000000000000e174	b	0xe1b4
000000000000e178	mov	w10, #0x0
000000000000e17c	add	w11, w9, w10
000000000000e180	cmp	w11, #0x0
000000000000e184	cinc	w11, w11, lt
000000000000e188	asr	w11, w11, #1
000000000000e18c	sbfiz	x12, x11, #4, #32
000000000000e190	ldr	w12, [x8, x12]
000000000000e194	cmp	w12, #0x12
000000000000e198	csinc	w10, w10, w11, ge
000000000000e19c	csel	w9, w9, w11, lt
000000000000e1a0	cmp	w10, w9
000000000000e1a4	b.lt	0xe17c
000000000000e1a8	b	0xe1b4
000000000000e1ac	mov	w10, #0x0
000000000000e1b0	b	0xe1b4
000000000000e1b4	sxtw	x9, w10
000000000000e1b8	add	x8, x8, x9, lsl #4
000000000000e1bc	ldr	x8, [x8, #0x8]
000000000000e1c0	ldr	x8, [x8]
000000000000e1c4	mov	x0, x20
000000000000e1c8	blr	x8
000000000000e1cc	mov	x1, x0
000000000000e1d0	mov	x0, x19
000000000000e1d4	blr	x21
000000000000e1d8	ldr	x8, [x0]
000000000000e1dc	ldr	x9, [sp, #0x10]
000000000000e1e0	str	x9, [x8, #0x110]
000000000000e1e4	mov	x0, x1
000000000000e1e8	ldp	x29, x30, [sp, #0x40]
000000000000e1ec	ldp	x20, x19, [sp, #0x30]
000000000000e1f0	ldp	x22, x21, [sp, #0x20]
000000000000e1f4	add	sp, sp, #0x50
000000000000e1f8	ret
000000000000e1fc	mov	x1, x0
000000000000e200	mov	x0, x19
000000000000e204	blr	x21
000000000000e208	ldr	x8, [x0]
000000000000e20c	ldr	x9, [sp, #0x10]
000000000000e210	str	x9, [x8, #0x110]
000000000000e214	mov	x0, x1
000000000000e218	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
_Kotlin_List_get:
000000000000e21c	sub	sp, sp, #0x60
000000000000e220	stp	x24, x23, [sp, #0x20]
000000000000e224	stp	x22, x21, [sp, #0x30]
000000000000e228	stp	x20, x19, [sp, #0x40]
000000000000e22c	stp	x29, x30, [sp, #0x50]
000000000000e230	add	x29, sp, #0x50
000000000000e234	mov	x19, x2
000000000000e238	mov	x21, x1
000000000000e23c	mov	x22, x0
000000000000e240	str	xzr, [sp, #0x8]
000000000000e244	adrp	x20, 90 ; 0x68000
000000000000e248	add	x20, x20, #0xa00
000000000000e24c	ldr	x23, [x20]
000000000000e250	mov	x0, x20
000000000000e254	blr	x23
000000000000e258	ldr	x8, [x0]
000000000000e25c	ldr	x9, [x8, #0x110]
000000000000e260	add	x10, sp, #0x8
000000000000e264	str	x10, [x8, #0x110]
000000000000e268	mov	x8, #0x300000000
000000000000e26c	stp	x9, x8, [sp, #0x10]
000000000000e270	adr	x8, #0x745d3
000000000000e274	nop
000000000000e278	ldarb	w8, [x8]
000000000000e27c	tbz	w8, #0x0, 0xe284
000000000000e280	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000e284	ldr	x8, [x22]
000000000000e288	and	x8, x8, #0xfffffffffffffffc
000000000000e28c	ldr	x8, [x8]
000000000000e290	ldr	w9, [x8, #0x3c]
000000000000e294	ldr	x8, [x8, #0x40]
000000000000e298	tbnz	w9, #0x1f, 0xe2a8
000000000000e29c	mov	w10, #0x2b
000000000000e2a0	and	x9, x9, x10
000000000000e2a4	b	0xe32c
000000000000e2a8	neg	w10, w9
000000000000e2ac	mvn	w9, w9
000000000000e2b0	cmp	w10, #0x9
000000000000e2b4	b.ge	0xe2ec
000000000000e2b8	cmp	w10, #0x2
000000000000e2bc	b.lt	0xe320
000000000000e2c0	mov	x10, #0x0
000000000000e2c4	mov	x11, x8
000000000000e2c8	ldr	w12, [x11]
000000000000e2cc	cmp	w12, #0x2a
000000000000e2d0	b.gt	0xe328
000000000000e2d4	add	x10, x10, #0x1
000000000000e2d8	add	x11, x11, #0x10
000000000000e2dc	cmp	x9, x10
000000000000e2e0	b.ne	0xe2c8
000000000000e2e4	mov	x10, x9
000000000000e2e8	b	0xe328
000000000000e2ec	mov	w10, #0x0
000000000000e2f0	add	w11, w9, w10
000000000000e2f4	cmp	w11, #0x0
000000000000e2f8	cinc	w11, w11, lt
000000000000e2fc	asr	w11, w11, #1
000000000000e300	sbfiz	x12, x11, #4, #32
000000000000e304	ldr	w12, [x8, x12]
000000000000e308	cmp	w12, #0x2b
000000000000e30c	csinc	w10, w10, w11, ge
000000000000e310	csel	w9, w9, w11, lt
000000000000e314	cmp	w10, w9
000000000000e318	b.lt	0xe2f0
000000000000e31c	b	0xe328
000000000000e320	mov	w10, #0x0
000000000000e324	b	0xe328
000000000000e328	sxtw	x9, w10
000000000000e32c	add	x8, x8, x9, lsl #4
000000000000e330	ldr	x8, [x8, #0x8]
000000000000e334	ldr	x8, [x8, #0x18]
000000000000e338	mov	x0, x22
000000000000e33c	mov	x1, x21
000000000000e340	mov	x2, x19
000000000000e344	blr	x8
000000000000e348	mov	x8, x0
000000000000e34c	str	x0, [x19]
000000000000e350	mov	x0, x20
000000000000e354	blr	x23
000000000000e358	ldr	x9, [x0]
000000000000e35c	ldr	x10, [sp, #0x10]
000000000000e360	str	x10, [x9, #0x110]
000000000000e364	mov	x0, x8
000000000000e368	ldp	x29, x30, [sp, #0x50]
000000000000e36c	ldp	x20, x19, [sp, #0x40]
000000000000e370	ldp	x22, x21, [sp, #0x30]
000000000000e374	ldp	x24, x23, [sp, #0x20]
000000000000e378	add	sp, sp, #0x60
000000000000e37c	ret
000000000000e380	mov	x1, x0
000000000000e384	mov	x0, x20
000000000000e388	blr	x23
000000000000e38c	ldr	x8, [x0]
000000000000e390	ldr	x9, [sp, #0x10]
000000000000e394	str	x9, [x8, #0x110]
000000000000e398	mov	x0, x1
000000000000e39c	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
_Kotlin_MutableCollection_addObject:
000000000000e3a0	sub	sp, sp, #0x50
000000000000e3a4	stp	x22, x21, [sp, #0x20]
000000000000e3a8	stp	x20, x19, [sp, #0x30]
000000000000e3ac	stp	x29, x30, [sp, #0x40]
000000000000e3b0	add	x29, sp, #0x40
000000000000e3b4	mov	x20, x1
000000000000e3b8	mov	x21, x0
000000000000e3bc	str	xzr, [sp, #0x8]
000000000000e3c0	adrp	x19, 90 ; 0x68000
000000000000e3c4	add	x19, x19, #0xa00
000000000000e3c8	ldr	x22, [x19]
000000000000e3cc	mov	x0, x19
000000000000e3d0	blr	x22
000000000000e3d4	ldr	x8, [x0]
000000000000e3d8	ldr	x9, [x8, #0x110]
000000000000e3dc	add	x10, sp, #0x8
000000000000e3e0	str	x10, [x8, #0x110]
000000000000e3e4	mov	x8, #0x300000000
000000000000e3e8	stp	x9, x8, [sp, #0x10]
000000000000e3ec	adr	x8, #0x74457
000000000000e3f0	nop
000000000000e3f4	ldarb	w8, [x8]
000000000000e3f8	tbz	w8, #0x0, 0xe400
000000000000e3fc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000e400	ldr	x8, [x21]
000000000000e404	and	x8, x8, #0xfffffffffffffffc
000000000000e408	ldr	x8, [x8]
000000000000e40c	ldr	w9, [x8, #0x3c]
000000000000e410	ldr	x8, [x8, #0x40]
000000000000e414	tbnz	w9, #0x1f, 0xe424
000000000000e418	mov	w10, #0x15
000000000000e41c	and	x9, x9, x10
000000000000e420	b	0xe4a8
000000000000e424	neg	w10, w9
000000000000e428	mvn	w9, w9
000000000000e42c	cmp	w10, #0x9
000000000000e430	b.ge	0xe468
000000000000e434	cmp	w10, #0x2
000000000000e438	b.lt	0xe49c
000000000000e43c	mov	x10, #0x0
000000000000e440	mov	x11, x8
000000000000e444	ldr	w12, [x11]
000000000000e448	cmp	w12, #0x14
000000000000e44c	b.gt	0xe4a4
000000000000e450	add	x10, x10, #0x1
000000000000e454	add	x11, x11, #0x10
000000000000e458	cmp	x9, x10
000000000000e45c	b.ne	0xe444
000000000000e460	mov	x10, x9
000000000000e464	b	0xe4a4
000000000000e468	mov	w10, #0x0
000000000000e46c	add	w11, w9, w10
000000000000e470	cmp	w11, #0x0
000000000000e474	cinc	w11, w11, lt
000000000000e478	asr	w11, w11, #1
000000000000e47c	sbfiz	x12, x11, #4, #32
000000000000e480	ldr	w12, [x8, x12]
000000000000e484	cmp	w12, #0x15
000000000000e488	csinc	w10, w10, w11, ge
000000000000e48c	csel	w9, w9, w11, lt
000000000000e490	cmp	w10, w9
000000000000e494	b.lt	0xe46c
000000000000e498	b	0xe4a4
000000000000e49c	mov	w10, #0x0
000000000000e4a0	b	0xe4a4
000000000000e4a4	sxtw	x9, w10
000000000000e4a8	add	x8, x8, x9, lsl #4
000000000000e4ac	ldr	x8, [x8, #0x8]
000000000000e4b0	ldr	x8, [x8]
000000000000e4b4	mov	x0, x21
000000000000e4b8	mov	x1, x20
000000000000e4bc	blr	x8
000000000000e4c0	mov	x0, x19
000000000000e4c4	blr	x22
000000000000e4c8	ldr	x8, [x0]
000000000000e4cc	ldr	x9, [sp, #0x10]
000000000000e4d0	str	x9, [x8, #0x110]
000000000000e4d4	ldp	x29, x30, [sp, #0x40]
000000000000e4d8	ldp	x20, x19, [sp, #0x30]
000000000000e4dc	ldp	x22, x21, [sp, #0x20]
000000000000e4e0	add	sp, sp, #0x50
000000000000e4e4	ret
000000000000e4e8	mov	x1, x0
000000000000e4ec	mov	x0, x19
000000000000e4f0	blr	x22
000000000000e4f4	ldr	x8, [x0]
000000000000e4f8	ldr	x9, [sp, #0x10]
000000000000e4fc	str	x9, [x8, #0x110]
000000000000e500	mov	x0, x1
000000000000e504	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
_Kotlin_Set_contains:
000000000000e508	sub	sp, sp, #0x50
000000000000e50c	stp	x22, x21, [sp, #0x20]
000000000000e510	stp	x20, x19, [sp, #0x30]
000000000000e514	stp	x29, x30, [sp, #0x40]
000000000000e518	add	x29, sp, #0x40
000000000000e51c	mov	x20, x1
000000000000e520	mov	x21, x0
000000000000e524	str	xzr, [sp, #0x8]
000000000000e528	adrp	x19, 90 ; 0x68000
000000000000e52c	add	x19, x19, #0xa00
000000000000e530	ldr	x22, [x19]
000000000000e534	mov	x0, x19
000000000000e538	blr	x22
000000000000e53c	ldr	x8, [x0]
000000000000e540	ldr	x9, [x8, #0x110]
000000000000e544	add	x10, sp, #0x8
000000000000e548	str	x10, [x8, #0x110]
000000000000e54c	mov	x8, #0x300000000
000000000000e550	stp	x9, x8, [sp, #0x10]
000000000000e554	adr	x8, #0x742ef
000000000000e558	nop
000000000000e55c	ldarb	w8, [x8]
000000000000e560	tbz	w8, #0x0, 0xe568
000000000000e564	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000e568	ldr	x8, [x21]
000000000000e56c	and	x8, x8, #0xfffffffffffffffc
000000000000e570	ldr	x8, [x8]
000000000000e574	ldr	w9, [x8, #0x3c]
000000000000e578	ldr	x8, [x8, #0x40]
000000000000e57c	tbnz	w9, #0x1f, 0xe588
000000000000e580	and	x9, x9, #0x1e
000000000000e584	b	0xe60c
000000000000e588	neg	w10, w9
000000000000e58c	mvn	w9, w9
000000000000e590	cmp	w10, #0x9
000000000000e594	b.ge	0xe5cc
000000000000e598	cmp	w10, #0x2
000000000000e59c	b.lt	0xe600
000000000000e5a0	mov	x10, #0x0
000000000000e5a4	mov	x11, x8
000000000000e5a8	ldr	w12, [x11]
000000000000e5ac	cmp	w12, #0x1d
000000000000e5b0	b.gt	0xe608
000000000000e5b4	add	x10, x10, #0x1
000000000000e5b8	add	x11, x11, #0x10
000000000000e5bc	cmp	x9, x10
000000000000e5c0	b.ne	0xe5a8
000000000000e5c4	mov	x10, x9
000000000000e5c8	b	0xe608
000000000000e5cc	mov	w10, #0x0
000000000000e5d0	add	w11, w9, w10
000000000000e5d4	cmp	w11, #0x0
000000000000e5d8	cinc	w11, w11, lt
000000000000e5dc	asr	w11, w11, #1
000000000000e5e0	sbfiz	x12, x11, #4, #32
000000000000e5e4	ldr	w12, [x8, x12]
000000000000e5e8	cmp	w12, #0x1e
000000000000e5ec	csinc	w10, w10, w11, ge
000000000000e5f0	csel	w9, w9, w11, lt
000000000000e5f4	cmp	w10, w9
000000000000e5f8	b.lt	0xe5d0
000000000000e5fc	b	0xe608
000000000000e600	mov	w10, #0x0
000000000000e604	b	0xe608
000000000000e608	sxtw	x9, w10
000000000000e60c	add	x8, x8, x9, lsl #4
000000000000e610	ldr	x8, [x8, #0x8]
000000000000e614	ldr	x8, [x8, #0x8]
000000000000e618	mov	x0, x21
000000000000e61c	mov	x1, x20
000000000000e620	blr	x8
000000000000e624	mov	x1, x0
000000000000e628	mov	x0, x19
000000000000e62c	blr	x22
000000000000e630	ldr	x8, [x0]
000000000000e634	ldr	x9, [sp, #0x10]
000000000000e638	str	x9, [x8, #0x110]
000000000000e63c	mov	x0, x1
000000000000e640	ldp	x29, x30, [sp, #0x40]
000000000000e644	ldp	x20, x19, [sp, #0x30]
000000000000e648	ldp	x22, x21, [sp, #0x20]
000000000000e64c	add	sp, sp, #0x50
000000000000e650	ret
000000000000e654	mov	x1, x0
000000000000e658	mov	x0, x19
000000000000e65c	blr	x22
000000000000e660	ldr	x8, [x0]
000000000000e664	ldr	x9, [sp, #0x10]
000000000000e668	str	x9, [x8, #0x110]
000000000000e66c	mov	x0, x1
000000000000e670	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
_Kotlin_Set_iterator:
000000000000e674	sub	sp, sp, #0x50
000000000000e678	stp	x22, x21, [sp, #0x20]
000000000000e67c	stp	x20, x19, [sp, #0x30]
000000000000e680	stp	x29, x30, [sp, #0x40]
000000000000e684	add	x29, sp, #0x40
000000000000e688	mov	x20, x1
000000000000e68c	mov	x21, x0
000000000000e690	str	xzr, [sp, #0x8]
000000000000e694	adrp	x19, 90 ; 0x68000
000000000000e698	add	x19, x19, #0xa00
000000000000e69c	ldr	x22, [x19]
000000000000e6a0	mov	x0, x19
000000000000e6a4	blr	x22
000000000000e6a8	ldr	x8, [x0]
000000000000e6ac	ldr	x9, [x8, #0x110]
000000000000e6b0	add	x10, sp, #0x8
000000000000e6b4	str	x10, [x8, #0x110]
000000000000e6b8	mov	x8, #0x300000000
000000000000e6bc	stp	x9, x8, [sp, #0x10]
000000000000e6c0	adr	x8, #0x74183
000000000000e6c4	nop
000000000000e6c8	ldarb	w8, [x8]
000000000000e6cc	tbz	w8, #0x0, 0xe6d4
000000000000e6d0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000e6d4	ldr	x8, [x21]
000000000000e6d8	and	x8, x8, #0xfffffffffffffffc
000000000000e6dc	ldr	x8, [x8]
000000000000e6e0	ldr	w9, [x8, #0x3c]
000000000000e6e4	ldr	x8, [x8, #0x40]
000000000000e6e8	tbnz	w9, #0x1f, 0xe6f4
000000000000e6ec	and	x9, x9, #0x1e
000000000000e6f0	b	0xe778
000000000000e6f4	neg	w10, w9
000000000000e6f8	mvn	w9, w9
000000000000e6fc	cmp	w10, #0x9
000000000000e700	b.ge	0xe738
000000000000e704	cmp	w10, #0x2
000000000000e708	b.lt	0xe76c
000000000000e70c	mov	x10, #0x0
000000000000e710	mov	x11, x8
000000000000e714	ldr	w12, [x11]
000000000000e718	cmp	w12, #0x1d
000000000000e71c	b.gt	0xe774
000000000000e720	add	x10, x10, #0x1
000000000000e724	add	x11, x11, #0x10
000000000000e728	cmp	x9, x10
000000000000e72c	b.ne	0xe714
000000000000e730	mov	x10, x9
000000000000e734	b	0xe774
000000000000e738	mov	w10, #0x0
000000000000e73c	add	w11, w9, w10
000000000000e740	cmp	w11, #0x0
000000000000e744	cinc	w11, w11, lt
000000000000e748	asr	w11, w11, #1
000000000000e74c	sbfiz	x12, x11, #4, #32
000000000000e750	ldr	w12, [x8, x12]
000000000000e754	cmp	w12, #0x1e
000000000000e758	csinc	w10, w10, w11, ge
000000000000e75c	csel	w9, w9, w11, lt
000000000000e760	cmp	w10, w9
000000000000e764	b.lt	0xe73c
000000000000e768	b	0xe774
000000000000e76c	mov	w10, #0x0
000000000000e770	b	0xe774
000000000000e774	sxtw	x9, w10
000000000000e778	add	x8, x8, x9, lsl #4
000000000000e77c	ldr	x8, [x8, #0x8]
000000000000e780	ldr	x8, [x8, #0x20]
000000000000e784	mov	x0, x21
000000000000e788	mov	x1, x20
000000000000e78c	blr	x8
000000000000e790	mov	x8, x0
000000000000e794	str	x0, [x20]
000000000000e798	mov	x0, x19
000000000000e79c	blr	x22
000000000000e7a0	ldr	x9, [x0]
000000000000e7a4	ldr	x10, [sp, #0x10]
000000000000e7a8	str	x10, [x9, #0x110]
000000000000e7ac	mov	x0, x8
000000000000e7b0	ldp	x29, x30, [sp, #0x40]
000000000000e7b4	ldp	x20, x19, [sp, #0x30]
000000000000e7b8	ldp	x22, x21, [sp, #0x20]
000000000000e7bc	add	sp, sp, #0x50
000000000000e7c0	ret
000000000000e7c4	mov	x1, x0
000000000000e7c8	mov	x0, x19
000000000000e7cc	blr	x22
000000000000e7d0	ldr	x8, [x0]
000000000000e7d4	ldr	x9, [sp, #0x10]
000000000000e7d8	str	x9, [x8, #0x110]
000000000000e7dc	mov	x0, x1
000000000000e7e0	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
_Kotlin_MutableSet_createWithCapacity:
000000000000e7e4	sub	sp, sp, #0x90
000000000000e7e8	stp	x26, x25, [sp, #0x40]
000000000000e7ec	stp	x24, x23, [sp, #0x50]
000000000000e7f0	stp	x22, x21, [sp, #0x60]
000000000000e7f4	stp	x20, x19, [sp, #0x70]
000000000000e7f8	stp	x29, x30, [sp, #0x80]
000000000000e7fc	add	x29, sp, #0x80
000000000000e800	mov	x19, x1
000000000000e804	mov	x21, x0
000000000000e808	str	xzr, [sp, #0x8]
000000000000e80c	adrp	x20, 90 ; 0x68000
000000000000e810	add	x20, x20, #0xa00
000000000000e814	ldr	x25, [x20]
000000000000e818	mov	x0, x20
000000000000e81c	blr	x25
000000000000e820	ldr	x8, [x0]
000000000000e824	ldr	x9, [x8, #0x110]
000000000000e828	add	x10, sp, #0x8
000000000000e82c	str	x10, [x8, #0x110]
000000000000e830	mov	x8, #0x300000000
000000000000e834	stp	x9, x8, [sp, #0x10]
000000000000e838	adr	x8, #0x7400b
000000000000e83c	nop
000000000000e840	ldarb	w8, [x8]
000000000000e844	tbz	w8, #0x0, 0xe84c
000000000000e848	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000e84c	mov	x0, x20
000000000000e850	blr	x25
000000000000e854	mov	x24, x0
000000000000e858	ldr	x8, [x0]
000000000000e85c	ldr	x8, [x8, #0x118]
000000000000e860	add	x0, x8, #0x70
000000000000e864	mov	w1, #0x18
000000000000e868	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000e86c	mov	x23, x0
000000000000e870	adr	x8, #0x49410
000000000000e874	nop
000000000000e878	mov	x22, x0
000000000000e87c	str	x8, [x22, #0x10]!
000000000000e880	str	xzr, [x0, #0x8]
000000000000e884	str	x22, [x19]
000000000000e888	ldr	x8, [x24]
000000000000e88c	add	x9, sp, #0x20
000000000000e890	ldp	x10, x11, [x8, #0x110]
000000000000e894	str	x9, [x8, #0x110]
000000000000e898	movi.16b	v0, #0x0
000000000000e89c	stp	q0, q0, [sp, #0x20]
000000000000e8a0	mov	x8, #0x400000000
000000000000e8a4	stp	x10, x8, [sp, #0x28]
000000000000e8a8	add	x0, x11, #0x70
000000000000e8ac	mov	w1, #0x60
000000000000e8b0	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000e8b4	mov	x24, x0
000000000000e8b8	adr	x8, #0x48d18
000000000000e8bc	nop
000000000000e8c0	str	x8, [x24, #0x10]!
000000000000e8c4	stur	xzr, [x24, #-0x8]
000000000000e8c8	str	x24, [sp, #0x38]
000000000000e8cc	mov	x0, x24
000000000000e8d0	mov	x1, x21
000000000000e8d4	bl	"_kfun:kotlin.collections.HashMap#<init>(kotlin.Int){}"
000000000000e8d8	str	x24, [x23, #0x18]
000000000000e8dc	mov	x0, x20
000000000000e8e0	blr	x25
000000000000e8e4	ldr	x8, [x0]
000000000000e8e8	ldr	x9, [sp, #0x28]
000000000000e8ec	str	x9, [x8, #0x110]
000000000000e8f0	str	x22, [x19]
000000000000e8f4	ldr	x8, [x0]
000000000000e8f8	ldr	x9, [sp, #0x10]
000000000000e8fc	str	x9, [x8, #0x110]
000000000000e900	mov	x0, x22
000000000000e904	ldp	x29, x30, [sp, #0x80]
000000000000e908	ldp	x20, x19, [sp, #0x70]
000000000000e90c	ldp	x22, x21, [sp, #0x60]
000000000000e910	ldp	x24, x23, [sp, #0x50]
000000000000e914	ldp	x26, x25, [sp, #0x40]
000000000000e918	add	sp, sp, #0x90
000000000000e91c	ret
000000000000e920	mov	x1, x0
000000000000e924	mov	x0, x20
000000000000e928	blr	x25
000000000000e92c	ldr	x8, [x0]
000000000000e930	ldr	x9, [sp, #0x10]
000000000000e934	str	x9, [x8, #0x110]
000000000000e938	mov	x0, x1
000000000000e93c	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
_Kotlin_Map_getSize:
000000000000e940	sub	sp, sp, #0x50
000000000000e944	stp	x22, x21, [sp, #0x20]
000000000000e948	stp	x20, x19, [sp, #0x30]
000000000000e94c	stp	x29, x30, [sp, #0x40]
000000000000e950	add	x29, sp, #0x40
000000000000e954	mov	x20, x0
000000000000e958	str	xzr, [sp, #0x8]
000000000000e95c	adrp	x19, 90 ; 0x68000
000000000000e960	add	x19, x19, #0xa00
000000000000e964	ldr	x21, [x19]
000000000000e968	mov	x0, x19
000000000000e96c	blr	x21
000000000000e970	ldr	x8, [x0]
000000000000e974	ldr	x9, [x8, #0x110]
000000000000e978	add	x10, sp, #0x8
000000000000e97c	str	x10, [x8, #0x110]
000000000000e980	mov	x8, #0x300000000
000000000000e984	stp	x9, x8, [sp, #0x10]
000000000000e988	adr	x8, #0x73ebb
000000000000e98c	nop
000000000000e990	ldarb	w8, [x8]
000000000000e994	tbz	w8, #0x0, 0xe99c
000000000000e998	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000e99c	ldr	x8, [x20]
000000000000e9a0	and	x8, x8, #0xfffffffffffffffc
000000000000e9a4	ldr	x8, [x8]
000000000000e9a8	ldr	w9, [x8, #0x3c]
000000000000e9ac	ldr	x8, [x8, #0x40]
000000000000e9b0	tbnz	w9, #0x1f, 0xe9c0
000000000000e9b4	mov	w10, #0x41
000000000000e9b8	and	x9, x9, x10
000000000000e9bc	b	0xea44
000000000000e9c0	neg	w10, w9
000000000000e9c4	mvn	w9, w9
000000000000e9c8	cmp	w10, #0x9
000000000000e9cc	b.ge	0xea04
000000000000e9d0	cmp	w10, #0x2
000000000000e9d4	b.lt	0xea38
000000000000e9d8	mov	x10, #0x0
000000000000e9dc	mov	x11, x8
000000000000e9e0	ldr	w12, [x11]
000000000000e9e4	cmp	w12, #0x40
000000000000e9e8	b.gt	0xea40
000000000000e9ec	add	x10, x10, #0x1
000000000000e9f0	add	x11, x11, #0x10
000000000000e9f4	cmp	x9, x10
000000000000e9f8	b.ne	0xe9e0
000000000000e9fc	mov	x10, x9
000000000000ea00	b	0xea40
000000000000ea04	mov	w10, #0x0
000000000000ea08	add	w11, w9, w10
000000000000ea0c	cmp	w11, #0x0
000000000000ea10	cinc	w11, w11, lt
000000000000ea14	asr	w11, w11, #1
000000000000ea18	sbfiz	x12, x11, #4, #32
000000000000ea1c	ldr	w12, [x8, x12]
000000000000ea20	cmp	w12, #0x41
000000000000ea24	csinc	w10, w10, w11, ge
000000000000ea28	csel	w9, w9, w11, lt
000000000000ea2c	cmp	w10, w9
000000000000ea30	b.lt	0xea08
000000000000ea34	b	0xea40
000000000000ea38	mov	w10, #0x0
000000000000ea3c	b	0xea40
000000000000ea40	sxtw	x9, w10
000000000000ea44	add	x8, x8, x9, lsl #4
000000000000ea48	ldr	x8, [x8, #0x8]
000000000000ea4c	ldr	x8, [x8, #0x10]
000000000000ea50	mov	x0, x20
000000000000ea54	blr	x8
000000000000ea58	mov	x1, x0
000000000000ea5c	mov	x0, x19
000000000000ea60	blr	x21
000000000000ea64	ldr	x8, [x0]
000000000000ea68	ldr	x9, [sp, #0x10]
000000000000ea6c	str	x9, [x8, #0x110]
000000000000ea70	mov	x0, x1
000000000000ea74	ldp	x29, x30, [sp, #0x40]
000000000000ea78	ldp	x20, x19, [sp, #0x30]
000000000000ea7c	ldp	x22, x21, [sp, #0x20]
000000000000ea80	add	sp, sp, #0x50
000000000000ea84	ret
000000000000ea88	mov	x1, x0
000000000000ea8c	mov	x0, x19
000000000000ea90	blr	x21
000000000000ea94	ldr	x8, [x0]
000000000000ea98	ldr	x9, [sp, #0x10]
000000000000ea9c	str	x9, [x8, #0x110]
000000000000eaa0	mov	x0, x1
000000000000eaa4	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
_Kotlin_Map_keyIterator:
000000000000eaa8	sub	sp, sp, #0x60
000000000000eaac	stp	x24, x23, [sp, #0x20]
000000000000eab0	stp	x22, x21, [sp, #0x30]
000000000000eab4	stp	x20, x19, [sp, #0x40]
000000000000eab8	stp	x29, x30, [sp, #0x50]
000000000000eabc	add	x29, sp, #0x50
000000000000eac0	mov	x19, x1
000000000000eac4	mov	x21, x0
000000000000eac8	movi.16b	v0, #0x0
000000000000eacc	stp	q0, q0, [sp]
000000000000ead0	mov	x8, sp
000000000000ead4	add	x22, x8, #0x18
000000000000ead8	adrp	x20, 90 ; 0x68000
000000000000eadc	add	x20, x20, #0xa00
000000000000eae0	ldr	x23, [x20]
000000000000eae4	mov	x0, x20
000000000000eae8	blr	x23
000000000000eaec	ldr	x9, [x0]
000000000000eaf0	ldr	x10, [x9, #0x110]
000000000000eaf4	str	x8, [x9, #0x110]
000000000000eaf8	mov	x8, #0x400000000
000000000000eafc	stp	x10, x8, [sp, #0x8]
000000000000eb00	adr	x8, #0x73d43
000000000000eb04	nop
000000000000eb08	ldarb	w8, [x8]
000000000000eb0c	tbz	w8, #0x0, 0xeb14
000000000000eb10	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000eb14	ldr	x8, [x21]
000000000000eb18	and	x8, x8, #0xfffffffffffffffc
000000000000eb1c	ldr	x8, [x8]
000000000000eb20	ldr	w9, [x8, #0x3c]
000000000000eb24	ldr	x8, [x8, #0x40]
000000000000eb28	tbnz	w9, #0x1f, 0xeb38
000000000000eb2c	mov	w10, #0x41
000000000000eb30	and	x9, x9, x10
000000000000eb34	b	0xebbc
000000000000eb38	neg	w10, w9
000000000000eb3c	mvn	w9, w9
000000000000eb40	cmp	w10, #0x9
000000000000eb44	b.ge	0xeb7c
000000000000eb48	cmp	w10, #0x2
000000000000eb4c	b.lt	0xebb0
000000000000eb50	mov	x10, #0x0
000000000000eb54	mov	x11, x8
000000000000eb58	ldr	w12, [x11]
000000000000eb5c	cmp	w12, #0x40
000000000000eb60	b.gt	0xebb8
000000000000eb64	add	x10, x10, #0x1
000000000000eb68	add	x11, x11, #0x10
000000000000eb6c	cmp	x9, x10
000000000000eb70	b.ne	0xeb58
000000000000eb74	mov	x10, x9
000000000000eb78	b	0xebb8
000000000000eb7c	mov	w10, #0x0
000000000000eb80	add	w11, w9, w10
000000000000eb84	cmp	w11, #0x0
000000000000eb88	cinc	w11, w11, lt
000000000000eb8c	asr	w11, w11, #1
000000000000eb90	sbfiz	x12, x11, #4, #32
000000000000eb94	ldr	w12, [x8, x12]
000000000000eb98	cmp	w12, #0x41
000000000000eb9c	csinc	w10, w10, w11, ge
000000000000eba0	csel	w9, w9, w11, lt
000000000000eba4	cmp	w10, w9
000000000000eba8	b.lt	0xeb80
000000000000ebac	b	0xebb8
000000000000ebb0	mov	w10, #0x0
000000000000ebb4	b	0xebb8
000000000000ebb8	sxtw	x9, w10
000000000000ebbc	add	x8, x8, x9, lsl #4
000000000000ebc0	ldr	x8, [x8, #0x8]
000000000000ebc4	ldr	x8, [x8, #0x8]
000000000000ebc8	mov	x0, x21
000000000000ebcc	mov	x1, x22
000000000000ebd0	blr	x8
000000000000ebd4	ldr	x8, [x0]
000000000000ebd8	and	x8, x8, #0xfffffffffffffffc
000000000000ebdc	ldr	x8, [x8]
000000000000ebe0	ldr	w9, [x8, #0x3c]
000000000000ebe4	ldr	x8, [x8, #0x40]
000000000000ebe8	tbnz	w9, #0x1f, 0xebf4
000000000000ebec	and	x9, x9, #0x1e
000000000000ebf0	b	0xec78
000000000000ebf4	neg	w10, w9
000000000000ebf8	mvn	w9, w9
000000000000ebfc	cmp	w10, #0x9
000000000000ec00	b.ge	0xec38
000000000000ec04	cmp	w10, #0x2
000000000000ec08	b.lt	0xec6c
000000000000ec0c	mov	x10, #0x0
000000000000ec10	mov	x11, x8
000000000000ec14	ldr	w12, [x11]
000000000000ec18	cmp	w12, #0x1d
000000000000ec1c	b.gt	0xec74
000000000000ec20	add	x10, x10, #0x1
000000000000ec24	add	x11, x11, #0x10
000000000000ec28	cmp	x9, x10
000000000000ec2c	b.ne	0xec14
000000000000ec30	mov	x10, x9
000000000000ec34	b	0xec74
000000000000ec38	mov	w10, #0x0
000000000000ec3c	add	w11, w9, w10
000000000000ec40	cmp	w11, #0x0
000000000000ec44	cinc	w11, w11, lt
000000000000ec48	asr	w11, w11, #1
000000000000ec4c	sbfiz	x12, x11, #4, #32
000000000000ec50	ldr	w12, [x8, x12]
000000000000ec54	cmp	w12, #0x1e
000000000000ec58	csinc	w10, w10, w11, ge
000000000000ec5c	csel	w9, w9, w11, lt
000000000000ec60	cmp	w10, w9
000000000000ec64	b.lt	0xec3c
000000000000ec68	b	0xec74
000000000000ec6c	mov	w10, #0x0
000000000000ec70	b	0xec74
000000000000ec74	sxtw	x9, w10
000000000000ec78	add	x8, x8, x9, lsl #4
000000000000ec7c	ldr	x8, [x8, #0x8]
000000000000ec80	ldr	x8, [x8, #0x20]
000000000000ec84	mov	x1, x19
000000000000ec88	blr	x8
000000000000ec8c	mov	x8, x0
000000000000ec90	str	x0, [x19]
000000000000ec94	mov	x0, x20
000000000000ec98	blr	x23
000000000000ec9c	ldr	x9, [x0]
000000000000eca0	ldr	x10, [sp, #0x8]
000000000000eca4	str	x10, [x9, #0x110]
000000000000eca8	mov	x0, x8
000000000000ecac	ldp	x29, x30, [sp, #0x50]
000000000000ecb0	ldp	x20, x19, [sp, #0x40]
000000000000ecb4	ldp	x22, x21, [sp, #0x30]
000000000000ecb8	ldp	x24, x23, [sp, #0x20]
000000000000ecbc	add	sp, sp, #0x60
000000000000ecc0	ret
000000000000ecc4	mov	x1, x0
000000000000ecc8	mov	x0, x20
000000000000eccc	blr	x23
000000000000ecd0	ldr	x8, [x0]
000000000000ecd4	ldr	x9, [sp, #0x8]
000000000000ecd8	str	x9, [x8, #0x110]
000000000000ecdc	mov	x0, x1
000000000000ece0	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
_Kotlin_MutableMap_createWithCapacity:
000000000000ece4	sub	sp, sp, #0x60
000000000000ece8	stp	x24, x23, [sp, #0x20]
000000000000ecec	stp	x22, x21, [sp, #0x30]
000000000000ecf0	stp	x20, x19, [sp, #0x40]
000000000000ecf4	stp	x29, x30, [sp, #0x50]
000000000000ecf8	add	x29, sp, #0x50
000000000000ecfc	mov	x20, x1
000000000000ed00	mov	x21, x0
000000000000ed04	str	xzr, [sp, #0x8]
000000000000ed08	adrp	x19, 90 ; 0x68000
000000000000ed0c	add	x19, x19, #0xa00
000000000000ed10	ldr	x23, [x19]
000000000000ed14	mov	x0, x19
000000000000ed18	blr	x23
000000000000ed1c	ldr	x8, [x0]
000000000000ed20	ldr	x9, [x8, #0x110]
000000000000ed24	add	x10, sp, #0x8
000000000000ed28	str	x10, [x8, #0x110]
000000000000ed2c	mov	x8, #0x300000000
000000000000ed30	stp	x9, x8, [sp, #0x10]
000000000000ed34	adr	x8, #0x73b0f
000000000000ed38	nop
000000000000ed3c	ldarb	w8, [x8]
000000000000ed40	tbz	w8, #0x0, 0xed48
000000000000ed44	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000ed48	mov	x0, x19
000000000000ed4c	blr	x23
000000000000ed50	ldr	x8, [x0]
000000000000ed54	ldr	x8, [x8, #0x118]
000000000000ed58	add	x0, x8, #0x70
000000000000ed5c	mov	w1, #0x60
000000000000ed60	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000ed64	mov	x22, x0
000000000000ed68	adr	x8, #0x48868
000000000000ed6c	nop
000000000000ed70	str	x8, [x22, #0x10]!
000000000000ed74	stur	xzr, [x22, #-0x8]
000000000000ed78	str	x22, [x20]
000000000000ed7c	mov	x0, x22
000000000000ed80	mov	x1, x21
000000000000ed84	bl	"_kfun:kotlin.collections.HashMap#<init>(kotlin.Int){}"
000000000000ed88	str	x22, [x20]
000000000000ed8c	mov	x0, x19
000000000000ed90	blr	x23
000000000000ed94	ldr	x8, [x0]
000000000000ed98	ldr	x9, [sp, #0x10]
000000000000ed9c	str	x9, [x8, #0x110]
000000000000eda0	mov	x0, x22
000000000000eda4	ldp	x29, x30, [sp, #0x50]
000000000000eda8	ldp	x20, x19, [sp, #0x40]
000000000000edac	ldp	x22, x21, [sp, #0x30]
000000000000edb0	ldp	x24, x23, [sp, #0x20]
000000000000edb4	add	sp, sp, #0x60
000000000000edb8	ret
000000000000edbc	mov	x1, x0
000000000000edc0	mov	x0, x19
000000000000edc4	blr	x23
000000000000edc8	ldr	x8, [x0]
000000000000edcc	ldr	x9, [sp, #0x10]
000000000000edd0	str	x9, [x8, #0x110]
000000000000edd4	mov	x0, x1
000000000000edd8	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
_Kotlin_ObjCExport_ThrowCollectionTooLarge:
000000000000eddc	sub	sp, sp, #0x50
000000000000ede0	stp	x22, x21, [sp, #0x20]
000000000000ede4	stp	x20, x19, [sp, #0x30]
000000000000ede8	stp	x29, x30, [sp, #0x40]
000000000000edec	add	x29, sp, #0x40
000000000000edf0	movi.16b	v0, #0x0
000000000000edf4	stp	q0, q0, [sp]
000000000000edf8	adrp	x19, 90 ; 0x68000
000000000000edfc	add	x19, x19, #0xa00
000000000000ee00	ldr	x21, [x19]
000000000000ee04	mov	x0, x19
000000000000ee08	blr	x21
000000000000ee0c	ldr	x8, [x0]
000000000000ee10	ldr	x9, [x8, #0x110]
000000000000ee14	mov	x10, sp
000000000000ee18	str	x10, [x8, #0x110]
000000000000ee1c	mov	x8, #0x400000000
000000000000ee20	stp	x9, x8, [sp, #0x8]
000000000000ee24	adr	x8, #0x73a1f
000000000000ee28	nop
000000000000ee2c	ldarb	w8, [x8]
000000000000ee30	tbz	w8, #0x0, 0xee38
000000000000ee34	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000ee38	mov	x0, x19
000000000000ee3c	blr	x21
000000000000ee40	ldr	x8, [x0]
000000000000ee44	ldr	x8, [x8, #0x118]
000000000000ee48	add	x0, x8, #0x70
000000000000ee4c	mov	w1, #0x38
000000000000ee50	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000ee54	mov	x20, x0
000000000000ee58	adr	x8, #0x46008
000000000000ee5c	nop
000000000000ee60	str	x8, [x20, #0x10]!
000000000000ee64	stur	xzr, [x20, #-0x8]
000000000000ee68	str	x20, [sp, #0x18]
000000000000ee6c	adr	x1, #0x52894
000000000000ee70	nop
000000000000ee74	mov	x0, x20
000000000000ee78	bl	"_kfun:kotlin.Throwable#<init>(kotlin.String?;kotlin.Throwable?){}"
000000000000ee7c	mov	x0, x20
000000000000ee80	bl	_ThrowException
000000000000ee84	brk	#0x1
000000000000ee88	mov	x1, x0
000000000000ee8c	mov	x0, x19
000000000000ee90	blr	x21
000000000000ee94	ldr	x8, [x0]
000000000000ee98	ldr	x9, [sp, #0x8]
000000000000ee9c	str	x9, [x8, #0x110]
000000000000eea0	mov	x0, x1
000000000000eea4	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
_Kotlin_NSEnumeratorAsKIterator_create:
000000000000eea8	sub	sp, sp, #0xc0
000000000000eeac	stp	x28, x27, [sp, #0x60]
000000000000eeb0	stp	x26, x25, [sp, #0x70]
000000000000eeb4	stp	x24, x23, [sp, #0x80]
000000000000eeb8	stp	x22, x21, [sp, #0x90]
000000000000eebc	stp	x20, x19, [sp, #0xa0]
000000000000eec0	stp	x29, x30, [sp, #0xb0]
000000000000eec4	add	x29, sp, #0xb0
000000000000eec8	mov	x20, x0
000000000000eecc	str	xzr, [sp, #0x18]
000000000000eed0	adrp	x19, 90 ; 0x68000
000000000000eed4	add	x19, x19, #0xa00
000000000000eed8	ldr	x26, [x19]
000000000000eedc	mov	x0, x19
000000000000eee0	blr	x26
000000000000eee4	ldr	x8, [x0]
000000000000eee8	ldr	x9, [x8, #0x110]
000000000000eeec	add	x10, sp, #0x18
000000000000eef0	str	x10, [x8, #0x110]
000000000000eef4	mov	x8, #0x300000000
000000000000eef8	stp	x9, x8, [sp, #0x20]
000000000000eefc	adr	x25, #0x73947
000000000000ef00	nop
000000000000ef04	ldarb	w8, [x25]
000000000000ef08	tbz	w8, #0x0, 0xef10
000000000000ef0c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000ef10	mov	x0, x19
000000000000ef14	blr	x26
000000000000ef18	mov	x23, x0
000000000000ef1c	ldr	x8, [x0]
000000000000ef20	ldr	x8, [x8, #0x118]
000000000000ef24	add	x0, x8, #0x70
000000000000ef28	mov	w1, #0x20
000000000000ef2c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000ef30	mov	x22, x0
000000000000ef34	adr	x8, #0x4742c
000000000000ef38	nop
000000000000ef3c	mov	x21, x0
000000000000ef40	str	x8, [x21, #0x10]!
000000000000ef44	str	xzr, [x0, #0x8]
000000000000ef48	str	x21, [x20]
000000000000ef4c	ldr	x8, [x23]
000000000000ef50	ldr	x9, [x8, #0x110]
000000000000ef54	add	x10, sp, #0x30
000000000000ef58	str	x10, [x8, #0x110]
000000000000ef5c	movi.16b	v0, #0x0
000000000000ef60	stp	q0, q0, [sp, #0x30]
000000000000ef64	str	xzr, [sp, #0x50]
000000000000ef68	mov	x8, #0x500000000
000000000000ef6c	stp	x9, x8, [sp, #0x38]
000000000000ef70	adr	x27, #0x73950
000000000000ef74	nop
000000000000ef78	ldar	x23, [x27]
000000000000ef7c	cmp	x23, #0x2
000000000000ef80	b.hs	0xf160
000000000000ef84	mov	x0, x19
000000000000ef88	blr	x26
000000000000ef8c	ldr	x28, [x0]
000000000000ef90	ldp	x8, x9, [x28, #0x120]
000000000000ef94	cmp	x8, x9
000000000000ef98	b.eq	0xefb8
000000000000ef9c	mov	x10, x9
000000000000efa0	ldr	x11, [x10, #-0x10]!
000000000000efa4	cmp	x11, x27
000000000000efa8	b.eq	0xf074
000000000000efac	mov	x9, x10
000000000000efb0	cmp	x10, x8
000000000000efb4	b.ne	0xefa0
000000000000efb8	add	x8, x28, #0x120
000000000000efbc	str	x8, [sp, #0x10]
000000000000efc0	add	x0, x28, #0x138
000000000000efc4	mov	w9, #0x1
000000000000efc8	ldaxr	w8, [x0]
000000000000efcc	stlxr	w10, w9, [x0]
000000000000efd0	cbnz	w10, 0xefc8
000000000000efd4	b	0xefe4
000000000000efd8	mov	w24, #0x1
000000000000efdc	stlxr	w9, x24, [x27]
000000000000efe0	cbz	w9, 0xeff4
000000000000efe4	ldaxr	x23, [x27]
000000000000efe8	cbz	x23, 0xefd8
000000000000efec	mov	w24, #0x0
000000000000eff0	clrex
000000000000eff4	cmp	x23, #0x1
000000000000eff8	b.eq	0xefe4
000000000000effc	cbz	x28, 0xf024
000000000000f000	ldaxr	w9, [x0]
000000000000f004	stlxr	w10, w8, [x0]
000000000000f008	cbnz	w10, 0xf000
000000000000f00c	cbnz	w8, 0xf024
000000000000f010	cmp	w9, #0x1
000000000000f014	b.ne	0xf024
000000000000f018	ldarb	w8, [x25]
000000000000f01c	tbz	w8, #0x0, 0xf024
000000000000f020	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000000f024	tbz	w24, #0x0, 0xf06c
000000000000f028	ldr	x8, [x28, #0x118]
000000000000f02c	add	x0, x8, #0x70
000000000000f030	mov	w1, #0x20
000000000000f034	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000f038	mov	x23, x0
000000000000f03c	adr	x8, #0x495e4
000000000000f040	nop
000000000000f044	str	x8, [x23, #0x10]!
000000000000f048	stur	xzr, [x23, #-0x8]
000000000000f04c	str	x23, [sp, #0x48]
000000000000f050	ldp	x9, x8, [x28, #0x128]
000000000000f054	cmp	x9, x8
000000000000f058	b.hs	0xf080
000000000000f05c	stp	x27, x23, [x9]
000000000000f060	add	x8, x9, #0x10
000000000000f064	str	x8, [x28, #0x128]
000000000000f068	b	0xf114
000000000000f06c	str	x23, [sp, #0x48]
000000000000f070	b	0xf160
000000000000f074	ldur	x23, [x9, #-0x8]
000000000000f078	str	x23, [sp, #0x48]
000000000000f07c	b	0xf160
000000000000f080	ldr	x10, [sp, #0x10]
000000000000f084	ldr	x10, [x10]
000000000000f088	sub	x9, x9, x10
000000000000f08c	asr	x24, x9, #4
000000000000f090	add	x9, x24, #0x1
000000000000f094	lsr	x11, x9, #60
000000000000f098	cbnz	x11, 0xf1cc
000000000000f09c	sub	x8, x8, x10
000000000000f0a0	asr	x10, x8, #3
000000000000f0a4	cmp	x10, x9
000000000000f0a8	csel	x9, x9, x10, lo
000000000000f0ac	mov	x10, #0x7ffffffffffffff
000000000000f0b0	cmp	x10, x8, asr #4
000000000000f0b4	mov	x8, #0xfffffffffffffff
000000000000f0b8	csel	x25, x9, x8, hi
000000000000f0bc	mov	x0, x25
000000000000f0c0	mov	w1, #0x10
000000000000f0c4	bl	0x4db20 ; symbol stub for: _calloc
000000000000f0c8	add	x8, x0, x24, lsl #4
000000000000f0cc	add	x10, x0, x25, lsl #4
000000000000f0d0	stp	x27, x23, [x8]
000000000000f0d4	add	x24, x8, #0x10
000000000000f0d8	ldp	x1, x9, [x28, #0x120]
000000000000f0dc	sub	x2, x9, x1
000000000000f0e0	sub	x25, x8, x2
000000000000f0e4	cmp	x2, #0x1
000000000000f0e8	b.lt	0xf100
000000000000f0ec	mov	x0, x25
000000000000f0f0	str	x10, [sp, #0x8]
000000000000f0f4	bl	0x4dbec ; symbol stub for: _memcpy
000000000000f0f8	ldp	x10, x8, [sp, #0x8]
000000000000f0fc	ldr	x1, [x8]
000000000000f100	stp	x25, x24, [x28, #0x120]
000000000000f104	str	x10, [x28, #0x130]
000000000000f108	cbz	x1, 0xf114
000000000000f10c	mov	x0, x1
000000000000f110	bl	0x4dba4 ; symbol stub for: _free
000000000000f114	mov	x0, x23
000000000000f118	bl	"_kfun:kotlin.collections.State.$OBJECT.<init>#internal"
000000000000f11c	mov	w0, #0x1
000000000000f120	mov	w1, #0x28
000000000000f124	bl	0x4db20 ; symbol stub for: _calloc
000000000000f128	ldr	x8, [x28, #0x18]!
000000000000f12c	sub	x9, x28, #0x8
000000000000f130	stp	x27, x9, [x0, #0x10]
000000000000f134	stp	x8, x28, [x0]
000000000000f138	str	x0, [x8, #0x8]
000000000000f13c	str	x0, [x28]
000000000000f140	ldr	x8, [x28, #0x10]
000000000000f144	add	x8, x8, #0x1
000000000000f148	str	x8, [x28, #0x10]
000000000000f14c	str	x0, [x0, #0x20]
000000000000f150	stlr	x23, [x27]
000000000000f154	ldr	x8, [x28, #0x110]
000000000000f158	sub	x8, x8, #0x10
000000000000f15c	str	x8, [x28, #0x110]
000000000000f160	ldr	x8, [x23, #0x8]
000000000000f164	ldr	w9, [x8, #0x8]
000000000000f168	cmp	w9, #0x2
000000000000f16c	b.ls	0xf1c4
000000000000f170	ldr	x8, [x8, #0x20]
000000000000f174	str	x8, [sp, #0x50]
000000000000f178	str	x8, [x22, #0x18]
000000000000f17c	mov	x0, x19
000000000000f180	blr	x26
000000000000f184	ldr	x8, [x0]
000000000000f188	ldr	x9, [sp, #0x38]
000000000000f18c	str	x9, [x8, #0x110]
000000000000f190	str	x21, [x20]
000000000000f194	ldr	x8, [x0]
000000000000f198	ldr	x9, [sp, #0x20]
000000000000f19c	str	x9, [x8, #0x110]
000000000000f1a0	mov	x0, x21
000000000000f1a4	ldp	x29, x30, [sp, #0xb0]
000000000000f1a8	ldp	x20, x19, [sp, #0xa0]
000000000000f1ac	ldp	x22, x21, [sp, #0x90]
000000000000f1b0	ldp	x24, x23, [sp, #0x80]
000000000000f1b4	ldp	x26, x25, [sp, #0x70]
000000000000f1b8	ldp	x28, x27, [sp, #0x60]
000000000000f1bc	add	sp, sp, #0xc0
000000000000f1c0	ret
000000000000f1c4	bl	_ThrowArrayIndexOutOfBoundsException
000000000000f1c8	b	0xf1f4
000000000000f1cc	ldr	x0, [sp, #0x10]
000000000000f1d0	bl	0x4d8ec ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
000000000000f1d4	b	0xf1f4
000000000000f1d8	bl	0x4da78 ; symbol stub for: ___cxa_begin_catch
000000000000f1dc	str	xzr, [sp, #0x48]
000000000000f1e0	stlr	xzr, [x27]
000000000000f1e4	ldr	x8, [x28, #0x128]
000000000000f1e8	sub	x8, x8, #0x10
000000000000f1ec	str	x8, [x28, #0x128]
000000000000f1f0	bl	0x4daa8 ; symbol stub for: ___cxa_rethrow
000000000000f1f4	brk	#0x1
000000000000f1f8	mov	x20, x0
000000000000f1fc	bl	0x4da84 ; symbol stub for: ___cxa_end_catch
000000000000f200	b	0xf208
000000000000f204	mov	x20, x0
000000000000f208	mov	x0, x19
000000000000f20c	blr	x26
000000000000f210	ldr	x8, [x0]
000000000000f214	ldr	x9, [sp, #0x20]
000000000000f218	str	x9, [x8, #0x110]
000000000000f21c	mov	x0, x20
000000000000f220	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
_kfun:kotlin.native.internal.NSArrayAsKList#<get-size>(){}kotlin.Int:
000000000000f224	stp	x20, x19, [sp, #-0x20]!
000000000000f228	stp	x29, x30, [sp, #0x10]
000000000000f22c	add	x29, sp, #0x10
000000000000f230	mov	x19, x0
000000000000f234	adr	x8, #0x7360f
000000000000f238	nop
000000000000f23c	ldarb	w8, [x8]
000000000000f240	tbz	w8, #0x0, 0xf248
000000000000f244	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000f248	ldar	x8, [x19]
000000000000f24c	and	x8, x8, #0xfffffffffffffffc
000000000000f250	ldr	x9, [x8]
000000000000f254	cmp	x8, #0x0
000000000000f258	ccmp	x9, x8, #0x4, ne
000000000000f25c	b.ne	0xf268
000000000000f260	mov	x0, #0x0
000000000000f264	b	0xf270
000000000000f268	add	x8, x8, #0x10
000000000000f26c	ldar	x0, [x8]
000000000000f270	nop
000000000000f274	ldr	x1, #0x571dc ; Objc selector ref: count
000000000000f278	bl	0x4dcb8 ; Objc message: -[x0 count]
000000000000f27c	lsr	x8, x0, #31
000000000000f280	cbnz	x8, 0xf290
000000000000f284	ldp	x29, x30, [sp, #0x10]
000000000000f288	ldp	x20, x19, [sp], #0x20
000000000000f28c	ret
000000000000f290	bl	_Kotlin_ObjCExport_ThrowCollectionTooLarge
_kfun:kotlin.native.internal.NSMutableArrayAsKMutableList#<get-size>(){}kotlin.Int:
000000000000f294	stp	x20, x19, [sp, #-0x20]!
000000000000f298	stp	x29, x30, [sp, #0x10]
000000000000f29c	add	x29, sp, #0x10
000000000000f2a0	mov	x19, x0
000000000000f2a4	adr	x8, #0x7359f
000000000000f2a8	nop
000000000000f2ac	ldarb	w8, [x8]
000000000000f2b0	tbz	w8, #0x0, 0xf2b8
000000000000f2b4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000f2b8	ldar	x8, [x19]
000000000000f2bc	and	x8, x8, #0xfffffffffffffffc
000000000000f2c0	ldr	x9, [x8]
000000000000f2c4	cmp	x8, #0x0
000000000000f2c8	ccmp	x9, x8, #0x4, ne
000000000000f2cc	b.ne	0xf2d8
000000000000f2d0	mov	x0, #0x0
000000000000f2d4	b	0xf2e0
000000000000f2d8	add	x8, x8, #0x10
000000000000f2dc	ldar	x0, [x8]
000000000000f2e0	nop
000000000000f2e4	ldr	x1, #0x5716c ; Objc selector ref: count
000000000000f2e8	bl	0x4dcb8 ; Objc message: -[x0 count]
000000000000f2ec	lsr	x8, x0, #31
000000000000f2f0	cbnz	x8, 0xf300
000000000000f2f4	ldp	x29, x30, [sp, #0x10]
000000000000f2f8	ldp	x20, x19, [sp], #0x20
000000000000f2fc	ret
000000000000f300	bl	_Kotlin_ObjCExport_ThrowCollectionTooLarge
_kfun:kotlin.native.internal.NSSetAsKSet#<get-size>(){}kotlin.Int:
000000000000f304	stp	x20, x19, [sp, #-0x20]!
000000000000f308	stp	x29, x30, [sp, #0x10]
000000000000f30c	add	x29, sp, #0x10
000000000000f310	mov	x19, x0
000000000000f314	adr	x8, #0x7352f
000000000000f318	nop
000000000000f31c	ldarb	w8, [x8]
000000000000f320	tbz	w8, #0x0, 0xf328
000000000000f324	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000f328	ldar	x8, [x19]
000000000000f32c	and	x8, x8, #0xfffffffffffffffc
000000000000f330	ldr	x9, [x8]
000000000000f334	cmp	x8, #0x0
000000000000f338	ccmp	x9, x8, #0x4, ne
000000000000f33c	b.ne	0xf348
000000000000f340	mov	x0, #0x0
000000000000f344	b	0xf350
000000000000f348	add	x8, x8, #0x10
000000000000f34c	ldar	x0, [x8]
000000000000f350	nop
000000000000f354	ldr	x1, #0x570fc ; Objc selector ref: count
000000000000f358	bl	0x4dcb8 ; Objc message: -[x0 count]
000000000000f35c	lsr	x8, x0, #31
000000000000f360	cbnz	x8, 0xf370
000000000000f364	ldp	x29, x30, [sp, #0x10]
000000000000f368	ldp	x20, x19, [sp], #0x20
000000000000f36c	ret
000000000000f370	bl	_Kotlin_ObjCExport_ThrowCollectionTooLarge
_kfun:kotlin.native.internal.NSDictionaryAsKMap#equals(kotlin.Any?){}kotlin.Boolean:
000000000000f374	sub	sp, sp, #0xa0
000000000000f378	stp	x28, x27, [sp, #0x40]
000000000000f37c	stp	x26, x25, [sp, #0x50]
000000000000f380	stp	x24, x23, [sp, #0x60]
000000000000f384	stp	x22, x21, [sp, #0x70]
000000000000f388	stp	x20, x19, [sp, #0x80]
000000000000f38c	stp	x29, x30, [sp, #0x90]
000000000000f390	add	x29, sp, #0x90
000000000000f394	mov	x20, x1
000000000000f398	mov	x19, x0
000000000000f39c	movi.16b	v0, #0x0
000000000000f3a0	stp	q0, q0, [sp]
000000000000f3a4	stp	q0, q0, [sp, #0x20]
000000000000f3a8	mov	x22, sp
000000000000f3ac	adrp	x0, 89 ; 0x68000
000000000000f3b0	add	x0, x0, #0xa00
000000000000f3b4	ldr	x8, [x0]
000000000000f3b8	blr	x8
000000000000f3bc	ldr	x26, [x0]
000000000000f3c0	ldr	x8, [x26, #0x110]
000000000000f3c4	str	x22, [x26, #0x110]
000000000000f3c8	mov	x9, #0x800000000
000000000000f3cc	stp	x8, x9, [sp, #0x8]
000000000000f3d0	adr	x8, #0x73473
000000000000f3d4	nop
000000000000f3d8	ldarb	w8, [x8]
000000000000f3dc	tbz	w8, #0x0, 0xf3e4
000000000000f3e0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000f3e4	cmp	x19, x20
000000000000f3e8	b.eq	0xf844
000000000000f3ec	cbz	x20, 0xfc68
000000000000f3f0	ldr	x8, [x20]
000000000000f3f4	and	x8, x8, #0xfffffffffffffffc
000000000000f3f8	ldr	x8, [x8]
000000000000f3fc	ldr	w9, [x8, #0x3c]
000000000000f400	ldr	x8, [x8, #0x40]
000000000000f404	tbnz	w9, #0x1f, 0xf424
000000000000f408	mov	w10, #0x41
000000000000f40c	and	x9, x9, x10
000000000000f410	lsl	x9, x9, #4
000000000000f414	ldr	w8, [x8, x9]
000000000000f418	cmp	w8, #0x41
000000000000f41c	b.eq	0xf4f4
000000000000f420	b	0xfc68
000000000000f424	neg	w10, w9
000000000000f428	mvn	w9, w9
000000000000f42c	cmp	w10, #0x9
000000000000f430	b.ge	0xf47c
000000000000f434	cmp	w10, #0x2
000000000000f438	b.lt	0xf4c4
000000000000f43c	mov	x10, #0x0
000000000000f440	mov	x11, x8
000000000000f444	ldr	w12, [x11]
000000000000f448	cmp	w12, #0x40
000000000000f44c	b.gt	0xf4e0
000000000000f450	add	x10, x10, #0x1
000000000000f454	add	x11, x11, #0x10
000000000000f458	cmp	x9, x10
000000000000f45c	b.ne	0xf444
000000000000f460	mov	x10, x9
000000000000f464	sxtw	x9, w10
000000000000f468	lsl	x9, x9, #4
000000000000f46c	ldr	w8, [x8, x9]
000000000000f470	cmp	w8, #0x41
000000000000f474	b.ne	0xfc68
000000000000f478	b	0xf4f4
000000000000f47c	mov	w10, #0x0
000000000000f480	add	w11, w9, w10
000000000000f484	cmp	w11, #0x0
000000000000f488	cinc	w11, w11, lt
000000000000f48c	asr	w11, w11, #1
000000000000f490	sbfiz	x12, x11, #4, #32
000000000000f494	ldr	w12, [x8, x12]
000000000000f498	cmp	w12, #0x41
000000000000f49c	csinc	w10, w10, w11, ge
000000000000f4a0	csel	w9, w9, w11, lt
000000000000f4a4	cmp	w10, w9
000000000000f4a8	b.lt	0xf480
000000000000f4ac	sxtw	x9, w10
000000000000f4b0	lsl	x9, x9, #4
000000000000f4b4	ldr	w8, [x8, x9]
000000000000f4b8	cmp	w8, #0x41
000000000000f4bc	b.ne	0xfc68
000000000000f4c0	b	0xf4f4
000000000000f4c4	mov	w10, #0x0
000000000000f4c8	sxtw	x9, w10
000000000000f4cc	lsl	x9, x9, #4
000000000000f4d0	ldr	w8, [x8, x9]
000000000000f4d4	cmp	w8, #0x41
000000000000f4d8	b.ne	0xfc68
000000000000f4dc	b	0xf4f4
000000000000f4e0	sxtw	x9, w10
000000000000f4e4	lsl	x9, x9, #4
000000000000f4e8	ldr	w8, [x8, x9]
000000000000f4ec	cmp	w8, #0x41
000000000000f4f0	b.ne	0xfc68
000000000000f4f4	mov	x0, #0x0
000000000000f4f8	ldar	x8, [x19]
000000000000f4fc	ands	x8, x8, #0xfffffffffffffffc
000000000000f500	b.eq	0xf518
000000000000f504	ldr	x9, [x8]
000000000000f508	cmp	x9, x8
000000000000f50c	b.eq	0xf518
000000000000f510	add	x8, x8, #0x10
000000000000f514	ldar	x0, [x8]
000000000000f518	nop
000000000000f51c	ldr	x1, #0x56f34 ; Objc selector ref: count
000000000000f520	bl	0x4dcb8 ; Objc message: -[x0 count]
000000000000f524	lsr	x8, x0, #31
000000000000f528	cbnz	x8, 0xfc94
000000000000f52c	mov	x21, x0
000000000000f530	ldr	x8, [x20]
000000000000f534	and	x8, x8, #0xfffffffffffffffc
000000000000f538	ldr	x8, [x8]
000000000000f53c	ldr	w9, [x8, #0x3c]
000000000000f540	ldr	x8, [x8, #0x40]
000000000000f544	tbnz	w9, #0x1f, 0xf554
000000000000f548	mov	w10, #0x41
000000000000f54c	and	x9, x9, x10
000000000000f550	b	0xf5d8
000000000000f554	neg	w10, w9
000000000000f558	mvn	w9, w9
000000000000f55c	cmp	w10, #0x9
000000000000f560	b.ge	0xf598
000000000000f564	cmp	w10, #0x2
000000000000f568	b.lt	0xf5cc
000000000000f56c	mov	x10, #0x0
000000000000f570	mov	x11, x8
000000000000f574	ldr	w12, [x11]
000000000000f578	cmp	w12, #0x40
000000000000f57c	b.gt	0xf5d4
000000000000f580	add	x10, x10, #0x1
000000000000f584	add	x11, x11, #0x10
000000000000f588	cmp	x9, x10
000000000000f58c	b.ne	0xf574
000000000000f590	mov	x10, x9
000000000000f594	b	0xf5d4
000000000000f598	mov	w10, #0x0
000000000000f59c	add	w11, w9, w10
000000000000f5a0	cmp	w11, #0x0
000000000000f5a4	cinc	w11, w11, lt
000000000000f5a8	asr	w11, w11, #1
000000000000f5ac	sbfiz	x12, x11, #4, #32
000000000000f5b0	ldr	w12, [x8, x12]
000000000000f5b4	cmp	w12, #0x41
000000000000f5b8	csinc	w10, w10, w11, ge
000000000000f5bc	csel	w9, w9, w11, lt
000000000000f5c0	cmp	w10, w9
000000000000f5c4	b.lt	0xf59c
000000000000f5c8	b	0xf5d4
000000000000f5cc	mov	w10, #0x0
000000000000f5d0	b	0xf5d4
000000000000f5d4	sxtw	x9, w10
000000000000f5d8	add	x8, x8, x9, lsl #4
000000000000f5dc	ldr	x8, [x8, #0x8]
000000000000f5e0	ldr	x8, [x8, #0x10]
000000000000f5e4	mov	x0, x20
000000000000f5e8	blr	x8
000000000000f5ec	cmp	w0, w21
000000000000f5f0	b.ne	0xfc68
000000000000f5f4	add	x1, x22, #0x18
000000000000f5f8	ldr	x8, [x20]
000000000000f5fc	and	x8, x8, #0xfffffffffffffffc
000000000000f600	ldr	x8, [x8]
000000000000f604	ldr	w9, [x8, #0x3c]
000000000000f608	ldr	x8, [x8, #0x40]
000000000000f60c	tbnz	w9, #0x1f, 0xf61c
000000000000f610	mov	w10, #0x41
000000000000f614	and	x9, x9, x10
000000000000f618	b	0xf6a0
000000000000f61c	neg	w10, w9
000000000000f620	mvn	w9, w9
000000000000f624	cmp	w10, #0x9
000000000000f628	b.ge	0xf660
000000000000f62c	cmp	w10, #0x2
000000000000f630	b.lt	0xf694
000000000000f634	mov	x10, #0x0
000000000000f638	mov	x11, x8
000000000000f63c	ldr	w12, [x11]
000000000000f640	cmp	w12, #0x40
000000000000f644	b.gt	0xf69c
000000000000f648	add	x10, x10, #0x1
000000000000f64c	add	x11, x11, #0x10
000000000000f650	cmp	x9, x10
000000000000f654	b.ne	0xf63c
000000000000f658	mov	x10, x9
000000000000f65c	b	0xf69c
000000000000f660	mov	w10, #0x0
000000000000f664	add	w11, w9, w10
000000000000f668	cmp	w11, #0x0
000000000000f66c	cinc	w11, w11, lt
000000000000f670	asr	w11, w11, #1
000000000000f674	sbfiz	x12, x11, #4, #32
000000000000f678	ldr	w12, [x8, x12]
000000000000f67c	cmp	w12, #0x41
000000000000f680	csinc	w10, w10, w11, ge
000000000000f684	csel	w9, w9, w11, lt
000000000000f688	cmp	w10, w9
000000000000f68c	b.lt	0xf664
000000000000f690	b	0xf69c
000000000000f694	mov	w10, #0x0
000000000000f698	b	0xf69c
000000000000f69c	sxtw	x9, w10
000000000000f6a0	add	x8, x8, x9, lsl #4
000000000000f6a4	ldr	x8, [x8, #0x8]
000000000000f6a8	ldr	x8, [x8]
000000000000f6ac	mov	x0, x20
000000000000f6b0	blr	x8
000000000000f6b4	mov	x23, x0
000000000000f6b8	cbz	x0, 0xf84c
000000000000f6bc	ldr	x8, [x23]
000000000000f6c0	and	x8, x8, #0xfffffffffffffffc
000000000000f6c4	ldr	x8, [x8]
000000000000f6c8	ldr	w9, [x8, #0x3c]
000000000000f6cc	ldr	x8, [x8, #0x40]
000000000000f6d0	tbnz	w9, #0x1f, 0xf6f0
000000000000f6d4	mov	w10, #0x12
000000000000f6d8	and	x9, x9, x10
000000000000f6dc	lsl	x9, x9, #4
000000000000f6e0	ldr	w8, [x8, x9]
000000000000f6e4	cmp	w8, #0x12
000000000000f6e8	b.ne	0xf84c
000000000000f6ec	b	0xf784
000000000000f6f0	neg	w10, w9
000000000000f6f4	mvn	w9, w9
000000000000f6f8	cmp	w10, #0x9
000000000000f6fc	b.ge	0xf734
000000000000f700	cmp	w10, #0x2
000000000000f704	b.lt	0xf768
000000000000f708	mov	x10, #0x0
000000000000f70c	mov	x11, x8
000000000000f710	ldr	w12, [x11]
000000000000f714	cmp	w12, #0x11
000000000000f718	b.gt	0xf770
000000000000f71c	add	x10, x10, #0x1
000000000000f720	add	x11, x11, #0x10
000000000000f724	cmp	x9, x10
000000000000f728	b.ne	0xf710
000000000000f72c	mov	x10, x9
000000000000f730	b	0xf770
000000000000f734	mov	w10, #0x0
000000000000f738	add	w11, w9, w10
000000000000f73c	cmp	w11, #0x0
000000000000f740	cinc	w11, w11, lt
000000000000f744	asr	w11, w11, #1
000000000000f748	sbfiz	x12, x11, #4, #32
000000000000f74c	ldr	w12, [x8, x12]
000000000000f750	cmp	w12, #0x12
000000000000f754	csinc	w10, w10, w11, ge
000000000000f758	csel	w9, w9, w11, lt
000000000000f75c	cmp	w10, w9
000000000000f760	b.lt	0xf738
000000000000f764	b	0xf770
000000000000f768	mov	w10, #0x0
000000000000f76c	b	0xf770
000000000000f770	sxtw	x9, w10
000000000000f774	lsl	x9, x9, #4
000000000000f778	ldr	w8, [x8, x9]
000000000000f77c	cmp	w8, #0x12
000000000000f780	b.ne	0xf84c
000000000000f784	ldr	x8, [x23]
000000000000f788	and	x8, x8, #0xfffffffffffffffc
000000000000f78c	ldr	x8, [x8]
000000000000f790	ldr	w9, [x8, #0x3c]
000000000000f794	ldr	x8, [x8, #0x40]
000000000000f798	tbnz	w9, #0x1f, 0xf7a8
000000000000f79c	mov	w10, #0x12
000000000000f7a0	and	x9, x9, x10
000000000000f7a4	b	0xf82c
000000000000f7a8	neg	w10, w9
000000000000f7ac	mvn	w9, w9
000000000000f7b0	cmp	w10, #0x9
000000000000f7b4	b.ge	0xf7ec
000000000000f7b8	cmp	w10, #0x2
000000000000f7bc	b.lt	0xf820
000000000000f7c0	mov	x10, #0x0
000000000000f7c4	mov	x11, x8
000000000000f7c8	ldr	w12, [x11]
000000000000f7cc	cmp	w12, #0x11
000000000000f7d0	b.gt	0xf828
000000000000f7d4	add	x10, x10, #0x1
000000000000f7d8	add	x11, x11, #0x10
000000000000f7dc	cmp	x9, x10
000000000000f7e0	b.ne	0xf7c8
000000000000f7e4	mov	x10, x9
000000000000f7e8	b	0xf828
000000000000f7ec	mov	w10, #0x0
000000000000f7f0	add	w11, w9, w10
000000000000f7f4	cmp	w11, #0x0
000000000000f7f8	cinc	w11, w11, lt
000000000000f7fc	asr	w11, w11, #1
000000000000f800	sbfiz	x12, x11, #4, #32
000000000000f804	ldr	w12, [x8, x12]
000000000000f808	cmp	w12, #0x12
000000000000f80c	csinc	w10, w10, w11, ge
000000000000f810	csel	w9, w9, w11, lt
000000000000f814	cmp	w10, w9
000000000000f818	b.lt	0xf7f0
000000000000f81c	b	0xf828
000000000000f820	mov	w10, #0x0
000000000000f824	b	0xf828
000000000000f828	sxtw	x9, w10
000000000000f82c	add	x8, x8, x9, lsl #4
000000000000f830	ldr	x8, [x8, #0x8]
000000000000f834	ldr	x8, [x8, #0x18]
000000000000f838	mov	x0, x23
000000000000f83c	blr	x8
000000000000f840	tbz	w0, #0x0, 0xf84c
000000000000f844	mov	w0, #0x1
000000000000f848	b	0xfc6c
000000000000f84c	add	x1, x22, #0x20
000000000000f850	add	x20, x22, #0x30
000000000000f854	add	x21, x22, #0x28
000000000000f858	add	x22, x22, #0x38
000000000000f85c	ldr	x8, [x23]
000000000000f860	and	x8, x8, #0xfffffffffffffffc
000000000000f864	ldr	x8, [x8]
000000000000f868	ldr	w9, [x8, #0x3c]
000000000000f86c	ldr	x8, [x8, #0x40]
000000000000f870	tbnz	w9, #0x1f, 0xf880
000000000000f874	mov	w10, #0x31
000000000000f878	and	x9, x9, x10
000000000000f87c	b	0xf904
000000000000f880	neg	w10, w9
000000000000f884	mvn	w9, w9
000000000000f888	cmp	w10, #0x9
000000000000f88c	b.ge	0xf8c4
000000000000f890	cmp	w10, #0x2
000000000000f894	b.lt	0xf8f8
000000000000f898	mov	x10, #0x0
000000000000f89c	mov	x11, x8
000000000000f8a0	ldr	w12, [x11]
000000000000f8a4	cmp	w12, #0x30
000000000000f8a8	b.gt	0xf900
000000000000f8ac	add	x10, x10, #0x1
000000000000f8b0	add	x11, x11, #0x10
000000000000f8b4	cmp	x9, x10
000000000000f8b8	b.ne	0xf8a0
000000000000f8bc	mov	x10, x9
000000000000f8c0	b	0xf900
000000000000f8c4	mov	w10, #0x0
000000000000f8c8	add	w11, w9, w10
000000000000f8cc	cmp	w11, #0x0
000000000000f8d0	cinc	w11, w11, lt
000000000000f8d4	asr	w11, w11, #1
000000000000f8d8	sbfiz	x12, x11, #4, #32
000000000000f8dc	ldr	w12, [x8, x12]
000000000000f8e0	cmp	w12, #0x31
000000000000f8e4	csinc	w10, w10, w11, ge
000000000000f8e8	csel	w9, w9, w11, lt
000000000000f8ec	cmp	w10, w9
000000000000f8f0	b.lt	0xf8c8
000000000000f8f4	b	0xf900
000000000000f8f8	mov	w10, #0x0
000000000000f8fc	b	0xf900
000000000000f900	sxtw	x9, w10
000000000000f904	add	x8, x8, x9, lsl #4
000000000000f908	ldr	x8, [x8, #0x8]
000000000000f90c	ldr	x8, [x8]
000000000000f910	mov	x0, x23
000000000000f914	blr	x8
000000000000f918	mov	x23, x0
000000000000f91c	mov	w28, #0xa0
000000000000f920	mov	w27, #0xa8
000000000000f924	b	0xf958
000000000000f928	and	x9, x9, x27
000000000000f92c	add	x8, x8, x9, lsl #4
000000000000f930	ldr	x8, [x8, #0x8]
000000000000f934	ldr	x8, [x8, #0x8]
000000000000f938	mov	x0, x24
000000000000f93c	mov	x1, x22
000000000000f940	blr	x8
000000000000f944	mov	x2, x0
000000000000f948	mov	x0, x19
000000000000f94c	mov	x1, x25
000000000000f950	bl	_Kotlin_NSDictionaryAsKMap_containsEntry
000000000000f954	tbz	w0, #0x0, 0xfc68
000000000000f958	ldr	x8, [x23]
000000000000f95c	and	x8, x8, #0xfffffffffffffffc
000000000000f960	ldr	x8, [x8]
000000000000f964	ldr	w9, [x8, #0x3c]
000000000000f968	ldr	x8, [x8, #0x40]
000000000000f96c	tbnz	w9, #0x1f, 0xf990
000000000000f970	and	x9, x9, x28
000000000000f974	add	x8, x8, x9, lsl #4
000000000000f978	ldr	x8, [x8, #0x8]
000000000000f97c	ldr	x8, [x8]
000000000000f980	mov	x0, x23
000000000000f984	blr	x8
000000000000f988	tbnz	w0, #0x0, 0xfa2c
000000000000f98c	b	0xf844
000000000000f990	neg	w10, w9
000000000000f994	mvn	w9, w9
000000000000f998	cmp	w10, #0x9
000000000000f99c	b.ge	0xf9d4
000000000000f9a0	cmp	w10, #0x2
000000000000f9a4	b.lt	0xfa08
000000000000f9a8	mov	x10, #0x0
000000000000f9ac	mov	x11, x8
000000000000f9b0	ldr	w12, [x11]
000000000000f9b4	cmp	w12, #0x9f
000000000000f9b8	b.gt	0xfa10
000000000000f9bc	add	x10, x10, #0x1
000000000000f9c0	add	x11, x11, #0x10
000000000000f9c4	cmp	x9, x10
000000000000f9c8	b.ne	0xf9b0
000000000000f9cc	mov	x10, x9
000000000000f9d0	b	0xfa10
000000000000f9d4	mov	w10, #0x0
000000000000f9d8	add	w11, w9, w10
000000000000f9dc	cmp	w11, #0x0
000000000000f9e0	cinc	w11, w11, lt
000000000000f9e4	asr	w11, w11, #1
000000000000f9e8	sbfiz	x12, x11, #4, #32
000000000000f9ec	ldr	w12, [x8, x12]
000000000000f9f0	cmp	w12, #0xa0
000000000000f9f4	csinc	w10, w10, w11, ge
000000000000f9f8	csel	w9, w9, w11, lt
000000000000f9fc	cmp	w10, w9
000000000000fa00	b.lt	0xf9d8
000000000000fa04	b	0xfa10
000000000000fa08	mov	w10, #0x0
000000000000fa0c	b	0xfa10
000000000000fa10	sxtw	x9, w10
000000000000fa14	add	x8, x8, x9, lsl #4
000000000000fa18	ldr	x8, [x8, #0x8]
000000000000fa1c	ldr	x8, [x8]
000000000000fa20	mov	x0, x23
000000000000fa24	blr	x8
000000000000fa28	tbz	w0, #0x0, 0xf844
000000000000fa2c	adr	x8, #0x72e17
000000000000fa30	nop
000000000000fa34	ldarb	w8, [x8]
000000000000fa38	tbz	w8, #0x0, 0xfa40
000000000000fa3c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000fa40	ldr	x8, [x23]
000000000000fa44	and	x8, x8, #0xfffffffffffffffc
000000000000fa48	ldr	x8, [x8]
000000000000fa4c	ldr	w9, [x8, #0x3c]
000000000000fa50	ldr	x8, [x8, #0x40]
000000000000fa54	tbnz	w9, #0x1f, 0xfa60
000000000000fa58	and	x9, x9, x28
000000000000fa5c	b	0xfae4
000000000000fa60	neg	w10, w9
000000000000fa64	mvn	w9, w9
000000000000fa68	cmp	w10, #0x9
000000000000fa6c	b.ge	0xfaa4
000000000000fa70	cmp	w10, #0x2
000000000000fa74	b.lt	0xfad8
000000000000fa78	mov	x10, #0x0
000000000000fa7c	mov	x11, x8
000000000000fa80	ldr	w12, [x11]
000000000000fa84	cmp	w12, #0x9f
000000000000fa88	b.gt	0xfae0
000000000000fa8c	add	x10, x10, #0x1
000000000000fa90	add	x11, x11, #0x10
000000000000fa94	cmp	x9, x10
000000000000fa98	b.ne	0xfa80
000000000000fa9c	mov	x10, x9
000000000000faa0	b	0xfae0
000000000000faa4	mov	w10, #0x0
000000000000faa8	add	w11, w9, w10
000000000000faac	cmp	w11, #0x0
000000000000fab0	cinc	w11, w11, lt
000000000000fab4	asr	w11, w11, #1
000000000000fab8	sbfiz	x12, x11, #4, #32
000000000000fabc	ldr	w12, [x8, x12]
000000000000fac0	cmp	w12, #0xa0
000000000000fac4	csinc	w10, w10, w11, ge
000000000000fac8	csel	w9, w9, w11, lt
000000000000facc	cmp	w10, w9
000000000000fad0	b.lt	0xfaa8
000000000000fad4	b	0xfae0
000000000000fad8	mov	w10, #0x0
000000000000fadc	b	0xfae0
000000000000fae0	sxtw	x9, w10
000000000000fae4	add	x8, x8, x9, lsl #4
000000000000fae8	ldr	x8, [x8, #0x8]
000000000000faec	ldr	x8, [x8, #0x8]
000000000000faf0	mov	x0, x23
000000000000faf4	mov	x1, x21
000000000000faf8	blr	x8
000000000000fafc	mov	x24, x0
000000000000fb00	ldr	x8, [x0]
000000000000fb04	and	x8, x8, #0xfffffffffffffffc
000000000000fb08	ldr	x8, [x8]
000000000000fb0c	ldr	w9, [x8, #0x3c]
000000000000fb10	ldr	x8, [x8, #0x40]
000000000000fb14	tbnz	w9, #0x1f, 0xfb20
000000000000fb18	and	x9, x9, x27
000000000000fb1c	b	0xfba4
000000000000fb20	neg	w10, w9
000000000000fb24	mvn	w9, w9
000000000000fb28	cmp	w10, #0x9
000000000000fb2c	b.ge	0xfb64
000000000000fb30	cmp	w10, #0x2
000000000000fb34	b.lt	0xfb98
000000000000fb38	mov	x10, #0x0
000000000000fb3c	mov	x11, x8
000000000000fb40	ldr	w12, [x11]
000000000000fb44	cmp	w12, #0xa7
000000000000fb48	b.gt	0xfba0
000000000000fb4c	add	x10, x10, #0x1
000000000000fb50	add	x11, x11, #0x10
000000000000fb54	cmp	x9, x10
000000000000fb58	b.ne	0xfb40
000000000000fb5c	mov	x10, x9
000000000000fb60	b	0xfba0
000000000000fb64	mov	w10, #0x0
000000000000fb68	add	w11, w9, w10
000000000000fb6c	cmp	w11, #0x0
000000000000fb70	cinc	w11, w11, lt
000000000000fb74	asr	w11, w11, #1
000000000000fb78	sbfiz	x12, x11, #4, #32
000000000000fb7c	ldr	w12, [x8, x12]
000000000000fb80	cmp	w12, #0xa8
000000000000fb84	csinc	w10, w10, w11, ge
000000000000fb88	csel	w9, w9, w11, lt
000000000000fb8c	cmp	w10, w9
000000000000fb90	b.lt	0xfb68
000000000000fb94	b	0xfba0
000000000000fb98	mov	w10, #0x0
000000000000fb9c	b	0xfba0
000000000000fba0	sxtw	x9, w10
000000000000fba4	add	x8, x8, x9, lsl #4
000000000000fba8	ldr	x8, [x8, #0x8]
000000000000fbac	ldr	x8, [x8]
000000000000fbb0	mov	x0, x24
000000000000fbb4	mov	x1, x20
000000000000fbb8	blr	x8
000000000000fbbc	mov	x25, x0
000000000000fbc0	ldr	x8, [x24]
000000000000fbc4	and	x8, x8, #0xfffffffffffffffc
000000000000fbc8	ldr	x8, [x8]
000000000000fbcc	ldr	w9, [x8, #0x3c]
000000000000fbd0	ldr	x8, [x8, #0x40]
000000000000fbd4	tbz	w9, #0x1f, 0xf928
000000000000fbd8	neg	w10, w9
000000000000fbdc	mvn	w9, w9
000000000000fbe0	cmp	w10, #0x9
000000000000fbe4	b.ge	0xfc20
000000000000fbe8	cmp	w10, #0x2
000000000000fbec	b.lt	0xfc54
000000000000fbf0	mov	x10, #0x0
000000000000fbf4	mov	x11, x8
000000000000fbf8	ldr	w12, [x11]
000000000000fbfc	cmp	w12, #0xa7
000000000000fc00	b.gt	0xfc60
000000000000fc04	add	x10, x10, #0x1
000000000000fc08	add	x11, x11, #0x10
000000000000fc0c	cmp	x9, x10
000000000000fc10	b.ne	0xfbf8
000000000000fc14	mov	x10, x9
000000000000fc18	sxtw	x9, w10
000000000000fc1c	b	0xf92c
000000000000fc20	mov	w10, #0x0
000000000000fc24	add	w11, w9, w10
000000000000fc28	cmp	w11, #0x0
000000000000fc2c	cinc	w11, w11, lt
000000000000fc30	asr	w11, w11, #1
000000000000fc34	sbfiz	x12, x11, #4, #32
000000000000fc38	ldr	w12, [x8, x12]
000000000000fc3c	cmp	w12, #0xa8
000000000000fc40	csinc	w10, w10, w11, ge
000000000000fc44	csel	w9, w9, w11, lt
000000000000fc48	cmp	w10, w9
000000000000fc4c	b.lt	0xfc24
000000000000fc50	b	0xfc60
000000000000fc54	mov	w10, #0x0
000000000000fc58	sxtw	x9, w10
000000000000fc5c	b	0xf92c
000000000000fc60	sxtw	x9, w10
000000000000fc64	b	0xf92c
000000000000fc68	mov	w0, #0x0
000000000000fc6c	ldr	x8, [sp, #0x8]
000000000000fc70	str	x8, [x26, #0x110]
000000000000fc74	ldp	x29, x30, [sp, #0x90]
000000000000fc78	ldp	x20, x19, [sp, #0x80]
000000000000fc7c	ldp	x22, x21, [sp, #0x70]
000000000000fc80	ldp	x24, x23, [sp, #0x60]
000000000000fc84	ldp	x26, x25, [sp, #0x50]
000000000000fc88	ldp	x28, x27, [sp, #0x40]
000000000000fc8c	add	sp, sp, #0xa0
000000000000fc90	ret
000000000000fc94	bl	_Kotlin_ObjCExport_ThrowCollectionTooLarge
_kfun:kotlin.native.internal.NSDictionaryAsKMap#hashCode(){}kotlin.Int:
000000000000fc98	sub	sp, sp, #0x90
000000000000fc9c	stp	x28, x27, [sp, #0x30]
000000000000fca0	stp	x26, x25, [sp, #0x40]
000000000000fca4	stp	x24, x23, [sp, #0x50]
000000000000fca8	stp	x22, x21, [sp, #0x60]
000000000000fcac	stp	x20, x19, [sp, #0x70]
000000000000fcb0	stp	x29, x30, [sp, #0x80]
000000000000fcb4	add	x29, sp, #0x80
000000000000fcb8	mov	x19, x0
000000000000fcbc	movi.16b	v0, #0x0
000000000000fcc0	stp	q0, q0, [sp]
000000000000fcc4	str	q0, [sp, #0x20]
000000000000fcc8	mov	x8, sp
000000000000fccc	add	x20, x8, #0x20
000000000000fcd0	add	x22, x8, #0x18
000000000000fcd4	add	x21, x8, #0x28
000000000000fcd8	adrp	x0, 89 ; 0x68000
000000000000fcdc	add	x0, x0, #0xa00
000000000000fce0	ldr	x9, [x0]
000000000000fce4	blr	x9
000000000000fce8	ldr	x26, [x0]
000000000000fcec	ldr	x9, [x26, #0x110]
000000000000fcf0	str	x8, [x26, #0x110]
000000000000fcf4	mov	x8, #0x600000000
000000000000fcf8	stp	x9, x8, [sp, #0x8]
000000000000fcfc	adr	x27, #0x72b47
000000000000fd00	nop
000000000000fd04	ldarb	w8, [x27]
000000000000fd08	tbz	w8, #0x0, 0xfd10
000000000000fd0c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000fd10	mov	x0, x19
000000000000fd14	mov	x1, x22
000000000000fd18	bl	_Kotlin_NSDictionaryAsKMap_keyIterator
000000000000fd1c	mov	x23, x0
000000000000fd20	mov	w22, #0x0
000000000000fd24	mov	w28, #0xa0
000000000000fd28	b	0xfd60
000000000000fd2c	mov	w24, #0x0
000000000000fd30	mov	x0, x19
000000000000fd34	mov	x1, x25
000000000000fd38	mov	x2, x21
000000000000fd3c	bl	_Kotlin_NSDictionaryAsKMap_getOrThrowConcurrentModification
000000000000fd40	cbz	x0, 0xfd58
000000000000fd44	ldr	x8, [x0]
000000000000fd48	and	x8, x8, #0xfffffffffffffffc
000000000000fd4c	ldr	x8, [x8]
000000000000fd50	ldr	x8, [x8, #0x78]
000000000000fd54	blr	x8
000000000000fd58	eor	w8, w24, w0
000000000000fd5c	add	w22, w22, w8
000000000000fd60	ldr	x8, [x23]
000000000000fd64	and	x8, x8, #0xfffffffffffffffc
000000000000fd68	ldr	x8, [x8]
000000000000fd6c	ldr	w9, [x8, #0x3c]
000000000000fd70	ldr	x8, [x8, #0x40]
000000000000fd74	tbnz	w9, #0x1f, 0xfd98
000000000000fd78	and	x9, x9, x28
000000000000fd7c	add	x8, x8, x9, lsl #4
000000000000fd80	ldr	x8, [x8, #0x8]
000000000000fd84	ldr	x8, [x8]
000000000000fd88	mov	x0, x23
000000000000fd8c	blr	x8
000000000000fd90	tbnz	w0, #0x0, 0xfe34
000000000000fd94	b	0xff38
000000000000fd98	neg	w10, w9
000000000000fd9c	mvn	w9, w9
000000000000fda0	cmp	w10, #0x9
000000000000fda4	b.ge	0xfddc
000000000000fda8	cmp	w10, #0x2
000000000000fdac	b.lt	0xfe10
000000000000fdb0	mov	x10, #0x0
000000000000fdb4	mov	x11, x8
000000000000fdb8	ldr	w12, [x11]
000000000000fdbc	cmp	w12, #0x9f
000000000000fdc0	b.gt	0xfe18
000000000000fdc4	add	x10, x10, #0x1
000000000000fdc8	add	x11, x11, #0x10
000000000000fdcc	cmp	x9, x10
000000000000fdd0	b.ne	0xfdb8
000000000000fdd4	mov	x10, x9
000000000000fdd8	b	0xfe18
000000000000fddc	mov	w10, #0x0
000000000000fde0	add	w11, w9, w10
000000000000fde4	cmp	w11, #0x0
000000000000fde8	cinc	w11, w11, lt
000000000000fdec	asr	w11, w11, #1
000000000000fdf0	sbfiz	x12, x11, #4, #32
000000000000fdf4	ldr	w12, [x8, x12]
000000000000fdf8	cmp	w12, #0xa0
000000000000fdfc	csinc	w10, w10, w11, ge
000000000000fe00	csel	w9, w9, w11, lt
000000000000fe04	cmp	w10, w9
000000000000fe08	b.lt	0xfde0
000000000000fe0c	b	0xfe18
000000000000fe10	mov	w10, #0x0
000000000000fe14	b	0xfe18
000000000000fe18	sxtw	x9, w10
000000000000fe1c	add	x8, x8, x9, lsl #4
000000000000fe20	ldr	x8, [x8, #0x8]
000000000000fe24	ldr	x8, [x8]
000000000000fe28	mov	x0, x23
000000000000fe2c	blr	x8
000000000000fe30	tbz	w0, #0x0, 0xff38
000000000000fe34	ldarb	w8, [x27]
000000000000fe38	tbz	w8, #0x0, 0xfe40
000000000000fe3c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000fe40	ldr	x8, [x23]
000000000000fe44	and	x8, x8, #0xfffffffffffffffc
000000000000fe48	ldr	x8, [x8]
000000000000fe4c	ldr	w9, [x8, #0x3c]
000000000000fe50	ldr	x8, [x8, #0x40]
000000000000fe54	tbnz	w9, #0x1f, 0xfe60
000000000000fe58	and	x9, x9, x28
000000000000fe5c	b	0xfee4
000000000000fe60	neg	w10, w9
000000000000fe64	mvn	w9, w9
000000000000fe68	cmp	w10, #0x9
000000000000fe6c	b.ge	0xfea4
000000000000fe70	cmp	w10, #0x2
000000000000fe74	b.lt	0xfed8
000000000000fe78	mov	x10, #0x0
000000000000fe7c	mov	x11, x8
000000000000fe80	ldr	w12, [x11]
000000000000fe84	cmp	w12, #0x9f
000000000000fe88	b.gt	0xfee0
000000000000fe8c	add	x10, x10, #0x1
000000000000fe90	add	x11, x11, #0x10
000000000000fe94	cmp	x9, x10
000000000000fe98	b.ne	0xfe80
000000000000fe9c	mov	x10, x9
000000000000fea0	b	0xfee0
000000000000fea4	mov	w10, #0x0
000000000000fea8	add	w11, w9, w10
000000000000feac	cmp	w11, #0x0
000000000000feb0	cinc	w11, w11, lt
000000000000feb4	asr	w11, w11, #1
000000000000feb8	sbfiz	x12, x11, #4, #32
000000000000febc	ldr	w12, [x8, x12]
000000000000fec0	cmp	w12, #0xa0
000000000000fec4	csinc	w10, w10, w11, ge
000000000000fec8	csel	w9, w9, w11, lt
000000000000fecc	cmp	w10, w9
000000000000fed0	b.lt	0xfea8
000000000000fed4	b	0xfee0
000000000000fed8	mov	w10, #0x0
000000000000fedc	b	0xfee0
000000000000fee0	sxtw	x9, w10
000000000000fee4	add	x8, x8, x9, lsl #4
000000000000fee8	ldr	x8, [x8, #0x8]
000000000000feec	ldr	x8, [x8, #0x8]
000000000000fef0	mov	x0, x23
000000000000fef4	mov	x1, x20
000000000000fef8	blr	x8
000000000000fefc	mov	x25, x0
000000000000ff00	cbz	x0, 0xfd2c
000000000000ff04	ldr	x8, [x25]
000000000000ff08	and	x8, x8, #0xfffffffffffffffc
000000000000ff0c	ldr	x8, [x8]
000000000000ff10	ldr	x8, [x8, #0x78]
000000000000ff14	mov	x0, x25
000000000000ff18	blr	x8
000000000000ff1c	mov	x24, x0
000000000000ff20	mov	x0, x19
000000000000ff24	mov	x1, x25
000000000000ff28	mov	x2, x21
000000000000ff2c	bl	_Kotlin_NSDictionaryAsKMap_getOrThrowConcurrentModification
000000000000ff30	cbnz	x0, 0xfd44
000000000000ff34	b	0xfd58
000000000000ff38	ldr	x8, [sp, #0x8]
000000000000ff3c	str	x8, [x26, #0x110]
000000000000ff40	mov	x0, x22
000000000000ff44	ldp	x29, x30, [sp, #0x80]
000000000000ff48	ldp	x20, x19, [sp, #0x70]
000000000000ff4c	ldp	x22, x21, [sp, #0x60]
000000000000ff50	ldp	x24, x23, [sp, #0x50]
000000000000ff54	ldp	x26, x25, [sp, #0x40]
000000000000ff58	ldp	x28, x27, [sp, #0x30]
000000000000ff5c	add	sp, sp, #0x90
000000000000ff60	ret
_kfun:kotlin.native.internal.NSDictionaryAsKMap#toString(){}kotlin.String:
000000000000ff64	sub	sp, sp, #0x60
000000000000ff68	stp	x22, x21, [sp, #0x30]
000000000000ff6c	stp	x20, x19, [sp, #0x40]
000000000000ff70	stp	x29, x30, [sp, #0x50]
000000000000ff74	add	x29, sp, #0x50
000000000000ff78	mov	x19, x1
000000000000ff7c	mov	x20, x0
000000000000ff80	movi.16b	v0, #0x0
000000000000ff84	stp	q0, q0, [sp]
000000000000ff88	str	xzr, [sp, #0x20]
000000000000ff8c	adrp	x0, 89 ; 0x68000
000000000000ff90	add	x0, x0, #0xa00
000000000000ff94	ldr	x8, [x0]
000000000000ff98	blr	x8
000000000000ff9c	ldr	x22, [x0]
000000000000ffa0	ldr	x8, [x22, #0x110]
000000000000ffa4	mov	x9, sp
000000000000ffa8	str	x9, [x22, #0x110]
000000000000ffac	mov	x9, #0x500000000
000000000000ffb0	stp	x8, x9, [sp, #0x8]
000000000000ffb4	adr	x8, #0x7288f
000000000000ffb8	nop
000000000000ffbc	ldarb	w8, [x8]
000000000000ffc0	tbz	w8, #0x0, 0xffc8
000000000000ffc4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000ffc8	ldr	x8, [x22, #0x118]
000000000000ffcc	add	x0, x8, #0x70
000000000000ffd0	mov	w1, #0x18
000000000000ffd4	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000ffd8	mov	x21, x0
000000000000ffdc	adr	x8, #0x469c4
000000000000ffe0	nop
000000000000ffe4	str	x8, [x21, #0x10]!
000000000000ffe8	stur	xzr, [x21, #-0x8]
000000000000ffec	str	x21, [sp, #0x18]
000000000000fff0	str	x20, [x21, #0x8]
000000000000fff4	str	x21, [sp, #0x18]
000000000000fff8	ldr	x8, [x22, #0x118]
000000000000fffc	add	x0, x8, #0x70
0000000000010000	mov	w1, #0x18
0000000000010004	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000010008	adr	x8, #0x46b78
000000000001000c	nop
0000000000010010	mov	x3, x0
0000000000010014	str	x8, [x3, #0x10]!
0000000000010018	stur	xzr, [x3, #-0x8]
000000000001001c	str	x3, [sp, #0x20]
0000000000010020	str	x20, [x3, #0x8]
0000000000010024	adr	x1, #0x517bc
0000000000010028	nop
000000000001002c	adr	x2, #0x517d4
0000000000010030	nop
0000000000010034	mov	x0, x21
0000000000010038	mov	x4, x19
000000000001003c	bl	"_kfun:kotlin.collections#joinToString$default__at__kotlin.collections.Iterable<0:0>(kotlin.CharSequence?;kotlin.CharSequence?;kotlin.CharSequence?;kotlin.Int;kotlin.CharSequence?;kotlin.Function1<0:0,kotlin.CharSequence>?;kotlin.Int){0ยง<kotlin.Any?>}kotlin.String"
0000000000010040	str	x0, [x19]
0000000000010044	ldr	x8, [sp, #0x8]
0000000000010048	str	x8, [x22, #0x110]
000000000001004c	ldp	x29, x30, [sp, #0x50]
0000000000010050	ldp	x20, x19, [sp, #0x40]
0000000000010054	ldp	x22, x21, [sp, #0x30]
0000000000010058	add	sp, sp, #0x60
000000000001005c	ret
_kfun:kotlin.native.internal.NSDictionaryAsKMap#<get-size>(){}kotlin.Int:
0000000000010060	stp	x20, x19, [sp, #-0x20]!
0000000000010064	stp	x29, x30, [sp, #0x10]
0000000000010068	add	x29, sp, #0x10
000000000001006c	mov	x19, x0
0000000000010070	adr	x8, #0x727d3
0000000000010074	nop
0000000000010078	ldarb	w8, [x8]
000000000001007c	tbz	w8, #0x0, 0x10084
0000000000010080	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000010084	ldar	x8, [x19]
0000000000010088	and	x8, x8, #0xfffffffffffffffc
000000000001008c	ldr	x9, [x8]
0000000000010090	cmp	x8, #0x0
0000000000010094	ccmp	x9, x8, #0x4, ne
0000000000010098	b.ne	0x100a4
000000000001009c	mov	x0, #0x0
00000000000100a0	b	0x100ac
00000000000100a4	add	x8, x8, #0x10
00000000000100a8	ldar	x0, [x8]
00000000000100ac	nop
00000000000100b0	ldr	x1, #0x563a0 ; Objc selector ref: count
00000000000100b4	bl	0x4dcb8 ; Objc message: -[x0 count]
00000000000100b8	lsr	x8, x0, #31
00000000000100bc	cbnz	x8, 0x100cc
00000000000100c0	ldp	x29, x30, [sp, #0x10]
00000000000100c4	ldp	x20, x19, [sp], #0x20
00000000000100c8	ret
00000000000100cc	bl	_Kotlin_ObjCExport_ThrowCollectionTooLarge
_kfun:kotlin.native.internal.NSDictionaryAsKMap#isEmpty(){}kotlin.Boolean:
00000000000100d0	stp	x20, x19, [sp, #-0x20]!
00000000000100d4	stp	x29, x30, [sp, #0x10]
00000000000100d8	add	x29, sp, #0x10
00000000000100dc	mov	x19, x0
00000000000100e0	adr	x8, #0x72763
00000000000100e4	nop
00000000000100e8	ldarb	w8, [x8]
00000000000100ec	tbz	w8, #0x0, 0x100f4
00000000000100f0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000100f4	ldar	x8, [x19]
00000000000100f8	and	x8, x8, #0xfffffffffffffffc
00000000000100fc	ldr	x9, [x8]
0000000000010100	cmp	x8, #0x0
0000000000010104	ccmp	x9, x8, #0x4, ne
0000000000010108	b.ne	0x10114
000000000001010c	mov	x0, #0x0
0000000000010110	b	0x1011c
0000000000010114	add	x8, x8, #0x10
0000000000010118	ldar	x0, [x8]
000000000001011c	nop
0000000000010120	ldr	x1, #0x56330 ; Objc selector ref: count
0000000000010124	bl	0x4dcb8 ; Objc message: -[x0 count]
0000000000010128	lsr	x8, x0, #31
000000000001012c	cbnz	x8, 0x10144
0000000000010130	cmp	w0, #0x0
0000000000010134	cset	w0, eq
0000000000010138	ldp	x29, x30, [sp, #0x10]
000000000001013c	ldp	x20, x19, [sp], #0x20
0000000000010140	ret
0000000000010144	bl	_Kotlin_ObjCExport_ThrowCollectionTooLarge
_kfun:kotlin.native.internal.NSDictionaryAsKMap#<get-keys>(){}kotlin.collections.Set<kotlin.Any?>:
0000000000010148	stp	x20, x19, [sp, #-0x20]!
000000000001014c	stp	x29, x30, [sp, #0x10]
0000000000010150	add	x29, sp, #0x10
0000000000010154	mov	x19, x1
0000000000010158	mov	x20, x0
000000000001015c	adr	x8, #0x726e7
0000000000010160	nop
0000000000010164	ldarb	w8, [x8]
0000000000010168	tbz	w8, #0x0, 0x10170
000000000001016c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000010170	adrp	x0, 88 ; 0x68000
0000000000010174	add	x0, x0, #0xa00
0000000000010178	ldr	x8, [x0]
000000000001017c	blr	x8
0000000000010180	ldr	x8, [x0]
0000000000010184	ldr	x8, [x8, #0x118]
0000000000010188	add	x0, x8, #0x70
000000000001018c	mov	w1, #0x18
0000000000010190	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000010194	adr	x8, #0x4668c
0000000000010198	nop
000000000001019c	str	x8, [x0, #0x10]!
00000000000101a0	stur	xzr, [x0, #-0x8]
00000000000101a4	str	x0, [x19]
00000000000101a8	str	x20, [x0, #0x8]
00000000000101ac	str	x0, [x19]
00000000000101b0	ldp	x29, x30, [sp, #0x10]
00000000000101b4	ldp	x20, x19, [sp], #0x20
00000000000101b8	ret
_kfun:kotlin.native.internal.NSDictionaryAsKMap#<get-values>(){}kotlin.collections.Collection<kotlin.Any?>:
00000000000101bc	stp	x20, x19, [sp, #-0x20]!
00000000000101c0	stp	x29, x30, [sp, #0x10]
00000000000101c4	add	x29, sp, #0x10
00000000000101c8	mov	x19, x1
00000000000101cc	mov	x20, x0
00000000000101d0	adr	x8, #0x72673
00000000000101d4	nop
00000000000101d8	ldarb	w8, [x8]
00000000000101dc	tbz	w8, #0x0, 0x101e4
00000000000101e0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000101e4	adrp	x0, 88 ; 0x68000
00000000000101e8	add	x0, x0, #0xa00
00000000000101ec	ldr	x8, [x0]
00000000000101f0	blr	x8
00000000000101f4	ldr	x8, [x0]
00000000000101f8	ldr	x8, [x8, #0x118]
00000000000101fc	add	x0, x8, #0x70
0000000000010200	mov	w1, #0x18
0000000000010204	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000010208	adr	x8, #0x466d8
000000000001020c	nop
0000000000010210	str	x8, [x0, #0x10]!
0000000000010214	stur	xzr, [x0, #-0x8]
0000000000010218	str	x0, [x19]
000000000001021c	str	x20, [x0, #0x8]
0000000000010220	str	x0, [x19]
0000000000010224	ldp	x29, x30, [sp, #0x10]
0000000000010228	ldp	x20, x19, [sp], #0x20
000000000001022c	ret
_kfun:kotlin.native.internal.NSDictionaryAsKMap#<get-entries>(){}kotlin.collections.Set<kotlin.collections.Map.Entry<kotlin.Any?,kotlin.Any?>>:
0000000000010230	stp	x20, x19, [sp, #-0x20]!
0000000000010234	stp	x29, x30, [sp, #0x10]
0000000000010238	add	x29, sp, #0x10
000000000001023c	mov	x19, x1
0000000000010240	mov	x20, x0
0000000000010244	adr	x8, #0x725ff
0000000000010248	nop
000000000001024c	ldarb	w8, [x8]
0000000000010250	tbz	w8, #0x0, 0x10258
0000000000010254	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000010258	adrp	x0, 88 ; 0x68000
000000000001025c	add	x0, x0, #0xa00
0000000000010260	ldr	x8, [x0]
0000000000010264	blr	x8
0000000000010268	ldr	x8, [x0]
000000000001026c	ldr	x8, [x8, #0x118]
0000000000010270	add	x0, x8, #0x70
0000000000010274	mov	w1, #0x18
0000000000010278	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001027c	adr	x8, #0x46724
0000000000010280	nop
0000000000010284	str	x8, [x0, #0x10]!
0000000000010288	stur	xzr, [x0, #-0x8]
000000000001028c	str	x0, [x19]
0000000000010290	str	x20, [x0, #0x8]
0000000000010294	str	x0, [x19]
0000000000010298	ldp	x29, x30, [sp, #0x10]
000000000001029c	ldp	x20, x19, [sp], #0x20
00000000000102a0	ret
_kfun:kotlin.native.internal.NSDictionaryAsKMap.Keys.<get-size>#internal:
00000000000102a4	stp	x20, x19, [sp, #-0x20]!
00000000000102a8	stp	x29, x30, [sp, #0x10]
00000000000102ac	add	x29, sp, #0x10
00000000000102b0	mov	x19, x0
00000000000102b4	adr	x8, #0x7258f
00000000000102b8	nop
00000000000102bc	ldarb	w8, [x8]
00000000000102c0	tbz	w8, #0x0, 0x102c8
00000000000102c4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000102c8	ldr	x8, [x19, #0x8]
00000000000102cc	ldar	x8, [x8]
00000000000102d0	and	x8, x8, #0xfffffffffffffffc
00000000000102d4	ldr	x9, [x8]
00000000000102d8	cmp	x8, #0x0
00000000000102dc	ccmp	x9, x8, #0x4, ne
00000000000102e0	b.ne	0x102ec
00000000000102e4	mov	x0, #0x0
00000000000102e8	b	0x102f4
00000000000102ec	add	x8, x8, #0x10
00000000000102f0	ldar	x0, [x8]
00000000000102f4	nop
00000000000102f8	ldr	x1, #0x56158 ; Objc selector ref: count
00000000000102fc	bl	0x4dcb8 ; Objc message: -[x0 count]
0000000000010300	lsr	x8, x0, #31
0000000000010304	cbnz	x8, 0x10314
0000000000010308	ldp	x29, x30, [sp, #0x10]
000000000001030c	ldp	x20, x19, [sp], #0x20
0000000000010310	ret
0000000000010314	bl	_Kotlin_ObjCExport_ThrowCollectionTooLarge
_kfun:kotlin.native.internal.NSDictionaryAsKMap.Keys.iterator#internal:
0000000000010318	stp	x20, x19, [sp, #-0x20]!
000000000001031c	stp	x29, x30, [sp, #0x10]
0000000000010320	add	x29, sp, #0x10
0000000000010324	mov	x19, x1
0000000000010328	mov	x20, x0
000000000001032c	adr	x8, #0x72517
0000000000010330	nop
0000000000010334	ldarb	w8, [x8]
0000000000010338	tbz	w8, #0x0, 0x10340
000000000001033c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000010340	ldr	x0, [x20, #0x8]
0000000000010344	mov	x1, x19
0000000000010348	bl	_Kotlin_NSDictionaryAsKMap_keyIterator
000000000001034c	str	x0, [x19]
0000000000010350	ldp	x29, x30, [sp, #0x10]
0000000000010354	ldp	x20, x19, [sp], #0x20
0000000000010358	ret
_kfun:kotlin.native.internal.NSDictionaryAsKMap.Keys.contains#internal:
000000000001035c	stp	x20, x19, [sp, #-0x20]!
0000000000010360	stp	x29, x30, [sp, #0x10]
0000000000010364	add	x29, sp, #0x10
0000000000010368	mov	x19, x1
000000000001036c	mov	x20, x0
0000000000010370	adr	x8, #0x724d3
0000000000010374	nop
0000000000010378	ldarb	w8, [x8]
000000000001037c	tbz	w8, #0x0, 0x10384
0000000000010380	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000010384	ldr	x0, [x20, #0x8]
0000000000010388	mov	x1, x19
000000000001038c	ldp	x29, x30, [sp, #0x10]
0000000000010390	ldp	x20, x19, [sp], #0x20
0000000000010394	b	_Kotlin_NSDictionaryAsKMap_containsKey
_kfun:kotlin.native.internal.NSDictionaryAsKMap.Values.<get-size>#internal:
0000000000010398	stp	x20, x19, [sp, #-0x20]!
000000000001039c	stp	x29, x30, [sp, #0x10]
00000000000103a0	add	x29, sp, #0x10
00000000000103a4	mov	x19, x0
00000000000103a8	adr	x8, #0x7249b
00000000000103ac	nop
00000000000103b0	ldarb	w8, [x8]
00000000000103b4	tbz	w8, #0x0, 0x103bc
00000000000103b8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000103bc	ldr	x8, [x19, #0x8]
00000000000103c0	ldar	x8, [x8]
00000000000103c4	and	x8, x8, #0xfffffffffffffffc
00000000000103c8	ldr	x9, [x8]
00000000000103cc	cmp	x8, #0x0
00000000000103d0	ccmp	x9, x8, #0x4, ne
00000000000103d4	b.ne	0x103e0
00000000000103d8	mov	x0, #0x0
00000000000103dc	b	0x103e8
00000000000103e0	add	x8, x8, #0x10
00000000000103e4	ldar	x0, [x8]
00000000000103e8	nop
00000000000103ec	ldr	x1, #0x56064 ; Objc selector ref: count
00000000000103f0	bl	0x4dcb8 ; Objc message: -[x0 count]
00000000000103f4	lsr	x8, x0, #31
00000000000103f8	cbnz	x8, 0x10408
00000000000103fc	ldp	x29, x30, [sp, #0x10]
0000000000010400	ldp	x20, x19, [sp], #0x20
0000000000010404	ret
0000000000010408	bl	_Kotlin_ObjCExport_ThrowCollectionTooLarge
_kfun:kotlin.native.internal.NSDictionaryAsKMap.Values.iterator#internal:
000000000001040c	stp	x20, x19, [sp, #-0x20]!
0000000000010410	stp	x29, x30, [sp, #0x10]
0000000000010414	add	x29, sp, #0x10
0000000000010418	mov	x19, x1
000000000001041c	mov	x20, x0
0000000000010420	adr	x8, #0x72423
0000000000010424	nop
0000000000010428	ldarb	w8, [x8]
000000000001042c	tbz	w8, #0x0, 0x10434
0000000000010430	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000010434	ldr	x0, [x20, #0x8]
0000000000010438	mov	x1, x19
000000000001043c	bl	_Kotlin_NSDictionaryAsKMap_valueIterator
0000000000010440	str	x0, [x19]
0000000000010444	ldp	x29, x30, [sp, #0x10]
0000000000010448	ldp	x20, x19, [sp], #0x20
000000000001044c	ret
_kfun:kotlin.native.internal.NSDictionaryAsKMap.Values.contains#internal:
0000000000010450	stp	x20, x19, [sp, #-0x20]!
0000000000010454	stp	x29, x30, [sp, #0x10]
0000000000010458	add	x29, sp, #0x10
000000000001045c	mov	x19, x1
0000000000010460	mov	x20, x0
0000000000010464	adr	x8, #0x723df
0000000000010468	nop
000000000001046c	ldarb	w8, [x8]
0000000000010470	tbz	w8, #0x0, 0x10478
0000000000010474	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000010478	ldr	x0, [x20, #0x8]
000000000001047c	mov	x1, x19
0000000000010480	ldp	x29, x30, [sp, #0x10]
0000000000010484	ldp	x20, x19, [sp], #0x20
0000000000010488	b	_Kotlin_NSDictionaryAsKMap_containsValue
_kfun:kotlin.native.internal.NSDictionaryAsKMap.Entries.<get-size>#internal:
000000000001048c	stp	x20, x19, [sp, #-0x20]!
0000000000010490	stp	x29, x30, [sp, #0x10]
0000000000010494	add	x29, sp, #0x10
0000000000010498	mov	x19, x0
000000000001049c	adr	x8, #0x723a7
00000000000104a0	nop
00000000000104a4	ldarb	w8, [x8]
00000000000104a8	tbz	w8, #0x0, 0x104b0
00000000000104ac	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000104b0	ldr	x8, [x19, #0x8]
00000000000104b4	ldar	x8, [x8]
00000000000104b8	and	x8, x8, #0xfffffffffffffffc
00000000000104bc	ldr	x9, [x8]
00000000000104c0	cmp	x8, #0x0
00000000000104c4	ccmp	x9, x8, #0x4, ne
00000000000104c8	b.ne	0x104d4
00000000000104cc	mov	x0, #0x0
00000000000104d0	b	0x104dc
00000000000104d4	add	x8, x8, #0x10
00000000000104d8	ldar	x0, [x8]
00000000000104dc	nop
00000000000104e0	ldr	x1, #0x55f70 ; Objc selector ref: count
00000000000104e4	bl	0x4dcb8 ; Objc message: -[x0 count]
00000000000104e8	lsr	x8, x0, #31
00000000000104ec	cbnz	x8, 0x104fc
00000000000104f0	ldp	x29, x30, [sp, #0x10]
00000000000104f4	ldp	x20, x19, [sp], #0x20
00000000000104f8	ret
00000000000104fc	bl	_Kotlin_ObjCExport_ThrowCollectionTooLarge
_kfun:kotlin.native.internal.NSDictionaryAsKMap.Entries.iterator#internal:
0000000000010500	sub	sp, sp, #0x50
0000000000010504	stp	x22, x21, [sp, #0x20]
0000000000010508	stp	x20, x19, [sp, #0x30]
000000000001050c	stp	x29, x30, [sp, #0x40]
0000000000010510	add	x29, sp, #0x40
0000000000010514	mov	x19, x1
0000000000010518	mov	x20, x0
000000000001051c	adr	x8, #0x72327
0000000000010520	nop
0000000000010524	ldarb	w8, [x8]
0000000000010528	tbz	w8, #0x0, 0x10530
000000000001052c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000010530	ldr	x20, [x20, #0x8]
0000000000010534	adrp	x0, 88 ; 0x68000
0000000000010538	add	x0, x0, #0xa00
000000000001053c	ldr	x8, [x0]
0000000000010540	blr	x8
0000000000010544	mov	x21, x0
0000000000010548	ldr	x8, [x0]
000000000001054c	ldr	x8, [x8, #0x118]
0000000000010550	add	x0, x8, #0x70
0000000000010554	mov	w1, #0x20
0000000000010558	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001055c	mov	x22, x0
0000000000010560	adr	x8, #0x46590
0000000000010564	nop
0000000000010568	str	x8, [x22, #0x10]!
000000000001056c	stur	xzr, [x22, #-0x8]
0000000000010570	str	x22, [x19]
0000000000010574	movi.16b	v0, #0x0
0000000000010578	stp	q0, q0, [sp]
000000000001057c	mov	x8, sp
0000000000010580	add	x1, x8, #0x18
0000000000010584	ldr	x9, [x21]
0000000000010588	ldr	x10, [x9, #0x110]
000000000001058c	str	x8, [x9, #0x110]
0000000000010590	mov	x8, #0x400000000
0000000000010594	stp	x10, x8, [sp, #0x8]
0000000000010598	str	x20, [x22, #0x10]
000000000001059c	mov	x0, x20
00000000000105a0	bl	_Kotlin_NSDictionaryAsKMap_keyIterator
00000000000105a4	str	x0, [x22, #0x8]
00000000000105a8	ldr	x8, [x21]
00000000000105ac	ldr	x9, [sp, #0x8]
00000000000105b0	str	x9, [x8, #0x110]
00000000000105b4	str	x22, [x19]
00000000000105b8	mov	x0, x22
00000000000105bc	ldp	x29, x30, [sp, #0x40]
00000000000105c0	ldp	x20, x19, [sp, #0x30]
00000000000105c4	ldp	x22, x21, [sp, #0x20]
00000000000105c8	add	sp, sp, #0x50
00000000000105cc	ret
_kfun:kotlin.native.internal.NSDictionaryAsKMap.Entries.contains#internal:
00000000000105d0	sub	sp, sp, #0x70
00000000000105d4	stp	x24, x23, [sp, #0x30]
00000000000105d8	stp	x22, x21, [sp, #0x40]
00000000000105dc	stp	x20, x19, [sp, #0x50]
00000000000105e0	stp	x29, x30, [sp, #0x60]
00000000000105e4	add	x29, sp, #0x60
00000000000105e8	mov	x19, x1
00000000000105ec	mov	x20, x0
00000000000105f0	movi.16b	v0, #0x0
00000000000105f4	stp	q0, q0, [sp]
00000000000105f8	str	xzr, [sp, #0x20]
00000000000105fc	mov	x22, sp
0000000000010600	adrp	x0, 88 ; 0x68000
0000000000010604	add	x0, x0, #0xa00
0000000000010608	ldr	x8, [x0]
000000000001060c	blr	x8
0000000000010610	ldr	x23, [x0]
0000000000010614	ldr	x8, [x23, #0x110]
0000000000010618	str	x22, [x23, #0x110]
000000000001061c	mov	x9, #0x500000000
0000000000010620	stp	x8, x9, [sp, #0x8]
0000000000010624	adr	x8, #0x7221f
0000000000010628	nop
000000000001062c	ldarb	w8, [x8]
0000000000010630	tbz	w8, #0x0, 0x10638
0000000000010634	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000010638	cbz	x19, 0x1077c
000000000001063c	ldr	x8, [x19]
0000000000010640	and	x8, x8, #0xfffffffffffffffc
0000000000010644	ldr	x8, [x8]
0000000000010648	ldr	w9, [x8, #0x3c]
000000000001064c	ldr	x8, [x8, #0x40]
0000000000010650	tbnz	w9, #0x1f, 0x1069c
0000000000010654	mov	w10, #0xa8
0000000000010658	and	x9, x9, x10
000000000001065c	lsl	x9, x9, #4
0000000000010660	ldr	w8, [x8, x9]
0000000000010664	cmp	w8, #0xa8
0000000000010668	b.ne	0x1077c
000000000001066c	add	x21, x22, #0x20
0000000000010670	add	x1, x22, #0x18
0000000000010674	ldr	x20, [x20, #0x8]
0000000000010678	ldr	x8, [x19]
000000000001067c	and	x8, x8, #0xfffffffffffffffc
0000000000010680	ldr	x8, [x8]
0000000000010684	ldr	w9, [x8, #0x3c]
0000000000010688	ldr	x8, [x8, #0x40]
000000000001068c	tbnz	w9, #0x1f, 0x106f4
0000000000010690	mov	w10, #0xa8
0000000000010694	and	x9, x9, x10
0000000000010698	b	0x107f8
000000000001069c	neg	w10, w9
00000000000106a0	mvn	w9, w9
00000000000106a4	cmp	w10, #0x9
00000000000106a8	b.ge	0x10738
00000000000106ac	cmp	w10, #0x2
00000000000106b0	b.lt	0x10784
00000000000106b4	mov	x10, #0x0
00000000000106b8	mov	x11, x8
00000000000106bc	ldr	w12, [x11]
00000000000106c0	cmp	w12, #0xa7
00000000000106c4	b.gt	0x107d4
00000000000106c8	add	x10, x10, #0x1
00000000000106cc	add	x11, x11, #0x10
00000000000106d0	cmp	x9, x10
00000000000106d4	b.ne	0x106bc
00000000000106d8	mov	x10, x9
00000000000106dc	sxtw	x9, w10
00000000000106e0	lsl	x9, x9, #4
00000000000106e4	ldr	w8, [x8, x9]
00000000000106e8	cmp	w8, #0xa8
00000000000106ec	b.eq	0x1066c
00000000000106f0	b	0x1077c
00000000000106f4	neg	w10, w9
00000000000106f8	mvn	w9, w9
00000000000106fc	cmp	w10, #0x9
0000000000010700	b.ge	0x107a0
0000000000010704	cmp	w10, #0x2
0000000000010708	b.lt	0x107ec
000000000001070c	mov	x10, #0x0
0000000000010710	mov	x11, x8
0000000000010714	ldr	w12, [x11]
0000000000010718	cmp	w12, #0xa7
000000000001071c	b.gt	0x107f4
0000000000010720	add	x10, x10, #0x1
0000000000010724	add	x11, x11, #0x10
0000000000010728	cmp	x9, x10
000000000001072c	b.ne	0x10714
0000000000010730	mov	x10, x9
0000000000010734	b	0x107f4
0000000000010738	mov	w10, #0x0
000000000001073c	add	w11, w9, w10
0000000000010740	cmp	w11, #0x0
0000000000010744	cinc	w11, w11, lt
0000000000010748	asr	w11, w11, #1
000000000001074c	sbfiz	x12, x11, #4, #32
0000000000010750	ldr	w12, [x8, x12]
0000000000010754	cmp	w12, #0xa8
0000000000010758	csinc	w10, w10, w11, ge
000000000001075c	csel	w9, w9, w11, lt
0000000000010760	cmp	w10, w9
0000000000010764	b.lt	0x1073c
0000000000010768	sxtw	x9, w10
000000000001076c	lsl	x9, x9, #4
0000000000010770	ldr	w8, [x8, x9]
0000000000010774	cmp	w8, #0xa8
0000000000010778	b.eq	0x1066c
000000000001077c	mov	w0, #0x0
0000000000010780	b	0x108e0
0000000000010784	mov	w10, #0x0
0000000000010788	sxtw	x9, w10
000000000001078c	lsl	x9, x9, #4
0000000000010790	ldr	w8, [x8, x9]
0000000000010794	cmp	w8, #0xa8
0000000000010798	b.eq	0x1066c
000000000001079c	b	0x1077c
00000000000107a0	mov	w10, #0x0
00000000000107a4	add	w11, w9, w10
00000000000107a8	cmp	w11, #0x0
00000000000107ac	cinc	w11, w11, lt
00000000000107b0	asr	w11, w11, #1
00000000000107b4	sbfiz	x12, x11, #4, #32
00000000000107b8	ldr	w12, [x8, x12]
00000000000107bc	cmp	w12, #0xa8
00000000000107c0	csinc	w10, w10, w11, ge
00000000000107c4	csel	w9, w9, w11, lt
00000000000107c8	cmp	w10, w9
00000000000107cc	b.lt	0x107a4
00000000000107d0	b	0x107f4
00000000000107d4	sxtw	x9, w10
00000000000107d8	lsl	x9, x9, #4
00000000000107dc	ldr	w8, [x8, x9]
00000000000107e0	cmp	w8, #0xa8
00000000000107e4	b.eq	0x1066c
00000000000107e8	b	0x1077c
00000000000107ec	mov	w10, #0x0
00000000000107f0	b	0x107f4
00000000000107f4	sxtw	x9, w10
00000000000107f8	add	x8, x8, x9, lsl #4
00000000000107fc	ldr	x8, [x8, #0x8]
0000000000010800	ldr	x8, [x8]
0000000000010804	mov	x0, x19
0000000000010808	blr	x8
000000000001080c	mov	x22, x0
0000000000010810	ldr	x8, [x19]
0000000000010814	and	x8, x8, #0xfffffffffffffffc
0000000000010818	ldr	x8, [x8]
000000000001081c	ldr	w9, [x8, #0x3c]
0000000000010820	ldr	x8, [x8, #0x40]
0000000000010824	tbnz	w9, #0x1f, 0x10834
0000000000010828	mov	w10, #0xa8
000000000001082c	and	x9, x9, x10
0000000000010830	b	0x108b8
0000000000010834	neg	w10, w9
0000000000010838	mvn	w9, w9
000000000001083c	cmp	w10, #0x9
0000000000010840	b.ge	0x10878
0000000000010844	cmp	w10, #0x2
0000000000010848	b.lt	0x108ac
000000000001084c	mov	x10, #0x0
0000000000010850	mov	x11, x8
0000000000010854	ldr	w12, [x11]
0000000000010858	cmp	w12, #0xa7
000000000001085c	b.gt	0x108b4
0000000000010860	add	x10, x10, #0x1
0000000000010864	add	x11, x11, #0x10
0000000000010868	cmp	x9, x10
000000000001086c	b.ne	0x10854
0000000000010870	mov	x10, x9
0000000000010874	b	0x108b4
0000000000010878	mov	w10, #0x0
000000000001087c	add	w11, w9, w10
0000000000010880	cmp	w11, #0x0
0000000000010884	cinc	w11, w11, lt
0000000000010888	asr	w11, w11, #1
000000000001088c	sbfiz	x12, x11, #4, #32
0000000000010890	ldr	w12, [x8, x12]
0000000000010894	cmp	w12, #0xa8
0000000000010898	csinc	w10, w10, w11, ge
000000000001089c	csel	w9, w9, w11, lt
00000000000108a0	cmp	w10, w9
00000000000108a4	b.lt	0x1087c
00000000000108a8	b	0x108b4
00000000000108ac	mov	w10, #0x0
00000000000108b0	b	0x108b4
00000000000108b4	sxtw	x9, w10
00000000000108b8	add	x8, x8, x9, lsl #4
00000000000108bc	ldr	x8, [x8, #0x8]
00000000000108c0	ldr	x8, [x8, #0x8]
00000000000108c4	mov	x0, x19
00000000000108c8	mov	x1, x21
00000000000108cc	blr	x8
00000000000108d0	mov	x2, x0
00000000000108d4	mov	x0, x20
00000000000108d8	mov	x1, x22
00000000000108dc	bl	_Kotlin_NSDictionaryAsKMap_containsEntry
00000000000108e0	ldr	x8, [sp, #0x8]
00000000000108e4	str	x8, [x23, #0x110]
00000000000108e8	ldp	x29, x30, [sp, #0x60]
00000000000108ec	ldp	x20, x19, [sp, #0x50]
00000000000108f0	ldp	x22, x21, [sp, #0x40]
00000000000108f4	ldp	x24, x23, [sp, #0x30]
00000000000108f8	add	sp, sp, #0x70
00000000000108fc	ret
_kfun:kotlin.native.internal.NSDictionaryAsKMap.Entry.<get-key>#internal:
0000000000010900	stp	x20, x19, [sp, #-0x20]!
0000000000010904	stp	x29, x30, [sp, #0x10]
0000000000010908	add	x29, sp, #0x10
000000000001090c	mov	x19, x1
0000000000010910	mov	x20, x0
0000000000010914	adr	x8, #0x71f2f
0000000000010918	nop
000000000001091c	ldarb	w8, [x8]
0000000000010920	tbz	w8, #0x0, 0x10928
0000000000010924	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000010928	ldr	x0, [x20, #0x8]
000000000001092c	str	x0, [x19]
0000000000010930	ldp	x29, x30, [sp, #0x10]
0000000000010934	ldp	x20, x19, [sp], #0x20
0000000000010938	ret
_kfun:kotlin.native.internal.NSDictionaryAsKMap.Entry.<get-value>#internal:
000000000001093c	stp	x20, x19, [sp, #-0x20]!
0000000000010940	stp	x29, x30, [sp, #0x10]
0000000000010944	add	x29, sp, #0x10
0000000000010948	mov	x19, x1
000000000001094c	mov	x20, x0
0000000000010950	adr	x8, #0x71ef3
0000000000010954	nop
0000000000010958	ldarb	w8, [x8]
000000000001095c	tbz	w8, #0x0, 0x10964
0000000000010960	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000010964	ldr	x0, [x20, #0x10]
0000000000010968	str	x0, [x19]
000000000001096c	ldp	x29, x30, [sp, #0x10]
0000000000010970	ldp	x20, x19, [sp], #0x20
0000000000010974	ret
_kfun:kotlin.native.internal.NSDictionaryAsKMap.Entry.equals#internal:
0000000000010978	sub	sp, sp, #0x60
000000000001097c	stp	x22, x21, [sp, #0x30]
0000000000010980	stp	x20, x19, [sp, #0x40]
0000000000010984	stp	x29, x30, [sp, #0x50]
0000000000010988	add	x29, sp, #0x50
000000000001098c	mov	x20, x1
0000000000010990	mov	x19, x0
0000000000010994	movi.16b	v0, #0x0
0000000000010998	stp	q0, q0, [sp]
000000000001099c	str	xzr, [sp, #0x20]
00000000000109a0	mov	x22, sp
00000000000109a4	adrp	x0, 88 ; 0x68000
00000000000109a8	add	x0, x0, #0xa00
00000000000109ac	ldr	x8, [x0]
00000000000109b0	blr	x8
00000000000109b4	ldr	x21, [x0]
00000000000109b8	ldr	x8, [x21, #0x110]
00000000000109bc	str	x22, [x21, #0x110]
00000000000109c0	mov	x9, #0x500000000
00000000000109c4	stp	x8, x9, [sp, #0x8]
00000000000109c8	adr	x8, #0x71e7b
00000000000109cc	nop
00000000000109d0	ldarb	w8, [x8]
00000000000109d4	tbz	w8, #0x0, 0x109dc
00000000000109d8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000109dc	cbz	x20, 0x10bcc
00000000000109e0	ldr	x8, [x20]
00000000000109e4	and	x8, x8, #0xfffffffffffffffc
00000000000109e8	ldr	x8, [x8]
00000000000109ec	ldr	w9, [x8, #0x3c]
00000000000109f0	ldr	x8, [x8, #0x40]
00000000000109f4	tbnz	w9, #0x1f, 0x10a14
00000000000109f8	mov	w10, #0xa8
00000000000109fc	and	x9, x9, x10
0000000000010a00	lsl	x9, x9, #4
0000000000010a04	ldr	w8, [x8, x9]
0000000000010a08	cmp	w8, #0xa8
0000000000010a0c	b.eq	0x10ae4
0000000000010a10	b	0x10bcc
0000000000010a14	neg	w10, w9
0000000000010a18	mvn	w9, w9
0000000000010a1c	cmp	w10, #0x9
0000000000010a20	b.ge	0x10a6c
0000000000010a24	cmp	w10, #0x2
0000000000010a28	b.lt	0x10ab4
0000000000010a2c	mov	x10, #0x0
0000000000010a30	mov	x11, x8
0000000000010a34	ldr	w12, [x11]
0000000000010a38	cmp	w12, #0xa7
0000000000010a3c	b.gt	0x10ad0
0000000000010a40	add	x10, x10, #0x1
0000000000010a44	add	x11, x11, #0x10
0000000000010a48	cmp	x9, x10
0000000000010a4c	b.ne	0x10a34
0000000000010a50	mov	x10, x9
0000000000010a54	sxtw	x9, w10
0000000000010a58	lsl	x9, x9, #4
0000000000010a5c	ldr	w8, [x8, x9]
0000000000010a60	cmp	w8, #0xa8
0000000000010a64	b.eq	0x10ae4
0000000000010a68	b	0x10bcc
0000000000010a6c	mov	w10, #0x0
0000000000010a70	add	w11, w9, w10
0000000000010a74	cmp	w11, #0x0
0000000000010a78	cinc	w11, w11, lt
0000000000010a7c	asr	w11, w11, #1
0000000000010a80	sbfiz	x12, x11, #4, #32
0000000000010a84	ldr	w12, [x8, x12]
0000000000010a88	cmp	w12, #0xa8
0000000000010a8c	csinc	w10, w10, w11, ge
0000000000010a90	csel	w9, w9, w11, lt
0000000000010a94	cmp	w10, w9
0000000000010a98	b.lt	0x10a70
0000000000010a9c	sxtw	x9, w10
0000000000010aa0	lsl	x9, x9, #4
0000000000010aa4	ldr	w8, [x8, x9]
0000000000010aa8	cmp	w8, #0xa8
0000000000010aac	b.ne	0x10bcc
0000000000010ab0	b	0x10ae4
0000000000010ab4	mov	w10, #0x0
0000000000010ab8	sxtw	x9, w10
0000000000010abc	lsl	x9, x9, #4
0000000000010ac0	ldr	w8, [x8, x9]
0000000000010ac4	cmp	w8, #0xa8
0000000000010ac8	b.eq	0x10ae4
0000000000010acc	b	0x10bcc
0000000000010ad0	sxtw	x9, w10
0000000000010ad4	lsl	x9, x9, #4
0000000000010ad8	ldr	w8, [x8, x9]
0000000000010adc	cmp	w8, #0xa8
0000000000010ae0	b.ne	0x10bcc
0000000000010ae4	add	x1, x22, #0x18
0000000000010ae8	ldr	x8, [x20]
0000000000010aec	and	x8, x8, #0xfffffffffffffffc
0000000000010af0	ldr	x8, [x8]
0000000000010af4	ldr	w9, [x8, #0x3c]
0000000000010af8	ldr	x8, [x8, #0x40]
0000000000010afc	tbnz	w9, #0x1f, 0x10b0c
0000000000010b00	mov	w10, #0xa8
0000000000010b04	and	x9, x9, x10
0000000000010b08	b	0x10b90
0000000000010b0c	neg	w10, w9
0000000000010b10	mvn	w9, w9
0000000000010b14	cmp	w10, #0x9
0000000000010b18	b.ge	0x10b50
0000000000010b1c	cmp	w10, #0x2
0000000000010b20	b.lt	0x10b84
0000000000010b24	mov	x10, #0x0
0000000000010b28	mov	x11, x8
0000000000010b2c	ldr	w12, [x11]
0000000000010b30	cmp	w12, #0xa7
0000000000010b34	b.gt	0x10b8c
0000000000010b38	add	x10, x10, #0x1
0000000000010b3c	add	x11, x11, #0x10
0000000000010b40	cmp	x9, x10
0000000000010b44	b.ne	0x10b2c
0000000000010b48	mov	x10, x9
0000000000010b4c	b	0x10b8c
0000000000010b50	mov	w10, #0x0
0000000000010b54	add	w11, w9, w10
0000000000010b58	cmp	w11, #0x0
0000000000010b5c	cinc	w11, w11, lt
0000000000010b60	asr	w11, w11, #1
0000000000010b64	sbfiz	x12, x11, #4, #32
0000000000010b68	ldr	w12, [x8, x12]
0000000000010b6c	cmp	w12, #0xa8
0000000000010b70	csinc	w10, w10, w11, ge
0000000000010b74	csel	w9, w9, w11, lt
0000000000010b78	cmp	w10, w9
0000000000010b7c	b.lt	0x10b54
0000000000010b80	b	0x10b8c
0000000000010b84	mov	w10, #0x0
0000000000010b88	b	0x10b8c
0000000000010b8c	sxtw	x9, w10
0000000000010b90	add	x8, x8, x9, lsl #4
0000000000010b94	ldr	x8, [x8, #0x8]
0000000000010b98	ldr	x8, [x8]
0000000000010b9c	mov	x0, x20
0000000000010ba0	blr	x8
0000000000010ba4	ldr	x1, [x19, #0x8]
0000000000010ba8	cbz	x0, 0x10bc8
0000000000010bac	ldr	x8, [x0]
0000000000010bb0	and	x8, x8, #0xfffffffffffffffc
0000000000010bb4	ldr	x8, [x8]
0000000000010bb8	ldr	x8, [x8, #0x70]
0000000000010bbc	blr	x8
0000000000010bc0	cbz	w0, 0x10bd0
0000000000010bc4	b	0x10bec
0000000000010bc8	cbz	x1, 0x10bec
0000000000010bcc	mov	w0, #0x0
0000000000010bd0	ldr	x8, [sp, #0x8]
0000000000010bd4	str	x8, [x21, #0x110]
0000000000010bd8	ldp	x29, x30, [sp, #0x50]
0000000000010bdc	ldp	x20, x19, [sp, #0x40]
0000000000010be0	ldp	x22, x21, [sp, #0x30]
0000000000010be4	add	sp, sp, #0x60
0000000000010be8	ret
0000000000010bec	add	x1, x22, #0x20
0000000000010bf0	ldr	x8, [x20]
0000000000010bf4	and	x8, x8, #0xfffffffffffffffc
0000000000010bf8	ldr	x8, [x8]
0000000000010bfc	ldr	w9, [x8, #0x3c]
0000000000010c00	ldr	x8, [x8, #0x40]
0000000000010c04	tbnz	w9, #0x1f, 0x10c14
0000000000010c08	mov	w10, #0xa8
0000000000010c0c	and	x9, x9, x10
0000000000010c10	b	0x10c98
0000000000010c14	neg	w10, w9
0000000000010c18	mvn	w9, w9
0000000000010c1c	cmp	w10, #0x9
0000000000010c20	b.ge	0x10c58
0000000000010c24	cmp	w10, #0x2
0000000000010c28	b.lt	0x10c8c
0000000000010c2c	mov	x10, #0x0
0000000000010c30	mov	x11, x8
0000000000010c34	ldr	w12, [x11]
0000000000010c38	cmp	w12, #0xa7
0000000000010c3c	b.gt	0x10c94
0000000000010c40	add	x10, x10, #0x1
0000000000010c44	add	x11, x11, #0x10
0000000000010c48	cmp	x9, x10
0000000000010c4c	b.ne	0x10c34
0000000000010c50	mov	x10, x9
0000000000010c54	b	0x10c94
0000000000010c58	mov	w10, #0x0
0000000000010c5c	add	w11, w9, w10
0000000000010c60	cmp	w11, #0x0
0000000000010c64	cinc	w11, w11, lt
0000000000010c68	asr	w11, w11, #1
0000000000010c6c	sbfiz	x12, x11, #4, #32
0000000000010c70	ldr	w12, [x8, x12]
0000000000010c74	cmp	w12, #0xa8
0000000000010c78	csinc	w10, w10, w11, ge
0000000000010c7c	csel	w9, w9, w11, lt
0000000000010c80	cmp	w10, w9
0000000000010c84	b.lt	0x10c5c
0000000000010c88	b	0x10c94
0000000000010c8c	mov	w10, #0x0
0000000000010c90	b	0x10c94
0000000000010c94	sxtw	x9, w10
0000000000010c98	add	x8, x8, x9, lsl #4
0000000000010c9c	ldr	x8, [x8, #0x8]
0000000000010ca0	ldr	x8, [x8, #0x8]
0000000000010ca4	mov	x0, x20
0000000000010ca8	blr	x8
0000000000010cac	ldr	x1, [x19, #0x10]
0000000000010cb0	cbz	x0, 0x10ccc
0000000000010cb4	ldr	x8, [x0]
0000000000010cb8	and	x8, x8, #0xfffffffffffffffc
0000000000010cbc	ldr	x8, [x8]
0000000000010cc0	ldr	x8, [x8, #0x70]
0000000000010cc4	blr	x8
0000000000010cc8	b	0x10bd0
0000000000010ccc	cmp	x1, #0x0
0000000000010cd0	cset	w0, eq
0000000000010cd4	b	0x10bd0
_kfun:kotlin.native.internal.NSDictionaryAsKMap.Entry.hashCode#internal:
0000000000010cd8	stp	x20, x19, [sp, #-0x20]!
0000000000010cdc	stp	x29, x30, [sp, #0x10]
0000000000010ce0	add	x29, sp, #0x10
0000000000010ce4	mov	x19, x0
0000000000010ce8	adr	x8, #0x71b5b
0000000000010cec	nop
0000000000010cf0	ldarb	w8, [x8]
0000000000010cf4	tbz	w8, #0x0, 0x10cfc
0000000000010cf8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000010cfc	ldr	x0, [x19, #0x8]
0000000000010d00	cbz	x0, 0x10d48
0000000000010d04	ldr	x8, [x0]
0000000000010d08	and	x8, x8, #0xfffffffffffffffc
0000000000010d0c	ldr	x8, [x8]
0000000000010d10	ldr	x8, [x8, #0x78]
0000000000010d14	blr	x8
0000000000010d18	mov	x20, x0
0000000000010d1c	ldr	x0, [x19, #0x10]
0000000000010d20	cbz	x0, 0x10d38
0000000000010d24	ldr	x8, [x0]
0000000000010d28	and	x8, x8, #0xfffffffffffffffc
0000000000010d2c	ldr	x8, [x8]
0000000000010d30	ldr	x8, [x8, #0x78]
0000000000010d34	blr	x8
0000000000010d38	eor	w0, w20, w0
0000000000010d3c	ldp	x29, x30, [sp, #0x10]
0000000000010d40	ldp	x20, x19, [sp], #0x20
0000000000010d44	ret
0000000000010d48	mov	w20, #0x0
0000000000010d4c	ldr	x0, [x19, #0x10]
0000000000010d50	cbnz	x0, 0x10d24
0000000000010d54	b	0x10d38
_kfun:kotlin.native.internal.NSDictionaryAsKMap.Entry.toString#internal:
0000000000010d58	sub	sp, sp, #0xb0
0000000000010d5c	stp	x24, x23, [sp, #0x70]
0000000000010d60	stp	x22, x21, [sp, #0x80]
0000000000010d64	stp	x20, x19, [sp, #0x90]
0000000000010d68	stp	x29, x30, [sp, #0xa0]
0000000000010d6c	add	x29, sp, #0xa0
0000000000010d70	mov	x19, x1
0000000000010d74	mov	x20, x0
0000000000010d78	movi.16b	v0, #0x0
0000000000010d7c	stp	q0, q0, [sp, #0x20]
0000000000010d80	str	xzr, [sp, #0x60]
0000000000010d84	stp	q0, q0, [sp, #0x40]
0000000000010d88	add	x24, sp, #0x20
0000000000010d8c	add	x21, x24, #0x30
0000000000010d90	add	x22, x24, #0x28
0000000000010d94	stp	xzr, xzr, [sp, #0x10]
0000000000010d98	adr	x8, #0x475f8
0000000000010d9c	nop
0000000000010da0	orr	x8, x8, #0x3
0000000000010da4	str	x8, [sp, #0x8]
0000000000010da8	adrp	x0, 88 ; 0x68000
0000000000010dac	add	x0, x0, #0xa00
0000000000010db0	ldr	x8, [x0]
0000000000010db4	blr	x8
0000000000010db8	ldr	x23, [x0]
0000000000010dbc	ldr	x8, [x23, #0x110]
0000000000010dc0	str	x24, [x23, #0x110]
0000000000010dc4	mov	x9, #0x900000000
0000000000010dc8	stp	x8, x9, [sp, #0x28]
0000000000010dcc	adr	x8, #0x71a77
0000000000010dd0	nop
0000000000010dd4	ldarb	w8, [x8]
0000000000010dd8	tbz	w8, #0x0, 0x10de0
0000000000010ddc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000010de0	add	x8, sp, #0x8
0000000000010de4	str	x8, [sp, #0x38]
0000000000010de8	add	x0, sp, #0x8
0000000000010dec	mov	w1, #0xa
0000000000010df0	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
0000000000010df4	ldr	x0, [x20, #0x8]
0000000000010df8	cbz	x0, 0x10e20
0000000000010dfc	add	x8, sp, #0x20
0000000000010e00	add	x1, x8, #0x20
0000000000010e04	ldr	x8, [x0]
0000000000010e08	and	x8, x8, #0xfffffffffffffffc
0000000000010e0c	ldr	x8, [x8]
0000000000010e10	ldr	x8, [x8, #0x80]
0000000000010e14	blr	x8
0000000000010e18	mov	x1, x0
0000000000010e1c	b	0x10e24
0000000000010e20	mov	x1, #0x0
0000000000010e24	add	x0, sp, #0x8
0000000000010e28	mov	x2, x22
0000000000010e2c	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000010e30	adr	x1, #0x50a20
0000000000010e34	nop
0000000000010e38	add	x0, sp, #0x8
0000000000010e3c	mov	x2, x21
0000000000010e40	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000010e44	ldr	x0, [x20, #0x10]
0000000000010e48	cbz	x0, 0x10e6c
0000000000010e4c	add	x1, x24, #0x38
0000000000010e50	ldr	x8, [x0]
0000000000010e54	and	x8, x8, #0xfffffffffffffffc
0000000000010e58	ldr	x8, [x8]
0000000000010e5c	ldr	x8, [x8, #0x80]
0000000000010e60	blr	x8
0000000000010e64	mov	x1, x0
0000000000010e68	b	0x10e70
0000000000010e6c	mov	x1, #0x0
0000000000010e70	add	x8, sp, #0x20
0000000000010e74	add	x2, x8, #0x40
0000000000010e78	add	x0, sp, #0x8
0000000000010e7c	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000010e80	add	x0, sp, #0x8
0000000000010e84	mov	x1, x19
0000000000010e88	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
0000000000010e8c	str	x0, [x19]
0000000000010e90	ldr	x8, [sp, #0x28]
0000000000010e94	str	x8, [x23, #0x110]
0000000000010e98	ldp	x29, x30, [sp, #0xa0]
0000000000010e9c	ldp	x20, x19, [sp, #0x90]
0000000000010ea0	ldp	x22, x21, [sp, #0x80]
0000000000010ea4	ldp	x24, x23, [sp, #0x70]
0000000000010ea8	add	sp, sp, #0xb0
0000000000010eac	ret
_kfun:kotlin.native.internal.NSDictionaryAsKMap.EntryIterator.hasNext#internal:
0000000000010eb0	stp	x20, x19, [sp, #-0x20]!
0000000000010eb4	stp	x29, x30, [sp, #0x10]
0000000000010eb8	add	x29, sp, #0x10
0000000000010ebc	mov	x19, x0
0000000000010ec0	adr	x8, #0x71983
0000000000010ec4	nop
0000000000010ec8	ldarb	w8, [x8]
0000000000010ecc	tbz	w8, #0x0, 0x10ed4
0000000000010ed0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000010ed4	ldr	x0, [x19, #0x8]
0000000000010ed8	ldr	x8, [x0]
0000000000010edc	and	x8, x8, #0xfffffffffffffffc
0000000000010ee0	ldr	x8, [x8]
0000000000010ee4	ldr	w9, [x8, #0x3c]
0000000000010ee8	ldr	x8, [x8, #0x40]
0000000000010eec	tbnz	w9, #0x1f, 0x10f10
0000000000010ef0	mov	w10, #0xa0
0000000000010ef4	and	x9, x9, x10
0000000000010ef8	add	x8, x8, x9, lsl #4
0000000000010efc	ldr	x8, [x8, #0x8]
0000000000010f00	ldr	x1, [x8]
0000000000010f04	ldp	x29, x30, [sp, #0x10]
0000000000010f08	ldp	x20, x19, [sp], #0x20
0000000000010f0c	br	x1
0000000000010f10	neg	w10, w9
0000000000010f14	mvn	w9, w9
0000000000010f18	cmp	w10, #0x9
0000000000010f1c	b.ge	0x10f54
0000000000010f20	cmp	w10, #0x2
0000000000010f24	b.lt	0x10f88
0000000000010f28	mov	x10, #0x0
0000000000010f2c	mov	x11, x8
0000000000010f30	ldr	w12, [x11]
0000000000010f34	cmp	w12, #0x9f
0000000000010f38	b.gt	0x10f90
0000000000010f3c	add	x10, x10, #0x1
0000000000010f40	add	x11, x11, #0x10
0000000000010f44	cmp	x9, x10
0000000000010f48	b.ne	0x10f30
0000000000010f4c	mov	x10, x9
0000000000010f50	b	0x10f90
0000000000010f54	mov	w10, #0x0
0000000000010f58	add	w11, w9, w10
0000000000010f5c	cmp	w11, #0x0
0000000000010f60	cinc	w11, w11, lt
0000000000010f64	asr	w11, w11, #1
0000000000010f68	sbfiz	x12, x11, #4, #32
0000000000010f6c	ldr	w12, [x8, x12]
0000000000010f70	cmp	w12, #0xa0
0000000000010f74	csinc	w10, w10, w11, ge
0000000000010f78	csel	w9, w9, w11, lt
0000000000010f7c	cmp	w10, w9
0000000000010f80	b.lt	0x10f58
0000000000010f84	b	0x10f90
0000000000010f88	mov	w10, #0x0
0000000000010f8c	b	0x10f90
0000000000010f90	sxtw	x9, w10
0000000000010f94	add	x8, x8, x9, lsl #4
0000000000010f98	ldr	x8, [x8, #0x8]
0000000000010f9c	ldr	x1, [x8]
0000000000010fa0	ldp	x29, x30, [sp, #0x10]
0000000000010fa4	ldp	x20, x19, [sp], #0x20
0000000000010fa8	br	x1
_kfun:kotlin.native.internal.NSDictionaryAsKMap.EntryIterator.next#internal:
0000000000010fac	sub	sp, sp, #0x70
0000000000010fb0	stp	x24, x23, [sp, #0x30]
0000000000010fb4	stp	x22, x21, [sp, #0x40]
0000000000010fb8	stp	x20, x19, [sp, #0x50]
0000000000010fbc	stp	x29, x30, [sp, #0x60]
0000000000010fc0	add	x29, sp, #0x60
0000000000010fc4	mov	x19, x1
0000000000010fc8	mov	x20, x0
0000000000010fcc	movi.16b	v0, #0x0
0000000000010fd0	stp	q0, q0, [sp]
0000000000010fd4	str	xzr, [sp, #0x20]
0000000000010fd8	adrp	x0, 88 ; 0x68000
0000000000010fdc	add	x0, x0, #0xa00
0000000000010fe0	ldr	x8, [x0]
0000000000010fe4	blr	x8
0000000000010fe8	ldr	x23, [x0]
0000000000010fec	ldr	x8, [x23, #0x110]
0000000000010ff0	mov	x9, sp
0000000000010ff4	str	x9, [x23, #0x110]
0000000000010ff8	mov	x9, #0x500000000
0000000000010ffc	stp	x8, x9, [sp, #0x8]
0000000000011000	adr	x8, #0x71843
0000000000011004	nop
0000000000011008	ldarb	w8, [x8]
000000000001100c	tbz	w8, #0x0, 0x11014
0000000000011010	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000011014	ldr	x0, [x20, #0x8]
0000000000011018	ldr	x8, [x0]
000000000001101c	and	x8, x8, #0xfffffffffffffffc
0000000000011020	ldr	x8, [x8]
0000000000011024	ldr	w9, [x8, #0x3c]
0000000000011028	ldr	x8, [x8, #0x40]
000000000001102c	tbnz	w9, #0x1f, 0x1103c
0000000000011030	mov	w10, #0xa0
0000000000011034	and	x9, x9, x10
0000000000011038	b	0x110c0
000000000001103c	neg	w10, w9
0000000000011040	mvn	w9, w9
0000000000011044	cmp	w10, #0x9
0000000000011048	b.ge	0x11080
000000000001104c	cmp	w10, #0x2
0000000000011050	b.lt	0x110b4
0000000000011054	mov	x10, #0x0
0000000000011058	mov	x11, x8
000000000001105c	ldr	w12, [x11]
0000000000011060	cmp	w12, #0x9f
0000000000011064	b.gt	0x110bc
0000000000011068	add	x10, x10, #0x1
000000000001106c	add	x11, x11, #0x10
0000000000011070	cmp	x9, x10
0000000000011074	b.ne	0x1105c
0000000000011078	mov	x10, x9
000000000001107c	b	0x110bc
0000000000011080	mov	w10, #0x0
0000000000011084	add	w11, w9, w10
0000000000011088	cmp	w11, #0x0
000000000001108c	cinc	w11, w11, lt
0000000000011090	asr	w11, w11, #1
0000000000011094	sbfiz	x12, x11, #4, #32
0000000000011098	ldr	w12, [x8, x12]
000000000001109c	cmp	w12, #0xa0
00000000000110a0	csinc	w10, w10, w11, ge
00000000000110a4	csel	w9, w9, w11, lt
00000000000110a8	cmp	w10, w9
00000000000110ac	b.lt	0x11084
00000000000110b0	b	0x110bc
00000000000110b4	mov	w10, #0x0
00000000000110b8	b	0x110bc
00000000000110bc	sxtw	x9, w10
00000000000110c0	mov	x10, sp
00000000000110c4	add	x21, x10, #0x20
00000000000110c8	add	x1, x10, #0x18
00000000000110cc	add	x8, x8, x9, lsl #4
00000000000110d0	ldr	x8, [x8, #0x8]
00000000000110d4	ldr	x8, [x8, #0x8]
00000000000110d8	blr	x8
00000000000110dc	mov	x22, x0
00000000000110e0	ldr	x0, [x20, #0x10]
00000000000110e4	mov	x1, x22
00000000000110e8	mov	x2, x21
00000000000110ec	bl	_Kotlin_NSDictionaryAsKMap_getOrThrowConcurrentModification
00000000000110f0	mov	x20, x0
00000000000110f4	ldr	x8, [x23, #0x118]
00000000000110f8	add	x0, x8, #0x70
00000000000110fc	mov	w1, #0x20
0000000000011100	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000011104	adr	x8, #0x4595c
0000000000011108	nop
000000000001110c	str	x8, [x0, #0x10]!
0000000000011110	stur	xzr, [x0, #-0x8]
0000000000011114	str	x0, [x19]
0000000000011118	stp	x22, x20, [x0, #0x8]
000000000001111c	str	x0, [x19]
0000000000011120	ldr	x8, [sp, #0x8]
0000000000011124	str	x8, [x23, #0x110]
0000000000011128	ldp	x29, x30, [sp, #0x60]
000000000001112c	ldp	x20, x19, [sp, #0x50]
0000000000011130	ldp	x22, x21, [sp, #0x40]
0000000000011134	ldp	x24, x23, [sp, #0x30]
0000000000011138	add	sp, sp, #0x70
000000000001113c	ret
_kfun:kotlin.native.internal.NSDictionaryAsKMap.toString$lambda$0#internal:
0000000000011140	sub	sp, sp, #0xe0
0000000000011144	stp	x28, x27, [sp, #0x80]
0000000000011148	stp	x26, x25, [sp, #0x90]
000000000001114c	stp	x24, x23, [sp, #0xa0]
0000000000011150	stp	x22, x21, [sp, #0xb0]
0000000000011154	stp	x20, x19, [sp, #0xc0]
0000000000011158	stp	x29, x30, [sp, #0xd0]
000000000001115c	add	x29, sp, #0xd0
0000000000011160	mov	x19, x2
0000000000011164	mov	x21, x1
0000000000011168	mov	x20, x0
000000000001116c	movi.16b	v0, #0x0
0000000000011170	stp	q0, q0, [sp, #0x20]
0000000000011174	str	xzr, [sp, #0x70]
0000000000011178	stp	q0, q0, [sp, #0x50]
000000000001117c	str	q0, [sp, #0x40]
0000000000011180	add	x27, sp, #0x20
0000000000011184	add	x25, x27, #0x20
0000000000011188	stp	xzr, xzr, [sp, #0x10]
000000000001118c	adr	x8, #0x47204
0000000000011190	nop
0000000000011194	orr	x8, x8, #0x3
0000000000011198	str	x8, [sp, #0x8]
000000000001119c	adrp	x0, 87 ; 0x68000
00000000000111a0	add	x0, x0, #0xa00
00000000000111a4	ldr	x8, [x0]
00000000000111a8	blr	x8
00000000000111ac	ldr	x26, [x0]
00000000000111b0	ldr	x8, [x26, #0x110]
00000000000111b4	str	x27, [x26, #0x110]
00000000000111b8	mov	x9, #0xb00000000
00000000000111bc	stp	x8, x9, [sp, #0x28]
00000000000111c0	adr	x8, #0x71683
00000000000111c4	nop
00000000000111c8	ldarb	w8, [x8]
00000000000111cc	tbz	w8, #0x0, 0x111d4
00000000000111d0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000111d4	add	x24, x27, #0x30
00000000000111d8	add	x22, x27, #0x38
00000000000111dc	add	x8, sp, #0x8
00000000000111e0	str	x8, [sp, #0x38]
00000000000111e4	add	x0, sp, #0x8
00000000000111e8	mov	w1, #0xa
00000000000111ec	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
00000000000111f0	ldr	x8, [x21]
00000000000111f4	and	x8, x8, #0xfffffffffffffffc
00000000000111f8	ldr	x8, [x8]
00000000000111fc	ldr	w9, [x8, #0x3c]
0000000000011200	ldr	x8, [x8, #0x40]
0000000000011204	tbnz	w9, #0x1f, 0x11214
0000000000011208	mov	w10, #0xa8
000000000001120c	and	x9, x9, x10
0000000000011210	b	0x11298
0000000000011214	neg	w10, w9
0000000000011218	mvn	w9, w9
000000000001121c	cmp	w10, #0x9
0000000000011220	b.ge	0x11258
0000000000011224	cmp	w10, #0x2
0000000000011228	b.lt	0x1128c
000000000001122c	mov	x10, #0x0
0000000000011230	mov	x11, x8
0000000000011234	ldr	w12, [x11]
0000000000011238	cmp	w12, #0xa7
000000000001123c	b.gt	0x11294
0000000000011240	add	x10, x10, #0x1
0000000000011244	add	x11, x11, #0x10
0000000000011248	cmp	x9, x10
000000000001124c	b.ne	0x11234
0000000000011250	mov	x10, x9
0000000000011254	b	0x11294
0000000000011258	mov	w10, #0x0
000000000001125c	add	w11, w9, w10
0000000000011260	cmp	w11, #0x0
0000000000011264	cinc	w11, w11, lt
0000000000011268	asr	w11, w11, #1
000000000001126c	sbfiz	x12, x11, #4, #32
0000000000011270	ldr	w12, [x8, x12]
0000000000011274	cmp	w12, #0xa8
0000000000011278	csinc	w10, w10, w11, ge
000000000001127c	csel	w9, w9, w11, lt
0000000000011280	cmp	w10, w9
0000000000011284	b.lt	0x1125c
0000000000011288	b	0x11294
000000000001128c	mov	w10, #0x0
0000000000011290	b	0x11294
0000000000011294	sxtw	x9, w10
0000000000011298	add	x23, x27, #0x40
000000000001129c	add	x8, x8, x9, lsl #4
00000000000112a0	ldr	x8, [x8, #0x8]
00000000000112a4	ldr	x8, [x8]
00000000000112a8	mov	x0, x21
00000000000112ac	mov	x1, x25
00000000000112b0	blr	x8
00000000000112b4	cmp	x0, x20
00000000000112b8	b.eq	0x112e0
00000000000112bc	cbz	x0, 0x112ec
00000000000112c0	add	x1, x27, #0x28
00000000000112c4	ldr	x8, [x0]
00000000000112c8	and	x8, x8, #0xfffffffffffffffc
00000000000112cc	ldr	x8, [x8]
00000000000112d0	ldr	x8, [x8, #0x80]
00000000000112d4	blr	x8
00000000000112d8	mov	x1, x0
00000000000112dc	b	0x112f4
00000000000112e0	adr	x1, #0x50540
00000000000112e4	nop
00000000000112e8	b	0x112f4
00000000000112ec	adr	x1, #0x4fdb4
00000000000112f0	nop
00000000000112f4	str	x1, [sp, #0x48]
00000000000112f8	add	x0, sp, #0x8
00000000000112fc	mov	x2, x24
0000000000011300	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000011304	adr	x1, #0x5054c
0000000000011308	nop
000000000001130c	add	x0, sp, #0x8
0000000000011310	mov	x2, x22
0000000000011314	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000011318	ldr	x8, [x21]
000000000001131c	and	x8, x8, #0xfffffffffffffffc
0000000000011320	ldr	x8, [x8]
0000000000011324	ldr	w9, [x8, #0x3c]
0000000000011328	ldr	x8, [x8, #0x40]
000000000001132c	tbnz	w9, #0x1f, 0x1133c
0000000000011330	mov	w10, #0xa8
0000000000011334	and	x9, x9, x10
0000000000011338	b	0x113c0
000000000001133c	neg	w10, w9
0000000000011340	mvn	w9, w9
0000000000011344	cmp	w10, #0x9
0000000000011348	b.ge	0x11380
000000000001134c	cmp	w10, #0x2
0000000000011350	b.lt	0x113b4
0000000000011354	mov	x10, #0x0
0000000000011358	mov	x11, x8
000000000001135c	ldr	w12, [x11]
0000000000011360	cmp	w12, #0xa7
0000000000011364	b.gt	0x113bc
0000000000011368	add	x10, x10, #0x1
000000000001136c	add	x11, x11, #0x10
0000000000011370	cmp	x9, x10
0000000000011374	b.ne	0x1135c
0000000000011378	mov	x10, x9
000000000001137c	b	0x113bc
0000000000011380	mov	w10, #0x0
0000000000011384	add	w11, w9, w10
0000000000011388	cmp	w11, #0x0
000000000001138c	cinc	w11, w11, lt
0000000000011390	asr	w11, w11, #1
0000000000011394	sbfiz	x12, x11, #4, #32
0000000000011398	ldr	w12, [x8, x12]
000000000001139c	cmp	w12, #0xa8
00000000000113a0	csinc	w10, w10, w11, ge
00000000000113a4	csel	w9, w9, w11, lt
00000000000113a8	cmp	w10, w9
00000000000113ac	b.lt	0x11384
00000000000113b0	b	0x113bc
00000000000113b4	mov	w10, #0x0
00000000000113b8	b	0x113bc
00000000000113bc	sxtw	x9, w10
00000000000113c0	add	x8, x8, x9, lsl #4
00000000000113c4	ldr	x8, [x8, #0x8]
00000000000113c8	ldr	x8, [x8, #0x8]
00000000000113cc	mov	x0, x21
00000000000113d0	mov	x1, x23
00000000000113d4	blr	x8
00000000000113d8	cmp	x0, x20
00000000000113dc	b.eq	0x11404
00000000000113e0	cbz	x0, 0x11410
00000000000113e4	add	x1, x27, #0x48
00000000000113e8	ldr	x8, [x0]
00000000000113ec	and	x8, x8, #0xfffffffffffffffc
00000000000113f0	ldr	x8, [x8]
00000000000113f4	ldr	x8, [x8, #0x80]
00000000000113f8	blr	x8
00000000000113fc	mov	x1, x0
0000000000011400	b	0x11418
0000000000011404	adr	x1, #0x5041c
0000000000011408	nop
000000000001140c	b	0x11418
0000000000011410	adr	x1, #0x4fc90
0000000000011414	nop
0000000000011418	add	x8, sp, #0x20
000000000001141c	add	x2, x8, #0x50
0000000000011420	str	x1, [sp, #0x68]
0000000000011424	add	x0, sp, #0x8
0000000000011428	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000001142c	add	x0, sp, #0x8
0000000000011430	mov	x1, x19
0000000000011434	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
0000000000011438	str	x0, [x19]
000000000001143c	ldr	x8, [sp, #0x28]
0000000000011440	str	x8, [x26, #0x110]
0000000000011444	ldp	x29, x30, [sp, #0xd0]
0000000000011448	ldp	x20, x19, [sp, #0xc0]
000000000001144c	ldp	x22, x21, [sp, #0xb0]
0000000000011450	ldp	x24, x23, [sp, #0xa0]
0000000000011454	ldp	x26, x25, [sp, #0x90]
0000000000011458	ldp	x28, x27, [sp, #0x80]
000000000001145c	add	sp, sp, #0xe0
0000000000011460	ret
_kfun:kotlin.native.internal.NSDictionaryAsKMap.$toString$lambda$0$FUNCTION_REFERENCE$4.invoke#internal:
0000000000011464	stp	x22, x21, [sp, #-0x30]!
0000000000011468	stp	x20, x19, [sp, #0x10]
000000000001146c	stp	x29, x30, [sp, #0x20]
0000000000011470	add	x29, sp, #0x20
0000000000011474	mov	x19, x2
0000000000011478	mov	x20, x1
000000000001147c	mov	x21, x0
0000000000011480	adr	x8, #0x713c3
0000000000011484	nop
0000000000011488	ldarb	w8, [x8]
000000000001148c	tbz	w8, #0x0, 0x11494
0000000000011490	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000011494	ldr	x0, [x21, #0x8]
0000000000011498	mov	x1, x20
000000000001149c	mov	x2, x19
00000000000114a0	bl	"_kfun:kotlin.native.internal.NSDictionaryAsKMap.toString$lambda$0#internal"
00000000000114a4	str	x0, [x19]
00000000000114a8	ldp	x29, x30, [sp, #0x20]
00000000000114ac	ldp	x20, x19, [sp, #0x10]
00000000000114b0	ldp	x22, x21, [sp], #0x30
00000000000114b4	ret
_ThrowNullPointerException:
00000000000114b8	sub	sp, sp, #0x50
00000000000114bc	stp	x22, x21, [sp, #0x20]
00000000000114c0	stp	x20, x19, [sp, #0x30]
00000000000114c4	stp	x29, x30, [sp, #0x40]
00000000000114c8	add	x29, sp, #0x40
00000000000114cc	movi.16b	v0, #0x0
00000000000114d0	stp	q0, q0, [sp]
00000000000114d4	adrp	x19, 87 ; 0x68000
00000000000114d8	add	x19, x19, #0xa00
00000000000114dc	ldr	x21, [x19]
00000000000114e0	mov	x0, x19
00000000000114e4	blr	x21
00000000000114e8	ldr	x8, [x0]
00000000000114ec	ldr	x9, [x8, #0x110]
00000000000114f0	mov	x10, sp
00000000000114f4	str	x10, [x8, #0x110]
00000000000114f8	mov	x8, #0x400000000
00000000000114fc	stp	x9, x8, [sp, #0x8]
0000000000011500	adr	x8, #0x71343
0000000000011504	nop
0000000000011508	ldarb	w8, [x8]
000000000001150c	tbz	w8, #0x0, 0x11514
0000000000011510	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000011514	mov	x0, x19
0000000000011518	blr	x21
000000000001151c	ldr	x8, [x0]
0000000000011520	ldr	x8, [x8, #0x118]
0000000000011524	add	x0, x8, #0x70
0000000000011528	mov	w1, #0x38
000000000001152c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000011530	mov	x20, x0
0000000000011534	adr	x8, #0x439cc
0000000000011538	nop
000000000001153c	str	x8, [x20, #0x10]!
0000000000011540	stur	xzr, [x20, #-0x8]
0000000000011544	str	x20, [sp, #0x18]
0000000000011548	mov	x0, x20
000000000001154c	mov	x1, #0x0
0000000000011550	bl	"_kfun:kotlin.Throwable#<init>(kotlin.String?;kotlin.Throwable?){}"
0000000000011554	mov	x0, x20
0000000000011558	bl	_ThrowException
000000000001155c	brk	#0x1
0000000000011560	mov	x1, x0
0000000000011564	mov	x0, x19
0000000000011568	blr	x21
000000000001156c	ldr	x8, [x0]
0000000000011570	ldr	x9, [sp, #0x8]
0000000000011574	str	x9, [x8, #0x110]
0000000000011578	mov	x0, x1
000000000001157c	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
_ThrowArrayIndexOutOfBoundsException:
0000000000011580	sub	sp, sp, #0x50
0000000000011584	stp	x22, x21, [sp, #0x20]
0000000000011588	stp	x20, x19, [sp, #0x30]
000000000001158c	stp	x29, x30, [sp, #0x40]
0000000000011590	add	x29, sp, #0x40
0000000000011594	movi.16b	v0, #0x0
0000000000011598	stp	q0, q0, [sp]
000000000001159c	adrp	x19, 87 ; 0x68000
00000000000115a0	add	x19, x19, #0xa00
00000000000115a4	ldr	x21, [x19]
00000000000115a8	mov	x0, x19
00000000000115ac	blr	x21
00000000000115b0	ldr	x8, [x0]
00000000000115b4	ldr	x9, [x8, #0x110]
00000000000115b8	mov	x10, sp
00000000000115bc	str	x10, [x8, #0x110]
00000000000115c0	mov	x8, #0x400000000
00000000000115c4	stp	x9, x8, [sp, #0x8]
00000000000115c8	adr	x8, #0x7127b
00000000000115cc	nop
00000000000115d0	ldarb	w8, [x8]
00000000000115d4	tbz	w8, #0x0, 0x115dc
00000000000115d8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000115dc	mov	x0, x19
00000000000115e0	blr	x21
00000000000115e4	ldr	x8, [x0]
00000000000115e8	ldr	x8, [x8, #0x118]
00000000000115ec	add	x0, x8, #0x70
00000000000115f0	mov	w1, #0x38
00000000000115f4	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000115f8	mov	x20, x0
00000000000115fc	adr	x8, #0x439a4
0000000000011600	nop
0000000000011604	str	x8, [x20, #0x10]!
0000000000011608	stur	xzr, [x20, #-0x8]
000000000001160c	str	x20, [sp, #0x18]
0000000000011610	mov	x0, x20
0000000000011614	mov	x1, #0x0
0000000000011618	bl	"_kfun:kotlin.Throwable#<init>(kotlin.String?;kotlin.Throwable?){}"
000000000001161c	mov	x0, x20
0000000000011620	bl	_ThrowException
0000000000011624	brk	#0x1
0000000000011628	mov	x1, x0
000000000001162c	mov	x0, x19
0000000000011630	blr	x21
0000000000011634	ldr	x8, [x0]
0000000000011638	ldr	x9, [sp, #0x8]
000000000001163c	str	x9, [x8, #0x110]
0000000000011640	mov	x0, x1
0000000000011644	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
_ThrowClassCastException:
0000000000011648	sub	sp, sp, #0xf0
000000000001164c	stp	x24, x23, [sp, #0xb0]
0000000000011650	stp	x22, x21, [sp, #0xc0]
0000000000011654	stp	x20, x19, [sp, #0xd0]
0000000000011658	stp	x29, x30, [sp, #0xe0]
000000000001165c	add	x29, sp, #0xe0
0000000000011660	mov	x21, x1
0000000000011664	mov	x20, x0
0000000000011668	movi.16b	v0, #0x0
000000000001166c	stp	q0, q0, [sp, #0x40]
0000000000011670	str	xzr, [sp, #0xa0]
0000000000011674	stp	q0, q0, [sp, #0x80]
0000000000011678	stp	q0, q0, [sp, #0x60]
000000000001167c	add	x23, sp, #0x40
0000000000011680	adr	x8, #0x449c0
0000000000011684	nop
0000000000011688	orr	x8, x8, #0x3
000000000001168c	stp	x8, xzr, [sp, #0x30]
0000000000011690	stp	xzr, xzr, [sp, #0x20]
0000000000011694	adr	x9, #0x46cfc
0000000000011698	nop
000000000001169c	orr	x9, x9, #0x3
00000000000116a0	stp	xzr, x9, [sp, #0x10]
00000000000116a4	str	x8, [sp, #0x8]
00000000000116a8	adrp	x19, 87 ; 0x68000
00000000000116ac	add	x19, x19, #0xa00
00000000000116b0	ldr	x22, [x19]
00000000000116b4	mov	x0, x19
00000000000116b8	blr	x22
00000000000116bc	ldr	x8, [x0]
00000000000116c0	ldr	x9, [x8, #0x110]
00000000000116c4	str	x23, [x8, #0x110]
00000000000116c8	mov	x8, #0xd00000000
00000000000116cc	stp	x9, x8, [sp, #0x48]
00000000000116d0	adr	x8, #0x71173
00000000000116d4	nop
00000000000116d8	ldarb	w8, [x8]
00000000000116dc	tbz	w8, #0x0, 0x116e4
00000000000116e0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000116e4	add	x8, sp, #0x30
00000000000116e8	str	x21, [sp, #0x38]
00000000000116ec	add	x9, sp, #0x18
00000000000116f0	stp	x8, x9, [sp, #0x58]
00000000000116f4	add	x0, sp, #0x18
00000000000116f8	mov	w1, #0xa
00000000000116fc	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
0000000000011700	add	x8, sp, #0x40
0000000000011704	add	x1, x8, #0x30
0000000000011708	ldr	x8, [x20]
000000000001170c	and	x8, x8, #0xfffffffffffffffc
0000000000011710	ldr	x8, [x8]
0000000000011714	add	x9, sp, #0x8
0000000000011718	str	x9, [sp, #0x68]
000000000001171c	str	x8, [sp, #0x10]
0000000000011720	add	x0, sp, #0x8
0000000000011724	bl	"_kfun:kotlin.native.internal.KClassImpl#toString(){}kotlin.String"
0000000000011728	mov	x1, x0
000000000001172c	add	x2, x23, #0x38
0000000000011730	add	x0, sp, #0x18
0000000000011734	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000011738	add	x2, x23, #0x40
000000000001173c	adr	x1, #0x50134
0000000000011740	nop
0000000000011744	add	x0, sp, #0x18
0000000000011748	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000001174c	add	x1, x23, #0x48
0000000000011750	add	x0, sp, #0x30
0000000000011754	bl	"_kfun:kotlin.native.internal.KClassImpl#toString(){}kotlin.String"
0000000000011758	mov	x1, x0
000000000001175c	add	x2, x23, #0x50
0000000000011760	add	x0, sp, #0x18
0000000000011764	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000011768	add	x1, x23, #0x58
000000000001176c	add	x0, sp, #0x18
0000000000011770	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
0000000000011774	mov	x20, x0
0000000000011778	mov	x0, x19
000000000001177c	blr	x22
0000000000011780	ldr	x8, [x0]
0000000000011784	ldr	x8, [x8, #0x118]
0000000000011788	add	x0, x8, #0x70
000000000001178c	mov	w1, #0x38
0000000000011790	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000011794	mov	x21, x0
0000000000011798	adr	x8, #0x438a8
000000000001179c	nop
00000000000117a0	str	x8, [x21, #0x10]!
00000000000117a4	stur	xzr, [x21, #-0x8]
00000000000117a8	str	x21, [sp, #0xa0]
00000000000117ac	mov	x0, x21
00000000000117b0	mov	x1, x20
00000000000117b4	bl	"_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}"
00000000000117b8	mov	x0, x21
00000000000117bc	bl	_ThrowException
00000000000117c0	brk	#0x1
00000000000117c4	mov	x1, x0
00000000000117c8	mov	x0, x19
00000000000117cc	blr	x22
00000000000117d0	ldr	x8, [x0]
00000000000117d4	ldr	x9, [sp, #0x48]
00000000000117d8	str	x9, [x8, #0x110]
00000000000117dc	mov	x0, x1
00000000000117e0	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
_ThrowIllegalArgumentException:
00000000000117e4	sub	sp, sp, #0x50
00000000000117e8	stp	x22, x21, [sp, #0x20]
00000000000117ec	stp	x20, x19, [sp, #0x30]
00000000000117f0	stp	x29, x30, [sp, #0x40]
00000000000117f4	add	x29, sp, #0x40
00000000000117f8	movi.16b	v0, #0x0
00000000000117fc	stp	q0, q0, [sp]
0000000000011800	adrp	x19, 87 ; 0x68000
0000000000011804	add	x19, x19, #0xa00
0000000000011808	ldr	x21, [x19]
000000000001180c	mov	x0, x19
0000000000011810	blr	x21
0000000000011814	ldr	x8, [x0]
0000000000011818	ldr	x9, [x8, #0x110]
000000000001181c	mov	x10, sp
0000000000011820	str	x10, [x8, #0x110]
0000000000011824	mov	x8, #0x400000000
0000000000011828	stp	x9, x8, [sp, #0x8]
000000000001182c	adr	x8, #0x71017
0000000000011830	nop
0000000000011834	ldarb	w8, [x8]
0000000000011838	tbz	w8, #0x0, 0x11840
000000000001183c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000011840	mov	x0, x19
0000000000011844	blr	x21
0000000000011848	ldr	x8, [x0]
000000000001184c	ldr	x8, [x8, #0x118]
0000000000011850	add	x0, x8, #0x70
0000000000011854	mov	w1, #0x38
0000000000011858	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001185c	mov	x20, x0
0000000000011860	adr	x8, #0x43420
0000000000011864	nop
0000000000011868	str	x8, [x20, #0x10]!
000000000001186c	stur	xzr, [x20, #-0x8]
0000000000011870	str	x20, [sp, #0x18]
0000000000011874	mov	x0, x20
0000000000011878	mov	x1, #0x0
000000000001187c	bl	"_kfun:kotlin.Throwable#<init>(kotlin.String?;kotlin.Throwable?){}"
0000000000011880	mov	x0, x20
0000000000011884	bl	_ThrowException
0000000000011888	brk	#0x1
000000000001188c	mov	x1, x0
0000000000011890	mov	x0, x19
0000000000011894	blr	x21
0000000000011898	ldr	x8, [x0]
000000000001189c	ldr	x9, [sp, #0x8]
00000000000118a0	str	x9, [x8, #0x110]
00000000000118a4	mov	x0, x1
00000000000118a8	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
_ReportUnhandledException:
00000000000118ac	sub	sp, sp, #0x50
00000000000118b0	stp	x22, x21, [sp, #0x20]
00000000000118b4	stp	x20, x19, [sp, #0x30]
00000000000118b8	stp	x29, x30, [sp, #0x40]
00000000000118bc	add	x29, sp, #0x40
00000000000118c0	mov	x20, x0
00000000000118c4	str	xzr, [sp, #0x8]
00000000000118c8	adrp	x19, 87 ; 0x68000
00000000000118cc	add	x19, x19, #0xa00
00000000000118d0	ldr	x21, [x19]
00000000000118d4	mov	x0, x19
00000000000118d8	blr	x21
00000000000118dc	ldr	x8, [x0]
00000000000118e0	ldr	x9, [x8, #0x110]
00000000000118e4	add	x10, sp, #0x8
00000000000118e8	str	x10, [x8, #0x110]
00000000000118ec	mov	x8, #0x300000000
00000000000118f0	stp	x9, x8, [sp, #0x10]
00000000000118f4	adr	x8, #0x70f4f
00000000000118f8	nop
00000000000118fc	ldarb	w8, [x8]
0000000000011900	tbz	w8, #0x0, 0x11908
0000000000011904	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000011908	adr	x0, #0x4ffa8
000000000001190c	nop
0000000000011910	bl	_Kotlin_io_Console_print
0000000000011914	mov	x0, x20
0000000000011918	bl	"_kfun:kotlin.Throwable#printStackTrace(){}"
000000000001191c	mov	x0, x19
0000000000011920	blr	x21
0000000000011924	ldr	x8, [x0]
0000000000011928	ldr	x9, [sp, #0x10]
000000000001192c	str	x9, [x8, #0x110]
0000000000011930	ldp	x29, x30, [sp, #0x40]
0000000000011934	ldp	x20, x19, [sp, #0x30]
0000000000011938	ldp	x22, x21, [sp, #0x20]
000000000001193c	add	sp, sp, #0x50
0000000000011940	ret
0000000000011944	mov	x1, x0
0000000000011948	mov	x0, x19
000000000001194c	blr	x21
0000000000011950	ldr	x8, [x0]
0000000000011954	ldr	x9, [sp, #0x10]
0000000000011958	str	x9, [x8, #0x110]
000000000001195c	mov	x0, x1
0000000000011960	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
_kfun:kotlin.text#checkBoundsIndexes(kotlin.Int;kotlin.Int;kotlin.Int){}:
0000000000011964	sub	sp, sp, #0x140
0000000000011968	stp	x28, x27, [sp, #0xe0]
000000000001196c	stp	x26, x25, [sp, #0xf0]
0000000000011970	stp	x24, x23, [sp, #0x100]
0000000000011974	stp	x22, x21, [sp, #0x110]
0000000000011978	stp	x20, x19, [sp, #0x120]
000000000001197c	stp	x29, x30, [sp, #0x130]
0000000000011980	add	x29, sp, #0x130
0000000000011984	mov	x21, x2
0000000000011988	mov	x19, x1
000000000001198c	mov	x20, x0
0000000000011990	str	xzr, [sp, #0xd0]
0000000000011994	movi.16b	v0, #0x0
0000000000011998	stp	q0, q0, [sp, #0xb0]
000000000001199c	stp	q0, q0, [sp, #0x90]
00000000000119a0	stp	q0, q0, [sp, #0x70]
00000000000119a4	stp	q0, q0, [sp, #0x50]
00000000000119a8	str	q0, [sp, #0x40]
00000000000119ac	stp	xzr, xzr, [sp, #0x30]
00000000000119b0	adr	x8, #0x469e0
00000000000119b4	nop
00000000000119b8	orr	x8, x8, #0x3
00000000000119bc	stp	xzr, x8, [sp, #0x20]
00000000000119c0	stp	x8, xzr, [sp, #0x10]
00000000000119c4	adrp	x0, 87 ; 0x68000
00000000000119c8	add	x0, x0, #0xa00
00000000000119cc	ldr	x8, [x0]
00000000000119d0	blr	x8
00000000000119d4	ldr	x22, [x0]
00000000000119d8	ldr	x8, [x22, #0x110]
00000000000119dc	add	x9, sp, #0x40
00000000000119e0	str	x9, [x22, #0x110]
00000000000119e4	mov	x9, #0x1300000000
00000000000119e8	stp	x8, x9, [sp, #0x48]
00000000000119ec	adr	x8, #0x70e57
00000000000119f0	nop
00000000000119f4	ldarb	w8, [x8]
00000000000119f8	tbz	w8, #0x0, 0x11a00
00000000000119fc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000011a00	tbnz	w20, #0x1f, 0x11a3c
0000000000011a04	cmp	w19, w21
0000000000011a08	b.gt	0x11a3c
0000000000011a0c	cmp	w20, w19
0000000000011a10	b.gt	0x11b1c
0000000000011a14	ldr	x8, [sp, #0x48]
0000000000011a18	str	x8, [x22, #0x110]
0000000000011a1c	ldp	x29, x30, [sp, #0x130]
0000000000011a20	ldp	x20, x19, [sp, #0x120]
0000000000011a24	ldp	x22, x21, [sp, #0x110]
0000000000011a28	ldp	x24, x23, [sp, #0x100]
0000000000011a2c	ldp	x26, x25, [sp, #0xf0]
0000000000011a30	ldp	x28, x27, [sp, #0xe0]
0000000000011a34	add	sp, sp, #0x140
0000000000011a38	ret
0000000000011a3c	add	x8, sp, #0x40
0000000000011a40	add	x9, x8, #0x50
0000000000011a44	str	x9, [sp, #0x8]
0000000000011a48	add	x23, x8, #0x48
0000000000011a4c	add	x24, x8, #0x40
0000000000011a50	add	x25, x8, #0x38
0000000000011a54	add	x26, x8, #0x30
0000000000011a58	add	x27, x8, #0x28
0000000000011a5c	add	x9, sp, #0x28
0000000000011a60	str	x9, [sp, #0x58]
0000000000011a64	add	x28, x8, #0x20
0000000000011a68	add	x0, sp, #0x28
0000000000011a6c	mov	w1, #0xa
0000000000011a70	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
0000000000011a74	adr	x1, #0x4fe8c
0000000000011a78	nop
0000000000011a7c	add	x0, sp, #0x28
0000000000011a80	mov	x2, x28
0000000000011a84	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000011a88	add	x0, sp, #0x28
0000000000011a8c	mov	x1, x20
0000000000011a90	mov	x2, x27
0000000000011a94	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
0000000000011a98	adr	x1, #0x4fe98
0000000000011a9c	nop
0000000000011aa0	add	x0, sp, #0x28
0000000000011aa4	mov	x2, x26
0000000000011aa8	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000011aac	add	x0, sp, #0x28
0000000000011ab0	mov	x1, x19
0000000000011ab4	mov	x2, x25
0000000000011ab8	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
0000000000011abc	adr	x1, #0x4f984
0000000000011ac0	nop
0000000000011ac4	add	x0, sp, #0x28
0000000000011ac8	mov	x2, x24
0000000000011acc	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000011ad0	add	x0, sp, #0x28
0000000000011ad4	mov	x1, x21
0000000000011ad8	mov	x2, x23
0000000000011adc	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
0000000000011ae0	add	x0, sp, #0x28
0000000000011ae4	ldr	x1, [sp, #0x8]
0000000000011ae8	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
0000000000011aec	mov	x19, x0
0000000000011af0	ldr	x8, [x22, #0x118]
0000000000011af4	add	x0, x8, #0x70
0000000000011af8	mov	w1, #0x38
0000000000011afc	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000011b00	mov	x20, x0
0000000000011b04	adr	x8, #0x430dc
0000000000011b08	nop
0000000000011b0c	str	x8, [x20, #0x10]!
0000000000011b10	stur	xzr, [x20, #-0x8]
0000000000011b14	str	x20, [sp, #0x98]
0000000000011b18	b	0x11bc8
0000000000011b1c	add	x8, sp, #0x40
0000000000011b20	add	x21, x8, #0x88
0000000000011b24	add	x26, x8, #0x80
0000000000011b28	add	x23, x8, #0x78
0000000000011b2c	add	x24, x8, #0x70
0000000000011b30	add	x25, x8, #0x68
0000000000011b34	add	x8, sp, #0x10
0000000000011b38	str	x8, [sp, #0xa0]
0000000000011b3c	add	x0, sp, #0x10
0000000000011b40	mov	w1, #0xa
0000000000011b44	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
0000000000011b48	adr	x1, #0x4fdb8
0000000000011b4c	nop
0000000000011b50	add	x0, sp, #0x10
0000000000011b54	mov	x2, x25
0000000000011b58	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000011b5c	add	x0, sp, #0x10
0000000000011b60	mov	x1, x20
0000000000011b64	mov	x2, x24
0000000000011b68	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
0000000000011b6c	adr	x1, #0x4fdf4
0000000000011b70	nop
0000000000011b74	add	x0, sp, #0x10
0000000000011b78	mov	x2, x23
0000000000011b7c	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000011b80	add	x0, sp, #0x10
0000000000011b84	mov	x1, x19
0000000000011b88	mov	x2, x26
0000000000011b8c	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
0000000000011b90	add	x0, sp, #0x10
0000000000011b94	mov	x1, x21
0000000000011b98	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
0000000000011b9c	mov	x19, x0
0000000000011ba0	ldr	x8, [x22, #0x118]
0000000000011ba4	add	x0, x8, #0x70
0000000000011ba8	mov	w1, #0x38
0000000000011bac	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000011bb0	mov	x20, x0
0000000000011bb4	adr	x8, #0x430cc
0000000000011bb8	nop
0000000000011bbc	str	x8, [x20, #0x10]!
0000000000011bc0	stur	xzr, [x20, #-0x8]
0000000000011bc4	str	x20, [sp, #0xd0]
0000000000011bc8	mov	x0, x20
0000000000011bcc	mov	x1, x19
0000000000011bd0	bl	"_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}"
0000000000011bd4	mov	x0, x20
0000000000011bd8	bl	_ThrowException
_kfun:kotlin.collections#getOrNull__at__kotlin.Array<out|0:0>(kotlin.Int){0ยง<kotlin.Any?>}0:0?:
0000000000011bdc	stp	x22, x21, [sp, #-0x30]!
0000000000011be0	stp	x20, x19, [sp, #0x10]
0000000000011be4	stp	x29, x30, [sp, #0x20]
0000000000011be8	add	x29, sp, #0x20
0000000000011bec	mov	x19, x2
0000000000011bf0	mov	x20, x1
0000000000011bf4	mov	x21, x0
0000000000011bf8	adr	x8, #0x70c4b
0000000000011bfc	nop
0000000000011c00	ldarb	w8, [x8]
0000000000011c04	tbz	w8, #0x0, 0x11c0c
0000000000011c08	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000011c0c	tbnz	w20, #0x1f, 0x11c20
0000000000011c10	ldr	w8, [x21, #0x8]
0000000000011c14	sub	w9, w8, #0x1
0000000000011c18	cmp	w9, w20
0000000000011c1c	b.ge	0x11c38
0000000000011c20	mov	x0, #0x0
0000000000011c24	str	x0, [x19]
0000000000011c28	ldp	x29, x30, [sp, #0x20]
0000000000011c2c	ldp	x20, x19, [sp, #0x10]
0000000000011c30	ldp	x22, x21, [sp], #0x30
0000000000011c34	ret
0000000000011c38	cmp	w8, w20
0000000000011c3c	b.ls	0x11c60
0000000000011c40	add	x8, x21, w20, sxtw #3
0000000000011c44	ldr	x0, [x8, #0x10]
0000000000011c48	str	x0, [x19]
0000000000011c4c	str	x0, [x19]
0000000000011c50	ldp	x29, x30, [sp, #0x20]
0000000000011c54	ldp	x20, x19, [sp, #0x10]
0000000000011c58	ldp	x22, x21, [sp], #0x30
0000000000011c5c	ret
0000000000011c60	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.collections#joinToString$default__at__kotlin.collections.Iterable<0:0>(kotlin.CharSequence?;kotlin.CharSequence?;kotlin.CharSequence?;kotlin.Int;kotlin.CharSequence?;kotlin.Function1<0:0,kotlin.CharSequence>?;kotlin.Int){0ยง<kotlin.Any?>}kotlin.String:
0000000000011c64	sub	sp, sp, #0x170
0000000000011c68	stp	x28, x27, [sp, #0x110]
0000000000011c6c	stp	x26, x25, [sp, #0x120]
0000000000011c70	stp	x24, x23, [sp, #0x130]
0000000000011c74	stp	x22, x21, [sp, #0x140]
0000000000011c78	stp	x20, x19, [sp, #0x150]
0000000000011c7c	stp	x29, x30, [sp, #0x160]
0000000000011c80	add	x29, sp, #0x160
0000000000011c84	stp	x2, x4, [sp, #0x8]
0000000000011c88	mov	x23, x3
0000000000011c8c	mov	x26, x1
0000000000011c90	mov	x19, x0
0000000000011c94	adr	x8, #0x70baf
0000000000011c98	nop
0000000000011c9c	ldarb	w8, [x8]
0000000000011ca0	tbz	w8, #0x0, 0x11ca8
0000000000011ca4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000011ca8	movi.16b	v0, #0x0
0000000000011cac	stp	q0, q0, [sp, #0x40]
0000000000011cb0	str	xzr, [sp, #0x60]
0000000000011cb4	adrp	x21, 87 ; 0x68000
0000000000011cb8	add	x21, x21, #0xa00
0000000000011cbc	ldr	x20, [x21]
0000000000011cc0	mov	x0, x21
0000000000011cc4	blr	x20
0000000000011cc8	mov	x24, x0
0000000000011ccc	ldr	x8, [x0]
0000000000011cd0	add	x9, sp, #0x40
0000000000011cd4	ldp	x10, x11, [x8, #0x110]
0000000000011cd8	str	x9, [x8, #0x110]
0000000000011cdc	mov	x8, #0x500000000
0000000000011ce0	stp	x10, x8, [sp, #0x48]
0000000000011ce4	add	x0, x11, #0x70
0000000000011ce8	mov	w1, #0x20
0000000000011cec	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000011cf0	mov	x22, x0
0000000000011cf4	adr	x8, #0x4669c
0000000000011cf8	nop
0000000000011cfc	str	x8, [x22, #0x10]!
0000000000011d00	stur	xzr, [x22, #-0x8]
0000000000011d04	str	x22, [sp, #0x58]
0000000000011d08	mov	x0, x22
0000000000011d0c	mov	w1, #0xa
0000000000011d10	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
0000000000011d14	movi.16b	v0, #0x0
0000000000011d18	stp	q0, q0, [sp, #0x70]
0000000000011d1c	str	xzr, [sp, #0xb0]
0000000000011d20	stp	q0, q0, [sp, #0x90]
0000000000011d24	add	x8, sp, #0x70
0000000000011d28	add	x27, x8, #0x20
0000000000011d2c	add	x2, x8, #0x18
0000000000011d30	ldr	x9, [x24]
0000000000011d34	ldr	x10, [x9, #0x110]
0000000000011d38	str	x8, [x9, #0x110]
0000000000011d3c	mov	x9, #0x900000000
0000000000011d40	stp	x10, x9, [sp, #0x78]
0000000000011d44	ldr	x9, [x22]
0000000000011d48	and	x9, x9, #0xfffffffffffffffc
0000000000011d4c	ldr	x9, [x9]
0000000000011d50	ldr	w10, [x9, #0x3c]
0000000000011d54	ldr	x9, [x9, #0x40]
0000000000011d58	tbnz	w10, #0x1f, 0x11d68
0000000000011d5c	mov	w11, #0xc8
0000000000011d60	and	x10, x10, x11
0000000000011d64	b	0x11dec
0000000000011d68	neg	w11, w10
0000000000011d6c	mvn	w10, w10
0000000000011d70	cmp	w11, #0x9
0000000000011d74	b.ge	0x11dac
0000000000011d78	cmp	w11, #0x2
0000000000011d7c	b.lt	0x11de0
0000000000011d80	mov	x11, #0x0
0000000000011d84	mov	x12, x9
0000000000011d88	ldr	w13, [x12]
0000000000011d8c	cmp	w13, #0xc7
0000000000011d90	b.gt	0x11de8
0000000000011d94	add	x11, x11, #0x1
0000000000011d98	add	x12, x12, #0x10
0000000000011d9c	cmp	x10, x11
0000000000011da0	b.ne	0x11d88
0000000000011da4	mov	x11, x10
0000000000011da8	b	0x11de8
0000000000011dac	mov	w11, #0x0
0000000000011db0	add	w12, w10, w11
0000000000011db4	cmp	w12, #0x0
0000000000011db8	cinc	w12, w12, lt
0000000000011dbc	asr	w12, w12, #1
0000000000011dc0	sbfiz	x13, x12, #4, #32
0000000000011dc4	ldr	w13, [x9, x13]
0000000000011dc8	cmp	w13, #0xc8
0000000000011dcc	csinc	w11, w11, w12, ge
0000000000011dd0	csel	w10, w10, w12, lt
0000000000011dd4	cmp	w11, w10
0000000000011dd8	b.lt	0x11db0
0000000000011ddc	b	0x11de8
0000000000011de0	mov	w11, #0x0
0000000000011de4	b	0x11de8
0000000000011de8	sxtw	x10, w11
0000000000011dec	add	x11, x8, #0x30
0000000000011df0	str	x11, [sp, #0x38]
0000000000011df4	add	x25, x8, #0x28
0000000000011df8	add	x8, x9, x10, lsl #4
0000000000011dfc	ldr	x8, [x8, #0x8]
0000000000011e00	ldr	x8, [x8, #0x8]
0000000000011e04	mov	x0, x22
0000000000011e08	mov	x1, x26
0000000000011e0c	blr	x8
0000000000011e10	ldr	x8, [x19]
0000000000011e14	and	x8, x8, #0xfffffffffffffffc
0000000000011e18	ldr	x8, [x8]
0000000000011e1c	ldr	w9, [x8, #0x3c]
0000000000011e20	ldr	x8, [x8, #0x40]
0000000000011e24	tbnz	w9, #0x1f, 0x11e34
0000000000011e28	mov	w10, #0x31
0000000000011e2c	and	x9, x9, x10
0000000000011e30	b	0x11eb8
0000000000011e34	neg	w10, w9
0000000000011e38	mvn	w9, w9
0000000000011e3c	cmp	w10, #0x9
0000000000011e40	b.ge	0x11e78
0000000000011e44	cmp	w10, #0x2
0000000000011e48	b.lt	0x11eac
0000000000011e4c	mov	x10, #0x0
0000000000011e50	mov	x11, x8
0000000000011e54	ldr	w12, [x11]
0000000000011e58	cmp	w12, #0x30
0000000000011e5c	b.gt	0x11eb4
0000000000011e60	add	x10, x10, #0x1
0000000000011e64	add	x11, x11, #0x10
0000000000011e68	cmp	x9, x10
0000000000011e6c	b.ne	0x11e54
0000000000011e70	mov	x10, x9
0000000000011e74	b	0x11eb4
0000000000011e78	mov	w10, #0x0
0000000000011e7c	add	w11, w9, w10
0000000000011e80	cmp	w11, #0x0
0000000000011e84	cinc	w11, w11, lt
0000000000011e88	asr	w11, w11, #1
0000000000011e8c	sbfiz	x12, x11, #4, #32
0000000000011e90	ldr	w12, [x8, x12]
0000000000011e94	cmp	w12, #0x31
0000000000011e98	csinc	w10, w10, w11, ge
0000000000011e9c	csel	w9, w9, w11, lt
0000000000011ea0	cmp	w10, w9
0000000000011ea4	b.lt	0x11e7c
0000000000011ea8	b	0x11eb4
0000000000011eac	mov	w10, #0x0
0000000000011eb0	b	0x11eb4
0000000000011eb4	sxtw	x9, w10
0000000000011eb8	add	x8, x8, x9, lsl #4
0000000000011ebc	ldr	x8, [x8, #0x8]
0000000000011ec0	ldr	x8, [x8]
0000000000011ec4	mov	x0, x19
0000000000011ec8	mov	x1, x27
0000000000011ecc	blr	x8
0000000000011ed0	mov	x26, x0
0000000000011ed4	mov	w24, #0x0
0000000000011ed8	sub	x8, x29, #0xa0
0000000000011edc	add	x27, x8, #0x18
0000000000011ee0	add	x28, x8, #0x20
0000000000011ee4	add	x10, x8, #0x28
0000000000011ee8	add	x9, x8, #0x30
0000000000011eec	stp	x9, x10, [sp, #0x28]
0000000000011ef0	add	x9, x8, #0x38
0000000000011ef4	add	x8, x8, #0x40
0000000000011ef8	stp	x8, x9, [sp, #0x18]
0000000000011efc	b	0x11f34
0000000000011f00	mov	w10, #0xc8
0000000000011f04	and	x9, x9, x10
0000000000011f08	add	x8, x8, x9, lsl #4
0000000000011f0c	ldr	x8, [x8, #0x8]
0000000000011f10	ldr	x8, [x8, #0x8]
0000000000011f14	mov	x0, x22
0000000000011f18	mov	x2, x28
0000000000011f1c	blr	x8
0000000000011f20	mov	x0, x21
0000000000011f24	blr	x20
0000000000011f28	ldr	x8, [x0]
0000000000011f2c	ldur	x9, [x29, #-0x98]
0000000000011f30	str	x9, [x8, #0x110]
0000000000011f34	ldr	x8, [x26]
0000000000011f38	and	x8, x8, #0xfffffffffffffffc
0000000000011f3c	ldr	x8, [x8]
0000000000011f40	ldr	w9, [x8, #0x3c]
0000000000011f44	ldr	x8, [x8, #0x40]
0000000000011f48	tbnz	w9, #0x1f, 0x11f70
0000000000011f4c	mov	w10, #0xa0
0000000000011f50	and	x9, x9, x10
0000000000011f54	add	x8, x8, x9, lsl #4
0000000000011f58	ldr	x8, [x8, #0x8]
0000000000011f5c	ldr	x8, [x8]
0000000000011f60	mov	x0, x26
0000000000011f64	blr	x8
0000000000011f68	tbnz	w0, #0x0, 0x1200c
0000000000011f6c	b	0x126dc
0000000000011f70	neg	w10, w9
0000000000011f74	mvn	w9, w9
0000000000011f78	cmp	w10, #0x9
0000000000011f7c	b.ge	0x11fb4
0000000000011f80	cmp	w10, #0x2
0000000000011f84	b.lt	0x11fe8
0000000000011f88	mov	x10, #0x0
0000000000011f8c	mov	x11, x8
0000000000011f90	ldr	w12, [x11]
0000000000011f94	cmp	w12, #0x9f
0000000000011f98	b.gt	0x11ff0
0000000000011f9c	add	x10, x10, #0x1
0000000000011fa0	add	x11, x11, #0x10
0000000000011fa4	cmp	x9, x10
0000000000011fa8	b.ne	0x11f90
0000000000011fac	mov	x10, x9
0000000000011fb0	b	0x11ff0
0000000000011fb4	mov	w10, #0x0
0000000000011fb8	add	w11, w9, w10
0000000000011fbc	cmp	w11, #0x0
0000000000011fc0	cinc	w11, w11, lt
0000000000011fc4	asr	w11, w11, #1
0000000000011fc8	sbfiz	x12, x11, #4, #32
0000000000011fcc	ldr	w12, [x8, x12]
0000000000011fd0	cmp	w12, #0xa0
0000000000011fd4	csinc	w10, w10, w11, ge
0000000000011fd8	csel	w9, w9, w11, lt
0000000000011fdc	cmp	w10, w9
0000000000011fe0	b.lt	0x11fb8
0000000000011fe4	b	0x11ff0
0000000000011fe8	mov	w10, #0x0
0000000000011fec	b	0x11ff0
0000000000011ff0	sxtw	x9, w10
0000000000011ff4	add	x8, x8, x9, lsl #4
0000000000011ff8	ldr	x8, [x8, #0x8]
0000000000011ffc	ldr	x8, [x8]
0000000000012000	mov	x0, x26
0000000000012004	blr	x8
0000000000012008	tbz	w0, #0x0, 0x126dc
000000000001200c	adr	x8, #0x70837
0000000000012010	nop
0000000000012014	ldarb	w8, [x8]
0000000000012018	tbz	w8, #0x0, 0x12020
000000000001201c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000012020	ldr	x8, [x26]
0000000000012024	and	x8, x8, #0xfffffffffffffffc
0000000000012028	ldr	x8, [x8]
000000000001202c	ldr	w9, [x8, #0x3c]
0000000000012030	ldr	x8, [x8, #0x40]
0000000000012034	tbnz	w9, #0x1f, 0x12044
0000000000012038	mov	w10, #0xa0
000000000001203c	and	x9, x9, x10
0000000000012040	b	0x120c8
0000000000012044	neg	w10, w9
0000000000012048	mvn	w9, w9
000000000001204c	cmp	w10, #0x9
0000000000012050	b.ge	0x12088
0000000000012054	cmp	w10, #0x2
0000000000012058	b.lt	0x120bc
000000000001205c	mov	x10, #0x0
0000000000012060	mov	x11, x8
0000000000012064	ldr	w12, [x11]
0000000000012068	cmp	w12, #0x9f
000000000001206c	b.gt	0x120c4
0000000000012070	add	x10, x10, #0x1
0000000000012074	add	x11, x11, #0x10
0000000000012078	cmp	x9, x10
000000000001207c	b.ne	0x12064
0000000000012080	mov	x10, x9
0000000000012084	b	0x120c4
0000000000012088	mov	w10, #0x0
000000000001208c	add	w11, w9, w10
0000000000012090	cmp	w11, #0x0
0000000000012094	cinc	w11, w11, lt
0000000000012098	asr	w11, w11, #1
000000000001209c	sbfiz	x12, x11, #4, #32
00000000000120a0	ldr	w12, [x8, x12]
00000000000120a4	cmp	w12, #0xa0
00000000000120a8	csinc	w10, w10, w11, ge
00000000000120ac	csel	w9, w9, w11, lt
00000000000120b0	cmp	w10, w9
00000000000120b4	b.lt	0x1208c
00000000000120b8	b	0x120c4
00000000000120bc	mov	w10, #0x0
00000000000120c0	b	0x120c4
00000000000120c4	sxtw	x9, w10
00000000000120c8	add	x8, x8, x9, lsl #4
00000000000120cc	ldr	x8, [x8, #0x8]
00000000000120d0	ldr	x8, [x8, #0x8]
00000000000120d4	mov	x0, x26
00000000000120d8	mov	x1, x25
00000000000120dc	blr	x8
00000000000120e0	mov	x19, x0
00000000000120e4	add	w24, w24, #0x1
00000000000120e8	cmp	w24, #0x2
00000000000120ec	b.lt	0x121b8
00000000000120f0	ldr	x8, [x22]
00000000000120f4	and	x8, x8, #0xfffffffffffffffc
00000000000120f8	ldr	x8, [x8]
00000000000120fc	ldr	w9, [x8, #0x3c]
0000000000012100	ldr	x8, [x8, #0x40]
0000000000012104	tbnz	w9, #0x1f, 0x12114
0000000000012108	mov	w10, #0xc8
000000000001210c	and	x9, x9, x10
0000000000012110	b	0x12198
0000000000012114	neg	w10, w9
0000000000012118	mvn	w9, w9
000000000001211c	cmp	w10, #0x9
0000000000012120	b.ge	0x12158
0000000000012124	cmp	w10, #0x2
0000000000012128	b.lt	0x1218c
000000000001212c	mov	x10, #0x0
0000000000012130	mov	x11, x8
0000000000012134	ldr	w12, [x11]
0000000000012138	cmp	w12, #0xc7
000000000001213c	b.gt	0x12194
0000000000012140	add	x10, x10, #0x1
0000000000012144	add	x11, x11, #0x10
0000000000012148	cmp	x9, x10
000000000001214c	b.ne	0x12134
0000000000012150	mov	x10, x9
0000000000012154	b	0x12194
0000000000012158	mov	w10, #0x0
000000000001215c	add	w11, w9, w10
0000000000012160	cmp	w11, #0x0
0000000000012164	cinc	w11, w11, lt
0000000000012168	asr	w11, w11, #1
000000000001216c	sbfiz	x12, x11, #4, #32
0000000000012170	ldr	w12, [x8, x12]
0000000000012174	cmp	w12, #0xc8
0000000000012178	csinc	w10, w10, w11, ge
000000000001217c	csel	w9, w9, w11, lt
0000000000012180	cmp	w10, w9
0000000000012184	b.lt	0x1215c
0000000000012188	b	0x12194
000000000001218c	mov	w10, #0x0
0000000000012190	b	0x12194
0000000000012194	sxtw	x9, w10
0000000000012198	add	x8, x8, x9, lsl #4
000000000001219c	ldr	x8, [x8, #0x8]
00000000000121a0	ldr	x8, [x8, #0x8]
00000000000121a4	mov	x0, x22
00000000000121a8	adr	x1, #0x4ef18
00000000000121ac	nop
00000000000121b0	ldr	x2, [sp, #0x38]
00000000000121b4	blr	x8
00000000000121b8	movi.16b	v0, #0x0
00000000000121bc	stp	q0, q0, [x29, #-0xa0]
00000000000121c0	stur	xzr, [x29, #-0x60]
00000000000121c4	stp	q0, q0, [x29, #-0x80]
00000000000121c8	mov	x0, x21
00000000000121cc	blr	x20
00000000000121d0	ldr	x8, [x0]
00000000000121d4	ldr	x9, [x8, #0x110]
00000000000121d8	sub	x10, x29, #0xa0
00000000000121dc	str	x10, [x8, #0x110]
00000000000121e0	mov	x8, #0x900000000
00000000000121e4	stp	x9, x8, [x29, #-0x98]
00000000000121e8	cbz	x23, 0x12210
00000000000121ec	ldr	x8, [x23]
00000000000121f0	and	x8, x8, #0xfffffffffffffffc
00000000000121f4	ldr	x8, [x8]
00000000000121f8	ldr	w9, [x8, #0x3c]
00000000000121fc	ldr	x8, [x8, #0x40]
0000000000012200	tbnz	w9, #0x1f, 0x12268
0000000000012204	mov	w10, #0x2c
0000000000012208	and	x9, x9, x10
000000000001220c	b	0x12484
0000000000012210	cbz	x19, 0x12244
0000000000012214	ldr	x8, [x19]
0000000000012218	and	x8, x8, #0xfffffffffffffffc
000000000001221c	ldr	x8, [x8]
0000000000012220	ldr	w9, [x8, #0x3c]
0000000000012224	ldr	x8, [x8, #0x40]
0000000000012228	tbnz	w9, #0x1f, 0x12324
000000000001222c	mov	w10, #0x19
0000000000012230	and	x9, x9, x10
0000000000012234	lsl	x9, x9, #4
0000000000012238	ldr	w8, [x8, x9]
000000000001223c	cmp	w8, #0x19
0000000000012240	b.ne	0x123fc
0000000000012244	ldr	x8, [x22]
0000000000012248	and	x8, x8, #0xfffffffffffffffc
000000000001224c	ldr	x8, [x8]
0000000000012250	ldr	w9, [x8, #0x3c]
0000000000012254	ldr	x8, [x8, #0x40]
0000000000012258	tbnz	w9, #0x1f, 0x122e0
000000000001225c	mov	w10, #0xc8
0000000000012260	and	x9, x9, x10
0000000000012264	b	0x125f4
0000000000012268	neg	w10, w9
000000000001226c	mvn	w9, w9
0000000000012270	cmp	w10, #0x9
0000000000012274	b.ge	0x122ac
0000000000012278	cmp	w10, #0x2
000000000001227c	b.lt	0x1237c
0000000000012280	mov	x10, #0x0
0000000000012284	mov	x11, x8
0000000000012288	ldr	w12, [x11]
000000000001228c	cmp	w12, #0x2b
0000000000012290	b.gt	0x12480
0000000000012294	add	x10, x10, #0x1
0000000000012298	add	x11, x11, #0x10
000000000001229c	cmp	x9, x10
00000000000122a0	b.ne	0x12288
00000000000122a4	mov	x10, x9
00000000000122a8	b	0x12480
00000000000122ac	mov	w10, #0x0
00000000000122b0	add	w11, w9, w10
00000000000122b4	cmp	w11, #0x0
00000000000122b8	cinc	w11, w11, lt
00000000000122bc	asr	w11, w11, #1
00000000000122c0	sbfiz	x12, x11, #4, #32
00000000000122c4	ldr	w12, [x8, x12]
00000000000122c8	cmp	w12, #0x2c
00000000000122cc	csinc	w10, w10, w11, ge
00000000000122d0	csel	w9, w9, w11, lt
00000000000122d4	cmp	w10, w9
00000000000122d8	b.lt	0x122b0
00000000000122dc	b	0x12480
00000000000122e0	neg	w10, w9
00000000000122e4	mvn	w9, w9
00000000000122e8	cmp	w10, #0x9
00000000000122ec	b.ge	0x12384
00000000000122f0	cmp	w10, #0x2
00000000000122f4	b.lt	0x12544
00000000000122f8	mov	x10, #0x0
00000000000122fc	mov	x11, x8
0000000000012300	ldr	w12, [x11]
0000000000012304	cmp	w12, #0xc7
0000000000012308	b.gt	0x125f0
000000000001230c	add	x10, x10, #0x1
0000000000012310	add	x11, x11, #0x10
0000000000012314	cmp	x9, x10
0000000000012318	b.ne	0x12300
000000000001231c	mov	x10, x9
0000000000012320	b	0x125f0
0000000000012324	neg	w10, w9
0000000000012328	mvn	w9, w9
000000000001232c	cmp	w10, #0x9
0000000000012330	b.ge	0x123b8
0000000000012334	cmp	w10, #0x2
0000000000012338	b.lt	0x1254c
000000000001233c	mov	x10, #0x0
0000000000012340	mov	x11, x8
0000000000012344	ldr	w12, [x11]
0000000000012348	cmp	w12, #0x18
000000000001234c	b.gt	0x12610
0000000000012350	add	x10, x10, #0x1
0000000000012354	add	x11, x11, #0x10
0000000000012358	cmp	x9, x10
000000000001235c	b.ne	0x12344
0000000000012360	mov	x10, x9
0000000000012364	sxtw	x9, w10
0000000000012368	lsl	x9, x9, #4
000000000001236c	ldr	w8, [x8, x9]
0000000000012370	cmp	w8, #0x19
0000000000012374	b.ne	0x123fc
0000000000012378	b	0x12244
000000000001237c	mov	w10, #0x0
0000000000012380	b	0x12480
0000000000012384	mov	w10, #0x0
0000000000012388	add	w11, w9, w10
000000000001238c	cmp	w11, #0x0
0000000000012390	cinc	w11, w11, lt
0000000000012394	asr	w11, w11, #1
0000000000012398	sbfiz	x12, x11, #4, #32
000000000001239c	ldr	w12, [x8, x12]
00000000000123a0	cmp	w12, #0xc8
00000000000123a4	csinc	w10, w10, w11, ge
00000000000123a8	csel	w9, w9, w11, lt
00000000000123ac	cmp	w10, w9
00000000000123b0	b.lt	0x12388
00000000000123b4	b	0x125f0
00000000000123b8	mov	w10, #0x0
00000000000123bc	add	w11, w9, w10
00000000000123c0	cmp	w11, #0x0
00000000000123c4	cinc	w11, w11, lt
00000000000123c8	asr	w11, w11, #1
00000000000123cc	sbfiz	x12, x11, #4, #32
00000000000123d0	ldr	w12, [x8, x12]
00000000000123d4	cmp	w12, #0x19
00000000000123d8	csinc	w10, w10, w11, ge
00000000000123dc	csel	w9, w9, w11, lt
00000000000123e0	cmp	w10, w9
00000000000123e4	b.lt	0x123bc
00000000000123e8	sxtw	x9, w10
00000000000123ec	lsl	x9, x9, #4
00000000000123f0	ldr	w8, [x8, x9]
00000000000123f4	cmp	w8, #0x19
00000000000123f8	b.eq	0x12244
00000000000123fc	ldr	x8, [x19]
0000000000012400	and	x8, x8, #0xfffffffffffffffc
0000000000012404	ldr	x8, [x8]
0000000000012408	ldr	w8, [x8, #0x5c]
000000000001240c	cmp	w8, #0x55
0000000000012410	b.ne	0x1243c
0000000000012414	ldrh	w1, [x19, #0x8]
0000000000012418	ldr	x8, [x22]
000000000001241c	and	x8, x8, #0xfffffffffffffffc
0000000000012420	ldr	x8, [x8]
0000000000012424	ldr	w9, [x8, #0x3c]
0000000000012428	ldr	x8, [x8, #0x40]
000000000001242c	tbnz	w9, #0x1f, 0x12568
0000000000012430	mov	w10, #0xc8
0000000000012434	and	x9, x9, x10
0000000000012438	b	0x126a4
000000000001243c	ldr	x8, [x19]
0000000000012440	and	x8, x8, #0xfffffffffffffffc
0000000000012444	ldr	x8, [x8]
0000000000012448	ldr	x8, [x8, #0x80]
000000000001244c	mov	x0, x19
0000000000012450	ldr	x1, [sp, #0x20]
0000000000012454	blr	x8
0000000000012458	mov	x1, x0
000000000001245c	ldr	x8, [x22]
0000000000012460	and	x8, x8, #0xfffffffffffffffc
0000000000012464	ldr	x8, [x8]
0000000000012468	ldr	w9, [x8, #0x3c]
000000000001246c	ldr	x8, [x8, #0x40]
0000000000012470	tbnz	w9, #0x1f, 0x125ac
0000000000012474	mov	w10, #0xc8
0000000000012478	and	x9, x9, x10
000000000001247c	b	0x126c4
0000000000012480	sxtw	x9, w10
0000000000012484	add	x8, x8, x9, lsl #4
0000000000012488	ldr	x8, [x8, #0x8]
000000000001248c	ldr	x8, [x8]
0000000000012490	mov	x0, x23
0000000000012494	mov	x1, x19
0000000000012498	mov	x2, x27
000000000001249c	blr	x8
00000000000124a0	mov	x1, x0
00000000000124a4	ldr	x8, [x22]
00000000000124a8	and	x8, x8, #0xfffffffffffffffc
00000000000124ac	ldr	x8, [x8]
00000000000124b0	ldr	w9, [x8, #0x3c]
00000000000124b4	ldr	x8, [x8, #0x40]
00000000000124b8	tbz	w9, #0x1f, 0x11f00
00000000000124bc	neg	w10, w9
00000000000124c0	mvn	w9, w9
00000000000124c4	cmp	w10, #0x9
00000000000124c8	b.ge	0x12500
00000000000124cc	cmp	w10, #0x2
00000000000124d0	b.lt	0x12534
00000000000124d4	mov	x10, #0x0
00000000000124d8	mov	x11, x8
00000000000124dc	ldr	w12, [x11]
00000000000124e0	cmp	w12, #0xc7
00000000000124e4	b.gt	0x1253c
00000000000124e8	add	x10, x10, #0x1
00000000000124ec	add	x11, x11, #0x10
00000000000124f0	cmp	x9, x10
00000000000124f4	b.ne	0x124dc
00000000000124f8	mov	x10, x9
00000000000124fc	b	0x1253c
0000000000012500	mov	w10, #0x0
0000000000012504	add	w11, w9, w10
0000000000012508	cmp	w11, #0x0
000000000001250c	cinc	w11, w11, lt
0000000000012510	asr	w11, w11, #1
0000000000012514	sbfiz	x12, x11, #4, #32
0000000000012518	ldr	w12, [x8, x12]
000000000001251c	cmp	w12, #0xc8
0000000000012520	csinc	w10, w10, w11, ge
0000000000012524	csel	w9, w9, w11, lt
0000000000012528	cmp	w10, w9
000000000001252c	b.lt	0x12504
0000000000012530	b	0x1253c
0000000000012534	mov	w10, #0x0
0000000000012538	b	0x1253c
000000000001253c	sxtw	x9, w10
0000000000012540	b	0x11f08
0000000000012544	mov	w10, #0x0
0000000000012548	b	0x125f0
000000000001254c	mov	w10, #0x0
0000000000012550	sxtw	x9, w10
0000000000012554	lsl	x9, x9, #4
0000000000012558	ldr	w8, [x8, x9]
000000000001255c	cmp	w8, #0x19
0000000000012560	b.eq	0x12244
0000000000012564	b	0x123fc
0000000000012568	neg	w10, w9
000000000001256c	mvn	w9, w9
0000000000012570	cmp	w10, #0x9
0000000000012574	b.ge	0x12628
0000000000012578	cmp	w10, #0x2
000000000001257c	b.lt	0x12690
0000000000012580	mov	x10, #0x0
0000000000012584	mov	x11, x8
0000000000012588	ldr	w12, [x11]
000000000001258c	cmp	w12, #0xc7
0000000000012590	b.gt	0x126a0
0000000000012594	add	x10, x10, #0x1
0000000000012598	add	x11, x11, #0x10
000000000001259c	cmp	x9, x10
00000000000125a0	b.ne	0x12588
00000000000125a4	mov	x10, x9
00000000000125a8	b	0x126a0
00000000000125ac	neg	w10, w9
00000000000125b0	mvn	w9, w9
00000000000125b4	cmp	w10, #0x9
00000000000125b8	b.ge	0x1265c
00000000000125bc	cmp	w10, #0x2
00000000000125c0	b.lt	0x12698
00000000000125c4	mov	x10, #0x0
00000000000125c8	mov	x11, x8
00000000000125cc	ldr	w12, [x11]
00000000000125d0	cmp	w12, #0xc7
00000000000125d4	b.gt	0x126c0
00000000000125d8	add	x10, x10, #0x1
00000000000125dc	add	x11, x11, #0x10
00000000000125e0	cmp	x9, x10
00000000000125e4	b.ne	0x125cc
00000000000125e8	mov	x10, x9
00000000000125ec	b	0x126c0
00000000000125f0	sxtw	x9, w10
00000000000125f4	add	x8, x8, x9, lsl #4
00000000000125f8	ldr	x8, [x8, #0x8]
00000000000125fc	ldr	x8, [x8, #0x8]
0000000000012600	mov	x0, x22
0000000000012604	mov	x1, x19
0000000000012608	ldr	x2, [sp, #0x30]
000000000001260c	b	0x11f1c
0000000000012610	sxtw	x9, w10
0000000000012614	lsl	x9, x9, #4
0000000000012618	ldr	w8, [x8, x9]
000000000001261c	cmp	w8, #0x19
0000000000012620	b.ne	0x123fc
0000000000012624	b	0x12244
0000000000012628	mov	w10, #0x0
000000000001262c	add	w11, w9, w10
0000000000012630	cmp	w11, #0x0
0000000000012634	cinc	w11, w11, lt
0000000000012638	asr	w11, w11, #1
000000000001263c	sbfiz	x12, x11, #4, #32
0000000000012640	ldr	w12, [x8, x12]
0000000000012644	cmp	w12, #0xc8
0000000000012648	csinc	w10, w10, w11, ge
000000000001264c	csel	w9, w9, w11, lt
0000000000012650	cmp	w10, w9
0000000000012654	b.lt	0x1262c
0000000000012658	b	0x126a0
000000000001265c	mov	w10, #0x0
0000000000012660	add	w11, w9, w10
0000000000012664	cmp	w11, #0x0
0000000000012668	cinc	w11, w11, lt
000000000001266c	asr	w11, w11, #1
0000000000012670	sbfiz	x12, x11, #4, #32
0000000000012674	ldr	w12, [x8, x12]
0000000000012678	cmp	w12, #0xc8
000000000001267c	csinc	w10, w10, w11, ge
0000000000012680	csel	w9, w9, w11, lt
0000000000012684	cmp	w10, w9
0000000000012688	b.lt	0x12660
000000000001268c	b	0x126c0
0000000000012690	mov	w10, #0x0
0000000000012694	b	0x126a0
0000000000012698	mov	w10, #0x0
000000000001269c	b	0x126c0
00000000000126a0	sxtw	x9, w10
00000000000126a4	add	x8, x8, x9, lsl #4
00000000000126a8	ldr	x8, [x8, #0x8]
00000000000126ac	ldr	x8, [x8]
00000000000126b0	mov	x0, x22
00000000000126b4	ldr	x2, [sp, #0x28]
00000000000126b8	blr	x8
00000000000126bc	b	0x11f20
00000000000126c0	sxtw	x9, w10
00000000000126c4	add	x8, x8, x9, lsl #4
00000000000126c8	ldr	x8, [x8, #0x8]
00000000000126cc	ldr	x8, [x8, #0x8]
00000000000126d0	mov	x0, x22
00000000000126d4	ldr	x2, [sp, #0x18]
00000000000126d8	b	0x11f1c
00000000000126dc	ldr	x8, [x22]
00000000000126e0	and	x8, x8, #0xfffffffffffffffc
00000000000126e4	ldr	x8, [x8]
00000000000126e8	ldr	w9, [x8, #0x3c]
00000000000126ec	ldr	x8, [x8, #0x40]
00000000000126f0	tbnz	w9, #0x1f, 0x12700
00000000000126f4	mov	w10, #0xc8
00000000000126f8	and	x9, x9, x10
00000000000126fc	b	0x12784
0000000000012700	neg	w10, w9
0000000000012704	mvn	w9, w9
0000000000012708	cmp	w10, #0x9
000000000001270c	b.ge	0x12744
0000000000012710	cmp	w10, #0x2
0000000000012714	b.lt	0x12778
0000000000012718	mov	x10, #0x0
000000000001271c	mov	x11, x8
0000000000012720	ldr	w12, [x11]
0000000000012724	cmp	w12, #0xc7
0000000000012728	b.gt	0x12780
000000000001272c	add	x10, x10, #0x1
0000000000012730	add	x11, x11, #0x10
0000000000012734	cmp	x9, x10
0000000000012738	b.ne	0x12720
000000000001273c	mov	x10, x9
0000000000012740	b	0x12780
0000000000012744	mov	w10, #0x0
0000000000012748	add	w11, w9, w10
000000000001274c	cmp	w11, #0x0
0000000000012750	cinc	w11, w11, lt
0000000000012754	asr	w11, w11, #1
0000000000012758	sbfiz	x12, x11, #4, #32
000000000001275c	ldr	w12, [x8, x12]
0000000000012760	cmp	w12, #0xc8
0000000000012764	csinc	w10, w10, w11, ge
0000000000012768	csel	w9, w9, w11, lt
000000000001276c	cmp	w10, w9
0000000000012770	b.lt	0x12748
0000000000012774	b	0x12780
0000000000012778	mov	w10, #0x0
000000000001277c	b	0x12780
0000000000012780	sxtw	x9, w10
0000000000012784	add	x10, sp, #0x70
0000000000012788	add	x2, x10, #0x40
000000000001278c	add	x8, x8, x9, lsl #4
0000000000012790	ldr	x8, [x8, #0x8]
0000000000012794	ldr	x8, [x8, #0x8]
0000000000012798	mov	x0, x22
000000000001279c	ldr	x1, [sp, #0x8]
00000000000127a0	blr	x8
00000000000127a4	str	x22, [sp, #0x60]
00000000000127a8	mov	x0, x21
00000000000127ac	blr	x20
00000000000127b0	mov	x19, x0
00000000000127b4	ldr	x8, [x0]
00000000000127b8	ldr	x9, [sp, #0x78]
00000000000127bc	str	x9, [x8, #0x110]
00000000000127c0	mov	x0, x22
00000000000127c4	ldr	x20, [sp, #0x10]
00000000000127c8	mov	x1, x20
00000000000127cc	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
00000000000127d0	str	x0, [x20]
00000000000127d4	ldr	x8, [x19]
00000000000127d8	ldr	x9, [sp, #0x48]
00000000000127dc	str	x9, [x8, #0x110]
00000000000127e0	str	x0, [x20]
00000000000127e4	ldp	x29, x30, [sp, #0x160]
00000000000127e8	ldp	x20, x19, [sp, #0x150]
00000000000127ec	ldp	x22, x21, [sp, #0x140]
00000000000127f0	ldp	x24, x23, [sp, #0x130]
00000000000127f4	ldp	x26, x25, [sp, #0x120]
00000000000127f8	ldp	x28, x27, [sp, #0x110]
00000000000127fc	add	sp, sp, #0x170
0000000000012800	ret
_kfun:kotlin.collections.AbstractMutableCollection#addAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean:
0000000000012804	sub	sp, sp, #0x80
0000000000012808	stp	x26, x25, [sp, #0x30]
000000000001280c	stp	x24, x23, [sp, #0x40]
0000000000012810	stp	x22, x21, [sp, #0x50]
0000000000012814	stp	x20, x19, [sp, #0x60]
0000000000012818	stp	x29, x30, [sp, #0x70]
000000000001281c	add	x29, sp, #0x70
0000000000012820	mov	x21, x1
0000000000012824	mov	x19, x0
0000000000012828	movi.16b	v0, #0x0
000000000001282c	stp	q0, q0, [sp]
0000000000012830	str	xzr, [sp, #0x20]
0000000000012834	mov	x20, sp
0000000000012838	add	x22, x20, #0x18
000000000001283c	adrp	x0, 86 ; 0x68000
0000000000012840	add	x0, x0, #0xa00
0000000000012844	ldr	x8, [x0]
0000000000012848	blr	x8
000000000001284c	ldr	x23, [x0]
0000000000012850	ldr	x8, [x23, #0x110]
0000000000012854	str	x20, [x23, #0x110]
0000000000012858	mov	x9, #0x500000000
000000000001285c	stp	x8, x9, [sp, #0x8]
0000000000012860	adr	x24, #0x6ffe3
0000000000012864	nop
0000000000012868	ldarb	w8, [x24]
000000000001286c	tbz	w8, #0x0, 0x12874
0000000000012870	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000012874	add	x20, x20, #0x20
0000000000012878	ldr	x8, [x21]
000000000001287c	and	x8, x8, #0xfffffffffffffffc
0000000000012880	ldr	x8, [x8]
0000000000012884	ldr	w9, [x8, #0x3c]
0000000000012888	ldr	x8, [x8, #0x40]
000000000001288c	tbnz	w9, #0x1f, 0x1289c
0000000000012890	mov	w10, #0x12
0000000000012894	and	x9, x9, x10
0000000000012898	b	0x12920
000000000001289c	neg	w10, w9
00000000000128a0	mvn	w9, w9
00000000000128a4	cmp	w10, #0x9
00000000000128a8	b.ge	0x128e0
00000000000128ac	cmp	w10, #0x2
00000000000128b0	b.lt	0x12914
00000000000128b4	mov	x10, #0x0
00000000000128b8	mov	x11, x8
00000000000128bc	ldr	w12, [x11]
00000000000128c0	cmp	w12, #0x11
00000000000128c4	b.gt	0x1291c
00000000000128c8	add	x10, x10, #0x1
00000000000128cc	add	x11, x11, #0x10
00000000000128d0	cmp	x9, x10
00000000000128d4	b.ne	0x128bc
00000000000128d8	mov	x10, x9
00000000000128dc	b	0x1291c
00000000000128e0	mov	w10, #0x0
00000000000128e4	add	w11, w9, w10
00000000000128e8	cmp	w11, #0x0
00000000000128ec	cinc	w11, w11, lt
00000000000128f0	asr	w11, w11, #1
00000000000128f4	sbfiz	x12, x11, #4, #32
00000000000128f8	ldr	w12, [x8, x12]
00000000000128fc	cmp	w12, #0x12
0000000000012900	csinc	w10, w10, w11, ge
0000000000012904	csel	w9, w9, w11, lt
0000000000012908	cmp	w10, w9
000000000001290c	b.lt	0x128e4
0000000000012910	b	0x1291c
0000000000012914	mov	w10, #0x0
0000000000012918	b	0x1291c
000000000001291c	sxtw	x9, w10
0000000000012920	add	x8, x8, x9, lsl #4
0000000000012924	ldr	x8, [x8, #0x8]
0000000000012928	ldr	x8, [x8, #0x20]
000000000001292c	mov	x0, x21
0000000000012930	mov	x1, x22
0000000000012934	blr	x8
0000000000012938	mov	x21, x0
000000000001293c	mov	w22, #0x0
0000000000012940	mov	w25, #0xa0
0000000000012944	b	0x1299c
0000000000012948	ldr	x8, [x21]
000000000001294c	and	x8, x8, #0xfffffffffffffffc
0000000000012950	ldr	x8, [x8]
0000000000012954	ldr	w9, [x8, #0x3c]
0000000000012958	ldr	x8, [x8, #0x40]
000000000001295c	tbnz	w9, #0x1f, 0x12a18
0000000000012960	and	x9, x9, x25
0000000000012964	add	x8, x8, x9, lsl #4
0000000000012968	ldr	x8, [x8, #0x8]
000000000001296c	ldr	x8, [x8, #0x8]
0000000000012970	mov	x0, x21
0000000000012974	mov	x1, x20
0000000000012978	blr	x8
000000000001297c	mov	x1, x0
0000000000012980	ldr	x8, [x19]
0000000000012984	and	x8, x8, #0xfffffffffffffffc
0000000000012988	ldr	x8, [x8]
000000000001298c	ldr	x8, [x8, #0xc0]
0000000000012990	mov	x0, x19
0000000000012994	blr	x8
0000000000012998	orr	w22, w0, w22
000000000001299c	ldr	x8, [x21]
00000000000129a0	and	x8, x8, #0xfffffffffffffffc
00000000000129a4	ldr	x8, [x8]
00000000000129a8	ldr	w9, [x8, #0x3c]
00000000000129ac	ldr	x8, [x8, #0x40]
00000000000129b0	tbnz	w9, #0x1f, 0x129d4
00000000000129b4	and	x9, x9, x25
00000000000129b8	add	x8, x8, x9, lsl #4
00000000000129bc	ldr	x8, [x8, #0x8]
00000000000129c0	ldr	x8, [x8]
00000000000129c4	mov	x0, x21
00000000000129c8	blr	x8
00000000000129cc	tbnz	w0, #0x0, 0x12af0
00000000000129d0	b	0x12b08
00000000000129d4	neg	w10, w9
00000000000129d8	mvn	w9, w9
00000000000129dc	cmp	w10, #0x9
00000000000129e0	b.ge	0x12a5c
00000000000129e4	cmp	w10, #0x2
00000000000129e8	b.lt	0x12ac4
00000000000129ec	mov	x10, #0x0
00000000000129f0	mov	x11, x8
00000000000129f4	ldr	w12, [x11]
00000000000129f8	cmp	w12, #0x9f
00000000000129fc	b.gt	0x12ad4
0000000000012a00	add	x10, x10, #0x1
0000000000012a04	add	x11, x11, #0x10
0000000000012a08	cmp	x9, x10
0000000000012a0c	b.ne	0x129f4
0000000000012a10	mov	x10, x9
0000000000012a14	b	0x12ad4
0000000000012a18	neg	w10, w9
0000000000012a1c	mvn	w9, w9
0000000000012a20	cmp	w10, #0x9
0000000000012a24	b.ge	0x12a90
0000000000012a28	cmp	w10, #0x2
0000000000012a2c	b.lt	0x12acc
0000000000012a30	mov	x10, #0x0
0000000000012a34	mov	x11, x8
0000000000012a38	ldr	w12, [x11]
0000000000012a3c	cmp	w12, #0x9f
0000000000012a40	b.gt	0x12b00
0000000000012a44	add	x10, x10, #0x1
0000000000012a48	add	x11, x11, #0x10
0000000000012a4c	cmp	x9, x10
0000000000012a50	b.ne	0x12a38
0000000000012a54	mov	x10, x9
0000000000012a58	b	0x12b00
0000000000012a5c	mov	w10, #0x0
0000000000012a60	add	w11, w9, w10
0000000000012a64	cmp	w11, #0x0
0000000000012a68	cinc	w11, w11, lt
0000000000012a6c	asr	w11, w11, #1
0000000000012a70	sbfiz	x12, x11, #4, #32
0000000000012a74	ldr	w12, [x8, x12]
0000000000012a78	cmp	w12, #0xa0
0000000000012a7c	csinc	w10, w10, w11, ge
0000000000012a80	csel	w9, w9, w11, lt
0000000000012a84	cmp	w10, w9
0000000000012a88	b.lt	0x12a60
0000000000012a8c	b	0x12ad4
0000000000012a90	mov	w10, #0x0
0000000000012a94	add	w11, w9, w10
0000000000012a98	cmp	w11, #0x0
0000000000012a9c	cinc	w11, w11, lt
0000000000012aa0	asr	w11, w11, #1
0000000000012aa4	sbfiz	x12, x11, #4, #32
0000000000012aa8	ldr	w12, [x8, x12]
0000000000012aac	cmp	w12, #0xa0
0000000000012ab0	csinc	w10, w10, w11, ge
0000000000012ab4	csel	w9, w9, w11, lt
0000000000012ab8	cmp	w10, w9
0000000000012abc	b.lt	0x12a94
0000000000012ac0	b	0x12b00
0000000000012ac4	mov	w10, #0x0
0000000000012ac8	b	0x12ad4
0000000000012acc	mov	w10, #0x0
0000000000012ad0	b	0x12b00
0000000000012ad4	sxtw	x9, w10
0000000000012ad8	add	x8, x8, x9, lsl #4
0000000000012adc	ldr	x8, [x8, #0x8]
0000000000012ae0	ldr	x8, [x8]
0000000000012ae4	mov	x0, x21
0000000000012ae8	blr	x8
0000000000012aec	tbz	w0, #0x0, 0x12b08
0000000000012af0	ldarb	w8, [x24]
0000000000012af4	tbz	w8, #0x0, 0x12948
0000000000012af8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000012afc	b	0x12948
0000000000012b00	sxtw	x9, w10
0000000000012b04	b	0x12964
0000000000012b08	ldr	x8, [sp, #0x8]
0000000000012b0c	str	x8, [x23, #0x110]
0000000000012b10	and	w0, w22, #0x1
0000000000012b14	ldp	x29, x30, [sp, #0x70]
0000000000012b18	ldp	x20, x19, [sp, #0x60]
0000000000012b1c	ldp	x22, x21, [sp, #0x50]
0000000000012b20	ldp	x24, x23, [sp, #0x40]
0000000000012b24	ldp	x26, x25, [sp, #0x30]
0000000000012b28	add	sp, sp, #0x80
0000000000012b2c	ret
_kfun:kotlin.collections.AbstractMutableCollection#remove(1:0){}kotlin.Boolean:
0000000000012b30	sub	sp, sp, #0x70
0000000000012b34	stp	x24, x23, [sp, #0x30]
0000000000012b38	stp	x22, x21, [sp, #0x40]
0000000000012b3c	stp	x20, x19, [sp, #0x50]
0000000000012b40	stp	x29, x30, [sp, #0x60]
0000000000012b44	add	x29, sp, #0x60
0000000000012b48	mov	x20, x1
0000000000012b4c	mov	x19, x0
0000000000012b50	movi.16b	v0, #0x0
0000000000012b54	stp	q0, q0, [sp]
0000000000012b58	str	xzr, [sp, #0x20]
0000000000012b5c	mov	x8, sp
0000000000012b60	add	x21, x8, #0x20
0000000000012b64	add	x22, x8, #0x18
0000000000012b68	adrp	x0, 86 ; 0x68000
0000000000012b6c	add	x0, x0, #0xa00
0000000000012b70	ldr	x9, [x0]
0000000000012b74	blr	x9
0000000000012b78	ldr	x23, [x0]
0000000000012b7c	ldr	x9, [x23, #0x110]
0000000000012b80	str	x8, [x23, #0x110]
0000000000012b84	mov	x8, #0x500000000
0000000000012b88	stp	x9, x8, [sp, #0x8]
0000000000012b8c	adr	x24, #0x6fcb7
0000000000012b90	nop
0000000000012b94	ldarb	w8, [x24]
0000000000012b98	tbz	w8, #0x0, 0x12ba0
0000000000012b9c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000012ba0	ldr	x8, [x19]
0000000000012ba4	and	x8, x8, #0xfffffffffffffffc
0000000000012ba8	ldr	x8, [x8]
0000000000012bac	ldr	x8, [x8, #0xa8]
0000000000012bb0	mov	x0, x19
0000000000012bb4	mov	x1, x22
0000000000012bb8	blr	x8
0000000000012bbc	mov	x19, x0
0000000000012bc0	mov	w22, #0xa0
0000000000012bc4	b	0x12bcc
0000000000012bc8	cbz	x20, 0x12d88
0000000000012bcc	ldr	x8, [x19]
0000000000012bd0	and	x8, x8, #0xfffffffffffffffc
0000000000012bd4	ldr	x8, [x8]
0000000000012bd8	ldr	w9, [x8, #0x3c]
0000000000012bdc	ldr	x8, [x8, #0x40]
0000000000012be0	tbnz	w9, #0x1f, 0x12c04
0000000000012be4	and	x9, x9, x22
0000000000012be8	add	x8, x8, x9, lsl #4
0000000000012bec	ldr	x8, [x8, #0x8]
0000000000012bf0	ldr	x8, [x8]
0000000000012bf4	mov	x0, x19
0000000000012bf8	blr	x8
0000000000012bfc	tbnz	w0, #0x0, 0x12ca0
0000000000012c00	b	0x12dac
0000000000012c04	neg	w10, w9
0000000000012c08	mvn	w9, w9
0000000000012c0c	cmp	w10, #0x9
0000000000012c10	b.ge	0x12c48
0000000000012c14	cmp	w10, #0x2
0000000000012c18	b.lt	0x12c7c
0000000000012c1c	mov	x10, #0x0
0000000000012c20	mov	x11, x8
0000000000012c24	ldr	w12, [x11]
0000000000012c28	cmp	w12, #0x9f
0000000000012c2c	b.gt	0x12c84
0000000000012c30	add	x10, x10, #0x1
0000000000012c34	add	x11, x11, #0x10
0000000000012c38	cmp	x9, x10
0000000000012c3c	b.ne	0x12c24
0000000000012c40	mov	x10, x9
0000000000012c44	b	0x12c84
0000000000012c48	mov	w10, #0x0
0000000000012c4c	add	w11, w9, w10
0000000000012c50	cmp	w11, #0x0
0000000000012c54	cinc	w11, w11, lt
0000000000012c58	asr	w11, w11, #1
0000000000012c5c	sbfiz	x12, x11, #4, #32
0000000000012c60	ldr	w12, [x8, x12]
0000000000012c64	cmp	w12, #0xa0
0000000000012c68	csinc	w10, w10, w11, ge
0000000000012c6c	csel	w9, w9, w11, lt
0000000000012c70	cmp	w10, w9
0000000000012c74	b.lt	0x12c4c
0000000000012c78	b	0x12c84
0000000000012c7c	mov	w10, #0x0
0000000000012c80	b	0x12c84
0000000000012c84	sxtw	x9, w10
0000000000012c88	add	x8, x8, x9, lsl #4
0000000000012c8c	ldr	x8, [x8, #0x8]
0000000000012c90	ldr	x8, [x8]
0000000000012c94	mov	x0, x19
0000000000012c98	blr	x8
0000000000012c9c	tbz	w0, #0x0, 0x12dac
0000000000012ca0	ldarb	w8, [x24]
0000000000012ca4	tbz	w8, #0x0, 0x12cac
0000000000012ca8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000012cac	ldr	x8, [x19]
0000000000012cb0	and	x8, x8, #0xfffffffffffffffc
0000000000012cb4	ldr	x8, [x8]
0000000000012cb8	ldr	w9, [x8, #0x3c]
0000000000012cbc	ldr	x8, [x8, #0x40]
0000000000012cc0	tbnz	w9, #0x1f, 0x12ccc
0000000000012cc4	and	x9, x9, x22
0000000000012cc8	b	0x12d50
0000000000012ccc	neg	w10, w9
0000000000012cd0	mvn	w9, w9
0000000000012cd4	cmp	w10, #0x9
0000000000012cd8	b.ge	0x12d10
0000000000012cdc	cmp	w10, #0x2
0000000000012ce0	b.lt	0x12d44
0000000000012ce4	mov	x10, #0x0
0000000000012ce8	mov	x11, x8
0000000000012cec	ldr	w12, [x11]
0000000000012cf0	cmp	w12, #0x9f
0000000000012cf4	b.gt	0x12d4c
0000000000012cf8	add	x10, x10, #0x1
0000000000012cfc	add	x11, x11, #0x10
0000000000012d00	cmp	x9, x10
0000000000012d04	b.ne	0x12cec
0000000000012d08	mov	x10, x9
0000000000012d0c	b	0x12d4c
0000000000012d10	mov	w10, #0x0
0000000000012d14	add	w11, w9, w10
0000000000012d18	cmp	w11, #0x0
0000000000012d1c	cinc	w11, w11, lt
0000000000012d20	asr	w11, w11, #1
0000000000012d24	sbfiz	x12, x11, #4, #32
0000000000012d28	ldr	w12, [x8, x12]
0000000000012d2c	cmp	w12, #0xa0
0000000000012d30	csinc	w10, w10, w11, ge
0000000000012d34	csel	w9, w9, w11, lt
0000000000012d38	cmp	w10, w9
0000000000012d3c	b.lt	0x12d14
0000000000012d40	b	0x12d4c
0000000000012d44	mov	w10, #0x0
0000000000012d48	b	0x12d4c
0000000000012d4c	sxtw	x9, w10
0000000000012d50	add	x8, x8, x9, lsl #4
0000000000012d54	ldr	x8, [x8, #0x8]
0000000000012d58	ldr	x8, [x8, #0x8]
0000000000012d5c	mov	x0, x19
0000000000012d60	mov	x1, x21
0000000000012d64	blr	x8
0000000000012d68	cbz	x0, 0x12bc8
0000000000012d6c	ldr	x8, [x0]
0000000000012d70	and	x8, x8, #0xfffffffffffffffc
0000000000012d74	ldr	x8, [x8]
0000000000012d78	ldr	x8, [x8, #0x70]
0000000000012d7c	mov	x1, x20
0000000000012d80	blr	x8
0000000000012d84	tbz	w0, #0x0, 0x12bcc
0000000000012d88	ldr	x8, [x19]
0000000000012d8c	and	x8, x8, #0xfffffffffffffffc
0000000000012d90	ldr	x8, [x8]
0000000000012d94	ldr	w9, [x8, #0x3c]
0000000000012d98	ldr	x8, [x8, #0x40]
0000000000012d9c	tbnz	w9, #0x1f, 0x12db4
0000000000012da0	mov	w10, #0x39
0000000000012da4	and	x9, x9, x10
0000000000012da8	b	0x12e38
0000000000012dac	mov	w0, #0x0
0000000000012db0	b	0x12e50
0000000000012db4	neg	w10, w9
0000000000012db8	mvn	w9, w9
0000000000012dbc	cmp	w10, #0x9
0000000000012dc0	b.ge	0x12df8
0000000000012dc4	cmp	w10, #0x2
0000000000012dc8	b.lt	0x12e2c
0000000000012dcc	mov	x10, #0x0
0000000000012dd0	mov	x11, x8
0000000000012dd4	ldr	w12, [x11]
0000000000012dd8	cmp	w12, #0x38
0000000000012ddc	b.gt	0x12e34
0000000000012de0	add	x10, x10, #0x1
0000000000012de4	add	x11, x11, #0x10
0000000000012de8	cmp	x9, x10
0000000000012dec	b.ne	0x12dd4
0000000000012df0	mov	x10, x9
0000000000012df4	b	0x12e34
0000000000012df8	mov	w10, #0x0
0000000000012dfc	add	w11, w9, w10
0000000000012e00	cmp	w11, #0x0
0000000000012e04	cinc	w11, w11, lt
0000000000012e08	asr	w11, w11, #1
0000000000012e0c	sbfiz	x12, x11, #4, #32
0000000000012e10	ldr	w12, [x8, x12]
0000000000012e14	cmp	w12, #0x39
0000000000012e18	csinc	w10, w10, w11, ge
0000000000012e1c	csel	w9, w9, w11, lt
0000000000012e20	cmp	w10, w9
0000000000012e24	b.lt	0x12dfc
0000000000012e28	b	0x12e34
0000000000012e2c	mov	w10, #0x0
0000000000012e30	b	0x12e34
0000000000012e34	sxtw	x9, w10
0000000000012e38	add	x8, x8, x9, lsl #4
0000000000012e3c	ldr	x8, [x8, #0x8]
0000000000012e40	ldr	x8, [x8]
0000000000012e44	mov	x0, x19
0000000000012e48	blr	x8
0000000000012e4c	mov	w0, #0x1
0000000000012e50	ldr	x8, [sp, #0x8]
0000000000012e54	str	x8, [x23, #0x110]
0000000000012e58	ldp	x29, x30, [sp, #0x60]
0000000000012e5c	ldp	x20, x19, [sp, #0x50]
0000000000012e60	ldp	x22, x21, [sp, #0x40]
0000000000012e64	ldp	x24, x23, [sp, #0x30]
0000000000012e68	add	sp, sp, #0x70
0000000000012e6c	ret
_kfun:kotlin.collections.AbstractMutableCollection#removeAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean:
0000000000012e70	sub	sp, sp, #0x50
0000000000012e74	stp	x22, x21, [sp, #0x20]
0000000000012e78	stp	x20, x19, [sp, #0x30]
0000000000012e7c	stp	x29, x30, [sp, #0x40]
0000000000012e80	add	x29, sp, #0x40
0000000000012e84	mov	x20, x1
0000000000012e88	mov	x19, x0
0000000000012e8c	movi.16b	v0, #0x0
0000000000012e90	stp	q0, q0, [sp]
0000000000012e94	adrp	x0, 86 ; 0x68000
0000000000012e98	add	x0, x0, #0xa00
0000000000012e9c	ldr	x8, [x0]
0000000000012ea0	blr	x8
0000000000012ea4	ldr	x21, [x0]
0000000000012ea8	ldr	x8, [x21, #0x110]
0000000000012eac	mov	x9, sp
0000000000012eb0	str	x9, [x21, #0x110]
0000000000012eb4	mov	x9, #0x400000000
0000000000012eb8	stp	x8, x9, [sp, #0x8]
0000000000012ebc	adr	x8, #0x6f987
0000000000012ec0	nop
0000000000012ec4	ldarb	w8, [x8]
0000000000012ec8	tbz	w8, #0x0, 0x12ed0
0000000000012ecc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000012ed0	ldr	x8, [x19]
0000000000012ed4	and	x8, x8, #0xfffffffffffffffc
0000000000012ed8	ldr	x8, [x8]
0000000000012edc	ldr	w9, [x8, #0x3c]
0000000000012ee0	ldr	x8, [x8, #0x40]
0000000000012ee4	tbnz	w9, #0x1f, 0x12f54
0000000000012ee8	mov	w10, #0x24
0000000000012eec	and	x9, x9, x10
0000000000012ef0	lsl	x9, x9, #4
0000000000012ef4	ldr	w8, [x8, x9]
0000000000012ef8	cmp	w8, #0x24
0000000000012efc	b.ne	0x12ff8
0000000000012f00	ldr	x8, [x21, #0x118]
0000000000012f04	add	x0, x8, #0x70
0000000000012f08	mov	w1, #0x18
0000000000012f0c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000012f10	adr	x8, #0x43f50
0000000000012f14	nop
0000000000012f18	mov	x1, x0
0000000000012f1c	str	x8, [x1, #0x10]!
0000000000012f20	stur	xzr, [x1, #-0x8]
0000000000012f24	str	x1, [sp, #0x18]
0000000000012f28	str	x20, [x1, #0x8]
0000000000012f2c	mov	x0, x19
0000000000012f30	mov	w2, #0x1
0000000000012f34	bl	"_kfun:kotlin.collections.filterInPlace#internal.14"
0000000000012f38	ldr	x8, [sp, #0x8]
0000000000012f3c	str	x8, [x21, #0x110]
0000000000012f40	ldp	x29, x30, [sp, #0x40]
0000000000012f44	ldp	x20, x19, [sp, #0x30]
0000000000012f48	ldp	x22, x21, [sp, #0x20]
0000000000012f4c	add	sp, sp, #0x50
0000000000012f50	ret
0000000000012f54	neg	w10, w9
0000000000012f58	mvn	w9, w9
0000000000012f5c	cmp	w10, #0x9
0000000000012f60	b.ge	0x12fac
0000000000012f64	cmp	w10, #0x2
0000000000012f68	b.lt	0x12fe0
0000000000012f6c	mov	x10, #0x0
0000000000012f70	mov	x11, x8
0000000000012f74	ldr	w12, [x11]
0000000000012f78	cmp	w12, #0x23
0000000000012f7c	b.gt	0x13008
0000000000012f80	add	x10, x10, #0x1
0000000000012f84	add	x11, x11, #0x10
0000000000012f88	cmp	x9, x10
0000000000012f8c	b.ne	0x12f74
0000000000012f90	mov	x10, x9
0000000000012f94	sxtw	x9, w10
0000000000012f98	lsl	x9, x9, #4
0000000000012f9c	ldr	w8, [x8, x9]
0000000000012fa0	cmp	w8, #0x24
0000000000012fa4	b.eq	0x12f00
0000000000012fa8	b	0x12ff8
0000000000012fac	mov	w10, #0x0
0000000000012fb0	add	w11, w9, w10
0000000000012fb4	cmp	w11, #0x0
0000000000012fb8	cinc	w11, w11, lt
0000000000012fbc	asr	w11, w11, #1
0000000000012fc0	sbfiz	x12, x11, #4, #32
0000000000012fc4	ldr	w12, [x8, x12]
0000000000012fc8	cmp	w12, #0x24
0000000000012fcc	csinc	w10, w10, w11, ge
0000000000012fd0	csel	w9, w9, w11, lt
0000000000012fd4	cmp	w10, w9
0000000000012fd8	b.lt	0x12fb0
0000000000012fdc	b	0x12fe4
0000000000012fe0	mov	w10, #0x0
0000000000012fe4	sxtw	x9, w10
0000000000012fe8	lsl	x9, x9, #4
0000000000012fec	ldr	w8, [x8, x9]
0000000000012ff0	cmp	w8, #0x24
0000000000012ff4	b.eq	0x12f00
0000000000012ff8	adr	x1, #0x44568
0000000000012ffc	nop
0000000000013000	mov	x0, x19
0000000000013004	bl	_ThrowClassCastException
0000000000013008	sxtw	x9, w10
000000000001300c	lsl	x9, x9, #4
0000000000013010	ldr	w8, [x8, x9]
0000000000013014	cmp	w8, #0x24
0000000000013018	b.eq	0x12f00
000000000001301c	b	0x12ff8
_kfun:kotlin.collections.AbstractMutableCollection#retainAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean:
0000000000013020	sub	sp, sp, #0x50
0000000000013024	stp	x22, x21, [sp, #0x20]
0000000000013028	stp	x20, x19, [sp, #0x30]
000000000001302c	stp	x29, x30, [sp, #0x40]
0000000000013030	add	x29, sp, #0x40
0000000000013034	mov	x20, x1
0000000000013038	mov	x19, x0
000000000001303c	movi.16b	v0, #0x0
0000000000013040	stp	q0, q0, [sp]
0000000000013044	adrp	x0, 85 ; 0x68000
0000000000013048	add	x0, x0, #0xa00
000000000001304c	ldr	x8, [x0]
0000000000013050	blr	x8
0000000000013054	ldr	x21, [x0]
0000000000013058	ldr	x8, [x21, #0x110]
000000000001305c	mov	x9, sp
0000000000013060	str	x9, [x21, #0x110]
0000000000013064	mov	x9, #0x400000000
0000000000013068	stp	x8, x9, [sp, #0x8]
000000000001306c	adr	x8, #0x6f7d7
0000000000013070	nop
0000000000013074	ldarb	w8, [x8]
0000000000013078	tbz	w8, #0x0, 0x13080
000000000001307c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000013080	ldr	x8, [x19]
0000000000013084	and	x8, x8, #0xfffffffffffffffc
0000000000013088	ldr	x8, [x8]
000000000001308c	ldr	w9, [x8, #0x3c]
0000000000013090	ldr	x8, [x8, #0x40]
0000000000013094	tbnz	w9, #0x1f, 0x13104
0000000000013098	mov	w10, #0x24
000000000001309c	and	x9, x9, x10
00000000000130a0	lsl	x9, x9, #4
00000000000130a4	ldr	w8, [x8, x9]
00000000000130a8	cmp	w8, #0x24
00000000000130ac	b.ne	0x131a8
00000000000130b0	ldr	x8, [x21, #0x118]
00000000000130b4	add	x0, x8, #0x70
00000000000130b8	mov	w1, #0x18
00000000000130bc	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000130c0	adr	x8, #0x43e30
00000000000130c4	nop
00000000000130c8	mov	x1, x0
00000000000130cc	str	x8, [x1, #0x10]!
00000000000130d0	stur	xzr, [x1, #-0x8]
00000000000130d4	str	x1, [sp, #0x18]
00000000000130d8	str	x20, [x1, #0x8]
00000000000130dc	mov	x0, x19
00000000000130e0	mov	w2, #0x0
00000000000130e4	bl	"_kfun:kotlin.collections.filterInPlace#internal.14"
00000000000130e8	ldr	x8, [sp, #0x8]
00000000000130ec	str	x8, [x21, #0x110]
00000000000130f0	ldp	x29, x30, [sp, #0x40]
00000000000130f4	ldp	x20, x19, [sp, #0x30]
00000000000130f8	ldp	x22, x21, [sp, #0x20]
00000000000130fc	add	sp, sp, #0x50
0000000000013100	ret
0000000000013104	neg	w10, w9
0000000000013108	mvn	w9, w9
000000000001310c	cmp	w10, #0x9
0000000000013110	b.ge	0x1315c
0000000000013114	cmp	w10, #0x2
0000000000013118	b.lt	0x13190
000000000001311c	mov	x10, #0x0
0000000000013120	mov	x11, x8
0000000000013124	ldr	w12, [x11]
0000000000013128	cmp	w12, #0x23
000000000001312c	b.gt	0x131b8
0000000000013130	add	x10, x10, #0x1
0000000000013134	add	x11, x11, #0x10
0000000000013138	cmp	x9, x10
000000000001313c	b.ne	0x13124
0000000000013140	mov	x10, x9
0000000000013144	sxtw	x9, w10
0000000000013148	lsl	x9, x9, #4
000000000001314c	ldr	w8, [x8, x9]
0000000000013150	cmp	w8, #0x24
0000000000013154	b.eq	0x130b0
0000000000013158	b	0x131a8
000000000001315c	mov	w10, #0x0
0000000000013160	add	w11, w9, w10
0000000000013164	cmp	w11, #0x0
0000000000013168	cinc	w11, w11, lt
000000000001316c	asr	w11, w11, #1
0000000000013170	sbfiz	x12, x11, #4, #32
0000000000013174	ldr	w12, [x8, x12]
0000000000013178	cmp	w12, #0x24
000000000001317c	csinc	w10, w10, w11, ge
0000000000013180	csel	w9, w9, w11, lt
0000000000013184	cmp	w10, w9
0000000000013188	b.lt	0x13160
000000000001318c	b	0x13194
0000000000013190	mov	w10, #0x0
0000000000013194	sxtw	x9, w10
0000000000013198	lsl	x9, x9, #4
000000000001319c	ldr	w8, [x8, x9]
00000000000131a0	cmp	w8, #0x24
00000000000131a4	b.eq	0x130b0
00000000000131a8	adr	x1, #0x443b8
00000000000131ac	nop
00000000000131b0	mov	x0, x19
00000000000131b4	bl	_ThrowClassCastException
00000000000131b8	sxtw	x9, w10
00000000000131bc	lsl	x9, x9, #4
00000000000131c0	ldr	w8, [x8, x9]
00000000000131c4	cmp	w8, #0x24
00000000000131c8	b.eq	0x130b0
00000000000131cc	b	0x131a8
_kfun:kotlin.collections.AbstractMutableCollection.$removeAll$lambda$0$FUNCTION_REFERENCE$13.$<bridge-BNNN>invoke(2:0){}kotlin.Boolean#internal:
00000000000131d0	stp	x22, x21, [sp, #-0x30]!
00000000000131d4	stp	x20, x19, [sp, #0x10]
00000000000131d8	stp	x29, x30, [sp, #0x20]
00000000000131dc	add	x29, sp, #0x20
00000000000131e0	mov	x19, x2
00000000000131e4	mov	x20, x1
00000000000131e8	mov	x21, x0
00000000000131ec	adr	x8, #0x6f657
00000000000131f0	nop
00000000000131f4	ldarb	w8, [x8]
00000000000131f8	tbz	w8, #0x0, 0x13200
00000000000131fc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000013200	ldr	x0, [x21, #0x8]
0000000000013204	ldr	x8, [x0]
0000000000013208	and	x8, x8, #0xfffffffffffffffc
000000000001320c	ldr	x8, [x8]
0000000000013210	ldr	w9, [x8, #0x3c]
0000000000013214	ldr	x8, [x8, #0x40]
0000000000013218	tbnz	w9, #0x1f, 0x13228
000000000001321c	mov	w10, #0x12
0000000000013220	and	x9, x9, x10
0000000000013224	b	0x132ac
0000000000013228	neg	w10, w9
000000000001322c	mvn	w9, w9
0000000000013230	cmp	w10, #0x9
0000000000013234	b.ge	0x1326c
0000000000013238	cmp	w10, #0x2
000000000001323c	b.lt	0x132a0
0000000000013240	mov	x10, #0x0
0000000000013244	mov	x11, x8
0000000000013248	ldr	w12, [x11]
000000000001324c	cmp	w12, #0x11
0000000000013250	b.gt	0x132a8
0000000000013254	add	x10, x10, #0x1
0000000000013258	add	x11, x11, #0x10
000000000001325c	cmp	x9, x10
0000000000013260	b.ne	0x13248
0000000000013264	mov	x10, x9
0000000000013268	b	0x132a8
000000000001326c	mov	w10, #0x0
0000000000013270	add	w11, w9, w10
0000000000013274	cmp	w11, #0x0
0000000000013278	cinc	w11, w11, lt
000000000001327c	asr	w11, w11, #1
0000000000013280	sbfiz	x12, x11, #4, #32
0000000000013284	ldr	w12, [x8, x12]
0000000000013288	cmp	w12, #0x12
000000000001328c	csinc	w10, w10, w11, ge
0000000000013290	csel	w9, w9, w11, lt
0000000000013294	cmp	w10, w9
0000000000013298	b.lt	0x13270
000000000001329c	b	0x132a8
00000000000132a0	mov	w10, #0x0
00000000000132a4	b	0x132a8
00000000000132a8	sxtw	x9, w10
00000000000132ac	add	x8, x8, x9, lsl #4
00000000000132b0	ldr	x8, [x8, #0x8]
00000000000132b4	ldr	x8, [x8, #0x8]
00000000000132b8	mov	x1, x20
00000000000132bc	blr	x8
00000000000132c0	mov	x1, x19
00000000000132c4	bl	"_kfun:kotlin#<Boolean-box>(kotlin.Boolean){}kotlin.Any"
00000000000132c8	str	x0, [x19]
00000000000132cc	ldp	x29, x30, [sp, #0x20]
00000000000132d0	ldp	x20, x19, [sp, #0x10]
00000000000132d4	ldp	x22, x21, [sp], #0x30
00000000000132d8	ret
_kfun:kotlin.collections.AbstractMutableCollection.$retainAll$lambda$1$FUNCTION_REFERENCE$14.$<bridge-BNNN>invoke(2:0){}kotlin.Boolean#internal:
00000000000132dc	stp	x22, x21, [sp, #-0x30]!
00000000000132e0	stp	x20, x19, [sp, #0x10]
00000000000132e4	stp	x29, x30, [sp, #0x20]
00000000000132e8	add	x29, sp, #0x20
00000000000132ec	mov	x19, x2
00000000000132f0	mov	x20, x1
00000000000132f4	mov	x21, x0
00000000000132f8	adr	x8, #0x6f54b
00000000000132fc	nop
0000000000013300	ldarb	w8, [x8]
0000000000013304	tbz	w8, #0x0, 0x1330c
0000000000013308	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001330c	ldr	x0, [x21, #0x8]
0000000000013310	ldr	x8, [x0]
0000000000013314	and	x8, x8, #0xfffffffffffffffc
0000000000013318	ldr	x8, [x8]
000000000001331c	ldr	w9, [x8, #0x3c]
0000000000013320	ldr	x8, [x8, #0x40]
0000000000013324	tbnz	w9, #0x1f, 0x13334
0000000000013328	mov	w10, #0x12
000000000001332c	and	x9, x9, x10
0000000000013330	b	0x133b8
0000000000013334	neg	w10, w9
0000000000013338	mvn	w9, w9
000000000001333c	cmp	w10, #0x9
0000000000013340	b.ge	0x13378
0000000000013344	cmp	w10, #0x2
0000000000013348	b.lt	0x133ac
000000000001334c	mov	x10, #0x0
0000000000013350	mov	x11, x8
0000000000013354	ldr	w12, [x11]
0000000000013358	cmp	w12, #0x11
000000000001335c	b.gt	0x133b4
0000000000013360	add	x10, x10, #0x1
0000000000013364	add	x11, x11, #0x10
0000000000013368	cmp	x9, x10
000000000001336c	b.ne	0x13354
0000000000013370	mov	x10, x9
0000000000013374	b	0x133b4
0000000000013378	mov	w10, #0x0
000000000001337c	add	w11, w9, w10
0000000000013380	cmp	w11, #0x0
0000000000013384	cinc	w11, w11, lt
0000000000013388	asr	w11, w11, #1
000000000001338c	sbfiz	x12, x11, #4, #32
0000000000013390	ldr	w12, [x8, x12]
0000000000013394	cmp	w12, #0x12
0000000000013398	csinc	w10, w10, w11, ge
000000000001339c	csel	w9, w9, w11, lt
00000000000133a0	cmp	w10, w9
00000000000133a4	b.lt	0x1337c
00000000000133a8	b	0x133b4
00000000000133ac	mov	w10, #0x0
00000000000133b0	b	0x133b4
00000000000133b4	sxtw	x9, w10
00000000000133b8	add	x8, x8, x9, lsl #4
00000000000133bc	ldr	x8, [x8, #0x8]
00000000000133c0	ldr	x8, [x8, #0x8]
00000000000133c4	mov	x1, x20
00000000000133c8	blr	x8
00000000000133cc	mov	x1, x19
00000000000133d0	bl	"_kfun:kotlin#<Boolean-box>(kotlin.Boolean){}kotlin.Any"
00000000000133d4	str	x0, [x19]
00000000000133d8	ldp	x29, x30, [sp, #0x20]
00000000000133dc	ldp	x20, x19, [sp, #0x10]
00000000000133e0	ldp	x22, x21, [sp], #0x30
00000000000133e4	ret
_kfun:kotlin.collections.AbstractMutableList#add(1:0){}kotlin.Boolean:
00000000000133e8	stp	x20, x19, [sp, #-0x20]!
00000000000133ec	stp	x29, x30, [sp, #0x10]
00000000000133f0	add	x29, sp, #0x10
00000000000133f4	mov	x19, x1
00000000000133f8	mov	x20, x0
00000000000133fc	adr	x8, #0x6f447
0000000000013400	nop
0000000000013404	ldarb	w8, [x8]
0000000000013408	tbz	w8, #0x0, 0x13410
000000000001340c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000013410	ldr	x8, [x20]
0000000000013414	and	x8, x8, #0xfffffffffffffffc
0000000000013418	ldr	x8, [x8]
000000000001341c	ldr	x8, [x8, #0x88]
0000000000013420	mov	x0, x20
0000000000013424	blr	x8
0000000000013428	mov	x1, x0
000000000001342c	ldr	x8, [x20]
0000000000013430	and	x8, x8, #0xfffffffffffffffc
0000000000013434	ldr	x8, [x8]
0000000000013438	ldr	x8, [x8, #0xf0]
000000000001343c	mov	x0, x20
0000000000013440	mov	x2, x19
0000000000013444	blr	x8
0000000000013448	mov	w0, #0x1
000000000001344c	ldp	x29, x30, [sp, #0x10]
0000000000013450	ldp	x20, x19, [sp], #0x20
0000000000013454	ret
_kfun:kotlin.collections.AbstractMutableList#addAll(kotlin.Int;kotlin.collections.Collection<1:0>){}kotlin.Boolean:
0000000000013458	sub	sp, sp, #0x80
000000000001345c	stp	x26, x25, [sp, #0x30]
0000000000013460	stp	x24, x23, [sp, #0x40]
0000000000013464	stp	x22, x21, [sp, #0x50]
0000000000013468	stp	x20, x19, [sp, #0x60]
000000000001346c	stp	x29, x30, [sp, #0x70]
0000000000013470	add	x29, sp, #0x70
0000000000013474	mov	x22, x2
0000000000013478	mov	x19, x1
000000000001347c	mov	x20, x0
0000000000013480	movi.16b	v0, #0x0
0000000000013484	stp	q0, q0, [sp]
0000000000013488	str	xzr, [sp, #0x20]
000000000001348c	mov	x21, sp
0000000000013490	add	x23, x21, #0x18
0000000000013494	adrp	x0, 85 ; 0x68000
0000000000013498	add	x0, x0, #0xa00
000000000001349c	ldr	x8, [x0]
00000000000134a0	blr	x8
00000000000134a4	ldr	x24, [x0]
00000000000134a8	ldr	x8, [x24, #0x110]
00000000000134ac	str	x21, [x24, #0x110]
00000000000134b0	mov	x9, #0x500000000
00000000000134b4	stp	x8, x9, [sp, #0x8]
00000000000134b8	adr	x25, #0x6f38b
00000000000134bc	nop
00000000000134c0	ldarb	w8, [x25]
00000000000134c4	tbz	w8, #0x0, 0x134cc
00000000000134c8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000134cc	add	x21, x21, #0x20
00000000000134d0	ldr	x8, [x20]
00000000000134d4	and	x8, x8, #0xfffffffffffffffc
00000000000134d8	ldr	x8, [x8]
00000000000134dc	ldr	x8, [x8, #0x88]
00000000000134e0	mov	x0, x20
00000000000134e4	blr	x8
00000000000134e8	mov	x1, x0
00000000000134ec	mov	x0, x19
00000000000134f0	bl	"_kfun:kotlin.collections.AbstractList.Companion#checkPositionIndex(kotlin.Int;kotlin.Int){}"
00000000000134f4	ldr	x8, [x22]
00000000000134f8	and	x8, x8, #0xfffffffffffffffc
00000000000134fc	ldr	x8, [x8]
0000000000013500	ldr	w9, [x8, #0x3c]
0000000000013504	ldr	x8, [x8, #0x40]
0000000000013508	tbnz	w9, #0x1f, 0x13518
000000000001350c	mov	w10, #0x12
0000000000013510	and	x9, x9, x10
0000000000013514	b	0x1359c
0000000000013518	neg	w10, w9
000000000001351c	mvn	w9, w9
0000000000013520	cmp	w10, #0x9
0000000000013524	b.ge	0x1355c
0000000000013528	cmp	w10, #0x2
000000000001352c	b.lt	0x13590
0000000000013530	mov	x10, #0x0
0000000000013534	mov	x11, x8
0000000000013538	ldr	w12, [x11]
000000000001353c	cmp	w12, #0x11
0000000000013540	b.gt	0x13598
0000000000013544	add	x10, x10, #0x1
0000000000013548	add	x11, x11, #0x10
000000000001354c	cmp	x9, x10
0000000000013550	b.ne	0x13538
0000000000013554	mov	x10, x9
0000000000013558	b	0x13598
000000000001355c	mov	w10, #0x0
0000000000013560	add	w11, w9, w10
0000000000013564	cmp	w11, #0x0
0000000000013568	cinc	w11, w11, lt
000000000001356c	asr	w11, w11, #1
0000000000013570	sbfiz	x12, x11, #4, #32
0000000000013574	ldr	w12, [x8, x12]
0000000000013578	cmp	w12, #0x12
000000000001357c	csinc	w10, w10, w11, ge
0000000000013580	csel	w9, w9, w11, lt
0000000000013584	cmp	w10, w9
0000000000013588	b.lt	0x13560
000000000001358c	b	0x13598
0000000000013590	mov	w10, #0x0
0000000000013594	b	0x13598
0000000000013598	sxtw	x9, w10
000000000001359c	add	x8, x8, x9, lsl #4
00000000000135a0	ldr	x8, [x8, #0x8]
00000000000135a4	ldr	x8, [x8, #0x20]
00000000000135a8	mov	x0, x22
00000000000135ac	mov	x1, x23
00000000000135b0	blr	x8
00000000000135b4	mov	x22, x0
00000000000135b8	mov	w26, #0x0
00000000000135bc	mov	w23, #0xa0
00000000000135c0	b	0x13620
00000000000135c4	ldr	x8, [x22]
00000000000135c8	and	x8, x8, #0xfffffffffffffffc
00000000000135cc	ldr	x8, [x8]
00000000000135d0	ldr	w9, [x8, #0x3c]
00000000000135d4	ldr	x8, [x8, #0x40]
00000000000135d8	tbnz	w9, #0x1f, 0x1369c
00000000000135dc	and	x9, x9, x23
00000000000135e0	add	x8, x8, x9, lsl #4
00000000000135e4	ldr	x8, [x8, #0x8]
00000000000135e8	ldr	x8, [x8, #0x8]
00000000000135ec	mov	x0, x22
00000000000135f0	mov	x1, x21
00000000000135f4	blr	x8
00000000000135f8	mov	x2, x0
00000000000135fc	ldr	x8, [x20]
0000000000013600	and	x8, x8, #0xfffffffffffffffc
0000000000013604	ldr	x8, [x8]
0000000000013608	ldr	x8, [x8, #0xf0]
000000000001360c	mov	x0, x20
0000000000013610	mov	x1, x19
0000000000013614	blr	x8
0000000000013618	add	w19, w19, #0x1
000000000001361c	mov	w26, #0x1
0000000000013620	ldr	x8, [x22]
0000000000013624	and	x8, x8, #0xfffffffffffffffc
0000000000013628	ldr	x8, [x8]
000000000001362c	ldr	w9, [x8, #0x3c]
0000000000013630	ldr	x8, [x8, #0x40]
0000000000013634	tbnz	w9, #0x1f, 0x13658
0000000000013638	and	x9, x9, x23
000000000001363c	add	x8, x8, x9, lsl #4
0000000000013640	ldr	x8, [x8, #0x8]
0000000000013644	ldr	x8, [x8]
0000000000013648	mov	x0, x22
000000000001364c	blr	x8
0000000000013650	tbnz	w0, #0x0, 0x13774
0000000000013654	b	0x1378c
0000000000013658	neg	w10, w9
000000000001365c	mvn	w9, w9
0000000000013660	cmp	w10, #0x9
0000000000013664	b.ge	0x136e0
0000000000013668	cmp	w10, #0x2
000000000001366c	b.lt	0x13748
0000000000013670	mov	x10, #0x0
0000000000013674	mov	x11, x8
0000000000013678	ldr	w12, [x11]
000000000001367c	cmp	w12, #0x9f
0000000000013680	b.gt	0x13758
0000000000013684	add	x10, x10, #0x1
0000000000013688	add	x11, x11, #0x10
000000000001368c	cmp	x9, x10
0000000000013690	b.ne	0x13678
0000000000013694	mov	x10, x9
0000000000013698	b	0x13758
000000000001369c	neg	w10, w9
00000000000136a0	mvn	w9, w9
00000000000136a4	cmp	w10, #0x9
00000000000136a8	b.ge	0x13714
00000000000136ac	cmp	w10, #0x2
00000000000136b0	b.lt	0x13750
00000000000136b4	mov	x10, #0x0
00000000000136b8	mov	x11, x8
00000000000136bc	ldr	w12, [x11]
00000000000136c0	cmp	w12, #0x9f
00000000000136c4	b.gt	0x13784
00000000000136c8	add	x10, x10, #0x1
00000000000136cc	add	x11, x11, #0x10
00000000000136d0	cmp	x9, x10
00000000000136d4	b.ne	0x136bc
00000000000136d8	mov	x10, x9
00000000000136dc	b	0x13784
00000000000136e0	mov	w10, #0x0
00000000000136e4	add	w11, w9, w10
00000000000136e8	cmp	w11, #0x0
00000000000136ec	cinc	w11, w11, lt
00000000000136f0	asr	w11, w11, #1
00000000000136f4	sbfiz	x12, x11, #4, #32
00000000000136f8	ldr	w12, [x8, x12]
00000000000136fc	cmp	w12, #0xa0
0000000000013700	csinc	w10, w10, w11, ge
0000000000013704	csel	w9, w9, w11, lt
0000000000013708	cmp	w10, w9
000000000001370c	b.lt	0x136e4
0000000000013710	b	0x13758
0000000000013714	mov	w10, #0x0
0000000000013718	add	w11, w9, w10
000000000001371c	cmp	w11, #0x0
0000000000013720	cinc	w11, w11, lt
0000000000013724	asr	w11, w11, #1
0000000000013728	sbfiz	x12, x11, #4, #32
000000000001372c	ldr	w12, [x8, x12]
0000000000013730	cmp	w12, #0xa0
0000000000013734	csinc	w10, w10, w11, ge
0000000000013738	csel	w9, w9, w11, lt
000000000001373c	cmp	w10, w9
0000000000013740	b.lt	0x13718
0000000000013744	b	0x13784
0000000000013748	mov	w10, #0x0
000000000001374c	b	0x13758
0000000000013750	mov	w10, #0x0
0000000000013754	b	0x13784
0000000000013758	sxtw	x9, w10
000000000001375c	add	x8, x8, x9, lsl #4
0000000000013760	ldr	x8, [x8, #0x8]
0000000000013764	ldr	x8, [x8]
0000000000013768	mov	x0, x22
000000000001376c	blr	x8
0000000000013770	tbz	w0, #0x0, 0x1378c
0000000000013774	ldarb	w8, [x25]
0000000000013778	tbz	w8, #0x0, 0x135c4
000000000001377c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000013780	b	0x135c4
0000000000013784	sxtw	x9, w10
0000000000013788	b	0x135e0
000000000001378c	ldr	x8, [sp, #0x8]
0000000000013790	str	x8, [x24, #0x110]
0000000000013794	and	w0, w26, #0x1
0000000000013798	ldp	x29, x30, [sp, #0x70]
000000000001379c	ldp	x20, x19, [sp, #0x60]
00000000000137a0	ldp	x22, x21, [sp, #0x50]
00000000000137a4	ldp	x24, x23, [sp, #0x40]
00000000000137a8	ldp	x26, x25, [sp, #0x30]
00000000000137ac	add	sp, sp, #0x80
00000000000137b0	ret
_kfun:kotlin.collections.AbstractMutableList#clear(){}:
00000000000137b4	stp	x20, x19, [sp, #-0x20]!
00000000000137b8	stp	x29, x30, [sp, #0x10]
00000000000137bc	add	x29, sp, #0x10
00000000000137c0	mov	x19, x0
00000000000137c4	adr	x8, #0x6f07f
00000000000137c8	nop
00000000000137cc	ldarb	w8, [x8]
00000000000137d0	tbz	w8, #0x0, 0x137d8
00000000000137d4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000137d8	ldr	x8, [x19]
00000000000137dc	and	x8, x8, #0xfffffffffffffffc
00000000000137e0	ldr	x8, [x8]
00000000000137e4	ldr	x8, [x8, #0x88]
00000000000137e8	mov	x0, x19
00000000000137ec	blr	x8
00000000000137f0	mov	x2, x0
00000000000137f4	ldr	x8, [x19]
00000000000137f8	and	x8, x8, #0xfffffffffffffffc
00000000000137fc	ldr	x8, [x8]
0000000000013800	ldr	x3, [x8, #0x130]
0000000000013804	mov	x0, x19
0000000000013808	mov	w1, #0x0
000000000001380c	ldp	x29, x30, [sp, #0x10]
0000000000013810	ldp	x20, x19, [sp], #0x20
0000000000013814	br	x3
_kfun:kotlin.collections.AbstractMutableList#removeAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean:
0000000000013818	sub	sp, sp, #0x50
000000000001381c	stp	x22, x21, [sp, #0x20]
0000000000013820	stp	x20, x19, [sp, #0x30]
0000000000013824	stp	x29, x30, [sp, #0x40]
0000000000013828	add	x29, sp, #0x40
000000000001382c	mov	x20, x1
0000000000013830	mov	x19, x0
0000000000013834	movi.16b	v0, #0x0
0000000000013838	stp	q0, q0, [sp]
000000000001383c	adrp	x0, 85 ; 0x68000
0000000000013840	add	x0, x0, #0xa00
0000000000013844	ldr	x8, [x0]
0000000000013848	blr	x8
000000000001384c	ldr	x21, [x0]
0000000000013850	ldr	x8, [x21, #0x110]
0000000000013854	mov	x9, sp
0000000000013858	str	x9, [x21, #0x110]
000000000001385c	mov	x9, #0x400000000
0000000000013860	stp	x8, x9, [sp, #0x8]
0000000000013864	adr	x8, #0x6efdf
0000000000013868	nop
000000000001386c	ldarb	w8, [x8]
0000000000013870	tbz	w8, #0x0, 0x13878
0000000000013874	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000013878	ldr	x8, [x21, #0x118]
000000000001387c	add	x0, x8, #0x70
0000000000013880	mov	w1, #0x18
0000000000013884	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000013888	adr	x8, #0x439f8
000000000001388c	nop
0000000000013890	mov	x1, x0
0000000000013894	str	x8, [x1, #0x10]!
0000000000013898	stur	xzr, [x1, #-0x8]
000000000001389c	str	x1, [sp, #0x18]
00000000000138a0	str	x20, [x1, #0x8]
00000000000138a4	mov	x0, x19
00000000000138a8	bl	"_kfun:kotlin.collections#removeAll__at__kotlin.collections.MutableList<0:0>(kotlin.Function1<0:0,kotlin.Boolean>){0ยง<kotlin.Any?>}kotlin.Boolean"
00000000000138ac	ldr	x8, [sp, #0x8]
00000000000138b0	str	x8, [x21, #0x110]
00000000000138b4	ldp	x29, x30, [sp, #0x40]
00000000000138b8	ldp	x20, x19, [sp, #0x30]
00000000000138bc	ldp	x22, x21, [sp, #0x20]
00000000000138c0	add	sp, sp, #0x50
00000000000138c4	ret
_kfun:kotlin.collections.AbstractMutableList#retainAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean:
00000000000138c8	sub	sp, sp, #0x50
00000000000138cc	stp	x22, x21, [sp, #0x20]
00000000000138d0	stp	x20, x19, [sp, #0x30]
00000000000138d4	stp	x29, x30, [sp, #0x40]
00000000000138d8	add	x29, sp, #0x40
00000000000138dc	mov	x20, x1
00000000000138e0	mov	x19, x0
00000000000138e4	movi.16b	v0, #0x0
00000000000138e8	stp	q0, q0, [sp]
00000000000138ec	adrp	x0, 85 ; 0x68000
00000000000138f0	add	x0, x0, #0xa00
00000000000138f4	ldr	x8, [x0]
00000000000138f8	blr	x8
00000000000138fc	ldr	x21, [x0]
0000000000013900	ldr	x8, [x21, #0x110]
0000000000013904	mov	x9, sp
0000000000013908	str	x9, [x21, #0x110]
000000000001390c	mov	x9, #0x400000000
0000000000013910	stp	x8, x9, [sp, #0x8]
0000000000013914	adr	x8, #0x6ef2f
0000000000013918	nop
000000000001391c	ldarb	w8, [x8]
0000000000013920	tbz	w8, #0x0, 0x13928
0000000000013924	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000013928	ldr	x8, [x21, #0x118]
000000000001392c	add	x0, x8, #0x70
0000000000013930	mov	w1, #0x18
0000000000013934	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000013938	adr	x8, #0x439d8
000000000001393c	nop
0000000000013940	mov	x1, x0
0000000000013944	str	x8, [x1, #0x10]!
0000000000013948	stur	xzr, [x1, #-0x8]
000000000001394c	str	x1, [sp, #0x18]
0000000000013950	str	x20, [x1, #0x8]
0000000000013954	mov	x0, x19
0000000000013958	bl	"_kfun:kotlin.collections#removeAll__at__kotlin.collections.MutableList<0:0>(kotlin.Function1<0:0,kotlin.Boolean>){0ยง<kotlin.Any?>}kotlin.Boolean"
000000000001395c	ldr	x8, [sp, #0x8]
0000000000013960	str	x8, [x21, #0x110]
0000000000013964	ldp	x29, x30, [sp, #0x40]
0000000000013968	ldp	x20, x19, [sp, #0x30]
000000000001396c	ldp	x22, x21, [sp, #0x20]
0000000000013970	add	sp, sp, #0x50
0000000000013974	ret
_kfun:kotlin.collections.AbstractMutableList#iterator(){}kotlin.collections.MutableIterator<1:0>:
0000000000013978	stp	x20, x19, [sp, #-0x20]!
000000000001397c	stp	x29, x30, [sp, #0x10]
0000000000013980	add	x29, sp, #0x10
0000000000013984	mov	x19, x1
0000000000013988	mov	x20, x0
000000000001398c	adr	x8, #0x6eeb7
0000000000013990	nop
0000000000013994	ldarb	w8, [x8]
0000000000013998	tbz	w8, #0x0, 0x139a0
000000000001399c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000139a0	adrp	x0, 85 ; 0x68000
00000000000139a4	add	x0, x0, #0xa00
00000000000139a8	ldr	x8, [x0]
00000000000139ac	blr	x8
00000000000139b0	ldr	x8, [x0]
00000000000139b4	ldr	x8, [x8, #0x118]
00000000000139b8	add	x0, x8, #0x70
00000000000139bc	mov	w1, #0x20
00000000000139c0	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000139c4	adr	x8, #0x4362c
00000000000139c8	nop
00000000000139cc	str	x8, [x0, #0x10]!
00000000000139d0	stur	xzr, [x0, #-0x8]
00000000000139d4	str	x0, [x19]
00000000000139d8	str	x20, [x0, #0x8]
00000000000139dc	mov	w8, #-0x1
00000000000139e0	str	w8, [x0, #0x14]
00000000000139e4	str	x0, [x19]
00000000000139e8	ldp	x29, x30, [sp, #0x10]
00000000000139ec	ldp	x20, x19, [sp], #0x20
00000000000139f0	ret
_kfun:kotlin.collections.AbstractMutableList#contains(1:0){}kotlin.Boolean:
00000000000139f4	stp	x20, x19, [sp, #-0x20]!
00000000000139f8	stp	x29, x30, [sp, #0x10]
00000000000139fc	add	x29, sp, #0x10
0000000000013a00	mov	x19, x1
0000000000013a04	mov	x20, x0
0000000000013a08	adr	x8, #0x6ee3b
0000000000013a0c	nop
0000000000013a10	ldarb	w8, [x8]
0000000000013a14	tbz	w8, #0x0, 0x13a1c
0000000000013a18	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000013a1c	ldr	x8, [x20]
0000000000013a20	and	x8, x8, #0xfffffffffffffffc
0000000000013a24	ldr	x8, [x8]
0000000000013a28	ldr	x8, [x8, #0x108]
0000000000013a2c	mov	x0, x20
0000000000013a30	mov	x1, x19
0000000000013a34	blr	x8
0000000000013a38	mvn	w8, w0
0000000000013a3c	lsr	w0, w8, #31
0000000000013a40	ldp	x29, x30, [sp, #0x10]
0000000000013a44	ldp	x20, x19, [sp], #0x20
0000000000013a48	ret
_kfun:kotlin.collections.AbstractMutableList#indexOf(1:0){}kotlin.Int:
0000000000013a4c	sub	sp, sp, #0x70
0000000000013a50	stp	x26, x25, [sp, #0x20]
0000000000013a54	stp	x24, x23, [sp, #0x30]
0000000000013a58	stp	x22, x21, [sp, #0x40]
0000000000013a5c	stp	x20, x19, [sp, #0x50]
0000000000013a60	stp	x29, x30, [sp, #0x60]
0000000000013a64	add	x29, sp, #0x60
0000000000013a68	mov	x19, x1
0000000000013a6c	mov	x20, x0
0000000000013a70	movi.16b	v0, #0x0
0000000000013a74	stp	q0, q0, [sp]
0000000000013a78	mov	x22, sp
0000000000013a7c	adrp	x0, 85 ; 0x68000
0000000000013a80	add	x0, x0, #0xa00
0000000000013a84	ldr	x8, [x0]
0000000000013a88	blr	x8
0000000000013a8c	ldr	x23, [x0]
0000000000013a90	ldr	x8, [x23, #0x110]
0000000000013a94	str	x22, [x23, #0x110]
0000000000013a98	mov	x9, #0x400000000
0000000000013a9c	stp	x8, x9, [sp, #0x8]
0000000000013aa0	adr	x24, #0x6eda3
0000000000013aa4	nop
0000000000013aa8	ldarb	w8, [x24]
0000000000013aac	tbz	w8, #0x0, 0x13ab4
0000000000013ab0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000013ab4	mov	x0, x20
0000000000013ab8	bl	"_kfun:kotlin.collections#<get-lastIndex>__at__kotlin.collections.List<0:0>(){0ยง<kotlin.Any?>}kotlin.Int"
0000000000013abc	tbnz	w0, #0x1f, 0x13b30
0000000000013ac0	mov	w21, #0x0
0000000000013ac4	add	x22, x22, #0x18
0000000000013ac8	add	w25, w0, #0x1
0000000000013acc	b	0x13ae0
0000000000013ad0	cbz	x19, 0x13b34
0000000000013ad4	add	w21, w21, #0x1
0000000000013ad8	cmp	w25, w21
0000000000013adc	b.eq	0x13b30
0000000000013ae0	ldarb	w8, [x24]
0000000000013ae4	tbz	w8, #0x0, 0x13aec
0000000000013ae8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000013aec	ldr	x8, [x20]
0000000000013af0	and	x8, x8, #0xfffffffffffffffc
0000000000013af4	ldr	x8, [x8]
0000000000013af8	ldr	x8, [x8, #0x100]
0000000000013afc	mov	x0, x20
0000000000013b00	mov	x1, x21
0000000000013b04	mov	x2, x22
0000000000013b08	blr	x8
0000000000013b0c	cbz	x0, 0x13ad0
0000000000013b10	ldr	x8, [x0]
0000000000013b14	and	x8, x8, #0xfffffffffffffffc
0000000000013b18	ldr	x8, [x8]
0000000000013b1c	ldr	x8, [x8, #0x70]
0000000000013b20	mov	x1, x19
0000000000013b24	blr	x8
0000000000013b28	tbz	w0, #0x0, 0x13ad4
0000000000013b2c	b	0x13b34
0000000000013b30	mov	w21, #-0x1
0000000000013b34	ldr	x8, [sp, #0x8]
0000000000013b38	str	x8, [x23, #0x110]
0000000000013b3c	mov	x0, x21
0000000000013b40	ldp	x29, x30, [sp, #0x60]
0000000000013b44	ldp	x20, x19, [sp, #0x50]
0000000000013b48	ldp	x22, x21, [sp, #0x40]
0000000000013b4c	ldp	x24, x23, [sp, #0x30]
0000000000013b50	ldp	x26, x25, [sp, #0x20]
0000000000013b54	add	sp, sp, #0x70
0000000000013b58	ret
_kfun:kotlin.collections.AbstractMutableList#lastIndexOf(1:0){}kotlin.Int:
0000000000013b5c	sub	sp, sp, #0x60
0000000000013b60	stp	x24, x23, [sp, #0x20]
0000000000013b64	stp	x22, x21, [sp, #0x30]
0000000000013b68	stp	x20, x19, [sp, #0x40]
0000000000013b6c	stp	x29, x30, [sp, #0x50]
0000000000013b70	add	x29, sp, #0x50
0000000000013b74	mov	x19, x1
0000000000013b78	mov	x20, x0
0000000000013b7c	movi.16b	v0, #0x0
0000000000013b80	stp	q0, q0, [sp]
0000000000013b84	mov	x22, sp
0000000000013b88	adrp	x0, 85 ; 0x68000
0000000000013b8c	add	x0, x0, #0xa00
0000000000013b90	ldr	x8, [x0]
0000000000013b94	blr	x8
0000000000013b98	ldr	x23, [x0]
0000000000013b9c	ldr	x8, [x23, #0x110]
0000000000013ba0	str	x22, [x23, #0x110]
0000000000013ba4	mov	x9, #0x400000000
0000000000013ba8	stp	x8, x9, [sp, #0x8]
0000000000013bac	adr	x24, #0x6ec97
0000000000013bb0	nop
0000000000013bb4	ldarb	w8, [x24]
0000000000013bb8	tbz	w8, #0x0, 0x13bc0
0000000000013bbc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000013bc0	mov	x0, x20
0000000000013bc4	bl	"_kfun:kotlin.collections#<get-lastIndex>__at__kotlin.collections.List<0:0>(){0ยง<kotlin.Any?>}kotlin.Int"
0000000000013bc8	tbnz	w0, #0x1f, 0x13c3c
0000000000013bcc	mov	x21, x0
0000000000013bd0	add	x22, x22, #0x18
0000000000013bd4	b	0x13bec
0000000000013bd8	cbz	x19, 0x13c40
0000000000013bdc	sub	w21, w21, #0x1
0000000000013be0	add	w8, w21, #0x1
0000000000013be4	cmp	w8, #0x0
0000000000013be8	b.le	0x13c3c
0000000000013bec	ldarb	w8, [x24]
0000000000013bf0	tbz	w8, #0x0, 0x13bf8
0000000000013bf4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000013bf8	ldr	x8, [x20]
0000000000013bfc	and	x8, x8, #0xfffffffffffffffc
0000000000013c00	ldr	x8, [x8]
0000000000013c04	ldr	x8, [x8, #0x100]
0000000000013c08	mov	x0, x20
0000000000013c0c	mov	x1, x21
0000000000013c10	mov	x2, x22
0000000000013c14	blr	x8
0000000000013c18	cbz	x0, 0x13bd8
0000000000013c1c	ldr	x8, [x0]
0000000000013c20	and	x8, x8, #0xfffffffffffffffc
0000000000013c24	ldr	x8, [x8]
0000000000013c28	ldr	x8, [x8, #0x70]
0000000000013c2c	mov	x1, x19
0000000000013c30	blr	x8
0000000000013c34	tbz	w0, #0x0, 0x13bdc
0000000000013c38	b	0x13c40
0000000000013c3c	mov	w21, #-0x1
0000000000013c40	ldr	x8, [sp, #0x8]
0000000000013c44	str	x8, [x23, #0x110]
0000000000013c48	mov	x0, x21
0000000000013c4c	ldp	x29, x30, [sp, #0x50]
0000000000013c50	ldp	x20, x19, [sp, #0x40]
0000000000013c54	ldp	x22, x21, [sp, #0x30]
0000000000013c58	ldp	x24, x23, [sp, #0x20]
0000000000013c5c	add	sp, sp, #0x60
0000000000013c60	ret
_kfun:kotlin.collections.AbstractMutableList#listIterator(){}kotlin.collections.MutableListIterator<1:0>:
0000000000013c64	stp	x20, x19, [sp, #-0x20]!
0000000000013c68	stp	x29, x30, [sp, #0x10]
0000000000013c6c	add	x29, sp, #0x10
0000000000013c70	mov	x19, x1
0000000000013c74	mov	x20, x0
0000000000013c78	adr	x8, #0x6ebcb
0000000000013c7c	nop
0000000000013c80	ldarb	w8, [x8]
0000000000013c84	tbz	w8, #0x0, 0x13c8c
0000000000013c88	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000013c8c	ldr	x8, [x20]
0000000000013c90	and	x8, x8, #0xfffffffffffffffc
0000000000013c94	ldr	x8, [x8]
0000000000013c98	ldr	x8, [x8, #0x120]
0000000000013c9c	mov	x0, x20
0000000000013ca0	mov	w1, #0x0
0000000000013ca4	mov	x2, x19
0000000000013ca8	blr	x8
0000000000013cac	str	x0, [x19]
0000000000013cb0	ldp	x29, x30, [sp, #0x10]
0000000000013cb4	ldp	x20, x19, [sp], #0x20
0000000000013cb8	ret
_kfun:kotlin.collections.AbstractMutableList#listIterator(kotlin.Int){}kotlin.collections.MutableListIterator<1:0>:
0000000000013cbc	stp	x22, x21, [sp, #-0x30]!
0000000000013cc0	stp	x20, x19, [sp, #0x10]
0000000000013cc4	stp	x29, x30, [sp, #0x20]
0000000000013cc8	add	x29, sp, #0x20
0000000000013ccc	mov	x19, x2
0000000000013cd0	mov	x20, x1
0000000000013cd4	mov	x21, x0
0000000000013cd8	adr	x8, #0x6eb6b
0000000000013cdc	nop
0000000000013ce0	ldarb	w8, [x8]
0000000000013ce4	tbz	w8, #0x0, 0x13cec
0000000000013ce8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000013cec	adrp	x0, 85 ; 0x68000
0000000000013cf0	add	x0, x0, #0xa00
0000000000013cf4	ldr	x8, [x0]
0000000000013cf8	blr	x8
0000000000013cfc	ldr	x8, [x0]
0000000000013d00	ldr	x8, [x8, #0x118]
0000000000013d04	add	x0, x8, #0x70
0000000000013d08	mov	w1, #0x28
0000000000013d0c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000013d10	mov	x22, x0
0000000000013d14	adr	x8, #0x4337c
0000000000013d18	nop
0000000000013d1c	str	x8, [x22, #0x10]!
0000000000013d20	stur	xzr, [x22, #-0x8]
0000000000013d24	str	x22, [x19]
0000000000013d28	str	x21, [x22, #0x18]
0000000000013d2c	str	x21, [x22, #0x8]
0000000000013d30	mov	w8, #-0x1
0000000000013d34	str	w8, [x22, #0x14]
0000000000013d38	ldr	x8, [x21]
0000000000013d3c	and	x8, x8, #0xfffffffffffffffc
0000000000013d40	ldr	x8, [x8]
0000000000013d44	ldr	x8, [x8, #0x88]
0000000000013d48	mov	x0, x21
0000000000013d4c	blr	x8
0000000000013d50	mov	x1, x0
0000000000013d54	mov	x0, x20
0000000000013d58	bl	"_kfun:kotlin.collections.AbstractList.Companion#checkPositionIndex(kotlin.Int;kotlin.Int){}"
0000000000013d5c	str	w20, [x22, #0x10]
0000000000013d60	str	x22, [x19]
0000000000013d64	mov	x0, x22
0000000000013d68	ldp	x29, x30, [sp, #0x20]
0000000000013d6c	ldp	x20, x19, [sp, #0x10]
0000000000013d70	ldp	x22, x21, [sp], #0x30
0000000000013d74	ret
_kfun:kotlin.collections.AbstractMutableList#subList(kotlin.Int;kotlin.Int){}kotlin.collections.MutableList<1:0>:
0000000000013d78	stp	x24, x23, [sp, #-0x40]!
0000000000013d7c	stp	x22, x21, [sp, #0x10]
0000000000013d80	stp	x20, x19, [sp, #0x20]
0000000000013d84	stp	x29, x30, [sp, #0x30]
0000000000013d88	add	x29, sp, #0x30
0000000000013d8c	mov	x19, x3
0000000000013d90	mov	x20, x2
0000000000013d94	mov	x21, x1
0000000000013d98	mov	x22, x0
0000000000013d9c	adr	x8, #0x6eaa7
0000000000013da0	nop
0000000000013da4	ldarb	w8, [x8]
0000000000013da8	tbz	w8, #0x0, 0x13db0
0000000000013dac	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000013db0	adrp	x0, 85 ; 0x68000
0000000000013db4	add	x0, x0, #0xa00
0000000000013db8	ldr	x8, [x0]
0000000000013dbc	blr	x8
0000000000013dc0	ldr	x8, [x0]
0000000000013dc4	ldr	x8, [x8, #0x118]
0000000000013dc8	add	x0, x8, #0x70
0000000000013dcc	mov	w1, #0x28
0000000000013dd0	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000013dd4	mov	x23, x0
0000000000013dd8	adr	x8, #0x43358
0000000000013ddc	nop
0000000000013de0	str	x8, [x23, #0x10]!
0000000000013de4	stur	xzr, [x23, #-0x8]
0000000000013de8	str	x23, [x19]
0000000000013dec	str	x22, [x23, #0x10]
0000000000013df0	str	w21, [x23, #0x18]
0000000000013df4	ldr	x8, [x22]
0000000000013df8	and	x8, x8, #0xfffffffffffffffc
0000000000013dfc	ldr	x8, [x8]
0000000000013e00	ldr	x8, [x8, #0x88]
0000000000013e04	mov	x0, x22
0000000000013e08	blr	x8
0000000000013e0c	mov	x2, x0
0000000000013e10	mov	x0, x21
0000000000013e14	mov	x1, x20
0000000000013e18	bl	"_kfun:kotlin.collections.AbstractList.Companion#checkRangeIndexes(kotlin.Int;kotlin.Int;kotlin.Int){}"
0000000000013e1c	ldr	w8, [x23, #0x18]
0000000000013e20	sub	w8, w20, w8
0000000000013e24	str	w8, [x23, #0x1c]
0000000000013e28	str	x23, [x19]
0000000000013e2c	mov	x0, x23
0000000000013e30	ldp	x29, x30, [sp, #0x30]
0000000000013e34	ldp	x20, x19, [sp, #0x20]
0000000000013e38	ldp	x22, x21, [sp, #0x10]
0000000000013e3c	ldp	x24, x23, [sp], #0x40
0000000000013e40	ret
_kfun:kotlin.collections.AbstractMutableList#removeRange(kotlin.Int;kotlin.Int){}:
0000000000013e44	sub	sp, sp, #0x80
0000000000013e48	stp	x26, x25, [sp, #0x30]
0000000000013e4c	stp	x24, x23, [sp, #0x40]
0000000000013e50	stp	x22, x21, [sp, #0x50]
0000000000013e54	stp	x20, x19, [sp, #0x60]
0000000000013e58	stp	x29, x30, [sp, #0x70]
0000000000013e5c	add	x29, sp, #0x70
0000000000013e60	mov	x20, x2
0000000000013e64	mov	x21, x1
0000000000013e68	mov	x19, x0
0000000000013e6c	movi.16b	v0, #0x0
0000000000013e70	stp	q0, q0, [sp]
0000000000013e74	str	xzr, [sp, #0x20]
0000000000013e78	mov	x25, sp
0000000000013e7c	add	x22, x25, #0x18
0000000000013e80	adrp	x0, 85 ; 0x68000
0000000000013e84	add	x0, x0, #0xa00
0000000000013e88	ldr	x8, [x0]
0000000000013e8c	blr	x8
0000000000013e90	ldr	x23, [x0]
0000000000013e94	ldr	x8, [x23, #0x110]
0000000000013e98	str	x25, [x23, #0x110]
0000000000013e9c	mov	x9, #0x500000000
0000000000013ea0	stp	x8, x9, [sp, #0x8]
0000000000013ea4	adr	x24, #0x6e99f
0000000000013ea8	nop
0000000000013eac	ldarb	w8, [x24]
0000000000013eb0	tbz	w8, #0x0, 0x13eb8
0000000000013eb4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000013eb8	ldr	x8, [x19]
0000000000013ebc	and	x8, x8, #0xfffffffffffffffc
0000000000013ec0	ldr	x8, [x8]
0000000000013ec4	ldr	x8, [x8, #0x120]
0000000000013ec8	mov	x0, x19
0000000000013ecc	mov	x1, x21
0000000000013ed0	mov	x2, x22
0000000000013ed4	blr	x8
0000000000013ed8	sub	w21, w20, w21
0000000000013edc	cmp	w21, #0x1
0000000000013ee0	b.lt	0x1408c
0000000000013ee4	mov	x19, x0
0000000000013ee8	mov	w22, #0x0
0000000000013eec	add	x20, x25, #0x20
0000000000013ef0	mov	w25, #0x23
0000000000013ef4	b	0x13f1c
0000000000013ef8	and	x9, x9, x25
0000000000013efc	add	w22, w22, #0x1
0000000000013f00	add	x8, x8, x9, lsl #4
0000000000013f04	ldr	x8, [x8, #0x8]
0000000000013f08	ldr	x8, [x8, #0x18]
0000000000013f0c	mov	x0, x19
0000000000013f10	blr	x8
0000000000013f14	cmp	w22, w21
0000000000013f18	b.eq	0x1408c
0000000000013f1c	ldarb	w8, [x24]
0000000000013f20	tbz	w8, #0x0, 0x13f28
0000000000013f24	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000013f28	ldr	x8, [x19]
0000000000013f2c	and	x8, x8, #0xfffffffffffffffc
0000000000013f30	ldr	x8, [x8]
0000000000013f34	ldr	w9, [x8, #0x3c]
0000000000013f38	ldr	x8, [x8, #0x40]
0000000000013f3c	tbnz	w9, #0x1f, 0x13f48
0000000000013f40	and	x9, x9, x25
0000000000013f44	b	0x13fcc
0000000000013f48	neg	w10, w9
0000000000013f4c	mvn	w9, w9
0000000000013f50	cmp	w10, #0x9
0000000000013f54	b.ge	0x13f8c
0000000000013f58	cmp	w10, #0x2
0000000000013f5c	b.lt	0x13fc0
0000000000013f60	mov	x10, #0x0
0000000000013f64	mov	x11, x8
0000000000013f68	ldr	w12, [x11]
0000000000013f6c	cmp	w12, #0x22
0000000000013f70	b.gt	0x13fc8
0000000000013f74	add	x10, x10, #0x1
0000000000013f78	add	x11, x11, #0x10
0000000000013f7c	cmp	x9, x10
0000000000013f80	b.ne	0x13f68
0000000000013f84	mov	x10, x9
0000000000013f88	b	0x13fc8
0000000000013f8c	mov	w10, #0x0
0000000000013f90	add	w11, w9, w10
0000000000013f94	cmp	w11, #0x0
0000000000013f98	cinc	w11, w11, lt
0000000000013f9c	asr	w11, w11, #1
0000000000013fa0	sbfiz	x12, x11, #4, #32
0000000000013fa4	ldr	w12, [x8, x12]
0000000000013fa8	cmp	w12, #0x23
0000000000013fac	csinc	w10, w10, w11, ge
0000000000013fb0	csel	w9, w9, w11, lt
0000000000013fb4	cmp	w10, w9
0000000000013fb8	b.lt	0x13f90
0000000000013fbc	b	0x13fc8
0000000000013fc0	mov	w10, #0x0
0000000000013fc4	b	0x13fc8
0000000000013fc8	sxtw	x9, w10
0000000000013fcc	add	x8, x8, x9, lsl #4
0000000000013fd0	ldr	x8, [x8, #0x8]
0000000000013fd4	ldr	x8, [x8, #0x10]
0000000000013fd8	mov	x0, x19
0000000000013fdc	mov	x1, x20
0000000000013fe0	blr	x8
0000000000013fe4	ldr	x8, [x19]
0000000000013fe8	and	x8, x8, #0xfffffffffffffffc
0000000000013fec	ldr	x8, [x8]
0000000000013ff0	ldr	w9, [x8, #0x3c]
0000000000013ff4	ldr	x8, [x8, #0x40]
0000000000013ff8	tbz	w9, #0x1f, 0x13ef8
0000000000013ffc	neg	w10, w9
0000000000014000	mvn	w9, w9
0000000000014004	cmp	w10, #0x9
0000000000014008	b.ge	0x14044
000000000001400c	cmp	w10, #0x2
0000000000014010	b.lt	0x14078
0000000000014014	mov	x10, #0x0
0000000000014018	mov	x11, x8
000000000001401c	ldr	w12, [x11]
0000000000014020	cmp	w12, #0x22
0000000000014024	b.gt	0x14084
0000000000014028	add	x10, x10, #0x1
000000000001402c	add	x11, x11, #0x10
0000000000014030	cmp	x9, x10
0000000000014034	b.ne	0x1401c
0000000000014038	mov	x10, x9
000000000001403c	sxtw	x9, w10
0000000000014040	b	0x13efc
0000000000014044	mov	w10, #0x0
0000000000014048	add	w11, w9, w10
000000000001404c	cmp	w11, #0x0
0000000000014050	cinc	w11, w11, lt
0000000000014054	asr	w11, w11, #1
0000000000014058	sbfiz	x12, x11, #4, #32
000000000001405c	ldr	w12, [x8, x12]
0000000000014060	cmp	w12, #0x23
0000000000014064	csinc	w10, w10, w11, ge
0000000000014068	csel	w9, w9, w11, lt
000000000001406c	cmp	w10, w9
0000000000014070	b.lt	0x14048
0000000000014074	b	0x14084
0000000000014078	mov	w10, #0x0
000000000001407c	sxtw	x9, w10
0000000000014080	b	0x13efc
0000000000014084	sxtw	x9, w10
0000000000014088	b	0x13efc
000000000001408c	ldr	x8, [sp, #0x8]
0000000000014090	str	x8, [x23, #0x110]
0000000000014094	ldp	x29, x30, [sp, #0x70]
0000000000014098	ldp	x20, x19, [sp, #0x60]
000000000001409c	ldp	x22, x21, [sp, #0x50]
00000000000140a0	ldp	x24, x23, [sp, #0x40]
00000000000140a4	ldp	x26, x25, [sp, #0x30]
00000000000140a8	add	sp, sp, #0x80
00000000000140ac	ret
_kfun:kotlin.collections.AbstractMutableList#equals(kotlin.Any?){}kotlin.Boolean:
00000000000140b0	stp	x20, x19, [sp, #-0x20]!
00000000000140b4	stp	x29, x30, [sp, #0x10]
00000000000140b8	add	x29, sp, #0x10
00000000000140bc	mov	x19, x1
00000000000140c0	mov	x20, x0
00000000000140c4	adr	x8, #0x6e77f
00000000000140c8	nop
00000000000140cc	ldarb	w8, [x8]
00000000000140d0	tbz	w8, #0x0, 0x140d8
00000000000140d4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000140d8	cmp	x19, x20
00000000000140dc	b.eq	0x14118
00000000000140e0	cbz	x19, 0x141cc
00000000000140e4	ldr	x8, [x19]
00000000000140e8	and	x8, x8, #0xfffffffffffffffc
00000000000140ec	ldr	x8, [x8]
00000000000140f0	ldr	w9, [x8, #0x3c]
00000000000140f4	ldr	x8, [x8, #0x40]
00000000000140f8	tbnz	w9, #0x1f, 0x14128
00000000000140fc	mov	w10, #0x2b
0000000000014100	and	x9, x9, x10
0000000000014104	lsl	x9, x9, #4
0000000000014108	ldr	w8, [x8, x9]
000000000001410c	cmp	w8, #0x2b
0000000000014110	b.ne	0x141cc
0000000000014114	b	0x141f0
0000000000014118	mov	w0, #0x1
000000000001411c	ldp	x29, x30, [sp, #0x10]
0000000000014120	ldp	x20, x19, [sp], #0x20
0000000000014124	ret
0000000000014128	neg	w10, w9
000000000001412c	mvn	w9, w9
0000000000014130	cmp	w10, #0x9
0000000000014134	b.ge	0x14180
0000000000014138	cmp	w10, #0x2
000000000001413c	b.lt	0x141b4
0000000000014140	mov	x10, #0x0
0000000000014144	mov	x11, x8
0000000000014148	ldr	w12, [x11]
000000000001414c	cmp	w12, #0x2a
0000000000014150	b.gt	0x141dc
0000000000014154	add	x10, x10, #0x1
0000000000014158	add	x11, x11, #0x10
000000000001415c	cmp	x9, x10
0000000000014160	b.ne	0x14148
0000000000014164	mov	x10, x9
0000000000014168	sxtw	x9, w10
000000000001416c	lsl	x9, x9, #4
0000000000014170	ldr	w8, [x8, x9]
0000000000014174	cmp	w8, #0x2b
0000000000014178	b.ne	0x141cc
000000000001417c	b	0x141f0
0000000000014180	mov	w10, #0x0
0000000000014184	add	w11, w9, w10
0000000000014188	cmp	w11, #0x0
000000000001418c	cinc	w11, w11, lt
0000000000014190	asr	w11, w11, #1
0000000000014194	sbfiz	x12, x11, #4, #32
0000000000014198	ldr	w12, [x8, x12]
000000000001419c	cmp	w12, #0x2b
00000000000141a0	csinc	w10, w10, w11, ge
00000000000141a4	csel	w9, w9, w11, lt
00000000000141a8	cmp	w10, w9
00000000000141ac	b.lt	0x14184
00000000000141b0	b	0x141dc
00000000000141b4	mov	w10, #0x0
00000000000141b8	sxtw	x9, w10
00000000000141bc	lsl	x9, x9, #4
00000000000141c0	ldr	w8, [x8, x9]
00000000000141c4	cmp	w8, #0x2b
00000000000141c8	b.eq	0x141f0
00000000000141cc	mov	w0, #0x0
00000000000141d0	ldp	x29, x30, [sp, #0x10]
00000000000141d4	ldp	x20, x19, [sp], #0x20
00000000000141d8	ret
00000000000141dc	sxtw	x9, w10
00000000000141e0	lsl	x9, x9, #4
00000000000141e4	ldr	w8, [x8, x9]
00000000000141e8	cmp	w8, #0x2b
00000000000141ec	b.ne	0x141cc
00000000000141f0	mov	x0, x20
00000000000141f4	mov	x1, x19
00000000000141f8	ldp	x29, x30, [sp, #0x10]
00000000000141fc	ldp	x20, x19, [sp], #0x20
0000000000014200	b	"_kfun:kotlin.collections.AbstractList.Companion#orderedEquals(kotlin.collections.Collection<*>;kotlin.collections.Collection<*>){}kotlin.Boolean"
_kfun:kotlin.collections.AbstractMutableList#hashCode(){}kotlin.Int:
0000000000014204	stp	x20, x19, [sp, #-0x20]!
0000000000014208	stp	x29, x30, [sp, #0x10]
000000000001420c	add	x29, sp, #0x10
0000000000014210	mov	x19, x0
0000000000014214	adr	x8, #0x6e62f
0000000000014218	nop
000000000001421c	ldarb	w8, [x8]
0000000000014220	tbz	w8, #0x0, 0x14228
0000000000014224	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000014228	mov	x0, x19
000000000001422c	ldp	x29, x30, [sp, #0x10]
0000000000014230	ldp	x20, x19, [sp], #0x20
0000000000014234	b	"_kfun:kotlin.collections.AbstractList.Companion#orderedHashCode(kotlin.collections.Collection<*>){}kotlin.Int"
_kfun:kotlin.collections.AbstractMutableList.IteratorImpl.hasNext#internal:
0000000000014238	stp	x20, x19, [sp, #-0x20]!
000000000001423c	stp	x29, x30, [sp, #0x10]
0000000000014240	add	x29, sp, #0x10
0000000000014244	mov	x19, x0
0000000000014248	adr	x8, #0x6e5fb
000000000001424c	nop
0000000000014250	ldarb	w8, [x8]
0000000000014254	tbz	w8, #0x0, 0x1425c
0000000000014258	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001425c	ldr	w20, [x19, #0x10]
0000000000014260	ldr	x0, [x19, #0x8]
0000000000014264	ldr	x8, [x0]
0000000000014268	and	x8, x8, #0xfffffffffffffffc
000000000001426c	ldr	x8, [x8]
0000000000014270	ldr	x8, [x8, #0x88]
0000000000014274	blr	x8
0000000000014278	cmp	w20, w0
000000000001427c	cset	w0, lt
0000000000014280	ldp	x29, x30, [sp, #0x10]
0000000000014284	ldp	x20, x19, [sp], #0x20
0000000000014288	ret
_kfun:kotlin.collections.AbstractMutableList.IteratorImpl.next#internal:
000000000001428c	sub	sp, sp, #0x50
0000000000014290	stp	x22, x21, [sp, #0x20]
0000000000014294	stp	x20, x19, [sp, #0x30]
0000000000014298	stp	x29, x30, [sp, #0x40]
000000000001429c	add	x29, sp, #0x40
00000000000142a0	mov	x19, x1
00000000000142a4	mov	x20, x0
00000000000142a8	movi.16b	v0, #0x0
00000000000142ac	stp	q0, q0, [sp]
00000000000142b0	adrp	x0, 84 ; 0x68000
00000000000142b4	add	x0, x0, #0xa00
00000000000142b8	ldr	x8, [x0]
00000000000142bc	blr	x8
00000000000142c0	ldr	x21, [x0]
00000000000142c4	ldr	x8, [x21, #0x110]
00000000000142c8	mov	x9, sp
00000000000142cc	str	x9, [x21, #0x110]
00000000000142d0	mov	x9, #0x400000000
00000000000142d4	stp	x8, x9, [sp, #0x8]
00000000000142d8	adr	x8, #0x6e56b
00000000000142dc	nop
00000000000142e0	ldarb	w8, [x8]
00000000000142e4	tbz	w8, #0x0, 0x142ec
00000000000142e8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000142ec	ldr	x8, [x20]
00000000000142f0	and	x8, x8, #0xfffffffffffffffc
00000000000142f4	ldr	x8, [x8]
00000000000142f8	ldr	x8, [x8, #0x88]
00000000000142fc	mov	x0, x20
0000000000014300	blr	x8
0000000000014304	tbz	w0, #0x0, 0x14350
0000000000014308	ldr	w1, [x20, #0x10]
000000000001430c	add	w8, w1, #0x1
0000000000014310	stp	w8, w1, [x20, #0x10]
0000000000014314	ldr	x0, [x20, #0x8]
0000000000014318	ldr	x8, [x0]
000000000001431c	and	x8, x8, #0xfffffffffffffffc
0000000000014320	ldr	x8, [x8]
0000000000014324	ldr	x8, [x8, #0x100]
0000000000014328	mov	x2, x19
000000000001432c	blr	x8
0000000000014330	str	x0, [x19]
0000000000014334	ldr	x8, [sp, #0x8]
0000000000014338	str	x8, [x21, #0x110]
000000000001433c	ldp	x29, x30, [sp, #0x40]
0000000000014340	ldp	x20, x19, [sp, #0x30]
0000000000014344	ldp	x22, x21, [sp, #0x20]
0000000000014348	add	sp, sp, #0x50
000000000001434c	ret
0000000000014350	ldr	x8, [x21, #0x118]
0000000000014354	add	x0, x8, #0x70
0000000000014358	mov	w1, #0x38
000000000001435c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000014360	mov	x19, x0
0000000000014364	adr	x8, #0x4073c
0000000000014368	nop
000000000001436c	str	x8, [x19, #0x10]!
0000000000014370	stur	xzr, [x19, #-0x8]
0000000000014374	str	x19, [sp, #0x18]
0000000000014378	mov	x0, x19
000000000001437c	mov	x1, #0x0
0000000000014380	bl	"_kfun:kotlin.Throwable#<init>(kotlin.String?;kotlin.Throwable?){}"
0000000000014384	mov	x0, x19
0000000000014388	bl	_ThrowException
_kfun:kotlin.collections.AbstractMutableList.IteratorImpl.remove#internal:
000000000001438c	sub	sp, sp, #0x50
0000000000014390	stp	x20, x19, [sp, #0x30]
0000000000014394	stp	x29, x30, [sp, #0x40]
0000000000014398	add	x29, sp, #0x40
000000000001439c	mov	x19, x0
00000000000143a0	movi.16b	v0, #0x0
00000000000143a4	stp	q0, q0, [sp]
00000000000143a8	str	xzr, [sp, #0x20]
00000000000143ac	adrp	x0, 84 ; 0x68000
00000000000143b0	add	x0, x0, #0xa00
00000000000143b4	ldr	x8, [x0]
00000000000143b8	blr	x8
00000000000143bc	ldr	x20, [x0]
00000000000143c0	ldr	x8, [x20, #0x110]
00000000000143c4	mov	x9, sp
00000000000143c8	str	x9, [x20, #0x110]
00000000000143cc	mov	x9, #0x500000000
00000000000143d0	stp	x8, x9, [sp, #0x8]
00000000000143d4	adr	x8, #0x6e46f
00000000000143d8	nop
00000000000143dc	ldarb	w8, [x8]
00000000000143e0	tbz	w8, #0x0, 0x143e8
00000000000143e4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000143e8	ldr	w1, [x19, #0x14]
00000000000143ec	cmn	w1, #0x1
00000000000143f0	b.eq	0x14438
00000000000143f4	mov	x8, sp
00000000000143f8	add	x2, x8, #0x20
00000000000143fc	ldr	x0, [x19, #0x8]
0000000000014400	ldr	x8, [x0]
0000000000014404	and	x8, x8, #0xfffffffffffffffc
0000000000014408	ldr	x8, [x8]
000000000001440c	ldr	x8, [x8, #0x128]
0000000000014410	blr	x8
0000000000014414	ldr	w8, [x19, #0x14]
0000000000014418	mov	w9, #-0x1
000000000001441c	stp	w8, w9, [x19, #0x10]
0000000000014420	ldr	x8, [sp, #0x8]
0000000000014424	str	x8, [x20, #0x110]
0000000000014428	ldp	x29, x30, [sp, #0x40]
000000000001442c	ldp	x20, x19, [sp, #0x30]
0000000000014430	add	sp, sp, #0x50
0000000000014434	ret
0000000000014438	ldr	x8, [x20, #0x118]
000000000001443c	add	x0, x8, #0x70
0000000000014440	mov	w1, #0x38
0000000000014444	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000014448	mov	x19, x0
000000000001444c	adr	x8, #0x408d4
0000000000014450	nop
0000000000014454	str	x8, [x19, #0x10]!
0000000000014458	stur	xzr, [x19, #-0x8]
000000000001445c	str	x19, [sp, #0x18]
0000000000014460	adr	x1, #0x4d5b0
0000000000014464	nop
0000000000014468	mov	x0, x19
000000000001446c	bl	"_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}"
0000000000014470	mov	x0, x19
0000000000014474	bl	_ThrowException
_kfun:kotlin.collections.AbstractMutableList.ListIteratorImpl.hasPrevious#internal:
0000000000014478	stp	x20, x19, [sp, #-0x20]!
000000000001447c	stp	x29, x30, [sp, #0x10]
0000000000014480	add	x29, sp, #0x10
0000000000014484	mov	x19, x0
0000000000014488	adr	x8, #0x6e3bb
000000000001448c	nop
0000000000014490	ldarb	w8, [x8]
0000000000014494	tbz	w8, #0x0, 0x1449c
0000000000014498	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001449c	ldr	w8, [x19, #0x10]
00000000000144a0	cmp	w8, #0x0
00000000000144a4	cset	w0, gt
00000000000144a8	ldp	x29, x30, [sp, #0x10]
00000000000144ac	ldp	x20, x19, [sp], #0x20
00000000000144b0	ret
_kfun:kotlin.collections.AbstractMutableList.ListIteratorImpl.nextIndex#internal:
00000000000144b4	stp	x20, x19, [sp, #-0x20]!
00000000000144b8	stp	x29, x30, [sp, #0x10]
00000000000144bc	add	x29, sp, #0x10
00000000000144c0	mov	x19, x0
00000000000144c4	adr	x8, #0x6e37f
00000000000144c8	nop
00000000000144cc	ldarb	w8, [x8]
00000000000144d0	tbz	w8, #0x0, 0x144d8
00000000000144d4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000144d8	ldr	w0, [x19, #0x10]
00000000000144dc	ldp	x29, x30, [sp, #0x10]
00000000000144e0	ldp	x20, x19, [sp], #0x20
00000000000144e4	ret
_kfun:kotlin.collections.AbstractMutableList.ListIteratorImpl.previous#internal:
00000000000144e8	sub	sp, sp, #0x50
00000000000144ec	stp	x22, x21, [sp, #0x20]
00000000000144f0	stp	x20, x19, [sp, #0x30]
00000000000144f4	stp	x29, x30, [sp, #0x40]
00000000000144f8	add	x29, sp, #0x40
00000000000144fc	mov	x19, x1
0000000000014500	mov	x20, x0
0000000000014504	movi.16b	v0, #0x0
0000000000014508	stp	q0, q0, [sp]
000000000001450c	adrp	x0, 84 ; 0x68000
0000000000014510	add	x0, x0, #0xa00
0000000000014514	ldr	x8, [x0]
0000000000014518	blr	x8
000000000001451c	ldr	x21, [x0]
0000000000014520	ldr	x8, [x21, #0x110]
0000000000014524	mov	x9, sp
0000000000014528	str	x9, [x21, #0x110]
000000000001452c	mov	x9, #0x400000000
0000000000014530	stp	x8, x9, [sp, #0x8]
0000000000014534	adr	x8, #0x6e30f
0000000000014538	nop
000000000001453c	ldarb	w8, [x8]
0000000000014540	tbz	w8, #0x0, 0x14548
0000000000014544	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000014548	ldr	w8, [x20, #0x10]
000000000001454c	cmp	w8, #0x0
0000000000014550	b.le	0x14598
0000000000014554	sub	w1, w8, #0x1
0000000000014558	stp	w1, w1, [x20, #0x10]
000000000001455c	ldr	x0, [x20, #0x18]
0000000000014560	ldr	x8, [x0]
0000000000014564	and	x8, x8, #0xfffffffffffffffc
0000000000014568	ldr	x8, [x8]
000000000001456c	ldr	x8, [x8, #0x100]
0000000000014570	mov	x2, x19
0000000000014574	blr	x8
0000000000014578	str	x0, [x19]
000000000001457c	ldr	x8, [sp, #0x8]
0000000000014580	str	x8, [x21, #0x110]
0000000000014584	ldp	x29, x30, [sp, #0x40]
0000000000014588	ldp	x20, x19, [sp, #0x30]
000000000001458c	ldp	x22, x21, [sp, #0x20]
0000000000014590	add	sp, sp, #0x50
0000000000014594	ret
0000000000014598	ldr	x8, [x21, #0x118]
000000000001459c	add	x0, x8, #0x70
00000000000145a0	mov	w1, #0x38
00000000000145a4	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000145a8	mov	x19, x0
00000000000145ac	adr	x8, #0x404f4
00000000000145b0	nop
00000000000145b4	str	x8, [x19, #0x10]!
00000000000145b8	stur	xzr, [x19, #-0x8]
00000000000145bc	str	x19, [sp, #0x18]
00000000000145c0	mov	x0, x19
00000000000145c4	mov	x1, #0x0
00000000000145c8	bl	"_kfun:kotlin.Throwable#<init>(kotlin.String?;kotlin.Throwable?){}"
00000000000145cc	mov	x0, x19
00000000000145d0	bl	_ThrowException
_kfun:kotlin.collections.AbstractMutableList.ListIteratorImpl.previousIndex#internal:
00000000000145d4	stp	x20, x19, [sp, #-0x20]!
00000000000145d8	stp	x29, x30, [sp, #0x10]
00000000000145dc	add	x29, sp, #0x10
00000000000145e0	mov	x19, x0
00000000000145e4	adr	x8, #0x6e25f
00000000000145e8	nop
00000000000145ec	ldarb	w8, [x8]
00000000000145f0	tbz	w8, #0x0, 0x145f8
00000000000145f4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000145f8	ldr	w8, [x19, #0x10]
00000000000145fc	sub	w0, w8, #0x1
0000000000014600	ldp	x29, x30, [sp, #0x10]
0000000000014604	ldp	x20, x19, [sp], #0x20
0000000000014608	ret
_kfun:kotlin.collections.AbstractMutableList.ListIteratorImpl.add#internal:
000000000001460c	stp	x20, x19, [sp, #-0x20]!
0000000000014610	stp	x29, x30, [sp, #0x10]
0000000000014614	add	x29, sp, #0x10
0000000000014618	mov	x20, x1
000000000001461c	mov	x19, x0
0000000000014620	adr	x8, #0x6e223
0000000000014624	nop
0000000000014628	ldarb	w8, [x8]
000000000001462c	tbz	w8, #0x0, 0x14634
0000000000014630	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000014634	ldr	x0, [x19, #0x18]
0000000000014638	ldr	w1, [x19, #0x10]
000000000001463c	ldr	x8, [x0]
0000000000014640	and	x8, x8, #0xfffffffffffffffc
0000000000014644	ldr	x8, [x8]
0000000000014648	ldr	x8, [x8, #0xf0]
000000000001464c	mov	x2, x20
0000000000014650	blr	x8
0000000000014654	ldr	w8, [x19, #0x10]
0000000000014658	add	w8, w8, #0x1
000000000001465c	mov	w9, #-0x1
0000000000014660	stp	w8, w9, [x19, #0x10]
0000000000014664	ldp	x29, x30, [sp, #0x10]
0000000000014668	ldp	x20, x19, [sp], #0x20
000000000001466c	ret
_kfun:kotlin.collections.AbstractMutableList.ListIteratorImpl.set#internal:
0000000000014670	sub	sp, sp, #0x60
0000000000014674	stp	x22, x21, [sp, #0x30]
0000000000014678	stp	x20, x19, [sp, #0x40]
000000000001467c	stp	x29, x30, [sp, #0x50]
0000000000014680	add	x29, sp, #0x50
0000000000014684	mov	x19, x1
0000000000014688	mov	x20, x0
000000000001468c	movi.16b	v0, #0x0
0000000000014690	stp	q0, q0, [sp]
0000000000014694	str	xzr, [sp, #0x20]
0000000000014698	adrp	x0, 84 ; 0x68000
000000000001469c	add	x0, x0, #0xa00
00000000000146a0	ldr	x8, [x0]
00000000000146a4	blr	x8
00000000000146a8	ldr	x21, [x0]
00000000000146ac	ldr	x8, [x21, #0x110]
00000000000146b0	mov	x9, sp
00000000000146b4	str	x9, [x21, #0x110]
00000000000146b8	mov	x9, #0x500000000
00000000000146bc	stp	x8, x9, [sp, #0x8]
00000000000146c0	adr	x8, #0x6e183
00000000000146c4	nop
00000000000146c8	ldarb	w8, [x8]
00000000000146cc	tbz	w8, #0x0, 0x146d4
00000000000146d0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000146d4	ldr	w1, [x20, #0x14]
00000000000146d8	cmn	w1, #0x1
00000000000146dc	b.eq	0x14720
00000000000146e0	mov	x8, sp
00000000000146e4	add	x3, x8, #0x20
00000000000146e8	ldr	x0, [x20, #0x18]
00000000000146ec	ldr	x8, [x0]
00000000000146f0	and	x8, x8, #0xfffffffffffffffc
00000000000146f4	ldr	x8, [x8]
00000000000146f8	ldr	x8, [x8, #0x138]
00000000000146fc	mov	x2, x19
0000000000014700	blr	x8
0000000000014704	ldr	x8, [sp, #0x8]
0000000000014708	str	x8, [x21, #0x110]
000000000001470c	ldp	x29, x30, [sp, #0x50]
0000000000014710	ldp	x20, x19, [sp, #0x40]
0000000000014714	ldp	x22, x21, [sp, #0x30]
0000000000014718	add	sp, sp, #0x60
000000000001471c	ret
0000000000014720	ldr	x8, [x21, #0x118]
0000000000014724	add	x0, x8, #0x70
0000000000014728	mov	w1, #0x38
000000000001472c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000014730	mov	x19, x0
0000000000014734	adr	x8, #0x405ec
0000000000014738	nop
000000000001473c	str	x8, [x19, #0x10]!
0000000000014740	stur	xzr, [x19, #-0x8]
0000000000014744	str	x19, [sp, #0x18]
0000000000014748	adr	x1, #0x4d368
000000000001474c	nop
0000000000014750	mov	x0, x19
0000000000014754	bl	"_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}"
0000000000014758	mov	x0, x19
000000000001475c	bl	_ThrowException
_kfun:kotlin.collections.AbstractMutableList.SubList.add#internal:
0000000000014760	stp	x22, x21, [sp, #-0x30]!
0000000000014764	stp	x20, x19, [sp, #0x10]
0000000000014768	stp	x29, x30, [sp, #0x20]
000000000001476c	add	x29, sp, #0x20
0000000000014770	mov	x20, x2
0000000000014774	mov	x21, x1
0000000000014778	mov	x19, x0
000000000001477c	adr	x8, #0x6e0c7
0000000000014780	nop
0000000000014784	ldarb	w8, [x8]
0000000000014788	tbz	w8, #0x0, 0x14790
000000000001478c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000014790	ldr	w1, [x19, #0x1c]
0000000000014794	mov	x0, x21
0000000000014798	bl	"_kfun:kotlin.collections.AbstractList.Companion#checkPositionIndex(kotlin.Int;kotlin.Int){}"
000000000001479c	ldr	x0, [x19, #0x10]
00000000000147a0	ldr	w8, [x19, #0x18]
00000000000147a4	add	w1, w8, w21
00000000000147a8	ldr	x8, [x0]
00000000000147ac	and	x8, x8, #0xfffffffffffffffc
00000000000147b0	ldr	x8, [x8]
00000000000147b4	ldr	x8, [x8, #0xf0]
00000000000147b8	mov	x2, x20
00000000000147bc	blr	x8
00000000000147c0	ldr	w8, [x19, #0x1c]
00000000000147c4	add	w8, w8, #0x1
00000000000147c8	str	w8, [x19, #0x1c]
00000000000147cc	ldp	x29, x30, [sp, #0x20]
00000000000147d0	ldp	x20, x19, [sp, #0x10]
00000000000147d4	ldp	x22, x21, [sp], #0x30
00000000000147d8	ret
_kfun:kotlin.collections.AbstractMutableList.SubList.get#internal:
00000000000147dc	stp	x22, x21, [sp, #-0x30]!
00000000000147e0	stp	x20, x19, [sp, #0x10]
00000000000147e4	stp	x29, x30, [sp, #0x20]
00000000000147e8	add	x29, sp, #0x20
00000000000147ec	mov	x19, x2
00000000000147f0	mov	x20, x1
00000000000147f4	mov	x21, x0
00000000000147f8	adr	x8, #0x6e04b
00000000000147fc	nop
0000000000014800	ldarb	w8, [x8]
0000000000014804	tbz	w8, #0x0, 0x1480c
0000000000014808	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001480c	ldr	w1, [x21, #0x1c]
0000000000014810	mov	x0, x20
0000000000014814	bl	"_kfun:kotlin.collections.AbstractList.Companion#checkElementIndex(kotlin.Int;kotlin.Int){}"
0000000000014818	ldr	x0, [x21, #0x10]
000000000001481c	ldr	w8, [x21, #0x18]
0000000000014820	add	w1, w8, w20
0000000000014824	ldr	x8, [x0]
0000000000014828	and	x8, x8, #0xfffffffffffffffc
000000000001482c	ldr	x8, [x8]
0000000000014830	ldr	x8, [x8, #0x100]
0000000000014834	mov	x2, x19
0000000000014838	blr	x8
000000000001483c	str	x0, [x19]
0000000000014840	ldp	x29, x30, [sp, #0x20]
0000000000014844	ldp	x20, x19, [sp, #0x10]
0000000000014848	ldp	x22, x21, [sp], #0x30
000000000001484c	ret
_kfun:kotlin.collections.AbstractMutableList.SubList.removeAt#internal:
0000000000014850	sub	sp, sp, #0x60
0000000000014854	stp	x24, x23, [sp, #0x20]
0000000000014858	stp	x22, x21, [sp, #0x30]
000000000001485c	stp	x20, x19, [sp, #0x40]
0000000000014860	stp	x29, x30, [sp, #0x50]
0000000000014864	add	x29, sp, #0x50
0000000000014868	mov	x19, x2
000000000001486c	mov	x22, x1
0000000000014870	mov	x20, x0
0000000000014874	movi.16b	v0, #0x0
0000000000014878	stp	q0, q0, [sp]
000000000001487c	mov	x8, sp
0000000000014880	add	x21, x8, #0x18
0000000000014884	adrp	x0, 84 ; 0x68000
0000000000014888	add	x0, x0, #0xa00
000000000001488c	ldr	x9, [x0]
0000000000014890	blr	x9
0000000000014894	ldr	x23, [x0]
0000000000014898	ldr	x9, [x23, #0x110]
000000000001489c	str	x8, [x23, #0x110]
00000000000148a0	mov	x8, #0x400000000
00000000000148a4	stp	x9, x8, [sp, #0x8]
00000000000148a8	adr	x8, #0x6df9b
00000000000148ac	nop
00000000000148b0	ldarb	w8, [x8]
00000000000148b4	tbz	w8, #0x0, 0x148bc
00000000000148b8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000148bc	ldr	w1, [x20, #0x1c]
00000000000148c0	mov	x0, x22
00000000000148c4	bl	"_kfun:kotlin.collections.AbstractList.Companion#checkElementIndex(kotlin.Int;kotlin.Int){}"
00000000000148c8	ldr	x0, [x20, #0x10]
00000000000148cc	ldr	w8, [x20, #0x18]
00000000000148d0	add	w1, w8, w22
00000000000148d4	ldr	x8, [x0]
00000000000148d8	and	x8, x8, #0xfffffffffffffffc
00000000000148dc	ldr	x8, [x8]
00000000000148e0	ldr	x8, [x8, #0x128]
00000000000148e4	mov	x2, x21
00000000000148e8	blr	x8
00000000000148ec	ldr	w8, [x20, #0x1c]
00000000000148f0	sub	w8, w8, #0x1
00000000000148f4	str	w8, [x20, #0x1c]
00000000000148f8	str	x0, [x19]
00000000000148fc	ldr	x8, [sp, #0x8]
0000000000014900	str	x8, [x23, #0x110]
0000000000014904	ldp	x29, x30, [sp, #0x50]
0000000000014908	ldp	x20, x19, [sp, #0x40]
000000000001490c	ldp	x22, x21, [sp, #0x30]
0000000000014910	ldp	x24, x23, [sp, #0x20]
0000000000014914	add	sp, sp, #0x60
0000000000014918	ret
_kfun:kotlin.collections.AbstractMutableList.SubList.set#internal:
000000000001491c	stp	x22, x21, [sp, #-0x30]!
0000000000014920	stp	x20, x19, [sp, #0x10]
0000000000014924	stp	x29, x30, [sp, #0x20]
0000000000014928	add	x29, sp, #0x20
000000000001492c	mov	x19, x3
0000000000014930	mov	x20, x2
0000000000014934	mov	x21, x1
0000000000014938	mov	x22, x0
000000000001493c	adr	x8, #0x6df07
0000000000014940	nop
0000000000014944	ldarb	w8, [x8]
0000000000014948	tbz	w8, #0x0, 0x14950
000000000001494c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000014950	ldr	w1, [x22, #0x1c]
0000000000014954	mov	x0, x21
0000000000014958	bl	"_kfun:kotlin.collections.AbstractList.Companion#checkElementIndex(kotlin.Int;kotlin.Int){}"
000000000001495c	ldr	x0, [x22, #0x10]
0000000000014960	ldr	w8, [x22, #0x18]
0000000000014964	add	w1, w8, w21
0000000000014968	ldr	x8, [x0]
000000000001496c	and	x8, x8, #0xfffffffffffffffc
0000000000014970	ldr	x8, [x8]
0000000000014974	ldr	x8, [x8, #0x138]
0000000000014978	mov	x2, x20
000000000001497c	mov	x3, x19
0000000000014980	blr	x8
0000000000014984	str	x0, [x19]
0000000000014988	ldp	x29, x30, [sp, #0x20]
000000000001498c	ldp	x20, x19, [sp, #0x10]
0000000000014990	ldp	x22, x21, [sp], #0x30
0000000000014994	ret
_kfun:kotlin.collections.AbstractMutableList.SubList.<get-size>#internal:
0000000000014998	stp	x20, x19, [sp, #-0x20]!
000000000001499c	stp	x29, x30, [sp, #0x10]
00000000000149a0	add	x29, sp, #0x10
00000000000149a4	mov	x19, x0
00000000000149a8	adr	x8, #0x6de9b
00000000000149ac	nop
00000000000149b0	ldarb	w8, [x8]
00000000000149b4	tbz	w8, #0x0, 0x149bc
00000000000149b8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000149bc	ldr	w0, [x19, #0x1c]
00000000000149c0	ldp	x29, x30, [sp, #0x10]
00000000000149c4	ldp	x20, x19, [sp], #0x20
00000000000149c8	ret
_kfun:kotlin.collections.AbstractMutableList.$removeAll$lambda$0$FUNCTION_REFERENCE$15.$<bridge-BNNN>invoke(2:0){}kotlin.Boolean#internal:
00000000000149cc	stp	x22, x21, [sp, #-0x30]!
00000000000149d0	stp	x20, x19, [sp, #0x10]
00000000000149d4	stp	x29, x30, [sp, #0x20]
00000000000149d8	add	x29, sp, #0x20
00000000000149dc	mov	x19, x2
00000000000149e0	mov	x20, x1
00000000000149e4	mov	x21, x0
00000000000149e8	adr	x8, #0x6de5b
00000000000149ec	nop
00000000000149f0	ldarb	w8, [x8]
00000000000149f4	tbz	w8, #0x0, 0x149fc
00000000000149f8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000149fc	ldr	x0, [x21, #0x8]
0000000000014a00	ldr	x8, [x0]
0000000000014a04	and	x8, x8, #0xfffffffffffffffc
0000000000014a08	ldr	x8, [x8]
0000000000014a0c	ldr	w9, [x8, #0x3c]
0000000000014a10	ldr	x8, [x8, #0x40]
0000000000014a14	tbnz	w9, #0x1f, 0x14a24
0000000000014a18	mov	w10, #0x12
0000000000014a1c	and	x9, x9, x10
0000000000014a20	b	0x14aa8
0000000000014a24	neg	w10, w9
0000000000014a28	mvn	w9, w9
0000000000014a2c	cmp	w10, #0x9
0000000000014a30	b.ge	0x14a68
0000000000014a34	cmp	w10, #0x2
0000000000014a38	b.lt	0x14a9c
0000000000014a3c	mov	x10, #0x0
0000000000014a40	mov	x11, x8
0000000000014a44	ldr	w12, [x11]
0000000000014a48	cmp	w12, #0x11
0000000000014a4c	b.gt	0x14aa4
0000000000014a50	add	x10, x10, #0x1
0000000000014a54	add	x11, x11, #0x10
0000000000014a58	cmp	x9, x10
0000000000014a5c	b.ne	0x14a44
0000000000014a60	mov	x10, x9
0000000000014a64	b	0x14aa4
0000000000014a68	mov	w10, #0x0
0000000000014a6c	add	w11, w9, w10
0000000000014a70	cmp	w11, #0x0
0000000000014a74	cinc	w11, w11, lt
0000000000014a78	asr	w11, w11, #1
0000000000014a7c	sbfiz	x12, x11, #4, #32
0000000000014a80	ldr	w12, [x8, x12]
0000000000014a84	cmp	w12, #0x12
0000000000014a88	csinc	w10, w10, w11, ge
0000000000014a8c	csel	w9, w9, w11, lt
0000000000014a90	cmp	w10, w9
0000000000014a94	b.lt	0x14a6c
0000000000014a98	b	0x14aa4
0000000000014a9c	mov	w10, #0x0
0000000000014aa0	b	0x14aa4
0000000000014aa4	sxtw	x9, w10
0000000000014aa8	add	x8, x8, x9, lsl #4
0000000000014aac	ldr	x8, [x8, #0x8]
0000000000014ab0	ldr	x8, [x8, #0x8]
0000000000014ab4	mov	x1, x20
0000000000014ab8	blr	x8
0000000000014abc	mov	x1, x19
0000000000014ac0	bl	"_kfun:kotlin#<Boolean-box>(kotlin.Boolean){}kotlin.Any"
0000000000014ac4	str	x0, [x19]
0000000000014ac8	ldp	x29, x30, [sp, #0x20]
0000000000014acc	ldp	x20, x19, [sp, #0x10]
0000000000014ad0	ldp	x22, x21, [sp], #0x30
0000000000014ad4	ret
_kfun:kotlin.collections.AbstractMutableList.$retainAll$lambda$1$FUNCTION_REFERENCE$16.$<bridge-BNNN>invoke(2:0){}kotlin.Boolean#internal:
0000000000014ad8	stp	x22, x21, [sp, #-0x30]!
0000000000014adc	stp	x20, x19, [sp, #0x10]
0000000000014ae0	stp	x29, x30, [sp, #0x20]
0000000000014ae4	add	x29, sp, #0x20
0000000000014ae8	mov	x19, x2
0000000000014aec	mov	x20, x1
0000000000014af0	mov	x21, x0
0000000000014af4	adr	x8, #0x6dd4f
0000000000014af8	nop
0000000000014afc	ldarb	w8, [x8]
0000000000014b00	tbz	w8, #0x0, 0x14b08
0000000000014b04	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000014b08	ldr	x0, [x21, #0x8]
0000000000014b0c	ldr	x8, [x0]
0000000000014b10	and	x8, x8, #0xfffffffffffffffc
0000000000014b14	ldr	x8, [x8]
0000000000014b18	ldr	w9, [x8, #0x3c]
0000000000014b1c	ldr	x8, [x8, #0x40]
0000000000014b20	tbnz	w9, #0x1f, 0x14b30
0000000000014b24	mov	w10, #0x12
0000000000014b28	and	x9, x9, x10
0000000000014b2c	b	0x14bb4
0000000000014b30	neg	w10, w9
0000000000014b34	mvn	w9, w9
0000000000014b38	cmp	w10, #0x9
0000000000014b3c	b.ge	0x14b74
0000000000014b40	cmp	w10, #0x2
0000000000014b44	b.lt	0x14ba8
0000000000014b48	mov	x10, #0x0
0000000000014b4c	mov	x11, x8
0000000000014b50	ldr	w12, [x11]
0000000000014b54	cmp	w12, #0x11
0000000000014b58	b.gt	0x14bb0
0000000000014b5c	add	x10, x10, #0x1
0000000000014b60	add	x11, x11, #0x10
0000000000014b64	cmp	x9, x10
0000000000014b68	b.ne	0x14b50
0000000000014b6c	mov	x10, x9
0000000000014b70	b	0x14bb0
0000000000014b74	mov	w10, #0x0
0000000000014b78	add	w11, w9, w10
0000000000014b7c	cmp	w11, #0x0
0000000000014b80	cinc	w11, w11, lt
0000000000014b84	asr	w11, w11, #1
0000000000014b88	sbfiz	x12, x11, #4, #32
0000000000014b8c	ldr	w12, [x8, x12]
0000000000014b90	cmp	w12, #0x12
0000000000014b94	csinc	w10, w10, w11, ge
0000000000014b98	csel	w9, w9, w11, lt
0000000000014b9c	cmp	w10, w9
0000000000014ba0	b.lt	0x14b78
0000000000014ba4	b	0x14bb0
0000000000014ba8	mov	w10, #0x0
0000000000014bac	b	0x14bb0
0000000000014bb0	sxtw	x9, w10
0000000000014bb4	add	x8, x8, x9, lsl #4
0000000000014bb8	ldr	x8, [x8, #0x8]
0000000000014bbc	ldr	x8, [x8, #0x8]
0000000000014bc0	mov	x1, x20
0000000000014bc4	blr	x8
0000000000014bc8	eor	w0, w0, #0x1
0000000000014bcc	mov	x1, x19
0000000000014bd0	bl	"_kfun:kotlin#<Boolean-box>(kotlin.Boolean){}kotlin.Any"
0000000000014bd4	str	x0, [x19]
0000000000014bd8	ldp	x29, x30, [sp, #0x20]
0000000000014bdc	ldp	x20, x19, [sp, #0x10]
0000000000014be0	ldp	x22, x21, [sp], #0x30
0000000000014be4	ret
_kfun:kotlin.collections.AbstractMutableSet#equals(kotlin.Any?){}kotlin.Boolean:
0000000000014be8	stp	x20, x19, [sp, #-0x20]!
0000000000014bec	stp	x29, x30, [sp, #0x10]
0000000000014bf0	add	x29, sp, #0x10
0000000000014bf4	mov	x19, x1
0000000000014bf8	mov	x20, x0
0000000000014bfc	adr	x8, #0x6dc47
0000000000014c00	nop
0000000000014c04	ldarb	w8, [x8]
0000000000014c08	tbz	w8, #0x0, 0x14c10
0000000000014c0c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000014c10	cmp	x19, x20
0000000000014c14	b.eq	0x14c4c
0000000000014c18	cbz	x19, 0x14d00
0000000000014c1c	ldr	x8, [x19]
0000000000014c20	and	x8, x8, #0xfffffffffffffffc
0000000000014c24	ldr	x8, [x8]
0000000000014c28	ldr	w9, [x8, #0x3c]
0000000000014c2c	ldr	x8, [x8, #0x40]
0000000000014c30	tbnz	w9, #0x1f, 0x14c5c
0000000000014c34	and	x9, x9, #0x1e
0000000000014c38	lsl	x9, x9, #4
0000000000014c3c	ldr	w8, [x8, x9]
0000000000014c40	cmp	w8, #0x1e
0000000000014c44	b.ne	0x14d00
0000000000014c48	b	0x14d24
0000000000014c4c	mov	w0, #0x1
0000000000014c50	ldp	x29, x30, [sp, #0x10]
0000000000014c54	ldp	x20, x19, [sp], #0x20
0000000000014c58	ret
0000000000014c5c	neg	w10, w9
0000000000014c60	mvn	w9, w9
0000000000014c64	cmp	w10, #0x9
0000000000014c68	b.ge	0x14cb4
0000000000014c6c	cmp	w10, #0x2
0000000000014c70	b.lt	0x14ce8
0000000000014c74	mov	x10, #0x0
0000000000014c78	mov	x11, x8
0000000000014c7c	ldr	w12, [x11]
0000000000014c80	cmp	w12, #0x1d
0000000000014c84	b.gt	0x14d10
0000000000014c88	add	x10, x10, #0x1
0000000000014c8c	add	x11, x11, #0x10
0000000000014c90	cmp	x9, x10
0000000000014c94	b.ne	0x14c7c
0000000000014c98	mov	x10, x9
0000000000014c9c	sxtw	x9, w10
0000000000014ca0	lsl	x9, x9, #4
0000000000014ca4	ldr	w8, [x8, x9]
0000000000014ca8	cmp	w8, #0x1e
0000000000014cac	b.ne	0x14d00
0000000000014cb0	b	0x14d24
0000000000014cb4	mov	w10, #0x0
0000000000014cb8	add	w11, w9, w10
0000000000014cbc	cmp	w11, #0x0
0000000000014cc0	cinc	w11, w11, lt
0000000000014cc4	asr	w11, w11, #1
0000000000014cc8	sbfiz	x12, x11, #4, #32
0000000000014ccc	ldr	w12, [x8, x12]
0000000000014cd0	cmp	w12, #0x1e
0000000000014cd4	csinc	w10, w10, w11, ge
0000000000014cd8	csel	w9, w9, w11, lt
0000000000014cdc	cmp	w10, w9
0000000000014ce0	b.lt	0x14cb8
0000000000014ce4	b	0x14d10
0000000000014ce8	mov	w10, #0x0
0000000000014cec	sxtw	x9, w10
0000000000014cf0	lsl	x9, x9, #4
0000000000014cf4	ldr	w8, [x8, x9]
0000000000014cf8	cmp	w8, #0x1e
0000000000014cfc	b.eq	0x14d24
0000000000014d00	mov	w0, #0x0
0000000000014d04	ldp	x29, x30, [sp, #0x10]
0000000000014d08	ldp	x20, x19, [sp], #0x20
0000000000014d0c	ret
0000000000014d10	sxtw	x9, w10
0000000000014d14	lsl	x9, x9, #4
0000000000014d18	ldr	w8, [x8, x9]
0000000000014d1c	cmp	w8, #0x1e
0000000000014d20	b.ne	0x14d00
0000000000014d24	mov	x0, x20
0000000000014d28	mov	x1, x19
0000000000014d2c	ldp	x29, x30, [sp, #0x10]
0000000000014d30	ldp	x20, x19, [sp], #0x20
0000000000014d34	b	"_kfun:kotlin.collections.AbstractSet.Companion#setEquals(kotlin.collections.Set<*>;kotlin.collections.Set<*>){}kotlin.Boolean"
_kfun:kotlin.collections.AbstractMutableSet#hashCode(){}kotlin.Int:
0000000000014d38	stp	x20, x19, [sp, #-0x20]!
0000000000014d3c	stp	x29, x30, [sp, #0x10]
0000000000014d40	add	x29, sp, #0x10
0000000000014d44	mov	x19, x0
0000000000014d48	adr	x8, #0x6dafb
0000000000014d4c	nop
0000000000014d50	ldarb	w8, [x8]
0000000000014d54	tbz	w8, #0x0, 0x14d5c
0000000000014d58	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000014d5c	mov	x0, x19
0000000000014d60	ldp	x29, x30, [sp, #0x10]
0000000000014d64	ldp	x20, x19, [sp], #0x20
0000000000014d68	b	"_kfun:kotlin.collections.AbstractSet.Companion#unorderedHashCode(kotlin.collections.Collection<*>){}kotlin.Int"
_kfun:kotlin.collections#copyToArrayImpl(kotlin.collections.Collection<*>){}kotlin.Array<kotlin.Any?>:
0000000000014d6c	sub	sp, sp, #0xa0
0000000000014d70	stp	x28, x27, [sp, #0x40]
0000000000014d74	stp	x26, x25, [sp, #0x50]
0000000000014d78	stp	x24, x23, [sp, #0x60]
0000000000014d7c	stp	x22, x21, [sp, #0x70]
0000000000014d80	stp	x20, x19, [sp, #0x80]
0000000000014d84	stp	x29, x30, [sp, #0x90]
0000000000014d88	add	x29, sp, #0x90
0000000000014d8c	mov	x19, x1
0000000000014d90	mov	x23, x0
0000000000014d94	movi.16b	v0, #0x0
0000000000014d98	stp	q0, q0, [sp]
0000000000014d9c	str	xzr, [sp, #0x30]
0000000000014da0	str	q0, [sp, #0x20]
0000000000014da4	mov	x21, sp
0000000000014da8	adrp	x0, 84 ; 0x68000
0000000000014dac	add	x0, x0, #0xa00
0000000000014db0	ldr	x8, [x0]
0000000000014db4	blr	x8
0000000000014db8	ldr	x26, [x0]
0000000000014dbc	ldr	x8, [x26, #0x110]
0000000000014dc0	str	x21, [x26, #0x110]
0000000000014dc4	mov	x9, #0x700000000
0000000000014dc8	stp	x8, x9, [sp, #0x8]
0000000000014dcc	adr	x27, #0x6da77
0000000000014dd0	nop
0000000000014dd4	ldarb	w8, [x27]
0000000000014dd8	tbz	w8, #0x0, 0x14de0
0000000000014ddc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000014de0	ldr	x8, [x23]
0000000000014de4	and	x8, x8, #0xfffffffffffffffc
0000000000014de8	ldr	x8, [x8]
0000000000014dec	ldr	w9, [x8, #0x3c]
0000000000014df0	ldr	x8, [x8, #0x40]
0000000000014df4	tbnz	w9, #0x1f, 0x14e88
0000000000014df8	mov	w10, #0x12
0000000000014dfc	and	x9, x9, x10
0000000000014e00	add	x8, x8, x9, lsl #4
0000000000014e04	ldr	x8, [x8, #0x8]
0000000000014e08	ldr	x8, [x8]
0000000000014e0c	mov	x0, x23
0000000000014e10	blr	x8
0000000000014e14	tbnz	w0, #0x1f, 0x14fa4
0000000000014e18	mov	x25, x0
0000000000014e1c	add	x20, x21, #0x30
0000000000014e20	add	x24, x21, #0x28
0000000000014e24	ldr	x8, [x26, #0x118]
0000000000014e28	mov	w9, w0
0000000000014e2c	lsl	x9, x9, #3
0000000000014e30	add	x9, x9, #0x1f
0000000000014e34	and	x1, x9, #0xffffffff8
0000000000014e38	add	x0, x8, #0x70
0000000000014e3c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000014e40	mov	x22, x0
0000000000014e44	adr	x8, #0x3f79c
0000000000014e48	nop
0000000000014e4c	mov	x21, x0
0000000000014e50	str	x8, [x21, #0x10]!
0000000000014e54	str	xzr, [x0, #0x18]
0000000000014e58	str	xzr, [x0, #0x8]
0000000000014e5c	str	w25, [x0, #0x18]
0000000000014e60	str	x21, [sp, #0x20]
0000000000014e64	ldr	x8, [x23]
0000000000014e68	and	x8, x8, #0xfffffffffffffffc
0000000000014e6c	ldr	x8, [x8]
0000000000014e70	ldr	w9, [x8, #0x3c]
0000000000014e74	ldr	x8, [x8, #0x40]
0000000000014e78	tbnz	w9, #0x1f, 0x14ecc
0000000000014e7c	mov	w10, #0x12
0000000000014e80	and	x9, x9, x10
0000000000014e84	b	0x14fe8
0000000000014e88	neg	w10, w9
0000000000014e8c	mvn	w9, w9
0000000000014e90	cmp	w10, #0x9
0000000000014e94	b.ge	0x14f10
0000000000014e98	cmp	w10, #0x2
0000000000014e9c	b.lt	0x14f78
0000000000014ea0	mov	x10, #0x0
0000000000014ea4	mov	x11, x8
0000000000014ea8	ldr	w12, [x11]
0000000000014eac	cmp	w12, #0x11
0000000000014eb0	b.gt	0x14f88
0000000000014eb4	add	x10, x10, #0x1
0000000000014eb8	add	x11, x11, #0x10
0000000000014ebc	cmp	x9, x10
0000000000014ec0	b.ne	0x14ea8
0000000000014ec4	mov	x10, x9
0000000000014ec8	b	0x14f88
0000000000014ecc	neg	w10, w9
0000000000014ed0	mvn	w9, w9
0000000000014ed4	cmp	w10, #0x9
0000000000014ed8	b.ge	0x14f44
0000000000014edc	cmp	w10, #0x2
0000000000014ee0	b.lt	0x14f80
0000000000014ee4	mov	x10, #0x0
0000000000014ee8	mov	x11, x8
0000000000014eec	ldr	w12, [x11]
0000000000014ef0	cmp	w12, #0x11
0000000000014ef4	b.gt	0x14fe4
0000000000014ef8	add	x10, x10, #0x1
0000000000014efc	add	x11, x11, #0x10
0000000000014f00	cmp	x9, x10
0000000000014f04	b.ne	0x14eec
0000000000014f08	mov	x10, x9
0000000000014f0c	b	0x14fe4
0000000000014f10	mov	w10, #0x0
0000000000014f14	add	w11, w9, w10
0000000000014f18	cmp	w11, #0x0
0000000000014f1c	cinc	w11, w11, lt
0000000000014f20	asr	w11, w11, #1
0000000000014f24	sbfiz	x12, x11, #4, #32
0000000000014f28	ldr	w12, [x8, x12]
0000000000014f2c	cmp	w12, #0x12
0000000000014f30	csinc	w10, w10, w11, ge
0000000000014f34	csel	w9, w9, w11, lt
0000000000014f38	cmp	w10, w9
0000000000014f3c	b.lt	0x14f14
0000000000014f40	b	0x14f88
0000000000014f44	mov	w10, #0x0
0000000000014f48	add	w11, w9, w10
0000000000014f4c	cmp	w11, #0x0
0000000000014f50	cinc	w11, w11, lt
0000000000014f54	asr	w11, w11, #1
0000000000014f58	sbfiz	x12, x11, #4, #32
0000000000014f5c	ldr	w12, [x8, x12]
0000000000014f60	cmp	w12, #0x12
0000000000014f64	csinc	w10, w10, w11, ge
0000000000014f68	csel	w9, w9, w11, lt
0000000000014f6c	cmp	w10, w9
0000000000014f70	b.lt	0x14f48
0000000000014f74	b	0x14fe4
0000000000014f78	mov	w10, #0x0
0000000000014f7c	b	0x14f88
0000000000014f80	mov	w10, #0x0
0000000000014f84	b	0x14fe4
0000000000014f88	sxtw	x9, w10
0000000000014f8c	add	x8, x8, x9, lsl #4
0000000000014f90	ldr	x8, [x8, #0x8]
0000000000014f94	ldr	x8, [x8]
0000000000014f98	mov	x0, x23
0000000000014f9c	blr	x8
0000000000014fa0	tbz	w0, #0x1f, 0x14e18
0000000000014fa4	ldr	x8, [x26, #0x118]
0000000000014fa8	add	x0, x8, #0x70
0000000000014fac	mov	w1, #0x38
0000000000014fb0	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000014fb4	mov	x19, x0
0000000000014fb8	adr	x8, #0x3fcc8
0000000000014fbc	nop
0000000000014fc0	str	x8, [x19, #0x10]!
0000000000014fc4	stur	xzr, [x19, #-0x8]
0000000000014fc8	str	x19, [sp, #0x18]
0000000000014fcc	adr	x1, #0x4c174
0000000000014fd0	nop
0000000000014fd4	mov	x0, x19
0000000000014fd8	bl	"_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}"
0000000000014fdc	mov	x0, x19
0000000000014fe0	bl	_ThrowException
0000000000014fe4	sxtw	x9, w10
0000000000014fe8	add	x8, x8, x9, lsl #4
0000000000014fec	ldr	x8, [x8, #0x8]
0000000000014ff0	ldr	x8, [x8, #0x20]
0000000000014ff4	mov	x0, x23
0000000000014ff8	mov	x1, x24
0000000000014ffc	blr	x8
0000000000015000	mov	x23, x0
0000000000015004	mov	w24, #0x0
0000000000015008	add	x25, x22, #0x20
000000000001500c	mov	w28, #0xa0
0000000000015010	ldr	x8, [x23]
0000000000015014	and	x8, x8, #0xfffffffffffffffc
0000000000015018	ldr	x8, [x8]
000000000001501c	ldr	w9, [x8, #0x3c]
0000000000015020	ldr	x8, [x8, #0x40]
0000000000015024	tbz	w9, #0x1f, 0x151c4
0000000000015028	b	0x15124
000000000001502c	ldarb	w8, [x27]
0000000000015030	tbz	w8, #0x0, 0x15038
0000000000015034	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000015038	ldr	x8, [x23]
000000000001503c	and	x8, x8, #0xfffffffffffffffc
0000000000015040	ldr	x8, [x8]
0000000000015044	ldr	w9, [x8, #0x3c]
0000000000015048	ldr	x8, [x8, #0x40]
000000000001504c	tbnz	w9, #0x1f, 0x15058
0000000000015050	and	x9, x9, x28
0000000000015054	b	0x150dc
0000000000015058	neg	w10, w9
000000000001505c	mvn	w9, w9
0000000000015060	cmp	w10, #0x9
0000000000015064	b.ge	0x1509c
0000000000015068	cmp	w10, #0x2
000000000001506c	b.lt	0x150d0
0000000000015070	mov	x10, #0x0
0000000000015074	mov	x11, x8
0000000000015078	ldr	w12, [x11]
000000000001507c	cmp	w12, #0x9f
0000000000015080	b.gt	0x150d8
0000000000015084	add	x10, x10, #0x1
0000000000015088	add	x11, x11, #0x10
000000000001508c	cmp	x9, x10
0000000000015090	b.ne	0x15078
0000000000015094	mov	x10, x9
0000000000015098	b	0x150d8
000000000001509c	mov	w10, #0x0
00000000000150a0	add	w11, w9, w10
00000000000150a4	cmp	w11, #0x0
00000000000150a8	cinc	w11, w11, lt
00000000000150ac	asr	w11, w11, #1
00000000000150b0	sbfiz	x12, x11, #4, #32
00000000000150b4	ldr	w12, [x8, x12]
00000000000150b8	cmp	w12, #0xa0
00000000000150bc	csinc	w10, w10, w11, ge
00000000000150c0	csel	w9, w9, w11, lt
00000000000150c4	cmp	w10, w9
00000000000150c8	b.lt	0x150a0
00000000000150cc	b	0x150d8
00000000000150d0	mov	w10, #0x0
00000000000150d4	b	0x150d8
00000000000150d8	sxtw	x9, w10
00000000000150dc	add	x8, x8, x9, lsl #4
00000000000150e0	ldr	x8, [x8, #0x8]
00000000000150e4	ldr	x8, [x8, #0x8]
00000000000150e8	mov	x0, x23
00000000000150ec	mov	x1, x20
00000000000150f0	blr	x8
00000000000150f4	ldr	w8, [x22, #0x18]
00000000000150f8	cmp	w8, w24
00000000000150fc	b.ls	0x15210
0000000000015100	ldr	xzr, [x21]
0000000000015104	str	x0, [x25, w24, sxtw #3]
0000000000015108	add	w24, w24, #0x1
000000000001510c	ldr	x8, [x23]
0000000000015110	and	x8, x8, #0xfffffffffffffffc
0000000000015114	ldr	x8, [x8]
0000000000015118	ldr	w9, [x8, #0x3c]
000000000001511c	ldr	x8, [x8, #0x40]
0000000000015120	tbz	w9, #0x1f, 0x151c4
0000000000015124	neg	w10, w9
0000000000015128	mvn	w9, w9
000000000001512c	cmp	w10, #0x9
0000000000015130	b.ge	0x15168
0000000000015134	cmp	w10, #0x2
0000000000015138	b.lt	0x1519c
000000000001513c	mov	x10, #0x0
0000000000015140	mov	x11, x8
0000000000015144	ldr	w12, [x11]
0000000000015148	cmp	w12, #0x9f
000000000001514c	b.gt	0x151a4
0000000000015150	add	x10, x10, #0x1
0000000000015154	add	x11, x11, #0x10
0000000000015158	cmp	x9, x10
000000000001515c	b.ne	0x15144
0000000000015160	mov	x10, x9
0000000000015164	b	0x151a4
0000000000015168	mov	w10, #0x0
000000000001516c	add	w11, w9, w10
0000000000015170	cmp	w11, #0x0
0000000000015174	cinc	w11, w11, lt
0000000000015178	asr	w11, w11, #1
000000000001517c	sbfiz	x12, x11, #4, #32
0000000000015180	ldr	w12, [x8, x12]
0000000000015184	cmp	w12, #0xa0
0000000000015188	csinc	w10, w10, w11, ge
000000000001518c	csel	w9, w9, w11, lt
0000000000015190	cmp	w10, w9
0000000000015194	b.lt	0x1516c
0000000000015198	b	0x151a4
000000000001519c	mov	w10, #0x0
00000000000151a0	b	0x151a4
00000000000151a4	sxtw	x9, w10
00000000000151a8	add	x8, x8, x9, lsl #4
00000000000151ac	ldr	x8, [x8, #0x8]
00000000000151b0	ldr	x8, [x8]
00000000000151b4	mov	x0, x23
00000000000151b8	blr	x8
00000000000151bc	tbnz	w0, #0x0, 0x1502c
00000000000151c0	b	0x151e0
00000000000151c4	and	x9, x9, x28
00000000000151c8	add	x8, x8, x9, lsl #4
00000000000151cc	ldr	x8, [x8, #0x8]
00000000000151d0	ldr	x8, [x8]
00000000000151d4	mov	x0, x23
00000000000151d8	blr	x8
00000000000151dc	tbnz	w0, #0x0, 0x1502c
00000000000151e0	str	x21, [x19]
00000000000151e4	ldr	x8, [sp, #0x8]
00000000000151e8	str	x8, [x26, #0x110]
00000000000151ec	mov	x0, x21
00000000000151f0	ldp	x29, x30, [sp, #0x90]
00000000000151f4	ldp	x20, x19, [sp, #0x80]
00000000000151f8	ldp	x22, x21, [sp, #0x70]
00000000000151fc	ldp	x24, x23, [sp, #0x60]
0000000000015200	ldp	x26, x25, [sp, #0x50]
0000000000015204	ldp	x28, x27, [sp, #0x40]
0000000000015208	add	sp, sp, #0xa0
000000000001520c	ret
0000000000015210	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.collections#copyOfNulls__at__kotlin.Array<0:0>(kotlin.Int;kotlin.Int){0ยง<kotlin.Any?>}kotlin.Array<0:0?>:
0000000000015214	sub	sp, sp, #0xc0
0000000000015218	stp	x24, x23, [sp, #0x80]
000000000001521c	stp	x22, x21, [sp, #0x90]
0000000000015220	stp	x20, x19, [sp, #0xa0]
0000000000015224	stp	x29, x30, [sp, #0xb0]
0000000000015228	add	x29, sp, #0xb0
000000000001522c	mov	x20, x2
0000000000015230	mov	x19, x1
0000000000015234	mov	x21, x0
0000000000015238	movi.16b	v0, #0x0
000000000001523c	stp	q0, q0, [sp, #0x20]
0000000000015240	stp	q0, q0, [sp, #0x60]
0000000000015244	stp	q0, q0, [sp, #0x40]
0000000000015248	stp	xzr, xzr, [sp, #0x10]
000000000001524c	adr	x8, #0x43144
0000000000015250	nop
0000000000015254	orr	x8, x8, #0x3
0000000000015258	str	x8, [sp, #0x8]
000000000001525c	adrp	x0, 83 ; 0x68000
0000000000015260	add	x0, x0, #0xa00
0000000000015264	ldr	x8, [x0]
0000000000015268	blr	x8
000000000001526c	ldr	x23, [x0]
0000000000015270	ldr	x8, [x23, #0x110]
0000000000015274	add	x9, sp, #0x20
0000000000015278	str	x9, [x23, #0x110]
000000000001527c	mov	x9, #0xc00000000
0000000000015280	stp	x8, x9, [sp, #0x28]
0000000000015284	adr	x8, #0x6d5bf
0000000000015288	nop
000000000001528c	ldarb	w8, [x8]
0000000000015290	tbz	w8, #0x0, 0x15298
0000000000015294	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000015298	tbnz	w19, #0x1f, 0x1531c
000000000001529c	ldr	x8, [x23, #0x118]
00000000000152a0	mov	w9, w19
00000000000152a4	lsl	x9, x9, #3
00000000000152a8	add	x9, x9, #0x1f
00000000000152ac	and	x1, x9, #0xffffffff8
00000000000152b0	add	x0, x8, #0x70
00000000000152b4	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000152b8	mov	x22, x0
00000000000152bc	stp	xzr, xzr, [x22, #0x10]!
00000000000152c0	adr	x8, #0x3f320
00000000000152c4	nop
00000000000152c8	stp	xzr, x8, [x22, #-0x8]
00000000000152cc	str	w19, [x22, #0x8]
00000000000152d0	str	x22, [sp, #0x70]
00000000000152d4	ldr	w8, [x21, #0x8]
00000000000152d8	cmp	w8, w19
00000000000152dc	csel	w2, w8, w19, lt
00000000000152e0	add	x8, sp, #0x20
00000000000152e4	add	x3, x8, #0x58
00000000000152e8	mov	x0, x21
00000000000152ec	mov	x1, x22
00000000000152f0	bl	"_kfun:kotlin.collections#copyInto__at__kotlin.Array<out|0:0>(kotlin.Array<0:0>;kotlin.Int;kotlin.Int;kotlin.Int){0ยง<kotlin.Any?>}kotlin.Array<0:0>"
00000000000152f4	str	x22, [x20]
00000000000152f8	ldr	x8, [sp, #0x28]
00000000000152fc	str	x8, [x23, #0x110]
0000000000015300	mov	x0, x22
0000000000015304	ldp	x29, x30, [sp, #0xb0]
0000000000015308	ldp	x20, x19, [sp, #0xa0]
000000000001530c	ldp	x22, x21, [sp, #0x90]
0000000000015310	ldp	x24, x23, [sp, #0x80]
0000000000015314	add	sp, sp, #0xc0
0000000000015318	ret
000000000001531c	add	x8, sp, #0x20
0000000000015320	add	x20, x8, #0x38
0000000000015324	add	x21, x8, #0x30
0000000000015328	add	x22, x8, #0x28
000000000001532c	mov	x24, x23
0000000000015330	add	x23, x8, #0x20
0000000000015334	add	x8, sp, #0x8
0000000000015338	str	x8, [sp, #0x38]
000000000001533c	add	x0, sp, #0x8
0000000000015340	mov	w1, #0xa
0000000000015344	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
0000000000015348	add	x0, sp, #0x8
000000000001534c	mov	w1, #0x0
0000000000015350	mov	x2, x23
0000000000015354	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
0000000000015358	adr	x1, #0x4bdc8
000000000001535c	nop
0000000000015360	add	x0, sp, #0x8
0000000000015364	mov	x2, x22
0000000000015368	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000001536c	add	x0, sp, #0x8
0000000000015370	mov	x1, x19
0000000000015374	mov	x2, x21
0000000000015378	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
000000000001537c	add	x0, sp, #0x8
0000000000015380	mov	x1, x20
0000000000015384	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
0000000000015388	mov	x19, x0
000000000001538c	ldr	x8, [x24, #0x118]
0000000000015390	add	x0, x8, #0x70
0000000000015394	mov	w1, #0x38
0000000000015398	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001539c	mov	x20, x0
00000000000153a0	adr	x8, #0x3f8e0
00000000000153a4	nop
00000000000153a8	str	x8, [x20, #0x10]!
00000000000153ac	stur	xzr, [x20, #-0x8]
00000000000153b0	str	x20, [sp, #0x60]
00000000000153b4	mov	x0, x20
00000000000153b8	mov	x1, x19
00000000000153bc	bl	"_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}"
00000000000153c0	mov	x0, x20
00000000000153c4	bl	_ThrowException
_kfun:kotlin.collections.HashMap#<get-size>(){}kotlin.Int:
00000000000153c8	stp	x20, x19, [sp, #-0x20]!
00000000000153cc	stp	x29, x30, [sp, #0x10]
00000000000153d0	add	x29, sp, #0x10
00000000000153d4	mov	x19, x0
00000000000153d8	adr	x8, #0x6d46b
00000000000153dc	nop
00000000000153e0	ldarb	w8, [x8]
00000000000153e4	tbz	w8, #0x0, 0x153ec
00000000000153e8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000153ec	ldr	w0, [x19, #0x4c]
00000000000153f0	ldp	x29, x30, [sp, #0x10]
00000000000153f4	ldp	x20, x19, [sp], #0x20
00000000000153f8	ret
_kfun:kotlin.collections.HashMap#<init>(kotlin.Int){}:
00000000000153fc	sub	sp, sp, #0xa0
0000000000015400	stp	x24, x23, [sp, #0x60]
0000000000015404	stp	x22, x21, [sp, #0x70]
0000000000015408	stp	x20, x19, [sp, #0x80]
000000000001540c	stp	x29, x30, [sp, #0x90]
0000000000015410	add	x29, sp, #0x90
0000000000015414	mov	x20, x1
0000000000015418	mov	x19, x0
000000000001541c	movi.16b	v0, #0x0
0000000000015420	stp	q0, q0, [sp]
0000000000015424	str	xzr, [sp, #0x30]
0000000000015428	str	q0, [sp, #0x20]
000000000001542c	adrp	x0, 83 ; 0x68000
0000000000015430	add	x0, x0, #0xa00
0000000000015434	ldr	x8, [x0]
0000000000015438	blr	x8
000000000001543c	ldr	x23, [x0]
0000000000015440	ldr	x8, [x23, #0x110]
0000000000015444	mov	x9, sp
0000000000015448	str	x9, [x23, #0x110]
000000000001544c	mov	x9, #0x700000000
0000000000015450	stp	x8, x9, [sp, #0x8]
0000000000015454	adr	x8, #0x6d3ef
0000000000015458	nop
000000000001545c	ldarb	w8, [x8]
0000000000015460	tbz	w8, #0x0, 0x15468
0000000000015464	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000015468	tbnz	w20, #0x1f, 0x15578
000000000001546c	ldr	x8, [x23, #0x118]
0000000000015470	mov	w22, w20
0000000000015474	lsl	x9, x22, #3
0000000000015478	add	x9, x9, #0x1f
000000000001547c	and	x1, x9, #0xffffffff8
0000000000015480	add	x0, x8, #0x70
0000000000015484	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000015488	mov	x21, x0
000000000001548c	adr	x8, #0x3f154
0000000000015490	nop
0000000000015494	stp	x8, xzr, [x21, #0x10]!
0000000000015498	stur	xzr, [x21, #-0x8]
000000000001549c	str	w20, [x21, #0x8]
00000000000154a0	str	x21, [sp, #0x20]
00000000000154a4	ldr	x8, [x23, #0x118]
00000000000154a8	lsl	x9, x22, #2
00000000000154ac	add	x9, x9, #0x1f
00000000000154b0	and	x1, x9, #0x7fffffff8
00000000000154b4	add	x0, x8, #0x70
00000000000154b8	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000154bc	mov	x22, x0
00000000000154c0	adr	x24, #0x3f240
00000000000154c4	nop
00000000000154c8	stp	x24, xzr, [x22, #0x10]!
00000000000154cc	stur	xzr, [x22, #-0x8]
00000000000154d0	str	w20, [x22, #0x8]
00000000000154d4	str	x22, [sp, #0x28]
00000000000154d8	mov	x0, x20
00000000000154dc	bl	"_kfun:kotlin.collections.HashMap.Companion.computeHashSize#internal"
00000000000154e0	tbnz	w0, #0x1f, 0x155b8
00000000000154e4	mov	x20, x0
00000000000154e8	ldr	x8, [x23, #0x118]
00000000000154ec	mov	w9, w0
00000000000154f0	lsl	x9, x9, #2
00000000000154f4	add	x9, x9, #0x1f
00000000000154f8	and	x1, x9, #0x7fffffff8
00000000000154fc	add	x0, x8, #0x70
0000000000015500	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000015504	stp	x24, xzr, [x0, #0x10]!
0000000000015508	stur	xzr, [x0, #-0x8]
000000000001550c	str	w20, [x0, #0x8]
0000000000015510	str	x0, [sp, #0x30]
0000000000015514	stp	x21, xzr, [x19, #0x8]
0000000000015518	stp	x22, x0, [x19, #0x18]
000000000001551c	mov	w8, #0x2
0000000000015520	str	x8, [x19, #0x40]
0000000000015524	movi.16b	v0, #0x0
0000000000015528	stp	q0, q0, [sp, #0x40]
000000000001552c	ldr	x8, [x23, #0x110]
0000000000015530	add	x9, sp, #0x40
0000000000015534	str	x9, [x23, #0x110]
0000000000015538	ldr	x9, [x19, #0x20]
000000000001553c	ldr	w9, [x9, #0x8]
0000000000015540	str	x8, [x23, #0x110]
0000000000015544	clz	w8, w9
0000000000015548	cmp	w9, #0x0
000000000001554c	mov	w9, #0x21
0000000000015550	csinc	w8, w9, w8, eq
0000000000015554	str	w8, [x19, #0x48]
0000000000015558	ldr	x8, [sp, #0x8]
000000000001555c	str	x8, [x23, #0x110]
0000000000015560	ldp	x29, x30, [sp, #0x90]
0000000000015564	ldp	x20, x19, [sp, #0x80]
0000000000015568	ldp	x22, x21, [sp, #0x70]
000000000001556c	ldp	x24, x23, [sp, #0x60]
0000000000015570	add	sp, sp, #0xa0
0000000000015574	ret
0000000000015578	ldr	x8, [x23, #0x118]
000000000001557c	add	x0, x8, #0x70
0000000000015580	mov	w1, #0x38
0000000000015584	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000015588	mov	x19, x0
000000000001558c	adr	x8, #0x3f6f4
0000000000015590	nop
0000000000015594	str	x8, [x19, #0x10]!
0000000000015598	stur	xzr, [x19, #-0x8]
000000000001559c	str	x19, [sp, #0x18]
00000000000155a0	adr	x1, #0x4bba0
00000000000155a4	nop
00000000000155a8	mov	x0, x19
00000000000155ac	bl	"_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}"
00000000000155b0	mov	x0, x19
00000000000155b4	bl	_ThrowException
00000000000155b8	bl	_ThrowIllegalArgumentException
_kfun:kotlin.collections.HashMap#isEmpty(){}kotlin.Boolean:
00000000000155bc	stp	x20, x19, [sp, #-0x20]!
00000000000155c0	stp	x29, x30, [sp, #0x10]
00000000000155c4	add	x29, sp, #0x10
00000000000155c8	mov	x19, x0
00000000000155cc	adr	x8, #0x6d277
00000000000155d0	nop
00000000000155d4	ldarb	w8, [x8]
00000000000155d8	tbz	w8, #0x0, 0x155e0
00000000000155dc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000155e0	ldr	w8, [x19, #0x4c]
00000000000155e4	cmp	w8, #0x0
00000000000155e8	cset	w0, eq
00000000000155ec	ldp	x29, x30, [sp, #0x10]
00000000000155f0	ldp	x20, x19, [sp], #0x20
00000000000155f4	ret
_kfun:kotlin.collections.HashMap#containsKey(1:0){}kotlin.Boolean:
00000000000155f8	stp	x20, x19, [sp, #-0x20]!
00000000000155fc	stp	x29, x30, [sp, #0x10]
0000000000015600	add	x29, sp, #0x10
0000000000015604	mov	x19, x1
0000000000015608	mov	x20, x0
000000000001560c	adr	x8, #0x6d237
0000000000015610	nop
0000000000015614	ldarb	w8, [x8]
0000000000015618	tbz	w8, #0x0, 0x15620
000000000001561c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000015620	mov	x0, x20
0000000000015624	mov	x1, x19
0000000000015628	bl	"_kfun:kotlin.collections.HashMap.findKey#internal"
000000000001562c	mvn	w8, w0
0000000000015630	lsr	w0, w8, #31
0000000000015634	ldp	x29, x30, [sp, #0x10]
0000000000015638	ldp	x20, x19, [sp], #0x20
000000000001563c	ret
_kfun:kotlin.collections.HashMap#containsValue(1:1){}kotlin.Boolean:
0000000000015640	stp	x20, x19, [sp, #-0x20]!
0000000000015644	stp	x29, x30, [sp, #0x10]
0000000000015648	add	x29, sp, #0x10
000000000001564c	mov	x19, x1
0000000000015650	mov	x20, x0
0000000000015654	adr	x8, #0x6d1ef
0000000000015658	nop
000000000001565c	ldarb	w8, [x8]
0000000000015660	tbz	w8, #0x0, 0x15668
0000000000015664	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000015668	mov	x0, x20
000000000001566c	mov	x1, x19
0000000000015670	bl	"_kfun:kotlin.collections.HashMap.findValue#internal"
0000000000015674	mvn	w8, w0
0000000000015678	lsr	w0, w8, #31
000000000001567c	ldp	x29, x30, [sp, #0x10]
0000000000015680	ldp	x20, x19, [sp], #0x20
0000000000015684	ret
_kfun:kotlin.collections.HashMap#get(1:0){}1:1?:
0000000000015688	sub	sp, sp, #0x50
000000000001568c	stp	x22, x21, [sp, #0x20]
0000000000015690	stp	x20, x19, [sp, #0x30]
0000000000015694	stp	x29, x30, [sp, #0x40]
0000000000015698	add	x29, sp, #0x40
000000000001569c	mov	x19, x2
00000000000156a0	mov	x21, x1
00000000000156a4	mov	x20, x0
00000000000156a8	movi.16b	v0, #0x0
00000000000156ac	stp	q0, q0, [sp]
00000000000156b0	adrp	x0, 83 ; 0x68000
00000000000156b4	add	x0, x0, #0xa00
00000000000156b8	ldr	x8, [x0]
00000000000156bc	blr	x8
00000000000156c0	ldr	x22, [x0]
00000000000156c4	ldr	x8, [x22, #0x110]
00000000000156c8	mov	x9, sp
00000000000156cc	str	x9, [x22, #0x110]
00000000000156d0	mov	x9, #0x400000000
00000000000156d4	stp	x8, x9, [sp, #0x8]
00000000000156d8	adr	x8, #0x6d16b
00000000000156dc	nop
00000000000156e0	ldarb	w8, [x8]
00000000000156e4	tbz	w8, #0x0, 0x156ec
00000000000156e8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000156ec	mov	x0, x20
00000000000156f0	mov	x1, x21
00000000000156f4	bl	"_kfun:kotlin.collections.HashMap.findKey#internal"
00000000000156f8	tbnz	w0, #0x1f, 0x15724
00000000000156fc	ldr	x8, [x20, #0x10]
0000000000015700	str	x8, [sp, #0x18]
0000000000015704	cbz	x8, 0x15748
0000000000015708	ldr	w9, [x8, #0x8]
000000000001570c	cmp	w9, w0
0000000000015710	b.ls	0x1574c
0000000000015714	add	x8, x8, w0, sxtw #3
0000000000015718	ldr	x0, [x8, #0x10]
000000000001571c	str	x0, [x19]
0000000000015720	b	0x15728
0000000000015724	mov	x0, #0x0
0000000000015728	str	x0, [x19]
000000000001572c	ldr	x8, [sp, #0x8]
0000000000015730	str	x8, [x22, #0x110]
0000000000015734	ldp	x29, x30, [sp, #0x40]
0000000000015738	ldp	x20, x19, [sp, #0x30]
000000000001573c	ldp	x22, x21, [sp, #0x20]
0000000000015740	add	sp, sp, #0x50
0000000000015744	ret
0000000000015748	bl	_ThrowNullPointerException
000000000001574c	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.collections.HashMap#put(1:0;1:1){}1:1?:
0000000000015750	sub	sp, sp, #0x70
0000000000015754	stp	x24, x23, [sp, #0x30]
0000000000015758	stp	x22, x21, [sp, #0x40]
000000000001575c	stp	x20, x19, [sp, #0x50]
0000000000015760	stp	x29, x30, [sp, #0x60]
0000000000015764	add	x29, sp, #0x60
0000000000015768	mov	x19, x3
000000000001576c	mov	x20, x2
0000000000015770	mov	x22, x1
0000000000015774	mov	x21, x0
0000000000015778	movi.16b	v0, #0x0
000000000001577c	stp	q0, q0, [sp]
0000000000015780	str	xzr, [sp, #0x20]
0000000000015784	mov	x8, sp
0000000000015788	add	x23, x8, #0x18
000000000001578c	adrp	x0, 83 ; 0x68000
0000000000015790	add	x0, x0, #0xa00
0000000000015794	ldr	x9, [x0]
0000000000015798	blr	x9
000000000001579c	ldr	x24, [x0]
00000000000157a0	ldr	x9, [x24, #0x110]
00000000000157a4	str	x8, [x24, #0x110]
00000000000157a8	mov	x8, #0x500000000
00000000000157ac	stp	x9, x8, [sp, #0x8]
00000000000157b0	adr	x8, #0x6d093
00000000000157b4	nop
00000000000157b8	ldarb	w8, [x8]
00000000000157bc	tbz	w8, #0x0, 0x157c4
00000000000157c0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000157c4	mov	x0, x21
00000000000157c8	bl	"_kfun:kotlin.collections.HashMap#checkIsMutable(){}"
00000000000157cc	mov	x0, x21
00000000000157d0	mov	x1, x22
00000000000157d4	bl	"_kfun:kotlin.collections.HashMap#addKey(1:0){}kotlin.Int"
00000000000157d8	mov	x22, x0
00000000000157dc	mov	x0, x21
00000000000157e0	mov	x1, x23
00000000000157e4	bl	"_kfun:kotlin.collections.HashMap.allocateValuesArray#internal"
00000000000157e8	mov	x8, x0
00000000000157ec	tbnz	w22, #0x1f, 0x15810
00000000000157f0	ldr	w9, [x8, #0x8]
00000000000157f4	cmp	w9, w22
00000000000157f8	b.ls	0x15858
00000000000157fc	mov	x0, #0x0
0000000000015800	ldr	xzr, [x8]
0000000000015804	add	x8, x8, w22, sxtw #3
0000000000015808	add	x9, x8, #0x10
000000000001580c	b	0x15830
0000000000015810	mvn	w9, w22
0000000000015814	ldr	w10, [x8, #0x8]
0000000000015818	cmp	w10, w9
000000000001581c	b.ls	0x15858
0000000000015820	add	x9, x8, w9, sxtw #3
0000000000015824	ldr	x0, [x9, #0x10]!
0000000000015828	str	x0, [sp, #0x20]
000000000001582c	ldr	xzr, [x8]
0000000000015830	str	x20, [x9]
0000000000015834	str	x0, [x19]
0000000000015838	ldr	x8, [sp, #0x8]
000000000001583c	str	x8, [x24, #0x110]
0000000000015840	ldp	x29, x30, [sp, #0x60]
0000000000015844	ldp	x20, x19, [sp, #0x50]
0000000000015848	ldp	x22, x21, [sp, #0x40]
000000000001584c	ldp	x24, x23, [sp, #0x30]
0000000000015850	add	sp, sp, #0x70
0000000000015854	ret
0000000000015858	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.collections.HashMap#putAll(kotlin.collections.Map<out|1:0,1:1>){}:
000000000001585c	sub	sp, sp, #0x120
0000000000015860	stp	x28, x27, [sp, #0xc0]
0000000000015864	stp	x26, x25, [sp, #0xd0]
0000000000015868	stp	x24, x23, [sp, #0xe0]
000000000001586c	stp	x22, x21, [sp, #0xf0]
0000000000015870	stp	x20, x19, [sp, #0x100]
0000000000015874	stp	x29, x30, [sp, #0x110]
0000000000015878	add	x29, sp, #0x110
000000000001587c	mov	x20, x1
0000000000015880	mov	x19, x0
0000000000015884	movi.16b	v0, #0x0
0000000000015888	stp	q0, q0, [sp, #0x20]
000000000001588c	add	x8, sp, #0x20
0000000000015890	add	x21, x8, #0x18
0000000000015894	adrp	x0, 83 ; 0x68000
0000000000015898	add	x0, x0, #0xa00
000000000001589c	ldr	x9, [x0]
00000000000158a0	blr	x9
00000000000158a4	ldr	x25, [x0]
00000000000158a8	ldr	x9, [x25, #0x110]
00000000000158ac	str	x8, [x25, #0x110]
00000000000158b0	mov	x8, #0x400000000
00000000000158b4	stp	x9, x8, [sp, #0x28]
00000000000158b8	adr	x8, #0x6cf8b
00000000000158bc	nop
00000000000158c0	ldarb	w8, [x8]
00000000000158c4	tbz	w8, #0x0, 0x158cc
00000000000158c8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000158cc	mov	x0, x19
00000000000158d0	bl	"_kfun:kotlin.collections.HashMap#checkIsMutable(){}"
00000000000158d4	ldr	x8, [x20]
00000000000158d8	and	x8, x8, #0xfffffffffffffffc
00000000000158dc	ldr	x8, [x8]
00000000000158e0	ldr	w9, [x8, #0x3c]
00000000000158e4	ldr	x8, [x8, #0x40]
00000000000158e8	tbnz	w9, #0x1f, 0x158f8
00000000000158ec	mov	w10, #0x41
00000000000158f0	and	x9, x9, x10
00000000000158f4	b	0x1597c
00000000000158f8	neg	w10, w9
00000000000158fc	mvn	w9, w9
0000000000015900	cmp	w10, #0x9
0000000000015904	b.ge	0x1593c
0000000000015908	cmp	w10, #0x2
000000000001590c	b.lt	0x15970
0000000000015910	mov	x10, #0x0
0000000000015914	mov	x11, x8
0000000000015918	ldr	w12, [x11]
000000000001591c	cmp	w12, #0x40
0000000000015920	b.gt	0x15978
0000000000015924	add	x10, x10, #0x1
0000000000015928	add	x11, x11, #0x10
000000000001592c	cmp	x9, x10
0000000000015930	b.ne	0x15918
0000000000015934	mov	x10, x9
0000000000015938	b	0x15978
000000000001593c	mov	w10, #0x0
0000000000015940	add	w11, w9, w10
0000000000015944	cmp	w11, #0x0
0000000000015948	cinc	w11, w11, lt
000000000001594c	asr	w11, w11, #1
0000000000015950	sbfiz	x12, x11, #4, #32
0000000000015954	ldr	w12, [x8, x12]
0000000000015958	cmp	w12, #0x41
000000000001595c	csinc	w10, w10, w11, ge
0000000000015960	csel	w9, w9, w11, lt
0000000000015964	cmp	w10, w9
0000000000015968	b.lt	0x15940
000000000001596c	b	0x15978
0000000000015970	mov	w10, #0x0
0000000000015974	b	0x15978
0000000000015978	sxtw	x9, w10
000000000001597c	add	x8, x8, x9, lsl #4
0000000000015980	ldr	x8, [x8, #0x8]
0000000000015984	ldr	x8, [x8]
0000000000015988	mov	x0, x20
000000000001598c	mov	x1, x21
0000000000015990	blr	x8
0000000000015994	mov	x21, x0
0000000000015998	movi.16b	v0, #0x0
000000000001599c	stp	q0, q0, [sp, #0x40]
00000000000159a0	str	xzr, [sp, #0x60]
00000000000159a4	add	x20, sp, #0x40
00000000000159a8	ldr	x8, [x25, #0x110]
00000000000159ac	str	x20, [x25, #0x110]
00000000000159b0	mov	x9, #0x500000000
00000000000159b4	stp	x8, x9, [sp, #0x48]
00000000000159b8	ldr	x8, [x0]
00000000000159bc	and	x8, x8, #0xfffffffffffffffc
00000000000159c0	ldr	x8, [x8]
00000000000159c4	ldr	w9, [x8, #0x3c]
00000000000159c8	ldr	x8, [x8, #0x40]
00000000000159cc	tbnz	w9, #0x1f, 0x159f4
00000000000159d0	mov	w10, #0x12
00000000000159d4	and	x9, x9, x10
00000000000159d8	add	x8, x8, x9, lsl #4
00000000000159dc	ldr	x8, [x8, #0x8]
00000000000159e0	ldr	x8, [x8, #0x18]
00000000000159e4	mov	x0, x21
00000000000159e8	blr	x8
00000000000159ec	tbz	w0, #0x0, 0x15ab8
00000000000159f0	b	0x15a90
00000000000159f4	neg	w10, w9
00000000000159f8	mvn	w9, w9
00000000000159fc	cmp	w10, #0x9
0000000000015a00	b.ge	0x15a38
0000000000015a04	cmp	w10, #0x2
0000000000015a08	b.lt	0x15a6c
0000000000015a0c	mov	x10, #0x0
0000000000015a10	mov	x11, x8
0000000000015a14	ldr	w12, [x11]
0000000000015a18	cmp	w12, #0x11
0000000000015a1c	b.gt	0x15a74
0000000000015a20	add	x10, x10, #0x1
0000000000015a24	add	x11, x11, #0x10
0000000000015a28	cmp	x9, x10
0000000000015a2c	b.ne	0x15a14
0000000000015a30	mov	x10, x9
0000000000015a34	b	0x15a74
0000000000015a38	mov	w10, #0x0
0000000000015a3c	add	w11, w9, w10
0000000000015a40	cmp	w11, #0x0
0000000000015a44	cinc	w11, w11, lt
0000000000015a48	asr	w11, w11, #1
0000000000015a4c	sbfiz	x12, x11, #4, #32
0000000000015a50	ldr	w12, [x8, x12]
0000000000015a54	cmp	w12, #0x12
0000000000015a58	csinc	w10, w10, w11, ge
0000000000015a5c	csel	w9, w9, w11, lt
0000000000015a60	cmp	w10, w9
0000000000015a64	b.lt	0x15a3c
0000000000015a68	b	0x15a74
0000000000015a6c	mov	w10, #0x0
0000000000015a70	b	0x15a74
0000000000015a74	sxtw	x9, w10
0000000000015a78	add	x8, x8, x9, lsl #4
0000000000015a7c	ldr	x8, [x8, #0x8]
0000000000015a80	ldr	x8, [x8, #0x18]
0000000000015a84	mov	x0, x21
0000000000015a88	blr	x8
0000000000015a8c	tbz	w0, #0x0, 0x15ab8
0000000000015a90	ldr	x8, [sp, #0x28]
0000000000015a94	str	x8, [x25, #0x110]
0000000000015a98	ldp	x29, x30, [sp, #0x110]
0000000000015a9c	ldp	x20, x19, [sp, #0x100]
0000000000015aa0	ldp	x22, x21, [sp, #0xf0]
0000000000015aa4	ldp	x24, x23, [sp, #0xe0]
0000000000015aa8	ldp	x26, x25, [sp, #0xd0]
0000000000015aac	ldp	x28, x27, [sp, #0xc0]
0000000000015ab0	add	sp, sp, #0x120
0000000000015ab4	ret
0000000000015ab8	add	x22, x20, #0x18
0000000000015abc	ldr	x8, [x21]
0000000000015ac0	and	x8, x8, #0xfffffffffffffffc
0000000000015ac4	ldr	x8, [x8]
0000000000015ac8	ldr	w9, [x8, #0x3c]
0000000000015acc	ldr	x8, [x8, #0x40]
0000000000015ad0	tbnz	w9, #0x1f, 0x15ae0
0000000000015ad4	mov	w10, #0x12
0000000000015ad8	and	x9, x9, x10
0000000000015adc	b	0x15b64
0000000000015ae0	neg	w10, w9
0000000000015ae4	mvn	w9, w9
0000000000015ae8	cmp	w10, #0x9
0000000000015aec	b.ge	0x15b24
0000000000015af0	cmp	w10, #0x2
0000000000015af4	b.lt	0x15b58
0000000000015af8	mov	x10, #0x0
0000000000015afc	mov	x11, x8
0000000000015b00	ldr	w12, [x11]
0000000000015b04	cmp	w12, #0x11
0000000000015b08	b.gt	0x15b60
0000000000015b0c	add	x10, x10, #0x1
0000000000015b10	add	x11, x11, #0x10
0000000000015b14	cmp	x9, x10
0000000000015b18	b.ne	0x15b00
0000000000015b1c	mov	x10, x9
0000000000015b20	b	0x15b60
0000000000015b24	mov	w10, #0x0
0000000000015b28	add	w11, w9, w10
0000000000015b2c	cmp	w11, #0x0
0000000000015b30	cinc	w11, w11, lt
0000000000015b34	asr	w11, w11, #1
0000000000015b38	sbfiz	x12, x11, #4, #32
0000000000015b3c	ldr	w12, [x8, x12]
0000000000015b40	cmp	w12, #0x12
0000000000015b44	csinc	w10, w10, w11, ge
0000000000015b48	csel	w9, w9, w11, lt
0000000000015b4c	cmp	w10, w9
0000000000015b50	b.lt	0x15b28
0000000000015b54	b	0x15b60
0000000000015b58	mov	w10, #0x0
0000000000015b5c	b	0x15b60
0000000000015b60	sxtw	x9, w10
0000000000015b64	add	x10, x20, #0x20
0000000000015b68	str	x10, [sp, #0x18]
0000000000015b6c	add	x8, x8, x9, lsl #4
0000000000015b70	ldr	x8, [x8, #0x8]
0000000000015b74	ldr	x8, [x8]
0000000000015b78	mov	x0, x21
0000000000015b7c	blr	x8
0000000000015b80	mov	x1, x0
0000000000015b84	mov	x0, x19
0000000000015b88	bl	"_kfun:kotlin.collections.HashMap.ensureExtraCapacity#internal"
0000000000015b8c	ldr	x8, [x21]
0000000000015b90	and	x8, x8, #0xfffffffffffffffc
0000000000015b94	ldr	x8, [x8]
0000000000015b98	ldr	w9, [x8, #0x3c]
0000000000015b9c	ldr	x8, [x8, #0x40]
0000000000015ba0	tbnz	w9, #0x1f, 0x15bb0
0000000000015ba4	mov	w10, #0x12
0000000000015ba8	and	x9, x9, x10
0000000000015bac	b	0x15c34
0000000000015bb0	neg	w10, w9
0000000000015bb4	mvn	w9, w9
0000000000015bb8	cmp	w10, #0x9
0000000000015bbc	b.ge	0x15bf4
0000000000015bc0	cmp	w10, #0x2
0000000000015bc4	b.lt	0x15c28
0000000000015bc8	mov	x10, #0x0
0000000000015bcc	mov	x11, x8
0000000000015bd0	ldr	w12, [x11]
0000000000015bd4	cmp	w12, #0x11
0000000000015bd8	b.gt	0x15c30
0000000000015bdc	add	x10, x10, #0x1
0000000000015be0	add	x11, x11, #0x10
0000000000015be4	cmp	x9, x10
0000000000015be8	b.ne	0x15bd0
0000000000015bec	mov	x10, x9
0000000000015bf0	b	0x15c30
0000000000015bf4	mov	w10, #0x0
0000000000015bf8	add	w11, w9, w10
0000000000015bfc	cmp	w11, #0x0
0000000000015c00	cinc	w11, w11, lt
0000000000015c04	asr	w11, w11, #1
0000000000015c08	sbfiz	x12, x11, #4, #32
0000000000015c0c	ldr	w12, [x8, x12]
0000000000015c10	cmp	w12, #0x12
0000000000015c14	csinc	w10, w10, w11, ge
0000000000015c18	csel	w9, w9, w11, lt
0000000000015c1c	cmp	w10, w9
0000000000015c20	b.lt	0x15bf8
0000000000015c24	b	0x15c30
0000000000015c28	mov	w10, #0x0
0000000000015c2c	b	0x15c30
0000000000015c30	sxtw	x9, w10
0000000000015c34	add	x8, x8, x9, lsl #4
0000000000015c38	ldr	x8, [x8, #0x8]
0000000000015c3c	ldr	x8, [x8, #0x20]
0000000000015c40	mov	x0, x21
0000000000015c44	mov	x1, x22
0000000000015c48	blr	x8
0000000000015c4c	mov	x21, x0
0000000000015c50	add	x8, sp, #0x70
0000000000015c54	add	x22, x8, #0x18
0000000000015c58	add	x23, x8, #0x20
0000000000015c5c	add	x10, x8, #0x28
0000000000015c60	add	x9, x8, #0x38
0000000000015c64	stp	x9, x10, [sp, #0x8]
0000000000015c68	add	x8, x8, #0x40
0000000000015c6c	str	x8, [sp]
0000000000015c70	b	0x15cb4
0000000000015c74	mov	w10, #0xa8
0000000000015c78	and	x9, x9, x10
0000000000015c7c	add	x8, x8, x9, lsl #4
0000000000015c80	ldr	x8, [x8, #0x8]
0000000000015c84	ldr	x8, [x8, #0x8]
0000000000015c88	mov	x0, x27
0000000000015c8c	ldr	x1, [sp]
0000000000015c90	blr	x8
0000000000015c94	ldr	w8, [x28, #0x8]
0000000000015c98	cmp	w8, w24
0000000000015c9c	b.ls	0x161f4
0000000000015ca0	sxtw	x8, w24
0000000000015ca4	ldr	xzr, [x28]
0000000000015ca8	str	x0, [x20, x8, lsl #3]
0000000000015cac	ldr	x8, [sp, #0x78]
0000000000015cb0	str	x8, [x25, #0x110]
0000000000015cb4	ldr	x8, [x21]
0000000000015cb8	and	x8, x8, #0xfffffffffffffffc
0000000000015cbc	ldr	x8, [x8]
0000000000015cc0	ldr	w9, [x8, #0x3c]
0000000000015cc4	ldr	x8, [x8, #0x40]
0000000000015cc8	tbnz	w9, #0x1f, 0x15cf0
0000000000015ccc	mov	w10, #0xa0
0000000000015cd0	and	x9, x9, x10
0000000000015cd4	add	x8, x8, x9, lsl #4
0000000000015cd8	ldr	x8, [x8, #0x8]
0000000000015cdc	ldr	x8, [x8]
0000000000015ce0	mov	x0, x21
0000000000015ce4	blr	x8
0000000000015ce8	tbnz	w0, #0x0, 0x15d8c
0000000000015cec	b	0x15a90
0000000000015cf0	neg	w10, w9
0000000000015cf4	mvn	w9, w9
0000000000015cf8	cmp	w10, #0x9
0000000000015cfc	b.ge	0x15d34
0000000000015d00	cmp	w10, #0x2
0000000000015d04	b.lt	0x15d68
0000000000015d08	mov	x10, #0x0
0000000000015d0c	mov	x11, x8
0000000000015d10	ldr	w12, [x11]
0000000000015d14	cmp	w12, #0x9f
0000000000015d18	b.gt	0x15d70
0000000000015d1c	add	x10, x10, #0x1
0000000000015d20	add	x11, x11, #0x10
0000000000015d24	cmp	x9, x10
0000000000015d28	b.ne	0x15d10
0000000000015d2c	mov	x10, x9
0000000000015d30	b	0x15d70
0000000000015d34	mov	w10, #0x0
0000000000015d38	add	w11, w9, w10
0000000000015d3c	cmp	w11, #0x0
0000000000015d40	cinc	w11, w11, lt
0000000000015d44	asr	w11, w11, #1
0000000000015d48	sbfiz	x12, x11, #4, #32
0000000000015d4c	ldr	w12, [x8, x12]
0000000000015d50	cmp	w12, #0xa0
0000000000015d54	csinc	w10, w10, w11, ge
0000000000015d58	csel	w9, w9, w11, lt
0000000000015d5c	cmp	w10, w9
0000000000015d60	b.lt	0x15d38
0000000000015d64	b	0x15d70
0000000000015d68	mov	w10, #0x0
0000000000015d6c	b	0x15d70
0000000000015d70	sxtw	x9, w10
0000000000015d74	add	x8, x8, x9, lsl #4
0000000000015d78	ldr	x8, [x8, #0x8]
0000000000015d7c	ldr	x8, [x8]
0000000000015d80	mov	x0, x21
0000000000015d84	blr	x8
0000000000015d88	tbz	w0, #0x0, 0x15a90
0000000000015d8c	adr	x8, #0x6cab7
0000000000015d90	nop
0000000000015d94	ldarb	w8, [x8]
0000000000015d98	tbz	w8, #0x0, 0x15da0
0000000000015d9c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000015da0	ldr	x8, [x21]
0000000000015da4	and	x8, x8, #0xfffffffffffffffc
0000000000015da8	ldr	x8, [x8]
0000000000015dac	ldr	w9, [x8, #0x3c]
0000000000015db0	ldr	x8, [x8, #0x40]
0000000000015db4	tbnz	w9, #0x1f, 0x15dc4
0000000000015db8	mov	w10, #0xa0
0000000000015dbc	and	x9, x9, x10
0000000000015dc0	b	0x15e48
0000000000015dc4	neg	w10, w9
0000000000015dc8	mvn	w9, w9
0000000000015dcc	cmp	w10, #0x9
0000000000015dd0	b.ge	0x15e08
0000000000015dd4	cmp	w10, #0x2
0000000000015dd8	b.lt	0x15e3c
0000000000015ddc	mov	x10, #0x0
0000000000015de0	mov	x11, x8
0000000000015de4	ldr	w12, [x11]
0000000000015de8	cmp	w12, #0x9f
0000000000015dec	b.gt	0x15e44
0000000000015df0	add	x10, x10, #0x1
0000000000015df4	add	x11, x11, #0x10
0000000000015df8	cmp	x9, x10
0000000000015dfc	b.ne	0x15de4
0000000000015e00	mov	x10, x9
0000000000015e04	b	0x15e44
0000000000015e08	mov	w10, #0x0
0000000000015e0c	add	w11, w9, w10
0000000000015e10	cmp	w11, #0x0
0000000000015e14	cinc	w11, w11, lt
0000000000015e18	asr	w11, w11, #1
0000000000015e1c	sbfiz	x12, x11, #4, #32
0000000000015e20	ldr	w12, [x8, x12]
0000000000015e24	cmp	w12, #0xa0
0000000000015e28	csinc	w10, w10, w11, ge
0000000000015e2c	csel	w9, w9, w11, lt
0000000000015e30	cmp	w10, w9
0000000000015e34	b.lt	0x15e0c
0000000000015e38	b	0x15e44
0000000000015e3c	mov	w10, #0x0
0000000000015e40	b	0x15e44
0000000000015e44	sxtw	x9, w10
0000000000015e48	add	x8, x8, x9, lsl #4
0000000000015e4c	ldr	x8, [x8, #0x8]
0000000000015e50	ldr	x8, [x8, #0x8]
0000000000015e54	mov	x0, x21
0000000000015e58	ldr	x1, [sp, #0x18]
0000000000015e5c	blr	x8
0000000000015e60	mov	x27, x0
0000000000015e64	movi.16b	v0, #0x0
0000000000015e68	stp	q0, q0, [sp, #0x70]
0000000000015e6c	str	xzr, [sp, #0xb0]
0000000000015e70	stp	q0, q0, [sp, #0x90]
0000000000015e74	ldr	x10, [x25, #0x110]
0000000000015e78	add	x9, sp, #0x70
0000000000015e7c	str	x9, [x25, #0x110]
0000000000015e80	mov	x8, #0x900000000
0000000000015e84	stp	x10, x8, [sp, #0x78]
0000000000015e88	ldr	x8, [x0]
0000000000015e8c	and	x8, x8, #0xfffffffffffffffc
0000000000015e90	ldr	x8, [x8]
0000000000015e94	ldr	w9, [x8, #0x3c]
0000000000015e98	ldr	x8, [x8, #0x40]
0000000000015e9c	tbnz	w9, #0x1f, 0x15eac
0000000000015ea0	mov	w10, #0xa8
0000000000015ea4	and	x9, x9, x10
0000000000015ea8	b	0x15f30
0000000000015eac	neg	w10, w9
0000000000015eb0	mvn	w9, w9
0000000000015eb4	cmp	w10, #0x9
0000000000015eb8	b.ge	0x15ef0
0000000000015ebc	cmp	w10, #0x2
0000000000015ec0	b.lt	0x15f24
0000000000015ec4	mov	x10, #0x0
0000000000015ec8	mov	x11, x8
0000000000015ecc	ldr	w12, [x11]
0000000000015ed0	cmp	w12, #0xa7
0000000000015ed4	b.gt	0x15f2c
0000000000015ed8	add	x10, x10, #0x1
0000000000015edc	add	x11, x11, #0x10
0000000000015ee0	cmp	x9, x10
0000000000015ee4	b.ne	0x15ecc
0000000000015ee8	mov	x10, x9
0000000000015eec	b	0x15f2c
0000000000015ef0	mov	w10, #0x0
0000000000015ef4	add	w11, w9, w10
0000000000015ef8	cmp	w11, #0x0
0000000000015efc	cinc	w11, w11, lt
0000000000015f00	asr	w11, w11, #1
0000000000015f04	sbfiz	x12, x11, #4, #32
0000000000015f08	ldr	w12, [x8, x12]
0000000000015f0c	cmp	w12, #0xa8
0000000000015f10	csinc	w10, w10, w11, ge
0000000000015f14	csel	w9, w9, w11, lt
0000000000015f18	cmp	w10, w9
0000000000015f1c	b.lt	0x15ef4
0000000000015f20	b	0x15f2c
0000000000015f24	mov	w10, #0x0
0000000000015f28	b	0x15f2c
0000000000015f2c	sxtw	x9, w10
0000000000015f30	add	x8, x8, x9, lsl #4
0000000000015f34	ldr	x8, [x8, #0x8]
0000000000015f38	ldr	x8, [x8]
0000000000015f3c	mov	x0, x27
0000000000015f40	mov	x1, x22
0000000000015f44	blr	x8
0000000000015f48	mov	x1, x0
0000000000015f4c	mov	x0, x19
0000000000015f50	bl	"_kfun:kotlin.collections.HashMap#addKey(1:0){}kotlin.Int"
0000000000015f54	mov	x26, x0
0000000000015f58	mov	x0, x19
0000000000015f5c	mov	x1, x23
0000000000015f60	bl	"_kfun:kotlin.collections.HashMap.allocateValuesArray#internal"
0000000000015f64	mov	x28, x0
0000000000015f68	tbnz	w26, #0x1f, 0x15f90
0000000000015f6c	ldr	x8, [x27]
0000000000015f70	and	x8, x8, #0xfffffffffffffffc
0000000000015f74	ldr	x8, [x8]
0000000000015f78	ldr	w9, [x8, #0x3c]
0000000000015f7c	ldr	x8, [x8, #0x40]
0000000000015f80	tbnz	w9, #0x1f, 0x15fd0
0000000000015f84	mov	w10, #0xa8
0000000000015f88	and	x9, x9, x10
0000000000015f8c	b	0x160d4
0000000000015f90	mvn	w24, w26
0000000000015f94	ldr	w8, [x28, #0x8]
0000000000015f98	cmp	w8, w24
0000000000015f9c	b.ls	0x161f4
0000000000015fa0	add	x20, x28, #0x10
0000000000015fa4	ldr	x26, [x20, w24, sxtw #3]
0000000000015fa8	str	x26, [sp, #0xa0]
0000000000015fac	ldr	x8, [x27]
0000000000015fb0	and	x8, x8, #0xfffffffffffffffc
0000000000015fb4	ldr	x8, [x8]
0000000000015fb8	ldr	w9, [x8, #0x3c]
0000000000015fbc	ldr	x8, [x8, #0x40]
0000000000015fc0	tbnz	w9, #0x1f, 0x16014
0000000000015fc4	mov	w10, #0xa8
0000000000015fc8	and	x9, x9, x10
0000000000015fcc	b	0x1610c
0000000000015fd0	neg	w10, w9
0000000000015fd4	mvn	w9, w9
0000000000015fd8	cmp	w10, #0x9
0000000000015fdc	b.ge	0x16058
0000000000015fe0	cmp	w10, #0x2
0000000000015fe4	b.lt	0x160c0
0000000000015fe8	mov	x10, #0x0
0000000000015fec	mov	x11, x8
0000000000015ff0	ldr	w12, [x11]
0000000000015ff4	cmp	w12, #0xa7
0000000000015ff8	b.gt	0x160d0
0000000000015ffc	add	x10, x10, #0x1
0000000000016000	add	x11, x11, #0x10
0000000000016004	cmp	x9, x10
0000000000016008	b.ne	0x15ff0
000000000001600c	mov	x10, x9
0000000000016010	b	0x160d0
0000000000016014	neg	w10, w9
0000000000016018	mvn	w9, w9
000000000001601c	cmp	w10, #0x9
0000000000016020	b.ge	0x1608c
0000000000016024	cmp	w10, #0x2
0000000000016028	b.lt	0x160c8
000000000001602c	mov	x10, #0x0
0000000000016030	mov	x11, x8
0000000000016034	ldr	w12, [x11]
0000000000016038	cmp	w12, #0xa7
000000000001603c	b.gt	0x16108
0000000000016040	add	x10, x10, #0x1
0000000000016044	add	x11, x11, #0x10
0000000000016048	cmp	x9, x10
000000000001604c	b.ne	0x16034
0000000000016050	mov	x10, x9
0000000000016054	b	0x16108
0000000000016058	mov	w10, #0x0
000000000001605c	add	w11, w9, w10
0000000000016060	cmp	w11, #0x0
0000000000016064	cinc	w11, w11, lt
0000000000016068	asr	w11, w11, #1
000000000001606c	sbfiz	x12, x11, #4, #32
0000000000016070	ldr	w12, [x8, x12]
0000000000016074	cmp	w12, #0xa8
0000000000016078	csinc	w10, w10, w11, ge
000000000001607c	csel	w9, w9, w11, lt
0000000000016080	cmp	w10, w9
0000000000016084	b.lt	0x1605c
0000000000016088	b	0x160d0
000000000001608c	mov	w10, #0x0
0000000000016090	add	w11, w9, w10
0000000000016094	cmp	w11, #0x0
0000000000016098	cinc	w11, w11, lt
000000000001609c	asr	w11, w11, #1
00000000000160a0	sbfiz	x12, x11, #4, #32
00000000000160a4	ldr	w12, [x8, x12]
00000000000160a8	cmp	w12, #0xa8
00000000000160ac	csinc	w10, w10, w11, ge
00000000000160b0	csel	w9, w9, w11, lt
00000000000160b4	cmp	w10, w9
00000000000160b8	b.lt	0x16090
00000000000160bc	b	0x16108
00000000000160c0	mov	w10, #0x0
00000000000160c4	b	0x160d0
00000000000160c8	mov	w10, #0x0
00000000000160cc	b	0x16108
00000000000160d0	sxtw	x9, w10
00000000000160d4	add	x8, x8, x9, lsl #4
00000000000160d8	ldr	x8, [x8, #0x8]
00000000000160dc	ldr	x8, [x8, #0x8]
00000000000160e0	mov	x0, x27
00000000000160e4	ldr	x1, [sp, #0x10]
00000000000160e8	blr	x8
00000000000160ec	ldr	w8, [x28, #0x8]
00000000000160f0	cmp	w8, w26
00000000000160f4	b.ls	0x161f4
00000000000160f8	ldr	xzr, [x28]
00000000000160fc	add	x8, x28, w26, sxtw #3
0000000000016100	str	x0, [x8, #0x10]
0000000000016104	b	0x15cac
0000000000016108	sxtw	x9, w10
000000000001610c	add	x8, x8, x9, lsl #4
0000000000016110	ldr	x8, [x8, #0x8]
0000000000016114	ldr	x8, [x8, #0x8]
0000000000016118	mov	x0, x27
000000000001611c	ldr	x1, [sp, #0x8]
0000000000016120	blr	x8
0000000000016124	cbz	x0, 0x16148
0000000000016128	ldr	x8, [x0]
000000000001612c	and	x8, x8, #0xfffffffffffffffc
0000000000016130	ldr	x8, [x8]
0000000000016134	ldr	x8, [x8, #0x70]
0000000000016138	mov	x1, x26
000000000001613c	blr	x8
0000000000016140	tbnz	w0, #0x0, 0x15cac
0000000000016144	b	0x1614c
0000000000016148	cbz	x26, 0x15cac
000000000001614c	ldr	x8, [x27]
0000000000016150	and	x8, x8, #0xfffffffffffffffc
0000000000016154	ldr	x8, [x8]
0000000000016158	ldr	w9, [x8, #0x3c]
000000000001615c	ldr	x8, [x8, #0x40]
0000000000016160	tbz	w9, #0x1f, 0x15c74
0000000000016164	neg	w10, w9
0000000000016168	mvn	w9, w9
000000000001616c	cmp	w10, #0x9
0000000000016170	b.ge	0x161ac
0000000000016174	cmp	w10, #0x2
0000000000016178	b.lt	0x161e0
000000000001617c	mov	x10, #0x0
0000000000016180	mov	x11, x8
0000000000016184	ldr	w12, [x11]
0000000000016188	cmp	w12, #0xa7
000000000001618c	b.gt	0x161ec
0000000000016190	add	x10, x10, #0x1
0000000000016194	add	x11, x11, #0x10
0000000000016198	cmp	x9, x10
000000000001619c	b.ne	0x16184
00000000000161a0	mov	x10, x9
00000000000161a4	sxtw	x9, w10
00000000000161a8	b	0x15c7c
00000000000161ac	mov	w10, #0x0
00000000000161b0	add	w11, w9, w10
00000000000161b4	cmp	w11, #0x0
00000000000161b8	cinc	w11, w11, lt
00000000000161bc	asr	w11, w11, #1
00000000000161c0	sbfiz	x12, x11, #4, #32
00000000000161c4	ldr	w12, [x8, x12]
00000000000161c8	cmp	w12, #0xa8
00000000000161cc	csinc	w10, w10, w11, ge
00000000000161d0	csel	w9, w9, w11, lt
00000000000161d4	cmp	w10, w9
00000000000161d8	b.lt	0x161b0
00000000000161dc	b	0x161ec
00000000000161e0	mov	w10, #0x0
00000000000161e4	sxtw	x9, w10
00000000000161e8	b	0x15c7c
00000000000161ec	sxtw	x9, w10
00000000000161f0	b	0x15c7c
00000000000161f4	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.collections.HashMap#remove(1:0){}1:1?:
00000000000161f8	sub	sp, sp, #0x60
00000000000161fc	stp	x22, x21, [sp, #0x30]
0000000000016200	stp	x20, x19, [sp, #0x40]
0000000000016204	stp	x29, x30, [sp, #0x50]
0000000000016208	add	x29, sp, #0x50
000000000001620c	mov	x19, x2
0000000000016210	mov	x21, x1
0000000000016214	mov	x20, x0
0000000000016218	movi.16b	v0, #0x0
000000000001621c	stp	q0, q0, [sp]
0000000000016220	str	xzr, [sp, #0x20]
0000000000016224	adrp	x0, 82 ; 0x68000
0000000000016228	add	x0, x0, #0xa00
000000000001622c	ldr	x8, [x0]
0000000000016230	blr	x8
0000000000016234	ldr	x22, [x0]
0000000000016238	ldr	x8, [x22, #0x110]
000000000001623c	mov	x9, sp
0000000000016240	str	x9, [x22, #0x110]
0000000000016244	mov	x9, #0x500000000
0000000000016248	stp	x8, x9, [sp, #0x8]
000000000001624c	adr	x8, #0x6c5f7
0000000000016250	nop
0000000000016254	ldarb	w8, [x8]
0000000000016258	tbz	w8, #0x0, 0x16260
000000000001625c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000016260	mov	x0, x20
0000000000016264	mov	x1, x21
0000000000016268	bl	"_kfun:kotlin.collections.HashMap#removeKey(1:0){}kotlin.Int"
000000000001626c	tbnz	w0, #0x1f, 0x162a0
0000000000016270	mov	x1, x0
0000000000016274	ldr	x0, [x20, #0x10]
0000000000016278	str	x0, [sp, #0x18]
000000000001627c	cbz	x0, 0x162c8
0000000000016280	ldr	w8, [x0, #0x8]
0000000000016284	cmp	w8, w1
0000000000016288	b.ls	0x162cc
000000000001628c	add	x8, x0, w1, sxtw #3
0000000000016290	ldr	x20, [x8, #0x10]
0000000000016294	str	x20, [sp, #0x20]
0000000000016298	bl	"_kfun:kotlin.collections#resetAt__at__kotlin.Array<0:0>(kotlin.Int){0ยง<kotlin.Any?>}"
000000000001629c	b	0x162a4
00000000000162a0	mov	x20, #0x0
00000000000162a4	str	x20, [x19]
00000000000162a8	ldr	x8, [sp, #0x8]
00000000000162ac	str	x8, [x22, #0x110]
00000000000162b0	mov	x0, x20
00000000000162b4	ldp	x29, x30, [sp, #0x50]
00000000000162b8	ldp	x20, x19, [sp, #0x40]
00000000000162bc	ldp	x22, x21, [sp, #0x30]
00000000000162c0	add	sp, sp, #0x60
00000000000162c4	ret
00000000000162c8	bl	_ThrowNullPointerException
00000000000162cc	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.collections.HashMap#clear(){}:
00000000000162d0	sub	sp, sp, #0x80
00000000000162d4	stp	x24, x23, [sp, #0x40]
00000000000162d8	stp	x22, x21, [sp, #0x50]
00000000000162dc	stp	x20, x19, [sp, #0x60]
00000000000162e0	stp	x29, x30, [sp, #0x70]
00000000000162e4	add	x29, sp, #0x70
00000000000162e8	mov	x19, x0
00000000000162ec	movi.16b	v0, #0x0
00000000000162f0	stp	q0, q0, [sp]
00000000000162f4	stp	q0, q0, [sp, #0x20]
00000000000162f8	adrp	x0, 82 ; 0x68000
00000000000162fc	add	x0, x0, #0xa00
0000000000016300	ldr	x8, [x0]
0000000000016304	blr	x8
0000000000016308	ldr	x21, [x0]
000000000001630c	ldr	x8, [x21, #0x110]
0000000000016310	mov	x9, sp
0000000000016314	str	x9, [x21, #0x110]
0000000000016318	mov	x9, #0x800000000
000000000001631c	stp	x8, x9, [sp, #0x8]
0000000000016320	adr	x22, #0x6c523
0000000000016324	nop
0000000000016328	ldarb	w8, [x22]
000000000001632c	tbz	w8, #0x0, 0x16334
0000000000016330	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000016334	mov	x0, x19
0000000000016338	bl	"_kfun:kotlin.collections.HashMap#checkIsMutable(){}"
000000000001633c	ldr	w20, [x19, #0x44]
0000000000016340	cmp	w20, #0x1
0000000000016344	b.mi	0x163d4
0000000000016348	mov	x23, #0x0
000000000001634c	mov	w24, #-0x1
0000000000016350	b	0x1636c
0000000000016354	ldr	xzr, [x8]
0000000000016358	add	x8, x8, x23, lsl #2
000000000001635c	str	w24, [x8, #0x10]
0000000000016360	add	x23, x23, #0x1
0000000000016364	cmp	w20, w23
0000000000016368	b.eq	0x163d0
000000000001636c	ldarb	w8, [x22]
0000000000016370	tbz	w8, #0x0, 0x16378
0000000000016374	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000016378	ldr	x8, [x19, #0x18]
000000000001637c	str	x8, [sp, #0x18]
0000000000016380	ldr	w9, [x8, #0x8]
0000000000016384	cmp	w9, w23
0000000000016388	b.ls	0x163cc
000000000001638c	add	x8, x8, x23, lsl #2
0000000000016390	ldrsw	x8, [x8, #0x10]
0000000000016394	tbnz	w8, #0x1f, 0x16360
0000000000016398	ldr	x9, [x19, #0x20]
000000000001639c	str	x9, [sp, #0x20]
00000000000163a0	ldr	w10, [x9, #0x8]
00000000000163a4	cmp	w10, w8
00000000000163a8	b.ls	0x163cc
00000000000163ac	ldr	xzr, [x9]
00000000000163b0	add	x8, x9, x8, lsl #2
00000000000163b4	str	wzr, [x8, #0x10]
00000000000163b8	ldr	x8, [x19, #0x18]
00000000000163bc	str	x8, [sp, #0x28]
00000000000163c0	ldr	w9, [x8, #0x8]
00000000000163c4	cmp	w9, w23
00000000000163c8	b.hi	0x16354
00000000000163cc	bl	_ThrowArrayIndexOutOfBoundsException
00000000000163d0	ldr	w20, [x19, #0x44]
00000000000163d4	ldr	x0, [x19, #0x8]
00000000000163d8	str	x0, [sp, #0x30]
00000000000163dc	mov	w1, #0x0
00000000000163e0	mov	x2, x20
00000000000163e4	bl	"_kfun:kotlin.collections#resetRange__at__kotlin.Array<0:0>(kotlin.Int;kotlin.Int){0ยง<kotlin.Any?>}"
00000000000163e8	ldr	x0, [x19, #0x10]
00000000000163ec	str	x0, [sp, #0x38]
00000000000163f0	cbz	x0, 0x16400
00000000000163f4	ldr	w2, [x19, #0x44]
00000000000163f8	mov	w1, #0x0
00000000000163fc	bl	"_kfun:kotlin.collections#resetRange__at__kotlin.Array<0:0>(kotlin.Int;kotlin.Int){0ยง<kotlin.Any?>}"
0000000000016400	str	wzr, [x19, #0x4c]
0000000000016404	str	wzr, [x19, #0x44]
0000000000016408	ldr	x8, [sp, #0x8]
000000000001640c	str	x8, [x21, #0x110]
0000000000016410	ldp	x29, x30, [sp, #0x70]
0000000000016414	ldp	x20, x19, [sp, #0x60]
0000000000016418	ldp	x22, x21, [sp, #0x50]
000000000001641c	ldp	x24, x23, [sp, #0x40]
0000000000016420	add	sp, sp, #0x80
0000000000016424	ret
_kfun:kotlin.collections.HashMap#<get-keys>(){}kotlin.collections.MutableSet<1:0>:
0000000000016428	sub	sp, sp, #0x60
000000000001642c	stp	x22, x21, [sp, #0x30]
0000000000016430	stp	x20, x19, [sp, #0x40]
0000000000016434	stp	x29, x30, [sp, #0x50]
0000000000016438	add	x29, sp, #0x50
000000000001643c	mov	x19, x1
0000000000016440	mov	x20, x0
0000000000016444	movi.16b	v0, #0x0
0000000000016448	stp	q0, q0, [sp]
000000000001644c	str	xzr, [sp, #0x20]
0000000000016450	adrp	x0, 82 ; 0x68000
0000000000016454	add	x0, x0, #0xa00
0000000000016458	ldr	x8, [x0]
000000000001645c	blr	x8
0000000000016460	ldr	x21, [x0]
0000000000016464	ldr	x8, [x21, #0x110]
0000000000016468	mov	x9, sp
000000000001646c	str	x9, [x21, #0x110]
0000000000016470	mov	x9, #0x500000000
0000000000016474	stp	x8, x9, [sp, #0x8]
0000000000016478	adr	x8, #0x6c3cb
000000000001647c	nop
0000000000016480	ldarb	w8, [x8]
0000000000016484	tbz	w8, #0x0, 0x1648c
0000000000016488	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001648c	ldr	x0, [x20, #0x28]
0000000000016490	str	x0, [sp, #0x18]
0000000000016494	cbnz	x0, 0x164c4
0000000000016498	ldr	x8, [x21, #0x118]
000000000001649c	add	x0, x8, #0x70
00000000000164a0	mov	w1, #0x18
00000000000164a4	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000164a8	adr	x8, #0x41488
00000000000164ac	nop
00000000000164b0	str	x8, [x0, #0x10]!
00000000000164b4	stur	xzr, [x0, #-0x8]
00000000000164b8	str	x0, [sp, #0x20]
00000000000164bc	str	x20, [x0, #0x8]
00000000000164c0	str	x0, [x20, #0x28]
00000000000164c4	str	x0, [x19]
00000000000164c8	ldr	x8, [sp, #0x8]
00000000000164cc	str	x8, [x21, #0x110]
00000000000164d0	ldp	x29, x30, [sp, #0x50]
00000000000164d4	ldp	x20, x19, [sp, #0x40]
00000000000164d8	ldp	x22, x21, [sp, #0x30]
00000000000164dc	add	sp, sp, #0x60
00000000000164e0	ret
_kfun:kotlin.collections.HashMap#<get-values>(){}kotlin.collections.MutableCollection<1:1>:
00000000000164e4	sub	sp, sp, #0x60
00000000000164e8	stp	x22, x21, [sp, #0x30]
00000000000164ec	stp	x20, x19, [sp, #0x40]
00000000000164f0	stp	x29, x30, [sp, #0x50]
00000000000164f4	add	x29, sp, #0x50
00000000000164f8	mov	x19, x1
00000000000164fc	mov	x20, x0
0000000000016500	movi.16b	v0, #0x0
0000000000016504	stp	q0, q0, [sp]
0000000000016508	str	xzr, [sp, #0x20]
000000000001650c	adrp	x0, 82 ; 0x68000
0000000000016510	add	x0, x0, #0xa00
0000000000016514	ldr	x8, [x0]
0000000000016518	blr	x8
000000000001651c	ldr	x21, [x0]
0000000000016520	ldr	x8, [x21, #0x110]
0000000000016524	mov	x9, sp
0000000000016528	str	x9, [x21, #0x110]
000000000001652c	mov	x9, #0x500000000
0000000000016530	stp	x8, x9, [sp, #0x8]
0000000000016534	adr	x8, #0x6c30f
0000000000016538	nop
000000000001653c	ldarb	w8, [x8]
0000000000016540	tbz	w8, #0x0, 0x16548
0000000000016544	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000016548	ldr	x0, [x20, #0x30]
000000000001654c	str	x0, [sp, #0x18]
0000000000016550	cbnz	x0, 0x16580
0000000000016554	ldr	x8, [x21, #0x118]
0000000000016558	add	x0, x8, #0x70
000000000001655c	mov	w1, #0x18
0000000000016560	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000016564	adr	x8, #0x414bc
0000000000016568	nop
000000000001656c	str	x8, [x0, #0x10]!
0000000000016570	stur	xzr, [x0, #-0x8]
0000000000016574	str	x0, [sp, #0x20]
0000000000016578	str	x20, [x0, #0x8]
000000000001657c	str	x0, [x20, #0x30]
0000000000016580	str	x0, [x19]
0000000000016584	ldr	x8, [sp, #0x8]
0000000000016588	str	x8, [x21, #0x110]
000000000001658c	ldp	x29, x30, [sp, #0x50]
0000000000016590	ldp	x20, x19, [sp, #0x40]
0000000000016594	ldp	x22, x21, [sp, #0x30]
0000000000016598	add	sp, sp, #0x60
000000000001659c	ret
_kfun:kotlin.collections.HashMap#<get-entries>(){}kotlin.collections.MutableSet<kotlin.collections.MutableMap.MutableEntry<1:0,1:1>>:
00000000000165a0	sub	sp, sp, #0x60
00000000000165a4	stp	x22, x21, [sp, #0x30]
00000000000165a8	stp	x20, x19, [sp, #0x40]
00000000000165ac	stp	x29, x30, [sp, #0x50]
00000000000165b0	add	x29, sp, #0x50
00000000000165b4	mov	x19, x1
00000000000165b8	mov	x20, x0
00000000000165bc	movi.16b	v0, #0x0
00000000000165c0	stp	q0, q0, [sp]
00000000000165c4	str	xzr, [sp, #0x20]
00000000000165c8	adrp	x0, 82 ; 0x68000
00000000000165cc	add	x0, x0, #0xa00
00000000000165d0	ldr	x8, [x0]
00000000000165d4	blr	x8
00000000000165d8	ldr	x21, [x0]
00000000000165dc	ldr	x8, [x21, #0x110]
00000000000165e0	mov	x9, sp
00000000000165e4	str	x9, [x21, #0x110]
00000000000165e8	mov	x9, #0x500000000
00000000000165ec	stp	x8, x9, [sp, #0x8]
00000000000165f0	adr	x8, #0x6c253
00000000000165f4	nop
00000000000165f8	ldarb	w8, [x8]
00000000000165fc	tbz	w8, #0x0, 0x16604
0000000000016600	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000016604	ldr	x0, [x20, #0x38]
0000000000016608	str	x0, [sp, #0x18]
000000000001660c	cbnz	x0, 0x1663c
0000000000016610	ldr	x8, [x21, #0x118]
0000000000016614	add	x0, x8, #0x70
0000000000016618	mov	w1, #0x18
000000000001661c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000016620	adr	x8, #0x414f0
0000000000016624	nop
0000000000016628	str	x8, [x0, #0x10]!
000000000001662c	stur	xzr, [x0, #-0x8]
0000000000016630	str	x0, [sp, #0x20]
0000000000016634	str	x20, [x0, #0x8]
0000000000016638	str	x0, [x20, #0x38]
000000000001663c	str	x0, [x19]
0000000000016640	ldr	x8, [sp, #0x8]
0000000000016644	str	x8, [x21, #0x110]
0000000000016648	ldp	x29, x30, [sp, #0x50]
000000000001664c	ldp	x20, x19, [sp, #0x40]
0000000000016650	ldp	x22, x21, [sp, #0x30]
0000000000016654	add	sp, sp, #0x60
0000000000016658	ret
_kfun:kotlin.collections.HashMap#equals(kotlin.Any?){}kotlin.Boolean:
000000000001665c	sub	sp, sp, #0x60
0000000000016660	stp	x24, x23, [sp, #0x20]
0000000000016664	stp	x22, x21, [sp, #0x30]
0000000000016668	stp	x20, x19, [sp, #0x40]
000000000001666c	stp	x29, x30, [sp, #0x50]
0000000000016670	add	x29, sp, #0x50
0000000000016674	mov	x20, x1
0000000000016678	mov	x19, x0
000000000001667c	adr	x8, #0x6c1c7
0000000000016680	nop
0000000000016684	ldarb	w8, [x8]
0000000000016688	tbz	w8, #0x0, 0x16690
000000000001668c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000016690	cmp	x20, x19
0000000000016694	b.eq	0x16728
0000000000016698	cbz	x20, 0x16810
000000000001669c	ldr	x8, [x20]
00000000000166a0	and	x8, x8, #0xfffffffffffffffc
00000000000166a4	ldr	x8, [x8]
00000000000166a8	ldr	w9, [x8, #0x3c]
00000000000166ac	ldr	x8, [x8, #0x40]
00000000000166b0	tbnz	w9, #0x1f, 0x16730
00000000000166b4	mov	w10, #0x41
00000000000166b8	and	x9, x9, x10
00000000000166bc	lsl	x9, x9, #4
00000000000166c0	ldr	w8, [x8, x9]
00000000000166c4	cmp	w8, #0x41
00000000000166c8	b.ne	0x16810
00000000000166cc	movi.16b	v0, #0x0
00000000000166d0	stp	q0, q0, [sp]
00000000000166d4	mov	x23, sp
00000000000166d8	adrp	x21, 82 ; 0x68000
00000000000166dc	add	x21, x21, #0xa00
00000000000166e0	ldr	x22, [x21]
00000000000166e4	mov	x0, x21
00000000000166e8	blr	x22
00000000000166ec	ldr	x8, [x0]
00000000000166f0	ldr	x9, [x8, #0x110]
00000000000166f4	str	x23, [x8, #0x110]
00000000000166f8	mov	x8, #0x400000000
00000000000166fc	stp	x9, x8, [sp, #0x8]
0000000000016700	ldr	w24, [x19, #0x4c]
0000000000016704	ldr	x8, [x20]
0000000000016708	and	x8, x8, #0xfffffffffffffffc
000000000001670c	ldr	x8, [x8]
0000000000016710	ldr	w9, [x8, #0x3c]
0000000000016714	ldr	x8, [x8, #0x40]
0000000000016718	tbnz	w9, #0x1f, 0x16788
000000000001671c	mov	w10, #0x41
0000000000016720	and	x9, x9, x10
0000000000016724	b	0x1688c
0000000000016728	mov	w8, #0x1
000000000001672c	b	0x16994
0000000000016730	neg	w10, w9
0000000000016734	mvn	w9, w9
0000000000016738	cmp	w10, #0x9
000000000001673c	b.ge	0x167cc
0000000000016740	cmp	w10, #0x2
0000000000016744	b.lt	0x16818
0000000000016748	mov	x10, #0x0
000000000001674c	mov	x11, x8
0000000000016750	ldr	w12, [x11]
0000000000016754	cmp	w12, #0x40
0000000000016758	b.gt	0x16868
000000000001675c	add	x10, x10, #0x1
0000000000016760	add	x11, x11, #0x10
0000000000016764	cmp	x9, x10
0000000000016768	b.ne	0x16750
000000000001676c	mov	x10, x9
0000000000016770	sxtw	x9, w10
0000000000016774	lsl	x9, x9, #4
0000000000016778	ldr	w8, [x8, x9]
000000000001677c	cmp	w8, #0x41
0000000000016780	b.ne	0x16810
0000000000016784	b	0x166cc
0000000000016788	neg	w10, w9
000000000001678c	mvn	w9, w9
0000000000016790	cmp	w10, #0x9
0000000000016794	b.ge	0x16834
0000000000016798	cmp	w10, #0x2
000000000001679c	b.lt	0x16880
00000000000167a0	mov	x10, #0x0
00000000000167a4	mov	x11, x8
00000000000167a8	ldr	w12, [x11]
00000000000167ac	cmp	w12, #0x40
00000000000167b0	b.gt	0x16888
00000000000167b4	add	x10, x10, #0x1
00000000000167b8	add	x11, x11, #0x10
00000000000167bc	cmp	x9, x10
00000000000167c0	b.ne	0x167a8
00000000000167c4	mov	x10, x9
00000000000167c8	b	0x16888
00000000000167cc	mov	w10, #0x0
00000000000167d0	add	w11, w9, w10
00000000000167d4	cmp	w11, #0x0
00000000000167d8	cinc	w11, w11, lt
00000000000167dc	asr	w11, w11, #1
00000000000167e0	sbfiz	x12, x11, #4, #32
00000000000167e4	ldr	w12, [x8, x12]
00000000000167e8	cmp	w12, #0x41
00000000000167ec	csinc	w10, w10, w11, ge
00000000000167f0	csel	w9, w9, w11, lt
00000000000167f4	cmp	w10, w9
00000000000167f8	b.lt	0x167d0
00000000000167fc	sxtw	x9, w10
0000000000016800	lsl	x9, x9, #4
0000000000016804	ldr	w8, [x8, x9]
0000000000016808	cmp	w8, #0x41
000000000001680c	b.eq	0x166cc
0000000000016810	mov	w8, #0x0
0000000000016814	b	0x16994
0000000000016818	mov	w10, #0x0
000000000001681c	sxtw	x9, w10
0000000000016820	lsl	x9, x9, #4
0000000000016824	ldr	w8, [x8, x9]
0000000000016828	cmp	w8, #0x41
000000000001682c	b.eq	0x166cc
0000000000016830	b	0x16810
0000000000016834	mov	w10, #0x0
0000000000016838	add	w11, w9, w10
000000000001683c	cmp	w11, #0x0
0000000000016840	cinc	w11, w11, lt
0000000000016844	asr	w11, w11, #1
0000000000016848	sbfiz	x12, x11, #4, #32
000000000001684c	ldr	w12, [x8, x12]
0000000000016850	cmp	w12, #0x41
0000000000016854	csinc	w10, w10, w11, ge
0000000000016858	csel	w9, w9, w11, lt
000000000001685c	cmp	w10, w9
0000000000016860	b.lt	0x16838
0000000000016864	b	0x16888
0000000000016868	sxtw	x9, w10
000000000001686c	lsl	x9, x9, #4
0000000000016870	ldr	w8, [x8, x9]
0000000000016874	cmp	w8, #0x41
0000000000016878	b.ne	0x16810
000000000001687c	b	0x166cc
0000000000016880	mov	w10, #0x0
0000000000016884	b	0x16888
0000000000016888	sxtw	x9, w10
000000000001688c	add	x8, x8, x9, lsl #4
0000000000016890	ldr	x8, [x8, #0x8]
0000000000016894	ldr	x8, [x8, #0x10]
0000000000016898	mov	x0, x20
000000000001689c	blr	x8
00000000000168a0	cmp	w24, w0
00000000000168a4	b.ne	0x168d0
00000000000168a8	add	x1, x23, #0x18
00000000000168ac	ldr	x8, [x20]
00000000000168b0	and	x8, x8, #0xfffffffffffffffc
00000000000168b4	ldr	x8, [x8]
00000000000168b8	ldr	w9, [x8, #0x3c]
00000000000168bc	ldr	x8, [x8, #0x40]
00000000000168c0	tbnz	w9, #0x1f, 0x168d8
00000000000168c4	mov	w10, #0x41
00000000000168c8	and	x9, x9, x10
00000000000168cc	b	0x1695c
00000000000168d0	mov	w8, #0x0
00000000000168d4	b	0x16980
00000000000168d8	neg	w10, w9
00000000000168dc	mvn	w9, w9
00000000000168e0	cmp	w10, #0x9
00000000000168e4	b.ge	0x1691c
00000000000168e8	cmp	w10, #0x2
00000000000168ec	b.lt	0x16950
00000000000168f0	mov	x10, #0x0
00000000000168f4	mov	x11, x8
00000000000168f8	ldr	w12, [x11]
00000000000168fc	cmp	w12, #0x40
0000000000016900	b.gt	0x16958
0000000000016904	add	x10, x10, #0x1
0000000000016908	add	x11, x11, #0x10
000000000001690c	cmp	x9, x10
0000000000016910	b.ne	0x168f8
0000000000016914	mov	x10, x9
0000000000016918	b	0x16958
000000000001691c	mov	w10, #0x0
0000000000016920	add	w11, w9, w10
0000000000016924	cmp	w11, #0x0
0000000000016928	cinc	w11, w11, lt
000000000001692c	asr	w11, w11, #1
0000000000016930	sbfiz	x12, x11, #4, #32
0000000000016934	ldr	w12, [x8, x12]
0000000000016938	cmp	w12, #0x41
000000000001693c	csinc	w10, w10, w11, ge
0000000000016940	csel	w9, w9, w11, lt
0000000000016944	cmp	w10, w9
0000000000016948	b.lt	0x16920
000000000001694c	b	0x16958
0000000000016950	mov	w10, #0x0
0000000000016954	b	0x16958
0000000000016958	sxtw	x9, w10
000000000001695c	add	x8, x8, x9, lsl #4
0000000000016960	ldr	x8, [x8, #0x8]
0000000000016964	ldr	x8, [x8]
0000000000016968	mov	x0, x20
000000000001696c	blr	x8
0000000000016970	mov	x1, x0
0000000000016974	mov	x0, x19
0000000000016978	bl	"_kfun:kotlin.collections.HashMap#containsAllEntries(kotlin.collections.Collection<*>){}kotlin.Boolean"
000000000001697c	mov	x8, x0
0000000000016980	mov	x0, x21
0000000000016984	blr	x22
0000000000016988	ldr	x9, [x0]
000000000001698c	ldr	x10, [sp, #0x8]
0000000000016990	str	x10, [x9, #0x110]
0000000000016994	mov	x0, x8
0000000000016998	ldp	x29, x30, [sp, #0x50]
000000000001699c	ldp	x20, x19, [sp, #0x40]
00000000000169a0	ldp	x22, x21, [sp, #0x30]
00000000000169a4	ldp	x24, x23, [sp, #0x20]
00000000000169a8	add	sp, sp, #0x60
00000000000169ac	ret
_kfun:kotlin.collections.HashMap#hashCode(){}kotlin.Int:
00000000000169b0	sub	sp, sp, #0xb0
00000000000169b4	stp	x26, x25, [sp, #0x60]
00000000000169b8	stp	x24, x23, [sp, #0x70]
00000000000169bc	stp	x22, x21, [sp, #0x80]
00000000000169c0	stp	x20, x19, [sp, #0x90]
00000000000169c4	stp	x29, x30, [sp, #0xa0]
00000000000169c8	add	x29, sp, #0xa0
00000000000169cc	mov	x19, x0
00000000000169d0	movi.16b	v0, #0x0
00000000000169d4	stp	q0, q0, [sp]
00000000000169d8	mov	x8, sp
00000000000169dc	add	x20, x8, #0x18
00000000000169e0	adrp	x0, 82 ; 0x68000
00000000000169e4	add	x0, x0, #0xa00
00000000000169e8	ldr	x9, [x0]
00000000000169ec	blr	x9
00000000000169f0	ldr	x23, [x0]
00000000000169f4	ldr	x9, [x23, #0x110]
00000000000169f8	str	x8, [x23, #0x110]
00000000000169fc	mov	x8, #0x400000000
0000000000016a00	stp	x9, x8, [sp, #0x8]
0000000000016a04	adr	x24, #0x6be3f
0000000000016a08	nop
0000000000016a0c	ldarb	w8, [x24]
0000000000016a10	tbz	w8, #0x0, 0x16a18
0000000000016a14	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000016a18	mov	x0, x19
0000000000016a1c	mov	x1, x20
0000000000016a20	bl	"_kfun:kotlin.collections.HashMap#entriesIterator(){}kotlin.collections.HashMap.EntriesItr<1:0,1:1>"
0000000000016a24	mov	x20, x0
0000000000016a28	mov	w19, #0x0
0000000000016a2c	add	x25, sp, #0x20
0000000000016a30	mov	x26, #0x800000000
0000000000016a34	b	0x16a68
0000000000016a38	ldr	x8, [x0]
0000000000016a3c	and	x8, x8, #0xfffffffffffffffc
0000000000016a40	ldr	x8, [x8]
0000000000016a44	ldr	x8, [x8, #0x78]
0000000000016a48	blr	x8
0000000000016a4c	mov	x22, x0
0000000000016a50	mov	x0, x20
0000000000016a54	bl	"_kfun:kotlin.collections.HashMap.Itr#initNext(){}"
0000000000016a58	ldr	x8, [sp, #0x28]
0000000000016a5c	str	x8, [x23, #0x110]
0000000000016a60	eor	w8, w21, w22
0000000000016a64	add	w19, w19, w8
0000000000016a68	ldr	w8, [x20, #0x10]
0000000000016a6c	ldr	x9, [x20, #0x8]
0000000000016a70	ldr	w9, [x9, #0x44]
0000000000016a74	cmp	w8, w9
0000000000016a78	b.ge	0x16b4c
0000000000016a7c	ldarb	w8, [x24]
0000000000016a80	tbz	w8, #0x0, 0x16a88
0000000000016a84	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000016a88	movi.16b	v0, #0x0
0000000000016a8c	stp	q0, q0, [sp, #0x20]
0000000000016a90	stp	q0, q0, [sp, #0x40]
0000000000016a94	ldr	x8, [x23, #0x110]
0000000000016a98	str	x25, [x23, #0x110]
0000000000016a9c	stp	x8, x26, [sp, #0x28]
0000000000016aa0	ldr	w8, [x20, #0x10]
0000000000016aa4	ldr	x9, [x20, #0x8]
0000000000016aa8	ldr	w10, [x9, #0x44]
0000000000016aac	cmp	w8, w10
0000000000016ab0	b.ge	0x16b78
0000000000016ab4	add	w10, w8, #0x1
0000000000016ab8	stp	w10, w8, [x20, #0x10]
0000000000016abc	ldr	x8, [x9, #0x8]
0000000000016ac0	str	x8, [sp, #0x40]
0000000000016ac4	ldrsw	x9, [x20, #0x14]
0000000000016ac8	ldr	w10, [x8, #0x8]
0000000000016acc	cmp	w10, w9
0000000000016ad0	b.ls	0x16b74
0000000000016ad4	add	x8, x8, x9, lsl #3
0000000000016ad8	ldr	x0, [x8, #0x10]
0000000000016adc	str	x0, [sp, #0x48]
0000000000016ae0	cbz	x0, 0x16b10
0000000000016ae4	ldr	x8, [x0]
0000000000016ae8	and	x8, x8, #0xfffffffffffffffc
0000000000016aec	ldr	x8, [x8]
0000000000016af0	ldr	x8, [x8, #0x78]
0000000000016af4	blr	x8
0000000000016af8	mov	x21, x0
0000000000016afc	ldr	x8, [x20, #0x8]
0000000000016b00	ldr	x8, [x8, #0x10]
0000000000016b04	str	x8, [sp, #0x50]
0000000000016b08	cbnz	x8, 0x16b24
0000000000016b0c	b	0x16bb4
0000000000016b10	mov	w21, #0x0
0000000000016b14	ldr	x8, [x20, #0x8]
0000000000016b18	ldr	x8, [x8, #0x10]
0000000000016b1c	str	x8, [sp, #0x50]
0000000000016b20	cbz	x8, 0x16bb4
0000000000016b24	ldrsw	x9, [x20, #0x14]
0000000000016b28	ldr	w10, [x8, #0x8]
0000000000016b2c	cmp	w10, w9
0000000000016b30	b.ls	0x16b74
0000000000016b34	add	x8, x8, x9, lsl #3
0000000000016b38	ldr	x0, [x8, #0x10]
0000000000016b3c	str	x0, [sp, #0x58]
0000000000016b40	cbnz	x0, 0x16a38
0000000000016b44	mov	w22, #0x0
0000000000016b48	b	0x16a50
0000000000016b4c	ldr	x8, [sp, #0x8]
0000000000016b50	str	x8, [x23, #0x110]
0000000000016b54	mov	x0, x19
0000000000016b58	ldp	x29, x30, [sp, #0xa0]
0000000000016b5c	ldp	x20, x19, [sp, #0x90]
0000000000016b60	ldp	x22, x21, [sp, #0x80]
0000000000016b64	ldp	x24, x23, [sp, #0x70]
0000000000016b68	ldp	x26, x25, [sp, #0x60]
0000000000016b6c	add	sp, sp, #0xb0
0000000000016b70	ret
0000000000016b74	bl	_ThrowArrayIndexOutOfBoundsException
0000000000016b78	ldr	x8, [x23, #0x118]
0000000000016b7c	add	x0, x8, #0x70
0000000000016b80	mov	w1, #0x38
0000000000016b84	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000016b88	mov	x19, x0
0000000000016b8c	adr	x8, #0x3df14
0000000000016b90	nop
0000000000016b94	str	x8, [x19, #0x10]!
0000000000016b98	stur	xzr, [x19, #-0x8]
0000000000016b9c	str	x19, [sp, #0x38]
0000000000016ba0	mov	x0, x19
0000000000016ba4	mov	x1, #0x0
0000000000016ba8	bl	"_kfun:kotlin.Throwable#<init>(kotlin.String?;kotlin.Throwable?){}"
0000000000016bac	mov	x0, x19
0000000000016bb0	bl	_ThrowException
0000000000016bb4	bl	_ThrowNullPointerException
_kfun:kotlin.collections.HashMap#toString(){}kotlin.String:
0000000000016bb8	sub	sp, sp, #0x170
0000000000016bbc	stp	x28, x27, [sp, #0x110]
0000000000016bc0	stp	x26, x25, [sp, #0x120]
0000000000016bc4	stp	x24, x23, [sp, #0x130]
0000000000016bc8	stp	x22, x21, [sp, #0x140]
0000000000016bcc	stp	x20, x19, [sp, #0x150]
0000000000016bd0	stp	x29, x30, [sp, #0x160]
0000000000016bd4	add	x29, sp, #0x160
0000000000016bd8	str	x1, [sp]
0000000000016bdc	mov	x23, x0
0000000000016be0	add	x19, sp, #0x80
0000000000016be4	movi.16b	v0, #0x0
0000000000016be8	stp	q0, q0, [sp, #0x40]
0000000000016bec	stp	q0, q0, [sp, #0x60]
0000000000016bf0	add	x8, sp, #0x40
0000000000016bf4	add	x24, x8, #0x20
0000000000016bf8	add	x20, x8, #0x30
0000000000016bfc	add	x21, x8, #0x28
0000000000016c00	stp	xzr, xzr, [sp, #0x30]
0000000000016c04	adr	x9, #0x4178c
0000000000016c08	nop
0000000000016c0c	orr	x9, x9, #0x3
0000000000016c10	str	x9, [sp, #0x28]
0000000000016c14	adrp	x0, 82 ; 0x68000
0000000000016c18	add	x0, x0, #0xa00
0000000000016c1c	ldr	x9, [x0]
0000000000016c20	blr	x9
0000000000016c24	ldr	x22, [x0]
0000000000016c28	ldr	x9, [x22, #0x110]
0000000000016c2c	str	x8, [x22, #0x110]
0000000000016c30	mov	x8, #0x800000000
0000000000016c34	stp	x9, x8, [sp, #0x48]
0000000000016c38	adr	x8, #0x6bc0b
0000000000016c3c	nop
0000000000016c40	ldarb	w8, [x8]
0000000000016c44	tbz	w8, #0x0, 0x16c4c
0000000000016c48	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000016c4c	ldr	w8, [x23, #0x4c]
0000000000016c50	add	w8, w8, w8, lsl #1
0000000000016c54	add	w1, w8, #0x2
0000000000016c58	add	x8, sp, #0x28
0000000000016c5c	str	x8, [sp, #0x58]
0000000000016c60	add	x0, sp, #0x28
0000000000016c64	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
0000000000016c68	adr	x1, #0x4ab78
0000000000016c6c	nop
0000000000016c70	add	x0, sp, #0x28
0000000000016c74	mov	x2, x24
0000000000016c78	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000016c7c	mov	x0, x23
0000000000016c80	mov	x1, x21
0000000000016c84	bl	"_kfun:kotlin.collections.HashMap#entriesIterator(){}kotlin.collections.HashMap.EntriesItr<1:0,1:1>"
0000000000016c88	mov	x21, x0
0000000000016c8c	mov	w27, #0x0
0000000000016c90	add	x9, x19, #0x30
0000000000016c94	add	x8, x19, #0x38
0000000000016c98	stp	x8, x9, [sp, #0x18]
0000000000016c9c	add	x24, x19, #0x40
0000000000016ca0	add	x25, x19, #0x48
0000000000016ca4	add	x9, x19, #0x60
0000000000016ca8	add	x8, x19, #0x68
0000000000016cac	stp	x8, x9, [sp, #0x8]
0000000000016cb0	add	x28, x19, #0x70
0000000000016cb4	mov	x26, #0xf00000000
0000000000016cb8	b	0x16ce0
0000000000016cbc	mov	x1, #0x0
0000000000016cc0	add	x0, sp, #0x28
0000000000016cc4	mov	x2, x28
0000000000016cc8	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000016ccc	mov	x0, x21
0000000000016cd0	bl	"_kfun:kotlin.collections.HashMap.Itr#initNext(){}"
0000000000016cd4	ldr	x8, [sp, #0x88]
0000000000016cd8	str	x8, [x22, #0x110]
0000000000016cdc	add	w27, w27, #0x1
0000000000016ce0	ldr	w8, [x21, #0x10]
0000000000016ce4	ldr	x9, [x21, #0x8]
0000000000016ce8	ldr	w9, [x9, #0x44]
0000000000016cec	cmp	w8, w9
0000000000016cf0	b.ge	0x16e8c
0000000000016cf4	adr	x8, #0x6bb4f
0000000000016cf8	nop
0000000000016cfc	ldarb	w8, [x8]
0000000000016d00	tbz	w8, #0x0, 0x16d08
0000000000016d04	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000016d08	cmp	w27, #0x1
0000000000016d0c	b.lt	0x16d24
0000000000016d10	add	x0, sp, #0x28
0000000000016d14	adr	x1, #0x4a3ac
0000000000016d18	nop
0000000000016d1c	mov	x2, x20
0000000000016d20	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000016d24	movi.16b	v0, #0x0
0000000000016d28	stp	q0, q0, [sp, #0x80]
0000000000016d2c	str	xzr, [sp, #0xf0]
0000000000016d30	stp	q0, q0, [x19, #0x50]
0000000000016d34	stp	q0, q0, [x19, #0x30]
0000000000016d38	str	q0, [sp, #0xa0]
0000000000016d3c	ldr	x8, [x22, #0x110]
0000000000016d40	str	x19, [x22, #0x110]
0000000000016d44	stp	x8, x26, [sp, #0x88]
0000000000016d48	ldr	w8, [x21, #0x10]
0000000000016d4c	ldr	x9, [x21, #0x8]
0000000000016d50	ldr	w10, [x9, #0x44]
0000000000016d54	cmp	w8, w10
0000000000016d58	b.ge	0x16ee4
0000000000016d5c	add	w10, w8, #0x1
0000000000016d60	stp	w10, w8, [x21, #0x10]
0000000000016d64	ldr	x8, [x9, #0x8]
0000000000016d68	str	x8, [sp, #0xa0]
0000000000016d6c	ldrsw	x9, [x21, #0x14]
0000000000016d70	ldr	w10, [x8, #0x8]
0000000000016d74	cmp	w10, w9
0000000000016d78	b.ls	0x16ee0
0000000000016d7c	add	x8, x8, x9, lsl #3
0000000000016d80	ldr	x23, [x8, #0x10]
0000000000016d84	str	x23, [sp, #0xa8]
0000000000016d88	cbz	x23, 0x16dc0
0000000000016d8c	ldr	x1, [x21, #0x8]
0000000000016d90	ldr	x8, [x23]
0000000000016d94	and	x8, x8, #0xfffffffffffffffc
0000000000016d98	ldr	x8, [x8]
0000000000016d9c	ldr	x8, [x8, #0x70]
0000000000016da0	mov	x0, x23
0000000000016da4	blr	x8
0000000000016da8	cbz	w0, 0x16dc8
0000000000016dac	add	x0, sp, #0x28
0000000000016db0	adr	x1, #0x4aa70
0000000000016db4	nop
0000000000016db8	ldr	x2, [sp, #0x20]
0000000000016dbc	b	0x16df0
0000000000016dc0	mov	x1, #0x0
0000000000016dc4	b	0x16de8
0000000000016dc8	ldr	x8, [x23]
0000000000016dcc	and	x8, x8, #0xfffffffffffffffc
0000000000016dd0	ldr	x8, [x8]
0000000000016dd4	ldr	x8, [x8, #0x80]
0000000000016dd8	mov	x0, x23
0000000000016ddc	ldr	x1, [sp, #0x18]
0000000000016de0	blr	x8
0000000000016de4	mov	x1, x0
0000000000016de8	add	x0, sp, #0x28
0000000000016dec	mov	x2, x24
0000000000016df0	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000016df4	add	x0, sp, #0x28
0000000000016df8	mov	w1, #0x3d
0000000000016dfc	mov	x2, x25
0000000000016e00	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Char){}kotlin.text.StringBuilder"
0000000000016e04	ldr	x8, [x21, #0x8]
0000000000016e08	ldr	x8, [x8, #0x10]
0000000000016e0c	str	x8, [sp, #0xd0]
0000000000016e10	cbz	x8, 0x16f20
0000000000016e14	ldrsw	x9, [x21, #0x14]
0000000000016e18	ldr	w10, [x8, #0x8]
0000000000016e1c	cmp	w10, w9
0000000000016e20	b.ls	0x16ee0
0000000000016e24	add	x8, x8, x9, lsl #3
0000000000016e28	ldr	x23, [x8, #0x10]
0000000000016e2c	str	x23, [sp, #0xd8]
0000000000016e30	cbz	x23, 0x16cbc
0000000000016e34	ldr	x1, [x21, #0x8]
0000000000016e38	ldr	x8, [x23]
0000000000016e3c	and	x8, x8, #0xfffffffffffffffc
0000000000016e40	ldr	x8, [x8]
0000000000016e44	ldr	x8, [x8, #0x70]
0000000000016e48	mov	x0, x23
0000000000016e4c	blr	x8
0000000000016e50	cbz	w0, 0x16e68
0000000000016e54	add	x0, sp, #0x28
0000000000016e58	adr	x1, #0x4a9c8
0000000000016e5c	nop
0000000000016e60	ldr	x2, [sp, #0x10]
0000000000016e64	b	0x16cc8
0000000000016e68	ldr	x8, [x23]
0000000000016e6c	and	x8, x8, #0xfffffffffffffffc
0000000000016e70	ldr	x8, [x8]
0000000000016e74	ldr	x8, [x8, #0x80]
0000000000016e78	mov	x0, x23
0000000000016e7c	ldr	x1, [sp, #0x8]
0000000000016e80	blr	x8
0000000000016e84	mov	x1, x0
0000000000016e88	b	0x16cc0
0000000000016e8c	add	x8, sp, #0x40
0000000000016e90	add	x2, x8, #0x38
0000000000016e94	adr	x1, #0x4a96c
0000000000016e98	nop
0000000000016e9c	add	x0, sp, #0x28
0000000000016ea0	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000016ea4	add	x0, sp, #0x28
0000000000016ea8	ldr	x19, [sp]
0000000000016eac	mov	x1, x19
0000000000016eb0	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
0000000000016eb4	str	x0, [x19]
0000000000016eb8	ldr	x8, [sp, #0x48]
0000000000016ebc	str	x8, [x22, #0x110]
0000000000016ec0	ldp	x29, x30, [sp, #0x160]
0000000000016ec4	ldp	x20, x19, [sp, #0x150]
0000000000016ec8	ldp	x22, x21, [sp, #0x140]
0000000000016ecc	ldp	x24, x23, [sp, #0x130]
0000000000016ed0	ldp	x26, x25, [sp, #0x120]
0000000000016ed4	ldp	x28, x27, [sp, #0x110]
0000000000016ed8	add	sp, sp, #0x170
0000000000016edc	ret
0000000000016ee0	bl	_ThrowArrayIndexOutOfBoundsException
0000000000016ee4	ldr	x8, [x22, #0x118]
0000000000016ee8	add	x0, x8, #0x70
0000000000016eec	mov	w1, #0x38
0000000000016ef0	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000016ef4	mov	x19, x0
0000000000016ef8	adr	x8, #0x3dba8
0000000000016efc	nop
0000000000016f00	str	x8, [x19, #0x10]!
0000000000016f04	stur	xzr, [x19, #-0x8]
0000000000016f08	str	x19, [sp, #0x98]
0000000000016f0c	mov	x0, x19
0000000000016f10	mov	x1, #0x0
0000000000016f14	bl	"_kfun:kotlin.Throwable#<init>(kotlin.String?;kotlin.Throwable?){}"
0000000000016f18	mov	x0, x19
0000000000016f1c	bl	_ThrowException
0000000000016f20	bl	_ThrowNullPointerException
_kfun:kotlin.collections.HashMap#checkIsMutable(){}:
0000000000016f24	sub	sp, sp, #0x40
0000000000016f28	stp	x20, x19, [sp, #0x20]
0000000000016f2c	stp	x29, x30, [sp, #0x30]
0000000000016f30	add	x29, sp, #0x30
0000000000016f34	mov	x19, x0
0000000000016f38	movi.16b	v0, #0x0
0000000000016f3c	stp	q0, q0, [sp]
0000000000016f40	adrp	x0, 82 ; 0x68000
0000000000016f44	add	x0, x0, #0xa00
0000000000016f48	ldr	x8, [x0]
0000000000016f4c	blr	x8
0000000000016f50	ldr	x20, [x0]
0000000000016f54	ldr	x8, [x20, #0x110]
0000000000016f58	mov	x9, sp
0000000000016f5c	str	x9, [x20, #0x110]
0000000000016f60	mov	x9, #0x400000000
0000000000016f64	stp	x8, x9, [sp, #0x8]
0000000000016f68	adr	x8, #0x6b8db
0000000000016f6c	nop
0000000000016f70	ldarb	w8, [x8]
0000000000016f74	tbz	w8, #0x0, 0x16f7c
0000000000016f78	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000016f7c	ldrb	w8, [x19, #0x50]
0000000000016f80	cmp	w8, #0x1
0000000000016f84	b.eq	0x16fa0
0000000000016f88	ldr	x8, [sp, #0x8]
0000000000016f8c	str	x8, [x20, #0x110]
0000000000016f90	ldp	x29, x30, [sp, #0x30]
0000000000016f94	ldp	x20, x19, [sp, #0x20]
0000000000016f98	add	sp, sp, #0x40
0000000000016f9c	ret
0000000000016fa0	ldr	x8, [x20, #0x118]
0000000000016fa4	add	x0, x8, #0x70
0000000000016fa8	mov	w1, #0x38
0000000000016fac	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000016fb0	mov	x19, x0
0000000000016fb4	adr	x8, #0x3de0c
0000000000016fb8	nop
0000000000016fbc	str	x8, [x19, #0x10]!
0000000000016fc0	stur	xzr, [x19, #-0x8]
0000000000016fc4	str	x19, [sp, #0x18]
0000000000016fc8	mov	x0, x19
0000000000016fcc	mov	x1, #0x0
0000000000016fd0	bl	"_kfun:kotlin.Throwable#<init>(kotlin.String?;kotlin.Throwable?){}"
0000000000016fd4	mov	x0, x19
0000000000016fd8	bl	_ThrowException
_kfun:kotlin.collections.HashMap.ensureExtraCapacity#internal:
0000000000016fdc	sub	sp, sp, #0xb0
0000000000016fe0	stp	x24, x23, [sp, #0x70]
0000000000016fe4	stp	x22, x21, [sp, #0x80]
0000000000016fe8	stp	x20, x19, [sp, #0x90]
0000000000016fec	stp	x29, x30, [sp, #0xa0]
0000000000016ff0	add	x29, sp, #0xa0
0000000000016ff4	mov	x20, x1
0000000000016ff8	mov	x19, x0
0000000000016ffc	adr	x8, #0x6b847
0000000000017000	nop
0000000000017004	ldarb	w8, [x8]
0000000000017008	tbz	w8, #0x0, 0x17010
000000000001700c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000017010	ldr	w8, [x19, #0x44]
0000000000017014	add	w8, w8, w20
0000000000017018	movi.16b	v0, #0x0
000000000001701c	stp	q0, q0, [sp]
0000000000017020	stp	q0, q0, [sp, #0x30]
0000000000017024	str	q0, [sp, #0x20]
0000000000017028	mov	x24, sp
000000000001702c	adrp	x20, 81 ; 0x68000
0000000000017030	add	x20, x20, #0xa00
0000000000017034	ldr	x23, [x20]
0000000000017038	mov	x0, x20
000000000001703c	blr	x23
0000000000017040	ldr	x9, [x0]
0000000000017044	ldr	x10, [x9, #0x110]
0000000000017048	str	x24, [x9, #0x110]
000000000001704c	mov	x9, #0xa00000000
0000000000017050	stp	x10, x9, [sp, #0x8]
0000000000017054	tbnz	w8, #0x1f, 0x171f8
0000000000017058	stp	q0, q0, [sp, #0x50]
000000000001705c	mov	x0, x20
0000000000017060	blr	x23
0000000000017064	ldr	x10, [x0]
0000000000017068	ldr	x9, [x10, #0x110]
000000000001706c	add	x11, sp, #0x50
0000000000017070	str	x11, [x10, #0x110]
0000000000017074	ldr	x12, [x19, #0x8]
0000000000017078	ldr	w12, [x12, #0x8]
000000000001707c	str	x9, [x10, #0x110]
0000000000017080	cmp	w12, w8
0000000000017084	b.ge	0x17164
0000000000017088	add	x2, x24, #0x28
000000000001708c	add	x21, x24, #0x48
0000000000017090	movi.16b	v0, #0x0
0000000000017094	stp	q0, q0, [sp, #0x50]
0000000000017098	str	x11, [x10, #0x110]
000000000001709c	ldr	x10, [x19, #0x8]
00000000000170a0	ldr	w10, [x10, #0x8]
00000000000170a4	mov	x0, x20
00000000000170a8	blr	x23
00000000000170ac	ldr	x11, [x0]
00000000000170b0	str	x9, [x11, #0x110]
00000000000170b4	add	w9, w10, w10, lsl #1
00000000000170b8	cmp	w9, #0x0
00000000000170bc	cinc	w9, w9, lt
00000000000170c0	asr	w9, w9, #1
00000000000170c4	cmp	w9, w8
00000000000170c8	csel	w22, w8, w9, lt
00000000000170cc	ldr	x0, [x19, #0x8]
00000000000170d0	str	x0, [sp, #0x20]
00000000000170d4	mov	x1, x22
00000000000170d8	bl	"_kfun:kotlin.collections#copyOfUninitializedElements__at__kotlin.Array<0:0>(kotlin.Int;kotlin.Int){0ยง<kotlin.Any?>}kotlin.Array<0:0>"
00000000000170dc	mov	x8, x0
00000000000170e0	str	x0, [x19, #0x8]
00000000000170e4	ldr	x0, [x19, #0x10]
00000000000170e8	stp	x8, x0, [sp, #0x28]
00000000000170ec	cbz	x0, 0x17100
00000000000170f0	add	x2, x24, #0x38
00000000000170f4	mov	x1, x22
00000000000170f8	bl	"_kfun:kotlin.collections#copyOfUninitializedElements__at__kotlin.Array<0:0>(kotlin.Int;kotlin.Int){0ยง<kotlin.Any?>}kotlin.Array<0:0>"
00000000000170fc	str	x0, [sp, #0x38]
0000000000017100	str	x0, [x19, #0x10]
0000000000017104	ldr	x0, [x19, #0x18]
0000000000017108	str	x0, [sp, #0x40]
000000000001710c	mov	x1, x22
0000000000017110	mov	x2, x21
0000000000017114	bl	"_kfun:kotlin.collections#copyOfUninitializedElements__at__kotlin.IntArray(kotlin.Int;kotlin.Int){}kotlin.IntArray"
0000000000017118	str	x0, [sp, #0x48]
000000000001711c	str	x0, [x19, #0x18]
0000000000017120	mov	x0, x22
0000000000017124	bl	"_kfun:kotlin.collections.HashMap.Companion.computeHashSize#internal"
0000000000017128	mov	x1, x0
000000000001712c	movi.16b	v0, #0x0
0000000000017130	stp	q0, q0, [sp, #0x50]
0000000000017134	mov	x0, x20
0000000000017138	blr	x23
000000000001713c	ldr	x8, [x0]
0000000000017140	ldr	x9, [x8, #0x110]
0000000000017144	add	x10, sp, #0x50
0000000000017148	str	x10, [x8, #0x110]
000000000001714c	ldr	x10, [x19, #0x20]
0000000000017150	ldr	w10, [x10, #0x8]
0000000000017154	str	x9, [x8, #0x110]
0000000000017158	cmp	w1, w10
000000000001715c	b.gt	0x171c4
0000000000017160	b	0x171cc
0000000000017164	ldr	w12, [x19, #0x44]
0000000000017168	ldr	w13, [x19, #0x4c]
000000000001716c	movi.16b	v0, #0x0
0000000000017170	stp	q0, q0, [sp, #0x50]
0000000000017174	str	x11, [x10, #0x110]
0000000000017178	ldr	x10, [x19, #0x8]
000000000001717c	ldr	w11, [x10, #0x8]
0000000000017180	mov	x0, x20
0000000000017184	blr	x23
0000000000017188	ldr	x10, [x0]
000000000001718c	str	x9, [x10, #0x110]
0000000000017190	add	w8, w12, w8
0000000000017194	sub	w8, w8, w13
0000000000017198	cmp	w8, w11
000000000001719c	b.le	0x171cc
00000000000171a0	stp	q0, q0, [sp, #0x50]
00000000000171a4	add	x8, sp, #0x50
00000000000171a8	str	x8, [x10, #0x110]
00000000000171ac	ldr	x8, [x19, #0x20]
00000000000171b0	ldr	w1, [x8, #0x8]
00000000000171b4	mov	x0, x20
00000000000171b8	blr	x23
00000000000171bc	ldr	x8, [x0]
00000000000171c0	str	x9, [x8, #0x110]
00000000000171c4	mov	x0, x19
00000000000171c8	bl	"_kfun:kotlin.collections.HashMap.rehash#internal"
00000000000171cc	mov	x0, x20
00000000000171d0	blr	x23
00000000000171d4	ldr	x8, [x0]
00000000000171d8	ldr	x9, [sp, #0x8]
00000000000171dc	str	x9, [x8, #0x110]
00000000000171e0	ldp	x29, x30, [sp, #0xa0]
00000000000171e4	ldp	x20, x19, [sp, #0x90]
00000000000171e8	ldp	x22, x21, [sp, #0x80]
00000000000171ec	ldp	x24, x23, [sp, #0x70]
00000000000171f0	add	sp, sp, #0xb0
00000000000171f4	ret
00000000000171f8	mov	x0, x20
00000000000171fc	blr	x23
0000000000017200	ldr	x8, [x0]
0000000000017204	ldr	x8, [x8, #0x118]
0000000000017208	add	x0, x8, #0x70
000000000001720c	mov	w1, #0x38
0000000000017210	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000017214	mov	x19, x0
0000000000017218	adr	x8, #0x3dec8
000000000001721c	nop
0000000000017220	str	x8, [x19, #0x10]!
0000000000017224	stur	xzr, [x19, #-0x8]
0000000000017228	str	x19, [sp, #0x18]
000000000001722c	mov	x0, x19
0000000000017230	mov	x1, #0x0
0000000000017234	bl	"_kfun:kotlin.Throwable#<init>(kotlin.String?;kotlin.Throwable?){}"
0000000000017238	mov	x0, x19
000000000001723c	bl	_ThrowException
_kfun:kotlin.collections.HashMap.allocateValuesArray#internal:
0000000000017240	sub	sp, sp, #0x80
0000000000017244	stp	x22, x21, [sp, #0x50]
0000000000017248	stp	x20, x19, [sp, #0x60]
000000000001724c	stp	x29, x30, [sp, #0x70]
0000000000017250	add	x29, sp, #0x70
0000000000017254	mov	x19, x1
0000000000017258	mov	x20, x0
000000000001725c	movi.16b	v0, #0x0
0000000000017260	stp	q0, q0, [sp]
0000000000017264	str	q0, [sp, #0x20]
0000000000017268	adrp	x0, 81 ; 0x68000
000000000001726c	add	x0, x0, #0xa00
0000000000017270	ldr	x8, [x0]
0000000000017274	blr	x8
0000000000017278	ldr	x21, [x0]
000000000001727c	ldr	x8, [x21, #0x110]
0000000000017280	mov	x9, sp
0000000000017284	str	x9, [x21, #0x110]
0000000000017288	mov	x9, #0x600000000
000000000001728c	stp	x8, x9, [sp, #0x8]
0000000000017290	adr	x8, #0x6b5b3
0000000000017294	nop
0000000000017298	ldarb	w8, [x8]
000000000001729c	tbz	w8, #0x0, 0x172a4
00000000000172a0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000172a4	ldr	x0, [x20, #0x10]
00000000000172a8	str	x0, [sp, #0x18]
00000000000172ac	cbnz	x0, 0x17308
00000000000172b0	movi.16b	v0, #0x0
00000000000172b4	stp	q0, q0, [sp, #0x30]
00000000000172b8	ldr	x8, [x21, #0x110]
00000000000172bc	add	x9, sp, #0x30
00000000000172c0	str	x9, [x21, #0x110]
00000000000172c4	ldr	x9, [x20, #0x8]
00000000000172c8	ldr	w22, [x9, #0x8]
00000000000172cc	str	x8, [x21, #0x110]
00000000000172d0	tbnz	w22, #0x1f, 0x17328
00000000000172d4	ldr	x8, [x21, #0x118]
00000000000172d8	lsl	x9, x22, #3
00000000000172dc	add	x9, x9, #0x1f
00000000000172e0	and	x1, x9, #0xffffffff8
00000000000172e4	add	x0, x8, #0x70
00000000000172e8	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000172ec	adr	x8, #0x3d2f4
00000000000172f0	nop
00000000000172f4	stp	x8, xzr, [x0, #0x10]!
00000000000172f8	stur	xzr, [x0, #-0x8]
00000000000172fc	str	w22, [x0, #0x8]
0000000000017300	str	x0, [sp, #0x28]
0000000000017304	str	x0, [x20, #0x10]
0000000000017308	str	x0, [x19]
000000000001730c	ldr	x8, [sp, #0x8]
0000000000017310	str	x8, [x21, #0x110]
0000000000017314	ldp	x29, x30, [sp, #0x70]
0000000000017318	ldp	x20, x19, [sp, #0x60]
000000000001731c	ldp	x22, x21, [sp, #0x50]
0000000000017320	add	sp, sp, #0x80
0000000000017324	ret
0000000000017328	ldr	x8, [x21, #0x118]
000000000001732c	add	x0, x8, #0x70
0000000000017330	mov	w1, #0x38
0000000000017334	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000017338	mov	x19, x0
000000000001733c	adr	x8, #0x3d944
0000000000017340	nop
0000000000017344	str	x8, [x19, #0x10]!
0000000000017348	stur	xzr, [x19, #-0x8]
000000000001734c	str	x19, [sp, #0x20]
0000000000017350	adr	x1, #0x49df0
0000000000017354	nop
0000000000017358	mov	x0, x19
000000000001735c	bl	"_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}"
0000000000017360	mov	x0, x19
0000000000017364	bl	_ThrowException
_kfun:kotlin.collections.HashMap.rehash#internal:
0000000000017368	sub	sp, sp, #0x110
000000000001736c	stp	x28, x27, [sp, #0xb0]
0000000000017370	stp	x26, x25, [sp, #0xc0]
0000000000017374	stp	x24, x23, [sp, #0xd0]
0000000000017378	stp	x22, x21, [sp, #0xe0]
000000000001737c	stp	x20, x19, [sp, #0xf0]
0000000000017380	stp	x29, x30, [sp, #0x100]
0000000000017384	add	x29, sp, #0x100
0000000000017388	mov	x20, x1
000000000001738c	mov	x19, x0
0000000000017390	movi.16b	v0, #0x0
0000000000017394	stp	q0, q0, [sp]
0000000000017398	str	q0, [sp, #0x20]
000000000001739c	adrp	x0, 81 ; 0x68000
00000000000173a0	add	x0, x0, #0xa00
00000000000173a4	ldr	x8, [x0]
00000000000173a8	blr	x8
00000000000173ac	ldr	x23, [x0]
00000000000173b0	ldr	x8, [x23, #0x110]
00000000000173b4	mov	x9, sp
00000000000173b8	str	x9, [x23, #0x110]
00000000000173bc	mov	x9, #0x600000000
00000000000173c0	stp	x8, x9, [sp, #0x8]
00000000000173c4	adr	x24, #0x6b47f
00000000000173c8	nop
00000000000173cc	ldarb	w8, [x24]
00000000000173d0	tbz	w8, #0x0, 0x173d8
00000000000173d4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000173d8	ldr	w8, [x19, #0x44]
00000000000173dc	ldr	w9, [x19, #0x4c]
00000000000173e0	cmp	w8, w9
00000000000173e4	b.le	0x174cc
00000000000173e8	mov	x25, #0x0
00000000000173ec	mov	w21, #0x0
00000000000173f0	movi.16b	v0, #0x0
00000000000173f4	stp	q0, q0, [sp, #0x30]
00000000000173f8	stp	q0, q0, [sp, #0x60]
00000000000173fc	str	q0, [sp, #0x50]
0000000000017400	ldr	x8, [x23, #0x110]
0000000000017404	add	x9, sp, #0x30
0000000000017408	str	x9, [x23, #0x110]
000000000001740c	mov	x9, #0xa00000000
0000000000017410	stp	x8, x9, [sp, #0x38]
0000000000017414	ldr	x22, [x19, #0x10]
0000000000017418	str	x22, [sp, #0x48]
000000000001741c	add	x26, x22, #0x10
0000000000017420	b	0x1742c
0000000000017424	add	w21, w21, #0x1
0000000000017428	add	x25, x25, #0x1
000000000001742c	ldrsw	x2, [x19, #0x44]
0000000000017430	cmp	x25, x2
0000000000017434	b.ge	0x174d4
0000000000017438	ldarb	w8, [x24]
000000000001743c	tbz	w8, #0x0, 0x17444
0000000000017440	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000017444	ldr	x8, [x19, #0x18]
0000000000017448	str	x8, [sp, #0x50]
000000000001744c	ldr	w9, [x8, #0x8]
0000000000017450	cmp	x25, x9
0000000000017454	b.hs	0x17774
0000000000017458	add	x8, x8, x25, lsl #2
000000000001745c	ldr	w8, [x8, #0x10]
0000000000017460	tbnz	w8, #0x1f, 0x17428
0000000000017464	ldr	x8, [x19, #0x8]
0000000000017468	stp	x8, x8, [sp, #0x58]
000000000001746c	ldr	w9, [x8, #0x8]
0000000000017470	cmp	x25, x9
0000000000017474	b.hs	0x17774
0000000000017478	add	x10, x8, x25, lsl #3
000000000001747c	ldr	x10, [x10, #0x10]
0000000000017480	str	x10, [sp, #0x68]
0000000000017484	cmp	w9, w21
0000000000017488	b.ls	0x17774
000000000001748c	add	x9, x8, #0x10
0000000000017490	ldr	xzr, [x8]
0000000000017494	str	x10, [x9, w21, sxtw #3]
0000000000017498	cbz	x22, 0x17424
000000000001749c	ldr	w8, [x22, #0x8]
00000000000174a0	cmp	x25, x8
00000000000174a4	b.hs	0x17774
00000000000174a8	add	x9, x22, x25, lsl #3
00000000000174ac	ldr	x9, [x9, #0x10]
00000000000174b0	str	x9, [sp, #0x70]
00000000000174b4	cmp	w8, w21
00000000000174b8	b.ls	0x17774
00000000000174bc	sxtw	x8, w21
00000000000174c0	ldr	xzr, [x22]
00000000000174c4	str	x9, [x26, x8, lsl #3]
00000000000174c8	b	0x17424
00000000000174cc	ldr	x8, [x23, #0x110]
00000000000174d0	b	0x17504
00000000000174d4	ldr	x0, [x19, #0x8]
00000000000174d8	str	x0, [sp, #0x78]
00000000000174dc	mov	x1, x21
00000000000174e0	bl	"_kfun:kotlin.collections#resetRange__at__kotlin.Array<0:0>(kotlin.Int;kotlin.Int){0ยง<kotlin.Any?>}"
00000000000174e4	cbz	x22, 0x174f8
00000000000174e8	ldr	w2, [x19, #0x44]
00000000000174ec	mov	x0, x22
00000000000174f0	mov	x1, x21
00000000000174f4	bl	"_kfun:kotlin.collections#resetRange__at__kotlin.Array<0:0>(kotlin.Int;kotlin.Int){0ยง<kotlin.Any?>}"
00000000000174f8	str	w21, [x19, #0x44]
00000000000174fc	ldr	x8, [sp, #0x38]
0000000000017500	str	x8, [x23, #0x110]
0000000000017504	movi.16b	v0, #0x0
0000000000017508	stp	q0, q0, [sp, #0x80]
000000000001750c	add	x9, sp, #0x80
0000000000017510	str	x9, [x23, #0x110]
0000000000017514	ldr	x10, [x19, #0x20]
0000000000017518	ldr	w10, [x10, #0x8]
000000000001751c	str	x8, [x23, #0x110]
0000000000017520	cmp	w10, w20
0000000000017524	b.ne	0x17574
0000000000017528	ldr	x21, [x19, #0x20]
000000000001752c	str	x21, [sp, #0x20]
0000000000017530	stp	q0, q0, [sp, #0x80]
0000000000017534	str	x9, [x23, #0x110]
0000000000017538	ldr	x9, [x19, #0x20]
000000000001753c	ldr	w20, [x9, #0x8]
0000000000017540	str	x8, [x23, #0x110]
0000000000017544	ldr	w2, [x21, #0x8]
0000000000017548	mov	w0, #0x0
000000000001754c	mov	x1, x20
0000000000017550	bl	_checkRangeIndexes
0000000000017554	ldr	xzr, [x21]
0000000000017558	subs	w9, w20, #0x1
000000000001755c	b.lt	0x17604
0000000000017560	add	x8, x21, #0x10
0000000000017564	cmp	w9, #0x7
0000000000017568	b.hs	0x175c8
000000000001756c	mov	w9, #0x0
0000000000017570	b	0x175f4
0000000000017574	tbnz	w20, #0x1f, 0x177c0
0000000000017578	ldr	x8, [x23, #0x118]
000000000001757c	mov	w9, w20
0000000000017580	lsl	x9, x9, #2
0000000000017584	add	x9, x9, #0x1f
0000000000017588	and	x1, x9, #0x7fffffff8
000000000001758c	add	x0, x8, #0x70
0000000000017590	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000017594	adr	x8, #0x3d16c
0000000000017598	nop
000000000001759c	stp	x8, xzr, [x0, #0x10]!
00000000000175a0	stur	xzr, [x0, #-0x8]
00000000000175a4	str	w20, [x0, #0x8]
00000000000175a8	str	x0, [sp, #0x18]
00000000000175ac	str	x0, [x19, #0x20]
00000000000175b0	clz	w8, w20
00000000000175b4	cmp	w20, #0x0
00000000000175b8	mov	w9, #0x21
00000000000175bc	csinc	w8, w9, w8, eq
00000000000175c0	str	w8, [x19, #0x48]
00000000000175c4	b	0x17604
00000000000175c8	add	x10, x9, #0x1
00000000000175cc	and	x9, x10, #0x1fffffff8
00000000000175d0	movi.16b	v0, #0x0
00000000000175d4	mov	x11, x8
00000000000175d8	mov	x12, x9
00000000000175dc	stp	q0, q0, [x11], #0x20
00000000000175e0	subs	x12, x12, #0x8
00000000000175e4	b.ne	0x175dc
00000000000175e8	cmp	x10, x9
00000000000175ec	b.eq	0x17604
00000000000175f0	add	x8, x8, x9, lsl #2
00000000000175f4	sub	w9, w20, w9
00000000000175f8	str	wzr, [x8], #0x4
00000000000175fc	subs	w9, w9, #0x1
0000000000017600	b.ne	0x175f8
0000000000017604	mov	x21, #0x0
0000000000017608	add	x20, sp, #0x30
000000000001760c	mov	x22, #0x800000000
0000000000017610	add	x25, sp, #0x80
0000000000017614	ldrsw	x8, [x19, #0x44]
0000000000017618	cmp	x21, x8
000000000001761c	b.ge	0x1774c
0000000000017620	ldarb	w8, [x24]
0000000000017624	tbz	w8, #0x0, 0x1762c
0000000000017628	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001762c	movi.16b	v0, #0x0
0000000000017630	stp	q0, q0, [sp, #0x30]
0000000000017634	stp	q0, q0, [sp, #0x50]
0000000000017638	ldr	x8, [x23, #0x110]
000000000001763c	str	x20, [x23, #0x110]
0000000000017640	stp	x8, x22, [sp, #0x38]
0000000000017644	ldr	x8, [x19, #0x8]
0000000000017648	str	x8, [sp, #0x48]
000000000001764c	ldr	w9, [x8, #0x8]
0000000000017650	cmp	x21, x9
0000000000017654	b.hs	0x17774
0000000000017658	add	x8, x8, x21, lsl #3
000000000001765c	ldr	x0, [x8, #0x10]
0000000000017660	str	x0, [sp, #0x50]
0000000000017664	cbz	x0, 0x17694
0000000000017668	ldr	x8, [x0]
000000000001766c	and	x8, x8, #0xfffffffffffffffc
0000000000017670	ldr	x8, [x8]
0000000000017674	ldr	x8, [x8, #0x78]
0000000000017678	blr	x8
000000000001767c	mov	w8, #0x79b9
0000000000017680	movk	w8, #0x9e37, lsl #16
0000000000017684	mul	w8, w0, w8
0000000000017688	ldr	w9, [x19, #0x48]
000000000001768c	lsr	w28, w8, w9
0000000000017690	b	0x17698
0000000000017694	mov	w28, #0x0
0000000000017698	add	x27, x21, #0x1
000000000001769c	ldr	w8, [x19, #0x40]
00000000000176a0	sub	w26, w8, #0x1
00000000000176a4	b	0x176b0
00000000000176a8	sub	w28, w28, #0x1
00000000000176ac	sub	w26, w26, #0x1
00000000000176b0	ldarb	w8, [x24]
00000000000176b4	tbz	w8, #0x0, 0x176bc
00000000000176b8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000176bc	ldr	x8, [x19, #0x20]
00000000000176c0	str	x8, [sp, #0x58]
00000000000176c4	ldr	w9, [x8, #0x8]
00000000000176c8	cmp	w9, w28
00000000000176cc	b.ls	0x17774
00000000000176d0	add	x9, x8, #0x10
00000000000176d4	ldr	w10, [x9, w28, sxtw #2]
00000000000176d8	cbz	w10, 0x17704
00000000000176dc	tbnz	w26, #0x1f, 0x17778
00000000000176e0	cbnz	w28, 0x176a8
00000000000176e4	movi.16b	v0, #0x0
00000000000176e8	stp	q0, q0, [sp, #0x80]
00000000000176ec	ldr	x8, [x23, #0x110]
00000000000176f0	str	x25, [x23, #0x110]
00000000000176f4	ldr	x9, [x19, #0x20]
00000000000176f8	ldr	w28, [x9, #0x8]
00000000000176fc	str	x8, [x23, #0x110]
0000000000017700	b	0x176a8
0000000000017704	sxtw	x10, w28
0000000000017708	str	x8, [sp, #0x60]
000000000001770c	ldr	xzr, [x8]
0000000000017710	str	w27, [x9, x10, lsl #2]
0000000000017714	ldr	x8, [x19, #0x18]
0000000000017718	str	x8, [sp, #0x68]
000000000001771c	ldr	w9, [x8, #0x8]
0000000000017720	cmp	x21, x9
0000000000017724	b.hs	0x17774
0000000000017728	ldr	xzr, [x8]
000000000001772c	add	x8, x8, x21, lsl #2
0000000000017730	str	w28, [x8, #0x10]
0000000000017734	ldr	x8, [sp, #0x38]
0000000000017738	str	x8, [x23, #0x110]
000000000001773c	mov	x21, x27
0000000000017740	ldrsw	x8, [x19, #0x44]
0000000000017744	cmp	x21, x8
0000000000017748	b.lt	0x17620
000000000001774c	ldr	x8, [sp, #0x8]
0000000000017750	str	x8, [x23, #0x110]
0000000000017754	ldp	x29, x30, [sp, #0x100]
0000000000017758	ldp	x20, x19, [sp, #0xf0]
000000000001775c	ldp	x22, x21, [sp, #0xe0]
0000000000017760	ldp	x24, x23, [sp, #0xd0]
0000000000017764	ldp	x26, x25, [sp, #0xc0]
0000000000017768	ldp	x28, x27, [sp, #0xb0]
000000000001776c	add	sp, sp, #0x110
0000000000017770	ret
0000000000017774	bl	_ThrowArrayIndexOutOfBoundsException
0000000000017778	ldr	x8, [sp, #0x38]
000000000001777c	str	x8, [x23, #0x110]
0000000000017780	ldr	x8, [x23, #0x118]
0000000000017784	add	x0, x8, #0x70
0000000000017788	mov	w1, #0x38
000000000001778c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000017790	mov	x19, x0
0000000000017794	adr	x8, #0x3d58c
0000000000017798	nop
000000000001779c	str	x8, [x19, #0x10]!
00000000000177a0	stur	xzr, [x19, #-0x8]
00000000000177a4	str	x19, [sp, #0x28]
00000000000177a8	adr	x1, #0x4a3d8
00000000000177ac	nop
00000000000177b0	mov	x0, x19
00000000000177b4	bl	"_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}"
00000000000177b8	mov	x0, x19
00000000000177bc	bl	_ThrowException
00000000000177c0	bl	_ThrowIllegalArgumentException
_kfun:kotlin.collections.HashMap.findKey#internal:
00000000000177c4	sub	sp, sp, #0xa0
00000000000177c8	stp	x26, x25, [sp, #0x50]
00000000000177cc	stp	x24, x23, [sp, #0x60]
00000000000177d0	stp	x22, x21, [sp, #0x70]
00000000000177d4	stp	x20, x19, [sp, #0x80]
00000000000177d8	stp	x29, x30, [sp, #0x90]
00000000000177dc	add	x29, sp, #0x90
00000000000177e0	mov	x19, x1
00000000000177e4	mov	x20, x0
00000000000177e8	movi.16b	v0, #0x0
00000000000177ec	stp	q0, q0, [sp]
00000000000177f0	str	q0, [sp, #0x20]
00000000000177f4	adrp	x0, 81 ; 0x68000
00000000000177f8	add	x0, x0, #0xa00
00000000000177fc	ldr	x8, [x0]
0000000000017800	blr	x8
0000000000017804	ldr	x22, [x0]
0000000000017808	ldr	x8, [x22, #0x110]
000000000001780c	mov	x9, sp
0000000000017810	str	x9, [x22, #0x110]
0000000000017814	mov	x9, #0x600000000
0000000000017818	stp	x8, x9, [sp, #0x8]
000000000001781c	adr	x23, #0x6b027
0000000000017820	nop
0000000000017824	ldarb	w8, [x23]
0000000000017828	tbz	w8, #0x0, 0x17830
000000000001782c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000017830	cbz	x19, 0x17864
0000000000017834	ldr	x8, [x19]
0000000000017838	and	x8, x8, #0xfffffffffffffffc
000000000001783c	ldr	x8, [x8]
0000000000017840	ldr	x8, [x8, #0x78]
0000000000017844	mov	x0, x19
0000000000017848	blr	x8
000000000001784c	mov	w8, #0x79b9
0000000000017850	movk	w8, #0x9e37, lsl #16
0000000000017854	mul	w8, w0, w8
0000000000017858	ldr	w9, [x20, #0x48]
000000000001785c	lsr	w24, w8, w9
0000000000017860	b	0x17868
0000000000017864	mov	w24, #0x0
0000000000017868	ldr	w8, [x20, #0x40]
000000000001786c	sub	w25, w8, #0x1
0000000000017870	add	x26, sp, #0x30
0000000000017874	b	0x17880
0000000000017878	sub	w24, w24, #0x1
000000000001787c	sub	w25, w25, #0x1
0000000000017880	ldarb	w8, [x23]
0000000000017884	tbz	w8, #0x0, 0x1788c
0000000000017888	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001788c	ldr	x8, [x20, #0x20]
0000000000017890	str	x8, [sp, #0x18]
0000000000017894	ldr	w9, [x8, #0x8]
0000000000017898	cmp	w9, w24
000000000001789c	b.ls	0x17950
00000000000178a0	add	x8, x8, w24, sxtw #2
00000000000178a4	ldr	w8, [x8, #0x10]
00000000000178a8	cbz	w8, 0x17924
00000000000178ac	subs	w21, w8, #0x1
00000000000178b0	b.lt	0x178fc
00000000000178b4	ldr	x8, [x20, #0x8]
00000000000178b8	str	x8, [sp, #0x20]
00000000000178bc	ldr	w9, [x8, #0x8]
00000000000178c0	cmp	w9, w21
00000000000178c4	b.ls	0x17950
00000000000178c8	add	x8, x8, w21, sxtw #3
00000000000178cc	ldr	x0, [x8, #0x10]
00000000000178d0	str	x0, [sp, #0x28]
00000000000178d4	cbz	x0, 0x178f8
00000000000178d8	ldr	x8, [x0]
00000000000178dc	and	x8, x8, #0xfffffffffffffffc
00000000000178e0	ldr	x8, [x8]
00000000000178e4	ldr	x8, [x8, #0x70]
00000000000178e8	mov	x1, x19
00000000000178ec	blr	x8
00000000000178f0	tbz	w0, #0x0, 0x178fc
00000000000178f4	b	0x17928
00000000000178f8	cbz	x19, 0x17928
00000000000178fc	tbnz	w25, #0x1f, 0x17924
0000000000017900	cbnz	w24, 0x17878
0000000000017904	movi.16b	v0, #0x0
0000000000017908	stp	q0, q0, [sp, #0x30]
000000000001790c	ldr	x8, [x22, #0x110]
0000000000017910	str	x26, [x22, #0x110]
0000000000017914	ldr	x9, [x20, #0x20]
0000000000017918	ldr	w24, [x9, #0x8]
000000000001791c	str	x8, [x22, #0x110]
0000000000017920	b	0x17878
0000000000017924	mov	w21, #-0x1
0000000000017928	ldr	x8, [sp, #0x8]
000000000001792c	str	x8, [x22, #0x110]
0000000000017930	mov	x0, x21
0000000000017934	ldp	x29, x30, [sp, #0x90]
0000000000017938	ldp	x20, x19, [sp, #0x80]
000000000001793c	ldp	x22, x21, [sp, #0x70]
0000000000017940	ldp	x24, x23, [sp, #0x60]
0000000000017944	ldp	x26, x25, [sp, #0x50]
0000000000017948	add	sp, sp, #0xa0
000000000001794c	ret
0000000000017950	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.collections.HashMap.findValue#internal:
0000000000017954	sub	sp, sp, #0x70
0000000000017958	stp	x24, x23, [sp, #0x30]
000000000001795c	stp	x22, x21, [sp, #0x40]
0000000000017960	stp	x20, x19, [sp, #0x50]
0000000000017964	stp	x29, x30, [sp, #0x60]
0000000000017968	add	x29, sp, #0x60
000000000001796c	mov	x19, x1
0000000000017970	mov	x20, x0
0000000000017974	movi.16b	v0, #0x0
0000000000017978	stp	q0, q0, [sp]
000000000001797c	str	q0, [sp, #0x20]
0000000000017980	adrp	x0, 81 ; 0x68000
0000000000017984	add	x0, x0, #0xa00
0000000000017988	ldr	x8, [x0]
000000000001798c	blr	x8
0000000000017990	ldr	x22, [x0]
0000000000017994	ldr	x8, [x22, #0x110]
0000000000017998	mov	x9, sp
000000000001799c	str	x9, [x22, #0x110]
00000000000179a0	mov	x9, #0x600000000
00000000000179a4	stp	x8, x9, [sp, #0x8]
00000000000179a8	adr	x23, #0x6ae9b
00000000000179ac	nop
00000000000179b0	ldarb	w8, [x23]
00000000000179b4	tbz	w8, #0x0, 0x179bc
00000000000179b8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000179bc	ldr	w21, [x20, #0x44]
00000000000179c0	sub	w8, w21, #0x1
00000000000179c4	sxtw	x24, w8
00000000000179c8	b	0x179d4
00000000000179cc	cbz	x19, 0x17a78
00000000000179d0	sub	x24, x24, #0x1
00000000000179d4	tbnz	w24, #0x1f, 0x17a50
00000000000179d8	ldarb	w8, [x23]
00000000000179dc	tbz	w8, #0x0, 0x179e4
00000000000179e0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000179e4	ldr	x8, [x20, #0x18]
00000000000179e8	str	x8, [sp, #0x18]
00000000000179ec	ldr	w9, [x8, #0x8]
00000000000179f0	cmp	w9, w24
00000000000179f4	b.ls	0x17a80
00000000000179f8	sub	w21, w21, #0x1
00000000000179fc	add	x8, x8, x24, lsl #2
0000000000017a00	ldr	w8, [x8, #0x10]
0000000000017a04	tbnz	w8, #0x1f, 0x179d0
0000000000017a08	ldr	x8, [x20, #0x10]
0000000000017a0c	str	x8, [sp, #0x20]
0000000000017a10	cbz	x8, 0x17a84
0000000000017a14	ldr	w9, [x8, #0x8]
0000000000017a18	cmp	w9, w24
0000000000017a1c	b.ls	0x17a80
0000000000017a20	add	x8, x8, x24, lsl #3
0000000000017a24	ldr	x0, [x8, #0x10]
0000000000017a28	str	x0, [sp, #0x28]
0000000000017a2c	cbz	x0, 0x179cc
0000000000017a30	ldr	x8, [x0]
0000000000017a34	and	x8, x8, #0xfffffffffffffffc
0000000000017a38	ldr	x8, [x8]
0000000000017a3c	ldr	x8, [x8, #0x70]
0000000000017a40	mov	x1, x19
0000000000017a44	blr	x8
0000000000017a48	tbz	w0, #0x0, 0x179d0
0000000000017a4c	b	0x17a54
0000000000017a50	mov	w21, #-0x1
0000000000017a54	ldr	x8, [sp, #0x8]
0000000000017a58	str	x8, [x22, #0x110]
0000000000017a5c	mov	x0, x21
0000000000017a60	ldp	x29, x30, [sp, #0x60]
0000000000017a64	ldp	x20, x19, [sp, #0x50]
0000000000017a68	ldp	x22, x21, [sp, #0x40]
0000000000017a6c	ldp	x24, x23, [sp, #0x30]
0000000000017a70	add	sp, sp, #0x70
0000000000017a74	ret
0000000000017a78	mov	x21, x24
0000000000017a7c	b	0x17a54
0000000000017a80	bl	_ThrowArrayIndexOutOfBoundsException
0000000000017a84	bl	_ThrowNullPointerException
_kfun:kotlin.collections.HashMap#addKey(1:0){}kotlin.Int:
0000000000017a88	sub	sp, sp, #0xd0
0000000000017a8c	stp	x28, x27, [sp, #0x70]
0000000000017a90	stp	x26, x25, [sp, #0x80]
0000000000017a94	stp	x24, x23, [sp, #0x90]
0000000000017a98	stp	x22, x21, [sp, #0xa0]
0000000000017a9c	stp	x20, x19, [sp, #0xb0]
0000000000017aa0	stp	x29, x30, [sp, #0xc0]
0000000000017aa4	add	x29, sp, #0xc0
0000000000017aa8	mov	x20, x1
0000000000017aac	mov	x19, x0
0000000000017ab0	movi.16b	v0, #0x0
0000000000017ab4	stp	q0, q0, [sp]
0000000000017ab8	str	xzr, [sp, #0x40]
0000000000017abc	stp	q0, q0, [sp, #0x20]
0000000000017ac0	adrp	x0, 81 ; 0x68000
0000000000017ac4	add	x0, x0, #0xa00
0000000000017ac8	ldr	x8, [x0]
0000000000017acc	blr	x8
0000000000017ad0	ldr	x21, [x0]
0000000000017ad4	ldr	x8, [x21, #0x110]
0000000000017ad8	mov	x9, sp
0000000000017adc	str	x9, [x21, #0x110]
0000000000017ae0	mov	x9, #0x900000000
0000000000017ae4	stp	x8, x9, [sp, #0x8]
0000000000017ae8	adr	x22, #0x6ad5b
0000000000017aec	nop
0000000000017af0	ldarb	w8, [x22]
0000000000017af4	tbz	w8, #0x0, 0x17afc
0000000000017af8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000017afc	mov	x0, x19
0000000000017b00	bl	"_kfun:kotlin.collections.HashMap#checkIsMutable(){}"
0000000000017b04	add	x23, sp, #0x50
0000000000017b08	mov	w24, #0x79b9
0000000000017b0c	movk	w24, #0x9e37, lsl #16
0000000000017b10	ldarb	w8, [x22]
0000000000017b14	tbz	w8, #0x0, 0x17b1c
0000000000017b18	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000017b1c	cbz	x20, 0x17b48
0000000000017b20	ldr	x8, [x20]
0000000000017b24	and	x8, x8, #0xfffffffffffffffc
0000000000017b28	ldr	x8, [x8]
0000000000017b2c	ldr	x8, [x8, #0x78]
0000000000017b30	mov	x0, x20
0000000000017b34	blr	x8
0000000000017b38	mul	w8, w0, w24
0000000000017b3c	ldr	w9, [x19, #0x48]
0000000000017b40	lsr	w26, w8, w9
0000000000017b44	b	0x17b4c
0000000000017b48	mov	w26, #0x0
0000000000017b4c	mov	w25, #0x0
0000000000017b50	ldr	w8, [x19, #0x40]
0000000000017b54	movi.16b	v0, #0x0
0000000000017b58	stp	q0, q0, [sp, #0x50]
0000000000017b5c	ldr	x9, [x21, #0x110]
0000000000017b60	str	x23, [x21, #0x110]
0000000000017b64	ldr	x10, [x19, #0x20]
0000000000017b68	ldr	w10, [x10, #0x8]
0000000000017b6c	str	x9, [x21, #0x110]
0000000000017b70	lsl	w8, w8, #1
0000000000017b74	cmp	w10, #0x0
0000000000017b78	cinc	w9, w10, lt
0000000000017b7c	asr	w9, w9, #1
0000000000017b80	cmp	w8, w9
0000000000017b84	csel	w8, w9, w8, gt
0000000000017b88	bic	w27, w8, w8, asr #31
0000000000017b8c	b	0x17b98
0000000000017b90	sub	w26, w26, #0x1
0000000000017b94	add	w25, w25, #0x1
0000000000017b98	ldarb	w8, [x22]
0000000000017b9c	tbz	w8, #0x0, 0x17ba4
0000000000017ba0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000017ba4	ldr	x8, [x19, #0x20]
0000000000017ba8	str	x8, [sp, #0x18]
0000000000017bac	ldr	w9, [x8, #0x8]
0000000000017bb0	cmp	w9, w26
0000000000017bb4	b.ls	0x17d64
0000000000017bb8	add	x8, x8, w26, sxtw #2
0000000000017bbc	ldr	w28, [x8, #0x10]
0000000000017bc0	cmp	w28, #0x0
0000000000017bc4	b.le	0x17c40
0000000000017bc8	ldr	x8, [x19, #0x8]
0000000000017bcc	str	x8, [sp, #0x38]
0000000000017bd0	sub	w9, w28, #0x1
0000000000017bd4	ldr	w10, [x8, #0x8]
0000000000017bd8	cmp	w10, w9
0000000000017bdc	b.ls	0x17d64
0000000000017be0	add	x8, x8, w9, sxtw #3
0000000000017be4	ldr	x0, [x8, #0x10]
0000000000017be8	str	x0, [sp, #0x40]
0000000000017bec	cbz	x0, 0x17c10
0000000000017bf0	ldr	x8, [x0]
0000000000017bf4	and	x8, x8, #0xfffffffffffffffc
0000000000017bf8	ldr	x8, [x8]
0000000000017bfc	ldr	x8, [x8, #0x70]
0000000000017c00	mov	x1, x20
0000000000017c04	blr	x8
0000000000017c08	cbz	w0, 0x17c14
0000000000017c0c	b	0x17ca4
0000000000017c10	cbz	x20, 0x17ca4
0000000000017c14	cmp	w27, w25
0000000000017c18	b.eq	0x17c78
0000000000017c1c	cbnz	w26, 0x17b90
0000000000017c20	movi.16b	v0, #0x0
0000000000017c24	stp	q0, q0, [sp, #0x50]
0000000000017c28	ldr	x8, [x21, #0x110]
0000000000017c2c	str	x23, [x21, #0x110]
0000000000017c30	ldr	x9, [x19, #0x20]
0000000000017c34	ldr	w26, [x9, #0x8]
0000000000017c38	str	x8, [x21, #0x110]
0000000000017c3c	b	0x17b90
0000000000017c40	ldr	w8, [x19, #0x44]
0000000000017c44	movi.16b	v0, #0x0
0000000000017c48	stp	q0, q0, [sp, #0x50]
0000000000017c4c	ldr	x9, [x21, #0x110]
0000000000017c50	str	x23, [x21, #0x110]
0000000000017c54	ldr	x10, [x19, #0x8]
0000000000017c58	ldr	w10, [x10, #0x8]
0000000000017c5c	str	x9, [x21, #0x110]
0000000000017c60	cmp	w8, w10
0000000000017c64	b.lt	0x17cd0
0000000000017c68	mov	x0, x19
0000000000017c6c	mov	w1, #0x1
0000000000017c70	bl	"_kfun:kotlin.collections.HashMap.ensureExtraCapacity#internal"
0000000000017c74	b	0x17b10
0000000000017c78	movi.16b	v0, #0x0
0000000000017c7c	stp	q0, q0, [sp, #0x50]
0000000000017c80	ldr	x8, [x21, #0x110]
0000000000017c84	str	x23, [x21, #0x110]
0000000000017c88	ldr	x9, [x19, #0x20]
0000000000017c8c	ldr	w9, [x9, #0x8]
0000000000017c90	str	x8, [x21, #0x110]
0000000000017c94	lsl	w1, w9, #1
0000000000017c98	mov	x0, x19
0000000000017c9c	bl	"_kfun:kotlin.collections.HashMap.rehash#internal"
0000000000017ca0	b	0x17b10
0000000000017ca4	neg	w0, w28
0000000000017ca8	ldr	x8, [sp, #0x8]
0000000000017cac	str	x8, [x21, #0x110]
0000000000017cb0	ldp	x29, x30, [sp, #0xc0]
0000000000017cb4	ldp	x20, x19, [sp, #0xb0]
0000000000017cb8	ldp	x22, x21, [sp, #0xa0]
0000000000017cbc	ldp	x24, x23, [sp, #0x90]
0000000000017cc0	ldp	x26, x25, [sp, #0x80]
0000000000017cc4	ldp	x28, x27, [sp, #0x70]
0000000000017cc8	add	sp, sp, #0xd0
0000000000017ccc	ret
0000000000017cd0	ldr	w0, [x19, #0x44]
0000000000017cd4	add	w8, w0, #0x1
0000000000017cd8	str	w8, [x19, #0x44]
0000000000017cdc	ldr	x10, [x19, #0x8]
0000000000017ce0	str	x10, [sp, #0x20]
0000000000017ce4	ldr	w9, [x10, #0x8]
0000000000017ce8	cmp	w9, w0
0000000000017cec	b.ls	0x17d64
0000000000017cf0	sxtw	x9, w0
0000000000017cf4	ldr	xzr, [x10]
0000000000017cf8	add	x10, x10, x9, lsl #3
0000000000017cfc	str	x20, [x10, #0x10]
0000000000017d00	ldr	x10, [x19, #0x18]
0000000000017d04	str	x10, [sp, #0x28]
0000000000017d08	ldr	w11, [x10, #0x8]
0000000000017d0c	cmp	w11, w0
0000000000017d10	b.ls	0x17d64
0000000000017d14	ldr	xzr, [x10]
0000000000017d18	add	x9, x10, x9, lsl #2
0000000000017d1c	str	w26, [x9, #0x10]
0000000000017d20	ldr	x9, [x19, #0x20]
0000000000017d24	str	x9, [sp, #0x30]
0000000000017d28	ldr	w10, [x9, #0x8]
0000000000017d2c	cmp	w10, w26
0000000000017d30	b.ls	0x17d64
0000000000017d34	sxtw	x10, w26
0000000000017d38	ldr	xzr, [x9]
0000000000017d3c	add	x9, x9, x10, lsl #2
0000000000017d40	str	w8, [x9, #0x10]
0000000000017d44	ldr	w8, [x19, #0x4c]
0000000000017d48	add	w8, w8, #0x1
0000000000017d4c	str	w8, [x19, #0x4c]
0000000000017d50	ldr	w8, [x19, #0x40]
0000000000017d54	cmp	w25, w8
0000000000017d58	b.le	0x17ca8
0000000000017d5c	str	w25, [x19, #0x40]
0000000000017d60	b	0x17ca8
0000000000017d64	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.collections.HashMap#removeKey(1:0){}kotlin.Int:
0000000000017d68	stp	x20, x19, [sp, #-0x20]!
0000000000017d6c	stp	x29, x30, [sp, #0x10]
0000000000017d70	add	x29, sp, #0x10
0000000000017d74	mov	x20, x1
0000000000017d78	mov	x19, x0
0000000000017d7c	adr	x8, #0x6aac7
0000000000017d80	nop
0000000000017d84	ldarb	w8, [x8]
0000000000017d88	tbz	w8, #0x0, 0x17d90
0000000000017d8c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000017d90	mov	x0, x19
0000000000017d94	bl	"_kfun:kotlin.collections.HashMap#checkIsMutable(){}"
0000000000017d98	mov	x0, x19
0000000000017d9c	mov	x1, x20
0000000000017da0	bl	"_kfun:kotlin.collections.HashMap.findKey#internal"
0000000000017da4	tbnz	w0, #0x1f, 0x17dc8
0000000000017da8	mov	x20, x0
0000000000017dac	mov	x0, x19
0000000000017db0	mov	x1, x20
0000000000017db4	bl	"_kfun:kotlin.collections.HashMap.removeKeyAt#internal"
0000000000017db8	mov	x0, x20
0000000000017dbc	ldp	x29, x30, [sp, #0x10]
0000000000017dc0	ldp	x20, x19, [sp], #0x20
0000000000017dc4	ret
0000000000017dc8	mov	w20, #-0x1
0000000000017dcc	mov	x0, x20
0000000000017dd0	ldp	x29, x30, [sp, #0x10]
0000000000017dd4	ldp	x20, x19, [sp], #0x20
0000000000017dd8	ret
_kfun:kotlin.collections.HashMap.removeKeyAt#internal:
0000000000017ddc	sub	sp, sp, #0x130
0000000000017de0	stp	x28, x27, [sp, #0xd0]
0000000000017de4	stp	x26, x25, [sp, #0xe0]
0000000000017de8	stp	x24, x23, [sp, #0xf0]
0000000000017dec	stp	x22, x21, [sp, #0x100]
0000000000017df0	stp	x20, x19, [sp, #0x110]
0000000000017df4	stp	x29, x30, [sp, #0x120]
0000000000017df8	add	x29, sp, #0x120
0000000000017dfc	mov	x20, x1
0000000000017e00	mov	x19, x0
0000000000017e04	movi.16b	v0, #0x0
0000000000017e08	stp	q0, q0, [sp, #0x10]
0000000000017e0c	str	q0, [sp, #0x30]
0000000000017e10	adrp	x0, 81 ; 0x68000
0000000000017e14	add	x0, x0, #0xa00
0000000000017e18	ldr	x8, [x0]
0000000000017e1c	blr	x8
0000000000017e20	ldr	x21, [x0]
0000000000017e24	ldr	x8, [x21, #0x110]
0000000000017e28	add	x9, sp, #0x10
0000000000017e2c	str	x9, [x21, #0x110]
0000000000017e30	mov	x9, #0x600000000
0000000000017e34	stp	x8, x9, [sp, #0x18]
0000000000017e38	adr	x24, #0x6aa0b
0000000000017e3c	nop
0000000000017e40	ldarb	w8, [x24]
0000000000017e44	tbz	w8, #0x0, 0x17e4c
0000000000017e48	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000017e4c	ldr	x0, [x19, #0x8]
0000000000017e50	str	x0, [sp, #0x28]
0000000000017e54	mov	x1, x20
0000000000017e58	bl	"_kfun:kotlin.collections#resetAt__at__kotlin.Array<0:0>(kotlin.Int){0ยง<kotlin.Any?>}"
0000000000017e5c	ldr	x8, [x19, #0x18]
0000000000017e60	str	x8, [sp, #0x30]
0000000000017e64	ldr	w9, [x8, #0x8]
0000000000017e68	cmp	w9, w20
0000000000017e6c	b.ls	0x18124
0000000000017e70	mov	w25, #0x0
0000000000017e74	add	x8, x8, w20, sxtw #2
0000000000017e78	sxtw	x9, w20
0000000000017e7c	stp	x9, x20, [sp]
0000000000017e80	ldr	w28, [x8, #0x10]
0000000000017e84	movi.16b	v0, #0x0
0000000000017e88	stp	q0, q0, [sp, #0x40]
0000000000017e8c	stp	q0, q0, [sp, #0x80]
0000000000017e90	stp	q0, q0, [sp, #0x60]
0000000000017e94	ldr	x8, [x21, #0x110]
0000000000017e98	add	x9, sp, #0x40
0000000000017e9c	str	x9, [x21, #0x110]
0000000000017ea0	mov	x9, #0xc00000000
0000000000017ea4	stp	x8, x9, [sp, #0x48]
0000000000017ea8	ldr	w8, [x19, #0x40]
0000000000017eac	lsl	w8, w8, #1
0000000000017eb0	stp	q0, q0, [x29, #-0x80]
0000000000017eb4	ldr	x9, [x21, #0x110]
0000000000017eb8	sub	x26, x29, #0x80
0000000000017ebc	str	x26, [x21, #0x110]
0000000000017ec0	ldr	x10, [x19, #0x20]
0000000000017ec4	ldr	w10, [x10, #0x8]
0000000000017ec8	cmp	w10, #0x0
0000000000017ecc	cinc	w10, w10, lt
0000000000017ed0	asr	w10, w10, #1
0000000000017ed4	cmp	w8, w10
0000000000017ed8	str	x9, [x21, #0x110]
0000000000017edc	csel	w27, w10, w8, gt
0000000000017ee0	mov	x23, x28
0000000000017ee4	b	0x17f10
0000000000017ee8	str	x9, [sp, #0x70]
0000000000017eec	cmp	w10, w28
0000000000017ef0	b.ls	0x18124
0000000000017ef4	mov	w25, #0x0
0000000000017ef8	ldr	xzr, [x9]
0000000000017efc	mov	w9, #-0x1
0000000000017f00	str	w9, [x8, w28, sxtw #2]
0000000000017f04	mov	x28, x23
0000000000017f08	subs	w27, w27, #0x1
0000000000017f0c	b.mi	0x1809c
0000000000017f10	ldarb	w8, [x24]
0000000000017f14	tbnz	w8, #0x0, 0x17f34
0000000000017f18	cbz	w23, 0x17f3c
0000000000017f1c	add	w25, w25, #0x1
0000000000017f20	ldr	w8, [x19, #0x40]
0000000000017f24	ldr	x9, [x19, #0x20]
0000000000017f28	cmp	w25, w8
0000000000017f2c	b.le	0x17f6c
0000000000017f30	b	0x18064
0000000000017f34	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000017f38	cbnz	w23, 0x17f1c
0000000000017f3c	movi.16b	v0, #0x0
0000000000017f40	stp	q0, q0, [x29, #-0x80]
0000000000017f44	ldr	x8, [x21, #0x110]
0000000000017f48	str	x26, [x21, #0x110]
0000000000017f4c	ldr	x9, [x19, #0x20]
0000000000017f50	ldr	w23, [x9, #0x8]
0000000000017f54	str	x8, [x21, #0x110]
0000000000017f58	add	w25, w25, #0x1
0000000000017f5c	ldr	w8, [x19, #0x40]
0000000000017f60	ldr	x9, [x19, #0x20]
0000000000017f64	cmp	w25, w8
0000000000017f68	b.gt	0x18064
0000000000017f6c	sub	w23, w23, #0x1
0000000000017f70	str	x9, [sp, #0x60]
0000000000017f74	ldr	w10, [x9, #0x8]
0000000000017f78	cmp	w10, w23
0000000000017f7c	b.ls	0x18124
0000000000017f80	add	x8, x9, #0x10
0000000000017f84	ldr	w22, [x8, w23, sxtw #2]
0000000000017f88	cbz	w22, 0x18084
0000000000017f8c	tbnz	w22, #0x1f, 0x17ee8
0000000000017f90	ldr	x8, [x19, #0x8]
0000000000017f94	str	x8, [sp, #0x78]
0000000000017f98	sub	w20, w22, #0x1
0000000000017f9c	ldr	w9, [x8, #0x8]
0000000000017fa0	cmp	w9, w20
0000000000017fa4	b.ls	0x18124
0000000000017fa8	add	x8, x8, w20, sxtw #3
0000000000017fac	ldr	x0, [x8, #0x10]
0000000000017fb0	str	x0, [sp, #0x80]
0000000000017fb4	cbz	x0, 0x17fe4
0000000000017fb8	ldr	x8, [x0]
0000000000017fbc	and	x8, x8, #0xfffffffffffffffc
0000000000017fc0	ldr	x8, [x8]
0000000000017fc4	ldr	x8, [x8, #0x78]
0000000000017fc8	blr	x8
0000000000017fcc	mov	w8, #0x79b9
0000000000017fd0	movk	w8, #0x9e37, lsl #16
0000000000017fd4	mul	w8, w0, w8
0000000000017fd8	ldr	w9, [x19, #0x48]
0000000000017fdc	lsr	w8, w8, w9
0000000000017fe0	b	0x17fe8
0000000000017fe4	mov	w8, #0x0
0000000000017fe8	movi.16b	v0, #0x0
0000000000017fec	stp	q0, q0, [x29, #-0x80]
0000000000017ff0	ldr	x9, [x21, #0x110]
0000000000017ff4	str	x26, [x21, #0x110]
0000000000017ff8	ldr	x10, [x19, #0x20]
0000000000017ffc	ldr	w10, [x10, #0x8]
0000000000018000	str	x9, [x21, #0x110]
0000000000018004	sub	w8, w8, w23
0000000000018008	sub	w9, w10, #0x1
000000000001800c	and	w8, w8, w9
0000000000018010	cmp	w8, w25
0000000000018014	b.lt	0x17f08
0000000000018018	ldr	x8, [x19, #0x20]
000000000001801c	str	x8, [sp, #0x88]
0000000000018020	ldr	w9, [x8, #0x8]
0000000000018024	cmp	w9, w28
0000000000018028	b.ls	0x18124
000000000001802c	ldr	xzr, [x8]
0000000000018030	add	x8, x8, w28, sxtw #2
0000000000018034	str	w22, [x8, #0x10]
0000000000018038	ldr	x8, [x19, #0x18]
000000000001803c	str	x8, [sp, #0x90]
0000000000018040	ldr	w9, [x8, #0x8]
0000000000018044	cmp	w9, w20
0000000000018048	b.ls	0x18124
000000000001804c	mov	w25, #0x0
0000000000018050	sxtw	x9, w20
0000000000018054	ldr	xzr, [x8]
0000000000018058	add	x8, x8, x9, lsl #2
000000000001805c	str	w28, [x8, #0x10]
0000000000018060	b	0x17f04
0000000000018064	str	x9, [sp, #0x58]
0000000000018068	ldr	w8, [x9, #0x8]
000000000001806c	cmp	w8, w28
0000000000018070	b.ls	0x18124
0000000000018074	mov	w10, #0x0
0000000000018078	ldr	xzr, [x9]
000000000001807c	add	x8, x9, #0x10
0000000000018080	b	0x180b8
0000000000018084	str	x9, [sp, #0x68]
0000000000018088	cmp	w10, w28
000000000001808c	b.ls	0x18124
0000000000018090	mov	w10, #0x0
0000000000018094	ldr	xzr, [x9]
0000000000018098	b	0x180b8
000000000001809c	ldr	x8, [x19, #0x20]
00000000000180a0	str	x8, [sp, #0x98]
00000000000180a4	ldr	w9, [x8, #0x8]
00000000000180a8	cmp	w9, w28
00000000000180ac	b.ls	0x18124
00000000000180b0	ldr	xzr, [x8], #0x10
00000000000180b4	mov	w10, #-0x1
00000000000180b8	ldr	x11, [sp, #0x8]
00000000000180bc	str	w10, [x8, w28, sxtw #2]
00000000000180c0	ldr	x8, [sp, #0x48]
00000000000180c4	str	x8, [x21, #0x110]
00000000000180c8	ldr	x8, [x19, #0x18]
00000000000180cc	str	x8, [sp, #0x38]
00000000000180d0	ldr	w9, [x8, #0x8]
00000000000180d4	cmp	w9, w11
00000000000180d8	b.ls	0x18124
00000000000180dc	ldr	xzr, [x8]
00000000000180e0	ldr	x9, [sp]
00000000000180e4	add	x8, x8, x9, lsl #2
00000000000180e8	mov	w9, #-0x1
00000000000180ec	str	w9, [x8, #0x10]
00000000000180f0	ldr	w8, [x19, #0x4c]
00000000000180f4	sub	w8, w8, #0x1
00000000000180f8	str	w8, [x19, #0x4c]
00000000000180fc	ldr	x8, [sp, #0x18]
0000000000018100	str	x8, [x21, #0x110]
0000000000018104	ldp	x29, x30, [sp, #0x120]
0000000000018108	ldp	x20, x19, [sp, #0x110]
000000000001810c	ldp	x22, x21, [sp, #0x100]
0000000000018110	ldp	x24, x23, [sp, #0xf0]
0000000000018114	ldp	x26, x25, [sp, #0xe0]
0000000000018118	ldp	x28, x27, [sp, #0xd0]
000000000001811c	add	sp, sp, #0x130
0000000000018120	ret
0000000000018124	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.collections.HashMap#containsEntry(kotlin.collections.Map.Entry<1:0,1:1>){}kotlin.Boolean:
0000000000018128	sub	sp, sp, #0x80
000000000001812c	stp	x24, x23, [sp, #0x40]
0000000000018130	stp	x22, x21, [sp, #0x50]
0000000000018134	stp	x20, x19, [sp, #0x60]
0000000000018138	stp	x29, x30, [sp, #0x70]
000000000001813c	add	x29, sp, #0x70
0000000000018140	mov	x19, x1
0000000000018144	mov	x20, x0
0000000000018148	movi.16b	v0, #0x0
000000000001814c	stp	q0, q0, [sp]
0000000000018150	str	xzr, [sp, #0x30]
0000000000018154	str	q0, [sp, #0x20]
0000000000018158	mov	x23, sp
000000000001815c	add	x21, x23, #0x18
0000000000018160	adrp	x0, 80 ; 0x68000
0000000000018164	add	x0, x0, #0xa00
0000000000018168	ldr	x8, [x0]
000000000001816c	blr	x8
0000000000018170	ldr	x22, [x0]
0000000000018174	ldr	x8, [x22, #0x110]
0000000000018178	str	x23, [x22, #0x110]
000000000001817c	mov	x9, #0x700000000
0000000000018180	stp	x8, x9, [sp, #0x8]
0000000000018184	adr	x8, #0x6a6bf
0000000000018188	nop
000000000001818c	ldarb	w8, [x8]
0000000000018190	tbz	w8, #0x0, 0x18198
0000000000018194	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000018198	ldr	x8, [x19]
000000000001819c	and	x8, x8, #0xfffffffffffffffc
00000000000181a0	ldr	x8, [x8]
00000000000181a4	ldr	w9, [x8, #0x3c]
00000000000181a8	ldr	x8, [x8, #0x40]
00000000000181ac	tbnz	w9, #0x1f, 0x181bc
00000000000181b0	mov	w10, #0xa8
00000000000181b4	and	x9, x9, x10
00000000000181b8	b	0x18240
00000000000181bc	neg	w10, w9
00000000000181c0	mvn	w9, w9
00000000000181c4	cmp	w10, #0x9
00000000000181c8	b.ge	0x18200
00000000000181cc	cmp	w10, #0x2
00000000000181d0	b.lt	0x18234
00000000000181d4	mov	x10, #0x0
00000000000181d8	mov	x11, x8
00000000000181dc	ldr	w12, [x11]
00000000000181e0	cmp	w12, #0xa7
00000000000181e4	b.gt	0x1823c
00000000000181e8	add	x10, x10, #0x1
00000000000181ec	add	x11, x11, #0x10
00000000000181f0	cmp	x9, x10
00000000000181f4	b.ne	0x181dc
00000000000181f8	mov	x10, x9
00000000000181fc	b	0x1823c
0000000000018200	mov	w10, #0x0
0000000000018204	add	w11, w9, w10
0000000000018208	cmp	w11, #0x0
000000000001820c	cinc	w11, w11, lt
0000000000018210	asr	w11, w11, #1
0000000000018214	sbfiz	x12, x11, #4, #32
0000000000018218	ldr	w12, [x8, x12]
000000000001821c	cmp	w12, #0xa8
0000000000018220	csinc	w10, w10, w11, ge
0000000000018224	csel	w9, w9, w11, lt
0000000000018228	cmp	w10, w9
000000000001822c	b.lt	0x18204
0000000000018230	b	0x1823c
0000000000018234	mov	w10, #0x0
0000000000018238	b	0x1823c
000000000001823c	sxtw	x9, w10
0000000000018240	add	x8, x8, x9, lsl #4
0000000000018244	ldr	x8, [x8, #0x8]
0000000000018248	ldr	x8, [x8]
000000000001824c	mov	x0, x19
0000000000018250	mov	x1, x21
0000000000018254	blr	x8
0000000000018258	mov	x1, x0
000000000001825c	mov	x0, x20
0000000000018260	bl	"_kfun:kotlin.collections.HashMap.findKey#internal"
0000000000018264	tbnz	w0, #0x1f, 0x182b4
0000000000018268	ldr	x8, [x20, #0x10]
000000000001826c	str	x8, [sp, #0x20]
0000000000018270	cbz	x8, 0x183a0
0000000000018274	ldr	w9, [x8, #0x8]
0000000000018278	cmp	w9, w0
000000000001827c	b.ls	0x183a4
0000000000018280	add	x1, x23, #0x30
0000000000018284	add	x8, x8, w0, sxtw #3
0000000000018288	ldr	x20, [x8, #0x10]
000000000001828c	str	x20, [sp, #0x28]
0000000000018290	ldr	x8, [x19]
0000000000018294	and	x8, x8, #0xfffffffffffffffc
0000000000018298	ldr	x8, [x8]
000000000001829c	ldr	w9, [x8, #0x3c]
00000000000182a0	ldr	x8, [x8, #0x40]
00000000000182a4	tbnz	w9, #0x1f, 0x182bc
00000000000182a8	mov	w10, #0xa8
00000000000182ac	and	x9, x9, x10
00000000000182b0	b	0x18340
00000000000182b4	mov	w0, #0x0
00000000000182b8	b	0x18380
00000000000182bc	neg	w10, w9
00000000000182c0	mvn	w9, w9
00000000000182c4	cmp	w10, #0x9
00000000000182c8	b.ge	0x18300
00000000000182cc	cmp	w10, #0x2
00000000000182d0	b.lt	0x18334
00000000000182d4	mov	x10, #0x0
00000000000182d8	mov	x11, x8
00000000000182dc	ldr	w12, [x11]
00000000000182e0	cmp	w12, #0xa7
00000000000182e4	b.gt	0x1833c
00000000000182e8	add	x10, x10, #0x1
00000000000182ec	add	x11, x11, #0x10
00000000000182f0	cmp	x9, x10
00000000000182f4	b.ne	0x182dc
00000000000182f8	mov	x10, x9
00000000000182fc	b	0x1833c
0000000000018300	mov	w10, #0x0
0000000000018304	add	w11, w9, w10
0000000000018308	cmp	w11, #0x0
000000000001830c	cinc	w11, w11, lt
0000000000018310	asr	w11, w11, #1
0000000000018314	sbfiz	x12, x11, #4, #32
0000000000018318	ldr	w12, [x8, x12]
000000000001831c	cmp	w12, #0xa8
0000000000018320	csinc	w10, w10, w11, ge
0000000000018324	csel	w9, w9, w11, lt
0000000000018328	cmp	w10, w9
000000000001832c	b.lt	0x18304
0000000000018330	b	0x1833c
0000000000018334	mov	w10, #0x0
0000000000018338	b	0x1833c
000000000001833c	sxtw	x9, w10
0000000000018340	add	x8, x8, x9, lsl #4
0000000000018344	ldr	x8, [x8, #0x8]
0000000000018348	ldr	x8, [x8, #0x8]
000000000001834c	mov	x0, x19
0000000000018350	blr	x8
0000000000018354	mov	x1, x0
0000000000018358	cbz	x20, 0x18378
000000000001835c	ldr	x8, [x20]
0000000000018360	and	x8, x8, #0xfffffffffffffffc
0000000000018364	ldr	x8, [x8]
0000000000018368	ldr	x8, [x8, #0x70]
000000000001836c	mov	x0, x20
0000000000018370	blr	x8
0000000000018374	b	0x18380
0000000000018378	cmp	x1, #0x0
000000000001837c	cset	w0, eq
0000000000018380	ldr	x8, [sp, #0x8]
0000000000018384	str	x8, [x22, #0x110]
0000000000018388	ldp	x29, x30, [sp, #0x70]
000000000001838c	ldp	x20, x19, [sp, #0x60]
0000000000018390	ldp	x22, x21, [sp, #0x50]
0000000000018394	ldp	x24, x23, [sp, #0x40]
0000000000018398	add	sp, sp, #0x80
000000000001839c	ret
00000000000183a0	bl	_ThrowNullPointerException
00000000000183a4	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.collections.HashMap#getKey(1:0){}1:0?:
00000000000183a8	sub	sp, sp, #0x60
00000000000183ac	stp	x22, x21, [sp, #0x30]
00000000000183b0	stp	x20, x19, [sp, #0x40]
00000000000183b4	stp	x29, x30, [sp, #0x50]
00000000000183b8	add	x29, sp, #0x50
00000000000183bc	mov	x19, x2
00000000000183c0	mov	x21, x1
00000000000183c4	mov	x20, x0
00000000000183c8	movi.16b	v0, #0x0
00000000000183cc	stp	q0, q0, [sp]
00000000000183d0	str	xzr, [sp, #0x20]
00000000000183d4	adrp	x0, 80 ; 0x68000
00000000000183d8	add	x0, x0, #0xa00
00000000000183dc	ldr	x8, [x0]
00000000000183e0	blr	x8
00000000000183e4	ldr	x22, [x0]
00000000000183e8	ldr	x8, [x22, #0x110]
00000000000183ec	mov	x9, sp
00000000000183f0	str	x9, [x22, #0x110]
00000000000183f4	mov	x9, #0x500000000
00000000000183f8	stp	x8, x9, [sp, #0x8]
00000000000183fc	adr	x8, #0x6a447
0000000000018400	nop
0000000000018404	ldarb	w8, [x8]
0000000000018408	tbz	w8, #0x0, 0x18410
000000000001840c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000018410	mov	x0, x20
0000000000018414	mov	x1, x21
0000000000018418	bl	"_kfun:kotlin.collections.HashMap.findKey#internal"
000000000001841c	tbnz	w0, #0x1f, 0x18448
0000000000018420	ldr	x8, [x20, #0x8]
0000000000018424	str	x8, [sp, #0x18]
0000000000018428	ldr	w9, [x8, #0x8]
000000000001842c	cmp	w9, w0
0000000000018430	b.ls	0x1846c
0000000000018434	add	x8, x8, w0, sxtw #3
0000000000018438	ldr	x0, [x8, #0x10]
000000000001843c	str	x0, [sp, #0x20]
0000000000018440	cbnz	x0, 0x1844c
0000000000018444	bl	_ThrowNullPointerException
0000000000018448	mov	x0, #0x0
000000000001844c	str	x0, [x19]
0000000000018450	ldr	x8, [sp, #0x8]
0000000000018454	str	x8, [x22, #0x110]
0000000000018458	ldp	x29, x30, [sp, #0x50]
000000000001845c	ldp	x20, x19, [sp, #0x40]
0000000000018460	ldp	x22, x21, [sp, #0x30]
0000000000018464	add	sp, sp, #0x60
0000000000018468	ret
000000000001846c	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.collections.HashMap#containsAllEntries(kotlin.collections.Collection<*>){}kotlin.Boolean:
0000000000018470	sub	sp, sp, #0x80
0000000000018474	stp	x26, x25, [sp, #0x30]
0000000000018478	stp	x24, x23, [sp, #0x40]
000000000001847c	stp	x22, x21, [sp, #0x50]
0000000000018480	stp	x20, x19, [sp, #0x60]
0000000000018484	stp	x29, x30, [sp, #0x70]
0000000000018488	add	x29, sp, #0x70
000000000001848c	mov	x21, x1
0000000000018490	mov	x19, x0
0000000000018494	movi.16b	v0, #0x0
0000000000018498	stp	q0, q0, [sp]
000000000001849c	str	q0, [sp, #0x20]
00000000000184a0	mov	x20, sp
00000000000184a4	add	x22, x20, #0x18
00000000000184a8	adrp	x0, 80 ; 0x68000
00000000000184ac	add	x0, x0, #0xa00
00000000000184b0	ldr	x8, [x0]
00000000000184b4	blr	x8
00000000000184b8	ldr	x23, [x0]
00000000000184bc	ldr	x8, [x23, #0x110]
00000000000184c0	str	x20, [x23, #0x110]
00000000000184c4	mov	x9, #0x600000000
00000000000184c8	stp	x8, x9, [sp, #0x8]
00000000000184cc	adr	x24, #0x6a377
00000000000184d0	nop
00000000000184d4	ldarb	w8, [x24]
00000000000184d8	tbz	w8, #0x0, 0x184e0
00000000000184dc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000184e0	add	x20, x20, #0x20
00000000000184e4	ldr	x8, [x21]
00000000000184e8	and	x8, x8, #0xfffffffffffffffc
00000000000184ec	ldr	x8, [x8]
00000000000184f0	ldr	w9, [x8, #0x3c]
00000000000184f4	ldr	x8, [x8, #0x40]
00000000000184f8	tbnz	w9, #0x1f, 0x18508
00000000000184fc	mov	w10, #0x12
0000000000018500	and	x9, x9, x10
0000000000018504	b	0x1858c
0000000000018508	neg	w10, w9
000000000001850c	mvn	w9, w9
0000000000018510	cmp	w10, #0x9
0000000000018514	b.ge	0x1854c
0000000000018518	cmp	w10, #0x2
000000000001851c	b.lt	0x18580
0000000000018520	mov	x10, #0x0
0000000000018524	mov	x11, x8
0000000000018528	ldr	w12, [x11]
000000000001852c	cmp	w12, #0x11
0000000000018530	b.gt	0x18588
0000000000018534	add	x10, x10, #0x1
0000000000018538	add	x11, x11, #0x10
000000000001853c	cmp	x9, x10
0000000000018540	b.ne	0x18528
0000000000018544	mov	x10, x9
0000000000018548	b	0x18588
000000000001854c	mov	w10, #0x0
0000000000018550	add	w11, w9, w10
0000000000018554	cmp	w11, #0x0
0000000000018558	cinc	w11, w11, lt
000000000001855c	asr	w11, w11, #1
0000000000018560	sbfiz	x12, x11, #4, #32
0000000000018564	ldr	w12, [x8, x12]
0000000000018568	cmp	w12, #0x12
000000000001856c	csinc	w10, w10, w11, ge
0000000000018570	csel	w9, w9, w11, lt
0000000000018574	cmp	w10, w9
0000000000018578	b.lt	0x18550
000000000001857c	b	0x18588
0000000000018580	mov	w10, #0x0
0000000000018584	b	0x18588
0000000000018588	sxtw	x9, w10
000000000001858c	add	x8, x8, x9, lsl #4
0000000000018590	ldr	x8, [x8, #0x8]
0000000000018594	ldr	x8, [x8, #0x20]
0000000000018598	mov	x0, x21
000000000001859c	mov	x1, x22
00000000000185a0	blr	x8
00000000000185a4	mov	x21, x0
00000000000185a8	mov	w22, #0xa0
00000000000185ac	mov	w25, #0xa8
00000000000185b0	ldr	x8, [x21]
00000000000185b4	and	x8, x8, #0xfffffffffffffffc
00000000000185b8	ldr	x8, [x8]
00000000000185bc	ldr	w9, [x8, #0x3c]
00000000000185c0	ldr	x8, [x8, #0x40]
00000000000185c4	tbnz	w9, #0x1f, 0x185e8
00000000000185c8	and	x9, x9, x22
00000000000185cc	add	x8, x8, x9, lsl #4
00000000000185d0	ldr	x8, [x8, #0x8]
00000000000185d4	ldr	x8, [x8]
00000000000185d8	mov	x0, x21
00000000000185dc	blr	x8
00000000000185e0	tbnz	w0, #0x0, 0x18684
00000000000185e4	b	0x18864
00000000000185e8	neg	w10, w9
00000000000185ec	mvn	w9, w9
00000000000185f0	cmp	w10, #0x9
00000000000185f4	b.ge	0x1862c
00000000000185f8	cmp	w10, #0x2
00000000000185fc	b.lt	0x18660
0000000000018600	mov	x10, #0x0
0000000000018604	mov	x11, x8
0000000000018608	ldr	w12, [x11]
000000000001860c	cmp	w12, #0x9f
0000000000018610	b.gt	0x18668
0000000000018614	add	x10, x10, #0x1
0000000000018618	add	x11, x11, #0x10
000000000001861c	cmp	x9, x10
0000000000018620	b.ne	0x18608
0000000000018624	mov	x10, x9
0000000000018628	b	0x18668
000000000001862c	mov	w10, #0x0
0000000000018630	add	w11, w9, w10
0000000000018634	cmp	w11, #0x0
0000000000018638	cinc	w11, w11, lt
000000000001863c	asr	w11, w11, #1
0000000000018640	sbfiz	x12, x11, #4, #32
0000000000018644	ldr	w12, [x8, x12]
0000000000018648	cmp	w12, #0xa0
000000000001864c	csinc	w10, w10, w11, ge
0000000000018650	csel	w9, w9, w11, lt
0000000000018654	cmp	w10, w9
0000000000018658	b.lt	0x18630
000000000001865c	b	0x18668
0000000000018660	mov	w10, #0x0
0000000000018664	b	0x18668
0000000000018668	sxtw	x9, w10
000000000001866c	add	x8, x8, x9, lsl #4
0000000000018670	ldr	x8, [x8, #0x8]
0000000000018674	ldr	x8, [x8]
0000000000018678	mov	x0, x21
000000000001867c	blr	x8
0000000000018680	tbz	w0, #0x0, 0x18864
0000000000018684	ldarb	w8, [x24]
0000000000018688	tbz	w8, #0x0, 0x18690
000000000001868c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000018690	ldr	x8, [x21]
0000000000018694	and	x8, x8, #0xfffffffffffffffc
0000000000018698	ldr	x8, [x8]
000000000001869c	ldr	w9, [x8, #0x3c]
00000000000186a0	ldr	x8, [x8, #0x40]
00000000000186a4	tbnz	w9, #0x1f, 0x186b0
00000000000186a8	and	x9, x9, x22
00000000000186ac	b	0x18734
00000000000186b0	neg	w10, w9
00000000000186b4	mvn	w9, w9
00000000000186b8	cmp	w10, #0x9
00000000000186bc	b.ge	0x186f4
00000000000186c0	cmp	w10, #0x2
00000000000186c4	b.lt	0x18728
00000000000186c8	mov	x10, #0x0
00000000000186cc	mov	x11, x8
00000000000186d0	ldr	w12, [x11]
00000000000186d4	cmp	w12, #0x9f
00000000000186d8	b.gt	0x18730
00000000000186dc	add	x10, x10, #0x1
00000000000186e0	add	x11, x11, #0x10
00000000000186e4	cmp	x9, x10
00000000000186e8	b.ne	0x186d0
00000000000186ec	mov	x10, x9
00000000000186f0	b	0x18730
00000000000186f4	mov	w10, #0x0
00000000000186f8	add	w11, w9, w10
00000000000186fc	cmp	w11, #0x0
0000000000018700	cinc	w11, w11, lt
0000000000018704	asr	w11, w11, #1
0000000000018708	sbfiz	x12, x11, #4, #32
000000000001870c	ldr	w12, [x8, x12]
0000000000018710	cmp	w12, #0xa0
0000000000018714	csinc	w10, w10, w11, ge
0000000000018718	csel	w9, w9, w11, lt
000000000001871c	cmp	w10, w9
0000000000018720	b.lt	0x186f8
0000000000018724	b	0x18730
0000000000018728	mov	w10, #0x0
000000000001872c	b	0x18730
0000000000018730	sxtw	x9, w10
0000000000018734	add	x8, x8, x9, lsl #4
0000000000018738	ldr	x8, [x8, #0x8]
000000000001873c	ldr	x8, [x8, #0x8]
0000000000018740	mov	x0, x21
0000000000018744	mov	x1, x20
0000000000018748	blr	x8
000000000001874c	cbz	x0, 0x188ac
0000000000018750	mov	x8, x0
0000000000018754	ldr	x9, [x0]
0000000000018758	and	x9, x9, #0xfffffffffffffffc
000000000001875c	ldr	x9, [x9]
0000000000018760	ldr	w10, [x9, #0x3c]
0000000000018764	ldr	x9, [x9, #0x40]
0000000000018768	tbnz	w10, #0x1f, 0x18784
000000000001876c	and	x10, x10, x25
0000000000018770	lsl	x10, x10, #4
0000000000018774	ldr	w9, [x9, x10]
0000000000018778	cmp	w9, #0xa8
000000000001877c	b.eq	0x18828
0000000000018780	b	0x18850
0000000000018784	neg	w11, w10
0000000000018788	mvn	w10, w10
000000000001878c	cmp	w11, #0x9
0000000000018790	b.ge	0x187dc
0000000000018794	cmp	w11, #0x2
0000000000018798	b.lt	0x18810
000000000001879c	mov	x11, #0x0
00000000000187a0	mov	x12, x9
00000000000187a4	ldr	w13, [x12]
00000000000187a8	cmp	w13, #0xa7
00000000000187ac	b.gt	0x1883c
00000000000187b0	add	x11, x11, #0x1
00000000000187b4	add	x12, x12, #0x10
00000000000187b8	cmp	x10, x11
00000000000187bc	b.ne	0x187a4
00000000000187c0	mov	x11, x10
00000000000187c4	sxtw	x10, w11
00000000000187c8	lsl	x10, x10, #4
00000000000187cc	ldr	w9, [x9, x10]
00000000000187d0	cmp	w9, #0xa8
00000000000187d4	b.eq	0x18828
00000000000187d8	b	0x18850
00000000000187dc	mov	w11, #0x0
00000000000187e0	add	w12, w10, w11
00000000000187e4	cmp	w12, #0x0
00000000000187e8	cinc	w12, w12, lt
00000000000187ec	asr	w12, w12, #1
00000000000187f0	sbfiz	x13, x12, #4, #32
00000000000187f4	ldr	w13, [x9, x13]
00000000000187f8	cmp	w13, #0xa8
00000000000187fc	csinc	w11, w11, w12, ge
0000000000018800	csel	w10, w10, w12, lt
0000000000018804	cmp	w11, w10
0000000000018808	b.lt	0x187e0
000000000001880c	b	0x18814
0000000000018810	mov	w11, #0x0
0000000000018814	sxtw	x10, w11
0000000000018818	lsl	x10, x10, #4
000000000001881c	ldr	w9, [x9, x10]
0000000000018820	cmp	w9, #0xa8
0000000000018824	b.ne	0x18850
0000000000018828	mov	x0, x19
000000000001882c	mov	x1, x8
0000000000018830	bl	"_kfun:kotlin.collections.HashMap#containsEntry(kotlin.collections.Map.Entry<1:0,1:1>){}kotlin.Boolean"
0000000000018834	tbnz	w0, #0x0, 0x185b0
0000000000018838	b	0x188a8
000000000001883c	sxtw	x10, w11
0000000000018840	lsl	x10, x10, #4
0000000000018844	ldr	w9, [x9, x10]
0000000000018848	cmp	w9, #0xa8
000000000001884c	b.eq	0x18828
0000000000018850	adr	x1, #0x3f830
0000000000018854	nop
0000000000018858	mov	x0, x8
000000000001885c	bl	_ThrowClassCastException
0000000000018860	brk	#0x1
0000000000018864	mov	w0, #0x1
0000000000018868	b	0x188ac
000000000001886c	b	0x18870
0000000000018870	mov	x8, sp
0000000000018874	str	x8, [x23, #0x110]
0000000000018878	bl	0x4da78 ; symbol stub for: ___cxa_begin_catch
000000000001887c	ldr	x8, [x0, #0x8]
0000000000018880	ldr	x19, [x8]
0000000000018884	str	x19, [sp, #0x28]
0000000000018888	bl	0x4da84 ; symbol stub for: ___cxa_end_catch
000000000001888c	ldr	x8, [x19]
0000000000018890	and	x8, x8, #0xfffffffffffffffc
0000000000018894	ldr	x8, [x8]
0000000000018898	ldr	w8, [x8, #0x5c]
000000000001889c	and	w8, w8, #0xfffffffe
00000000000188a0	cmp	w8, #0x84
00000000000188a4	b.ne	0x188d0
00000000000188a8	mov	w0, #0x0
00000000000188ac	ldr	x8, [sp, #0x8]
00000000000188b0	str	x8, [x23, #0x110]
00000000000188b4	ldp	x29, x30, [sp, #0x70]
00000000000188b8	ldp	x20, x19, [sp, #0x60]
00000000000188bc	ldp	x22, x21, [sp, #0x50]
00000000000188c0	ldp	x24, x23, [sp, #0x40]
00000000000188c4	ldp	x26, x25, [sp, #0x30]
00000000000188c8	add	sp, sp, #0x80
00000000000188cc	ret
00000000000188d0	mov	x0, x19
00000000000188d4	bl	_ThrowException
_kfun:kotlin.collections.HashMap#keysIterator(){}kotlin.collections.HashMap.KeysItr<1:0,1:1>:
00000000000188d8	stp	x22, x21, [sp, #-0x30]!
00000000000188dc	stp	x20, x19, [sp, #0x10]
00000000000188e0	stp	x29, x30, [sp, #0x20]
00000000000188e4	add	x29, sp, #0x20
00000000000188e8	mov	x19, x1
00000000000188ec	mov	x20, x0
00000000000188f0	adr	x8, #0x69f53
00000000000188f4	nop
00000000000188f8	ldarb	w8, [x8]
00000000000188fc	tbz	w8, #0x0, 0x18904
0000000000018900	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000018904	adrp	x0, 80 ; 0x68000
0000000000018908	add	x0, x0, #0xa00
000000000001890c	ldr	x8, [x0]
0000000000018910	blr	x8
0000000000018914	ldr	x8, [x0]
0000000000018918	ldr	x8, [x8, #0x118]
000000000001891c	add	x0, x8, #0x70
0000000000018920	mov	w1, #0x20
0000000000018924	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000018928	mov	x21, x0
000000000001892c	adr	x8, #0x3edc4
0000000000018930	nop
0000000000018934	str	x8, [x21, #0x10]!
0000000000018938	stur	xzr, [x21, #-0x8]
000000000001893c	str	x21, [x19]
0000000000018940	str	x20, [x21, #0x8]
0000000000018944	mov	w8, #-0x1
0000000000018948	str	w8, [x21, #0x14]
000000000001894c	mov	x0, x21
0000000000018950	bl	"_kfun:kotlin.collections.HashMap.Itr#initNext(){}"
0000000000018954	str	x21, [x19]
0000000000018958	mov	x0, x21
000000000001895c	ldp	x29, x30, [sp, #0x20]
0000000000018960	ldp	x20, x19, [sp, #0x10]
0000000000018964	ldp	x22, x21, [sp], #0x30
0000000000018968	ret
_kfun:kotlin.collections.HashMap#entriesIterator(){}kotlin.collections.HashMap.EntriesItr<1:0,1:1>:
000000000001896c	stp	x22, x21, [sp, #-0x30]!
0000000000018970	stp	x20, x19, [sp, #0x10]
0000000000018974	stp	x29, x30, [sp, #0x20]
0000000000018978	add	x29, sp, #0x20
000000000001897c	mov	x19, x1
0000000000018980	mov	x20, x0
0000000000018984	adr	x8, #0x69ebf
0000000000018988	nop
000000000001898c	ldarb	w8, [x8]
0000000000018990	tbz	w8, #0x0, 0x18998
0000000000018994	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000018998	adrp	x0, 80 ; 0x68000
000000000001899c	add	x0, x0, #0xa00
00000000000189a0	ldr	x8, [x0]
00000000000189a4	blr	x8
00000000000189a8	ldr	x8, [x0]
00000000000189ac	ldr	x8, [x8, #0x118]
00000000000189b0	add	x0, x8, #0x70
00000000000189b4	mov	w1, #0x20
00000000000189b8	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000189bc	mov	x21, x0
00000000000189c0	adr	x8, #0x3ee50
00000000000189c4	nop
00000000000189c8	str	x8, [x21, #0x10]!
00000000000189cc	stur	xzr, [x21, #-0x8]
00000000000189d0	str	x21, [x19]
00000000000189d4	str	x20, [x21, #0x8]
00000000000189d8	mov	w8, #-0x1
00000000000189dc	str	w8, [x21, #0x14]
00000000000189e0	mov	x0, x21
00000000000189e4	bl	"_kfun:kotlin.collections.HashMap.Itr#initNext(){}"
00000000000189e8	str	x21, [x19]
00000000000189ec	mov	x0, x21
00000000000189f0	ldp	x29, x30, [sp, #0x20]
00000000000189f4	ldp	x20, x19, [sp, #0x10]
00000000000189f8	ldp	x22, x21, [sp], #0x30
00000000000189fc	ret
_kfun:kotlin.collections.HashMap.Companion.computeHashSize#internal:
0000000000018a00	stp	x20, x19, [sp, #-0x20]!
0000000000018a04	stp	x29, x30, [sp, #0x10]
0000000000018a08	add	x29, sp, #0x10
0000000000018a0c	mov	x19, x0
0000000000018a10	adr	x8, #0x69e33
0000000000018a14	nop
0000000000018a18	ldarb	w8, [x8]
0000000000018a1c	tbz	w8, #0x0, 0x18a24
0000000000018a20	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000018a24	cmp	w19, #0x1
0000000000018a28	b.lt	0x18a44
0000000000018a2c	adds	w8, w19, w19, lsl #1
0000000000018a30	b.ne	0x18a48
0000000000018a34	mov	w0, #0x0
0000000000018a38	ldp	x29, x30, [sp, #0x10]
0000000000018a3c	ldp	x20, x19, [sp], #0x20
0000000000018a40	ret
0000000000018a44	mov	w8, #0x3
0000000000018a48	clz	w8, w8
0000000000018a4c	eor	w8, w8, #0x1f
0000000000018a50	mov	w9, #0x1
0000000000018a54	lsl	w0, w9, w8
0000000000018a58	ldp	x29, x30, [sp, #0x10]
0000000000018a5c	ldp	x20, x19, [sp], #0x20
0000000000018a60	ret
_kfun:kotlin.collections.HashMap.Itr#initNext(){}:
0000000000018a64	sub	sp, sp, #0x50
0000000000018a68	stp	x22, x21, [sp, #0x20]
0000000000018a6c	stp	x20, x19, [sp, #0x30]
0000000000018a70	stp	x29, x30, [sp, #0x40]
0000000000018a74	add	x29, sp, #0x40
0000000000018a78	mov	x19, x0
0000000000018a7c	movi.16b	v0, #0x0
0000000000018a80	stp	q0, q0, [sp]
0000000000018a84	adrp	x0, 80 ; 0x68000
0000000000018a88	add	x0, x0, #0xa00
0000000000018a8c	ldr	x8, [x0]
0000000000018a90	blr	x8
0000000000018a94	ldr	x20, [x0]
0000000000018a98	ldr	x8, [x20, #0x110]
0000000000018a9c	mov	x9, sp
0000000000018aa0	str	x9, [x20, #0x110]
0000000000018aa4	mov	x9, #0x400000000
0000000000018aa8	stp	x8, x9, [sp, #0x8]
0000000000018aac	adr	x21, #0x69d97
0000000000018ab0	nop
0000000000018ab4	ldarb	w8, [x21]
0000000000018ab8	tbz	w8, #0x0, 0x18ac0
0000000000018abc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000018ac0	ldr	w8, [x19, #0x10]
0000000000018ac4	b	0x18ad4
0000000000018ac8	ldr	w8, [x19, #0x10]
0000000000018acc	add	w8, w8, #0x1
0000000000018ad0	str	w8, [x19, #0x10]
0000000000018ad4	ldr	x9, [x19, #0x8]
0000000000018ad8	ldr	w10, [x9, #0x44]
0000000000018adc	cmp	w8, w10
0000000000018ae0	b.ge	0x18b14
0000000000018ae4	ldr	x9, [x9, #0x18]
0000000000018ae8	str	x9, [sp, #0x18]
0000000000018aec	ldr	w10, [x9, #0x8]
0000000000018af0	cmp	w10, w8
0000000000018af4	b.ls	0x18b30
0000000000018af8	add	x8, x9, w8, sxtw #2
0000000000018afc	ldr	w8, [x8, #0x10]
0000000000018b00	tbz	w8, #0x1f, 0x18b14
0000000000018b04	ldarb	w8, [x21]
0000000000018b08	tbz	w8, #0x0, 0x18ac8
0000000000018b0c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000018b10	b	0x18ac8
0000000000018b14	ldr	x8, [sp, #0x8]
0000000000018b18	str	x8, [x20, #0x110]
0000000000018b1c	ldp	x29, x30, [sp, #0x40]
0000000000018b20	ldp	x20, x19, [sp, #0x30]
0000000000018b24	ldp	x22, x21, [sp, #0x20]
0000000000018b28	add	sp, sp, #0x50
0000000000018b2c	ret
0000000000018b30	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.collections.HashMap.Itr#hasNext(){}kotlin.Boolean:
0000000000018b34	stp	x20, x19, [sp, #-0x20]!
0000000000018b38	stp	x29, x30, [sp, #0x10]
0000000000018b3c	add	x29, sp, #0x10
0000000000018b40	mov	x19, x0
0000000000018b44	adr	x8, #0x69cff
0000000000018b48	nop
0000000000018b4c	ldarb	w8, [x8]
0000000000018b50	tbz	w8, #0x0, 0x18b58
0000000000018b54	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000018b58	ldr	w8, [x19, #0x10]
0000000000018b5c	ldr	x9, [x19, #0x8]
0000000000018b60	ldr	w9, [x9, #0x44]
0000000000018b64	cmp	w8, w9
0000000000018b68	cset	w0, lt
0000000000018b6c	ldp	x29, x30, [sp, #0x10]
0000000000018b70	ldp	x20, x19, [sp], #0x20
0000000000018b74	ret
_kfun:kotlin.collections.HashMap.Itr#remove(){}:
0000000000018b78	stp	x20, x19, [sp, #-0x20]!
0000000000018b7c	stp	x29, x30, [sp, #0x10]
0000000000018b80	add	x29, sp, #0x10
0000000000018b84	mov	x19, x0
0000000000018b88	adr	x8, #0x69cbb
0000000000018b8c	nop
0000000000018b90	ldarb	w8, [x8]
0000000000018b94	tbz	w8, #0x0, 0x18b9c
0000000000018b98	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000018b9c	ldr	x0, [x19, #0x8]
0000000000018ba0	bl	"_kfun:kotlin.collections.HashMap#checkIsMutable(){}"
0000000000018ba4	ldr	x0, [x19, #0x8]
0000000000018ba8	ldr	w1, [x19, #0x14]
0000000000018bac	bl	"_kfun:kotlin.collections.HashMap.removeKeyAt#internal"
0000000000018bb0	mov	w8, #-0x1
0000000000018bb4	str	w8, [x19, #0x14]
0000000000018bb8	ldp	x29, x30, [sp, #0x10]
0000000000018bbc	ldp	x20, x19, [sp], #0x20
0000000000018bc0	ret
_kfun:kotlin.collections.HashMap.KeysItr#next(){}1:0:
0000000000018bc4	sub	sp, sp, #0x60
0000000000018bc8	stp	x22, x21, [sp, #0x30]
0000000000018bcc	stp	x20, x19, [sp, #0x40]
0000000000018bd0	stp	x29, x30, [sp, #0x50]
0000000000018bd4	add	x29, sp, #0x50
0000000000018bd8	mov	x19, x1
0000000000018bdc	mov	x20, x0
0000000000018be0	movi.16b	v0, #0x0
0000000000018be4	stp	q0, q0, [sp]
0000000000018be8	str	q0, [sp, #0x20]
0000000000018bec	adrp	x0, 80 ; 0x68000
0000000000018bf0	add	x0, x0, #0xa00
0000000000018bf4	ldr	x8, [x0]
0000000000018bf8	blr	x8
0000000000018bfc	ldr	x22, [x0]
0000000000018c00	ldr	x8, [x22, #0x110]
0000000000018c04	mov	x9, sp
0000000000018c08	str	x9, [x22, #0x110]
0000000000018c0c	mov	x9, #0x600000000
0000000000018c10	stp	x8, x9, [sp, #0x8]
0000000000018c14	adr	x8, #0x69c2f
0000000000018c18	nop
0000000000018c1c	ldarb	w8, [x8]
0000000000018c20	tbz	w8, #0x0, 0x18c28
0000000000018c24	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000018c28	ldr	w8, [x20, #0x10]
0000000000018c2c	ldr	x9, [x20, #0x8]
0000000000018c30	ldr	w10, [x9, #0x44]
0000000000018c34	cmp	w8, w10
0000000000018c38	b.ge	0x18c94
0000000000018c3c	add	w10, w8, #0x1
0000000000018c40	stp	w10, w8, [x20, #0x10]
0000000000018c44	ldr	x9, [x9, #0x8]
0000000000018c48	str	x9, [sp, #0x20]
0000000000018c4c	ldr	w10, [x9, #0x8]
0000000000018c50	cmp	w10, w8
0000000000018c54	b.ls	0x18cd0
0000000000018c58	sxtw	x8, w8
0000000000018c5c	add	x8, x9, x8, lsl #3
0000000000018c60	ldr	x21, [x8, #0x10]
0000000000018c64	str	x21, [sp, #0x28]
0000000000018c68	mov	x0, x20
0000000000018c6c	bl	"_kfun:kotlin.collections.HashMap.Itr#initNext(){}"
0000000000018c70	str	x21, [x19]
0000000000018c74	ldr	x8, [sp, #0x8]
0000000000018c78	str	x8, [x22, #0x110]
0000000000018c7c	mov	x0, x21
0000000000018c80	ldp	x29, x30, [sp, #0x50]
0000000000018c84	ldp	x20, x19, [sp, #0x40]
0000000000018c88	ldp	x22, x21, [sp, #0x30]
0000000000018c8c	add	sp, sp, #0x60
0000000000018c90	ret
0000000000018c94	ldr	x8, [x22, #0x118]
0000000000018c98	add	x0, x8, #0x70
0000000000018c9c	mov	w1, #0x38
0000000000018ca0	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000018ca4	mov	x19, x0
0000000000018ca8	adr	x8, #0x3bdf8
0000000000018cac	nop
0000000000018cb0	str	x8, [x19, #0x10]!
0000000000018cb4	stur	xzr, [x19, #-0x8]
0000000000018cb8	str	x19, [sp, #0x18]
0000000000018cbc	mov	x0, x19
0000000000018cc0	mov	x1, #0x0
0000000000018cc4	bl	"_kfun:kotlin.Throwable#<init>(kotlin.String?;kotlin.Throwable?){}"
0000000000018cc8	mov	x0, x19
0000000000018ccc	bl	_ThrowException
0000000000018cd0	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.collections.HashMap.ValuesItr#next(){}1:1:
0000000000018cd4	sub	sp, sp, #0x60
0000000000018cd8	stp	x22, x21, [sp, #0x30]
0000000000018cdc	stp	x20, x19, [sp, #0x40]
0000000000018ce0	stp	x29, x30, [sp, #0x50]
0000000000018ce4	add	x29, sp, #0x50
0000000000018ce8	mov	x19, x1
0000000000018cec	mov	x20, x0
0000000000018cf0	movi.16b	v0, #0x0
0000000000018cf4	stp	q0, q0, [sp]
0000000000018cf8	str	q0, [sp, #0x20]
0000000000018cfc	adrp	x0, 80 ; 0x68000
0000000000018d00	add	x0, x0, #0xa00
0000000000018d04	ldr	x8, [x0]
0000000000018d08	blr	x8
0000000000018d0c	ldr	x22, [x0]
0000000000018d10	ldr	x8, [x22, #0x110]
0000000000018d14	mov	x9, sp
0000000000018d18	str	x9, [x22, #0x110]
0000000000018d1c	mov	x9, #0x600000000
0000000000018d20	stp	x8, x9, [sp, #0x8]
0000000000018d24	adr	x8, #0x69b1f
0000000000018d28	nop
0000000000018d2c	ldarb	w8, [x8]
0000000000018d30	tbz	w8, #0x0, 0x18d38
0000000000018d34	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000018d38	ldr	w8, [x20, #0x10]
0000000000018d3c	ldr	x9, [x20, #0x8]
0000000000018d40	ldr	w10, [x9, #0x44]
0000000000018d44	cmp	w8, w10
0000000000018d48	b.ge	0x18da8
0000000000018d4c	add	w10, w8, #0x1
0000000000018d50	stp	w10, w8, [x20, #0x10]
0000000000018d54	ldr	x9, [x9, #0x10]
0000000000018d58	str	x9, [sp, #0x20]
0000000000018d5c	cbz	x9, 0x18de4
0000000000018d60	ldr	w10, [x9, #0x8]
0000000000018d64	cmp	w10, w8
0000000000018d68	b.ls	0x18de8
0000000000018d6c	sxtw	x8, w8
0000000000018d70	add	x8, x9, x8, lsl #3
0000000000018d74	ldr	x21, [x8, #0x10]
0000000000018d78	str	x21, [sp, #0x28]
0000000000018d7c	mov	x0, x20
0000000000018d80	bl	"_kfun:kotlin.collections.HashMap.Itr#initNext(){}"
0000000000018d84	str	x21, [x19]
0000000000018d88	ldr	x8, [sp, #0x8]
0000000000018d8c	str	x8, [x22, #0x110]
0000000000018d90	mov	x0, x21
0000000000018d94	ldp	x29, x30, [sp, #0x50]
0000000000018d98	ldp	x20, x19, [sp, #0x40]
0000000000018d9c	ldp	x22, x21, [sp, #0x30]
0000000000018da0	add	sp, sp, #0x60
0000000000018da4	ret
0000000000018da8	ldr	x8, [x22, #0x118]
0000000000018dac	add	x0, x8, #0x70
0000000000018db0	mov	w1, #0x38
0000000000018db4	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000018db8	mov	x19, x0
0000000000018dbc	adr	x8, #0x3bce4
0000000000018dc0	nop
0000000000018dc4	str	x8, [x19, #0x10]!
0000000000018dc8	stur	xzr, [x19, #-0x8]
0000000000018dcc	str	x19, [sp, #0x18]
0000000000018dd0	mov	x0, x19
0000000000018dd4	mov	x1, #0x0
0000000000018dd8	bl	"_kfun:kotlin.Throwable#<init>(kotlin.String?;kotlin.Throwable?){}"
0000000000018ddc	mov	x0, x19
0000000000018de0	bl	_ThrowException
0000000000018de4	bl	_ThrowNullPointerException
0000000000018de8	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.collections.HashMap.EntriesItr#next(){}kotlin.collections.HashMap.EntryRef<1:0,1:1>:
0000000000018dec	sub	sp, sp, #0x70
0000000000018df0	stp	x24, x23, [sp, #0x30]
0000000000018df4	stp	x22, x21, [sp, #0x40]
0000000000018df8	stp	x20, x19, [sp, #0x50]
0000000000018dfc	stp	x29, x30, [sp, #0x60]
0000000000018e00	add	x29, sp, #0x60
0000000000018e04	mov	x19, x1
0000000000018e08	mov	x20, x0
0000000000018e0c	movi.16b	v0, #0x0
0000000000018e10	stp	q0, q0, [sp]
0000000000018e14	str	xzr, [sp, #0x20]
0000000000018e18	adrp	x0, 80 ; 0x68000
0000000000018e1c	add	x0, x0, #0xa00
0000000000018e20	ldr	x8, [x0]
0000000000018e24	blr	x8
0000000000018e28	ldr	x22, [x0]
0000000000018e2c	ldr	x8, [x22, #0x110]
0000000000018e30	mov	x9, sp
0000000000018e34	str	x9, [x22, #0x110]
0000000000018e38	mov	x9, #0x500000000
0000000000018e3c	stp	x8, x9, [sp, #0x8]
0000000000018e40	adr	x8, #0x69a03
0000000000018e44	nop
0000000000018e48	ldarb	w8, [x8]
0000000000018e4c	tbz	w8, #0x0, 0x18e54
0000000000018e50	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000018e54	ldr	w23, [x20, #0x10]
0000000000018e58	ldr	x24, [x20, #0x8]
0000000000018e5c	ldr	w8, [x24, #0x44]
0000000000018e60	cmp	w23, w8
0000000000018e64	b.ge	0x18ed0
0000000000018e68	add	w8, w23, #0x1
0000000000018e6c	stp	w8, w23, [x20, #0x10]
0000000000018e70	ldr	x8, [x22, #0x118]
0000000000018e74	add	x0, x8, #0x70
0000000000018e78	mov	w1, #0x20
0000000000018e7c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000018e80	mov	x21, x0
0000000000018e84	adr	x8, #0x3ea1c
0000000000018e88	nop
0000000000018e8c	str	x8, [x21, #0x10]!
0000000000018e90	stur	xzr, [x21, #-0x8]
0000000000018e94	str	x21, [sp, #0x20]
0000000000018e98	str	x24, [x21, #0x8]
0000000000018e9c	str	w23, [x21, #0x10]
0000000000018ea0	mov	x0, x20
0000000000018ea4	bl	"_kfun:kotlin.collections.HashMap.Itr#initNext(){}"
0000000000018ea8	str	x21, [x19]
0000000000018eac	ldr	x8, [sp, #0x8]
0000000000018eb0	str	x8, [x22, #0x110]
0000000000018eb4	mov	x0, x21
0000000000018eb8	ldp	x29, x30, [sp, #0x60]
0000000000018ebc	ldp	x20, x19, [sp, #0x50]
0000000000018ec0	ldp	x22, x21, [sp, #0x40]
0000000000018ec4	ldp	x24, x23, [sp, #0x30]
0000000000018ec8	add	sp, sp, #0x70
0000000000018ecc	ret
0000000000018ed0	ldr	x8, [x22, #0x118]
0000000000018ed4	add	x0, x8, #0x70
0000000000018ed8	mov	w1, #0x38
0000000000018edc	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000018ee0	mov	x19, x0
0000000000018ee4	adr	x8, #0x3bbbc
0000000000018ee8	nop
0000000000018eec	str	x8, [x19, #0x10]!
0000000000018ef0	stur	xzr, [x19, #-0x8]
0000000000018ef4	str	x19, [sp, #0x18]
0000000000018ef8	mov	x0, x19
0000000000018efc	mov	x1, #0x0
0000000000018f00	bl	"_kfun:kotlin.Throwable#<init>(kotlin.String?;kotlin.Throwable?){}"
0000000000018f04	mov	x0, x19
0000000000018f08	bl	_ThrowException
_kfun:kotlin.collections.HashMap.EntryRef#<get-key>(){}1:0:
0000000000018f0c	sub	sp, sp, #0x50
0000000000018f10	stp	x22, x21, [sp, #0x20]
0000000000018f14	stp	x20, x19, [sp, #0x30]
0000000000018f18	stp	x29, x30, [sp, #0x40]
0000000000018f1c	add	x29, sp, #0x40
0000000000018f20	mov	x19, x1
0000000000018f24	mov	x20, x0
0000000000018f28	movi.16b	v0, #0x0
0000000000018f2c	stp	q0, q0, [sp]
0000000000018f30	adrp	x0, 80 ; 0x68000
0000000000018f34	add	x0, x0, #0xa00
0000000000018f38	ldr	x8, [x0]
0000000000018f3c	blr	x8
0000000000018f40	ldr	x21, [x0]
0000000000018f44	ldr	x8, [x21, #0x110]
0000000000018f48	mov	x9, sp
0000000000018f4c	str	x9, [x21, #0x110]
0000000000018f50	mov	x9, #0x400000000
0000000000018f54	stp	x8, x9, [sp, #0x8]
0000000000018f58	adr	x8, #0x698eb
0000000000018f5c	nop
0000000000018f60	ldarb	w8, [x8]
0000000000018f64	tbz	w8, #0x0, 0x18f6c
0000000000018f68	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000018f6c	ldr	x8, [x20, #0x8]
0000000000018f70	ldr	x8, [x8, #0x8]
0000000000018f74	str	x8, [sp, #0x18]
0000000000018f78	ldrsw	x9, [x20, #0x10]
0000000000018f7c	ldr	w10, [x8, #0x8]
0000000000018f80	cmp	w10, w9
0000000000018f84	b.ls	0x18fb0
0000000000018f88	add	x8, x8, x9, lsl #3
0000000000018f8c	ldr	x0, [x8, #0x10]
0000000000018f90	str	x0, [x19]
0000000000018f94	ldr	x8, [sp, #0x8]
0000000000018f98	str	x8, [x21, #0x110]
0000000000018f9c	ldp	x29, x30, [sp, #0x40]
0000000000018fa0	ldp	x20, x19, [sp, #0x30]
0000000000018fa4	ldp	x22, x21, [sp, #0x20]
0000000000018fa8	add	sp, sp, #0x50
0000000000018fac	ret
0000000000018fb0	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.collections.HashMap.EntryRef#<get-value>(){}1:1:
0000000000018fb4	sub	sp, sp, #0x50
0000000000018fb8	stp	x22, x21, [sp, #0x20]
0000000000018fbc	stp	x20, x19, [sp, #0x30]
0000000000018fc0	stp	x29, x30, [sp, #0x40]
0000000000018fc4	add	x29, sp, #0x40
0000000000018fc8	mov	x19, x1
0000000000018fcc	mov	x20, x0
0000000000018fd0	movi.16b	v0, #0x0
0000000000018fd4	stp	q0, q0, [sp]
0000000000018fd8	adrp	x0, 80 ; 0x68000
0000000000018fdc	add	x0, x0, #0xa00
0000000000018fe0	ldr	x8, [x0]
0000000000018fe4	blr	x8
0000000000018fe8	ldr	x21, [x0]
0000000000018fec	ldr	x8, [x21, #0x110]
0000000000018ff0	mov	x9, sp
0000000000018ff4	str	x9, [x21, #0x110]
0000000000018ff8	mov	x9, #0x400000000
0000000000018ffc	stp	x8, x9, [sp, #0x8]
0000000000019000	adr	x8, #0x69843
0000000000019004	nop
0000000000019008	ldarb	w8, [x8]
000000000001900c	tbz	w8, #0x0, 0x19014
0000000000019010	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000019014	ldr	x8, [x20, #0x8]
0000000000019018	ldr	x8, [x8, #0x10]
000000000001901c	str	x8, [sp, #0x18]
0000000000019020	cbz	x8, 0x1905c
0000000000019024	ldrsw	x9, [x20, #0x10]
0000000000019028	ldr	w10, [x8, #0x8]
000000000001902c	cmp	w10, w9
0000000000019030	b.ls	0x19060
0000000000019034	add	x8, x8, x9, lsl #3
0000000000019038	ldr	x0, [x8, #0x10]
000000000001903c	str	x0, [x19]
0000000000019040	ldr	x8, [sp, #0x8]
0000000000019044	str	x8, [x21, #0x110]
0000000000019048	ldp	x29, x30, [sp, #0x40]
000000000001904c	ldp	x20, x19, [sp, #0x30]
0000000000019050	ldp	x22, x21, [sp, #0x20]
0000000000019054	add	sp, sp, #0x50
0000000000019058	ret
000000000001905c	bl	_ThrowNullPointerException
0000000000019060	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.collections.HashMap.EntryRef#setValue(1:1){}1:1:
0000000000019064	sub	sp, sp, #0x70
0000000000019068	stp	x24, x23, [sp, #0x30]
000000000001906c	stp	x22, x21, [sp, #0x40]
0000000000019070	stp	x20, x19, [sp, #0x50]
0000000000019074	stp	x29, x30, [sp, #0x60]
0000000000019078	add	x29, sp, #0x60
000000000001907c	mov	x19, x2
0000000000019080	mov	x20, x1
0000000000019084	mov	x21, x0
0000000000019088	movi.16b	v0, #0x0
000000000001908c	stp	q0, q0, [sp]
0000000000019090	str	xzr, [sp, #0x20]
0000000000019094	mov	x8, sp
0000000000019098	add	x22, x8, #0x18
000000000001909c	adrp	x0, 79 ; 0x68000
00000000000190a0	add	x0, x0, #0xa00
00000000000190a4	ldr	x9, [x0]
00000000000190a8	blr	x9
00000000000190ac	ldr	x23, [x0]
00000000000190b0	ldr	x9, [x23, #0x110]
00000000000190b4	str	x8, [x23, #0x110]
00000000000190b8	mov	x8, #0x500000000
00000000000190bc	stp	x9, x8, [sp, #0x8]
00000000000190c0	adr	x8, #0x69783
00000000000190c4	nop
00000000000190c8	ldarb	w8, [x8]
00000000000190cc	tbz	w8, #0x0, 0x190d4
00000000000190d0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000190d4	ldr	x0, [x21, #0x8]
00000000000190d8	bl	"_kfun:kotlin.collections.HashMap#checkIsMutable(){}"
00000000000190dc	ldr	x0, [x21, #0x8]
00000000000190e0	mov	x1, x22
00000000000190e4	bl	"_kfun:kotlin.collections.HashMap.allocateValuesArray#internal"
00000000000190e8	ldrsw	x8, [x21, #0x10]
00000000000190ec	ldr	w9, [x0, #0x8]
00000000000190f0	cmp	w9, w8
00000000000190f4	b.ls	0x19134
00000000000190f8	add	x9, x0, x8, lsl #3
00000000000190fc	ldr	x8, [x9, #0x10]
0000000000019100	str	x8, [sp, #0x20]
0000000000019104	ldr	xzr, [x0]
0000000000019108	str	x20, [x9, #0x10]
000000000001910c	str	x8, [x19]
0000000000019110	ldr	x9, [sp, #0x8]
0000000000019114	str	x9, [x23, #0x110]
0000000000019118	mov	x0, x8
000000000001911c	ldp	x29, x30, [sp, #0x60]
0000000000019120	ldp	x20, x19, [sp, #0x50]
0000000000019124	ldp	x22, x21, [sp, #0x40]
0000000000019128	ldp	x24, x23, [sp, #0x30]
000000000001912c	add	sp, sp, #0x70
0000000000019130	ret
0000000000019134	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.collections.HashMap.EntryRef#equals(kotlin.Any?){}kotlin.Boolean:
0000000000019138	sub	sp, sp, #0x80
000000000001913c	stp	x24, x23, [sp, #0x40]
0000000000019140	stp	x22, x21, [sp, #0x50]
0000000000019144	stp	x20, x19, [sp, #0x60]
0000000000019148	stp	x29, x30, [sp, #0x70]
000000000001914c	add	x29, sp, #0x70
0000000000019150	mov	x20, x1
0000000000019154	mov	x19, x0
0000000000019158	movi.16b	v0, #0x0
000000000001915c	stp	q0, q0, [sp]
0000000000019160	str	xzr, [sp, #0x30]
0000000000019164	str	q0, [sp, #0x20]
0000000000019168	mov	x24, sp
000000000001916c	adrp	x0, 79 ; 0x68000
0000000000019170	add	x0, x0, #0xa00
0000000000019174	ldr	x8, [x0]
0000000000019178	blr	x8
000000000001917c	ldr	x23, [x0]
0000000000019180	ldr	x8, [x23, #0x110]
0000000000019184	str	x24, [x23, #0x110]
0000000000019188	mov	x9, #0x700000000
000000000001918c	stp	x8, x9, [sp, #0x8]
0000000000019190	adr	x8, #0x696b3
0000000000019194	nop
0000000000019198	ldarb	w8, [x8]
000000000001919c	tbz	w8, #0x0, 0x191a4
00000000000191a0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000191a4	cbz	x20, 0x193ac
00000000000191a8	ldr	x8, [x20]
00000000000191ac	and	x8, x8, #0xfffffffffffffffc
00000000000191b0	ldr	x8, [x8]
00000000000191b4	ldr	w9, [x8, #0x3c]
00000000000191b8	ldr	x8, [x8, #0x40]
00000000000191bc	tbnz	w9, #0x1f, 0x191dc
00000000000191c0	mov	w10, #0xa8
00000000000191c4	and	x9, x9, x10
00000000000191c8	lsl	x9, x9, #4
00000000000191cc	ldr	w8, [x8, x9]
00000000000191d0	cmp	w8, #0xa8
00000000000191d4	b.eq	0x192ac
00000000000191d8	b	0x193ac
00000000000191dc	neg	w10, w9
00000000000191e0	mvn	w9, w9
00000000000191e4	cmp	w10, #0x9
00000000000191e8	b.ge	0x19234
00000000000191ec	cmp	w10, #0x2
00000000000191f0	b.lt	0x1927c
00000000000191f4	mov	x10, #0x0
00000000000191f8	mov	x11, x8
00000000000191fc	ldr	w12, [x11]
0000000000019200	cmp	w12, #0xa7
0000000000019204	b.gt	0x19298
0000000000019208	add	x10, x10, #0x1
000000000001920c	add	x11, x11, #0x10
0000000000019210	cmp	x9, x10
0000000000019214	b.ne	0x191fc
0000000000019218	mov	x10, x9
000000000001921c	sxtw	x9, w10
0000000000019220	lsl	x9, x9, #4
0000000000019224	ldr	w8, [x8, x9]
0000000000019228	cmp	w8, #0xa8
000000000001922c	b.eq	0x192ac
0000000000019230	b	0x193ac
0000000000019234	mov	w10, #0x0
0000000000019238	add	w11, w9, w10
000000000001923c	cmp	w11, #0x0
0000000000019240	cinc	w11, w11, lt
0000000000019244	asr	w11, w11, #1
0000000000019248	sbfiz	x12, x11, #4, #32
000000000001924c	ldr	w12, [x8, x12]
0000000000019250	cmp	w12, #0xa8
0000000000019254	csinc	w10, w10, w11, ge
0000000000019258	csel	w9, w9, w11, lt
000000000001925c	cmp	w10, w9
0000000000019260	b.lt	0x19238
0000000000019264	sxtw	x9, w10
0000000000019268	lsl	x9, x9, #4
000000000001926c	ldr	w8, [x8, x9]
0000000000019270	cmp	w8, #0xa8
0000000000019274	b.ne	0x193ac
0000000000019278	b	0x192ac
000000000001927c	mov	w10, #0x0
0000000000019280	sxtw	x9, w10
0000000000019284	lsl	x9, x9, #4
0000000000019288	ldr	w8, [x8, x9]
000000000001928c	cmp	w8, #0xa8
0000000000019290	b.eq	0x192ac
0000000000019294	b	0x193ac
0000000000019298	sxtw	x9, w10
000000000001929c	lsl	x9, x9, #4
00000000000192a0	ldr	w8, [x8, x9]
00000000000192a4	cmp	w8, #0xa8
00000000000192a8	b.ne	0x193ac
00000000000192ac	add	x21, x24, #0x20
00000000000192b0	add	x1, x24, #0x18
00000000000192b4	ldr	x8, [x20]
00000000000192b8	and	x8, x8, #0xfffffffffffffffc
00000000000192bc	ldr	x8, [x8]
00000000000192c0	ldr	w9, [x8, #0x3c]
00000000000192c4	ldr	x8, [x8, #0x40]
00000000000192c8	tbnz	w9, #0x1f, 0x192d8
00000000000192cc	mov	w10, #0xa8
00000000000192d0	and	x9, x9, x10
00000000000192d4	b	0x1935c
00000000000192d8	neg	w10, w9
00000000000192dc	mvn	w9, w9
00000000000192e0	cmp	w10, #0x9
00000000000192e4	b.ge	0x1931c
00000000000192e8	cmp	w10, #0x2
00000000000192ec	b.lt	0x19350
00000000000192f0	mov	x10, #0x0
00000000000192f4	mov	x11, x8
00000000000192f8	ldr	w12, [x11]
00000000000192fc	cmp	w12, #0xa7
0000000000019300	b.gt	0x19358
0000000000019304	add	x10, x10, #0x1
0000000000019308	add	x11, x11, #0x10
000000000001930c	cmp	x9, x10
0000000000019310	b.ne	0x192f8
0000000000019314	mov	x10, x9
0000000000019318	b	0x19358
000000000001931c	mov	w10, #0x0
0000000000019320	add	w11, w9, w10
0000000000019324	cmp	w11, #0x0
0000000000019328	cinc	w11, w11, lt
000000000001932c	asr	w11, w11, #1
0000000000019330	sbfiz	x12, x11, #4, #32
0000000000019334	ldr	w12, [x8, x12]
0000000000019338	cmp	w12, #0xa8
000000000001933c	csinc	w10, w10, w11, ge
0000000000019340	csel	w9, w9, w11, lt
0000000000019344	cmp	w10, w9
0000000000019348	b.lt	0x19320
000000000001934c	b	0x19358
0000000000019350	mov	w10, #0x0
0000000000019354	b	0x19358
0000000000019358	sxtw	x9, w10
000000000001935c	add	x8, x8, x9, lsl #4
0000000000019360	ldr	x8, [x8, #0x8]
0000000000019364	ldr	x8, [x8]
0000000000019368	mov	x0, x20
000000000001936c	blr	x8
0000000000019370	mov	x22, x0
0000000000019374	mov	x0, x19
0000000000019378	mov	x1, x21
000000000001937c	bl	"_kfun:kotlin.collections.HashMap.EntryRef#<get-key>(){}1:0"
0000000000019380	mov	x1, x0
0000000000019384	cbz	x22, 0x193a8
0000000000019388	ldr	x8, [x22]
000000000001938c	and	x8, x8, #0xfffffffffffffffc
0000000000019390	ldr	x8, [x8]
0000000000019394	ldr	x8, [x8, #0x70]
0000000000019398	mov	x0, x22
000000000001939c	blr	x8
00000000000193a0	cbz	w0, 0x193b0
00000000000193a4	b	0x193d0
00000000000193a8	cbz	x1, 0x193d0
00000000000193ac	mov	w0, #0x0
00000000000193b0	ldr	x8, [sp, #0x8]
00000000000193b4	str	x8, [x23, #0x110]
00000000000193b8	ldp	x29, x30, [sp, #0x70]
00000000000193bc	ldp	x20, x19, [sp, #0x60]
00000000000193c0	ldp	x22, x21, [sp, #0x50]
00000000000193c4	ldp	x24, x23, [sp, #0x40]
00000000000193c8	add	sp, sp, #0x80
00000000000193cc	ret
00000000000193d0	add	x21, x24, #0x30
00000000000193d4	add	x1, x24, #0x28
00000000000193d8	ldr	x8, [x20]
00000000000193dc	and	x8, x8, #0xfffffffffffffffc
00000000000193e0	ldr	x8, [x8]
00000000000193e4	ldr	w9, [x8, #0x3c]
00000000000193e8	ldr	x8, [x8, #0x40]
00000000000193ec	tbnz	w9, #0x1f, 0x193fc
00000000000193f0	mov	w10, #0xa8
00000000000193f4	and	x9, x9, x10
00000000000193f8	b	0x19480
00000000000193fc	neg	w10, w9
0000000000019400	mvn	w9, w9
0000000000019404	cmp	w10, #0x9
0000000000019408	b.ge	0x19440
000000000001940c	cmp	w10, #0x2
0000000000019410	b.lt	0x19474
0000000000019414	mov	x10, #0x0
0000000000019418	mov	x11, x8
000000000001941c	ldr	w12, [x11]
0000000000019420	cmp	w12, #0xa7
0000000000019424	b.gt	0x1947c
0000000000019428	add	x10, x10, #0x1
000000000001942c	add	x11, x11, #0x10
0000000000019430	cmp	x9, x10
0000000000019434	b.ne	0x1941c
0000000000019438	mov	x10, x9
000000000001943c	b	0x1947c
0000000000019440	mov	w10, #0x0
0000000000019444	add	w11, w9, w10
0000000000019448	cmp	w11, #0x0
000000000001944c	cinc	w11, w11, lt
0000000000019450	asr	w11, w11, #1
0000000000019454	sbfiz	x12, x11, #4, #32
0000000000019458	ldr	w12, [x8, x12]
000000000001945c	cmp	w12, #0xa8
0000000000019460	csinc	w10, w10, w11, ge
0000000000019464	csel	w9, w9, w11, lt
0000000000019468	cmp	w10, w9
000000000001946c	b.lt	0x19444
0000000000019470	b	0x1947c
0000000000019474	mov	w10, #0x0
0000000000019478	b	0x1947c
000000000001947c	sxtw	x9, w10
0000000000019480	add	x8, x8, x9, lsl #4
0000000000019484	ldr	x8, [x8, #0x8]
0000000000019488	ldr	x8, [x8, #0x8]
000000000001948c	mov	x0, x20
0000000000019490	blr	x8
0000000000019494	mov	x20, x0
0000000000019498	mov	x0, x19
000000000001949c	mov	x1, x21
00000000000194a0	bl	"_kfun:kotlin.collections.HashMap.EntryRef#<get-value>(){}1:1"
00000000000194a4	mov	x1, x0
00000000000194a8	cbz	x20, 0x194c8
00000000000194ac	ldr	x8, [x20]
00000000000194b0	and	x8, x8, #0xfffffffffffffffc
00000000000194b4	ldr	x8, [x8]
00000000000194b8	ldr	x8, [x8, #0x70]
00000000000194bc	mov	x0, x20
00000000000194c0	blr	x8
00000000000194c4	b	0x193b0
00000000000194c8	cmp	x1, #0x0
00000000000194cc	cset	w0, eq
00000000000194d0	b	0x193b0
_kfun:kotlin.collections.HashMap.EntryRef#hashCode(){}kotlin.Int:
00000000000194d4	sub	sp, sp, #0x60
00000000000194d8	stp	x22, x21, [sp, #0x30]
00000000000194dc	stp	x20, x19, [sp, #0x40]
00000000000194e0	stp	x29, x30, [sp, #0x50]
00000000000194e4	add	x29, sp, #0x50
00000000000194e8	mov	x19, x0
00000000000194ec	movi.16b	v0, #0x0
00000000000194f0	stp	q0, q0, [sp]
00000000000194f4	str	xzr, [sp, #0x20]
00000000000194f8	mov	x8, sp
00000000000194fc	add	x20, x8, #0x20
0000000000019500	add	x21, x8, #0x18
0000000000019504	adrp	x0, 79 ; 0x68000
0000000000019508	add	x0, x0, #0xa00
000000000001950c	ldr	x9, [x0]
0000000000019510	blr	x9
0000000000019514	ldr	x22, [x0]
0000000000019518	ldr	x9, [x22, #0x110]
000000000001951c	str	x8, [x22, #0x110]
0000000000019520	mov	x8, #0x500000000
0000000000019524	stp	x9, x8, [sp, #0x8]
0000000000019528	adr	x8, #0x6931b
000000000001952c	nop
0000000000019530	ldarb	w8, [x8]
0000000000019534	tbz	w8, #0x0, 0x1953c
0000000000019538	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001953c	mov	x0, x19
0000000000019540	mov	x1, x21
0000000000019544	bl	"_kfun:kotlin.collections.HashMap.EntryRef#<get-key>(){}1:0"
0000000000019548	cbz	x0, 0x195a8
000000000001954c	ldr	x8, [x0]
0000000000019550	and	x8, x8, #0xfffffffffffffffc
0000000000019554	ldr	x8, [x8]
0000000000019558	ldr	x8, [x8, #0x78]
000000000001955c	blr	x8
0000000000019560	mov	x21, x0
0000000000019564	mov	x0, x19
0000000000019568	mov	x1, x20
000000000001956c	bl	"_kfun:kotlin.collections.HashMap.EntryRef#<get-value>(){}1:1"
0000000000019570	cbz	x0, 0x19588
0000000000019574	ldr	x8, [x0]
0000000000019578	and	x8, x8, #0xfffffffffffffffc
000000000001957c	ldr	x8, [x8]
0000000000019580	ldr	x8, [x8, #0x78]
0000000000019584	blr	x8
0000000000019588	eor	w0, w21, w0
000000000001958c	ldr	x8, [sp, #0x8]
0000000000019590	str	x8, [x22, #0x110]
0000000000019594	ldp	x29, x30, [sp, #0x50]
0000000000019598	ldp	x20, x19, [sp, #0x40]
000000000001959c	ldp	x22, x21, [sp, #0x30]
00000000000195a0	add	sp, sp, #0x60
00000000000195a4	ret
00000000000195a8	mov	w21, #0x0
00000000000195ac	mov	x0, x19
00000000000195b0	mov	x1, x20
00000000000195b4	bl	"_kfun:kotlin.collections.HashMap.EntryRef#<get-value>(){}1:1"
00000000000195b8	cbnz	x0, 0x19574
00000000000195bc	b	0x19588
_kfun:kotlin.collections.HashMap.EntryRef#toString(){}kotlin.String:
00000000000195c0	sub	sp, sp, #0xd0
00000000000195c4	stp	x26, x25, [sp, #0x80]
00000000000195c8	stp	x24, x23, [sp, #0x90]
00000000000195cc	stp	x22, x21, [sp, #0xa0]
00000000000195d0	stp	x20, x19, [sp, #0xb0]
00000000000195d4	stp	x29, x30, [sp, #0xc0]
00000000000195d8	add	x29, sp, #0xc0
00000000000195dc	mov	x19, x1
00000000000195e0	mov	x20, x0
00000000000195e4	movi.16b	v0, #0x0
00000000000195e8	stp	q0, q0, [sp, #0x20]
00000000000195ec	str	xzr, [sp, #0x70]
00000000000195f0	stp	q0, q0, [sp, #0x50]
00000000000195f4	str	q0, [sp, #0x40]
00000000000195f8	add	x26, sp, #0x20
00000000000195fc	add	x24, x26, #0x20
0000000000019600	add	x23, x26, #0x30
0000000000019604	add	x21, x26, #0x40
0000000000019608	add	x22, x26, #0x38
000000000001960c	stp	xzr, xzr, [sp, #0x10]
0000000000019610	adr	x8, #0x3ed80
0000000000019614	nop
0000000000019618	orr	x8, x8, #0x3
000000000001961c	str	x8, [sp, #0x8]
0000000000019620	adrp	x0, 79 ; 0x68000
0000000000019624	add	x0, x0, #0xa00
0000000000019628	ldr	x8, [x0]
000000000001962c	blr	x8
0000000000019630	ldr	x25, [x0]
0000000000019634	ldr	x8, [x25, #0x110]
0000000000019638	str	x26, [x25, #0x110]
000000000001963c	mov	x9, #0xb00000000
0000000000019640	stp	x8, x9, [sp, #0x28]
0000000000019644	adr	x8, #0x691ff
0000000000019648	nop
000000000001964c	ldarb	w8, [x8]
0000000000019650	tbz	w8, #0x0, 0x19658
0000000000019654	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000019658	add	x8, sp, #0x8
000000000001965c	str	x8, [sp, #0x38]
0000000000019660	add	x0, sp, #0x8
0000000000019664	mov	w1, #0xa
0000000000019668	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
000000000001966c	mov	x0, x20
0000000000019670	mov	x1, x24
0000000000019674	bl	"_kfun:kotlin.collections.HashMap.EntryRef#<get-key>(){}1:0"
0000000000019678	cbz	x0, 0x196a0
000000000001967c	add	x8, sp, #0x20
0000000000019680	add	x1, x8, #0x28
0000000000019684	ldr	x8, [x0]
0000000000019688	and	x8, x8, #0xfffffffffffffffc
000000000001968c	ldr	x8, [x8]
0000000000019690	ldr	x8, [x8, #0x80]
0000000000019694	blr	x8
0000000000019698	mov	x1, x0
000000000001969c	b	0x196a4
00000000000196a0	mov	x1, #0x0
00000000000196a4	add	x0, sp, #0x8
00000000000196a8	mov	x2, x23
00000000000196ac	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
00000000000196b0	adr	x1, #0x481a0
00000000000196b4	nop
00000000000196b8	add	x0, sp, #0x8
00000000000196bc	mov	x2, x22
00000000000196c0	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
00000000000196c4	mov	x0, x20
00000000000196c8	mov	x1, x21
00000000000196cc	bl	"_kfun:kotlin.collections.HashMap.EntryRef#<get-value>(){}1:1"
00000000000196d0	cbz	x0, 0x196f4
00000000000196d4	add	x1, x26, #0x48
00000000000196d8	ldr	x8, [x0]
00000000000196dc	and	x8, x8, #0xfffffffffffffffc
00000000000196e0	ldr	x8, [x8]
00000000000196e4	ldr	x8, [x8, #0x80]
00000000000196e8	blr	x8
00000000000196ec	mov	x1, x0
00000000000196f0	b	0x196f8
00000000000196f4	mov	x1, #0x0
00000000000196f8	add	x8, sp, #0x20
00000000000196fc	add	x2, x8, #0x50
0000000000019700	add	x0, sp, #0x8
0000000000019704	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000019708	add	x0, sp, #0x8
000000000001970c	mov	x1, x19
0000000000019710	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
0000000000019714	str	x0, [x19]
0000000000019718	ldr	x8, [sp, #0x28]
000000000001971c	str	x8, [x25, #0x110]
0000000000019720	ldp	x29, x30, [sp, #0xc0]
0000000000019724	ldp	x20, x19, [sp, #0xb0]
0000000000019728	ldp	x22, x21, [sp, #0xa0]
000000000001972c	ldp	x24, x23, [sp, #0x90]
0000000000019730	ldp	x26, x25, [sp, #0x80]
0000000000019734	add	sp, sp, #0xd0
0000000000019738	ret
_kfun:kotlin.collections.HashMapKeys#<get-size>(){}kotlin.Int:
000000000001973c	stp	x20, x19, [sp, #-0x20]!
0000000000019740	stp	x29, x30, [sp, #0x10]
0000000000019744	add	x29, sp, #0x10
0000000000019748	mov	x19, x0
000000000001974c	adr	x8, #0x690f7
0000000000019750	nop
0000000000019754	ldarb	w8, [x8]
0000000000019758	tbz	w8, #0x0, 0x19760
000000000001975c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000019760	ldr	x8, [x19, #0x8]
0000000000019764	ldr	w0, [x8, #0x4c]
0000000000019768	ldp	x29, x30, [sp, #0x10]
000000000001976c	ldp	x20, x19, [sp], #0x20
0000000000019770	ret
_kfun:kotlin.collections.HashMapKeys#isEmpty(){}kotlin.Boolean:
0000000000019774	stp	x20, x19, [sp, #-0x20]!
0000000000019778	stp	x29, x30, [sp, #0x10]
000000000001977c	add	x29, sp, #0x10
0000000000019780	mov	x19, x0
0000000000019784	adr	x8, #0x690bf
0000000000019788	nop
000000000001978c	ldarb	w8, [x8]
0000000000019790	tbz	w8, #0x0, 0x19798
0000000000019794	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000019798	ldr	x8, [x19, #0x8]
000000000001979c	ldr	w8, [x8, #0x4c]
00000000000197a0	cmp	w8, #0x0
00000000000197a4	cset	w0, eq
00000000000197a8	ldp	x29, x30, [sp, #0x10]
00000000000197ac	ldp	x20, x19, [sp], #0x20
00000000000197b0	ret
_kfun:kotlin.collections.HashMapKeys#contains(1:0){}kotlin.Boolean:
00000000000197b4	stp	x20, x19, [sp, #-0x20]!
00000000000197b8	stp	x29, x30, [sp, #0x10]
00000000000197bc	add	x29, sp, #0x10
00000000000197c0	mov	x19, x1
00000000000197c4	mov	x20, x0
00000000000197c8	adr	x8, #0x6907b
00000000000197cc	nop
00000000000197d0	ldarb	w8, [x8]
00000000000197d4	tbz	w8, #0x0, 0x197dc
00000000000197d8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000197dc	ldr	x0, [x20, #0x8]
00000000000197e0	mov	x1, x19
00000000000197e4	bl	"_kfun:kotlin.collections.HashMap.findKey#internal"
00000000000197e8	mvn	w8, w0
00000000000197ec	lsr	w0, w8, #31
00000000000197f0	ldp	x29, x30, [sp, #0x10]
00000000000197f4	ldp	x20, x19, [sp], #0x20
00000000000197f8	ret
_kfun:kotlin.collections.HashMapKeys#getElement(1:0){}1:0?:
00000000000197fc	stp	x22, x21, [sp, #-0x30]!
0000000000019800	stp	x20, x19, [sp, #0x10]
0000000000019804	stp	x29, x30, [sp, #0x20]
0000000000019808	add	x29, sp, #0x20
000000000001980c	mov	x19, x2
0000000000019810	mov	x20, x1
0000000000019814	mov	x21, x0
0000000000019818	adr	x8, #0x6902b
000000000001981c	nop
0000000000019820	ldarb	w8, [x8]
0000000000019824	tbz	w8, #0x0, 0x1982c
0000000000019828	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001982c	ldr	x0, [x21, #0x8]
0000000000019830	mov	x1, x20
0000000000019834	mov	x2, x19
0000000000019838	bl	"_kfun:kotlin.collections.HashMap#getKey(1:0){}1:0?"
000000000001983c	str	x0, [x19]
0000000000019840	ldp	x29, x30, [sp, #0x20]
0000000000019844	ldp	x20, x19, [sp, #0x10]
0000000000019848	ldp	x22, x21, [sp], #0x30
000000000001984c	ret
_kfun:kotlin.collections.HashMapKeys#clear(){}:
0000000000019850	stp	x20, x19, [sp, #-0x20]!
0000000000019854	stp	x29, x30, [sp, #0x10]
0000000000019858	add	x29, sp, #0x10
000000000001985c	mov	x19, x0
0000000000019860	adr	x8, #0x68fe3
0000000000019864	nop
0000000000019868	ldarb	w8, [x8]
000000000001986c	tbz	w8, #0x0, 0x19874
0000000000019870	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000019874	ldr	x0, [x19, #0x8]
0000000000019878	ldp	x29, x30, [sp, #0x10]
000000000001987c	ldp	x20, x19, [sp], #0x20
0000000000019880	b	"_kfun:kotlin.collections.HashMap#clear(){}"
_kfun:kotlin.collections.HashMapKeys#add(1:0){}kotlin.Boolean:
0000000000019884	sub	sp, sp, #0x40
0000000000019888	stp	x20, x19, [sp, #0x20]
000000000001988c	stp	x29, x30, [sp, #0x30]
0000000000019890	add	x29, sp, #0x30
0000000000019894	movi.16b	v0, #0x0
0000000000019898	stp	q0, q0, [sp]
000000000001989c	adrp	x0, 79 ; 0x68000
00000000000198a0	add	x0, x0, #0xa00
00000000000198a4	ldr	x8, [x0]
00000000000198a8	blr	x8
00000000000198ac	ldr	x19, [x0]
00000000000198b0	ldr	x8, [x19, #0x110]
00000000000198b4	mov	x9, sp
00000000000198b8	str	x9, [x19, #0x110]
00000000000198bc	mov	x9, #0x400000000
00000000000198c0	stp	x8, x9, [sp, #0x8]
00000000000198c4	adr	x8, #0x68f7f
00000000000198c8	nop
00000000000198cc	ldarb	w8, [x8]
00000000000198d0	tbz	w8, #0x0, 0x198d8
00000000000198d4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000198d8	ldr	x8, [x19, #0x118]
00000000000198dc	add	x0, x8, #0x70
00000000000198e0	mov	w1, #0x38
00000000000198e4	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000198e8	mov	x19, x0
00000000000198ec	adr	x8, #0x3b4d4
00000000000198f0	nop
00000000000198f4	str	x8, [x19, #0x10]!
00000000000198f8	stur	xzr, [x19, #-0x8]
00000000000198fc	str	x19, [sp, #0x18]
0000000000019900	mov	x0, x19
0000000000019904	mov	x1, #0x0
0000000000019908	bl	"_kfun:kotlin.Throwable#<init>(kotlin.String?;kotlin.Throwable?){}"
000000000001990c	mov	x0, x19
0000000000019910	bl	_ThrowException
_kfun:kotlin.collections.HashMapKeys#addAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean:
0000000000019914	sub	sp, sp, #0x40
0000000000019918	stp	x20, x19, [sp, #0x20]
000000000001991c	stp	x29, x30, [sp, #0x30]
0000000000019920	add	x29, sp, #0x30
0000000000019924	movi.16b	v0, #0x0
0000000000019928	stp	q0, q0, [sp]
000000000001992c	adrp	x0, 79 ; 0x68000
0000000000019930	add	x0, x0, #0xa00
0000000000019934	ldr	x8, [x0]
0000000000019938	blr	x8
000000000001993c	ldr	x19, [x0]
0000000000019940	ldr	x8, [x19, #0x110]
0000000000019944	mov	x9, sp
0000000000019948	str	x9, [x19, #0x110]
000000000001994c	mov	x9, #0x400000000
0000000000019950	stp	x8, x9, [sp, #0x8]
0000000000019954	adr	x8, #0x68eef
0000000000019958	nop
000000000001995c	ldarb	w8, [x8]
0000000000019960	tbz	w8, #0x0, 0x19968
0000000000019964	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000019968	ldr	x8, [x19, #0x118]
000000000001996c	add	x0, x8, #0x70
0000000000019970	mov	w1, #0x38
0000000000019974	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000019978	mov	x19, x0
000000000001997c	adr	x8, #0x3b444
0000000000019980	nop
0000000000019984	str	x8, [x19, #0x10]!
0000000000019988	stur	xzr, [x19, #-0x8]
000000000001998c	str	x19, [sp, #0x18]
0000000000019990	mov	x0, x19
0000000000019994	mov	x1, #0x0
0000000000019998	bl	"_kfun:kotlin.Throwable#<init>(kotlin.String?;kotlin.Throwable?){}"
000000000001999c	mov	x0, x19
00000000000199a0	bl	_ThrowException
_kfun:kotlin.collections.HashMapKeys#remove(1:0){}kotlin.Boolean:
00000000000199a4	stp	x20, x19, [sp, #-0x20]!
00000000000199a8	stp	x29, x30, [sp, #0x10]
00000000000199ac	add	x29, sp, #0x10
00000000000199b0	mov	x19, x1
00000000000199b4	mov	x20, x0
00000000000199b8	adr	x8, #0x68e8b
00000000000199bc	nop
00000000000199c0	ldarb	w8, [x8]
00000000000199c4	tbz	w8, #0x0, 0x199cc
00000000000199c8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000199cc	ldr	x0, [x20, #0x8]
00000000000199d0	mov	x1, x19
00000000000199d4	bl	"_kfun:kotlin.collections.HashMap#removeKey(1:0){}kotlin.Int"
00000000000199d8	mvn	w8, w0
00000000000199dc	lsr	w0, w8, #31
00000000000199e0	ldp	x29, x30, [sp, #0x10]
00000000000199e4	ldp	x20, x19, [sp], #0x20
00000000000199e8	ret
_kfun:kotlin.collections.HashMapKeys#iterator(){}kotlin.collections.MutableIterator<1:0>:
00000000000199ec	stp	x20, x19, [sp, #-0x20]!
00000000000199f0	stp	x29, x30, [sp, #0x10]
00000000000199f4	add	x29, sp, #0x10
00000000000199f8	mov	x19, x1
00000000000199fc	mov	x20, x0
0000000000019a00	adr	x8, #0x68e43
0000000000019a04	nop
0000000000019a08	ldarb	w8, [x8]
0000000000019a0c	tbz	w8, #0x0, 0x19a14
0000000000019a10	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000019a14	ldr	x0, [x20, #0x8]
0000000000019a18	mov	x1, x19
0000000000019a1c	bl	"_kfun:kotlin.collections.HashMap#keysIterator(){}kotlin.collections.HashMap.KeysItr<1:0,1:1>"
0000000000019a20	str	x0, [x19]
0000000000019a24	ldp	x29, x30, [sp, #0x10]
0000000000019a28	ldp	x20, x19, [sp], #0x20
0000000000019a2c	ret
_kfun:kotlin.collections.HashMapKeys#removeAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean:
0000000000019a30	stp	x20, x19, [sp, #-0x20]!
0000000000019a34	stp	x29, x30, [sp, #0x10]
0000000000019a38	add	x29, sp, #0x10
0000000000019a3c	mov	x19, x1
0000000000019a40	mov	x20, x0
0000000000019a44	adr	x8, #0x68dff
0000000000019a48	nop
0000000000019a4c	ldarb	w8, [x8]
0000000000019a50	tbz	w8, #0x0, 0x19a58
0000000000019a54	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000019a58	ldr	x0, [x20, #0x8]
0000000000019a5c	bl	"_kfun:kotlin.collections.HashMap#checkIsMutable(){}"
0000000000019a60	mov	x0, x20
0000000000019a64	mov	x1, x19
0000000000019a68	ldp	x29, x30, [sp, #0x10]
0000000000019a6c	ldp	x20, x19, [sp], #0x20
0000000000019a70	b	"_kfun:kotlin.collections.AbstractMutableCollection#removeAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean"
_kfun:kotlin.collections.HashMapKeys#retainAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean:
0000000000019a74	stp	x20, x19, [sp, #-0x20]!
0000000000019a78	stp	x29, x30, [sp, #0x10]
0000000000019a7c	add	x29, sp, #0x10
0000000000019a80	mov	x19, x1
0000000000019a84	mov	x20, x0
0000000000019a88	adr	x8, #0x68dbb
0000000000019a8c	nop
0000000000019a90	ldarb	w8, [x8]
0000000000019a94	tbz	w8, #0x0, 0x19a9c
0000000000019a98	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000019a9c	ldr	x0, [x20, #0x8]
0000000000019aa0	bl	"_kfun:kotlin.collections.HashMap#checkIsMutable(){}"
0000000000019aa4	mov	x0, x20
0000000000019aa8	mov	x1, x19
0000000000019aac	ldp	x29, x30, [sp, #0x10]
0000000000019ab0	ldp	x20, x19, [sp], #0x20
0000000000019ab4	b	"_kfun:kotlin.collections.AbstractMutableCollection#retainAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean"
_kfun:kotlin.collections.HashMapValues#<get-size>(){}kotlin.Int:
0000000000019ab8	stp	x20, x19, [sp, #-0x20]!
0000000000019abc	stp	x29, x30, [sp, #0x10]
0000000000019ac0	add	x29, sp, #0x10
0000000000019ac4	mov	x19, x0
0000000000019ac8	adr	x8, #0x68d7b
0000000000019acc	nop
0000000000019ad0	ldarb	w8, [x8]
0000000000019ad4	tbz	w8, #0x0, 0x19adc
0000000000019ad8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000019adc	ldr	x8, [x19, #0x8]
0000000000019ae0	ldr	w0, [x8, #0x4c]
0000000000019ae4	ldp	x29, x30, [sp, #0x10]
0000000000019ae8	ldp	x20, x19, [sp], #0x20
0000000000019aec	ret
_kfun:kotlin.collections.HashMapValues#isEmpty(){}kotlin.Boolean:
0000000000019af0	stp	x20, x19, [sp, #-0x20]!
0000000000019af4	stp	x29, x30, [sp, #0x10]
0000000000019af8	add	x29, sp, #0x10
0000000000019afc	mov	x19, x0
0000000000019b00	adr	x8, #0x68d43
0000000000019b04	nop
0000000000019b08	ldarb	w8, [x8]
0000000000019b0c	tbz	w8, #0x0, 0x19b14
0000000000019b10	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000019b14	ldr	x8, [x19, #0x8]
0000000000019b18	ldr	w8, [x8, #0x4c]
0000000000019b1c	cmp	w8, #0x0
0000000000019b20	cset	w0, eq
0000000000019b24	ldp	x29, x30, [sp, #0x10]
0000000000019b28	ldp	x20, x19, [sp], #0x20
0000000000019b2c	ret
_kfun:kotlin.collections.HashMapValues#contains(1:0){}kotlin.Boolean:
0000000000019b30	stp	x20, x19, [sp, #-0x20]!
0000000000019b34	stp	x29, x30, [sp, #0x10]
0000000000019b38	add	x29, sp, #0x10
0000000000019b3c	mov	x19, x1
0000000000019b40	mov	x20, x0
0000000000019b44	adr	x8, #0x68cff
0000000000019b48	nop
0000000000019b4c	ldarb	w8, [x8]
0000000000019b50	tbz	w8, #0x0, 0x19b58
0000000000019b54	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000019b58	ldr	x0, [x20, #0x8]
0000000000019b5c	mov	x1, x19
0000000000019b60	bl	"_kfun:kotlin.collections.HashMap.findValue#internal"
0000000000019b64	mvn	w8, w0
0000000000019b68	lsr	w0, w8, #31
0000000000019b6c	ldp	x29, x30, [sp, #0x10]
0000000000019b70	ldp	x20, x19, [sp], #0x20
0000000000019b74	ret
_kfun:kotlin.collections.HashMapValues#add(1:0){}kotlin.Boolean:
0000000000019b78	sub	sp, sp, #0x40
0000000000019b7c	stp	x20, x19, [sp, #0x20]
0000000000019b80	stp	x29, x30, [sp, #0x30]
0000000000019b84	add	x29, sp, #0x30
0000000000019b88	movi.16b	v0, #0x0
0000000000019b8c	stp	q0, q0, [sp]
0000000000019b90	adrp	x0, 79 ; 0x68000
0000000000019b94	add	x0, x0, #0xa00
0000000000019b98	ldr	x8, [x0]
0000000000019b9c	blr	x8
0000000000019ba0	ldr	x19, [x0]
0000000000019ba4	ldr	x8, [x19, #0x110]
0000000000019ba8	mov	x9, sp
0000000000019bac	str	x9, [x19, #0x110]
0000000000019bb0	mov	x9, #0x400000000
0000000000019bb4	stp	x8, x9, [sp, #0x8]
0000000000019bb8	adr	x8, #0x68c8b
0000000000019bbc	nop
0000000000019bc0	ldarb	w8, [x8]
0000000000019bc4	tbz	w8, #0x0, 0x19bcc
0000000000019bc8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000019bcc	ldr	x8, [x19, #0x118]
0000000000019bd0	add	x0, x8, #0x70
0000000000019bd4	mov	w1, #0x38
0000000000019bd8	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000019bdc	mov	x19, x0
0000000000019be0	adr	x8, #0x3b1e0
0000000000019be4	nop
0000000000019be8	str	x8, [x19, #0x10]!
0000000000019bec	stur	xzr, [x19, #-0x8]
0000000000019bf0	str	x19, [sp, #0x18]
0000000000019bf4	mov	x0, x19
0000000000019bf8	mov	x1, #0x0
0000000000019bfc	bl	"_kfun:kotlin.Throwable#<init>(kotlin.String?;kotlin.Throwable?){}"
0000000000019c00	mov	x0, x19
0000000000019c04	bl	_ThrowException
_kfun:kotlin.collections.HashMapValues#addAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean:
0000000000019c08	sub	sp, sp, #0x40
0000000000019c0c	stp	x20, x19, [sp, #0x20]
0000000000019c10	stp	x29, x30, [sp, #0x30]
0000000000019c14	add	x29, sp, #0x30
0000000000019c18	movi.16b	v0, #0x0
0000000000019c1c	stp	q0, q0, [sp]
0000000000019c20	adrp	x0, 79 ; 0x68000
0000000000019c24	add	x0, x0, #0xa00
0000000000019c28	ldr	x8, [x0]
0000000000019c2c	blr	x8
0000000000019c30	ldr	x19, [x0]
0000000000019c34	ldr	x8, [x19, #0x110]
0000000000019c38	mov	x9, sp
0000000000019c3c	str	x9, [x19, #0x110]
0000000000019c40	mov	x9, #0x400000000
0000000000019c44	stp	x8, x9, [sp, #0x8]
0000000000019c48	adr	x8, #0x68bfb
0000000000019c4c	nop
0000000000019c50	ldarb	w8, [x8]
0000000000019c54	tbz	w8, #0x0, 0x19c5c
0000000000019c58	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000019c5c	ldr	x8, [x19, #0x118]
0000000000019c60	add	x0, x8, #0x70
0000000000019c64	mov	w1, #0x38
0000000000019c68	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000019c6c	mov	x19, x0
0000000000019c70	adr	x8, #0x3b150
0000000000019c74	nop
0000000000019c78	str	x8, [x19, #0x10]!
0000000000019c7c	stur	xzr, [x19, #-0x8]
0000000000019c80	str	x19, [sp, #0x18]
0000000000019c84	mov	x0, x19
0000000000019c88	mov	x1, #0x0
0000000000019c8c	bl	"_kfun:kotlin.Throwable#<init>(kotlin.String?;kotlin.Throwable?){}"
0000000000019c90	mov	x0, x19
0000000000019c94	bl	_ThrowException
_kfun:kotlin.collections.HashMapValues#clear(){}:
0000000000019c98	stp	x20, x19, [sp, #-0x20]!
0000000000019c9c	stp	x29, x30, [sp, #0x10]
0000000000019ca0	add	x29, sp, #0x10
0000000000019ca4	mov	x19, x0
0000000000019ca8	adr	x8, #0x68b9b
0000000000019cac	nop
0000000000019cb0	ldarb	w8, [x8]
0000000000019cb4	tbz	w8, #0x0, 0x19cbc
0000000000019cb8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000019cbc	ldr	x0, [x19, #0x8]
0000000000019cc0	ldp	x29, x30, [sp, #0x10]
0000000000019cc4	ldp	x20, x19, [sp], #0x20
0000000000019cc8	b	"_kfun:kotlin.collections.HashMap#clear(){}"
_kfun:kotlin.collections.HashMapValues#iterator(){}kotlin.collections.MutableIterator<1:0>:
0000000000019ccc	stp	x22, x21, [sp, #-0x30]!
0000000000019cd0	stp	x20, x19, [sp, #0x10]
0000000000019cd4	stp	x29, x30, [sp, #0x20]
0000000000019cd8	add	x29, sp, #0x20
0000000000019cdc	mov	x19, x1
0000000000019ce0	mov	x20, x0
0000000000019ce4	adr	x8, #0x68b5f
0000000000019ce8	nop
0000000000019cec	ldarb	w8, [x8]
0000000000019cf0	tbz	w8, #0x0, 0x19cf8
0000000000019cf4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000019cf8	ldr	x21, [x20, #0x8]
0000000000019cfc	adrp	x0, 79 ; 0x68000
0000000000019d00	add	x0, x0, #0xa00
0000000000019d04	ldr	x8, [x0]
0000000000019d08	blr	x8
0000000000019d0c	ldr	x8, [x0]
0000000000019d10	ldr	x8, [x8, #0x118]
0000000000019d14	add	x0, x8, #0x70
0000000000019d18	mov	w1, #0x20
0000000000019d1c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000019d20	mov	x20, x0
0000000000019d24	adr	x8, #0x3da5c
0000000000019d28	nop
0000000000019d2c	str	x8, [x20, #0x10]!
0000000000019d30	stur	xzr, [x20, #-0x8]
0000000000019d34	str	x20, [x19]
0000000000019d38	str	x21, [x20, #0x8]
0000000000019d3c	mov	w8, #-0x1
0000000000019d40	str	w8, [x20, #0x14]
0000000000019d44	mov	x0, x20
0000000000019d48	bl	"_kfun:kotlin.collections.HashMap.Itr#initNext(){}"
0000000000019d4c	str	x20, [x19]
0000000000019d50	mov	x0, x20
0000000000019d54	ldp	x29, x30, [sp, #0x20]
0000000000019d58	ldp	x20, x19, [sp, #0x10]
0000000000019d5c	ldp	x22, x21, [sp], #0x30
0000000000019d60	ret
_kfun:kotlin.collections.HashMapValues#remove(1:0){}kotlin.Boolean:
0000000000019d64	stp	x20, x19, [sp, #-0x20]!
0000000000019d68	stp	x29, x30, [sp, #0x10]
0000000000019d6c	add	x29, sp, #0x10
0000000000019d70	mov	x19, x1
0000000000019d74	mov	x20, x0
0000000000019d78	adr	x8, #0x68acb
0000000000019d7c	nop
0000000000019d80	ldarb	w8, [x8]
0000000000019d84	tbz	w8, #0x0, 0x19d8c
0000000000019d88	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000019d8c	ldr	x20, [x20, #0x8]
0000000000019d90	mov	x0, x20
0000000000019d94	bl	"_kfun:kotlin.collections.HashMap#checkIsMutable(){}"
0000000000019d98	mov	x0, x20
0000000000019d9c	mov	x1, x19
0000000000019da0	bl	"_kfun:kotlin.collections.HashMap.findValue#internal"
0000000000019da4	tbnz	w0, #0x1f, 0x19dc4
0000000000019da8	mov	x1, x0
0000000000019dac	mov	x0, x20
0000000000019db0	bl	"_kfun:kotlin.collections.HashMap.removeKeyAt#internal"
0000000000019db4	mov	w0, #0x1
0000000000019db8	ldp	x29, x30, [sp, #0x10]
0000000000019dbc	ldp	x20, x19, [sp], #0x20
0000000000019dc0	ret
0000000000019dc4	mov	w0, #0x0
0000000000019dc8	ldp	x29, x30, [sp, #0x10]
0000000000019dcc	ldp	x20, x19, [sp], #0x20
0000000000019dd0	ret
_kfun:kotlin.collections.HashMapValues#removeAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean:
0000000000019dd4	stp	x20, x19, [sp, #-0x20]!
0000000000019dd8	stp	x29, x30, [sp, #0x10]
0000000000019ddc	add	x29, sp, #0x10
0000000000019de0	mov	x19, x1
0000000000019de4	mov	x20, x0
0000000000019de8	adr	x8, #0x68a5b
0000000000019dec	nop
0000000000019df0	ldarb	w8, [x8]
0000000000019df4	tbz	w8, #0x0, 0x19dfc
0000000000019df8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000019dfc	ldr	x0, [x20, #0x8]
0000000000019e00	bl	"_kfun:kotlin.collections.HashMap#checkIsMutable(){}"
0000000000019e04	mov	x0, x20
0000000000019e08	mov	x1, x19
0000000000019e0c	ldp	x29, x30, [sp, #0x10]
0000000000019e10	ldp	x20, x19, [sp], #0x20
0000000000019e14	b	"_kfun:kotlin.collections.AbstractMutableCollection#removeAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean"
_kfun:kotlin.collections.HashMapValues#retainAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean:
0000000000019e18	stp	x20, x19, [sp, #-0x20]!
0000000000019e1c	stp	x29, x30, [sp, #0x10]
0000000000019e20	add	x29, sp, #0x10
0000000000019e24	mov	x19, x1
0000000000019e28	mov	x20, x0
0000000000019e2c	adr	x8, #0x68a17
0000000000019e30	nop
0000000000019e34	ldarb	w8, [x8]
0000000000019e38	tbz	w8, #0x0, 0x19e40
0000000000019e3c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000019e40	ldr	x0, [x20, #0x8]
0000000000019e44	bl	"_kfun:kotlin.collections.HashMap#checkIsMutable(){}"
0000000000019e48	mov	x0, x20
0000000000019e4c	mov	x1, x19
0000000000019e50	ldp	x29, x30, [sp, #0x10]
0000000000019e54	ldp	x20, x19, [sp], #0x20
0000000000019e58	b	"_kfun:kotlin.collections.AbstractMutableCollection#retainAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean"
_kfun:kotlin.collections.HashMapEntrySet#getEntry(kotlin.collections.Map.Entry<1:0,1:1>){}kotlin.collections.MutableMap.MutableEntry<1:0,1:1>?:
0000000000019e5c	sub	sp, sp, #0x90
0000000000019e60	stp	x26, x25, [sp, #0x40]
0000000000019e64	stp	x24, x23, [sp, #0x50]
0000000000019e68	stp	x22, x21, [sp, #0x60]
0000000000019e6c	stp	x20, x19, [sp, #0x70]
0000000000019e70	stp	x29, x30, [sp, #0x80]
0000000000019e74	add	x29, sp, #0x80
0000000000019e78	mov	x19, x2
0000000000019e7c	mov	x22, x1
0000000000019e80	mov	x20, x0
0000000000019e84	adr	x8, #0x689bf
0000000000019e88	nop
0000000000019e8c	ldarb	w8, [x8]
0000000000019e90	tbz	w8, #0x0, 0x19e98
0000000000019e94	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000019e98	ldr	x21, [x20, #0x8]
0000000000019e9c	movi.16b	v0, #0x0
0000000000019ea0	stp	q0, q0, [sp]
0000000000019ea4	str	xzr, [sp, #0x30]
0000000000019ea8	str	q0, [sp, #0x20]
0000000000019eac	mov	x24, sp
0000000000019eb0	add	x1, x24, #0x18
0000000000019eb4	adrp	x20, 79 ; 0x68000
0000000000019eb8	add	x20, x20, #0xa00
0000000000019ebc	ldr	x25, [x20]
0000000000019ec0	mov	x0, x20
0000000000019ec4	blr	x25
0000000000019ec8	ldr	x8, [x0]
0000000000019ecc	ldr	x9, [x8, #0x110]
0000000000019ed0	str	x24, [x8, #0x110]
0000000000019ed4	mov	x8, #0x700000000
0000000000019ed8	stp	x9, x8, [sp, #0x8]
0000000000019edc	ldr	x8, [x22]
0000000000019ee0	and	x8, x8, #0xfffffffffffffffc
0000000000019ee4	ldr	x8, [x8]
0000000000019ee8	ldr	w9, [x8, #0x3c]
0000000000019eec	ldr	x8, [x8, #0x40]
0000000000019ef0	tbnz	w9, #0x1f, 0x19f00
0000000000019ef4	mov	w10, #0xa8
0000000000019ef8	and	x9, x9, x10
0000000000019efc	b	0x19f84
0000000000019f00	neg	w10, w9
0000000000019f04	mvn	w9, w9
0000000000019f08	cmp	w10, #0x9
0000000000019f0c	b.ge	0x19f44
0000000000019f10	cmp	w10, #0x2
0000000000019f14	b.lt	0x19f78
0000000000019f18	mov	x10, #0x0
0000000000019f1c	mov	x11, x8
0000000000019f20	ldr	w12, [x11]
0000000000019f24	cmp	w12, #0xa7
0000000000019f28	b.gt	0x19f80
0000000000019f2c	add	x10, x10, #0x1
0000000000019f30	add	x11, x11, #0x10
0000000000019f34	cmp	x9, x10
0000000000019f38	b.ne	0x19f20
0000000000019f3c	mov	x10, x9
0000000000019f40	b	0x19f80
0000000000019f44	mov	w10, #0x0
0000000000019f48	add	w11, w9, w10
0000000000019f4c	cmp	w11, #0x0
0000000000019f50	cinc	w11, w11, lt
0000000000019f54	asr	w11, w11, #1
0000000000019f58	sbfiz	x12, x11, #4, #32
0000000000019f5c	ldr	w12, [x8, x12]
0000000000019f60	cmp	w12, #0xa8
0000000000019f64	csinc	w10, w10, w11, ge
0000000000019f68	csel	w9, w9, w11, lt
0000000000019f6c	cmp	w10, w9
0000000000019f70	b.lt	0x19f48
0000000000019f74	b	0x19f80
0000000000019f78	mov	w10, #0x0
0000000000019f7c	b	0x19f80
0000000000019f80	sxtw	x9, w10
0000000000019f84	add	x8, x8, x9, lsl #4
0000000000019f88	ldr	x8, [x8, #0x8]
0000000000019f8c	ldr	x8, [x8]
0000000000019f90	mov	x0, x22
0000000000019f94	blr	x8
0000000000019f98	mov	x1, x0
0000000000019f9c	mov	x0, x21
0000000000019fa0	bl	"_kfun:kotlin.collections.HashMap.findKey#internal"
0000000000019fa4	tbnz	w0, #0x1f, 0x1a0f8
0000000000019fa8	ldr	x8, [x21, #0x10]
0000000000019fac	str	x8, [sp, #0x20]
0000000000019fb0	cbz	x8, 0x1a138
0000000000019fb4	mov	x23, x0
0000000000019fb8	ldr	w9, [x8, #0x8]
0000000000019fbc	cmp	w9, w0
0000000000019fc0	b.ls	0x1a13c
0000000000019fc4	add	x1, x24, #0x30
0000000000019fc8	add	x8, x8, w23, sxtw #3
0000000000019fcc	ldr	x24, [x8, #0x10]
0000000000019fd0	str	x24, [sp, #0x28]
0000000000019fd4	ldr	x8, [x22]
0000000000019fd8	and	x8, x8, #0xfffffffffffffffc
0000000000019fdc	ldr	x8, [x8]
0000000000019fe0	ldr	w9, [x8, #0x3c]
0000000000019fe4	ldr	x8, [x8, #0x40]
0000000000019fe8	tbnz	w9, #0x1f, 0x19ff8
0000000000019fec	mov	w10, #0xa8
0000000000019ff0	and	x9, x9, x10
0000000000019ff4	b	0x1a07c
0000000000019ff8	neg	w10, w9
0000000000019ffc	mvn	w9, w9
000000000001a000	cmp	w10, #0x9
000000000001a004	b.ge	0x1a03c
000000000001a008	cmp	w10, #0x2
000000000001a00c	b.lt	0x1a070
000000000001a010	mov	x10, #0x0
000000000001a014	mov	x11, x8
000000000001a018	ldr	w12, [x11]
000000000001a01c	cmp	w12, #0xa7
000000000001a020	b.gt	0x1a078
000000000001a024	add	x10, x10, #0x1
000000000001a028	add	x11, x11, #0x10
000000000001a02c	cmp	x9, x10
000000000001a030	b.ne	0x1a018
000000000001a034	mov	x10, x9
000000000001a038	b	0x1a078
000000000001a03c	mov	w10, #0x0
000000000001a040	add	w11, w9, w10
000000000001a044	cmp	w11, #0x0
000000000001a048	cinc	w11, w11, lt
000000000001a04c	asr	w11, w11, #1
000000000001a050	sbfiz	x12, x11, #4, #32
000000000001a054	ldr	w12, [x8, x12]
000000000001a058	cmp	w12, #0xa8
000000000001a05c	csinc	w10, w10, w11, ge
000000000001a060	csel	w9, w9, w11, lt
000000000001a064	cmp	w10, w9
000000000001a068	b.lt	0x1a040
000000000001a06c	b	0x1a078
000000000001a070	mov	w10, #0x0
000000000001a074	b	0x1a078
000000000001a078	sxtw	x9, w10
000000000001a07c	add	x8, x8, x9, lsl #4
000000000001a080	ldr	x8, [x8, #0x8]
000000000001a084	ldr	x8, [x8, #0x8]
000000000001a088	mov	x0, x22
000000000001a08c	blr	x8
000000000001a090	mov	x1, x0
000000000001a094	cbz	x24, 0x1a0f4
000000000001a098	ldr	x8, [x24]
000000000001a09c	and	x8, x8, #0xfffffffffffffffc
000000000001a0a0	ldr	x8, [x8]
000000000001a0a4	ldr	x8, [x8, #0x70]
000000000001a0a8	mov	x0, x24
000000000001a0ac	blr	x8
000000000001a0b0	cbz	w0, 0x1a0f8
000000000001a0b4	mov	x0, x20
000000000001a0b8	blr	x25
000000000001a0bc	ldr	x8, [x0]
000000000001a0c0	ldr	x8, [x8, #0x118]
000000000001a0c4	add	x0, x8, #0x70
000000000001a0c8	mov	w1, #0x20
000000000001a0cc	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001a0d0	mov	x8, x0
000000000001a0d4	adr	x9, #0x3d7cc
000000000001a0d8	nop
000000000001a0dc	str	x9, [x8, #0x10]!
000000000001a0e0	stur	xzr, [x8, #-0x8]
000000000001a0e4	str	x8, [x19]
000000000001a0e8	str	x21, [x8, #0x8]
000000000001a0ec	str	w23, [x8, #0x10]
000000000001a0f0	b	0x1a0fc
000000000001a0f4	cbz	x1, 0x1a0b4
000000000001a0f8	mov	x8, #0x0
000000000001a0fc	str	x8, [x19]
000000000001a100	mov	x0, x20
000000000001a104	blr	x25
000000000001a108	ldr	x9, [x0]
000000000001a10c	ldr	x10, [sp, #0x8]
000000000001a110	str	x10, [x9, #0x110]
000000000001a114	str	x8, [x19]
000000000001a118	mov	x0, x8
000000000001a11c	ldp	x29, x30, [sp, #0x80]
000000000001a120	ldp	x20, x19, [sp, #0x70]
000000000001a124	ldp	x22, x21, [sp, #0x60]
000000000001a128	ldp	x24, x23, [sp, #0x50]
000000000001a12c	ldp	x26, x25, [sp, #0x40]
000000000001a130	add	sp, sp, #0x90
000000000001a134	ret
000000000001a138	bl	_ThrowNullPointerException
000000000001a13c	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.collections.HashMapEntrySet#iterator(){}kotlin.collections.MutableIterator<kotlin.collections.MutableMap.MutableEntry<1:0,1:1>>:
000000000001a140	stp	x20, x19, [sp, #-0x20]!
000000000001a144	stp	x29, x30, [sp, #0x10]
000000000001a148	add	x29, sp, #0x10
000000000001a14c	mov	x19, x1
000000000001a150	mov	x20, x0
000000000001a154	adr	x8, #0x686ef
000000000001a158	nop
000000000001a15c	ldarb	w8, [x8]
000000000001a160	tbz	w8, #0x0, 0x1a168
000000000001a164	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001a168	ldr	x0, [x20, #0x8]
000000000001a16c	mov	x1, x19
000000000001a170	bl	"_kfun:kotlin.collections.HashMap#entriesIterator(){}kotlin.collections.HashMap.EntriesItr<1:0,1:1>"
000000000001a174	str	x0, [x19]
000000000001a178	ldp	x29, x30, [sp, #0x10]
000000000001a17c	ldp	x20, x19, [sp], #0x20
000000000001a180	ret
_kfun:kotlin.collections.HashMapEntrySetBase#<get-size>(){}kotlin.Int:
000000000001a184	stp	x20, x19, [sp, #-0x20]!
000000000001a188	stp	x29, x30, [sp, #0x10]
000000000001a18c	add	x29, sp, #0x10
000000000001a190	mov	x19, x0
000000000001a194	adr	x8, #0x686af
000000000001a198	nop
000000000001a19c	ldarb	w8, [x8]
000000000001a1a0	tbz	w8, #0x0, 0x1a1a8
000000000001a1a4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001a1a8	ldr	x8, [x19, #0x8]
000000000001a1ac	ldr	w0, [x8, #0x4c]
000000000001a1b0	ldp	x29, x30, [sp, #0x10]
000000000001a1b4	ldp	x20, x19, [sp], #0x20
000000000001a1b8	ret
_kfun:kotlin.collections.HashMapEntrySetBase#isEmpty(){}kotlin.Boolean:
000000000001a1bc	stp	x20, x19, [sp, #-0x20]!
000000000001a1c0	stp	x29, x30, [sp, #0x10]
000000000001a1c4	add	x29, sp, #0x10
000000000001a1c8	mov	x19, x0
000000000001a1cc	adr	x8, #0x68677
000000000001a1d0	nop
000000000001a1d4	ldarb	w8, [x8]
000000000001a1d8	tbz	w8, #0x0, 0x1a1e0
000000000001a1dc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001a1e0	ldr	x8, [x19, #0x8]
000000000001a1e4	ldr	w8, [x8, #0x4c]
000000000001a1e8	cmp	w8, #0x0
000000000001a1ec	cset	w0, eq
000000000001a1f0	ldp	x29, x30, [sp, #0x10]
000000000001a1f4	ldp	x20, x19, [sp], #0x20
000000000001a1f8	ret
_kfun:kotlin.collections.HashMapEntrySetBase#contains(1:2){}kotlin.Boolean:
000000000001a1fc	stp	x20, x19, [sp, #-0x20]!
000000000001a200	stp	x29, x30, [sp, #0x10]
000000000001a204	add	x29, sp, #0x10
000000000001a208	mov	x19, x1
000000000001a20c	mov	x20, x0
000000000001a210	adr	x8, #0x68633
000000000001a214	nop
000000000001a218	ldarb	w8, [x8]
000000000001a21c	tbz	w8, #0x0, 0x1a224
000000000001a220	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001a224	cbz	x19, 0x1a300
000000000001a228	ldr	x8, [x19]
000000000001a22c	and	x8, x8, #0xfffffffffffffffc
000000000001a230	ldr	x8, [x8]
000000000001a234	ldr	w9, [x8, #0x3c]
000000000001a238	ldr	x8, [x8, #0x40]
000000000001a23c	tbnz	w9, #0x1f, 0x1a25c
000000000001a240	mov	w10, #0xa8
000000000001a244	and	x9, x9, x10
000000000001a248	lsl	x9, x9, #4
000000000001a24c	ldr	w8, [x8, x9]
000000000001a250	cmp	w8, #0xa8
000000000001a254	b.ne	0x1a300
000000000001a258	b	0x1a324
000000000001a25c	neg	w10, w9
000000000001a260	mvn	w9, w9
000000000001a264	cmp	w10, #0x9
000000000001a268	b.ge	0x1a2b4
000000000001a26c	cmp	w10, #0x2
000000000001a270	b.lt	0x1a2e8
000000000001a274	mov	x10, #0x0
000000000001a278	mov	x11, x8
000000000001a27c	ldr	w12, [x11]
000000000001a280	cmp	w12, #0xa7
000000000001a284	b.gt	0x1a310
000000000001a288	add	x10, x10, #0x1
000000000001a28c	add	x11, x11, #0x10
000000000001a290	cmp	x9, x10
000000000001a294	b.ne	0x1a27c
000000000001a298	mov	x10, x9
000000000001a29c	sxtw	x9, w10
000000000001a2a0	lsl	x9, x9, #4
000000000001a2a4	ldr	w8, [x8, x9]
000000000001a2a8	cmp	w8, #0xa8
000000000001a2ac	b.ne	0x1a300
000000000001a2b0	b	0x1a324
000000000001a2b4	mov	w10, #0x0
000000000001a2b8	add	w11, w9, w10
000000000001a2bc	cmp	w11, #0x0
000000000001a2c0	cinc	w11, w11, lt
000000000001a2c4	asr	w11, w11, #1
000000000001a2c8	sbfiz	x12, x11, #4, #32
000000000001a2cc	ldr	w12, [x8, x12]
000000000001a2d0	cmp	w12, #0xa8
000000000001a2d4	csinc	w10, w10, w11, ge
000000000001a2d8	csel	w9, w9, w11, lt
000000000001a2dc	cmp	w10, w9
000000000001a2e0	b.lt	0x1a2b8
000000000001a2e4	b	0x1a310
000000000001a2e8	mov	w10, #0x0
000000000001a2ec	sxtw	x9, w10
000000000001a2f0	lsl	x9, x9, #4
000000000001a2f4	ldr	w8, [x8, x9]
000000000001a2f8	cmp	w8, #0xa8
000000000001a2fc	b.eq	0x1a324
000000000001a300	mov	w0, #0x0
000000000001a304	ldp	x29, x30, [sp, #0x10]
000000000001a308	ldp	x20, x19, [sp], #0x20
000000000001a30c	ret
000000000001a310	sxtw	x9, w10
000000000001a314	lsl	x9, x9, #4
000000000001a318	ldr	w8, [x8, x9]
000000000001a31c	cmp	w8, #0xa8
000000000001a320	b.ne	0x1a300
000000000001a324	ldr	x0, [x20, #0x8]
000000000001a328	mov	x1, x19
000000000001a32c	ldp	x29, x30, [sp, #0x10]
000000000001a330	ldp	x20, x19, [sp], #0x20
000000000001a334	b	"_kfun:kotlin.collections.HashMap#containsEntry(kotlin.collections.Map.Entry<1:0,1:1>){}kotlin.Boolean"
_kfun:kotlin.collections.HashMapEntrySetBase#getElement(1:2){}1:2?:
000000000001a338	stp	x22, x21, [sp, #-0x30]!
000000000001a33c	stp	x20, x19, [sp, #0x10]
000000000001a340	stp	x29, x30, [sp, #0x20]
000000000001a344	add	x29, sp, #0x20
000000000001a348	mov	x19, x2
000000000001a34c	mov	x20, x1
000000000001a350	mov	x21, x0
000000000001a354	adr	x8, #0x684ef
000000000001a358	nop
000000000001a35c	ldarb	w8, [x8]
000000000001a360	tbz	w8, #0x0, 0x1a368
000000000001a364	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001a368	ldr	x8, [x21]
000000000001a36c	and	x8, x8, #0xfffffffffffffffc
000000000001a370	ldr	x8, [x8]
000000000001a374	ldr	x8, [x8, #0xf8]
000000000001a378	mov	x0, x21
000000000001a37c	mov	x1, x20
000000000001a380	mov	x2, x19
000000000001a384	blr	x8
000000000001a388	str	x0, [x19]
000000000001a38c	ldp	x29, x30, [sp, #0x20]
000000000001a390	ldp	x20, x19, [sp, #0x10]
000000000001a394	ldp	x22, x21, [sp], #0x30
000000000001a398	ret
_kfun:kotlin.collections.HashMapEntrySetBase#clear(){}:
000000000001a39c	stp	x20, x19, [sp, #-0x20]!
000000000001a3a0	stp	x29, x30, [sp, #0x10]
000000000001a3a4	add	x29, sp, #0x10
000000000001a3a8	mov	x19, x0
000000000001a3ac	adr	x8, #0x68497
000000000001a3b0	nop
000000000001a3b4	ldarb	w8, [x8]
000000000001a3b8	tbz	w8, #0x0, 0x1a3c0
000000000001a3bc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001a3c0	ldr	x0, [x19, #0x8]
000000000001a3c4	ldp	x29, x30, [sp, #0x10]
000000000001a3c8	ldp	x20, x19, [sp], #0x20
000000000001a3cc	b	"_kfun:kotlin.collections.HashMap#clear(){}"
_kfun:kotlin.collections.HashMapEntrySetBase#add(1:2){}kotlin.Boolean:
000000000001a3d0	sub	sp, sp, #0x40
000000000001a3d4	stp	x20, x19, [sp, #0x20]
000000000001a3d8	stp	x29, x30, [sp, #0x30]
000000000001a3dc	add	x29, sp, #0x30
000000000001a3e0	movi.16b	v0, #0x0
000000000001a3e4	stp	q0, q0, [sp]
000000000001a3e8	adrp	x0, 78 ; 0x68000
000000000001a3ec	add	x0, x0, #0xa00
000000000001a3f0	ldr	x8, [x0]
000000000001a3f4	blr	x8
000000000001a3f8	ldr	x19, [x0]
000000000001a3fc	ldr	x8, [x19, #0x110]
000000000001a400	mov	x9, sp
000000000001a404	str	x9, [x19, #0x110]
000000000001a408	mov	x9, #0x400000000
000000000001a40c	stp	x8, x9, [sp, #0x8]
000000000001a410	adr	x8, #0x68433
000000000001a414	nop
000000000001a418	ldarb	w8, [x8]
000000000001a41c	tbz	w8, #0x0, 0x1a424
000000000001a420	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001a424	ldr	x8, [x19, #0x118]
000000000001a428	add	x0, x8, #0x70
000000000001a42c	mov	w1, #0x38
000000000001a430	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001a434	mov	x19, x0
000000000001a438	adr	x8, #0x3a988
000000000001a43c	nop
000000000001a440	str	x8, [x19, #0x10]!
000000000001a444	stur	xzr, [x19, #-0x8]
000000000001a448	str	x19, [sp, #0x18]
000000000001a44c	mov	x0, x19
000000000001a450	mov	x1, #0x0
000000000001a454	bl	"_kfun:kotlin.Throwable#<init>(kotlin.String?;kotlin.Throwable?){}"
000000000001a458	mov	x0, x19
000000000001a45c	bl	_ThrowException
_kfun:kotlin.collections.HashMapEntrySetBase#addAll(kotlin.collections.Collection<1:2>){}kotlin.Boolean:
000000000001a460	sub	sp, sp, #0x40
000000000001a464	stp	x20, x19, [sp, #0x20]
000000000001a468	stp	x29, x30, [sp, #0x30]
000000000001a46c	add	x29, sp, #0x30
000000000001a470	movi.16b	v0, #0x0
000000000001a474	stp	q0, q0, [sp]
000000000001a478	adrp	x0, 78 ; 0x68000
000000000001a47c	add	x0, x0, #0xa00
000000000001a480	ldr	x8, [x0]
000000000001a484	blr	x8
000000000001a488	ldr	x19, [x0]
000000000001a48c	ldr	x8, [x19, #0x110]
000000000001a490	mov	x9, sp
000000000001a494	str	x9, [x19, #0x110]
000000000001a498	mov	x9, #0x400000000
000000000001a49c	stp	x8, x9, [sp, #0x8]
000000000001a4a0	adr	x8, #0x683a3
000000000001a4a4	nop
000000000001a4a8	ldarb	w8, [x8]
000000000001a4ac	tbz	w8, #0x0, 0x1a4b4
000000000001a4b0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001a4b4	ldr	x8, [x19, #0x118]
000000000001a4b8	add	x0, x8, #0x70
000000000001a4bc	mov	w1, #0x38
000000000001a4c0	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001a4c4	mov	x19, x0
000000000001a4c8	adr	x8, #0x3a8f8
000000000001a4cc	nop
000000000001a4d0	str	x8, [x19, #0x10]!
000000000001a4d4	stur	xzr, [x19, #-0x8]
000000000001a4d8	str	x19, [sp, #0x18]
000000000001a4dc	mov	x0, x19
000000000001a4e0	mov	x1, #0x0
000000000001a4e4	bl	"_kfun:kotlin.Throwable#<init>(kotlin.String?;kotlin.Throwable?){}"
000000000001a4e8	mov	x0, x19
000000000001a4ec	bl	_ThrowException
_kfun:kotlin.collections.HashMapEntrySetBase#remove(1:2){}kotlin.Boolean:
000000000001a4f0	sub	sp, sp, #0x80
000000000001a4f4	stp	x24, x23, [sp, #0x40]
000000000001a4f8	stp	x22, x21, [sp, #0x50]
000000000001a4fc	stp	x20, x19, [sp, #0x60]
000000000001a500	stp	x29, x30, [sp, #0x70]
000000000001a504	add	x29, sp, #0x70
000000000001a508	mov	x19, x1
000000000001a50c	mov	x20, x0
000000000001a510	adr	x8, #0x68333
000000000001a514	nop
000000000001a518	ldarb	w8, [x8]
000000000001a51c	tbz	w8, #0x0, 0x1a524
000000000001a520	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001a524	cbz	x19, 0x1a6a8
000000000001a528	ldr	x8, [x19]
000000000001a52c	and	x8, x8, #0xfffffffffffffffc
000000000001a530	ldr	x8, [x8]
000000000001a534	ldr	w9, [x8, #0x3c]
000000000001a538	ldr	x8, [x8, #0x40]
000000000001a53c	tbnz	w9, #0x1f, 0x1a5c8
000000000001a540	mov	w10, #0xa8
000000000001a544	and	x9, x9, x10
000000000001a548	lsl	x9, x9, #4
000000000001a54c	ldr	w8, [x8, x9]
000000000001a550	cmp	w8, #0xa8
000000000001a554	b.ne	0x1a6a8
000000000001a558	ldr	x21, [x20, #0x8]
000000000001a55c	movi.16b	v0, #0x0
000000000001a560	stp	q0, q0, [sp]
000000000001a564	str	xzr, [sp, #0x30]
000000000001a568	str	q0, [sp, #0x20]
000000000001a56c	mov	x23, sp
000000000001a570	add	x22, x23, #0x18
000000000001a574	adrp	x20, 78 ; 0x68000
000000000001a578	add	x20, x20, #0xa00
000000000001a57c	ldr	x24, [x20]
000000000001a580	mov	x0, x20
000000000001a584	blr	x24
000000000001a588	ldr	x8, [x0]
000000000001a58c	ldr	x9, [x8, #0x110]
000000000001a590	str	x23, [x8, #0x110]
000000000001a594	mov	x8, #0x700000000
000000000001a598	stp	x9, x8, [sp, #0x8]
000000000001a59c	mov	x0, x21
000000000001a5a0	bl	"_kfun:kotlin.collections.HashMap#checkIsMutable(){}"
000000000001a5a4	ldr	x8, [x19]
000000000001a5a8	and	x8, x8, #0xfffffffffffffffc
000000000001a5ac	ldr	x8, [x8]
000000000001a5b0	ldr	w9, [x8, #0x3c]
000000000001a5b4	ldr	x8, [x8, #0x40]
000000000001a5b8	tbnz	w9, #0x1f, 0x1a620
000000000001a5bc	mov	w10, #0xa8
000000000001a5c0	and	x9, x9, x10
000000000001a5c4	b	0x1a724
000000000001a5c8	neg	w10, w9
000000000001a5cc	mvn	w9, w9
000000000001a5d0	cmp	w10, #0x9
000000000001a5d4	b.ge	0x1a664
000000000001a5d8	cmp	w10, #0x2
000000000001a5dc	b.lt	0x1a6b0
000000000001a5e0	mov	x10, #0x0
000000000001a5e4	mov	x11, x8
000000000001a5e8	ldr	w12, [x11]
000000000001a5ec	cmp	w12, #0xa7
000000000001a5f0	b.gt	0x1a700
000000000001a5f4	add	x10, x10, #0x1
000000000001a5f8	add	x11, x11, #0x10
000000000001a5fc	cmp	x9, x10
000000000001a600	b.ne	0x1a5e8
000000000001a604	mov	x10, x9
000000000001a608	sxtw	x9, w10
000000000001a60c	lsl	x9, x9, #4
000000000001a610	ldr	w8, [x8, x9]
000000000001a614	cmp	w8, #0xa8
000000000001a618	b.ne	0x1a6a8
000000000001a61c	b	0x1a558
000000000001a620	neg	w10, w9
000000000001a624	mvn	w9, w9
000000000001a628	cmp	w10, #0x9
000000000001a62c	b.ge	0x1a6cc
000000000001a630	cmp	w10, #0x2
000000000001a634	b.lt	0x1a718
000000000001a638	mov	x10, #0x0
000000000001a63c	mov	x11, x8
000000000001a640	ldr	w12, [x11]
000000000001a644	cmp	w12, #0xa7
000000000001a648	b.gt	0x1a720
000000000001a64c	add	x10, x10, #0x1
000000000001a650	add	x11, x11, #0x10
000000000001a654	cmp	x9, x10
000000000001a658	b.ne	0x1a640
000000000001a65c	mov	x10, x9
000000000001a660	b	0x1a720
000000000001a664	mov	w10, #0x0
000000000001a668	add	w11, w9, w10
000000000001a66c	cmp	w11, #0x0
000000000001a670	cinc	w11, w11, lt
000000000001a674	asr	w11, w11, #1
000000000001a678	sbfiz	x12, x11, #4, #32
000000000001a67c	ldr	w12, [x8, x12]
000000000001a680	cmp	w12, #0xa8
000000000001a684	csinc	w10, w10, w11, ge
000000000001a688	csel	w9, w9, w11, lt
000000000001a68c	cmp	w10, w9
000000000001a690	b.lt	0x1a668
000000000001a694	sxtw	x9, w10
000000000001a698	lsl	x9, x9, #4
000000000001a69c	ldr	w8, [x8, x9]
000000000001a6a0	cmp	w8, #0xa8
000000000001a6a4	b.eq	0x1a558
000000000001a6a8	mov	w8, #0x0
000000000001a6ac	b	0x1a888
000000000001a6b0	mov	w10, #0x0
000000000001a6b4	sxtw	x9, w10
000000000001a6b8	lsl	x9, x9, #4
000000000001a6bc	ldr	w8, [x8, x9]
000000000001a6c0	cmp	w8, #0xa8
000000000001a6c4	b.eq	0x1a558
000000000001a6c8	b	0x1a6a8
000000000001a6cc	mov	w10, #0x0
000000000001a6d0	add	w11, w9, w10
000000000001a6d4	cmp	w11, #0x0
000000000001a6d8	cinc	w11, w11, lt
000000000001a6dc	asr	w11, w11, #1
000000000001a6e0	sbfiz	x12, x11, #4, #32
000000000001a6e4	ldr	w12, [x8, x12]
000000000001a6e8	cmp	w12, #0xa8
000000000001a6ec	csinc	w10, w10, w11, ge
000000000001a6f0	csel	w9, w9, w11, lt
000000000001a6f4	cmp	w10, w9
000000000001a6f8	b.lt	0x1a6d0
000000000001a6fc	b	0x1a720
000000000001a700	sxtw	x9, w10
000000000001a704	lsl	x9, x9, #4
000000000001a708	ldr	w8, [x8, x9]
000000000001a70c	cmp	w8, #0xa8
000000000001a710	b.ne	0x1a6a8
000000000001a714	b	0x1a558
000000000001a718	mov	w10, #0x0
000000000001a71c	b	0x1a720
000000000001a720	sxtw	x9, w10
000000000001a724	add	x8, x8, x9, lsl #4
000000000001a728	ldr	x8, [x8, #0x8]
000000000001a72c	ldr	x8, [x8]
000000000001a730	mov	x0, x19
000000000001a734	mov	x1, x22
000000000001a738	blr	x8
000000000001a73c	mov	x1, x0
000000000001a740	mov	x0, x21
000000000001a744	bl	"_kfun:kotlin.collections.HashMap.findKey#internal"
000000000001a748	tbnz	w0, #0x1f, 0x1a870
000000000001a74c	ldr	x8, [x21, #0x10]
000000000001a750	str	x8, [sp, #0x20]
000000000001a754	cbz	x8, 0x1a8a4
000000000001a758	mov	x22, x0
000000000001a75c	ldr	w9, [x8, #0x8]
000000000001a760	cmp	w9, w0
000000000001a764	b.ls	0x1a8a8
000000000001a768	add	x1, x23, #0x30
000000000001a76c	add	x8, x8, w22, sxtw #3
000000000001a770	ldr	x23, [x8, #0x10]
000000000001a774	str	x23, [sp, #0x28]
000000000001a778	ldr	x8, [x19]
000000000001a77c	and	x8, x8, #0xfffffffffffffffc
000000000001a780	ldr	x8, [x8]
000000000001a784	ldr	w9, [x8, #0x3c]
000000000001a788	ldr	x8, [x8, #0x40]
000000000001a78c	tbnz	w9, #0x1f, 0x1a79c
000000000001a790	mov	w10, #0xa8
000000000001a794	and	x9, x9, x10
000000000001a798	b	0x1a820
000000000001a79c	neg	w10, w9
000000000001a7a0	mvn	w9, w9
000000000001a7a4	cmp	w10, #0x9
000000000001a7a8	b.ge	0x1a7e0
000000000001a7ac	cmp	w10, #0x2
000000000001a7b0	b.lt	0x1a814
000000000001a7b4	mov	x10, #0x0
000000000001a7b8	mov	x11, x8
000000000001a7bc	ldr	w12, [x11]
000000000001a7c0	cmp	w12, #0xa7
000000000001a7c4	b.gt	0x1a81c
000000000001a7c8	add	x10, x10, #0x1
000000000001a7cc	add	x11, x11, #0x10
000000000001a7d0	cmp	x9, x10
000000000001a7d4	b.ne	0x1a7bc
000000000001a7d8	mov	x10, x9
000000000001a7dc	b	0x1a81c
000000000001a7e0	mov	w10, #0x0
000000000001a7e4	add	w11, w9, w10
000000000001a7e8	cmp	w11, #0x0
000000000001a7ec	cinc	w11, w11, lt
000000000001a7f0	asr	w11, w11, #1
000000000001a7f4	sbfiz	x12, x11, #4, #32
000000000001a7f8	ldr	w12, [x8, x12]
000000000001a7fc	cmp	w12, #0xa8
000000000001a800	csinc	w10, w10, w11, ge
000000000001a804	csel	w9, w9, w11, lt
000000000001a808	cmp	w10, w9
000000000001a80c	b.lt	0x1a7e4
000000000001a810	b	0x1a81c
000000000001a814	mov	w10, #0x0
000000000001a818	b	0x1a81c
000000000001a81c	sxtw	x9, w10
000000000001a820	add	x8, x8, x9, lsl #4
000000000001a824	ldr	x8, [x8, #0x8]
000000000001a828	ldr	x8, [x8, #0x8]
000000000001a82c	mov	x0, x19
000000000001a830	blr	x8
000000000001a834	mov	x1, x0
000000000001a838	cbz	x23, 0x1a86c
000000000001a83c	ldr	x8, [x23]
000000000001a840	and	x8, x8, #0xfffffffffffffffc
000000000001a844	ldr	x8, [x8]
000000000001a848	ldr	x8, [x8, #0x70]
000000000001a84c	mov	x0, x23
000000000001a850	blr	x8
000000000001a854	tbz	w0, #0x0, 0x1a870
000000000001a858	mov	x0, x21
000000000001a85c	mov	x1, x22
000000000001a860	bl	"_kfun:kotlin.collections.HashMap.removeKeyAt#internal"
000000000001a864	mov	w8, #0x1
000000000001a868	b	0x1a874
000000000001a86c	cbz	x1, 0x1a858
000000000001a870	mov	w8, #0x0
000000000001a874	mov	x0, x20
000000000001a878	blr	x24
000000000001a87c	ldr	x9, [x0]
000000000001a880	ldr	x10, [sp, #0x8]
000000000001a884	str	x10, [x9, #0x110]
000000000001a888	mov	x0, x8
000000000001a88c	ldp	x29, x30, [sp, #0x70]
000000000001a890	ldp	x20, x19, [sp, #0x60]
000000000001a894	ldp	x22, x21, [sp, #0x50]
000000000001a898	ldp	x24, x23, [sp, #0x40]
000000000001a89c	add	sp, sp, #0x80
000000000001a8a0	ret
000000000001a8a4	bl	_ThrowNullPointerException
000000000001a8a8	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.collections.HashMapEntrySetBase#containsAll(kotlin.collections.Collection<1:2>){}kotlin.Boolean:
000000000001a8ac	stp	x20, x19, [sp, #-0x20]!
000000000001a8b0	stp	x29, x30, [sp, #0x10]
000000000001a8b4	add	x29, sp, #0x10
000000000001a8b8	mov	x19, x1
000000000001a8bc	mov	x20, x0
000000000001a8c0	adr	x8, #0x67f83
000000000001a8c4	nop
000000000001a8c8	ldarb	w8, [x8]
000000000001a8cc	tbz	w8, #0x0, 0x1a8d4
000000000001a8d0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001a8d4	ldr	x0, [x20, #0x8]
000000000001a8d8	mov	x1, x19
000000000001a8dc	ldp	x29, x30, [sp, #0x10]
000000000001a8e0	ldp	x20, x19, [sp], #0x20
000000000001a8e4	b	"_kfun:kotlin.collections.HashMap#containsAllEntries(kotlin.collections.Collection<*>){}kotlin.Boolean"
_kfun:kotlin.collections.HashMapEntrySetBase#removeAll(kotlin.collections.Collection<1:2>){}kotlin.Boolean:
000000000001a8e8	stp	x20, x19, [sp, #-0x20]!
000000000001a8ec	stp	x29, x30, [sp, #0x10]
000000000001a8f0	add	x29, sp, #0x10
000000000001a8f4	mov	x19, x1
000000000001a8f8	mov	x20, x0
000000000001a8fc	adr	x8, #0x67f47
000000000001a900	nop
000000000001a904	ldarb	w8, [x8]
000000000001a908	tbz	w8, #0x0, 0x1a910
000000000001a90c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001a910	ldr	x0, [x20, #0x8]
000000000001a914	bl	"_kfun:kotlin.collections.HashMap#checkIsMutable(){}"
000000000001a918	mov	x0, x20
000000000001a91c	mov	x1, x19
000000000001a920	ldp	x29, x30, [sp, #0x10]
000000000001a924	ldp	x20, x19, [sp], #0x20
000000000001a928	b	"_kfun:kotlin.collections.AbstractMutableCollection#removeAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean"
_kfun:kotlin.collections.HashMapEntrySetBase#retainAll(kotlin.collections.Collection<1:2>){}kotlin.Boolean:
000000000001a92c	stp	x20, x19, [sp, #-0x20]!
000000000001a930	stp	x29, x30, [sp, #0x10]
000000000001a934	add	x29, sp, #0x10
000000000001a938	mov	x19, x1
000000000001a93c	mov	x20, x0
000000000001a940	adr	x8, #0x67f03
000000000001a944	nop
000000000001a948	ldarb	w8, [x8]
000000000001a94c	tbz	w8, #0x0, 0x1a954
000000000001a950	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001a954	ldr	x0, [x20, #0x8]
000000000001a958	bl	"_kfun:kotlin.collections.HashMap#checkIsMutable(){}"
000000000001a95c	mov	x0, x20
000000000001a960	mov	x1, x19
000000000001a964	ldp	x29, x30, [sp, #0x10]
000000000001a968	ldp	x20, x19, [sp], #0x20
000000000001a96c	b	"_kfun:kotlin.collections.AbstractMutableCollection#retainAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean"
_kfun:kotlin.collections.HashSet#<get-size>(){}kotlin.Int:
000000000001a970	stp	x20, x19, [sp, #-0x20]!
000000000001a974	stp	x29, x30, [sp, #0x10]
000000000001a978	add	x29, sp, #0x10
000000000001a97c	mov	x19, x0
000000000001a980	adr	x8, #0x67ec3
000000000001a984	nop
000000000001a988	ldarb	w8, [x8]
000000000001a98c	tbz	w8, #0x0, 0x1a994
000000000001a990	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001a994	ldr	x8, [x19, #0x8]
000000000001a998	ldr	w0, [x8, #0x4c]
000000000001a99c	ldp	x29, x30, [sp, #0x10]
000000000001a9a0	ldp	x20, x19, [sp], #0x20
000000000001a9a4	ret
_kfun:kotlin.collections.HashSet#isEmpty(){}kotlin.Boolean:
000000000001a9a8	stp	x20, x19, [sp, #-0x20]!
000000000001a9ac	stp	x29, x30, [sp, #0x10]
000000000001a9b0	add	x29, sp, #0x10
000000000001a9b4	mov	x19, x0
000000000001a9b8	adr	x8, #0x67e8b
000000000001a9bc	nop
000000000001a9c0	ldarb	w8, [x8]
000000000001a9c4	tbz	w8, #0x0, 0x1a9cc
000000000001a9c8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001a9cc	ldr	x8, [x19, #0x8]
000000000001a9d0	ldr	w8, [x8, #0x4c]
000000000001a9d4	cmp	w8, #0x0
000000000001a9d8	cset	w0, eq
000000000001a9dc	ldp	x29, x30, [sp, #0x10]
000000000001a9e0	ldp	x20, x19, [sp], #0x20
000000000001a9e4	ret
_kfun:kotlin.collections.HashSet#contains(1:0){}kotlin.Boolean:
000000000001a9e8	stp	x20, x19, [sp, #-0x20]!
000000000001a9ec	stp	x29, x30, [sp, #0x10]
000000000001a9f0	add	x29, sp, #0x10
000000000001a9f4	mov	x19, x1
000000000001a9f8	mov	x20, x0
000000000001a9fc	adr	x8, #0x67e47
000000000001aa00	nop
000000000001aa04	ldarb	w8, [x8]
000000000001aa08	tbz	w8, #0x0, 0x1aa10
000000000001aa0c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001aa10	ldr	x0, [x20, #0x8]
000000000001aa14	mov	x1, x19
000000000001aa18	bl	"_kfun:kotlin.collections.HashMap.findKey#internal"
000000000001aa1c	mvn	w8, w0
000000000001aa20	lsr	w0, w8, #31
000000000001aa24	ldp	x29, x30, [sp, #0x10]
000000000001aa28	ldp	x20, x19, [sp], #0x20
000000000001aa2c	ret
_kfun:kotlin.collections.HashSet#getElement(1:0){}1:0?:
000000000001aa30	stp	x22, x21, [sp, #-0x30]!
000000000001aa34	stp	x20, x19, [sp, #0x10]
000000000001aa38	stp	x29, x30, [sp, #0x20]
000000000001aa3c	add	x29, sp, #0x20
000000000001aa40	mov	x19, x2
000000000001aa44	mov	x20, x1
000000000001aa48	mov	x21, x0
000000000001aa4c	adr	x8, #0x67df7
000000000001aa50	nop
000000000001aa54	ldarb	w8, [x8]
000000000001aa58	tbz	w8, #0x0, 0x1aa60
000000000001aa5c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001aa60	ldr	x0, [x21, #0x8]
000000000001aa64	mov	x1, x20
000000000001aa68	mov	x2, x19
000000000001aa6c	bl	"_kfun:kotlin.collections.HashMap#getKey(1:0){}1:0?"
000000000001aa70	str	x0, [x19]
000000000001aa74	ldp	x29, x30, [sp, #0x20]
000000000001aa78	ldp	x20, x19, [sp, #0x10]
000000000001aa7c	ldp	x22, x21, [sp], #0x30
000000000001aa80	ret
_kfun:kotlin.collections.HashSet#clear(){}:
000000000001aa84	stp	x20, x19, [sp, #-0x20]!
000000000001aa88	stp	x29, x30, [sp, #0x10]
000000000001aa8c	add	x29, sp, #0x10
000000000001aa90	mov	x19, x0
000000000001aa94	adr	x8, #0x67daf
000000000001aa98	nop
000000000001aa9c	ldarb	w8, [x8]
000000000001aaa0	tbz	w8, #0x0, 0x1aaa8
000000000001aaa4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001aaa8	ldr	x0, [x19, #0x8]
000000000001aaac	ldp	x29, x30, [sp, #0x10]
000000000001aab0	ldp	x20, x19, [sp], #0x20
000000000001aab4	b	"_kfun:kotlin.collections.HashMap#clear(){}"
_kfun:kotlin.collections.HashSet#add(1:0){}kotlin.Boolean:
000000000001aab8	stp	x20, x19, [sp, #-0x20]!
000000000001aabc	stp	x29, x30, [sp, #0x10]
000000000001aac0	add	x29, sp, #0x10
000000000001aac4	mov	x19, x1
000000000001aac8	mov	x20, x0
000000000001aacc	adr	x8, #0x67d77
000000000001aad0	nop
000000000001aad4	ldarb	w8, [x8]
000000000001aad8	tbz	w8, #0x0, 0x1aae0
000000000001aadc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001aae0	ldr	x0, [x20, #0x8]
000000000001aae4	mov	x1, x19
000000000001aae8	bl	"_kfun:kotlin.collections.HashMap#addKey(1:0){}kotlin.Int"
000000000001aaec	mvn	w8, w0
000000000001aaf0	lsr	w0, w8, #31
000000000001aaf4	ldp	x29, x30, [sp, #0x10]
000000000001aaf8	ldp	x20, x19, [sp], #0x20
000000000001aafc	ret
_kfun:kotlin.collections.HashSet#remove(1:0){}kotlin.Boolean:
000000000001ab00	stp	x20, x19, [sp, #-0x20]!
000000000001ab04	stp	x29, x30, [sp, #0x10]
000000000001ab08	add	x29, sp, #0x10
000000000001ab0c	mov	x19, x1
000000000001ab10	mov	x20, x0
000000000001ab14	adr	x8, #0x67d2f
000000000001ab18	nop
000000000001ab1c	ldarb	w8, [x8]
000000000001ab20	tbz	w8, #0x0, 0x1ab28
000000000001ab24	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001ab28	ldr	x0, [x20, #0x8]
000000000001ab2c	mov	x1, x19
000000000001ab30	bl	"_kfun:kotlin.collections.HashMap#removeKey(1:0){}kotlin.Int"
000000000001ab34	mvn	w8, w0
000000000001ab38	lsr	w0, w8, #31
000000000001ab3c	ldp	x29, x30, [sp, #0x10]
000000000001ab40	ldp	x20, x19, [sp], #0x20
000000000001ab44	ret
_kfun:kotlin.collections.HashSet#iterator(){}kotlin.collections.MutableIterator<1:0>:
000000000001ab48	stp	x20, x19, [sp, #-0x20]!
000000000001ab4c	stp	x29, x30, [sp, #0x10]
000000000001ab50	add	x29, sp, #0x10
000000000001ab54	mov	x19, x1
000000000001ab58	mov	x20, x0
000000000001ab5c	adr	x8, #0x67ce7
000000000001ab60	nop
000000000001ab64	ldarb	w8, [x8]
000000000001ab68	tbz	w8, #0x0, 0x1ab70
000000000001ab6c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001ab70	ldr	x0, [x20, #0x8]
000000000001ab74	mov	x1, x19
000000000001ab78	bl	"_kfun:kotlin.collections.HashMap#keysIterator(){}kotlin.collections.HashMap.KeysItr<1:0,1:1>"
000000000001ab7c	str	x0, [x19]
000000000001ab80	ldp	x29, x30, [sp, #0x10]
000000000001ab84	ldp	x20, x19, [sp], #0x20
000000000001ab88	ret
_kfun:kotlin.collections.HashSet#addAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean:
000000000001ab8c	stp	x20, x19, [sp, #-0x20]!
000000000001ab90	stp	x29, x30, [sp, #0x10]
000000000001ab94	add	x29, sp, #0x10
000000000001ab98	mov	x19, x1
000000000001ab9c	mov	x20, x0
000000000001aba0	adr	x8, #0x67ca3
000000000001aba4	nop
000000000001aba8	ldarb	w8, [x8]
000000000001abac	tbz	w8, #0x0, 0x1abb4
000000000001abb0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001abb4	ldr	x0, [x20, #0x8]
000000000001abb8	bl	"_kfun:kotlin.collections.HashMap#checkIsMutable(){}"
000000000001abbc	mov	x0, x20
000000000001abc0	mov	x1, x19
000000000001abc4	ldp	x29, x30, [sp, #0x10]
000000000001abc8	ldp	x20, x19, [sp], #0x20
000000000001abcc	b	"_kfun:kotlin.collections.AbstractMutableCollection#addAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean"
_kfun:kotlin.collections.HashSet#removeAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean:
000000000001abd0	stp	x20, x19, [sp, #-0x20]!
000000000001abd4	stp	x29, x30, [sp, #0x10]
000000000001abd8	add	x29, sp, #0x10
000000000001abdc	mov	x19, x1
000000000001abe0	mov	x20, x0
000000000001abe4	adr	x8, #0x67c5f
000000000001abe8	nop
000000000001abec	ldarb	w8, [x8]
000000000001abf0	tbz	w8, #0x0, 0x1abf8
000000000001abf4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001abf8	ldr	x0, [x20, #0x8]
000000000001abfc	bl	"_kfun:kotlin.collections.HashMap#checkIsMutable(){}"
000000000001ac00	mov	x0, x20
000000000001ac04	mov	x1, x19
000000000001ac08	ldp	x29, x30, [sp, #0x10]
000000000001ac0c	ldp	x20, x19, [sp], #0x20
000000000001ac10	b	"_kfun:kotlin.collections.AbstractMutableCollection#removeAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean"
_kfun:kotlin.collections.HashSet#retainAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean:
000000000001ac14	stp	x20, x19, [sp, #-0x20]!
000000000001ac18	stp	x29, x30, [sp, #0x10]
000000000001ac1c	add	x29, sp, #0x10
000000000001ac20	mov	x19, x1
000000000001ac24	mov	x20, x0
000000000001ac28	adr	x8, #0x67c1b
000000000001ac2c	nop
000000000001ac30	ldarb	w8, [x8]
000000000001ac34	tbz	w8, #0x0, 0x1ac3c
000000000001ac38	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001ac3c	ldr	x0, [x20, #0x8]
000000000001ac40	bl	"_kfun:kotlin.collections.HashMap#checkIsMutable(){}"
000000000001ac44	mov	x0, x20
000000000001ac48	mov	x1, x19
000000000001ac4c	ldp	x29, x30, [sp, #0x10]
000000000001ac50	ldp	x20, x19, [sp], #0x20
000000000001ac54	b	"_kfun:kotlin.collections.AbstractMutableCollection#retainAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean"
_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}:
000000000001ac58	sub	sp, sp, #0x50
000000000001ac5c	stp	x22, x21, [sp, #0x20]
000000000001ac60	stp	x20, x19, [sp, #0x30]
000000000001ac64	stp	x29, x30, [sp, #0x40]
000000000001ac68	add	x29, sp, #0x40
000000000001ac6c	mov	x20, x1
000000000001ac70	mov	x19, x0
000000000001ac74	movi.16b	v0, #0x0
000000000001ac78	stp	q0, q0, [sp]
000000000001ac7c	adrp	x0, 78 ; 0x68000
000000000001ac80	add	x0, x0, #0xa00
000000000001ac84	ldr	x8, [x0]
000000000001ac88	blr	x8
000000000001ac8c	ldr	x21, [x0]
000000000001ac90	ldr	x8, [x21, #0x110]
000000000001ac94	mov	x9, sp
000000000001ac98	str	x9, [x21, #0x110]
000000000001ac9c	mov	x9, #0x400000000
000000000001aca0	stp	x8, x9, [sp, #0x8]
000000000001aca4	adr	x8, #0x67b9f
000000000001aca8	nop
000000000001acac	ldarb	w8, [x8]
000000000001acb0	tbz	w8, #0x0, 0x1acb8
000000000001acb4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001acb8	tbnz	w20, #0x1f, 0x1ad10
000000000001acbc	ldr	x8, [x21, #0x118]
000000000001acc0	mov	w9, w20
000000000001acc4	lsl	x9, x9, #1
000000000001acc8	add	x9, x9, #0x1f
000000000001accc	and	x1, x9, #0x3fffffff8
000000000001acd0	add	x0, x8, #0x70
000000000001acd4	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001acd8	stp	xzr, xzr, [x0, #0x10]!
000000000001acdc	adr	x8, #0x39994
000000000001ace0	nop
000000000001ace4	stp	xzr, x8, [x0, #-0x8]
000000000001ace8	str	w20, [x0, #0x8]
000000000001acec	str	x0, [sp, #0x18]
000000000001acf0	str	x0, [x19, #0x8]
000000000001acf4	ldr	x8, [sp, #0x8]
000000000001acf8	str	x8, [x21, #0x110]
000000000001acfc	ldp	x29, x30, [sp, #0x40]
000000000001ad00	ldp	x20, x19, [sp, #0x30]
000000000001ad04	ldp	x22, x21, [sp, #0x20]
000000000001ad08	add	sp, sp, #0x50
000000000001ad0c	ret
000000000001ad10	bl	_ThrowIllegalArgumentException
_kfun:kotlin.text.StringBuilder#<get-length>(){}kotlin.Int:
000000000001ad14	stp	x20, x19, [sp, #-0x20]!
000000000001ad18	stp	x29, x30, [sp, #0x10]
000000000001ad1c	add	x29, sp, #0x10
000000000001ad20	mov	x19, x0
000000000001ad24	adr	x8, #0x67b1f
000000000001ad28	nop
000000000001ad2c	ldarb	w8, [x8]
000000000001ad30	tbz	w8, #0x0, 0x1ad38
000000000001ad34	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001ad38	ldr	w0, [x19, #0x10]
000000000001ad3c	ldp	x29, x30, [sp, #0x10]
000000000001ad40	ldp	x20, x19, [sp], #0x20
000000000001ad44	ret
_kfun:kotlin.text.StringBuilder#get(kotlin.Int){}kotlin.Char:
000000000001ad48	sub	sp, sp, #0x70
000000000001ad4c	stp	x22, x21, [sp, #0x40]
000000000001ad50	stp	x20, x19, [sp, #0x50]
000000000001ad54	stp	x29, x30, [sp, #0x60]
000000000001ad58	add	x29, sp, #0x60
000000000001ad5c	mov	x19, x1
000000000001ad60	mov	x20, x0
000000000001ad64	movi.16b	v0, #0x0
000000000001ad68	stp	q0, q0, [sp]
000000000001ad6c	adrp	x0, 78 ; 0x68000
000000000001ad70	add	x0, x0, #0xa00
000000000001ad74	ldr	x8, [x0]
000000000001ad78	blr	x8
000000000001ad7c	ldr	x21, [x0]
000000000001ad80	ldr	x8, [x21, #0x110]
000000000001ad84	mov	x9, sp
000000000001ad88	str	x9, [x21, #0x110]
000000000001ad8c	mov	x22, #0x400000000
000000000001ad90	stp	x8, x22, [sp, #0x8]
000000000001ad94	adr	x8, #0x67aaf
000000000001ad98	nop
000000000001ad9c	ldarb	w8, [x8]
000000000001ada0	tbz	w8, #0x0, 0x1adac
000000000001ada4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001ada8	movi.16b	v0, #0x0
000000000001adac	stp	q0, q0, [sp, #0x20]
000000000001adb0	ldr	x8, [x21, #0x110]
000000000001adb4	add	x9, sp, #0x20
000000000001adb8	str	x9, [x21, #0x110]
000000000001adbc	stp	x8, x22, [sp, #0x28]
000000000001adc0	tbnz	w19, #0x1f, 0x1ae10
000000000001adc4	ldr	w8, [x20, #0x10]
000000000001adc8	cmp	w8, w19
000000000001adcc	b.le	0x1ae10
000000000001add0	ldr	x8, [sp, #0x28]
000000000001add4	str	x8, [x21, #0x110]
000000000001add8	ldr	x8, [x20, #0x8]
000000000001addc	str	x8, [sp, #0x18]
000000000001ade0	ldr	w9, [x8, #0x8]
000000000001ade4	cmp	w9, w19
000000000001ade8	b.ls	0x1ae4c
000000000001adec	add	x8, x8, w19, sxtw #1
000000000001adf0	ldrh	w0, [x8, #0x10]
000000000001adf4	ldr	x8, [sp, #0x8]
000000000001adf8	str	x8, [x21, #0x110]
000000000001adfc	ldp	x29, x30, [sp, #0x60]
000000000001ae00	ldp	x20, x19, [sp, #0x50]
000000000001ae04	ldp	x22, x21, [sp, #0x40]
000000000001ae08	add	sp, sp, #0x70
000000000001ae0c	ret
000000000001ae10	ldr	x8, [x21, #0x118]
000000000001ae14	add	x0, x8, #0x70
000000000001ae18	mov	w1, #0x38
000000000001ae1c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001ae20	mov	x19, x0
000000000001ae24	adr	x8, #0x39dbc
000000000001ae28	nop
000000000001ae2c	str	x8, [x19, #0x10]!
000000000001ae30	stur	xzr, [x19, #-0x8]
000000000001ae34	str	x19, [sp, #0x38]
000000000001ae38	mov	x0, x19
000000000001ae3c	mov	x1, #0x0
000000000001ae40	bl	"_kfun:kotlin.Throwable#<init>(kotlin.String?;kotlin.Throwable?){}"
000000000001ae44	mov	x0, x19
000000000001ae48	bl	_ThrowException
000000000001ae4c	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.text.StringBuilder#subSequence(kotlin.Int;kotlin.Int){}kotlin.CharSequence:
000000000001ae50	sub	sp, sp, #0x90
000000000001ae54	stp	x26, x25, [sp, #0x40]
000000000001ae58	stp	x24, x23, [sp, #0x50]
000000000001ae5c	stp	x22, x21, [sp, #0x60]
000000000001ae60	stp	x20, x19, [sp, #0x70]
000000000001ae64	stp	x29, x30, [sp, #0x80]
000000000001ae68	add	x29, sp, #0x80
000000000001ae6c	mov	x19, x3
000000000001ae70	mov	x22, x2
000000000001ae74	mov	x21, x1
000000000001ae78	mov	x23, x0
000000000001ae7c	adr	x8, #0x679c7
000000000001ae80	nop
000000000001ae84	ldarb	w8, [x8]
000000000001ae88	tbz	w8, #0x0, 0x1ae90
000000000001ae8c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001ae90	movi.16b	v0, #0x0
000000000001ae94	stp	q0, q0, [sp]
000000000001ae98	adrp	x20, 78 ; 0x68000
000000000001ae9c	add	x20, x20, #0xa00
000000000001aea0	ldr	x24, [x20]
000000000001aea4	mov	x0, x20
000000000001aea8	blr	x24
000000000001aeac	ldr	x8, [x0]
000000000001aeb0	ldr	x9, [x8, #0x110]
000000000001aeb4	mov	x10, sp
000000000001aeb8	str	x10, [x8, #0x110]
000000000001aebc	mov	x8, #0x400000000
000000000001aec0	stp	x9, x8, [sp, #0x8]
000000000001aec4	ldr	w2, [x23, #0x10]
000000000001aec8	mov	x0, x21
000000000001aecc	mov	x1, x22
000000000001aed0	bl	"_kfun:kotlin.text#checkBoundsIndexes(kotlin.Int;kotlin.Int;kotlin.Int){}"
000000000001aed4	ldr	x23, [x23, #0x8]
000000000001aed8	str	x23, [sp, #0x18]
000000000001aedc	subs	w25, w22, w21
000000000001aee0	b.eq	0x1af44
000000000001aee4	tbnz	w25, #0x1f, 0x1afac
000000000001aee8	mov	x0, x20
000000000001aeec	blr	x24
000000000001aef0	ldr	x8, [x0]
000000000001aef4	ldr	x8, [x8, #0x118]
000000000001aef8	lsl	x9, x25, #1
000000000001aefc	add	x9, x9, #0x1f
000000000001af00	and	x1, x9, #0x3fffffff8
000000000001af04	add	x0, x8, #0x70
000000000001af08	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001af0c	mov	x22, x0
000000000001af10	adr	x8, #0x3a7d0
000000000001af14	nop
000000000001af18	stp	x8, xzr, [x22, #0x10]!
000000000001af1c	stur	xzr, [x22, #-0x8]
000000000001af20	str	w25, [x22, #0x8]
000000000001af24	str	x22, [x19]
000000000001af28	add	x0, x22, #0x10
000000000001af2c	add	x8, x23, w21, sxtw #1
000000000001af30	add	x1, x8, #0x10
000000000001af34	sbfiz	x2, x25, #1, #32
000000000001af38	bl	0x4dbec ; symbol stub for: _memcpy
000000000001af3c	str	x22, [x19]
000000000001af40	b	0x1af70
000000000001af44	mov	x0, x20
000000000001af48	blr	x24
000000000001af4c	ldr	x8, [x0]
000000000001af50	ldr	x9, [x8, #0x110]
000000000001af54	add	x10, sp, #0x28
000000000001af58	str	x10, [x8, #0x110]
000000000001af5c	adr	x22, #0x4612c
000000000001af60	nop
000000000001af64	str	x22, [x19]
000000000001af68	ldr	x8, [x0]
000000000001af6c	str	x9, [x8, #0x110]
000000000001af70	str	x22, [x19]
000000000001af74	mov	x0, x20
000000000001af78	blr	x24
000000000001af7c	ldr	x8, [x0]
000000000001af80	ldr	x9, [sp, #0x8]
000000000001af84	str	x9, [x8, #0x110]
000000000001af88	str	x22, [x19]
000000000001af8c	mov	x0, x22
000000000001af90	ldp	x29, x30, [sp, #0x80]
000000000001af94	ldp	x20, x19, [sp, #0x70]
000000000001af98	ldp	x22, x21, [sp, #0x60]
000000000001af9c	ldp	x24, x23, [sp, #0x50]
000000000001afa0	ldp	x26, x25, [sp, #0x40]
000000000001afa4	add	sp, sp, #0x90
000000000001afa8	ret
000000000001afac	bl	_ThrowIllegalArgumentException
_kfun:kotlin.text.StringBuilder#append(kotlin.Char){}kotlin.text.StringBuilder:
000000000001afb0	sub	sp, sp, #0x70
000000000001afb4	stp	x26, x25, [sp, #0x20]
000000000001afb8	stp	x24, x23, [sp, #0x30]
000000000001afbc	stp	x22, x21, [sp, #0x40]
000000000001afc0	stp	x20, x19, [sp, #0x50]
000000000001afc4	stp	x29, x30, [sp, #0x60]
000000000001afc8	add	x29, sp, #0x60
000000000001afcc	mov	x20, x2
000000000001afd0	mov	x21, x1
000000000001afd4	mov	x19, x0
000000000001afd8	movi.16b	v0, #0x0
000000000001afdc	stp	q0, q0, [sp]
000000000001afe0	adrp	x0, 78 ; 0x68000
000000000001afe4	add	x0, x0, #0xa00
000000000001afe8	ldr	x8, [x0]
000000000001afec	blr	x8
000000000001aff0	ldr	x23, [x0]
000000000001aff4	ldr	x8, [x23, #0x110]
000000000001aff8	mov	x9, sp
000000000001affc	str	x9, [x23, #0x110]
000000000001b000	mov	x9, #0x400000000
000000000001b004	stp	x8, x9, [sp, #0x8]
000000000001b008	adr	x8, #0x6783b
000000000001b00c	nop
000000000001b010	ldarb	w8, [x8]
000000000001b014	tbz	w8, #0x0, 0x1b01c
000000000001b018	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001b01c	ldr	w8, [x19, #0x10]
000000000001b020	add	w1, w8, #0x1
000000000001b024	mov	x0, x19
000000000001b028	bl	"_kfun:kotlin.text.StringBuilder#ensureCapacity(kotlin.Int){}"
000000000001b02c	ldr	x24, [x19, #0x8]
000000000001b030	str	x24, [sp, #0x18]
000000000001b034	ldrsw	x25, [x19, #0x10]
000000000001b038	add	w22, w25, #0x1
000000000001b03c	mov	x0, x19
000000000001b040	mov	x1, x22
000000000001b044	bl	"_kfun:kotlin.text.StringBuilder#ensureCapacity(kotlin.Int){}"
000000000001b048	str	w22, [x19, #0x10]
000000000001b04c	ldr	w8, [x24, #0x8]
000000000001b050	cmp	w8, w25
000000000001b054	b.ls	0x1b090
000000000001b058	ldr	xzr, [x24]
000000000001b05c	add	x8, x24, x25, lsl #1
000000000001b060	strh	w21, [x8, #0x10]
000000000001b064	str	x19, [x20]
000000000001b068	ldr	x8, [sp, #0x8]
000000000001b06c	str	x8, [x23, #0x110]
000000000001b070	mov	x0, x19
000000000001b074	ldp	x29, x30, [sp, #0x60]
000000000001b078	ldp	x20, x19, [sp, #0x50]
000000000001b07c	ldp	x22, x21, [sp, #0x40]
000000000001b080	ldp	x24, x23, [sp, #0x30]
000000000001b084	ldp	x26, x25, [sp, #0x20]
000000000001b088	add	sp, sp, #0x70
000000000001b08c	ret
000000000001b090	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.text.StringBuilder#append(kotlin.CharSequence?){}kotlin.text.StringBuilder:
000000000001b094	stp	x22, x21, [sp, #-0x30]!
000000000001b098	stp	x20, x19, [sp, #0x10]
000000000001b09c	stp	x29, x30, [sp, #0x20]
000000000001b0a0	add	x29, sp, #0x20
000000000001b0a4	mov	x19, x2
000000000001b0a8	mov	x21, x1
000000000001b0ac	mov	x20, x0
000000000001b0b0	adr	x8, #0x67793
000000000001b0b4	nop
000000000001b0b8	ldarb	w8, [x8]
000000000001b0bc	tbz	w8, #0x0, 0x1b0c4
000000000001b0c0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001b0c4	adr	x8, #0x45fdc
000000000001b0c8	nop
000000000001b0cc	cmp	x21, #0x0
000000000001b0d0	csel	x21, x8, x21, eq
000000000001b0d4	ldr	x8, [x21]
000000000001b0d8	and	x8, x8, #0xfffffffffffffffc
000000000001b0dc	ldr	x8, [x8]
000000000001b0e0	ldr	w9, [x8, #0x3c]
000000000001b0e4	ldr	x8, [x8, #0x40]
000000000001b0e8	tbnz	w9, #0x1f, 0x1b0f8
000000000001b0ec	mov	w10, #0x19
000000000001b0f0	and	x9, x9, x10
000000000001b0f4	b	0x1b17c
000000000001b0f8	neg	w10, w9
000000000001b0fc	mvn	w9, w9
000000000001b100	cmp	w10, #0x9
000000000001b104	b.ge	0x1b13c
000000000001b108	cmp	w10, #0x2
000000000001b10c	b.lt	0x1b170
000000000001b110	mov	x10, #0x0
000000000001b114	mov	x11, x8
000000000001b118	ldr	w12, [x11]
000000000001b11c	cmp	w12, #0x18
000000000001b120	b.gt	0x1b178
000000000001b124	add	x10, x10, #0x1
000000000001b128	add	x11, x11, #0x10
000000000001b12c	cmp	x9, x10
000000000001b130	b.ne	0x1b118
000000000001b134	mov	x10, x9
000000000001b138	b	0x1b178
000000000001b13c	mov	w10, #0x0
000000000001b140	add	w11, w9, w10
000000000001b144	cmp	w11, #0x0
000000000001b148	cinc	w11, w11, lt
000000000001b14c	asr	w11, w11, #1
000000000001b150	sbfiz	x12, x11, #4, #32
000000000001b154	ldr	w12, [x8, x12]
000000000001b158	cmp	w12, #0x19
000000000001b15c	csinc	w10, w10, w11, ge
000000000001b160	csel	w9, w9, w11, lt
000000000001b164	cmp	w10, w9
000000000001b168	b.lt	0x1b140
000000000001b16c	b	0x1b178
000000000001b170	mov	w10, #0x0
000000000001b174	b	0x1b178
000000000001b178	sxtw	x9, w10
000000000001b17c	add	x8, x8, x9, lsl #4
000000000001b180	ldr	x8, [x8, #0x8]
000000000001b184	ldr	x8, [x8]
000000000001b188	mov	x0, x21
000000000001b18c	blr	x8
000000000001b190	mov	x3, x0
000000000001b194	mov	x0, x20
000000000001b198	mov	x1, x21
000000000001b19c	mov	w2, #0x0
000000000001b1a0	mov	x4, x19
000000000001b1a4	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.CharSequence?;kotlin.Int;kotlin.Int){}kotlin.text.StringBuilder"
000000000001b1a8	str	x20, [x19]
000000000001b1ac	ldp	x29, x30, [sp, #0x20]
000000000001b1b0	ldp	x20, x19, [sp, #0x10]
000000000001b1b4	ldp	x22, x21, [sp], #0x30
000000000001b1b8	ret
_kfun:kotlin.text.StringBuilder#append(kotlin.CharSequence?;kotlin.Int;kotlin.Int){}kotlin.text.StringBuilder:
000000000001b1bc	sub	sp, sp, #0xa0
000000000001b1c0	stp	x28, x27, [sp, #0x40]
000000000001b1c4	stp	x26, x25, [sp, #0x50]
000000000001b1c8	stp	x24, x23, [sp, #0x60]
000000000001b1cc	stp	x22, x21, [sp, #0x70]
000000000001b1d0	stp	x20, x19, [sp, #0x80]
000000000001b1d4	stp	x29, x30, [sp, #0x90]
000000000001b1d8	add	x29, sp, #0x90
000000000001b1dc	mov	x19, x4
000000000001b1e0	mov	x24, x3
000000000001b1e4	mov	x21, x2
000000000001b1e8	mov	x22, x1
000000000001b1ec	mov	x20, x0
000000000001b1f0	adr	x26, #0x67653
000000000001b1f4	nop
000000000001b1f8	ldarb	w8, [x26]
000000000001b1fc	tbz	w8, #0x0, 0x1b204
000000000001b200	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001b204	adr	x8, #0x45e9c
000000000001b208	nop
000000000001b20c	cmp	x22, #0x0
000000000001b210	csel	x23, x8, x22, eq
000000000001b214	movi.16b	v0, #0x0
000000000001b218	stp	q0, q0, [sp, #0x10]
000000000001b21c	str	xzr, [sp, #0x30]
000000000001b220	adrp	x0, 77 ; 0x68000
000000000001b224	add	x0, x0, #0xa00
000000000001b228	ldr	x25, [x0]
000000000001b22c	blr	x25
000000000001b230	ldr	x8, [x0]
000000000001b234	ldr	x9, [x8, #0x110]
000000000001b238	add	x10, sp, #0x10
000000000001b23c	str	x10, [x8, #0x110]
000000000001b240	mov	x8, #0x500000000
000000000001b244	stp	x9, x8, [sp, #0x18]
000000000001b248	ldr	x8, [x23]
000000000001b24c	and	x8, x8, #0xfffffffffffffffc
000000000001b250	ldr	x8, [x8]
000000000001b254	ldr	w9, [x8, #0x3c]
000000000001b258	ldr	x8, [x8, #0x40]
000000000001b25c	str	x19, [sp, #0x8]
000000000001b260	tbnz	w9, #0x1f, 0x1b270
000000000001b264	mov	w10, #0x19
000000000001b268	and	x9, x9, x10
000000000001b26c	b	0x1b2f4
000000000001b270	neg	w10, w9
000000000001b274	mvn	w9, w9
000000000001b278	cmp	w10, #0x9
000000000001b27c	b.ge	0x1b2b4
000000000001b280	cmp	w10, #0x2
000000000001b284	b.lt	0x1b2e8
000000000001b288	mov	x10, #0x0
000000000001b28c	mov	x11, x8
000000000001b290	ldr	w12, [x11]
000000000001b294	cmp	w12, #0x18
000000000001b298	b.gt	0x1b2f0
000000000001b29c	add	x10, x10, #0x1
000000000001b2a0	add	x11, x11, #0x10
000000000001b2a4	cmp	x9, x10
000000000001b2a8	b.ne	0x1b290
000000000001b2ac	mov	x10, x9
000000000001b2b0	b	0x1b2f0
000000000001b2b4	mov	w10, #0x0
000000000001b2b8	add	w11, w9, w10
000000000001b2bc	cmp	w11, #0x0
000000000001b2c0	cinc	w11, w11, lt
000000000001b2c4	asr	w11, w11, #1
000000000001b2c8	sbfiz	x12, x11, #4, #32
000000000001b2cc	ldr	w12, [x8, x12]
000000000001b2d0	cmp	w12, #0x19
000000000001b2d4	csinc	w10, w10, w11, ge
000000000001b2d8	csel	w9, w9, w11, lt
000000000001b2dc	cmp	w10, w9
000000000001b2e0	b.lt	0x1b2b8
000000000001b2e4	b	0x1b2f0
000000000001b2e8	mov	w10, #0x0
000000000001b2ec	b	0x1b2f0
000000000001b2f0	sxtw	x9, w10
000000000001b2f4	add	x8, x8, x9, lsl #4
000000000001b2f8	ldr	x8, [x8, #0x8]
000000000001b2fc	ldr	x8, [x8]
000000000001b300	mov	x0, x23
000000000001b304	blr	x8
000000000001b308	mov	x2, x0
000000000001b30c	mov	x0, x21
000000000001b310	mov	x1, x24
000000000001b314	bl	"_kfun:kotlin.text#checkBoundsIndexes(kotlin.Int;kotlin.Int;kotlin.Int){}"
000000000001b318	sub	w19, w24, w21
000000000001b31c	ldr	w8, [x20, #0x10]
000000000001b320	add	w1, w8, w19
000000000001b324	mov	x0, x20
000000000001b328	bl	"_kfun:kotlin.text.StringBuilder#ensureCapacity(kotlin.Int){}"
000000000001b32c	ldr	x8, [x23]
000000000001b330	and	x8, x8, #0xfffffffffffffffc
000000000001b334	ldr	x8, [x8]
000000000001b338	ldr	w8, [x8, #0x5c]
000000000001b33c	cmp	w8, #0x75
000000000001b340	b.ne	0x1b380
000000000001b344	ldrsw	x22, [x20, #0x10]
000000000001b348	ldr	x8, [x20, #0x8]
000000000001b34c	str	x8, [sp, #0x28]
000000000001b350	add	x8, x8, x22, lsl #1
000000000001b354	add	x0, x8, #0x10
000000000001b358	add	x8, x23, w21, sxtw #1
000000000001b35c	add	x1, x8, #0x10
000000000001b360	sbfiz	x2, x19, #1, #32
000000000001b364	bl	0x4dbec ; symbol stub for: _memcpy
000000000001b368	add	w21, w22, w19
000000000001b36c	mov	x0, x20
000000000001b370	mov	x1, x21
000000000001b374	bl	"_kfun:kotlin.text.StringBuilder#ensureCapacity(kotlin.Int){}"
000000000001b378	str	w21, [x20, #0x10]
000000000001b37c	b	0x1b4a0
000000000001b380	cmp	w24, w21
000000000001b384	csel	w27, w24, w21, gt
000000000001b388	mov	w28, #0x19
000000000001b38c	cmp	w21, w27
000000000001b390	b.eq	0x1b4a0
000000000001b394	ldarb	w8, [x26]
000000000001b398	tbz	w8, #0x0, 0x1b3a0
000000000001b39c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001b3a0	ldr	x22, [x20, #0x8]
000000000001b3a4	str	x22, [sp, #0x30]
000000000001b3a8	ldrsw	x19, [x20, #0x10]
000000000001b3ac	add	w24, w19, #0x1
000000000001b3b0	mov	x0, x20
000000000001b3b4	mov	x1, x24
000000000001b3b8	bl	"_kfun:kotlin.text.StringBuilder#ensureCapacity(kotlin.Int){}"
000000000001b3bc	str	w24, [x20, #0x10]
000000000001b3c0	ldr	x8, [x23]
000000000001b3c4	and	x8, x8, #0xfffffffffffffffc
000000000001b3c8	ldr	x8, [x8]
000000000001b3cc	ldr	w9, [x8, #0x3c]
000000000001b3d0	ldr	x8, [x8, #0x40]
000000000001b3d4	tbnz	w9, #0x1f, 0x1b3e0
000000000001b3d8	and	x9, x9, x28
000000000001b3dc	b	0x1b464
000000000001b3e0	neg	w10, w9
000000000001b3e4	mvn	w9, w9
000000000001b3e8	cmp	w10, #0x9
000000000001b3ec	b.ge	0x1b424
000000000001b3f0	cmp	w10, #0x2
000000000001b3f4	b.lt	0x1b458
000000000001b3f8	mov	x10, #0x0
000000000001b3fc	mov	x11, x8
000000000001b400	ldr	w12, [x11]
000000000001b404	cmp	w12, #0x18
000000000001b408	b.gt	0x1b460
000000000001b40c	add	x10, x10, #0x1
000000000001b410	add	x11, x11, #0x10
000000000001b414	cmp	x9, x10
000000000001b418	b.ne	0x1b400
000000000001b41c	mov	x10, x9
000000000001b420	b	0x1b460
000000000001b424	mov	w10, #0x0
000000000001b428	add	w11, w9, w10
000000000001b42c	cmp	w11, #0x0
000000000001b430	cinc	w11, w11, lt
000000000001b434	asr	w11, w11, #1
000000000001b438	sbfiz	x12, x11, #4, #32
000000000001b43c	ldr	w12, [x8, x12]
000000000001b440	cmp	w12, #0x19
000000000001b444	csinc	w10, w10, w11, ge
000000000001b448	csel	w9, w9, w11, lt
000000000001b44c	cmp	w10, w9
000000000001b450	b.lt	0x1b428
000000000001b454	b	0x1b460
000000000001b458	mov	w10, #0x0
000000000001b45c	b	0x1b460
000000000001b460	sxtw	x9, w10
000000000001b464	add	x8, x8, x9, lsl #4
000000000001b468	ldr	x8, [x8, #0x8]
000000000001b46c	ldr	x8, [x8, #0x8]
000000000001b470	mov	x0, x23
000000000001b474	mov	x1, x21
000000000001b478	blr	x8
000000000001b47c	ldr	w8, [x22, #0x8]
000000000001b480	cmp	w8, w19
000000000001b484	b.ls	0x1b4e8
000000000001b488	add	w21, w21, #0x1
000000000001b48c	ldr	xzr, [x22]
000000000001b490	add	x8, x22, x19, lsl #1
000000000001b494	strh	w0, [x8, #0x10]
000000000001b498	cmp	w21, w27
000000000001b49c	b.ne	0x1b394
000000000001b4a0	ldr	x10, [sp, #0x8]
000000000001b4a4	str	x20, [x10]
000000000001b4a8	adrp	x0, 77 ; 0x68000
000000000001b4ac	add	x0, x0, #0xa00
000000000001b4b0	blr	x25
000000000001b4b4	ldr	x8, [x0]
000000000001b4b8	ldr	x9, [sp, #0x18]
000000000001b4bc	str	x9, [x8, #0x110]
000000000001b4c0	str	x20, [x10]
000000000001b4c4	mov	x0, x20
000000000001b4c8	ldp	x29, x30, [sp, #0x90]
000000000001b4cc	ldp	x20, x19, [sp, #0x80]
000000000001b4d0	ldp	x22, x21, [sp, #0x70]
000000000001b4d4	ldp	x24, x23, [sp, #0x60]
000000000001b4d8	ldp	x26, x25, [sp, #0x50]
000000000001b4dc	ldp	x28, x27, [sp, #0x40]
000000000001b4e0	add	sp, sp, #0xa0
000000000001b4e4	ret
000000000001b4e8	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder:
000000000001b4ec	sub	sp, sp, #0x90
000000000001b4f0	stp	x26, x25, [sp, #0x40]
000000000001b4f4	stp	x24, x23, [sp, #0x50]
000000000001b4f8	stp	x22, x21, [sp, #0x60]
000000000001b4fc	stp	x20, x19, [sp, #0x70]
000000000001b500	stp	x29, x30, [sp, #0x80]
000000000001b504	add	x29, sp, #0x80
000000000001b508	mov	x20, x2
000000000001b50c	mov	x21, x1
000000000001b510	mov	x19, x0
000000000001b514	movi.16b	v0, #0x0
000000000001b518	stp	q0, q0, [sp, #0x10]
000000000001b51c	adrp	x0, 77 ; 0x68000
000000000001b520	add	x0, x0, #0xa00
000000000001b524	ldr	x8, [x0]
000000000001b528	blr	x8
000000000001b52c	ldr	x22, [x0]
000000000001b530	ldr	x8, [x22, #0x110]
000000000001b534	add	x9, sp, #0x10
000000000001b538	str	x9, [x22, #0x110]
000000000001b53c	mov	x9, #0x400000000
000000000001b540	stp	x8, x9, [sp, #0x18]
000000000001b544	adr	x8, #0x672ff
000000000001b548	nop
000000000001b54c	ldarb	w8, [x8]
000000000001b550	tbz	w8, #0x0, 0x1b558
000000000001b554	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001b558	ldr	w8, [x19, #0x10]
000000000001b55c	add	w1, w8, #0xb
000000000001b560	mov	x0, x19
000000000001b564	bl	"_kfun:kotlin.text.StringBuilder#ensureCapacity(kotlin.Int){}"
000000000001b568	ldrsw	x23, [x19, #0x10]
000000000001b56c	ldr	x25, [x19, #0x8]
000000000001b570	str	x25, [sp, #0x28]
000000000001b574	add	x24, sp, #0x34
000000000001b578	str	x21, [sp]
000000000001b57c	adr	x2, #0x37724 ; literal pool for: "%d"
000000000001b580	nop
000000000001b584	add	x0, sp, #0x34
000000000001b588	mov	w1, #0xc
000000000001b58c	bl	__ZN5konan8snprintfEPcmPKcz
000000000001b590	ldrb	w8, [sp, #0x34]
000000000001b594	cbz	w8, 0x1b5b4
000000000001b598	add	x24, sp, #0x34
000000000001b59c	add	x9, x25, x23, lsl #1
000000000001b5a0	add	x9, x9, #0x10
000000000001b5a4	sxtb	w8, w8
000000000001b5a8	strh	w8, [x9], #0x2
000000000001b5ac	ldrb	w8, [x24, #0x1]!
000000000001b5b0	cbnz	w8, 0x1b5a4
000000000001b5b4	add	x8, sp, #0x34
000000000001b5b8	sub	w8, w24, w8
000000000001b5bc	add	w21, w23, w8
000000000001b5c0	mov	x0, x19
000000000001b5c4	mov	x1, x21
000000000001b5c8	bl	"_kfun:kotlin.text.StringBuilder#ensureCapacity(kotlin.Int){}"
000000000001b5cc	str	w21, [x19, #0x10]
000000000001b5d0	str	x19, [x20]
000000000001b5d4	ldr	x8, [sp, #0x18]
000000000001b5d8	str	x8, [x22, #0x110]
000000000001b5dc	mov	x0, x19
000000000001b5e0	ldp	x29, x30, [sp, #0x80]
000000000001b5e4	ldp	x20, x19, [sp, #0x70]
000000000001b5e8	ldp	x22, x21, [sp, #0x60]
000000000001b5ec	ldp	x24, x23, [sp, #0x50]
000000000001b5f0	ldp	x26, x25, [sp, #0x40]
000000000001b5f4	add	sp, sp, #0x90
000000000001b5f8	ret
_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder:
000000000001b5fc	sub	sp, sp, #0x60
000000000001b600	stp	x24, x23, [sp, #0x20]
000000000001b604	stp	x22, x21, [sp, #0x30]
000000000001b608	stp	x20, x19, [sp, #0x40]
000000000001b60c	stp	x29, x30, [sp, #0x50]
000000000001b610	add	x29, sp, #0x50
000000000001b614	mov	x20, x2
000000000001b618	mov	x21, x1
000000000001b61c	mov	x19, x0
000000000001b620	movi.16b	v0, #0x0
000000000001b624	stp	q0, q0, [sp]
000000000001b628	adrp	x0, 77 ; 0x68000
000000000001b62c	add	x0, x0, #0xa00
000000000001b630	ldr	x8, [x0]
000000000001b634	blr	x8
000000000001b638	ldr	x22, [x0]
000000000001b63c	ldr	x8, [x22, #0x110]
000000000001b640	mov	x9, sp
000000000001b644	str	x9, [x22, #0x110]
000000000001b648	mov	x9, #0x400000000
000000000001b64c	stp	x8, x9, [sp, #0x8]
000000000001b650	adr	x8, #0x671f3
000000000001b654	nop
000000000001b658	ldarb	w8, [x8]
000000000001b65c	tbz	w8, #0x0, 0x1b664
000000000001b660	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001b664	adr	x8, #0x45a3c
000000000001b668	nop
000000000001b66c	cmp	x21, #0x0
000000000001b670	csel	x21, x8, x21, eq
000000000001b674	ldr	w8, [x21, #0x8]
000000000001b678	ldr	w9, [x19, #0x10]
000000000001b67c	add	w1, w9, w8
000000000001b680	mov	x0, x19
000000000001b684	bl	"_kfun:kotlin.text.StringBuilder#ensureCapacity(kotlin.Int){}"
000000000001b688	ldrsw	x23, [x19, #0x10]
000000000001b68c	ldr	x8, [x19, #0x8]
000000000001b690	str	x8, [sp, #0x18]
000000000001b694	ldrsw	x24, [x21, #0x8]
000000000001b698	add	x8, x8, x23, lsl #1
000000000001b69c	add	x0, x8, #0x10
000000000001b6a0	add	x1, x21, #0x10
000000000001b6a4	lsl	x2, x24, #1
000000000001b6a8	bl	0x4dbec ; symbol stub for: _memcpy
000000000001b6ac	add	w21, w23, w24
000000000001b6b0	mov	x0, x19
000000000001b6b4	mov	x1, x21
000000000001b6b8	bl	"_kfun:kotlin.text.StringBuilder#ensureCapacity(kotlin.Int){}"
000000000001b6bc	str	w21, [x19, #0x10]
000000000001b6c0	str	x19, [x20]
000000000001b6c4	ldr	x8, [sp, #0x8]
000000000001b6c8	str	x8, [x22, #0x110]
000000000001b6cc	mov	x0, x19
000000000001b6d0	ldp	x29, x30, [sp, #0x50]
000000000001b6d4	ldp	x20, x19, [sp, #0x40]
000000000001b6d8	ldp	x22, x21, [sp, #0x30]
000000000001b6dc	ldp	x24, x23, [sp, #0x20]
000000000001b6e0	add	sp, sp, #0x60
000000000001b6e4	ret
_kfun:kotlin.text.StringBuilder#ensureCapacity(kotlin.Int){}:
000000000001b6e8	sub	sp, sp, #0x70
000000000001b6ec	stp	x22, x21, [sp, #0x40]
000000000001b6f0	stp	x20, x19, [sp, #0x50]
000000000001b6f4	stp	x29, x30, [sp, #0x60]
000000000001b6f8	add	x29, sp, #0x60
000000000001b6fc	mov	x20, x1
000000000001b700	mov	x19, x0
000000000001b704	movi.16b	v0, #0x0
000000000001b708	stp	q0, q0, [sp]
000000000001b70c	str	xzr, [sp, #0x30]
000000000001b710	str	q0, [sp, #0x20]
000000000001b714	mov	x22, sp
000000000001b718	adrp	x0, 77 ; 0x68000
000000000001b71c	add	x0, x0, #0xa00
000000000001b720	ldr	x8, [x0]
000000000001b724	blr	x8
000000000001b728	ldr	x21, [x0]
000000000001b72c	ldr	x8, [x21, #0x110]
000000000001b730	str	x22, [x21, #0x110]
000000000001b734	mov	x9, #0x700000000
000000000001b738	stp	x8, x9, [sp, #0x8]
000000000001b73c	adr	x8, #0x67107
000000000001b740	nop
000000000001b744	ldarb	w8, [x8]
000000000001b748	tbz	w8, #0x0, 0x1b750
000000000001b74c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001b750	ldr	x8, [x19, #0x8]
000000000001b754	str	x8, [sp, #0x18]
000000000001b758	ldr	w8, [x8, #0x8]
000000000001b75c	cmp	w8, w20
000000000001b760	b.ge	0x1b790
000000000001b764	add	x2, x22, #0x30
000000000001b768	ldr	x0, [x19, #0x8]
000000000001b76c	ldr	w8, [x0, #0x8]
000000000001b770	lsl	w8, w8, #1
000000000001b774	add	w8, w8, #0x2
000000000001b778	cmp	w8, w20
000000000001b77c	csel	w1, w20, w8, lt
000000000001b780	stp	x0, x0, [sp, #0x20]
000000000001b784	bl	"_kfun:kotlin.collections#copyOfUninitializedElements__at__kotlin.CharArray(kotlin.Int;kotlin.Int){}kotlin.CharArray"
000000000001b788	str	x0, [sp, #0x30]
000000000001b78c	str	x0, [x19, #0x8]
000000000001b790	ldr	x8, [sp, #0x8]
000000000001b794	str	x8, [x21, #0x110]
000000000001b798	ldp	x29, x30, [sp, #0x60]
000000000001b79c	ldp	x20, x19, [sp, #0x50]
000000000001b7a0	ldp	x22, x21, [sp, #0x40]
000000000001b7a4	add	sp, sp, #0x70
000000000001b7a8	ret
_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String:
000000000001b7ac	sub	sp, sp, #0x80
000000000001b7b0	stp	x24, x23, [sp, #0x40]
000000000001b7b4	stp	x22, x21, [sp, #0x50]
000000000001b7b8	stp	x20, x19, [sp, #0x60]
000000000001b7bc	stp	x29, x30, [sp, #0x70]
000000000001b7c0	add	x29, sp, #0x70
000000000001b7c4	mov	x19, x1
000000000001b7c8	mov	x20, x0
000000000001b7cc	movi.16b	v0, #0x0
000000000001b7d0	stp	q0, q0, [sp]
000000000001b7d4	adrp	x0, 77 ; 0x68000
000000000001b7d8	add	x0, x0, #0xa00
000000000001b7dc	ldr	x8, [x0]
000000000001b7e0	blr	x8
000000000001b7e4	ldr	x21, [x0]
000000000001b7e8	ldr	x8, [x21, #0x110]
000000000001b7ec	mov	x9, sp
000000000001b7f0	str	x9, [x21, #0x110]
000000000001b7f4	mov	x9, #0x400000000
000000000001b7f8	stp	x8, x9, [sp, #0x8]
000000000001b7fc	adr	x8, #0x67047
000000000001b800	nop
000000000001b804	ldarb	w8, [x8]
000000000001b808	tbz	w8, #0x0, 0x1b810
000000000001b80c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001b810	ldr	x22, [x20, #0x8]
000000000001b814	str	x22, [sp, #0x18]
000000000001b818	ldr	w23, [x20, #0x10]
000000000001b81c	cbz	w23, 0x1b878
000000000001b820	tbnz	w23, #0x1f, 0x1b8bc
000000000001b824	mov	x8, x23
000000000001b828	sxtw	x24, w8
000000000001b82c	ldr	x8, [x21, #0x118]
000000000001b830	lsl	x9, x23, #1
000000000001b834	add	x9, x9, #0x1f
000000000001b838	and	x1, x9, #0x3fffffff8
000000000001b83c	add	x0, x8, #0x70
000000000001b840	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001b844	mov	x20, x0
000000000001b848	adr	x8, #0x39e98
000000000001b84c	nop
000000000001b850	stp	x8, xzr, [x20, #0x10]!
000000000001b854	stur	xzr, [x20, #-0x8]
000000000001b858	str	w23, [x20, #0x8]
000000000001b85c	str	x20, [x19]
000000000001b860	add	x0, x20, #0x10
000000000001b864	add	x1, x22, #0x10
000000000001b868	lsl	x2, x24, #1
000000000001b86c	bl	0x4dbec ; symbol stub for: _memcpy
000000000001b870	str	x20, [x19]
000000000001b874	b	0x1b894
000000000001b878	ldr	x8, [x21, #0x110]
000000000001b87c	add	x9, sp, #0x28
000000000001b880	str	x9, [x21, #0x110]
000000000001b884	adr	x20, #0x45804
000000000001b888	nop
000000000001b88c	str	x20, [x19]
000000000001b890	str	x8, [x21, #0x110]
000000000001b894	str	x20, [x19]
000000000001b898	ldr	x8, [sp, #0x8]
000000000001b89c	str	x8, [x21, #0x110]
000000000001b8a0	mov	x0, x20
000000000001b8a4	ldp	x29, x30, [sp, #0x70]
000000000001b8a8	ldp	x20, x19, [sp, #0x60]
000000000001b8ac	ldp	x22, x21, [sp, #0x50]
000000000001b8b0	ldp	x24, x23, [sp, #0x40]
000000000001b8b4	add	sp, sp, #0x80
000000000001b8b8	ret
000000000001b8bc	bl	_ThrowIllegalArgumentException
_kfun:kotlin.collections.AbstractCollection#contains(1:0){}kotlin.Boolean:
000000000001b8c0	sub	sp, sp, #0x70
000000000001b8c4	stp	x24, x23, [sp, #0x30]
000000000001b8c8	stp	x22, x21, [sp, #0x40]
000000000001b8cc	stp	x20, x19, [sp, #0x50]
000000000001b8d0	stp	x29, x30, [sp, #0x60]
000000000001b8d4	add	x29, sp, #0x60
000000000001b8d8	mov	x19, x1
000000000001b8dc	mov	x21, x0
000000000001b8e0	movi.16b	v0, #0x0
000000000001b8e4	stp	q0, q0, [sp]
000000000001b8e8	str	xzr, [sp, #0x20]
000000000001b8ec	mov	x24, sp
000000000001b8f0	adrp	x0, 77 ; 0x68000
000000000001b8f4	add	x0, x0, #0xa00
000000000001b8f8	ldr	x8, [x0]
000000000001b8fc	blr	x8
000000000001b900	ldr	x22, [x0]
000000000001b904	ldr	x8, [x22, #0x110]
000000000001b908	str	x24, [x22, #0x110]
000000000001b90c	mov	x9, #0x500000000
000000000001b910	stp	x8, x9, [sp, #0x8]
000000000001b914	adr	x23, #0x66f2f
000000000001b918	nop
000000000001b91c	ldarb	w8, [x23]
000000000001b920	tbz	w8, #0x0, 0x1b928
000000000001b924	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001b928	cbz	x21, 0x1bb10
000000000001b92c	ldr	x8, [x21]
000000000001b930	and	x8, x8, #0xfffffffffffffffc
000000000001b934	ldr	x8, [x8]
000000000001b938	ldr	w9, [x8, #0x3c]
000000000001b93c	ldr	x8, [x8, #0x40]
000000000001b940	tbnz	w9, #0x1f, 0x1b960
000000000001b944	mov	w10, #0x12
000000000001b948	and	x9, x9, x10
000000000001b94c	lsl	x9, x9, #4
000000000001b950	ldr	w8, [x8, x9]
000000000001b954	cmp	w8, #0x12
000000000001b958	b.eq	0x1ba30
000000000001b95c	b	0x1bb10
000000000001b960	neg	w10, w9
000000000001b964	mvn	w9, w9
000000000001b968	cmp	w10, #0x9
000000000001b96c	b.ge	0x1b9b8
000000000001b970	cmp	w10, #0x2
000000000001b974	b.lt	0x1ba00
000000000001b978	mov	x10, #0x0
000000000001b97c	mov	x11, x8
000000000001b980	ldr	w12, [x11]
000000000001b984	cmp	w12, #0x11
000000000001b988	b.gt	0x1ba1c
000000000001b98c	add	x10, x10, #0x1
000000000001b990	add	x11, x11, #0x10
000000000001b994	cmp	x9, x10
000000000001b998	b.ne	0x1b980
000000000001b99c	mov	x10, x9
000000000001b9a0	sxtw	x9, w10
000000000001b9a4	lsl	x9, x9, #4
000000000001b9a8	ldr	w8, [x8, x9]
000000000001b9ac	cmp	w8, #0x12
000000000001b9b0	b.eq	0x1ba30
000000000001b9b4	b	0x1bb10
000000000001b9b8	mov	w10, #0x0
000000000001b9bc	add	w11, w9, w10
000000000001b9c0	cmp	w11, #0x0
000000000001b9c4	cinc	w11, w11, lt
000000000001b9c8	asr	w11, w11, #1
000000000001b9cc	sbfiz	x12, x11, #4, #32
000000000001b9d0	ldr	w12, [x8, x12]
000000000001b9d4	cmp	w12, #0x12
000000000001b9d8	csinc	w10, w10, w11, ge
000000000001b9dc	csel	w9, w9, w11, lt
000000000001b9e0	cmp	w10, w9
000000000001b9e4	b.lt	0x1b9bc
000000000001b9e8	sxtw	x9, w10
000000000001b9ec	lsl	x9, x9, #4
000000000001b9f0	ldr	w8, [x8, x9]
000000000001b9f4	cmp	w8, #0x12
000000000001b9f8	b.eq	0x1ba30
000000000001b9fc	b	0x1bb10
000000000001ba00	mov	w10, #0x0
000000000001ba04	sxtw	x9, w10
000000000001ba08	lsl	x9, x9, #4
000000000001ba0c	ldr	w8, [x8, x9]
000000000001ba10	cmp	w8, #0x12
000000000001ba14	b.eq	0x1ba30
000000000001ba18	b	0x1bb10
000000000001ba1c	sxtw	x9, w10
000000000001ba20	lsl	x9, x9, #4
000000000001ba24	ldr	w8, [x8, x9]
000000000001ba28	cmp	w8, #0x12
000000000001ba2c	b.ne	0x1bb10
000000000001ba30	ldr	x8, [x21]
000000000001ba34	and	x8, x8, #0xfffffffffffffffc
000000000001ba38	ldr	x8, [x8]
000000000001ba3c	ldr	w9, [x8, #0x3c]
000000000001ba40	ldr	x8, [x8, #0x40]
000000000001ba44	tbnz	w9, #0x1f, 0x1ba6c
000000000001ba48	mov	w10, #0x12
000000000001ba4c	and	x9, x9, x10
000000000001ba50	add	x8, x8, x9, lsl #4
000000000001ba54	ldr	x8, [x8, #0x8]
000000000001ba58	ldr	x8, [x8, #0x18]
000000000001ba5c	mov	x0, x21
000000000001ba60	blr	x8
000000000001ba64	tbnz	w0, #0x0, 0x1bb08
000000000001ba68	b	0x1bb10
000000000001ba6c	neg	w10, w9
000000000001ba70	mvn	w9, w9
000000000001ba74	cmp	w10, #0x9
000000000001ba78	b.ge	0x1bab0
000000000001ba7c	cmp	w10, #0x2
000000000001ba80	b.lt	0x1bae4
000000000001ba84	mov	x10, #0x0
000000000001ba88	mov	x11, x8
000000000001ba8c	ldr	w12, [x11]
000000000001ba90	cmp	w12, #0x11
000000000001ba94	b.gt	0x1baec
000000000001ba98	add	x10, x10, #0x1
000000000001ba9c	add	x11, x11, #0x10
000000000001baa0	cmp	x9, x10
000000000001baa4	b.ne	0x1ba8c
000000000001baa8	mov	x10, x9
000000000001baac	b	0x1baec
000000000001bab0	mov	w10, #0x0
000000000001bab4	add	w11, w9, w10
000000000001bab8	cmp	w11, #0x0
000000000001babc	cinc	w11, w11, lt
000000000001bac0	asr	w11, w11, #1
000000000001bac4	sbfiz	x12, x11, #4, #32
000000000001bac8	ldr	w12, [x8, x12]
000000000001bacc	cmp	w12, #0x12
000000000001bad0	csinc	w10, w10, w11, ge
000000000001bad4	csel	w9, w9, w11, lt
000000000001bad8	cmp	w10, w9
000000000001badc	b.lt	0x1bab4
000000000001bae0	b	0x1baec
000000000001bae4	mov	w10, #0x0
000000000001bae8	b	0x1baec
000000000001baec	sxtw	x9, w10
000000000001baf0	add	x8, x8, x9, lsl #4
000000000001baf4	ldr	x8, [x8, #0x8]
000000000001baf8	ldr	x8, [x8, #0x18]
000000000001bafc	mov	x0, x21
000000000001bb00	blr	x8
000000000001bb04	tbz	w0, #0x0, 0x1bb10
000000000001bb08	mov	w0, #0x0
000000000001bb0c	b	0x1bda4
000000000001bb10	add	x20, x24, #0x20
000000000001bb14	add	x1, x24, #0x18
000000000001bb18	ldr	x8, [x21]
000000000001bb1c	and	x8, x8, #0xfffffffffffffffc
000000000001bb20	ldr	x8, [x8]
000000000001bb24	ldr	w9, [x8, #0x3c]
000000000001bb28	ldr	x8, [x8, #0x40]
000000000001bb2c	tbnz	w9, #0x1f, 0x1bb3c
000000000001bb30	mov	w10, #0x31
000000000001bb34	and	x9, x9, x10
000000000001bb38	b	0x1bbc0
000000000001bb3c	neg	w10, w9
000000000001bb40	mvn	w9, w9
000000000001bb44	cmp	w10, #0x9
000000000001bb48	b.ge	0x1bb80
000000000001bb4c	cmp	w10, #0x2
000000000001bb50	b.lt	0x1bbb4
000000000001bb54	mov	x10, #0x0
000000000001bb58	mov	x11, x8
000000000001bb5c	ldr	w12, [x11]
000000000001bb60	cmp	w12, #0x30
000000000001bb64	b.gt	0x1bbbc
000000000001bb68	add	x10, x10, #0x1
000000000001bb6c	add	x11, x11, #0x10
000000000001bb70	cmp	x9, x10
000000000001bb74	b.ne	0x1bb5c
000000000001bb78	mov	x10, x9
000000000001bb7c	b	0x1bbbc
000000000001bb80	mov	w10, #0x0
000000000001bb84	add	w11, w9, w10
000000000001bb88	cmp	w11, #0x0
000000000001bb8c	cinc	w11, w11, lt
000000000001bb90	asr	w11, w11, #1
000000000001bb94	sbfiz	x12, x11, #4, #32
000000000001bb98	ldr	w12, [x8, x12]
000000000001bb9c	cmp	w12, #0x31
000000000001bba0	csinc	w10, w10, w11, ge
000000000001bba4	csel	w9, w9, w11, lt
000000000001bba8	cmp	w10, w9
000000000001bbac	b.lt	0x1bb84
000000000001bbb0	b	0x1bbbc
000000000001bbb4	mov	w10, #0x0
000000000001bbb8	b	0x1bbbc
000000000001bbbc	sxtw	x9, w10
000000000001bbc0	add	x8, x8, x9, lsl #4
000000000001bbc4	ldr	x8, [x8, #0x8]
000000000001bbc8	ldr	x8, [x8]
000000000001bbcc	mov	x0, x21
000000000001bbd0	blr	x8
000000000001bbd4	mov	x21, x0
000000000001bbd8	mov	w24, #0xa0
000000000001bbdc	b	0x1bbe4
000000000001bbe0	cbz	x19, 0x1bda0
000000000001bbe4	ldr	x8, [x21]
000000000001bbe8	and	x8, x8, #0xfffffffffffffffc
000000000001bbec	ldr	x8, [x8]
000000000001bbf0	ldr	w9, [x8, #0x3c]
000000000001bbf4	ldr	x8, [x8, #0x40]
000000000001bbf8	tbnz	w9, #0x1f, 0x1bc1c
000000000001bbfc	and	x9, x9, x24
000000000001bc00	add	x8, x8, x9, lsl #4
000000000001bc04	ldr	x8, [x8, #0x8]
000000000001bc08	ldr	x8, [x8]
000000000001bc0c	mov	x0, x21
000000000001bc10	blr	x8
000000000001bc14	tbnz	w0, #0x0, 0x1bcb8
000000000001bc18	b	0x1bb08
000000000001bc1c	neg	w10, w9
000000000001bc20	mvn	w9, w9
000000000001bc24	cmp	w10, #0x9
000000000001bc28	b.ge	0x1bc60
000000000001bc2c	cmp	w10, #0x2
000000000001bc30	b.lt	0x1bc94
000000000001bc34	mov	x10, #0x0
000000000001bc38	mov	x11, x8
000000000001bc3c	ldr	w12, [x11]
000000000001bc40	cmp	w12, #0x9f
000000000001bc44	b.gt	0x1bc9c
000000000001bc48	add	x10, x10, #0x1
000000000001bc4c	add	x11, x11, #0x10
000000000001bc50	cmp	x9, x10
000000000001bc54	b.ne	0x1bc3c
000000000001bc58	mov	x10, x9
000000000001bc5c	b	0x1bc9c
000000000001bc60	mov	w10, #0x0
000000000001bc64	add	w11, w9, w10
000000000001bc68	cmp	w11, #0x0
000000000001bc6c	cinc	w11, w11, lt
000000000001bc70	asr	w11, w11, #1
000000000001bc74	sbfiz	x12, x11, #4, #32
000000000001bc78	ldr	w12, [x8, x12]
000000000001bc7c	cmp	w12, #0xa0
000000000001bc80	csinc	w10, w10, w11, ge
000000000001bc84	csel	w9, w9, w11, lt
000000000001bc88	cmp	w10, w9
000000000001bc8c	b.lt	0x1bc64
000000000001bc90	b	0x1bc9c
000000000001bc94	mov	w10, #0x0
000000000001bc98	b	0x1bc9c
000000000001bc9c	sxtw	x9, w10
000000000001bca0	add	x8, x8, x9, lsl #4
000000000001bca4	ldr	x8, [x8, #0x8]
000000000001bca8	ldr	x8, [x8]
000000000001bcac	mov	x0, x21
000000000001bcb0	blr	x8
000000000001bcb4	tbz	w0, #0x0, 0x1bb08
000000000001bcb8	ldarb	w8, [x23]
000000000001bcbc	tbz	w8, #0x0, 0x1bcc4
000000000001bcc0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001bcc4	ldr	x8, [x21]
000000000001bcc8	and	x8, x8, #0xfffffffffffffffc
000000000001bccc	ldr	x8, [x8]
000000000001bcd0	ldr	w9, [x8, #0x3c]
000000000001bcd4	ldr	x8, [x8, #0x40]
000000000001bcd8	tbnz	w9, #0x1f, 0x1bce4
000000000001bcdc	and	x9, x9, x24
000000000001bce0	b	0x1bd68
000000000001bce4	neg	w10, w9
000000000001bce8	mvn	w9, w9
000000000001bcec	cmp	w10, #0x9
000000000001bcf0	b.ge	0x1bd28
000000000001bcf4	cmp	w10, #0x2
000000000001bcf8	b.lt	0x1bd5c
000000000001bcfc	mov	x10, #0x0
000000000001bd00	mov	x11, x8
000000000001bd04	ldr	w12, [x11]
000000000001bd08	cmp	w12, #0x9f
000000000001bd0c	b.gt	0x1bd64
000000000001bd10	add	x10, x10, #0x1
000000000001bd14	add	x11, x11, #0x10
000000000001bd18	cmp	x9, x10
000000000001bd1c	b.ne	0x1bd04
000000000001bd20	mov	x10, x9
000000000001bd24	b	0x1bd64
000000000001bd28	mov	w10, #0x0
000000000001bd2c	add	w11, w9, w10
000000000001bd30	cmp	w11, #0x0
000000000001bd34	cinc	w11, w11, lt
000000000001bd38	asr	w11, w11, #1
000000000001bd3c	sbfiz	x12, x11, #4, #32
000000000001bd40	ldr	w12, [x8, x12]
000000000001bd44	cmp	w12, #0xa0
000000000001bd48	csinc	w10, w10, w11, ge
000000000001bd4c	csel	w9, w9, w11, lt
000000000001bd50	cmp	w10, w9
000000000001bd54	b.lt	0x1bd2c
000000000001bd58	b	0x1bd64
000000000001bd5c	mov	w10, #0x0
000000000001bd60	b	0x1bd64
000000000001bd64	sxtw	x9, w10
000000000001bd68	add	x8, x8, x9, lsl #4
000000000001bd6c	ldr	x8, [x8, #0x8]
000000000001bd70	ldr	x8, [x8, #0x8]
000000000001bd74	mov	x0, x21
000000000001bd78	mov	x1, x20
000000000001bd7c	blr	x8
000000000001bd80	cbz	x0, 0x1bbe0
000000000001bd84	ldr	x8, [x0]
000000000001bd88	and	x8, x8, #0xfffffffffffffffc
000000000001bd8c	ldr	x8, [x8]
000000000001bd90	ldr	x8, [x8, #0x70]
000000000001bd94	mov	x1, x19
000000000001bd98	blr	x8
000000000001bd9c	tbz	w0, #0x0, 0x1bbe4
000000000001bda0	mov	w0, #0x1
000000000001bda4	ldr	x8, [sp, #0x8]
000000000001bda8	str	x8, [x22, #0x110]
000000000001bdac	ldp	x29, x30, [sp, #0x60]
000000000001bdb0	ldp	x20, x19, [sp, #0x50]
000000000001bdb4	ldp	x22, x21, [sp, #0x40]
000000000001bdb8	ldp	x24, x23, [sp, #0x30]
000000000001bdbc	add	sp, sp, #0x70
000000000001bdc0	ret
_kfun:kotlin.collections.AbstractCollection#containsAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean:
000000000001bdc4	sub	sp, sp, #0x70
000000000001bdc8	stp	x24, x23, [sp, #0x30]
000000000001bdcc	stp	x22, x21, [sp, #0x40]
000000000001bdd0	stp	x20, x19, [sp, #0x50]
000000000001bdd4	stp	x29, x30, [sp, #0x60]
000000000001bdd8	add	x29, sp, #0x60
000000000001bddc	mov	x20, x1
000000000001bde0	mov	x19, x0
000000000001bde4	movi.16b	v0, #0x0
000000000001bde8	stp	q0, q0, [sp]
000000000001bdec	str	xzr, [sp, #0x20]
000000000001bdf0	mov	x24, sp
000000000001bdf4	adrp	x0, 77 ; 0x68000
000000000001bdf8	add	x0, x0, #0xa00
000000000001bdfc	ldr	x8, [x0]
000000000001be00	blr	x8
000000000001be04	ldr	x22, [x0]
000000000001be08	ldr	x8, [x22, #0x110]
000000000001be0c	str	x24, [x22, #0x110]
000000000001be10	mov	x9, #0x500000000
000000000001be14	stp	x8, x9, [sp, #0x8]
000000000001be18	adr	x23, #0x66a2b
000000000001be1c	nop
000000000001be20	ldarb	w8, [x23]
000000000001be24	tbz	w8, #0x0, 0x1be2c
000000000001be28	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001be2c	cbz	x20, 0x1c014
000000000001be30	ldr	x8, [x20]
000000000001be34	and	x8, x8, #0xfffffffffffffffc
000000000001be38	ldr	x8, [x8]
000000000001be3c	ldr	w9, [x8, #0x3c]
000000000001be40	ldr	x8, [x8, #0x40]
000000000001be44	tbnz	w9, #0x1f, 0x1be64
000000000001be48	mov	w10, #0x12
000000000001be4c	and	x9, x9, x10
000000000001be50	lsl	x9, x9, #4
000000000001be54	ldr	w8, [x8, x9]
000000000001be58	cmp	w8, #0x12
000000000001be5c	b.eq	0x1bf34
000000000001be60	b	0x1c014
000000000001be64	neg	w10, w9
000000000001be68	mvn	w9, w9
000000000001be6c	cmp	w10, #0x9
000000000001be70	b.ge	0x1bebc
000000000001be74	cmp	w10, #0x2
000000000001be78	b.lt	0x1bf04
000000000001be7c	mov	x10, #0x0
000000000001be80	mov	x11, x8
000000000001be84	ldr	w12, [x11]
000000000001be88	cmp	w12, #0x11
000000000001be8c	b.gt	0x1bf20
000000000001be90	add	x10, x10, #0x1
000000000001be94	add	x11, x11, #0x10
000000000001be98	cmp	x9, x10
000000000001be9c	b.ne	0x1be84
000000000001bea0	mov	x10, x9
000000000001bea4	sxtw	x9, w10
000000000001bea8	lsl	x9, x9, #4
000000000001beac	ldr	w8, [x8, x9]
000000000001beb0	cmp	w8, #0x12
000000000001beb4	b.eq	0x1bf34
000000000001beb8	b	0x1c014
000000000001bebc	mov	w10, #0x0
000000000001bec0	add	w11, w9, w10
000000000001bec4	cmp	w11, #0x0
000000000001bec8	cinc	w11, w11, lt
000000000001becc	asr	w11, w11, #1
000000000001bed0	sbfiz	x12, x11, #4, #32
000000000001bed4	ldr	w12, [x8, x12]
000000000001bed8	cmp	w12, #0x12
000000000001bedc	csinc	w10, w10, w11, ge
000000000001bee0	csel	w9, w9, w11, lt
000000000001bee4	cmp	w10, w9
000000000001bee8	b.lt	0x1bec0
000000000001beec	sxtw	x9, w10
000000000001bef0	lsl	x9, x9, #4
000000000001bef4	ldr	w8, [x8, x9]
000000000001bef8	cmp	w8, #0x12
000000000001befc	b.eq	0x1bf34
000000000001bf00	b	0x1c014
000000000001bf04	mov	w10, #0x0
000000000001bf08	sxtw	x9, w10
000000000001bf0c	lsl	x9, x9, #4
000000000001bf10	ldr	w8, [x8, x9]
000000000001bf14	cmp	w8, #0x12
000000000001bf18	b.eq	0x1bf34
000000000001bf1c	b	0x1c014
000000000001bf20	sxtw	x9, w10
000000000001bf24	lsl	x9, x9, #4
000000000001bf28	ldr	w8, [x8, x9]
000000000001bf2c	cmp	w8, #0x12
000000000001bf30	b.ne	0x1c014
000000000001bf34	ldr	x8, [x20]
000000000001bf38	and	x8, x8, #0xfffffffffffffffc
000000000001bf3c	ldr	x8, [x8]
000000000001bf40	ldr	w9, [x8, #0x3c]
000000000001bf44	ldr	x8, [x8, #0x40]
000000000001bf48	tbnz	w9, #0x1f, 0x1bf70
000000000001bf4c	mov	w10, #0x12
000000000001bf50	and	x9, x9, x10
000000000001bf54	add	x8, x8, x9, lsl #4
000000000001bf58	ldr	x8, [x8, #0x8]
000000000001bf5c	ldr	x8, [x8, #0x18]
000000000001bf60	mov	x0, x20
000000000001bf64	blr	x8
000000000001bf68	tbnz	w0, #0x0, 0x1c00c
000000000001bf6c	b	0x1c014
000000000001bf70	neg	w10, w9
000000000001bf74	mvn	w9, w9
000000000001bf78	cmp	w10, #0x9
000000000001bf7c	b.ge	0x1bfb4
000000000001bf80	cmp	w10, #0x2
000000000001bf84	b.lt	0x1bfe8
000000000001bf88	mov	x10, #0x0
000000000001bf8c	mov	x11, x8
000000000001bf90	ldr	w12, [x11]
000000000001bf94	cmp	w12, #0x11
000000000001bf98	b.gt	0x1bff0
000000000001bf9c	add	x10, x10, #0x1
000000000001bfa0	add	x11, x11, #0x10
000000000001bfa4	cmp	x9, x10
000000000001bfa8	b.ne	0x1bf90
000000000001bfac	mov	x10, x9
000000000001bfb0	b	0x1bff0
000000000001bfb4	mov	w10, #0x0
000000000001bfb8	add	w11, w9, w10
000000000001bfbc	cmp	w11, #0x0
000000000001bfc0	cinc	w11, w11, lt
000000000001bfc4	asr	w11, w11, #1
000000000001bfc8	sbfiz	x12, x11, #4, #32
000000000001bfcc	ldr	w12, [x8, x12]
000000000001bfd0	cmp	w12, #0x12
000000000001bfd4	csinc	w10, w10, w11, ge
000000000001bfd8	csel	w9, w9, w11, lt
000000000001bfdc	cmp	w10, w9
000000000001bfe0	b.lt	0x1bfb8
000000000001bfe4	b	0x1bff0
000000000001bfe8	mov	w10, #0x0
000000000001bfec	b	0x1bff0
000000000001bff0	sxtw	x9, w10
000000000001bff4	add	x8, x8, x9, lsl #4
000000000001bff8	ldr	x8, [x8, #0x8]
000000000001bffc	ldr	x8, [x8, #0x18]
000000000001c000	mov	x0, x20
000000000001c004	blr	x8
000000000001c008	tbz	w0, #0x0, 0x1c014
000000000001c00c	mov	w0, #0x1
000000000001c010	b	0x1c2b0
000000000001c014	add	x21, x24, #0x20
000000000001c018	add	x1, x24, #0x18
000000000001c01c	ldr	x8, [x20]
000000000001c020	and	x8, x8, #0xfffffffffffffffc
000000000001c024	ldr	x8, [x8]
000000000001c028	ldr	w9, [x8, #0x3c]
000000000001c02c	ldr	x8, [x8, #0x40]
000000000001c030	tbnz	w9, #0x1f, 0x1c040
000000000001c034	mov	w10, #0x31
000000000001c038	and	x9, x9, x10
000000000001c03c	b	0x1c0c4
000000000001c040	neg	w10, w9
000000000001c044	mvn	w9, w9
000000000001c048	cmp	w10, #0x9
000000000001c04c	b.ge	0x1c084
000000000001c050	cmp	w10, #0x2
000000000001c054	b.lt	0x1c0b8
000000000001c058	mov	x10, #0x0
000000000001c05c	mov	x11, x8
000000000001c060	ldr	w12, [x11]
000000000001c064	cmp	w12, #0x30
000000000001c068	b.gt	0x1c0c0
000000000001c06c	add	x10, x10, #0x1
000000000001c070	add	x11, x11, #0x10
000000000001c074	cmp	x9, x10
000000000001c078	b.ne	0x1c060
000000000001c07c	mov	x10, x9
000000000001c080	b	0x1c0c0
000000000001c084	mov	w10, #0x0
000000000001c088	add	w11, w9, w10
000000000001c08c	cmp	w11, #0x0
000000000001c090	cinc	w11, w11, lt
000000000001c094	asr	w11, w11, #1
000000000001c098	sbfiz	x12, x11, #4, #32
000000000001c09c	ldr	w12, [x8, x12]
000000000001c0a0	cmp	w12, #0x31
000000000001c0a4	csinc	w10, w10, w11, ge
000000000001c0a8	csel	w9, w9, w11, lt
000000000001c0ac	cmp	w10, w9
000000000001c0b0	b.lt	0x1c088
000000000001c0b4	b	0x1c0c0
000000000001c0b8	mov	w10, #0x0
000000000001c0bc	b	0x1c0c0
000000000001c0c0	sxtw	x9, w10
000000000001c0c4	add	x8, x8, x9, lsl #4
000000000001c0c8	ldr	x8, [x8, #0x8]
000000000001c0cc	ldr	x8, [x8]
000000000001c0d0	mov	x0, x20
000000000001c0d4	blr	x8
000000000001c0d8	mov	x20, x0
000000000001c0dc	mov	w24, #0xa0
000000000001c0e0	b	0x1c138
000000000001c0e4	ldr	x8, [x20]
000000000001c0e8	and	x8, x8, #0xfffffffffffffffc
000000000001c0ec	ldr	x8, [x8]
000000000001c0f0	ldr	w9, [x8, #0x3c]
000000000001c0f4	ldr	x8, [x8, #0x40]
000000000001c0f8	tbnz	w9, #0x1f, 0x1c1b4
000000000001c0fc	and	x9, x9, x24
000000000001c100	add	x8, x8, x9, lsl #4
000000000001c104	ldr	x8, [x8, #0x8]
000000000001c108	ldr	x8, [x8, #0x8]
000000000001c10c	mov	x0, x20
000000000001c110	mov	x1, x21
000000000001c114	blr	x8
000000000001c118	mov	x1, x0
000000000001c11c	ldr	x8, [x19]
000000000001c120	and	x8, x8, #0xfffffffffffffffc
000000000001c124	ldr	x8, [x8]
000000000001c128	ldr	x8, [x8, #0x90]
000000000001c12c	mov	x0, x19
000000000001c130	blr	x8
000000000001c134	tbz	w0, #0x0, 0x1c2ac
000000000001c138	ldr	x8, [x20]
000000000001c13c	and	x8, x8, #0xfffffffffffffffc
000000000001c140	ldr	x8, [x8]
000000000001c144	ldr	w9, [x8, #0x3c]
000000000001c148	ldr	x8, [x8, #0x40]
000000000001c14c	tbnz	w9, #0x1f, 0x1c170
000000000001c150	and	x9, x9, x24
000000000001c154	add	x8, x8, x9, lsl #4
000000000001c158	ldr	x8, [x8, #0x8]
000000000001c15c	ldr	x8, [x8]
000000000001c160	mov	x0, x20
000000000001c164	blr	x8
000000000001c168	tbnz	w0, #0x0, 0x1c294
000000000001c16c	b	0x1c00c
000000000001c170	neg	w10, w9
000000000001c174	mvn	w9, w9
000000000001c178	cmp	w10, #0x9
000000000001c17c	b.ge	0x1c1fc
000000000001c180	cmp	w10, #0x2
000000000001c184	b.lt	0x1c264
000000000001c188	mov	x10, #0x0
000000000001c18c	mov	x11, x8
000000000001c190	ldr	w12, [x11]
000000000001c194	cmp	w12, #0x9f
000000000001c198	b.gt	0x1c278
000000000001c19c	add	x10, x10, #0x1
000000000001c1a0	add	x11, x11, #0x10
000000000001c1a4	cmp	x9, x10
000000000001c1a8	b.ne	0x1c190
000000000001c1ac	mov	x10, x9
000000000001c1b0	b	0x1c278
000000000001c1b4	neg	w10, w9
000000000001c1b8	mvn	w9, w9
000000000001c1bc	cmp	w10, #0x9
000000000001c1c0	b.ge	0x1c230
000000000001c1c4	cmp	w10, #0x2
000000000001c1c8	b.lt	0x1c26c
000000000001c1cc	mov	x10, #0x0
000000000001c1d0	mov	x11, x8
000000000001c1d4	ldr	w12, [x11]
000000000001c1d8	cmp	w12, #0x9f
000000000001c1dc	b.gt	0x1c2a4
000000000001c1e0	add	x10, x10, #0x1
000000000001c1e4	add	x11, x11, #0x10
000000000001c1e8	cmp	x9, x10
000000000001c1ec	b.ne	0x1c1d4
000000000001c1f0	mov	x10, x9
000000000001c1f4	sxtw	x9, w10
000000000001c1f8	b	0x1c100
000000000001c1fc	mov	w10, #0x0
000000000001c200	add	w11, w9, w10
000000000001c204	cmp	w11, #0x0
000000000001c208	cinc	w11, w11, lt
000000000001c20c	asr	w11, w11, #1
000000000001c210	sbfiz	x12, x11, #4, #32
000000000001c214	ldr	w12, [x8, x12]
000000000001c218	cmp	w12, #0xa0
000000000001c21c	csinc	w10, w10, w11, ge
000000000001c220	csel	w9, w9, w11, lt
000000000001c224	cmp	w10, w9
000000000001c228	b.lt	0x1c200
000000000001c22c	b	0x1c278
000000000001c230	mov	w10, #0x0
000000000001c234	add	w11, w9, w10
000000000001c238	cmp	w11, #0x0
000000000001c23c	cinc	w11, w11, lt
000000000001c240	asr	w11, w11, #1
000000000001c244	sbfiz	x12, x11, #4, #32
000000000001c248	ldr	w12, [x8, x12]
000000000001c24c	cmp	w12, #0xa0
000000000001c250	csinc	w10, w10, w11, ge
000000000001c254	csel	w9, w9, w11, lt
000000000001c258	cmp	w10, w9
000000000001c25c	b.lt	0x1c234
000000000001c260	b	0x1c2a4
000000000001c264	mov	w10, #0x0
000000000001c268	b	0x1c278
000000000001c26c	mov	w10, #0x0
000000000001c270	sxtw	x9, w10
000000000001c274	b	0x1c100
000000000001c278	sxtw	x9, w10
000000000001c27c	add	x8, x8, x9, lsl #4
000000000001c280	ldr	x8, [x8, #0x8]
000000000001c284	ldr	x8, [x8]
000000000001c288	mov	x0, x20
000000000001c28c	blr	x8
000000000001c290	tbz	w0, #0x0, 0x1c00c
000000000001c294	ldarb	w8, [x23]
000000000001c298	tbz	w8, #0x0, 0x1c0e4
000000000001c29c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001c2a0	b	0x1c0e4
000000000001c2a4	sxtw	x9, w10
000000000001c2a8	b	0x1c100
000000000001c2ac	mov	w0, #0x0
000000000001c2b0	ldr	x8, [sp, #0x8]
000000000001c2b4	str	x8, [x22, #0x110]
000000000001c2b8	ldp	x29, x30, [sp, #0x60]
000000000001c2bc	ldp	x20, x19, [sp, #0x50]
000000000001c2c0	ldp	x22, x21, [sp, #0x40]
000000000001c2c4	ldp	x24, x23, [sp, #0x30]
000000000001c2c8	add	sp, sp, #0x70
000000000001c2cc	ret
_kfun:kotlin.collections.AbstractCollection#isEmpty(){}kotlin.Boolean:
000000000001c2d0	stp	x20, x19, [sp, #-0x20]!
000000000001c2d4	stp	x29, x30, [sp, #0x10]
000000000001c2d8	add	x29, sp, #0x10
000000000001c2dc	mov	x19, x0
000000000001c2e0	adr	x8, #0x66563
000000000001c2e4	nop
000000000001c2e8	ldarb	w8, [x8]
000000000001c2ec	tbz	w8, #0x0, 0x1c2f4
000000000001c2f0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001c2f4	ldr	x8, [x19]
000000000001c2f8	and	x8, x8, #0xfffffffffffffffc
000000000001c2fc	ldr	x8, [x8]
000000000001c300	ldr	x8, [x8, #0x88]
000000000001c304	mov	x0, x19
000000000001c308	blr	x8
000000000001c30c	cmp	w0, #0x0
000000000001c310	cset	w0, eq
000000000001c314	ldp	x29, x30, [sp, #0x10]
000000000001c318	ldp	x20, x19, [sp], #0x20
000000000001c31c	ret
_kfun:kotlin.collections.AbstractCollection#toString(){}kotlin.String:
000000000001c320	sub	sp, sp, #0x50
000000000001c324	stp	x22, x21, [sp, #0x20]
000000000001c328	stp	x20, x19, [sp, #0x30]
000000000001c32c	stp	x29, x30, [sp, #0x40]
000000000001c330	add	x29, sp, #0x40
000000000001c334	mov	x19, x1
000000000001c338	mov	x20, x0
000000000001c33c	movi.16b	v0, #0x0
000000000001c340	stp	q0, q0, [sp]
000000000001c344	adrp	x0, 76 ; 0x68000
000000000001c348	add	x0, x0, #0xa00
000000000001c34c	ldr	x8, [x0]
000000000001c350	blr	x8
000000000001c354	ldr	x21, [x0]
000000000001c358	ldr	x8, [x21, #0x110]
000000000001c35c	mov	x9, sp
000000000001c360	str	x9, [x21, #0x110]
000000000001c364	mov	x9, #0x400000000
000000000001c368	stp	x8, x9, [sp, #0x8]
000000000001c36c	adr	x8, #0x664d7
000000000001c370	nop
000000000001c374	ldarb	w8, [x8]
000000000001c378	tbz	w8, #0x0, 0x1c380
000000000001c37c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001c380	ldr	x8, [x21, #0x118]
000000000001c384	add	x0, x8, #0x70
000000000001c388	mov	w1, #0x18
000000000001c38c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001c390	adr	x8, #0x3c100
000000000001c394	nop
000000000001c398	mov	x3, x0
000000000001c39c	str	x8, [x3, #0x10]!
000000000001c3a0	stur	xzr, [x3, #-0x8]
000000000001c3a4	str	x3, [sp, #0x18]
000000000001c3a8	str	x20, [x3, #0x8]
000000000001c3ac	adr	x1, #0x44d34
000000000001c3b0	nop
000000000001c3b4	adr	x2, #0x44d4c
000000000001c3b8	nop
000000000001c3bc	mov	x0, x20
000000000001c3c0	mov	x4, x19
000000000001c3c4	bl	"_kfun:kotlin.collections#joinToString$default__at__kotlin.collections.Iterable<0:0>(kotlin.CharSequence?;kotlin.CharSequence?;kotlin.CharSequence?;kotlin.Int;kotlin.CharSequence?;kotlin.Function1<0:0,kotlin.CharSequence>?;kotlin.Int){0ยง<kotlin.Any?>}kotlin.String"
000000000001c3c8	str	x0, [x19]
000000000001c3cc	ldr	x8, [sp, #0x8]
000000000001c3d0	str	x8, [x21, #0x110]
000000000001c3d4	ldp	x29, x30, [sp, #0x40]
000000000001c3d8	ldp	x20, x19, [sp, #0x30]
000000000001c3dc	ldp	x22, x21, [sp, #0x20]
000000000001c3e0	add	sp, sp, #0x50
000000000001c3e4	ret
_kfun:kotlin.collections.AbstractCollection#toArray(){}kotlin.Array<kotlin.Any?>:
000000000001c3e8	stp	x20, x19, [sp, #-0x20]!
000000000001c3ec	stp	x29, x30, [sp, #0x10]
000000000001c3f0	add	x29, sp, #0x10
000000000001c3f4	mov	x19, x1
000000000001c3f8	mov	x20, x0
000000000001c3fc	adr	x8, #0x66447
000000000001c400	nop
000000000001c404	ldarb	w8, [x8]
000000000001c408	tbz	w8, #0x0, 0x1c410
000000000001c40c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001c410	mov	x0, x20
000000000001c414	mov	x1, x19
000000000001c418	bl	"_kfun:kotlin.collections#copyToArrayImpl(kotlin.collections.Collection<*>){}kotlin.Array<kotlin.Any?>"
000000000001c41c	str	x0, [x19]
000000000001c420	ldp	x29, x30, [sp, #0x10]
000000000001c424	ldp	x20, x19, [sp], #0x20
000000000001c428	ret
_kfun:kotlin.collections.AbstractCollection#toArray(kotlin.Array<0:0>){0ยง<kotlin.Any?>}kotlin.Array<0:0>:
000000000001c42c	sub	sp, sp, #0x90
000000000001c430	stp	x28, x27, [sp, #0x30]
000000000001c434	stp	x26, x25, [sp, #0x40]
000000000001c438	stp	x24, x23, [sp, #0x50]
000000000001c43c	stp	x22, x21, [sp, #0x60]
000000000001c440	stp	x20, x19, [sp, #0x70]
000000000001c444	stp	x29, x30, [sp, #0x80]
000000000001c448	add	x29, sp, #0x80
000000000001c44c	mov	x19, x2
000000000001c450	mov	x20, x1
000000000001c454	mov	x23, x0
000000000001c458	adr	x26, #0x663eb
000000000001c45c	nop
000000000001c460	ldarb	w8, [x26]
000000000001c464	tbz	w8, #0x0, 0x1c46c
000000000001c468	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001c46c	movi.16b	v0, #0x0
000000000001c470	stp	q0, q0, [sp]
000000000001c474	str	xzr, [sp, #0x20]
000000000001c478	mov	x24, sp
000000000001c47c	adrp	x21, 76 ; 0x68000
000000000001c480	add	x21, x21, #0xa00
000000000001c484	ldr	x25, [x21]
000000000001c488	mov	x0, x21
000000000001c48c	blr	x25
000000000001c490	ldr	x8, [x0]
000000000001c494	ldr	x9, [x8, #0x110]
000000000001c498	str	x24, [x8, #0x110]
000000000001c49c	mov	x8, #0x500000000
000000000001c4a0	stp	x9, x8, [sp, #0x8]
000000000001c4a4	ldr	w22, [x20, #0x8]
000000000001c4a8	ldr	x8, [x23]
000000000001c4ac	and	x8, x8, #0xfffffffffffffffc
000000000001c4b0	ldr	x8, [x8]
000000000001c4b4	ldr	w9, [x8, #0x3c]
000000000001c4b8	ldr	x8, [x8, #0x40]
000000000001c4bc	tbnz	w9, #0x1f, 0x1c4cc
000000000001c4c0	mov	w10, #0x12
000000000001c4c4	and	x9, x9, x10
000000000001c4c8	b	0x1c550
000000000001c4cc	neg	w10, w9
000000000001c4d0	mvn	w9, w9
000000000001c4d4	cmp	w10, #0x9
000000000001c4d8	b.ge	0x1c510
000000000001c4dc	cmp	w10, #0x2
000000000001c4e0	b.lt	0x1c544
000000000001c4e4	mov	x10, #0x0
000000000001c4e8	mov	x11, x8
000000000001c4ec	ldr	w12, [x11]
000000000001c4f0	cmp	w12, #0x11
000000000001c4f4	b.gt	0x1c54c
000000000001c4f8	add	x10, x10, #0x1
000000000001c4fc	add	x11, x11, #0x10
000000000001c500	cmp	x9, x10
000000000001c504	b.ne	0x1c4ec
000000000001c508	mov	x10, x9
000000000001c50c	b	0x1c54c
000000000001c510	mov	w10, #0x0
000000000001c514	add	w11, w9, w10
000000000001c518	cmp	w11, #0x0
000000000001c51c	cinc	w11, w11, lt
000000000001c520	asr	w11, w11, #1
000000000001c524	sbfiz	x12, x11, #4, #32
000000000001c528	ldr	w12, [x8, x12]
000000000001c52c	cmp	w12, #0x12
000000000001c530	csinc	w10, w10, w11, ge
000000000001c534	csel	w9, w9, w11, lt
000000000001c538	cmp	w10, w9
000000000001c53c	b.lt	0x1c514
000000000001c540	b	0x1c54c
000000000001c544	mov	w10, #0x0
000000000001c548	b	0x1c54c
000000000001c54c	sxtw	x9, w10
000000000001c550	add	x8, x8, x9, lsl #4
000000000001c554	ldr	x8, [x8, #0x8]
000000000001c558	ldr	x8, [x8]
000000000001c55c	mov	x0, x23
000000000001c560	blr	x8
000000000001c564	cmp	w22, w0
000000000001c568	b.ge	0x1c598
000000000001c56c	mov	x0, x23
000000000001c570	mov	x1, x19
000000000001c574	bl	"_kfun:kotlin.collections#copyToArrayImpl(kotlin.collections.Collection<*>){}kotlin.Array<kotlin.Any?>"
000000000001c578	mov	x20, x0
000000000001c57c	ldr	x8, [x0]
000000000001c580	and	x8, x8, #0xfffffffffffffffc
000000000001c584	ldr	x8, [x8]
000000000001c588	ldr	w8, [x8, #0x5c]
000000000001c58c	cmp	w8, #0x49
000000000001c590	b.eq	0x1c878
000000000001c594	b	0x1c8bc
000000000001c598	add	x22, x24, #0x20
000000000001c59c	add	x1, x24, #0x18
000000000001c5a0	ldr	x8, [x23]
000000000001c5a4	and	x8, x8, #0xfffffffffffffffc
000000000001c5a8	ldr	x8, [x8]
000000000001c5ac	ldr	w9, [x8, #0x3c]
000000000001c5b0	ldr	x8, [x8, #0x40]
000000000001c5b4	tbnz	w9, #0x1f, 0x1c5c4
000000000001c5b8	mov	w10, #0x12
000000000001c5bc	and	x9, x9, x10
000000000001c5c0	b	0x1c648
000000000001c5c4	neg	w10, w9
000000000001c5c8	mvn	w9, w9
000000000001c5cc	cmp	w10, #0x9
000000000001c5d0	b.ge	0x1c608
000000000001c5d4	cmp	w10, #0x2
000000000001c5d8	b.lt	0x1c63c
000000000001c5dc	mov	x10, #0x0
000000000001c5e0	mov	x11, x8
000000000001c5e4	ldr	w12, [x11]
000000000001c5e8	cmp	w12, #0x11
000000000001c5ec	b.gt	0x1c644
000000000001c5f0	add	x10, x10, #0x1
000000000001c5f4	add	x11, x11, #0x10
000000000001c5f8	cmp	x9, x10
000000000001c5fc	b.ne	0x1c5e4
000000000001c600	mov	x10, x9
000000000001c604	b	0x1c644
000000000001c608	mov	w10, #0x0
000000000001c60c	add	w11, w9, w10
000000000001c610	cmp	w11, #0x0
000000000001c614	cinc	w11, w11, lt
000000000001c618	asr	w11, w11, #1
000000000001c61c	sbfiz	x12, x11, #4, #32
000000000001c620	ldr	w12, [x8, x12]
000000000001c624	cmp	w12, #0x12
000000000001c628	csinc	w10, w10, w11, ge
000000000001c62c	csel	w9, w9, w11, lt
000000000001c630	cmp	w10, w9
000000000001c634	b.lt	0x1c60c
000000000001c638	b	0x1c644
000000000001c63c	mov	w10, #0x0
000000000001c640	b	0x1c644
000000000001c644	sxtw	x9, w10
000000000001c648	add	x8, x8, x9, lsl #4
000000000001c64c	ldr	x8, [x8, #0x8]
000000000001c650	ldr	x8, [x8, #0x20]
000000000001c654	mov	x0, x23
000000000001c658	blr	x8
000000000001c65c	mov	x24, x0
000000000001c660	mov	w23, #0x0
000000000001c664	add	x27, x20, #0x10
000000000001c668	mov	w28, #0xa0
000000000001c66c	ldr	x8, [x24]
000000000001c670	and	x8, x8, #0xfffffffffffffffc
000000000001c674	ldr	x8, [x8]
000000000001c678	ldr	w9, [x8, #0x3c]
000000000001c67c	ldr	x8, [x8, #0x40]
000000000001c680	tbz	w9, #0x1f, 0x1c820
000000000001c684	b	0x1c780
000000000001c688	ldarb	w8, [x26]
000000000001c68c	tbz	w8, #0x0, 0x1c694
000000000001c690	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001c694	ldr	x8, [x24]
000000000001c698	and	x8, x8, #0xfffffffffffffffc
000000000001c69c	ldr	x8, [x8]
000000000001c6a0	ldr	w9, [x8, #0x3c]
000000000001c6a4	ldr	x8, [x8, #0x40]
000000000001c6a8	tbnz	w9, #0x1f, 0x1c6b4
000000000001c6ac	and	x9, x9, x28
000000000001c6b0	b	0x1c738
000000000001c6b4	neg	w10, w9
000000000001c6b8	mvn	w9, w9
000000000001c6bc	cmp	w10, #0x9
000000000001c6c0	b.ge	0x1c6f8
000000000001c6c4	cmp	w10, #0x2
000000000001c6c8	b.lt	0x1c72c
000000000001c6cc	mov	x10, #0x0
000000000001c6d0	mov	x11, x8
000000000001c6d4	ldr	w12, [x11]
000000000001c6d8	cmp	w12, #0x9f
000000000001c6dc	b.gt	0x1c734
000000000001c6e0	add	x10, x10, #0x1
000000000001c6e4	add	x11, x11, #0x10
000000000001c6e8	cmp	x9, x10
000000000001c6ec	b.ne	0x1c6d4
000000000001c6f0	mov	x10, x9
000000000001c6f4	b	0x1c734
000000000001c6f8	mov	w10, #0x0
000000000001c6fc	add	w11, w9, w10
000000000001c700	cmp	w11, #0x0
000000000001c704	cinc	w11, w11, lt
000000000001c708	asr	w11, w11, #1
000000000001c70c	sbfiz	x12, x11, #4, #32
000000000001c710	ldr	w12, [x8, x12]
000000000001c714	cmp	w12, #0xa0
000000000001c718	csinc	w10, w10, w11, ge
000000000001c71c	csel	w9, w9, w11, lt
000000000001c720	cmp	w10, w9
000000000001c724	b.lt	0x1c6fc
000000000001c728	b	0x1c734
000000000001c72c	mov	w10, #0x0
000000000001c730	b	0x1c734
000000000001c734	sxtw	x9, w10
000000000001c738	add	x8, x8, x9, lsl #4
000000000001c73c	ldr	x8, [x8, #0x8]
000000000001c740	ldr	x8, [x8, #0x8]
000000000001c744	mov	x0, x24
000000000001c748	mov	x1, x22
000000000001c74c	blr	x8
000000000001c750	ldr	w8, [x20, #0x8]
000000000001c754	cmp	w8, w23
000000000001c758	b.ls	0x1c8b8
000000000001c75c	ldr	xzr, [x20]
000000000001c760	str	x0, [x27, w23, sxtw #3]
000000000001c764	add	w23, w23, #0x1
000000000001c768	ldr	x8, [x24]
000000000001c76c	and	x8, x8, #0xfffffffffffffffc
000000000001c770	ldr	x8, [x8]
000000000001c774	ldr	w9, [x8, #0x3c]
000000000001c778	ldr	x8, [x8, #0x40]
000000000001c77c	tbz	w9, #0x1f, 0x1c820
000000000001c780	neg	w10, w9
000000000001c784	mvn	w9, w9
000000000001c788	cmp	w10, #0x9
000000000001c78c	b.ge	0x1c7c4
000000000001c790	cmp	w10, #0x2
000000000001c794	b.lt	0x1c7f8
000000000001c798	mov	x10, #0x0
000000000001c79c	mov	x11, x8
000000000001c7a0	ldr	w12, [x11]
000000000001c7a4	cmp	w12, #0x9f
000000000001c7a8	b.gt	0x1c800
000000000001c7ac	add	x10, x10, #0x1
000000000001c7b0	add	x11, x11, #0x10
000000000001c7b4	cmp	x9, x10
000000000001c7b8	b.ne	0x1c7a0
000000000001c7bc	mov	x10, x9
000000000001c7c0	b	0x1c800
000000000001c7c4	mov	w10, #0x0
000000000001c7c8	add	w11, w9, w10
000000000001c7cc	cmp	w11, #0x0
000000000001c7d0	cinc	w11, w11, lt
000000000001c7d4	asr	w11, w11, #1
000000000001c7d8	sbfiz	x12, x11, #4, #32
000000000001c7dc	ldr	w12, [x8, x12]
000000000001c7e0	cmp	w12, #0xa0
000000000001c7e4	csinc	w10, w10, w11, ge
000000000001c7e8	csel	w9, w9, w11, lt
000000000001c7ec	cmp	w10, w9
000000000001c7f0	b.lt	0x1c7c8
000000000001c7f4	b	0x1c800
000000000001c7f8	mov	w10, #0x0
000000000001c7fc	b	0x1c800
000000000001c800	sxtw	x9, w10
000000000001c804	add	x8, x8, x9, lsl #4
000000000001c808	ldr	x8, [x8, #0x8]
000000000001c80c	ldr	x8, [x8]
000000000001c810	mov	x0, x24
000000000001c814	blr	x8
000000000001c818	tbnz	w0, #0x0, 0x1c688
000000000001c81c	b	0x1c83c
000000000001c820	and	x9, x9, x28
000000000001c824	add	x8, x8, x9, lsl #4
000000000001c828	ldr	x8, [x8, #0x8]
000000000001c82c	ldr	x8, [x8]
000000000001c830	mov	x0, x24
000000000001c834	blr	x8
000000000001c838	tbnz	w0, #0x0, 0x1c688
000000000001c83c	ldr	w8, [x20, #0x8]
000000000001c840	cmp	w23, w8
000000000001c844	b.ge	0x1c878
000000000001c848	mov	x0, x20
000000000001c84c	mov	x1, x23
000000000001c850	mov	x2, x19
000000000001c854	bl	"_kfun:kotlin.collections#copyOfNulls__at__kotlin.Array<0:0>(kotlin.Int;kotlin.Int){0ยง<kotlin.Any?>}kotlin.Array<0:0?>"
000000000001c858	mov	x20, x0
000000000001c85c	str	x0, [x19]
000000000001c860	ldr	x8, [x0]
000000000001c864	and	x8, x8, #0xfffffffffffffffc
000000000001c868	ldr	x8, [x8]
000000000001c86c	ldr	w8, [x8, #0x5c]
000000000001c870	cmp	w8, #0x49
000000000001c874	b.ne	0x1c8bc
000000000001c878	str	x20, [x19]
000000000001c87c	mov	x0, x21
000000000001c880	blr	x25
000000000001c884	ldr	x8, [x0]
000000000001c888	ldr	x9, [sp, #0x8]
000000000001c88c	str	x9, [x8, #0x110]
000000000001c890	str	x20, [x19]
000000000001c894	mov	x0, x20
000000000001c898	ldp	x29, x30, [sp, #0x80]
000000000001c89c	ldp	x20, x19, [sp, #0x70]
000000000001c8a0	ldp	x22, x21, [sp, #0x60]
000000000001c8a4	ldp	x24, x23, [sp, #0x50]
000000000001c8a8	ldp	x26, x25, [sp, #0x40]
000000000001c8ac	ldp	x28, x27, [sp, #0x30]
000000000001c8b0	add	sp, sp, #0x90
000000000001c8b4	ret
000000000001c8b8	bl	_ThrowArrayIndexOutOfBoundsException
000000000001c8bc	adr	x1, #0x37d24
000000000001c8c0	nop
000000000001c8c4	mov	x0, x20
000000000001c8c8	bl	_ThrowClassCastException
_kfun:kotlin.collections.AbstractCollection.$toString$lambda$0$FUNCTION_REFERENCE$17.invoke#internal:
000000000001c8cc	stp	x22, x21, [sp, #-0x30]!
000000000001c8d0	stp	x20, x19, [sp, #0x10]
000000000001c8d4	stp	x29, x30, [sp, #0x20]
000000000001c8d8	add	x29, sp, #0x20
000000000001c8dc	mov	x19, x2
000000000001c8e0	mov	x20, x1
000000000001c8e4	mov	x21, x0
000000000001c8e8	adr	x8, #0x65f5b
000000000001c8ec	nop
000000000001c8f0	ldarb	w8, [x8]
000000000001c8f4	tbz	w8, #0x0, 0x1c8fc
000000000001c8f8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001c8fc	ldr	x8, [x21, #0x8]
000000000001c900	cmp	x8, x20
000000000001c904	b.eq	0x1c93c
000000000001c908	cbz	x20, 0x1c958
000000000001c90c	ldr	x8, [x20]
000000000001c910	and	x8, x8, #0xfffffffffffffffc
000000000001c914	ldr	x8, [x8]
000000000001c918	ldr	x8, [x8, #0x80]
000000000001c91c	mov	x0, x20
000000000001c920	mov	x1, x19
000000000001c924	blr	x8
000000000001c928	str	x0, [x19]
000000000001c92c	ldp	x29, x30, [sp, #0x20]
000000000001c930	ldp	x20, x19, [sp, #0x10]
000000000001c934	ldp	x22, x21, [sp], #0x30
000000000001c938	ret
000000000001c93c	adr	x0, #0x45324
000000000001c940	nop
000000000001c944	str	x0, [x19]
000000000001c948	ldp	x29, x30, [sp, #0x20]
000000000001c94c	ldp	x20, x19, [sp, #0x10]
000000000001c950	ldp	x22, x21, [sp], #0x30
000000000001c954	ret
000000000001c958	adr	x0, #0x44748
000000000001c95c	nop
000000000001c960	str	x0, [x19]
000000000001c964	ldp	x29, x30, [sp, #0x20]
000000000001c968	ldp	x20, x19, [sp, #0x10]
000000000001c96c	ldp	x22, x21, [sp], #0x30
000000000001c970	ret
_kfun:kotlin.collections.AbstractIterator#hasNext(){}kotlin.Boolean:
000000000001c974	sub	sp, sp, #0xe0
000000000001c978	stp	x28, x27, [sp, #0x80]
000000000001c97c	stp	x26, x25, [sp, #0x90]
000000000001c980	stp	x24, x23, [sp, #0xa0]
000000000001c984	stp	x22, x21, [sp, #0xb0]
000000000001c988	stp	x20, x19, [sp, #0xc0]
000000000001c98c	stp	x29, x30, [sp, #0xd0]
000000000001c990	add	x29, sp, #0xd0
000000000001c994	mov	x19, x0
000000000001c998	movi.16b	v0, #0x0
000000000001c99c	stp	q0, q0, [sp]
000000000001c9a0	stp	q0, q0, [sp, #0x20]
000000000001c9a4	adrp	x0, 76 ; 0x68000
000000000001c9a8	add	x0, x0, #0xa00
000000000001c9ac	ldr	x8, [x0]
000000000001c9b0	blr	x8
000000000001c9b4	ldr	x24, [x0]
000000000001c9b8	ldr	x8, [x24, #0x110]
000000000001c9bc	mov	x9, sp
000000000001c9c0	str	x9, [x24, #0x110]
000000000001c9c4	mov	x9, #0x800000000
000000000001c9c8	stp	x8, x9, [sp, #0x8]
000000000001c9cc	adr	x26, #0x65e77
000000000001c9d0	nop
000000000001c9d4	ldarb	w8, [x26]
000000000001c9d8	tbz	w8, #0x0, 0x1c9e0
000000000001c9dc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001c9e0	ldr	x20, [x19, #0x8]
000000000001c9e4	str	x20, [sp, #0x18]
000000000001c9e8	adr	x25, #0x65ed8
000000000001c9ec	nop
000000000001c9f0	ldar	x21, [x25]
000000000001c9f4	cmp	x21, #0x2
000000000001c9f8	b.hs	0x1cbc0
000000000001c9fc	ldp	x8, x9, [x24, #0x120]
000000000001ca00	cmp	x8, x9
000000000001ca04	b.eq	0x1ca24
000000000001ca08	mov	x10, x9
000000000001ca0c	ldr	x11, [x10, #-0x10]!
000000000001ca10	cmp	x11, x25
000000000001ca14	b.eq	0x1cadc
000000000001ca18	mov	x9, x10
000000000001ca1c	cmp	x10, x8
000000000001ca20	b.ne	0x1ca0c
000000000001ca24	add	x22, x24, #0x120
000000000001ca28	add	x0, x24, #0x138
000000000001ca2c	mov	w9, #0x1
000000000001ca30	ldaxr	w8, [x0]
000000000001ca34	stlxr	w10, w9, [x0]
000000000001ca38	cbnz	w10, 0x1ca30
000000000001ca3c	b	0x1ca4c
000000000001ca40	mov	w23, #0x1
000000000001ca44	stlxr	w9, x23, [x25]
000000000001ca48	cbz	w9, 0x1ca5c
000000000001ca4c	ldaxr	x21, [x25]
000000000001ca50	cbz	x21, 0x1ca40
000000000001ca54	mov	w23, #0x0
000000000001ca58	clrex
000000000001ca5c	cmp	x21, #0x1
000000000001ca60	b.eq	0x1ca4c
000000000001ca64	cbz	x24, 0x1ca8c
000000000001ca68	ldaxr	w9, [x0]
000000000001ca6c	stlxr	w10, w8, [x0]
000000000001ca70	cbnz	w10, 0x1ca68
000000000001ca74	cbnz	w8, 0x1ca8c
000000000001ca78	cmp	w9, #0x1
000000000001ca7c	b.ne	0x1ca8c
000000000001ca80	ldarb	w8, [x26]
000000000001ca84	tbz	w8, #0x0, 0x1ca8c
000000000001ca88	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000001ca8c	tbz	w23, #0x0, 0x1cad4
000000000001ca90	ldr	x8, [x24, #0x118]
000000000001ca94	add	x0, x8, #0x70
000000000001ca98	mov	w1, #0x20
000000000001ca9c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001caa0	mov	x21, x0
000000000001caa4	adr	x8, #0x3bb7c
000000000001caa8	nop
000000000001caac	str	x8, [x21, #0x10]!
000000000001cab0	stur	xzr, [x21, #-0x8]
000000000001cab4	str	x21, [sp, #0x20]
000000000001cab8	ldp	x9, x8, [x24, #0x128]
000000000001cabc	cmp	x9, x8
000000000001cac0	b.hs	0x1cae8
000000000001cac4	stp	x25, x21, [x9]
000000000001cac8	add	x8, x9, #0x10
000000000001cacc	str	x8, [x24, #0x128]
000000000001cad0	b	0x1cb70
000000000001cad4	str	x21, [sp, #0x20]
000000000001cad8	b	0x1cbc0
000000000001cadc	ldur	x21, [x9, #-0x8]
000000000001cae0	str	x21, [sp, #0x20]
000000000001cae4	b	0x1cbc0
000000000001cae8	ldr	x10, [x22]
000000000001caec	sub	x9, x9, x10
000000000001caf0	asr	x27, x9, #4
000000000001caf4	add	x9, x27, #0x1
000000000001caf8	lsr	x11, x9, #60
000000000001cafc	cbnz	x11, 0x1d0bc
000000000001cb00	sub	x8, x8, x10
000000000001cb04	asr	x10, x8, #3
000000000001cb08	cmp	x10, x9
000000000001cb0c	csel	x9, x9, x10, lo
000000000001cb10	mov	x10, #0x7ffffffffffffff
000000000001cb14	cmp	x10, x8, asr #4
000000000001cb18	mov	x8, #0xfffffffffffffff
000000000001cb1c	csel	x23, x9, x8, hi
000000000001cb20	mov	x0, x23
000000000001cb24	mov	w1, #0x10
000000000001cb28	bl	0x4db20 ; symbol stub for: _calloc
000000000001cb2c	add	x8, x0, x27, lsl #4
000000000001cb30	add	x27, x0, x23, lsl #4
000000000001cb34	stp	x25, x21, [x8]
000000000001cb38	add	x28, x8, #0x10
000000000001cb3c	ldp	x1, x9, [x24, #0x120]
000000000001cb40	sub	x2, x9, x1
000000000001cb44	sub	x23, x8, x2
000000000001cb48	cmp	x2, #0x1
000000000001cb4c	b.lt	0x1cb5c
000000000001cb50	mov	x0, x23
000000000001cb54	bl	0x4dbec ; symbol stub for: _memcpy
000000000001cb58	ldr	x1, [x22]
000000000001cb5c	stp	x23, x28, [x24, #0x120]
000000000001cb60	str	x27, [x24, #0x130]
000000000001cb64	cbz	x1, 0x1cb70
000000000001cb68	mov	x0, x1
000000000001cb6c	bl	0x4dba4 ; symbol stub for: _free
000000000001cb70	mov	x0, x21
000000000001cb74	bl	"_kfun:kotlin.collections.State.$OBJECT.<init>#internal"
000000000001cb78	mov	w0, #0x1
000000000001cb7c	mov	w1, #0x28
000000000001cb80	bl	0x4db20 ; symbol stub for: _calloc
000000000001cb84	mov	x8, x24
000000000001cb88	ldr	x9, [x8, #0x18]!
000000000001cb8c	sub	x10, x8, #0x8
000000000001cb90	stp	x25, x10, [x0, #0x10]
000000000001cb94	stp	x9, x8, [x0]
000000000001cb98	str	x0, [x9, #0x8]
000000000001cb9c	str	x0, [x8]
000000000001cba0	ldr	x9, [x8, #0x10]
000000000001cba4	add	x9, x9, #0x1
000000000001cba8	str	x9, [x8, #0x10]
000000000001cbac	str	x0, [x0, #0x20]
000000000001cbb0	stlr	x21, [x25]
000000000001cbb4	ldr	x9, [x8, #0x110]
000000000001cbb8	sub	x9, x9, #0x10
000000000001cbbc	str	x9, [x8, #0x110]
000000000001cbc0	ldr	x8, [x21, #0x8]
000000000001cbc4	ldr	w9, [x8, #0x8]
000000000001cbc8	cmp	w9, #0x1
000000000001cbcc	b.ls	0x1d078
000000000001cbd0	ldr	x1, [x8, #0x18]
000000000001cbd4	str	x1, [sp, #0x28]
000000000001cbd8	ldr	x8, [x20]
000000000001cbdc	and	x8, x8, #0xfffffffffffffffc
000000000001cbe0	ldr	x8, [x8]
000000000001cbe4	ldr	x8, [x8, #0x70]
000000000001cbe8	mov	x0, x20
000000000001cbec	blr	x8
000000000001cbf0	cbnz	w0, 0x1d07c
000000000001cbf4	ldr	x8, [x19, #0x8]
000000000001cbf8	str	x8, [sp, #0x38]
000000000001cbfc	ldr	w8, [x8, #0x10]
000000000001cc00	cbz	w8, 0x1cc14
000000000001cc04	cmp	w8, #0x2
000000000001cc08	b.ne	0x1cc1c
000000000001cc0c	mov	w0, #0x0
000000000001cc10	b	0x1d050
000000000001cc14	mov	w0, #0x1
000000000001cc18	b	0x1d050
000000000001cc1c	movi.16b	v0, #0x0
000000000001cc20	stp	q0, q0, [sp, #0x40]
000000000001cc24	stp	q0, q0, [sp, #0x60]
000000000001cc28	ldr	x8, [x24, #0x110]
000000000001cc2c	add	x9, sp, #0x40
000000000001cc30	str	x9, [x24, #0x110]
000000000001cc34	mov	x9, #0x800000000
000000000001cc38	stp	x8, x9, [sp, #0x48]
000000000001cc3c	ldar	x20, [x25]
000000000001cc40	cmp	x20, #0x2
000000000001cc44	b.hs	0x1ce0c
000000000001cc48	ldp	x8, x9, [x24, #0x120]
000000000001cc4c	cmp	x8, x9
000000000001cc50	b.eq	0x1cc70
000000000001cc54	mov	x10, x9
000000000001cc58	ldr	x11, [x10, #-0x10]!
000000000001cc5c	cmp	x11, x25
000000000001cc60	b.eq	0x1cd28
000000000001cc64	mov	x9, x10
000000000001cc68	cmp	x10, x8
000000000001cc6c	b.ne	0x1cc58
000000000001cc70	add	x21, x24, #0x120
000000000001cc74	add	x0, x24, #0x138
000000000001cc78	mov	w9, #0x1
000000000001cc7c	ldaxr	w8, [x0]
000000000001cc80	stlxr	w10, w9, [x0]
000000000001cc84	cbnz	w10, 0x1cc7c
000000000001cc88	b	0x1cc98
000000000001cc8c	mov	w22, #0x1
000000000001cc90	stlxr	w9, x22, [x25]
000000000001cc94	cbz	w9, 0x1cca8
000000000001cc98	ldaxr	x20, [x25]
000000000001cc9c	cbz	x20, 0x1cc8c
000000000001cca0	mov	w22, #0x0
000000000001cca4	clrex
000000000001cca8	cmp	x20, #0x1
000000000001ccac	b.eq	0x1cc98
000000000001ccb0	cbz	x24, 0x1ccd8
000000000001ccb4	ldaxr	w9, [x0]
000000000001ccb8	stlxr	w10, w8, [x0]
000000000001ccbc	cbnz	w10, 0x1ccb4
000000000001ccc0	cbnz	w8, 0x1ccd8
000000000001ccc4	cmp	w9, #0x1
000000000001ccc8	b.ne	0x1ccd8
000000000001cccc	ldarb	w8, [x26]
000000000001ccd0	tbz	w8, #0x0, 0x1ccd8
000000000001ccd4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000001ccd8	tbz	w22, #0x0, 0x1cd20
000000000001ccdc	ldr	x8, [x24, #0x118]
000000000001cce0	add	x0, x8, #0x70
000000000001cce4	mov	w1, #0x20
000000000001cce8	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001ccec	mov	x20, x0
000000000001ccf0	adr	x8, #0x3b930
000000000001ccf4	nop
000000000001ccf8	str	x8, [x20, #0x10]!
000000000001ccfc	stur	xzr, [x20, #-0x8]
000000000001cd00	str	x20, [sp, #0x58]
000000000001cd04	ldp	x9, x8, [x24, #0x128]
000000000001cd08	cmp	x9, x8
000000000001cd0c	b.hs	0x1cd34
000000000001cd10	stp	x25, x20, [x9]
000000000001cd14	add	x8, x9, #0x10
000000000001cd18	str	x8, [x24, #0x128]
000000000001cd1c	b	0x1cdbc
000000000001cd20	str	x20, [sp, #0x58]
000000000001cd24	b	0x1ce0c
000000000001cd28	ldur	x20, [x9, #-0x8]
000000000001cd2c	str	x20, [sp, #0x58]
000000000001cd30	b	0x1ce0c
000000000001cd34	ldr	x10, [x21]
000000000001cd38	sub	x9, x9, x10
000000000001cd3c	asr	x23, x9, #4
000000000001cd40	add	x9, x23, #0x1
000000000001cd44	lsr	x11, x9, #60
000000000001cd48	cbnz	x11, 0x1d0c4
000000000001cd4c	sub	x8, x8, x10
000000000001cd50	asr	x10, x8, #3
000000000001cd54	cmp	x10, x9
000000000001cd58	csel	x9, x9, x10, lo
000000000001cd5c	mov	x10, #0x7ffffffffffffff
000000000001cd60	cmp	x10, x8, asr #4
000000000001cd64	mov	x8, #0xfffffffffffffff
000000000001cd68	csel	x22, x9, x8, hi
000000000001cd6c	mov	x0, x22
000000000001cd70	mov	w1, #0x10
000000000001cd74	bl	0x4db20 ; symbol stub for: _calloc
000000000001cd78	add	x8, x0, x23, lsl #4
000000000001cd7c	add	x23, x0, x22, lsl #4
000000000001cd80	stp	x25, x20, [x8]
000000000001cd84	add	x27, x8, #0x10
000000000001cd88	ldp	x1, x9, [x24, #0x120]
000000000001cd8c	sub	x2, x9, x1
000000000001cd90	sub	x22, x8, x2
000000000001cd94	cmp	x2, #0x1
000000000001cd98	b.lt	0x1cda8
000000000001cd9c	mov	x0, x22
000000000001cda0	bl	0x4dbec ; symbol stub for: _memcpy
000000000001cda4	ldr	x1, [x21]
000000000001cda8	stp	x22, x27, [x24, #0x120]
000000000001cdac	str	x23, [x24, #0x130]
000000000001cdb0	cbz	x1, 0x1cdbc
000000000001cdb4	mov	x0, x1
000000000001cdb8	bl	0x4dba4 ; symbol stub for: _free
000000000001cdbc	mov	x0, x20
000000000001cdc0	bl	"_kfun:kotlin.collections.State.$OBJECT.<init>#internal"
000000000001cdc4	mov	w0, #0x1
000000000001cdc8	mov	w1, #0x28
000000000001cdcc	bl	0x4db20 ; symbol stub for: _calloc
000000000001cdd0	mov	x8, x24
000000000001cdd4	ldr	x9, [x8, #0x18]!
000000000001cdd8	sub	x10, x8, #0x8
000000000001cddc	stp	x25, x10, [x0, #0x10]
000000000001cde0	stp	x9, x8, [x0]
000000000001cde4	str	x0, [x9, #0x8]
000000000001cde8	str	x0, [x8]
000000000001cdec	ldr	x9, [x8, #0x10]
000000000001cdf0	add	x9, x9, #0x1
000000000001cdf4	str	x9, [x8, #0x10]
000000000001cdf8	str	x0, [x0, #0x20]
000000000001cdfc	stlr	x20, [x25]
000000000001ce00	ldr	x9, [x8, #0x110]
000000000001ce04	sub	x9, x9, #0x10
000000000001ce08	str	x9, [x8, #0x110]
000000000001ce0c	ldr	x8, [x20, #0x8]
000000000001ce10	ldr	w9, [x8, #0x8]
000000000001ce14	cmp	w9, #0x1
000000000001ce18	b.ls	0x1d078
000000000001ce1c	ldr	x8, [x8, #0x18]
000000000001ce20	str	x8, [sp, #0x60]
000000000001ce24	str	x8, [x19, #0x8]
000000000001ce28	ldr	x8, [x19]
000000000001ce2c	and	x8, x8, #0xfffffffffffffffc
000000000001ce30	ldr	x8, [x8]
000000000001ce34	ldr	x8, [x8, #0x88]
000000000001ce38	mov	x0, x19
000000000001ce3c	blr	x8
000000000001ce40	ldr	x19, [x19, #0x8]
000000000001ce44	str	x19, [sp, #0x68]
000000000001ce48	ldar	x20, [x25]
000000000001ce4c	cmp	x20, #0x2
000000000001ce50	b.hs	0x1d018
000000000001ce54	ldp	x8, x9, [x24, #0x120]
000000000001ce58	cmp	x8, x9
000000000001ce5c	b.eq	0x1ce7c
000000000001ce60	mov	x10, x9
000000000001ce64	ldr	x11, [x10, #-0x10]!
000000000001ce68	cmp	x11, x25
000000000001ce6c	b.eq	0x1cf34
000000000001ce70	mov	x9, x10
000000000001ce74	cmp	x10, x8
000000000001ce78	b.ne	0x1ce64
000000000001ce7c	add	x21, x24, #0x120
000000000001ce80	add	x0, x24, #0x138
000000000001ce84	mov	w9, #0x1
000000000001ce88	ldaxr	w8, [x0]
000000000001ce8c	stlxr	w10, w9, [x0]
000000000001ce90	cbnz	w10, 0x1ce88
000000000001ce94	b	0x1cea4
000000000001ce98	mov	w22, #0x1
000000000001ce9c	stlxr	w9, x22, [x25]
000000000001cea0	cbz	w9, 0x1ceb4
000000000001cea4	ldaxr	x20, [x25]
000000000001cea8	cbz	x20, 0x1ce98
000000000001ceac	mov	w22, #0x0
000000000001ceb0	clrex
000000000001ceb4	cmp	x20, #0x1
000000000001ceb8	b.eq	0x1cea4
000000000001cebc	cbz	x24, 0x1cee4
000000000001cec0	ldaxr	w9, [x0]
000000000001cec4	stlxr	w10, w8, [x0]
000000000001cec8	cbnz	w10, 0x1cec0
000000000001cecc	cbnz	w8, 0x1cee4
000000000001ced0	cmp	w9, #0x1
000000000001ced4	b.ne	0x1cee4
000000000001ced8	ldarb	w8, [x26]
000000000001cedc	tbz	w8, #0x0, 0x1cee4
000000000001cee0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000001cee4	tbz	w22, #0x0, 0x1cf2c
000000000001cee8	ldr	x8, [x24, #0x118]
000000000001ceec	add	x0, x8, #0x70
000000000001cef0	mov	w1, #0x20
000000000001cef4	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001cef8	mov	x20, x0
000000000001cefc	adr	x8, #0x3b724
000000000001cf00	nop
000000000001cf04	str	x8, [x20, #0x10]!
000000000001cf08	stur	xzr, [x20, #-0x8]
000000000001cf0c	str	x20, [sp, #0x70]
000000000001cf10	ldp	x9, x8, [x24, #0x128]
000000000001cf14	cmp	x9, x8
000000000001cf18	b.hs	0x1cf40
000000000001cf1c	stp	x25, x20, [x9]
000000000001cf20	add	x8, x9, #0x10
000000000001cf24	str	x8, [x24, #0x128]
000000000001cf28	b	0x1cfc8
000000000001cf2c	str	x20, [sp, #0x70]
000000000001cf30	b	0x1d018
000000000001cf34	ldur	x20, [x9, #-0x8]
000000000001cf38	str	x20, [sp, #0x70]
000000000001cf3c	b	0x1d018
000000000001cf40	ldr	x10, [x21]
000000000001cf44	sub	x9, x9, x10
000000000001cf48	asr	x23, x9, #4
000000000001cf4c	add	x9, x23, #0x1
000000000001cf50	lsr	x11, x9, #60
000000000001cf54	cbnz	x11, 0x1d0c4
000000000001cf58	sub	x8, x8, x10
000000000001cf5c	asr	x10, x8, #3
000000000001cf60	cmp	x10, x9
000000000001cf64	csel	x9, x9, x10, lo
000000000001cf68	mov	x10, #0x7ffffffffffffff
000000000001cf6c	cmp	x10, x8, asr #4
000000000001cf70	mov	x8, #0xfffffffffffffff
000000000001cf74	csel	x22, x9, x8, hi
000000000001cf78	mov	x0, x22
000000000001cf7c	mov	w1, #0x10
000000000001cf80	bl	0x4db20 ; symbol stub for: _calloc
000000000001cf84	add	x8, x0, x23, lsl #4
000000000001cf88	add	x23, x0, x22, lsl #4
000000000001cf8c	stp	x25, x20, [x8]
000000000001cf90	add	x26, x8, #0x10
000000000001cf94	ldp	x1, x9, [x24, #0x120]
000000000001cf98	sub	x2, x9, x1
000000000001cf9c	sub	x22, x8, x2
000000000001cfa0	cmp	x2, #0x1
000000000001cfa4	b.lt	0x1cfb4
000000000001cfa8	mov	x0, x22
000000000001cfac	bl	0x4dbec ; symbol stub for: _memcpy
000000000001cfb0	ldr	x1, [x21]
000000000001cfb4	stp	x22, x26, [x24, #0x120]
000000000001cfb8	str	x23, [x24, #0x130]
000000000001cfbc	cbz	x1, 0x1cfc8
000000000001cfc0	mov	x0, x1
000000000001cfc4	bl	0x4dba4 ; symbol stub for: _free
000000000001cfc8	mov	x0, x20
000000000001cfcc	bl	"_kfun:kotlin.collections.State.$OBJECT.<init>#internal"
000000000001cfd0	mov	w0, #0x1
000000000001cfd4	mov	w1, #0x28
000000000001cfd8	bl	0x4db20 ; symbol stub for: _calloc
000000000001cfdc	mov	x8, x24
000000000001cfe0	ldr	x9, [x8, #0x18]!
000000000001cfe4	sub	x10, x8, #0x8
000000000001cfe8	stp	x25, x10, [x0, #0x10]
000000000001cfec	stp	x9, x8, [x0]
000000000001cff0	str	x0, [x9, #0x8]
000000000001cff4	str	x0, [x8]
000000000001cff8	ldr	x9, [x8, #0x10]
000000000001cffc	add	x9, x9, #0x1
000000000001d000	str	x9, [x8, #0x10]
000000000001d004	str	x0, [x0, #0x20]
000000000001d008	stlr	x20, [x25]
000000000001d00c	ldr	x9, [x8, #0x110]
000000000001d010	sub	x9, x9, #0x10
000000000001d014	str	x9, [x8, #0x110]
000000000001d018	ldr	x8, [x20, #0x8]
000000000001d01c	ldr	w9, [x8, #0x8]
000000000001d020	cmp	w9, #0x3
000000000001d024	b.ls	0x1d078
000000000001d028	ldr	x1, [x8, #0x28]
000000000001d02c	str	x1, [sp, #0x78]
000000000001d030	ldr	x8, [x19]
000000000001d034	and	x8, x8, #0xfffffffffffffffc
000000000001d038	ldr	x8, [x8]
000000000001d03c	ldr	x8, [x8, #0x70]
000000000001d040	mov	x0, x19
000000000001d044	blr	x8
000000000001d048	ldr	x8, [sp, #0x48]
000000000001d04c	str	x8, [x24, #0x110]
000000000001d050	ldr	x8, [sp, #0x8]
000000000001d054	str	x8, [x24, #0x110]
000000000001d058	ldp	x29, x30, [sp, #0xd0]
000000000001d05c	ldp	x20, x19, [sp, #0xc0]
000000000001d060	ldp	x22, x21, [sp, #0xb0]
000000000001d064	ldp	x24, x23, [sp, #0xa0]
000000000001d068	ldp	x26, x25, [sp, #0x90]
000000000001d06c	ldp	x28, x27, [sp, #0x80]
000000000001d070	add	sp, sp, #0xe0
000000000001d074	ret
000000000001d078	bl	_ThrowArrayIndexOutOfBoundsException
000000000001d07c	ldr	x8, [x24, #0x118]
000000000001d080	add	x0, x8, #0x70
000000000001d084	mov	w1, #0x38
000000000001d088	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001d08c	mov	x19, x0
000000000001d090	adr	x8, #0x37bf0
000000000001d094	nop
000000000001d098	str	x8, [x19, #0x10]!
000000000001d09c	stur	xzr, [x19, #-0x8]
000000000001d0a0	str	x19, [sp, #0x30]
000000000001d0a4	adr	x1, #0x43fac
000000000001d0a8	nop
000000000001d0ac	mov	x0, x19
000000000001d0b0	bl	"_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}"
000000000001d0b4	mov	x0, x19
000000000001d0b8	bl	_ThrowException
000000000001d0bc	mov	x0, x22
000000000001d0c0	bl	0x4d8ec ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
000000000001d0c4	mov	x0, x21
000000000001d0c8	bl	0x4d8ec ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
000000000001d0cc	bl	0x4da78 ; symbol stub for: ___cxa_begin_catch
000000000001d0d0	str	xzr, [sp, #0x70]
000000000001d0d4	stlr	xzr, [x25]
000000000001d0d8	ldr	x8, [x24, #0x128]
000000000001d0dc	sub	x8, x8, #0x10
000000000001d0e0	str	x8, [x24, #0x128]
000000000001d0e4	bl	0x4daa8 ; symbol stub for: ___cxa_rethrow
000000000001d0e8	b	0x1d130
000000000001d0ec	b	0x1d134
000000000001d0f0	bl	0x4da78 ; symbol stub for: ___cxa_begin_catch
000000000001d0f4	str	xzr, [sp, #0x58]
000000000001d0f8	stlr	xzr, [x25]
000000000001d0fc	ldr	x8, [x24, #0x128]
000000000001d100	sub	x8, x8, #0x10
000000000001d104	str	x8, [x24, #0x128]
000000000001d108	bl	0x4daa8 ; symbol stub for: ___cxa_rethrow
000000000001d10c	b	0x1d130
000000000001d110	b	0x1d134
000000000001d114	bl	0x4da78 ; symbol stub for: ___cxa_begin_catch
000000000001d118	str	xzr, [sp, #0x20]
000000000001d11c	stlr	xzr, [x25]
000000000001d120	ldr	x8, [x24, #0x128]
000000000001d124	sub	x8, x8, #0x10
000000000001d128	str	x8, [x24, #0x128]
000000000001d12c	bl	0x4daa8 ; symbol stub for: ___cxa_rethrow
000000000001d130	brk	#0x1
000000000001d134	mov	x19, x0
000000000001d138	bl	0x4da84 ; symbol stub for: ___cxa_end_catch
000000000001d13c	mov	x0, x19
000000000001d140	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
_kfun:kotlin.collections.AbstractIterator#next(){}1:0:
000000000001d144	sub	sp, sp, #0x90
000000000001d148	stp	x28, x27, [sp, #0x30]
000000000001d14c	stp	x26, x25, [sp, #0x40]
000000000001d150	stp	x24, x23, [sp, #0x50]
000000000001d154	stp	x22, x21, [sp, #0x60]
000000000001d158	stp	x20, x19, [sp, #0x70]
000000000001d15c	stp	x29, x30, [sp, #0x80]
000000000001d160	add	x29, sp, #0x80
000000000001d164	mov	x19, x1
000000000001d168	mov	x20, x0
000000000001d16c	movi.16b	v0, #0x0
000000000001d170	stp	q0, q0, [sp]
000000000001d174	str	q0, [sp, #0x20]
000000000001d178	adrp	x0, 75 ; 0x68000
000000000001d17c	add	x0, x0, #0xa00
000000000001d180	ldr	x8, [x0]
000000000001d184	blr	x8
000000000001d188	ldr	x24, [x0]
000000000001d18c	ldr	x8, [x24, #0x110]
000000000001d190	mov	x9, sp
000000000001d194	str	x9, [x24, #0x110]
000000000001d198	mov	x9, #0x600000000
000000000001d19c	stp	x8, x9, [sp, #0x8]
000000000001d1a0	adr	x23, #0x656a3
000000000001d1a4	nop
000000000001d1a8	ldarb	w8, [x23]
000000000001d1ac	tbz	w8, #0x0, 0x1d1b4
000000000001d1b0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001d1b4	ldr	x8, [x20]
000000000001d1b8	and	x8, x8, #0xfffffffffffffffc
000000000001d1bc	ldr	x8, [x8]
000000000001d1c0	ldr	x8, [x8, #0x90]
000000000001d1c4	mov	x0, x20
000000000001d1c8	blr	x8
000000000001d1cc	tbz	w0, #0x0, 0x1d3f4
000000000001d1d0	adr	x25, #0x656f0
000000000001d1d4	nop
000000000001d1d8	ldar	x21, [x25]
000000000001d1dc	cmp	x21, #0x2
000000000001d1e0	b.hs	0x1d3a8
000000000001d1e4	ldp	x8, x9, [x24, #0x120]
000000000001d1e8	cmp	x8, x9
000000000001d1ec	b.eq	0x1d20c
000000000001d1f0	mov	x10, x9
000000000001d1f4	ldr	x11, [x10, #-0x10]!
000000000001d1f8	cmp	x11, x25
000000000001d1fc	b.eq	0x1d2c4
000000000001d200	mov	x9, x10
000000000001d204	cmp	x10, x8
000000000001d208	b.ne	0x1d1f4
000000000001d20c	add	x22, x24, #0x120
000000000001d210	add	x0, x24, #0x138
000000000001d214	mov	w9, #0x1
000000000001d218	ldaxr	w8, [x0]
000000000001d21c	stlxr	w10, w9, [x0]
000000000001d220	cbnz	w10, 0x1d218
000000000001d224	b	0x1d234
000000000001d228	mov	w26, #0x1
000000000001d22c	stlxr	w9, x26, [x25]
000000000001d230	cbz	w9, 0x1d244
000000000001d234	ldaxr	x21, [x25]
000000000001d238	cbz	x21, 0x1d228
000000000001d23c	mov	w26, #0x0
000000000001d240	clrex
000000000001d244	cmp	x21, #0x1
000000000001d248	b.eq	0x1d234
000000000001d24c	cbz	x24, 0x1d274
000000000001d250	ldaxr	w9, [x0]
000000000001d254	stlxr	w10, w8, [x0]
000000000001d258	cbnz	w10, 0x1d250
000000000001d25c	cbnz	w8, 0x1d274
000000000001d260	cmp	w9, #0x1
000000000001d264	b.ne	0x1d274
000000000001d268	ldarb	w8, [x23]
000000000001d26c	tbz	w8, #0x0, 0x1d274
000000000001d270	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000001d274	tbz	w26, #0x0, 0x1d2bc
000000000001d278	ldr	x8, [x24, #0x118]
000000000001d27c	add	x0, x8, #0x70
000000000001d280	mov	w1, #0x20
000000000001d284	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001d288	mov	x21, x0
000000000001d28c	adr	x8, #0x3b394
000000000001d290	nop
000000000001d294	str	x8, [x21, #0x10]!
000000000001d298	stur	xzr, [x21, #-0x8]
000000000001d29c	str	x21, [sp, #0x20]
000000000001d2a0	ldp	x9, x8, [x24, #0x128]
000000000001d2a4	cmp	x9, x8
000000000001d2a8	b.hs	0x1d2d0
000000000001d2ac	stp	x25, x21, [x9]
000000000001d2b0	add	x8, x9, #0x10
000000000001d2b4	str	x8, [x24, #0x128]
000000000001d2b8	b	0x1d358
000000000001d2bc	str	x21, [sp, #0x20]
000000000001d2c0	b	0x1d3a8
000000000001d2c4	ldur	x21, [x9, #-0x8]
000000000001d2c8	str	x21, [sp, #0x20]
000000000001d2cc	b	0x1d3a8
000000000001d2d0	ldr	x10, [x22]
000000000001d2d4	sub	x9, x9, x10
000000000001d2d8	asr	x26, x9, #4
000000000001d2dc	add	x9, x26, #0x1
000000000001d2e0	lsr	x11, x9, #60
000000000001d2e4	cbnz	x11, 0x1d434
000000000001d2e8	sub	x8, x8, x10
000000000001d2ec	asr	x10, x8, #3
000000000001d2f0	cmp	x10, x9
000000000001d2f4	csel	x9, x9, x10, lo
000000000001d2f8	mov	x10, #0x7ffffffffffffff
000000000001d2fc	cmp	x10, x8, asr #4
000000000001d300	mov	x8, #0xfffffffffffffff
000000000001d304	csel	x23, x9, x8, hi
000000000001d308	mov	x0, x23
000000000001d30c	mov	w1, #0x10
000000000001d310	bl	0x4db20 ; symbol stub for: _calloc
000000000001d314	add	x8, x0, x26, lsl #4
000000000001d318	add	x26, x0, x23, lsl #4
000000000001d31c	stp	x25, x21, [x8]
000000000001d320	add	x27, x8, #0x10
000000000001d324	ldp	x1, x9, [x24, #0x120]
000000000001d328	sub	x2, x9, x1
000000000001d32c	sub	x23, x8, x2
000000000001d330	cmp	x2, #0x1
000000000001d334	b.lt	0x1d344
000000000001d338	mov	x0, x23
000000000001d33c	bl	0x4dbec ; symbol stub for: _memcpy
000000000001d340	ldr	x1, [x22]
000000000001d344	stp	x23, x27, [x24, #0x120]
000000000001d348	str	x26, [x24, #0x130]
000000000001d34c	cbz	x1, 0x1d358
000000000001d350	mov	x0, x1
000000000001d354	bl	0x4dba4 ; symbol stub for: _free
000000000001d358	mov	x0, x21
000000000001d35c	bl	"_kfun:kotlin.collections.State.$OBJECT.<init>#internal"
000000000001d360	mov	w0, #0x1
000000000001d364	mov	w1, #0x28
000000000001d368	bl	0x4db20 ; symbol stub for: _calloc
000000000001d36c	mov	x8, x24
000000000001d370	ldr	x9, [x8, #0x18]!
000000000001d374	sub	x10, x8, #0x8
000000000001d378	stp	x25, x10, [x0, #0x10]
000000000001d37c	stp	x9, x8, [x0]
000000000001d380	str	x0, [x9, #0x8]
000000000001d384	str	x0, [x8]
000000000001d388	ldr	x9, [x8, #0x10]
000000000001d38c	add	x9, x9, #0x1
000000000001d390	str	x9, [x8, #0x10]
000000000001d394	str	x0, [x0, #0x20]
000000000001d398	stlr	x21, [x25]
000000000001d39c	ldr	x9, [x8, #0x110]
000000000001d3a0	sub	x9, x9, #0x10
000000000001d3a4	str	x9, [x8, #0x110]
000000000001d3a8	ldr	x8, [x21, #0x8]
000000000001d3ac	ldr	w9, [x8, #0x8]
000000000001d3b0	cmp	w9, #0x2
000000000001d3b4	b.ls	0x1d430
000000000001d3b8	ldr	x8, [x8, #0x20]
000000000001d3bc	str	x8, [sp, #0x28]
000000000001d3c0	str	x8, [x20, #0x8]
000000000001d3c4	ldr	x0, [x20, #0x10]
000000000001d3c8	str	x0, [x19]
000000000001d3cc	ldr	x8, [sp, #0x8]
000000000001d3d0	str	x8, [x24, #0x110]
000000000001d3d4	ldp	x29, x30, [sp, #0x80]
000000000001d3d8	ldp	x20, x19, [sp, #0x70]
000000000001d3dc	ldp	x22, x21, [sp, #0x60]
000000000001d3e0	ldp	x24, x23, [sp, #0x50]
000000000001d3e4	ldp	x26, x25, [sp, #0x40]
000000000001d3e8	ldp	x28, x27, [sp, #0x30]
000000000001d3ec	add	sp, sp, #0x90
000000000001d3f0	ret
000000000001d3f4	ldr	x8, [x24, #0x118]
000000000001d3f8	add	x0, x8, #0x70
000000000001d3fc	mov	w1, #0x38
000000000001d400	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001d404	mov	x19, x0
000000000001d408	adr	x8, #0x37698
000000000001d40c	nop
000000000001d410	str	x8, [x19, #0x10]!
000000000001d414	stur	xzr, [x19, #-0x8]
000000000001d418	str	x19, [sp, #0x18]
000000000001d41c	mov	x0, x19
000000000001d420	mov	x1, #0x0
000000000001d424	bl	"_kfun:kotlin.Throwable#<init>(kotlin.String?;kotlin.Throwable?){}"
000000000001d428	mov	x0, x19
000000000001d42c	bl	_ThrowException
000000000001d430	bl	_ThrowArrayIndexOutOfBoundsException
000000000001d434	mov	x0, x22
000000000001d438	bl	0x4d8ec ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
000000000001d43c	bl	0x4da78 ; symbol stub for: ___cxa_begin_catch
000000000001d440	str	xzr, [sp, #0x20]
000000000001d444	stlr	xzr, [x25]
000000000001d448	ldr	x8, [x24, #0x128]
000000000001d44c	sub	x8, x8, #0x10
000000000001d450	str	x8, [x24, #0x128]
000000000001d454	bl	0x4daa8 ; symbol stub for: ___cxa_rethrow
000000000001d458	brk	#0x1
000000000001d45c	mov	x19, x0
000000000001d460	bl	0x4da84 ; symbol stub for: ___cxa_end_catch
000000000001d464	mov	x0, x19
000000000001d468	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
_kfun:kotlin.collections.State.$OBJECT.<init>#internal:
000000000001d46c	sub	sp, sp, #0x1b0
000000000001d470	stp	x24, x23, [sp, #0x170]
000000000001d474	stp	x22, x21, [sp, #0x180]
000000000001d478	stp	x20, x19, [sp, #0x190]
000000000001d47c	stp	x29, x30, [sp, #0x1a0]
000000000001d480	add	x29, sp, #0x1a0
000000000001d484	mov	x19, x0
000000000001d488	movi.16b	v0, #0x0
000000000001d48c	stp	q0, q0, [sp, #0x150]
000000000001d490	stp	q0, q0, [sp, #0x130]
000000000001d494	stp	q0, q0, [sp, #0x110]
000000000001d498	stp	q0, q0, [sp, #0xf0]
000000000001d49c	stp	q0, q0, [sp, #0xd0]
000000000001d4a0	stp	q0, q0, [sp, #0xb0]
000000000001d4a4	stp	q0, q0, [sp, #0x90]
000000000001d4a8	stp	q0, q0, [sp, #0x70]
000000000001d4ac	stp	q0, q0, [sp, #0x50]
000000000001d4b0	stp	q0, q0, [sp, #0x30]
000000000001d4b4	stp	q0, q0, [sp, #0x10]
000000000001d4b8	str	q0, [sp]
000000000001d4bc	mov	x8, sp
000000000001d4c0	add	x20, x8, #0x168
000000000001d4c4	adrp	x0, 75 ; 0x68000
000000000001d4c8	add	x0, x0, #0xa00
000000000001d4cc	ldr	x9, [x0]
000000000001d4d0	blr	x9
000000000001d4d4	ldr	x21, [x0]
000000000001d4d8	ldr	x9, [x21, #0x110]
000000000001d4dc	str	x8, [x21, #0x110]
000000000001d4e0	mov	x8, #0x2e00000000
000000000001d4e4	stp	x9, x8, [sp, #0x8]
000000000001d4e8	adr	x8, #0x6535b
000000000001d4ec	nop
000000000001d4f0	ldarb	w8, [x8]
000000000001d4f4	tbz	w8, #0x0, 0x1d4fc
000000000001d4f8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001d4fc	ldr	x8, [x21, #0x118]
000000000001d500	add	x0, x8, #0x70
000000000001d504	mov	w1, #0x20
000000000001d508	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001d50c	adr	x22, #0x3b084
000000000001d510	nop
000000000001d514	str	x22, [x0, #0x10]!
000000000001d518	stur	xzr, [x0, #-0x8]
000000000001d51c	stp	x0, x0, [sp, #0x18]
000000000001d520	ldr	x8, [x21, #0x118]
000000000001d524	add	x0, x8, #0x70
000000000001d528	mov	w1, #0x20
000000000001d52c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001d530	str	x22, [x0, #0x10]!
000000000001d534	stur	xzr, [x0, #-0x8]
000000000001d538	stp	x0, x0, [sp, #0x28]
000000000001d53c	ldr	x8, [x21, #0x118]
000000000001d540	add	x0, x8, #0x70
000000000001d544	mov	w1, #0x20
000000000001d548	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001d54c	str	x22, [x0, #0x10]!
000000000001d550	stur	xzr, [x0, #-0x8]
000000000001d554	stp	x0, x0, [sp, #0x38]
000000000001d558	ldr	x8, [x21, #0x118]
000000000001d55c	add	x0, x8, #0x70
000000000001d560	mov	w1, #0x20
000000000001d564	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001d568	str	x22, [x0, #0x10]!
000000000001d56c	stur	xzr, [x0, #-0x8]
000000000001d570	stp	x0, x0, [sp, #0x48]
000000000001d574	ldr	x8, [x21, #0x118]
000000000001d578	add	x0, x8, #0x70
000000000001d57c	mov	w1, #0x38
000000000001d580	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001d584	adr	x22, #0x3705c
000000000001d588	nop
000000000001d58c	stp	x22, xzr, [x0, #0x10]!
000000000001d590	stur	xzr, [x0, #-0x8]
000000000001d594	mov	w23, #0x4
000000000001d598	str	w23, [x0, #0x8]
000000000001d59c	stp	x0, x0, [sp, #0x58]
000000000001d5a0	ldr	x8, [sp, #0x20]
000000000001d5a4	stp	x0, x8, [sp, #0x68]
000000000001d5a8	ldr	xzr, [x0]
000000000001d5ac	str	x8, [x0, #0x10]
000000000001d5b0	ldr	x8, [sp, #0x60]
000000000001d5b4	ldr	x9, [sp, #0x30]
000000000001d5b8	stp	x8, x9, [sp, #0x78]
000000000001d5bc	ldr	xzr, [x8]
000000000001d5c0	str	x9, [x8, #0x18]
000000000001d5c4	ldr	x8, [sp, #0x60]
000000000001d5c8	ldr	x9, [sp, #0x40]
000000000001d5cc	stp	x8, x9, [sp, #0x88]
000000000001d5d0	ldr	xzr, [x8]
000000000001d5d4	str	x9, [x8, #0x20]
000000000001d5d8	ldr	x8, [sp, #0x60]
000000000001d5dc	ldr	x9, [sp, #0x50]
000000000001d5e0	stp	x8, x9, [sp, #0x98]
000000000001d5e4	ldr	xzr, [x8]
000000000001d5e8	str	x9, [x8, #0x28]
000000000001d5ec	ldr	x8, [sp, #0x60]
000000000001d5f0	str	x8, [sp, #0xa8]
000000000001d5f4	str	x8, [x19, #0x8]
000000000001d5f8	ldr	x9, [x8, #0x28]
000000000001d5fc	str	x9, [sp, #0xb0]
000000000001d600	adr	x10, #0x446a0
000000000001d604	nop
000000000001d608	str	x10, [x9, #0x8]
000000000001d60c	str	wzr, [x9, #0x10]
000000000001d610	ldr	x9, [x8, #0x20]
000000000001d614	str	x9, [sp, #0xb8]
000000000001d618	adr	x10, #0x446a8
000000000001d61c	nop
000000000001d620	str	x10, [x9, #0x8]
000000000001d624	mov	w10, #0x1
000000000001d628	str	w10, [x9, #0x10]
000000000001d62c	ldr	x9, [x8, #0x10]
000000000001d630	str	x9, [sp, #0xc0]
000000000001d634	adr	x10, #0x446ac
000000000001d638	nop
000000000001d63c	str	x10, [x9, #0x8]
000000000001d640	mov	w10, #0x2
000000000001d644	str	w10, [x9, #0x10]
000000000001d648	ldr	x8, [x8, #0x18]
000000000001d64c	str	x8, [sp, #0xc8]
000000000001d650	adr	x9, #0x446b0
000000000001d654	nop
000000000001d658	str	x9, [x8, #0x8]
000000000001d65c	mov	w9, #0x3
000000000001d660	str	w9, [x8, #0x10]
000000000001d664	ldr	x8, [x19, #0x8]
000000000001d668	ldr	x9, [x8, #0x28]
000000000001d66c	stp	x9, x9, [sp, #0xd0]
000000000001d670	ldr	x9, [x8, #0x20]
000000000001d674	stp	x9, x9, [sp, #0xe0]
000000000001d678	ldr	x9, [x8, #0x10]
000000000001d67c	stp	x9, x9, [sp, #0xf0]
000000000001d680	ldr	x8, [x8, #0x18]
000000000001d684	stp	x8, x8, [sp, #0x100]
000000000001d688	ldr	x8, [x21, #0x118]
000000000001d68c	add	x0, x8, #0x70
000000000001d690	mov	w1, #0x38
000000000001d694	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001d698	stp	x22, xzr, [x0, #0x10]!
000000000001d69c	stur	xzr, [x0, #-0x8]
000000000001d6a0	str	w23, [x0, #0x8]
000000000001d6a4	stp	x0, x0, [sp, #0x110]
000000000001d6a8	ldr	x8, [sp, #0xd8]
000000000001d6ac	stp	x0, x8, [sp, #0x120]
000000000001d6b0	ldr	xzr, [x0]
000000000001d6b4	str	x8, [x0, #0x10]
000000000001d6b8	ldr	x8, [sp, #0x118]
000000000001d6bc	ldr	x9, [sp, #0xe8]
000000000001d6c0	stp	x8, x9, [sp, #0x130]
000000000001d6c4	ldr	xzr, [x8]
000000000001d6c8	str	x9, [x8, #0x18]
000000000001d6cc	ldr	x8, [sp, #0x118]
000000000001d6d0	ldr	x9, [sp, #0xf8]
000000000001d6d4	stp	x8, x9, [sp, #0x140]
000000000001d6d8	ldr	xzr, [x8]
000000000001d6dc	str	x9, [x8, #0x20]
000000000001d6e0	ldr	x8, [sp, #0x118]
000000000001d6e4	ldr	x9, [sp, #0x108]
000000000001d6e8	stp	x8, x9, [sp, #0x150]
000000000001d6ec	ldr	xzr, [x8]
000000000001d6f0	str	x9, [x8, #0x28]
000000000001d6f4	ldr	x0, [sp, #0x118]
000000000001d6f8	str	x0, [sp, #0x160]
000000000001d6fc	mov	x1, x20
000000000001d700	bl	"_kfun:kotlin.enums#enumEntries(kotlin.Array<0:0>){0ยง<kotlin.Enum<0:0>>}kotlin.enums.EnumEntries<0:0>"
000000000001d704	str	x0, [x19, #0x10]
000000000001d708	ldr	x8, [sp, #0x8]
000000000001d70c	str	x8, [x21, #0x110]
000000000001d710	ldp	x29, x30, [sp, #0x1a0]
000000000001d714	ldp	x20, x19, [sp, #0x190]
000000000001d718	ldp	x22, x21, [sp, #0x180]
000000000001d71c	ldp	x24, x23, [sp, #0x170]
000000000001d720	add	sp, sp, #0x1b0
000000000001d724	ret
_kfun:kotlin.collections.AbstractList#iterator(){}kotlin.collections.Iterator<1:0>:
000000000001d728	stp	x20, x19, [sp, #-0x20]!
000000000001d72c	stp	x29, x30, [sp, #0x10]
000000000001d730	add	x29, sp, #0x10
000000000001d734	mov	x19, x1
000000000001d738	mov	x20, x0
000000000001d73c	adr	x8, #0x65107
000000000001d740	nop
000000000001d744	ldarb	w8, [x8]
000000000001d748	tbz	w8, #0x0, 0x1d750
000000000001d74c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001d750	adrp	x0, 75 ; 0x68000
000000000001d754	add	x0, x0, #0xa00
000000000001d758	ldr	x8, [x0]
000000000001d75c	blr	x8
000000000001d760	ldr	x8, [x0]
000000000001d764	ldr	x8, [x8, #0x118]
000000000001d768	add	x0, x8, #0x70
000000000001d76c	mov	w1, #0x20
000000000001d770	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001d774	adr	x8, #0x3b09c
000000000001d778	nop
000000000001d77c	str	x8, [x0, #0x10]!
000000000001d780	stur	xzr, [x0, #-0x8]
000000000001d784	str	x0, [x19]
000000000001d788	str	x20, [x0, #0x8]
000000000001d78c	str	x0, [x19]
000000000001d790	ldp	x29, x30, [sp, #0x10]
000000000001d794	ldp	x20, x19, [sp], #0x20
000000000001d798	ret
_kfun:kotlin.collections.AbstractList#indexOf(1:0){}kotlin.Int:
000000000001d79c	sub	sp, sp, #0x80
000000000001d7a0	stp	x26, x25, [sp, #0x30]
000000000001d7a4	stp	x24, x23, [sp, #0x40]
000000000001d7a8	stp	x22, x21, [sp, #0x50]
000000000001d7ac	stp	x20, x19, [sp, #0x60]
000000000001d7b0	stp	x29, x30, [sp, #0x70]
000000000001d7b4	add	x29, sp, #0x70
000000000001d7b8	mov	x19, x1
000000000001d7bc	mov	x21, x0
000000000001d7c0	movi.16b	v0, #0x0
000000000001d7c4	stp	q0, q0, [sp]
000000000001d7c8	str	xzr, [sp, #0x20]
000000000001d7cc	mov	x20, sp
000000000001d7d0	add	x22, x20, #0x18
000000000001d7d4	adrp	x0, 75 ; 0x68000
000000000001d7d8	add	x0, x0, #0xa00
000000000001d7dc	ldr	x8, [x0]
000000000001d7e0	blr	x8
000000000001d7e4	ldr	x23, [x0]
000000000001d7e8	ldr	x8, [x23, #0x110]
000000000001d7ec	str	x20, [x23, #0x110]
000000000001d7f0	mov	x9, #0x500000000
000000000001d7f4	stp	x8, x9, [sp, #0x8]
000000000001d7f8	adr	x24, #0x6504b
000000000001d7fc	nop
000000000001d800	ldarb	w8, [x24]
000000000001d804	tbz	w8, #0x0, 0x1d80c
000000000001d808	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001d80c	add	x20, x20, #0x20
000000000001d810	ldr	x8, [x21]
000000000001d814	and	x8, x8, #0xfffffffffffffffc
000000000001d818	ldr	x8, [x8]
000000000001d81c	ldr	w9, [x8, #0x3c]
000000000001d820	ldr	x8, [x8, #0x40]
000000000001d824	tbnz	w9, #0x1f, 0x1d834
000000000001d828	mov	w10, #0x2b
000000000001d82c	and	x9, x9, x10
000000000001d830	b	0x1d8b8
000000000001d834	neg	w10, w9
000000000001d838	mvn	w9, w9
000000000001d83c	cmp	w10, #0x9
000000000001d840	b.ge	0x1d878
000000000001d844	cmp	w10, #0x2
000000000001d848	b.lt	0x1d8ac
000000000001d84c	mov	x10, #0x0
000000000001d850	mov	x11, x8
000000000001d854	ldr	w12, [x11]
000000000001d858	cmp	w12, #0x2a
000000000001d85c	b.gt	0x1d8b4
000000000001d860	add	x10, x10, #0x1
000000000001d864	add	x11, x11, #0x10
000000000001d868	cmp	x9, x10
000000000001d86c	b.ne	0x1d854
000000000001d870	mov	x10, x9
000000000001d874	b	0x1d8b4
000000000001d878	mov	w10, #0x0
000000000001d87c	add	w11, w9, w10
000000000001d880	cmp	w11, #0x0
000000000001d884	cinc	w11, w11, lt
000000000001d888	asr	w11, w11, #1
000000000001d88c	sbfiz	x12, x11, #4, #32
000000000001d890	ldr	w12, [x8, x12]
000000000001d894	cmp	w12, #0x2b
000000000001d898	csinc	w10, w10, w11, ge
000000000001d89c	csel	w9, w9, w11, lt
000000000001d8a0	cmp	w10, w9
000000000001d8a4	b.lt	0x1d87c
000000000001d8a8	b	0x1d8b4
000000000001d8ac	mov	w10, #0x0
000000000001d8b0	b	0x1d8b4
000000000001d8b4	sxtw	x9, w10
000000000001d8b8	add	x8, x8, x9, lsl #4
000000000001d8bc	ldr	x8, [x8, #0x8]
000000000001d8c0	ldr	x8, [x8, #0x30]
000000000001d8c4	mov	x0, x21
000000000001d8c8	mov	x1, x22
000000000001d8cc	blr	x8
000000000001d8d0	mov	x22, x0
000000000001d8d4	mov	w21, #0x0
000000000001d8d8	mov	w25, #0xa0
000000000001d8dc	b	0x1d8e8
000000000001d8e0	cbz	x19, 0x1daac
000000000001d8e4	add	w21, w21, #0x1
000000000001d8e8	ldr	x8, [x22]
000000000001d8ec	and	x8, x8, #0xfffffffffffffffc
000000000001d8f0	ldr	x8, [x8]
000000000001d8f4	ldr	w9, [x8, #0x3c]
000000000001d8f8	ldr	x8, [x8, #0x40]
000000000001d8fc	tbnz	w9, #0x1f, 0x1d920
000000000001d900	and	x9, x9, x25
000000000001d904	add	x8, x8, x9, lsl #4
000000000001d908	ldr	x8, [x8, #0x8]
000000000001d90c	ldr	x8, [x8]
000000000001d910	mov	x0, x22
000000000001d914	blr	x8
000000000001d918	tbnz	w0, #0x0, 0x1d9bc
000000000001d91c	b	0x1daa8
000000000001d920	neg	w10, w9
000000000001d924	mvn	w9, w9
000000000001d928	cmp	w10, #0x9
000000000001d92c	b.ge	0x1d964
000000000001d930	cmp	w10, #0x2
000000000001d934	b.lt	0x1d998
000000000001d938	mov	x10, #0x0
000000000001d93c	mov	x11, x8
000000000001d940	ldr	w12, [x11]
000000000001d944	cmp	w12, #0x9f
000000000001d948	b.gt	0x1d9a0
000000000001d94c	add	x10, x10, #0x1
000000000001d950	add	x11, x11, #0x10
000000000001d954	cmp	x9, x10
000000000001d958	b.ne	0x1d940
000000000001d95c	mov	x10, x9
000000000001d960	b	0x1d9a0
000000000001d964	mov	w10, #0x0
000000000001d968	add	w11, w9, w10
000000000001d96c	cmp	w11, #0x0
000000000001d970	cinc	w11, w11, lt
000000000001d974	asr	w11, w11, #1
000000000001d978	sbfiz	x12, x11, #4, #32
000000000001d97c	ldr	w12, [x8, x12]
000000000001d980	cmp	w12, #0xa0
000000000001d984	csinc	w10, w10, w11, ge
000000000001d988	csel	w9, w9, w11, lt
000000000001d98c	cmp	w10, w9
000000000001d990	b.lt	0x1d968
000000000001d994	b	0x1d9a0
000000000001d998	mov	w10, #0x0
000000000001d99c	b	0x1d9a0
000000000001d9a0	sxtw	x9, w10
000000000001d9a4	add	x8, x8, x9, lsl #4
000000000001d9a8	ldr	x8, [x8, #0x8]
000000000001d9ac	ldr	x8, [x8]
000000000001d9b0	mov	x0, x22
000000000001d9b4	blr	x8
000000000001d9b8	tbz	w0, #0x0, 0x1daa8
000000000001d9bc	ldarb	w8, [x24]
000000000001d9c0	tbz	w8, #0x0, 0x1d9c8
000000000001d9c4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001d9c8	ldr	x8, [x22]
000000000001d9cc	and	x8, x8, #0xfffffffffffffffc
000000000001d9d0	ldr	x8, [x8]
000000000001d9d4	ldr	w9, [x8, #0x3c]
000000000001d9d8	ldr	x8, [x8, #0x40]
000000000001d9dc	tbnz	w9, #0x1f, 0x1d9e8
000000000001d9e0	and	x9, x9, x25
000000000001d9e4	b	0x1da6c
000000000001d9e8	neg	w10, w9
000000000001d9ec	mvn	w9, w9
000000000001d9f0	cmp	w10, #0x9
000000000001d9f4	b.ge	0x1da2c
000000000001d9f8	cmp	w10, #0x2
000000000001d9fc	b.lt	0x1da60
000000000001da00	mov	x10, #0x0
000000000001da04	mov	x11, x8
000000000001da08	ldr	w12, [x11]
000000000001da0c	cmp	w12, #0x9f
000000000001da10	b.gt	0x1da68
000000000001da14	add	x10, x10, #0x1
000000000001da18	add	x11, x11, #0x10
000000000001da1c	cmp	x9, x10
000000000001da20	b.ne	0x1da08
000000000001da24	mov	x10, x9
000000000001da28	b	0x1da68
000000000001da2c	mov	w10, #0x0
000000000001da30	add	w11, w9, w10
000000000001da34	cmp	w11, #0x0
000000000001da38	cinc	w11, w11, lt
000000000001da3c	asr	w11, w11, #1
000000000001da40	sbfiz	x12, x11, #4, #32
000000000001da44	ldr	w12, [x8, x12]
000000000001da48	cmp	w12, #0xa0
000000000001da4c	csinc	w10, w10, w11, ge
000000000001da50	csel	w9, w9, w11, lt
000000000001da54	cmp	w10, w9
000000000001da58	b.lt	0x1da30
000000000001da5c	b	0x1da68
000000000001da60	mov	w10, #0x0
000000000001da64	b	0x1da68
000000000001da68	sxtw	x9, w10
000000000001da6c	add	x8, x8, x9, lsl #4
000000000001da70	ldr	x8, [x8, #0x8]
000000000001da74	ldr	x8, [x8, #0x8]
000000000001da78	mov	x0, x22
000000000001da7c	mov	x1, x20
000000000001da80	blr	x8
000000000001da84	cbz	x0, 0x1d8e0
000000000001da88	ldr	x8, [x0]
000000000001da8c	and	x8, x8, #0xfffffffffffffffc
000000000001da90	ldr	x8, [x8]
000000000001da94	ldr	x8, [x8, #0x70]
000000000001da98	mov	x1, x19
000000000001da9c	blr	x8
000000000001daa0	tbz	w0, #0x0, 0x1d8e4
000000000001daa4	b	0x1daac
000000000001daa8	mov	w21, #-0x1
000000000001daac	ldr	x8, [sp, #0x8]
000000000001dab0	str	x8, [x23, #0x110]
000000000001dab4	mov	x0, x21
000000000001dab8	ldp	x29, x30, [sp, #0x70]
000000000001dabc	ldp	x20, x19, [sp, #0x60]
000000000001dac0	ldp	x22, x21, [sp, #0x50]
000000000001dac4	ldp	x24, x23, [sp, #0x40]
000000000001dac8	ldp	x26, x25, [sp, #0x30]
000000000001dacc	add	sp, sp, #0x80
000000000001dad0	ret
_kfun:kotlin.collections.AbstractList#lastIndexOf(1:0){}kotlin.Int:
000000000001dad4	sub	sp, sp, #0x70
000000000001dad8	stp	x24, x23, [sp, #0x30]
000000000001dadc	stp	x22, x21, [sp, #0x40]
000000000001dae0	stp	x20, x19, [sp, #0x50]
000000000001dae4	stp	x29, x30, [sp, #0x60]
000000000001dae8	add	x29, sp, #0x60
000000000001daec	mov	x19, x1
000000000001daf0	mov	x21, x0
000000000001daf4	movi.16b	v0, #0x0
000000000001daf8	stp	q0, q0, [sp]
000000000001dafc	str	xzr, [sp, #0x20]
000000000001db00	mov	x20, sp
000000000001db04	adrp	x0, 75 ; 0x68000
000000000001db08	add	x0, x0, #0xa00
000000000001db0c	ldr	x8, [x0]
000000000001db10	blr	x8
000000000001db14	ldr	x23, [x0]
000000000001db18	ldr	x8, [x23, #0x110]
000000000001db1c	str	x20, [x23, #0x110]
000000000001db20	mov	x9, #0x500000000
000000000001db24	stp	x8, x9, [sp, #0x8]
000000000001db28	adr	x24, #0x64d1b
000000000001db2c	nop
000000000001db30	ldarb	w8, [x24]
000000000001db34	tbz	w8, #0x0, 0x1db3c
000000000001db38	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001db3c	add	x22, x20, #0x18
000000000001db40	ldr	x8, [x21]
000000000001db44	and	x8, x8, #0xfffffffffffffffc
000000000001db48	ldr	x8, [x8]
000000000001db4c	ldr	w9, [x8, #0x3c]
000000000001db50	ldr	x8, [x8, #0x40]
000000000001db54	tbnz	w9, #0x1f, 0x1db64
000000000001db58	mov	w10, #0x2b
000000000001db5c	and	x9, x9, x10
000000000001db60	b	0x1dbe8
000000000001db64	neg	w10, w9
000000000001db68	mvn	w9, w9
000000000001db6c	cmp	w10, #0x9
000000000001db70	b.ge	0x1dba8
000000000001db74	cmp	w10, #0x2
000000000001db78	b.lt	0x1dbdc
000000000001db7c	mov	x10, #0x0
000000000001db80	mov	x11, x8
000000000001db84	ldr	w12, [x11]
000000000001db88	cmp	w12, #0x2a
000000000001db8c	b.gt	0x1dbe4
000000000001db90	add	x10, x10, #0x1
000000000001db94	add	x11, x11, #0x10
000000000001db98	cmp	x9, x10
000000000001db9c	b.ne	0x1db84
000000000001dba0	mov	x10, x9
000000000001dba4	b	0x1dbe4
000000000001dba8	mov	w10, #0x0
000000000001dbac	add	w11, w9, w10
000000000001dbb0	cmp	w11, #0x0
000000000001dbb4	cinc	w11, w11, lt
000000000001dbb8	asr	w11, w11, #1
000000000001dbbc	sbfiz	x12, x11, #4, #32
000000000001dbc0	ldr	w12, [x8, x12]
000000000001dbc4	cmp	w12, #0x2b
000000000001dbc8	csinc	w10, w10, w11, ge
000000000001dbcc	csel	w9, w9, w11, lt
000000000001dbd0	cmp	w10, w9
000000000001dbd4	b.lt	0x1dbac
000000000001dbd8	b	0x1dbe4
000000000001dbdc	mov	w10, #0x0
000000000001dbe0	b	0x1dbe4
000000000001dbe4	sxtw	x9, w10
000000000001dbe8	add	x20, x20, #0x20
000000000001dbec	add	x8, x8, x9, lsl #4
000000000001dbf0	ldr	x8, [x8, #0x8]
000000000001dbf4	ldr	x8, [x8]
000000000001dbf8	mov	x0, x21
000000000001dbfc	blr	x8
000000000001dc00	mov	x1, x0
000000000001dc04	ldr	x8, [x21]
000000000001dc08	and	x8, x8, #0xfffffffffffffffc
000000000001dc0c	ldr	x8, [x8]
000000000001dc10	ldr	w9, [x8, #0x3c]
000000000001dc14	ldr	x8, [x8, #0x40]
000000000001dc18	tbnz	w9, #0x1f, 0x1dc28
000000000001dc1c	mov	w10, #0x2b
000000000001dc20	and	x9, x9, x10
000000000001dc24	b	0x1dcac
000000000001dc28	neg	w10, w9
000000000001dc2c	mvn	w9, w9
000000000001dc30	cmp	w10, #0x9
000000000001dc34	b.ge	0x1dc6c
000000000001dc38	cmp	w10, #0x2
000000000001dc3c	b.lt	0x1dca0
000000000001dc40	mov	x10, #0x0
000000000001dc44	mov	x11, x8
000000000001dc48	ldr	w12, [x11]
000000000001dc4c	cmp	w12, #0x2a
000000000001dc50	b.gt	0x1dca8
000000000001dc54	add	x10, x10, #0x1
000000000001dc58	add	x11, x11, #0x10
000000000001dc5c	cmp	x9, x10
000000000001dc60	b.ne	0x1dc48
000000000001dc64	mov	x10, x9
000000000001dc68	b	0x1dca8
000000000001dc6c	mov	w10, #0x0
000000000001dc70	add	w11, w9, w10
000000000001dc74	cmp	w11, #0x0
000000000001dc78	cinc	w11, w11, lt
000000000001dc7c	asr	w11, w11, #1
000000000001dc80	sbfiz	x12, x11, #4, #32
000000000001dc84	ldr	w12, [x8, x12]
000000000001dc88	cmp	w12, #0x2b
000000000001dc8c	csinc	w10, w10, w11, ge
000000000001dc90	csel	w9, w9, w11, lt
000000000001dc94	cmp	w10, w9
000000000001dc98	b.lt	0x1dc70
000000000001dc9c	b	0x1dca8
000000000001dca0	mov	w10, #0x0
000000000001dca4	b	0x1dca8
000000000001dca8	sxtw	x9, w10
000000000001dcac	add	x8, x8, x9, lsl #4
000000000001dcb0	ldr	x8, [x8, #0x8]
000000000001dcb4	ldr	x8, [x8, #0x48]
000000000001dcb8	mov	x0, x21
000000000001dcbc	mov	x2, x22
000000000001dcc0	blr	x8
000000000001dcc4	mov	x21, x0
000000000001dcc8	mov	w22, #0x1a
000000000001dccc	b	0x1dcd4
000000000001dcd0	cbz	x19, 0x1de90
000000000001dcd4	ldr	x8, [x21]
000000000001dcd8	and	x8, x8, #0xfffffffffffffffc
000000000001dcdc	ldr	x8, [x8]
000000000001dce0	ldr	w9, [x8, #0x3c]
000000000001dce4	ldr	x8, [x8, #0x40]
000000000001dce8	tbnz	w9, #0x1f, 0x1dd0c
000000000001dcec	and	x9, x9, x22
000000000001dcf0	add	x8, x8, x9, lsl #4
000000000001dcf4	ldr	x8, [x8, #0x8]
000000000001dcf8	ldr	x8, [x8, #0x8]
000000000001dcfc	mov	x0, x21
000000000001dd00	blr	x8
000000000001dd04	tbnz	w0, #0x0, 0x1dda8
000000000001dd08	b	0x1deb4
000000000001dd0c	neg	w10, w9
000000000001dd10	mvn	w9, w9
000000000001dd14	cmp	w10, #0x9
000000000001dd18	b.ge	0x1dd50
000000000001dd1c	cmp	w10, #0x2
000000000001dd20	b.lt	0x1dd84
000000000001dd24	mov	x10, #0x0
000000000001dd28	mov	x11, x8
000000000001dd2c	ldr	w12, [x11]
000000000001dd30	cmp	w12, #0x19
000000000001dd34	b.gt	0x1dd8c
000000000001dd38	add	x10, x10, #0x1
000000000001dd3c	add	x11, x11, #0x10
000000000001dd40	cmp	x9, x10
000000000001dd44	b.ne	0x1dd2c
000000000001dd48	mov	x10, x9
000000000001dd4c	b	0x1dd8c
000000000001dd50	mov	w10, #0x0
000000000001dd54	add	w11, w9, w10
000000000001dd58	cmp	w11, #0x0
000000000001dd5c	cinc	w11, w11, lt
000000000001dd60	asr	w11, w11, #1
000000000001dd64	sbfiz	x12, x11, #4, #32
000000000001dd68	ldr	w12, [x8, x12]
000000000001dd6c	cmp	w12, #0x1a
000000000001dd70	csinc	w10, w10, w11, ge
000000000001dd74	csel	w9, w9, w11, lt
000000000001dd78	cmp	w10, w9
000000000001dd7c	b.lt	0x1dd54
000000000001dd80	b	0x1dd8c
000000000001dd84	mov	w10, #0x0
000000000001dd88	b	0x1dd8c
000000000001dd8c	sxtw	x9, w10
000000000001dd90	add	x8, x8, x9, lsl #4
000000000001dd94	ldr	x8, [x8, #0x8]
000000000001dd98	ldr	x8, [x8, #0x8]
000000000001dd9c	mov	x0, x21
000000000001dda0	blr	x8
000000000001dda4	tbz	w0, #0x0, 0x1deb4
000000000001dda8	ldarb	w8, [x24]
000000000001ddac	tbz	w8, #0x0, 0x1ddb4
000000000001ddb0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001ddb4	ldr	x8, [x21]
000000000001ddb8	and	x8, x8, #0xfffffffffffffffc
000000000001ddbc	ldr	x8, [x8]
000000000001ddc0	ldr	w9, [x8, #0x3c]
000000000001ddc4	ldr	x8, [x8, #0x40]
000000000001ddc8	tbnz	w9, #0x1f, 0x1ddd4
000000000001ddcc	and	x9, x9, x22
000000000001ddd0	b	0x1de58
000000000001ddd4	neg	w10, w9
000000000001ddd8	mvn	w9, w9
000000000001dddc	cmp	w10, #0x9
000000000001dde0	b.ge	0x1de18
000000000001dde4	cmp	w10, #0x2
000000000001dde8	b.lt	0x1de4c
000000000001ddec	mov	x10, #0x0
000000000001ddf0	mov	x11, x8
000000000001ddf4	ldr	w12, [x11]
000000000001ddf8	cmp	w12, #0x19
000000000001ddfc	b.gt	0x1de54
000000000001de00	add	x10, x10, #0x1
000000000001de04	add	x11, x11, #0x10
000000000001de08	cmp	x9, x10
000000000001de0c	b.ne	0x1ddf4
000000000001de10	mov	x10, x9
000000000001de14	b	0x1de54
000000000001de18	mov	w10, #0x0
000000000001de1c	add	w11, w9, w10
000000000001de20	cmp	w11, #0x0
000000000001de24	cinc	w11, w11, lt
000000000001de28	asr	w11, w11, #1
000000000001de2c	sbfiz	x12, x11, #4, #32
000000000001de30	ldr	w12, [x8, x12]
000000000001de34	cmp	w12, #0x1a
000000000001de38	csinc	w10, w10, w11, ge
000000000001de3c	csel	w9, w9, w11, lt
000000000001de40	cmp	w10, w9
000000000001de44	b.lt	0x1de1c
000000000001de48	b	0x1de54
000000000001de4c	mov	w10, #0x0
000000000001de50	b	0x1de54
000000000001de54	sxtw	x9, w10
000000000001de58	add	x8, x8, x9, lsl #4
000000000001de5c	ldr	x8, [x8, #0x8]
000000000001de60	ldr	x8, [x8, #0x20]
000000000001de64	mov	x0, x21
000000000001de68	mov	x1, x20
000000000001de6c	blr	x8
000000000001de70	cbz	x0, 0x1dcd0
000000000001de74	ldr	x8, [x0]
000000000001de78	and	x8, x8, #0xfffffffffffffffc
000000000001de7c	ldr	x8, [x8]
000000000001de80	ldr	x8, [x8, #0x70]
000000000001de84	mov	x1, x19
000000000001de88	blr	x8
000000000001de8c	tbz	w0, #0x0, 0x1dcd4
000000000001de90	ldr	x8, [x21]
000000000001de94	and	x8, x8, #0xfffffffffffffffc
000000000001de98	ldr	x8, [x8]
000000000001de9c	ldr	w9, [x8, #0x3c]
000000000001dea0	ldr	x8, [x8, #0x40]
000000000001dea4	tbnz	w9, #0x1f, 0x1debc
000000000001dea8	mov	w10, #0x1a
000000000001deac	and	x9, x9, x10
000000000001deb0	b	0x1df40
000000000001deb4	mov	w0, #-0x1
000000000001deb8	b	0x1df54
000000000001debc	neg	w10, w9
000000000001dec0	mvn	w9, w9
000000000001dec4	cmp	w10, #0x9
000000000001dec8	b.ge	0x1df00
000000000001decc	cmp	w10, #0x2
000000000001ded0	b.lt	0x1df34
000000000001ded4	mov	x10, #0x0
000000000001ded8	mov	x11, x8
000000000001dedc	ldr	w12, [x11]
000000000001dee0	cmp	w12, #0x19
000000000001dee4	b.gt	0x1df3c
000000000001dee8	add	x10, x10, #0x1
000000000001deec	add	x11, x11, #0x10
000000000001def0	cmp	x9, x10
000000000001def4	b.ne	0x1dedc
000000000001def8	mov	x10, x9
000000000001defc	b	0x1df3c
000000000001df00	mov	w10, #0x0
000000000001df04	add	w11, w9, w10
000000000001df08	cmp	w11, #0x0
000000000001df0c	cinc	w11, w11, lt
000000000001df10	asr	w11, w11, #1
000000000001df14	sbfiz	x12, x11, #4, #32
000000000001df18	ldr	w12, [x8, x12]
000000000001df1c	cmp	w12, #0x1a
000000000001df20	csinc	w10, w10, w11, ge
000000000001df24	csel	w9, w9, w11, lt
000000000001df28	cmp	w10, w9
000000000001df2c	b.lt	0x1df04
000000000001df30	b	0x1df3c
000000000001df34	mov	w10, #0x0
000000000001df38	b	0x1df3c
000000000001df3c	sxtw	x9, w10
000000000001df40	add	x8, x8, x9, lsl #4
000000000001df44	ldr	x8, [x8, #0x8]
000000000001df48	ldr	x8, [x8, #0x18]
000000000001df4c	mov	x0, x21
000000000001df50	blr	x8
000000000001df54	ldr	x8, [sp, #0x8]
000000000001df58	str	x8, [x23, #0x110]
000000000001df5c	ldp	x29, x30, [sp, #0x60]
000000000001df60	ldp	x20, x19, [sp, #0x50]
000000000001df64	ldp	x22, x21, [sp, #0x40]
000000000001df68	ldp	x24, x23, [sp, #0x30]
000000000001df6c	add	sp, sp, #0x70
000000000001df70	ret
_kfun:kotlin.collections.AbstractList#listIterator(){}kotlin.collections.ListIterator<1:0>:
000000000001df74	stp	x22, x21, [sp, #-0x30]!
000000000001df78	stp	x20, x19, [sp, #0x10]
000000000001df7c	stp	x29, x30, [sp, #0x20]
000000000001df80	add	x29, sp, #0x20
000000000001df84	mov	x19, x1
000000000001df88	mov	x20, x0
000000000001df8c	adr	x8, #0x648b7
000000000001df90	nop
000000000001df94	ldarb	w8, [x8]
000000000001df98	tbz	w8, #0x0, 0x1dfa0
000000000001df9c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001dfa0	adrp	x0, 75 ; 0x68000
000000000001dfa4	add	x0, x0, #0xa00
000000000001dfa8	ldr	x8, [x0]
000000000001dfac	blr	x8
000000000001dfb0	ldr	x8, [x0]
000000000001dfb4	ldr	x8, [x8, #0x118]
000000000001dfb8	add	x0, x8, #0x70
000000000001dfbc	mov	w1, #0x28
000000000001dfc0	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001dfc4	mov	x21, x0
000000000001dfc8	adr	x8, #0x3a8e8
000000000001dfcc	nop
000000000001dfd0	str	x8, [x21, #0x10]!
000000000001dfd4	stur	xzr, [x21, #-0x8]
000000000001dfd8	str	x21, [x19]
000000000001dfdc	str	x20, [x21, #0x18]
000000000001dfe0	str	x20, [x21, #0x8]
000000000001dfe4	ldr	x8, [x20]
000000000001dfe8	and	x8, x8, #0xfffffffffffffffc
000000000001dfec	ldr	x8, [x8]
000000000001dff0	ldr	x8, [x8, #0x88]
000000000001dff4	mov	x0, x20
000000000001dff8	blr	x8
000000000001dffc	mov	x1, x0
000000000001e000	mov	w0, #0x0
000000000001e004	bl	"_kfun:kotlin.collections.AbstractList.Companion#checkPositionIndex(kotlin.Int;kotlin.Int){}"
000000000001e008	str	wzr, [x21, #0x10]
000000000001e00c	str	x21, [x19]
000000000001e010	mov	x0, x21
000000000001e014	ldp	x29, x30, [sp, #0x20]
000000000001e018	ldp	x20, x19, [sp, #0x10]
000000000001e01c	ldp	x22, x21, [sp], #0x30
000000000001e020	ret
_kfun:kotlin.collections.AbstractList#listIterator(kotlin.Int){}kotlin.collections.ListIterator<1:0>:
000000000001e024	stp	x22, x21, [sp, #-0x30]!
000000000001e028	stp	x20, x19, [sp, #0x10]
000000000001e02c	stp	x29, x30, [sp, #0x20]
000000000001e030	add	x29, sp, #0x20
000000000001e034	mov	x19, x2
000000000001e038	mov	x20, x1
000000000001e03c	mov	x21, x0
000000000001e040	adr	x8, #0x64803
000000000001e044	nop
000000000001e048	ldarb	w8, [x8]
000000000001e04c	tbz	w8, #0x0, 0x1e054
000000000001e050	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001e054	adrp	x0, 74 ; 0x68000
000000000001e058	add	x0, x0, #0xa00
000000000001e05c	ldr	x8, [x0]
000000000001e060	blr	x8
000000000001e064	ldr	x8, [x0]
000000000001e068	ldr	x8, [x8, #0x118]
000000000001e06c	add	x0, x8, #0x70
000000000001e070	mov	w1, #0x28
000000000001e074	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001e078	mov	x22, x0
000000000001e07c	adr	x8, #0x3a834
000000000001e080	nop
000000000001e084	str	x8, [x22, #0x10]!
000000000001e088	stur	xzr, [x22, #-0x8]
000000000001e08c	str	x22, [x19]
000000000001e090	str	x21, [x22, #0x18]
000000000001e094	str	x21, [x22, #0x8]
000000000001e098	ldr	x8, [x21]
000000000001e09c	and	x8, x8, #0xfffffffffffffffc
000000000001e0a0	ldr	x8, [x8]
000000000001e0a4	ldr	x8, [x8, #0x88]
000000000001e0a8	mov	x0, x21
000000000001e0ac	blr	x8
000000000001e0b0	mov	x1, x0
000000000001e0b4	mov	x0, x20
000000000001e0b8	bl	"_kfun:kotlin.collections.AbstractList.Companion#checkPositionIndex(kotlin.Int;kotlin.Int){}"
000000000001e0bc	str	w20, [x22, #0x10]
000000000001e0c0	str	x22, [x19]
000000000001e0c4	mov	x0, x22
000000000001e0c8	ldp	x29, x30, [sp, #0x20]
000000000001e0cc	ldp	x20, x19, [sp, #0x10]
000000000001e0d0	ldp	x22, x21, [sp], #0x30
000000000001e0d4	ret
_kfun:kotlin.collections.AbstractList#subList(kotlin.Int;kotlin.Int){}kotlin.collections.List<1:0>:
000000000001e0d8	stp	x24, x23, [sp, #-0x40]!
000000000001e0dc	stp	x22, x21, [sp, #0x10]
000000000001e0e0	stp	x20, x19, [sp, #0x20]
000000000001e0e4	stp	x29, x30, [sp, #0x30]
000000000001e0e8	add	x29, sp, #0x30
000000000001e0ec	mov	x19, x3
000000000001e0f0	mov	x20, x2
000000000001e0f4	mov	x21, x1
000000000001e0f8	mov	x22, x0
000000000001e0fc	adr	x8, #0x64747
000000000001e100	nop
000000000001e104	ldarb	w8, [x8]
000000000001e108	tbz	w8, #0x0, 0x1e110
000000000001e10c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001e110	adrp	x0, 74 ; 0x68000
000000000001e114	add	x0, x0, #0xa00
000000000001e118	ldr	x8, [x0]
000000000001e11c	blr	x8
000000000001e120	ldr	x8, [x0]
000000000001e124	ldr	x8, [x8, #0x118]
000000000001e128	add	x0, x8, #0x70
000000000001e12c	mov	w1, #0x20
000000000001e130	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001e134	mov	x23, x0
000000000001e138	adr	x8, #0x3a5e8
000000000001e13c	nop
000000000001e140	str	x8, [x23, #0x10]!
000000000001e144	stur	xzr, [x23, #-0x8]
000000000001e148	str	x23, [x19]
000000000001e14c	str	x22, [x23, #0x8]
000000000001e150	str	w21, [x23, #0x10]
000000000001e154	ldr	x8, [x22]
000000000001e158	and	x8, x8, #0xfffffffffffffffc
000000000001e15c	ldr	x8, [x8]
000000000001e160	ldr	x8, [x8, #0x88]
000000000001e164	mov	x0, x22
000000000001e168	blr	x8
000000000001e16c	mov	x2, x0
000000000001e170	mov	x0, x21
000000000001e174	mov	x1, x20
000000000001e178	bl	"_kfun:kotlin.collections.AbstractList.Companion#checkRangeIndexes(kotlin.Int;kotlin.Int;kotlin.Int){}"
000000000001e17c	ldr	w8, [x23, #0x10]
000000000001e180	sub	w8, w20, w8
000000000001e184	str	w8, [x23, #0x14]
000000000001e188	str	x23, [x19]
000000000001e18c	mov	x0, x23
000000000001e190	ldp	x29, x30, [sp, #0x30]
000000000001e194	ldp	x20, x19, [sp, #0x20]
000000000001e198	ldp	x22, x21, [sp, #0x10]
000000000001e19c	ldp	x24, x23, [sp], #0x40
000000000001e1a0	ret
_kfun:kotlin.collections.AbstractList.SubList.get#internal:
000000000001e1a4	stp	x22, x21, [sp, #-0x30]!
000000000001e1a8	stp	x20, x19, [sp, #0x10]
000000000001e1ac	stp	x29, x30, [sp, #0x20]
000000000001e1b0	add	x29, sp, #0x20
000000000001e1b4	mov	x19, x2
000000000001e1b8	mov	x20, x1
000000000001e1bc	mov	x21, x0
000000000001e1c0	adr	x8, #0x64683
000000000001e1c4	nop
000000000001e1c8	ldarb	w8, [x8]
000000000001e1cc	tbz	w8, #0x0, 0x1e1d4
000000000001e1d0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001e1d4	ldr	w1, [x21, #0x14]
000000000001e1d8	mov	x0, x20
000000000001e1dc	bl	"_kfun:kotlin.collections.AbstractList.Companion#checkElementIndex(kotlin.Int;kotlin.Int){}"
000000000001e1e0	ldr	x0, [x21, #0x8]
000000000001e1e4	ldr	w8, [x21, #0x10]
000000000001e1e8	add	w1, w8, w20
000000000001e1ec	ldr	x8, [x0]
000000000001e1f0	and	x8, x8, #0xfffffffffffffffc
000000000001e1f4	ldr	x8, [x8]
000000000001e1f8	ldr	x8, [x8, #0xc0]
000000000001e1fc	mov	x2, x19
000000000001e200	blr	x8
000000000001e204	str	x0, [x19]
000000000001e208	ldp	x29, x30, [sp, #0x20]
000000000001e20c	ldp	x20, x19, [sp, #0x10]
000000000001e210	ldp	x22, x21, [sp], #0x30
000000000001e214	ret
_kfun:kotlin.collections.AbstractList.SubList.<get-size>#internal:
000000000001e218	stp	x20, x19, [sp, #-0x20]!
000000000001e21c	stp	x29, x30, [sp, #0x10]
000000000001e220	add	x29, sp, #0x10
000000000001e224	mov	x19, x0
000000000001e228	adr	x8, #0x6461b
000000000001e22c	nop
000000000001e230	ldarb	w8, [x8]
000000000001e234	tbz	w8, #0x0, 0x1e23c
000000000001e238	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001e23c	ldr	w0, [x19, #0x14]
000000000001e240	ldp	x29, x30, [sp, #0x10]
000000000001e244	ldp	x20, x19, [sp], #0x20
000000000001e248	ret
_kfun:kotlin.collections.AbstractList#equals(kotlin.Any?){}kotlin.Boolean:
000000000001e24c	stp	x20, x19, [sp, #-0x20]!
000000000001e250	stp	x29, x30, [sp, #0x10]
000000000001e254	add	x29, sp, #0x10
000000000001e258	mov	x19, x1
000000000001e25c	mov	x20, x0
000000000001e260	adr	x8, #0x645e3
000000000001e264	nop
000000000001e268	ldarb	w8, [x8]
000000000001e26c	tbz	w8, #0x0, 0x1e274
000000000001e270	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001e274	cmp	x19, x20
000000000001e278	b.eq	0x1e2b4
000000000001e27c	cbz	x19, 0x1e368
000000000001e280	ldr	x8, [x19]
000000000001e284	and	x8, x8, #0xfffffffffffffffc
000000000001e288	ldr	x8, [x8]
000000000001e28c	ldr	w9, [x8, #0x3c]
000000000001e290	ldr	x8, [x8, #0x40]
000000000001e294	tbnz	w9, #0x1f, 0x1e2c4
000000000001e298	mov	w10, #0x2b
000000000001e29c	and	x9, x9, x10
000000000001e2a0	lsl	x9, x9, #4
000000000001e2a4	ldr	w8, [x8, x9]
000000000001e2a8	cmp	w8, #0x2b
000000000001e2ac	b.ne	0x1e368
000000000001e2b0	b	0x1e38c
000000000001e2b4	mov	w0, #0x1
000000000001e2b8	ldp	x29, x30, [sp, #0x10]
000000000001e2bc	ldp	x20, x19, [sp], #0x20
000000000001e2c0	ret
000000000001e2c4	neg	w10, w9
000000000001e2c8	mvn	w9, w9
000000000001e2cc	cmp	w10, #0x9
000000000001e2d0	b.ge	0x1e31c
000000000001e2d4	cmp	w10, #0x2
000000000001e2d8	b.lt	0x1e350
000000000001e2dc	mov	x10, #0x0
000000000001e2e0	mov	x11, x8
000000000001e2e4	ldr	w12, [x11]
000000000001e2e8	cmp	w12, #0x2a
000000000001e2ec	b.gt	0x1e378
000000000001e2f0	add	x10, x10, #0x1
000000000001e2f4	add	x11, x11, #0x10
000000000001e2f8	cmp	x9, x10
000000000001e2fc	b.ne	0x1e2e4
000000000001e300	mov	x10, x9
000000000001e304	sxtw	x9, w10
000000000001e308	lsl	x9, x9, #4
000000000001e30c	ldr	w8, [x8, x9]
000000000001e310	cmp	w8, #0x2b
000000000001e314	b.ne	0x1e368
000000000001e318	b	0x1e38c
000000000001e31c	mov	w10, #0x0
000000000001e320	add	w11, w9, w10
000000000001e324	cmp	w11, #0x0
000000000001e328	cinc	w11, w11, lt
000000000001e32c	asr	w11, w11, #1
000000000001e330	sbfiz	x12, x11, #4, #32
000000000001e334	ldr	w12, [x8, x12]
000000000001e338	cmp	w12, #0x2b
000000000001e33c	csinc	w10, w10, w11, ge
000000000001e340	csel	w9, w9, w11, lt
000000000001e344	cmp	w10, w9
000000000001e348	b.lt	0x1e320
000000000001e34c	b	0x1e378
000000000001e350	mov	w10, #0x0
000000000001e354	sxtw	x9, w10
000000000001e358	lsl	x9, x9, #4
000000000001e35c	ldr	w8, [x8, x9]
000000000001e360	cmp	w8, #0x2b
000000000001e364	b.eq	0x1e38c
000000000001e368	mov	w0, #0x0
000000000001e36c	ldp	x29, x30, [sp, #0x10]
000000000001e370	ldp	x20, x19, [sp], #0x20
000000000001e374	ret
000000000001e378	sxtw	x9, w10
000000000001e37c	lsl	x9, x9, #4
000000000001e380	ldr	w8, [x8, x9]
000000000001e384	cmp	w8, #0x2b
000000000001e388	b.ne	0x1e368
000000000001e38c	mov	x0, x20
000000000001e390	mov	x1, x19
000000000001e394	ldp	x29, x30, [sp, #0x10]
000000000001e398	ldp	x20, x19, [sp], #0x20
000000000001e39c	b	"_kfun:kotlin.collections.AbstractList.Companion#orderedEquals(kotlin.collections.Collection<*>;kotlin.collections.Collection<*>){}kotlin.Boolean"
_kfun:kotlin.collections.AbstractList#hashCode(){}kotlin.Int:
000000000001e3a0	stp	x20, x19, [sp, #-0x20]!
000000000001e3a4	stp	x29, x30, [sp, #0x10]
000000000001e3a8	add	x29, sp, #0x10
000000000001e3ac	mov	x19, x0
000000000001e3b0	adr	x8, #0x64493
000000000001e3b4	nop
000000000001e3b8	ldarb	w8, [x8]
000000000001e3bc	tbz	w8, #0x0, 0x1e3c4
000000000001e3c0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001e3c4	mov	x0, x19
000000000001e3c8	ldp	x29, x30, [sp, #0x10]
000000000001e3cc	ldp	x20, x19, [sp], #0x20
000000000001e3d0	b	"_kfun:kotlin.collections.AbstractList.Companion#orderedHashCode(kotlin.collections.Collection<*>){}kotlin.Int"
_kfun:kotlin.collections.AbstractList.IteratorImpl.hasNext#internal:
000000000001e3d4	stp	x20, x19, [sp, #-0x20]!
000000000001e3d8	stp	x29, x30, [sp, #0x10]
000000000001e3dc	add	x29, sp, #0x10
000000000001e3e0	mov	x19, x0
000000000001e3e4	adr	x8, #0x6445f
000000000001e3e8	nop
000000000001e3ec	ldarb	w8, [x8]
000000000001e3f0	tbz	w8, #0x0, 0x1e3f8
000000000001e3f4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001e3f8	ldr	w20, [x19, #0x10]
000000000001e3fc	ldr	x0, [x19, #0x8]
000000000001e400	ldr	x8, [x0]
000000000001e404	and	x8, x8, #0xfffffffffffffffc
000000000001e408	ldr	x8, [x8]
000000000001e40c	ldr	x8, [x8, #0x88]
000000000001e410	blr	x8
000000000001e414	cmp	w20, w0
000000000001e418	cset	w0, lt
000000000001e41c	ldp	x29, x30, [sp, #0x10]
000000000001e420	ldp	x20, x19, [sp], #0x20
000000000001e424	ret
_kfun:kotlin.collections.AbstractList.IteratorImpl.next#internal:
000000000001e428	sub	sp, sp, #0x50
000000000001e42c	stp	x22, x21, [sp, #0x20]
000000000001e430	stp	x20, x19, [sp, #0x30]
000000000001e434	stp	x29, x30, [sp, #0x40]
000000000001e438	add	x29, sp, #0x40
000000000001e43c	mov	x19, x1
000000000001e440	mov	x20, x0
000000000001e444	movi.16b	v0, #0x0
000000000001e448	stp	q0, q0, [sp]
000000000001e44c	adrp	x0, 74 ; 0x68000
000000000001e450	add	x0, x0, #0xa00
000000000001e454	ldr	x8, [x0]
000000000001e458	blr	x8
000000000001e45c	ldr	x21, [x0]
000000000001e460	ldr	x8, [x21, #0x110]
000000000001e464	mov	x9, sp
000000000001e468	str	x9, [x21, #0x110]
000000000001e46c	mov	x9, #0x400000000
000000000001e470	stp	x8, x9, [sp, #0x8]
000000000001e474	adr	x8, #0x643cf
000000000001e478	nop
000000000001e47c	ldarb	w8, [x8]
000000000001e480	tbz	w8, #0x0, 0x1e488
000000000001e484	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001e488	ldr	x8, [x20]
000000000001e48c	and	x8, x8, #0xfffffffffffffffc
000000000001e490	ldr	x8, [x8]
000000000001e494	ldr	x8, [x8, #0x88]
000000000001e498	mov	x0, x20
000000000001e49c	blr	x8
000000000001e4a0	tbz	w0, #0x0, 0x1e4ec
000000000001e4a4	ldr	x0, [x20, #0x8]
000000000001e4a8	ldr	w1, [x20, #0x10]
000000000001e4ac	add	w8, w1, #0x1
000000000001e4b0	str	w8, [x20, #0x10]
000000000001e4b4	ldr	x8, [x0]
000000000001e4b8	and	x8, x8, #0xfffffffffffffffc
000000000001e4bc	ldr	x8, [x8]
000000000001e4c0	ldr	x8, [x8, #0xc0]
000000000001e4c4	mov	x2, x19
000000000001e4c8	blr	x8
000000000001e4cc	str	x0, [x19]
000000000001e4d0	ldr	x8, [sp, #0x8]
000000000001e4d4	str	x8, [x21, #0x110]
000000000001e4d8	ldp	x29, x30, [sp, #0x40]
000000000001e4dc	ldp	x20, x19, [sp, #0x30]
000000000001e4e0	ldp	x22, x21, [sp, #0x20]
000000000001e4e4	add	sp, sp, #0x50
000000000001e4e8	ret
000000000001e4ec	ldr	x8, [x21, #0x118]
000000000001e4f0	add	x0, x8, #0x70
000000000001e4f4	mov	w1, #0x38
000000000001e4f8	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001e4fc	mov	x19, x0
000000000001e500	adr	x8, #0x365a0
000000000001e504	nop
000000000001e508	str	x8, [x19, #0x10]!
000000000001e50c	stur	xzr, [x19, #-0x8]
000000000001e510	str	x19, [sp, #0x18]
000000000001e514	mov	x0, x19
000000000001e518	mov	x1, #0x0
000000000001e51c	bl	"_kfun:kotlin.Throwable#<init>(kotlin.String?;kotlin.Throwable?){}"
000000000001e520	mov	x0, x19
000000000001e524	bl	_ThrowException
_kfun:kotlin.collections.AbstractList.ListIteratorImpl.hasPrevious#internal:
000000000001e528	stp	x20, x19, [sp, #-0x20]!
000000000001e52c	stp	x29, x30, [sp, #0x10]
000000000001e530	add	x29, sp, #0x10
000000000001e534	mov	x19, x0
000000000001e538	adr	x8, #0x6430b
000000000001e53c	nop
000000000001e540	ldarb	w8, [x8]
000000000001e544	tbz	w8, #0x0, 0x1e54c
000000000001e548	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001e54c	ldr	w8, [x19, #0x10]
000000000001e550	cmp	w8, #0x0
000000000001e554	cset	w0, gt
000000000001e558	ldp	x29, x30, [sp, #0x10]
000000000001e55c	ldp	x20, x19, [sp], #0x20
000000000001e560	ret
_kfun:kotlin.collections.AbstractList.ListIteratorImpl.nextIndex#internal:
000000000001e564	stp	x20, x19, [sp, #-0x20]!
000000000001e568	stp	x29, x30, [sp, #0x10]
000000000001e56c	add	x29, sp, #0x10
000000000001e570	mov	x19, x0
000000000001e574	adr	x8, #0x642cf
000000000001e578	nop
000000000001e57c	ldarb	w8, [x8]
000000000001e580	tbz	w8, #0x0, 0x1e588
000000000001e584	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001e588	ldr	w0, [x19, #0x10]
000000000001e58c	ldp	x29, x30, [sp, #0x10]
000000000001e590	ldp	x20, x19, [sp], #0x20
000000000001e594	ret
_kfun:kotlin.collections.AbstractList.ListIteratorImpl.previous#internal:
000000000001e598	sub	sp, sp, #0x50
000000000001e59c	stp	x22, x21, [sp, #0x20]
000000000001e5a0	stp	x20, x19, [sp, #0x30]
000000000001e5a4	stp	x29, x30, [sp, #0x40]
000000000001e5a8	add	x29, sp, #0x40
000000000001e5ac	mov	x19, x1
000000000001e5b0	mov	x20, x0
000000000001e5b4	movi.16b	v0, #0x0
000000000001e5b8	stp	q0, q0, [sp]
000000000001e5bc	adrp	x0, 74 ; 0x68000
000000000001e5c0	add	x0, x0, #0xa00
000000000001e5c4	ldr	x8, [x0]
000000000001e5c8	blr	x8
000000000001e5cc	ldr	x21, [x0]
000000000001e5d0	ldr	x8, [x21, #0x110]
000000000001e5d4	mov	x9, sp
000000000001e5d8	str	x9, [x21, #0x110]
000000000001e5dc	mov	x9, #0x400000000
000000000001e5e0	stp	x8, x9, [sp, #0x8]
000000000001e5e4	adr	x8, #0x6425f
000000000001e5e8	nop
000000000001e5ec	ldarb	w8, [x8]
000000000001e5f0	tbz	w8, #0x0, 0x1e5f8
000000000001e5f4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001e5f8	ldr	x8, [x20]
000000000001e5fc	and	x8, x8, #0xfffffffffffffffc
000000000001e600	ldr	x8, [x8]
000000000001e604	ldr	x8, [x8, #0x98]
000000000001e608	mov	x0, x20
000000000001e60c	blr	x8
000000000001e610	tbz	w0, #0x0, 0x1e65c
000000000001e614	ldr	x0, [x20, #0x18]
000000000001e618	ldr	w8, [x20, #0x10]
000000000001e61c	sub	w1, w8, #0x1
000000000001e620	str	w1, [x20, #0x10]
000000000001e624	ldr	x8, [x0]
000000000001e628	and	x8, x8, #0xfffffffffffffffc
000000000001e62c	ldr	x8, [x8]
000000000001e630	ldr	x8, [x8, #0xc0]
000000000001e634	mov	x2, x19
000000000001e638	blr	x8
000000000001e63c	str	x0, [x19]
000000000001e640	ldr	x8, [sp, #0x8]
000000000001e644	str	x8, [x21, #0x110]
000000000001e648	ldp	x29, x30, [sp, #0x40]
000000000001e64c	ldp	x20, x19, [sp, #0x30]
000000000001e650	ldp	x22, x21, [sp, #0x20]
000000000001e654	add	sp, sp, #0x50
000000000001e658	ret
000000000001e65c	ldr	x8, [x21, #0x118]
000000000001e660	add	x0, x8, #0x70
000000000001e664	mov	w1, #0x38
000000000001e668	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001e66c	mov	x19, x0
000000000001e670	adr	x8, #0x36430
000000000001e674	nop
000000000001e678	str	x8, [x19, #0x10]!
000000000001e67c	stur	xzr, [x19, #-0x8]
000000000001e680	str	x19, [sp, #0x18]
000000000001e684	mov	x0, x19
000000000001e688	mov	x1, #0x0
000000000001e68c	bl	"_kfun:kotlin.Throwable#<init>(kotlin.String?;kotlin.Throwable?){}"
000000000001e690	mov	x0, x19
000000000001e694	bl	_ThrowException
_kfun:kotlin.collections.AbstractList.ListIteratorImpl.previousIndex#internal:
000000000001e698	stp	x20, x19, [sp, #-0x20]!
000000000001e69c	stp	x29, x30, [sp, #0x10]
000000000001e6a0	add	x29, sp, #0x10
000000000001e6a4	mov	x19, x0
000000000001e6a8	adr	x8, #0x6419b
000000000001e6ac	nop
000000000001e6b0	ldarb	w8, [x8]
000000000001e6b4	tbz	w8, #0x0, 0x1e6bc
000000000001e6b8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001e6bc	ldr	w8, [x19, #0x10]
000000000001e6c0	sub	w0, w8, #0x1
000000000001e6c4	ldp	x29, x30, [sp, #0x10]
000000000001e6c8	ldp	x20, x19, [sp], #0x20
000000000001e6cc	ret
_kfun:kotlin.collections.AbstractList.Companion#checkElementIndex(kotlin.Int;kotlin.Int){}:
000000000001e6d0	sub	sp, sp, #0xc0
000000000001e6d4	stp	x26, x25, [sp, #0x70]
000000000001e6d8	stp	x24, x23, [sp, #0x80]
000000000001e6dc	stp	x22, x21, [sp, #0x90]
000000000001e6e0	stp	x20, x19, [sp, #0xa0]
000000000001e6e4	stp	x29, x30, [sp, #0xb0]
000000000001e6e8	add	x29, sp, #0xb0
000000000001e6ec	mov	x19, x1
000000000001e6f0	mov	x20, x0
000000000001e6f4	movi.16b	v0, #0x0
000000000001e6f8	stp	q0, q0, [sp, #0x20]
000000000001e6fc	stp	q0, q0, [sp, #0x50]
000000000001e700	str	q0, [sp, #0x40]
000000000001e704	stp	xzr, xzr, [sp, #0x10]
000000000001e708	adr	x8, #0x39c88
000000000001e70c	nop
000000000001e710	orr	x8, x8, #0x3
000000000001e714	str	x8, [sp, #0x8]
000000000001e718	adrp	x0, 74 ; 0x68000
000000000001e71c	add	x0, x0, #0xa00
000000000001e720	ldr	x8, [x0]
000000000001e724	blr	x8
000000000001e728	ldr	x21, [x0]
000000000001e72c	ldr	x8, [x21, #0x110]
000000000001e730	add	x9, sp, #0x20
000000000001e734	str	x9, [x21, #0x110]
000000000001e738	mov	x9, #0xa00000000
000000000001e73c	stp	x8, x9, [sp, #0x28]
000000000001e740	adr	x8, #0x64103
000000000001e744	nop
000000000001e748	ldarb	w8, [x8]
000000000001e74c	tbz	w8, #0x0, 0x1e754
000000000001e750	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001e754	tbnz	w20, #0x1f, 0x1e784
000000000001e758	cmp	w20, w19
000000000001e75c	b.ge	0x1e784
000000000001e760	ldr	x8, [sp, #0x28]
000000000001e764	str	x8, [x21, #0x110]
000000000001e768	ldp	x29, x30, [sp, #0xb0]
000000000001e76c	ldp	x20, x19, [sp, #0xa0]
000000000001e770	ldp	x22, x21, [sp, #0x90]
000000000001e774	ldp	x24, x23, [sp, #0x80]
000000000001e778	ldp	x26, x25, [sp, #0x70]
000000000001e77c	add	sp, sp, #0xc0
000000000001e780	ret
000000000001e784	add	x8, sp, #0x20
000000000001e788	mov	x26, x21
000000000001e78c	add	x21, x8, #0x40
000000000001e790	add	x22, x8, #0x38
000000000001e794	add	x23, x8, #0x30
000000000001e798	add	x24, x8, #0x28
000000000001e79c	add	x25, x8, #0x20
000000000001e7a0	add	x8, sp, #0x8
000000000001e7a4	str	x8, [sp, #0x38]
000000000001e7a8	add	x0, sp, #0x8
000000000001e7ac	mov	w1, #0xa
000000000001e7b0	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
000000000001e7b4	adr	x1, #0x433ac
000000000001e7b8	nop
000000000001e7bc	add	x0, sp, #0x8
000000000001e7c0	mov	x2, x25
000000000001e7c4	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000001e7c8	add	x0, sp, #0x8
000000000001e7cc	mov	x1, x20
000000000001e7d0	mov	x2, x24
000000000001e7d4	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
000000000001e7d8	adr	x1, #0x42c68
000000000001e7dc	nop
000000000001e7e0	add	x0, sp, #0x8
000000000001e7e4	mov	x2, x23
000000000001e7e8	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000001e7ec	add	x0, sp, #0x8
000000000001e7f0	mov	x1, x19
000000000001e7f4	mov	x2, x22
000000000001e7f8	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
000000000001e7fc	add	x0, sp, #0x8
000000000001e800	mov	x1, x21
000000000001e804	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
000000000001e808	mov	x19, x0
000000000001e80c	ldr	x8, [x26, #0x118]
000000000001e810	add	x0, x8, #0x70
000000000001e814	mov	w1, #0x38
000000000001e818	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001e81c	mov	x20, x0
000000000001e820	adr	x8, #0x363c0
000000000001e824	nop
000000000001e828	str	x8, [x20, #0x10]!
000000000001e82c	stur	xzr, [x20, #-0x8]
000000000001e830	str	x20, [sp, #0x68]
000000000001e834	mov	x0, x20
000000000001e838	mov	x1, x19
000000000001e83c	bl	"_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}"
000000000001e840	mov	x0, x20
000000000001e844	bl	_ThrowException
_kfun:kotlin.collections.AbstractList.Companion#checkPositionIndex(kotlin.Int;kotlin.Int){}:
000000000001e848	sub	sp, sp, #0xc0
000000000001e84c	stp	x26, x25, [sp, #0x70]
000000000001e850	stp	x24, x23, [sp, #0x80]
000000000001e854	stp	x22, x21, [sp, #0x90]
000000000001e858	stp	x20, x19, [sp, #0xa0]
000000000001e85c	stp	x29, x30, [sp, #0xb0]
000000000001e860	add	x29, sp, #0xb0
000000000001e864	mov	x19, x1
000000000001e868	mov	x20, x0
000000000001e86c	movi.16b	v0, #0x0
000000000001e870	stp	q0, q0, [sp, #0x20]
000000000001e874	stp	q0, q0, [sp, #0x50]
000000000001e878	str	q0, [sp, #0x40]
000000000001e87c	stp	xzr, xzr, [sp, #0x10]
000000000001e880	adr	x8, #0x39b10
000000000001e884	nop
000000000001e888	orr	x8, x8, #0x3
000000000001e88c	str	x8, [sp, #0x8]
000000000001e890	adrp	x0, 74 ; 0x68000
000000000001e894	add	x0, x0, #0xa00
000000000001e898	ldr	x8, [x0]
000000000001e89c	blr	x8
000000000001e8a0	ldr	x21, [x0]
000000000001e8a4	ldr	x8, [x21, #0x110]
000000000001e8a8	add	x9, sp, #0x20
000000000001e8ac	str	x9, [x21, #0x110]
000000000001e8b0	mov	x9, #0xa00000000
000000000001e8b4	stp	x8, x9, [sp, #0x28]
000000000001e8b8	adr	x8, #0x63f8b
000000000001e8bc	nop
000000000001e8c0	ldarb	w8, [x8]
000000000001e8c4	tbz	w8, #0x0, 0x1e8cc
000000000001e8c8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001e8cc	tbnz	w20, #0x1f, 0x1e8fc
000000000001e8d0	cmp	w20, w19
000000000001e8d4	b.gt	0x1e8fc
000000000001e8d8	ldr	x8, [sp, #0x28]
000000000001e8dc	str	x8, [x21, #0x110]
000000000001e8e0	ldp	x29, x30, [sp, #0xb0]
000000000001e8e4	ldp	x20, x19, [sp, #0xa0]
000000000001e8e8	ldp	x22, x21, [sp, #0x90]
000000000001e8ec	ldp	x24, x23, [sp, #0x80]
000000000001e8f0	ldp	x26, x25, [sp, #0x70]
000000000001e8f4	add	sp, sp, #0xc0
000000000001e8f8	ret
000000000001e8fc	add	x8, sp, #0x20
000000000001e900	mov	x26, x21
000000000001e904	add	x21, x8, #0x40
000000000001e908	add	x22, x8, #0x38
000000000001e90c	add	x23, x8, #0x30
000000000001e910	add	x24, x8, #0x28
000000000001e914	add	x25, x8, #0x20
000000000001e918	add	x8, sp, #0x8
000000000001e91c	str	x8, [sp, #0x38]
000000000001e920	add	x0, sp, #0x8
000000000001e924	mov	w1, #0xa
000000000001e928	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
000000000001e92c	adr	x1, #0x43234
000000000001e930	nop
000000000001e934	add	x0, sp, #0x8
000000000001e938	mov	x2, x25
000000000001e93c	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000001e940	add	x0, sp, #0x8
000000000001e944	mov	x1, x20
000000000001e948	mov	x2, x24
000000000001e94c	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
000000000001e950	adr	x1, #0x42af0
000000000001e954	nop
000000000001e958	add	x0, sp, #0x8
000000000001e95c	mov	x2, x23
000000000001e960	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000001e964	add	x0, sp, #0x8
000000000001e968	mov	x1, x19
000000000001e96c	mov	x2, x22
000000000001e970	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
000000000001e974	add	x0, sp, #0x8
000000000001e978	mov	x1, x21
000000000001e97c	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
000000000001e980	mov	x19, x0
000000000001e984	ldr	x8, [x26, #0x118]
000000000001e988	add	x0, x8, #0x70
000000000001e98c	mov	w1, #0x38
000000000001e990	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001e994	mov	x20, x0
000000000001e998	adr	x8, #0x36248
000000000001e99c	nop
000000000001e9a0	str	x8, [x20, #0x10]!
000000000001e9a4	stur	xzr, [x20, #-0x8]
000000000001e9a8	str	x20, [sp, #0x68]
000000000001e9ac	mov	x0, x20
000000000001e9b0	mov	x1, x19
000000000001e9b4	bl	"_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}"
000000000001e9b8	mov	x0, x20
000000000001e9bc	bl	_ThrowException
_kfun:kotlin.collections.AbstractList.Companion#checkRangeIndexes(kotlin.Int;kotlin.Int;kotlin.Int){}:
000000000001e9c0	sub	sp, sp, #0x140
000000000001e9c4	stp	x28, x27, [sp, #0xe0]
000000000001e9c8	stp	x26, x25, [sp, #0xf0]
000000000001e9cc	stp	x24, x23, [sp, #0x100]
000000000001e9d0	stp	x22, x21, [sp, #0x110]
000000000001e9d4	stp	x20, x19, [sp, #0x120]
000000000001e9d8	stp	x29, x30, [sp, #0x130]
000000000001e9dc	add	x29, sp, #0x130
000000000001e9e0	mov	x21, x2
000000000001e9e4	mov	x19, x1
000000000001e9e8	mov	x20, x0
000000000001e9ec	str	xzr, [sp, #0xd0]
000000000001e9f0	movi.16b	v0, #0x0
000000000001e9f4	stp	q0, q0, [sp, #0xb0]
000000000001e9f8	stp	q0, q0, [sp, #0x90]
000000000001e9fc	stp	q0, q0, [sp, #0x70]
000000000001ea00	stp	q0, q0, [sp, #0x50]
000000000001ea04	str	q0, [sp, #0x40]
000000000001ea08	stp	xzr, xzr, [sp, #0x30]
000000000001ea0c	adr	x8, #0x39984
000000000001ea10	nop
000000000001ea14	orr	x8, x8, #0x3
000000000001ea18	stp	xzr, x8, [sp, #0x20]
000000000001ea1c	stp	x8, xzr, [sp, #0x10]
000000000001ea20	adrp	x0, 74 ; 0x68000
000000000001ea24	add	x0, x0, #0xa00
000000000001ea28	ldr	x8, [x0]
000000000001ea2c	blr	x8
000000000001ea30	ldr	x22, [x0]
000000000001ea34	ldr	x8, [x22, #0x110]
000000000001ea38	add	x9, sp, #0x40
000000000001ea3c	str	x9, [x22, #0x110]
000000000001ea40	mov	x9, #0x1300000000
000000000001ea44	stp	x8, x9, [sp, #0x48]
000000000001ea48	adr	x8, #0x63dfb
000000000001ea4c	nop
000000000001ea50	ldarb	w8, [x8]
000000000001ea54	tbz	w8, #0x0, 0x1ea5c
000000000001ea58	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001ea5c	tbnz	w20, #0x1f, 0x1ea98
000000000001ea60	cmp	w19, w21
000000000001ea64	b.gt	0x1ea98
000000000001ea68	cmp	w20, w19
000000000001ea6c	b.gt	0x1eb78
000000000001ea70	ldr	x8, [sp, #0x48]
000000000001ea74	str	x8, [x22, #0x110]
000000000001ea78	ldp	x29, x30, [sp, #0x130]
000000000001ea7c	ldp	x20, x19, [sp, #0x120]
000000000001ea80	ldp	x22, x21, [sp, #0x110]
000000000001ea84	ldp	x24, x23, [sp, #0x100]
000000000001ea88	ldp	x26, x25, [sp, #0xf0]
000000000001ea8c	ldp	x28, x27, [sp, #0xe0]
000000000001ea90	add	sp, sp, #0x140
000000000001ea94	ret
000000000001ea98	add	x8, sp, #0x40
000000000001ea9c	add	x9, x8, #0x50
000000000001eaa0	str	x9, [sp, #0x8]
000000000001eaa4	add	x23, x8, #0x48
000000000001eaa8	add	x24, x8, #0x40
000000000001eaac	add	x25, x8, #0x38
000000000001eab0	add	x26, x8, #0x30
000000000001eab4	add	x27, x8, #0x28
000000000001eab8	add	x9, sp, #0x28
000000000001eabc	str	x9, [sp, #0x58]
000000000001eac0	add	x28, x8, #0x20
000000000001eac4	add	x0, sp, #0x28
000000000001eac8	mov	w1, #0xa
000000000001eacc	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
000000000001ead0	adr	x1, #0x42910
000000000001ead4	nop
000000000001ead8	add	x0, sp, #0x28
000000000001eadc	mov	x2, x28
000000000001eae0	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000001eae4	add	x0, sp, #0x28
000000000001eae8	mov	x1, x20
000000000001eaec	mov	x2, x27
000000000001eaf0	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
000000000001eaf4	adr	x1, #0x4291c
000000000001eaf8	nop
000000000001eafc	add	x0, sp, #0x28
000000000001eb00	mov	x2, x26
000000000001eb04	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000001eb08	add	x0, sp, #0x28
000000000001eb0c	mov	x1, x19
000000000001eb10	mov	x2, x25
000000000001eb14	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
000000000001eb18	adr	x1, #0x42928
000000000001eb1c	nop
000000000001eb20	add	x0, sp, #0x28
000000000001eb24	mov	x2, x24
000000000001eb28	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000001eb2c	add	x0, sp, #0x28
000000000001eb30	mov	x1, x21
000000000001eb34	mov	x2, x23
000000000001eb38	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
000000000001eb3c	add	x0, sp, #0x28
000000000001eb40	ldr	x1, [sp, #0x8]
000000000001eb44	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
000000000001eb48	mov	x19, x0
000000000001eb4c	ldr	x8, [x22, #0x118]
000000000001eb50	add	x0, x8, #0x70
000000000001eb54	mov	w1, #0x38
000000000001eb58	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001eb5c	mov	x20, x0
000000000001eb60	adr	x8, #0x36080
000000000001eb64	nop
000000000001eb68	str	x8, [x20, #0x10]!
000000000001eb6c	stur	xzr, [x20, #-0x8]
000000000001eb70	str	x20, [sp, #0x98]
000000000001eb74	b	0x1ec24
000000000001eb78	add	x8, sp, #0x40
000000000001eb7c	add	x21, x8, #0x88
000000000001eb80	add	x26, x8, #0x80
000000000001eb84	add	x23, x8, #0x78
000000000001eb88	add	x24, x8, #0x70
000000000001eb8c	add	x25, x8, #0x68
000000000001eb90	add	x8, sp, #0x10
000000000001eb94	str	x8, [sp, #0xa0]
000000000001eb98	add	x0, sp, #0x10
000000000001eb9c	mov	w1, #0xa
000000000001eba0	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
000000000001eba4	adr	x1, #0x4283c
000000000001eba8	nop
000000000001ebac	add	x0, sp, #0x10
000000000001ebb0	mov	x2, x25
000000000001ebb4	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000001ebb8	add	x0, sp, #0x10
000000000001ebbc	mov	x1, x20
000000000001ebc0	mov	x2, x24
000000000001ebc4	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
000000000001ebc8	adr	x1, #0x42898
000000000001ebcc	nop
000000000001ebd0	add	x0, sp, #0x10
000000000001ebd4	mov	x2, x23
000000000001ebd8	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000001ebdc	add	x0, sp, #0x10
000000000001ebe0	mov	x1, x19
000000000001ebe4	mov	x2, x26
000000000001ebe8	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
000000000001ebec	add	x0, sp, #0x10
000000000001ebf0	mov	x1, x21
000000000001ebf4	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
000000000001ebf8	mov	x19, x0
000000000001ebfc	ldr	x8, [x22, #0x118]
000000000001ec00	add	x0, x8, #0x70
000000000001ec04	mov	w1, #0x38
000000000001ec08	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001ec0c	mov	x20, x0
000000000001ec10	adr	x8, #0x36070
000000000001ec14	nop
000000000001ec18	str	x8, [x20, #0x10]!
000000000001ec1c	stur	xzr, [x20, #-0x8]
000000000001ec20	str	x20, [sp, #0xd0]
000000000001ec24	mov	x0, x20
000000000001ec28	mov	x1, x19
000000000001ec2c	bl	"_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}"
000000000001ec30	mov	x0, x20
000000000001ec34	bl	_ThrowException
_kfun:kotlin.collections.AbstractList.Companion#orderedHashCode(kotlin.collections.Collection<*>){}kotlin.Int:
000000000001ec38	sub	sp, sp, #0x70
000000000001ec3c	stp	x24, x23, [sp, #0x30]
000000000001ec40	stp	x22, x21, [sp, #0x40]
000000000001ec44	stp	x20, x19, [sp, #0x50]
000000000001ec48	stp	x29, x30, [sp, #0x60]
000000000001ec4c	add	x29, sp, #0x60
000000000001ec50	mov	x20, x0
000000000001ec54	movi.16b	v0, #0x0
000000000001ec58	stp	q0, q0, [sp]
000000000001ec5c	str	xzr, [sp, #0x20]
000000000001ec60	mov	x19, sp
000000000001ec64	add	x21, x19, #0x18
000000000001ec68	adrp	x0, 74 ; 0x68000
000000000001ec6c	add	x0, x0, #0xa00
000000000001ec70	ldr	x8, [x0]
000000000001ec74	blr	x8
000000000001ec78	ldr	x22, [x0]
000000000001ec7c	ldr	x8, [x22, #0x110]
000000000001ec80	str	x19, [x22, #0x110]
000000000001ec84	mov	x9, #0x500000000
000000000001ec88	stp	x8, x9, [sp, #0x8]
000000000001ec8c	adr	x23, #0x63bb7
000000000001ec90	nop
000000000001ec94	ldarb	w8, [x23]
000000000001ec98	tbz	w8, #0x0, 0x1eca0
000000000001ec9c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001eca0	add	x19, x19, #0x20
000000000001eca4	ldr	x8, [x20]
000000000001eca8	and	x8, x8, #0xfffffffffffffffc
000000000001ecac	ldr	x8, [x8]
000000000001ecb0	ldr	w9, [x8, #0x3c]
000000000001ecb4	ldr	x8, [x8, #0x40]
000000000001ecb8	tbnz	w9, #0x1f, 0x1ecc8
000000000001ecbc	mov	w10, #0x12
000000000001ecc0	and	x9, x9, x10
000000000001ecc4	b	0x1ed4c
000000000001ecc8	neg	w10, w9
000000000001eccc	mvn	w9, w9
000000000001ecd0	cmp	w10, #0x9
000000000001ecd4	b.ge	0x1ed0c
000000000001ecd8	cmp	w10, #0x2
000000000001ecdc	b.lt	0x1ed40
000000000001ece0	mov	x10, #0x0
000000000001ece4	mov	x11, x8
000000000001ece8	ldr	w12, [x11]
000000000001ecec	cmp	w12, #0x11
000000000001ecf0	b.gt	0x1ed48
000000000001ecf4	add	x10, x10, #0x1
000000000001ecf8	add	x11, x11, #0x10
000000000001ecfc	cmp	x9, x10
000000000001ed00	b.ne	0x1ece8
000000000001ed04	mov	x10, x9
000000000001ed08	b	0x1ed48
000000000001ed0c	mov	w10, #0x0
000000000001ed10	add	w11, w9, w10
000000000001ed14	cmp	w11, #0x0
000000000001ed18	cinc	w11, w11, lt
000000000001ed1c	asr	w11, w11, #1
000000000001ed20	sbfiz	x12, x11, #4, #32
000000000001ed24	ldr	w12, [x8, x12]
000000000001ed28	cmp	w12, #0x12
000000000001ed2c	csinc	w10, w10, w11, ge
000000000001ed30	csel	w9, w9, w11, lt
000000000001ed34	cmp	w10, w9
000000000001ed38	b.lt	0x1ed10
000000000001ed3c	b	0x1ed48
000000000001ed40	mov	w10, #0x0
000000000001ed44	b	0x1ed48
000000000001ed48	sxtw	x9, w10
000000000001ed4c	add	x8, x8, x9, lsl #4
000000000001ed50	ldr	x8, [x8, #0x8]
000000000001ed54	ldr	x8, [x8, #0x20]
000000000001ed58	mov	x0, x20
000000000001ed5c	mov	x1, x21
000000000001ed60	blr	x8
000000000001ed64	mov	x20, x0
000000000001ed68	mov	w21, #0x1
000000000001ed6c	mov	w24, #0xa0
000000000001ed70	b	0x1ed78
000000000001ed74	add	w21, w21, w0
000000000001ed78	ldr	x8, [x20]
000000000001ed7c	and	x8, x8, #0xfffffffffffffffc
000000000001ed80	ldr	x8, [x8]
000000000001ed84	ldr	w9, [x8, #0x3c]
000000000001ed88	ldr	x8, [x8, #0x40]
000000000001ed8c	tbnz	w9, #0x1f, 0x1edb0
000000000001ed90	and	x9, x9, x24
000000000001ed94	add	x8, x8, x9, lsl #4
000000000001ed98	ldr	x8, [x8, #0x8]
000000000001ed9c	ldr	x8, [x8]
000000000001eda0	mov	x0, x20
000000000001eda4	blr	x8
000000000001eda8	tbnz	w0, #0x0, 0x1ee4c
000000000001edac	b	0x1ef38
000000000001edb0	neg	w10, w9
000000000001edb4	mvn	w9, w9
000000000001edb8	cmp	w10, #0x9
000000000001edbc	b.ge	0x1edf4
000000000001edc0	cmp	w10, #0x2
000000000001edc4	b.lt	0x1ee28
000000000001edc8	mov	x10, #0x0
000000000001edcc	mov	x11, x8
000000000001edd0	ldr	w12, [x11]
000000000001edd4	cmp	w12, #0x9f
000000000001edd8	b.gt	0x1ee30
000000000001eddc	add	x10, x10, #0x1
000000000001ede0	add	x11, x11, #0x10
000000000001ede4	cmp	x9, x10
000000000001ede8	b.ne	0x1edd0
000000000001edec	mov	x10, x9
000000000001edf0	b	0x1ee30
000000000001edf4	mov	w10, #0x0
000000000001edf8	add	w11, w9, w10
000000000001edfc	cmp	w11, #0x0
000000000001ee00	cinc	w11, w11, lt
000000000001ee04	asr	w11, w11, #1
000000000001ee08	sbfiz	x12, x11, #4, #32
000000000001ee0c	ldr	w12, [x8, x12]
000000000001ee10	cmp	w12, #0xa0
000000000001ee14	csinc	w10, w10, w11, ge
000000000001ee18	csel	w9, w9, w11, lt
000000000001ee1c	cmp	w10, w9
000000000001ee20	b.lt	0x1edf8
000000000001ee24	b	0x1ee30
000000000001ee28	mov	w10, #0x0
000000000001ee2c	b	0x1ee30
000000000001ee30	sxtw	x9, w10
000000000001ee34	add	x8, x8, x9, lsl #4
000000000001ee38	ldr	x8, [x8, #0x8]
000000000001ee3c	ldr	x8, [x8]
000000000001ee40	mov	x0, x20
000000000001ee44	blr	x8
000000000001ee48	tbz	w0, #0x0, 0x1ef38
000000000001ee4c	ldarb	w8, [x23]
000000000001ee50	tbz	w8, #0x0, 0x1ee58
000000000001ee54	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001ee58	ldr	x8, [x20]
000000000001ee5c	and	x8, x8, #0xfffffffffffffffc
000000000001ee60	ldr	x8, [x8]
000000000001ee64	ldr	w9, [x8, #0x3c]
000000000001ee68	ldr	x8, [x8, #0x40]
000000000001ee6c	tbnz	w9, #0x1f, 0x1ee78
000000000001ee70	and	x9, x9, x24
000000000001ee74	b	0x1eefc
000000000001ee78	neg	w10, w9
000000000001ee7c	mvn	w9, w9
000000000001ee80	cmp	w10, #0x9
000000000001ee84	b.ge	0x1eebc
000000000001ee88	cmp	w10, #0x2
000000000001ee8c	b.lt	0x1eef0
000000000001ee90	mov	x10, #0x0
000000000001ee94	mov	x11, x8
000000000001ee98	ldr	w12, [x11]
000000000001ee9c	cmp	w12, #0x9f
000000000001eea0	b.gt	0x1eef8
000000000001eea4	add	x10, x10, #0x1
000000000001eea8	add	x11, x11, #0x10
000000000001eeac	cmp	x9, x10
000000000001eeb0	b.ne	0x1ee98
000000000001eeb4	mov	x10, x9
000000000001eeb8	b	0x1eef8
000000000001eebc	mov	w10, #0x0
000000000001eec0	add	w11, w9, w10
000000000001eec4	cmp	w11, #0x0
000000000001eec8	cinc	w11, w11, lt
000000000001eecc	asr	w11, w11, #1
000000000001eed0	sbfiz	x12, x11, #4, #32
000000000001eed4	ldr	w12, [x8, x12]
000000000001eed8	cmp	w12, #0xa0
000000000001eedc	csinc	w10, w10, w11, ge
000000000001eee0	csel	w9, w9, w11, lt
000000000001eee4	cmp	w10, w9
000000000001eee8	b.lt	0x1eec0
000000000001eeec	b	0x1eef8
000000000001eef0	mov	w10, #0x0
000000000001eef4	b	0x1eef8
000000000001eef8	sxtw	x9, w10
000000000001eefc	add	x8, x8, x9, lsl #4
000000000001ef00	ldr	x8, [x8, #0x8]
000000000001ef04	ldr	x8, [x8, #0x8]
000000000001ef08	mov	x0, x20
000000000001ef0c	mov	x1, x19
000000000001ef10	blr	x8
000000000001ef14	lsl	w8, w21, #5
000000000001ef18	sub	w21, w8, w21
000000000001ef1c	cbz	x0, 0x1ed74
000000000001ef20	ldr	x8, [x0]
000000000001ef24	and	x8, x8, #0xfffffffffffffffc
000000000001ef28	ldr	x8, [x8]
000000000001ef2c	ldr	x8, [x8, #0x78]
000000000001ef30	blr	x8
000000000001ef34	b	0x1ed74
000000000001ef38	ldr	x8, [sp, #0x8]
000000000001ef3c	str	x8, [x22, #0x110]
000000000001ef40	mov	x0, x21
000000000001ef44	ldp	x29, x30, [sp, #0x60]
000000000001ef48	ldp	x20, x19, [sp, #0x50]
000000000001ef4c	ldp	x22, x21, [sp, #0x40]
000000000001ef50	ldp	x24, x23, [sp, #0x30]
000000000001ef54	add	sp, sp, #0x70
000000000001ef58	ret
_kfun:kotlin.collections.AbstractList.Companion#orderedEquals(kotlin.collections.Collection<*>;kotlin.collections.Collection<*>){}kotlin.Boolean:
000000000001ef5c	sub	sp, sp, #0x90
000000000001ef60	stp	x26, x25, [sp, #0x40]
000000000001ef64	stp	x24, x23, [sp, #0x50]
000000000001ef68	stp	x22, x21, [sp, #0x60]
000000000001ef6c	stp	x20, x19, [sp, #0x70]
000000000001ef70	stp	x29, x30, [sp, #0x80]
000000000001ef74	add	x29, sp, #0x80
000000000001ef78	mov	x22, x1
000000000001ef7c	mov	x21, x0
000000000001ef80	movi.16b	v0, #0x0
000000000001ef84	stp	q0, q0, [sp]
000000000001ef88	str	xzr, [sp, #0x30]
000000000001ef8c	str	q0, [sp, #0x20]
000000000001ef90	mov	x20, sp
000000000001ef94	adrp	x0, 74 ; 0x68000
000000000001ef98	add	x0, x0, #0xa00
000000000001ef9c	ldr	x8, [x0]
000000000001efa0	blr	x8
000000000001efa4	ldr	x24, [x0]
000000000001efa8	ldr	x8, [x24, #0x110]
000000000001efac	str	x20, [x24, #0x110]
000000000001efb0	mov	x9, #0x700000000
000000000001efb4	stp	x8, x9, [sp, #0x8]
000000000001efb8	adr	x25, #0x6388b
000000000001efbc	nop
000000000001efc0	ldarb	w8, [x25]
000000000001efc4	tbz	w8, #0x0, 0x1efcc
000000000001efc8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001efcc	ldr	x8, [x21]
000000000001efd0	and	x8, x8, #0xfffffffffffffffc
000000000001efd4	ldr	x8, [x8]
000000000001efd8	ldr	w9, [x8, #0x3c]
000000000001efdc	ldr	x8, [x8, #0x40]
000000000001efe0	tbnz	w9, #0x1f, 0x1eff0
000000000001efe4	mov	w10, #0x12
000000000001efe8	and	x9, x9, x10
000000000001efec	b	0x1f074
000000000001eff0	neg	w10, w9
000000000001eff4	mvn	w9, w9
000000000001eff8	cmp	w10, #0x9
000000000001effc	b.ge	0x1f034
000000000001f000	cmp	w10, #0x2
000000000001f004	b.lt	0x1f068
000000000001f008	mov	x10, #0x0
000000000001f00c	mov	x11, x8
000000000001f010	ldr	w12, [x11]
000000000001f014	cmp	w12, #0x11
000000000001f018	b.gt	0x1f070
000000000001f01c	add	x10, x10, #0x1
000000000001f020	add	x11, x11, #0x10
000000000001f024	cmp	x9, x10
000000000001f028	b.ne	0x1f010
000000000001f02c	mov	x10, x9
000000000001f030	b	0x1f070
000000000001f034	mov	w10, #0x0
000000000001f038	add	w11, w9, w10
000000000001f03c	cmp	w11, #0x0
000000000001f040	cinc	w11, w11, lt
000000000001f044	asr	w11, w11, #1
000000000001f048	sbfiz	x12, x11, #4, #32
000000000001f04c	ldr	w12, [x8, x12]
000000000001f050	cmp	w12, #0x12
000000000001f054	csinc	w10, w10, w11, ge
000000000001f058	csel	w9, w9, w11, lt
000000000001f05c	cmp	w10, w9
000000000001f060	b.lt	0x1f038
000000000001f064	b	0x1f070
000000000001f068	mov	w10, #0x0
000000000001f06c	b	0x1f070
000000000001f070	sxtw	x9, w10
000000000001f074	add	x8, x8, x9, lsl #4
000000000001f078	ldr	x8, [x8, #0x8]
000000000001f07c	ldr	x8, [x8]
000000000001f080	mov	x0, x21
000000000001f084	blr	x8
000000000001f088	mov	x19, x0
000000000001f08c	ldr	x8, [x22]
000000000001f090	and	x8, x8, #0xfffffffffffffffc
000000000001f094	ldr	x8, [x8]
000000000001f098	ldr	w9, [x8, #0x3c]
000000000001f09c	ldr	x8, [x8, #0x40]
000000000001f0a0	tbnz	w9, #0x1f, 0x1f0b0
000000000001f0a4	mov	w10, #0x12
000000000001f0a8	and	x9, x9, x10
000000000001f0ac	b	0x1f134
000000000001f0b0	neg	w10, w9
000000000001f0b4	mvn	w9, w9
000000000001f0b8	cmp	w10, #0x9
000000000001f0bc	b.ge	0x1f0f4
000000000001f0c0	cmp	w10, #0x2
000000000001f0c4	b.lt	0x1f128
000000000001f0c8	mov	x10, #0x0
000000000001f0cc	mov	x11, x8
000000000001f0d0	ldr	w12, [x11]
000000000001f0d4	cmp	w12, #0x11
000000000001f0d8	b.gt	0x1f130
000000000001f0dc	add	x10, x10, #0x1
000000000001f0e0	add	x11, x11, #0x10
000000000001f0e4	cmp	x9, x10
000000000001f0e8	b.ne	0x1f0d0
000000000001f0ec	mov	x10, x9
000000000001f0f0	b	0x1f130
000000000001f0f4	mov	w10, #0x0
000000000001f0f8	add	w11, w9, w10
000000000001f0fc	cmp	w11, #0x0
000000000001f100	cinc	w11, w11, lt
000000000001f104	asr	w11, w11, #1
000000000001f108	sbfiz	x12, x11, #4, #32
000000000001f10c	ldr	w12, [x8, x12]
000000000001f110	cmp	w12, #0x12
000000000001f114	csinc	w10, w10, w11, ge
000000000001f118	csel	w9, w9, w11, lt
000000000001f11c	cmp	w10, w9
000000000001f120	b.lt	0x1f0f8
000000000001f124	b	0x1f130
000000000001f128	mov	w10, #0x0
000000000001f12c	b	0x1f130
000000000001f130	sxtw	x9, w10
000000000001f134	add	x8, x8, x9, lsl #4
000000000001f138	ldr	x8, [x8, #0x8]
000000000001f13c	ldr	x8, [x8]
000000000001f140	mov	x0, x22
000000000001f144	blr	x8
000000000001f148	cmp	w19, w0
000000000001f14c	b.ne	0x1f570
000000000001f150	add	x23, x20, #0x20
000000000001f154	add	x1, x20, #0x18
000000000001f158	ldr	x8, [x22]
000000000001f15c	and	x8, x8, #0xfffffffffffffffc
000000000001f160	ldr	x8, [x8]
000000000001f164	ldr	w9, [x8, #0x3c]
000000000001f168	ldr	x8, [x8, #0x40]
000000000001f16c	tbnz	w9, #0x1f, 0x1f17c
000000000001f170	mov	w10, #0x12
000000000001f174	and	x9, x9, x10
000000000001f178	b	0x1f200
000000000001f17c	neg	w10, w9
000000000001f180	mvn	w9, w9
000000000001f184	cmp	w10, #0x9
000000000001f188	b.ge	0x1f1c0
000000000001f18c	cmp	w10, #0x2
000000000001f190	b.lt	0x1f1f4
000000000001f194	mov	x10, #0x0
000000000001f198	mov	x11, x8
000000000001f19c	ldr	w12, [x11]
000000000001f1a0	cmp	w12, #0x11
000000000001f1a4	b.gt	0x1f1fc
000000000001f1a8	add	x10, x10, #0x1
000000000001f1ac	add	x11, x11, #0x10
000000000001f1b0	cmp	x9, x10
000000000001f1b4	b.ne	0x1f19c
000000000001f1b8	mov	x10, x9
000000000001f1bc	b	0x1f1fc
000000000001f1c0	mov	w10, #0x0
000000000001f1c4	add	w11, w9, w10
000000000001f1c8	cmp	w11, #0x0
000000000001f1cc	cinc	w11, w11, lt
000000000001f1d0	asr	w11, w11, #1
000000000001f1d4	sbfiz	x12, x11, #4, #32
000000000001f1d8	ldr	w12, [x8, x12]
000000000001f1dc	cmp	w12, #0x12
000000000001f1e0	csinc	w10, w10, w11, ge
000000000001f1e4	csel	w9, w9, w11, lt
000000000001f1e8	cmp	w10, w9
000000000001f1ec	b.lt	0x1f1c4
000000000001f1f0	b	0x1f1fc
000000000001f1f4	mov	w10, #0x0
000000000001f1f8	b	0x1f1fc
000000000001f1fc	sxtw	x9, w10
000000000001f200	add	x19, x20, #0x30
000000000001f204	add	x20, x20, #0x28
000000000001f208	add	x8, x8, x9, lsl #4
000000000001f20c	ldr	x8, [x8, #0x8]
000000000001f210	ldr	x8, [x8, #0x20]
000000000001f214	mov	x0, x22
000000000001f218	blr	x8
000000000001f21c	mov	x22, x0
000000000001f220	ldr	x8, [x21]
000000000001f224	and	x8, x8, #0xfffffffffffffffc
000000000001f228	ldr	x8, [x8]
000000000001f22c	ldr	w9, [x8, #0x3c]
000000000001f230	ldr	x8, [x8, #0x40]
000000000001f234	tbnz	w9, #0x1f, 0x1f244
000000000001f238	mov	w10, #0x12
000000000001f23c	and	x9, x9, x10
000000000001f240	b	0x1f2c8
000000000001f244	neg	w10, w9
000000000001f248	mvn	w9, w9
000000000001f24c	cmp	w10, #0x9
000000000001f250	b.ge	0x1f288
000000000001f254	cmp	w10, #0x2
000000000001f258	b.lt	0x1f2bc
000000000001f25c	mov	x10, #0x0
000000000001f260	mov	x11, x8
000000000001f264	ldr	w12, [x11]
000000000001f268	cmp	w12, #0x11
000000000001f26c	b.gt	0x1f2c4
000000000001f270	add	x10, x10, #0x1
000000000001f274	add	x11, x11, #0x10
000000000001f278	cmp	x9, x10
000000000001f27c	b.ne	0x1f264
000000000001f280	mov	x10, x9
000000000001f284	b	0x1f2c4
000000000001f288	mov	w10, #0x0
000000000001f28c	add	w11, w9, w10
000000000001f290	cmp	w11, #0x0
000000000001f294	cinc	w11, w11, lt
000000000001f298	asr	w11, w11, #1
000000000001f29c	sbfiz	x12, x11, #4, #32
000000000001f2a0	ldr	w12, [x8, x12]
000000000001f2a4	cmp	w12, #0x12
000000000001f2a8	csinc	w10, w10, w11, ge
000000000001f2ac	csel	w9, w9, w11, lt
000000000001f2b0	cmp	w10, w9
000000000001f2b4	b.lt	0x1f28c
000000000001f2b8	b	0x1f2c4
000000000001f2bc	mov	w10, #0x0
000000000001f2c0	b	0x1f2c4
000000000001f2c4	sxtw	x9, w10
000000000001f2c8	add	x8, x8, x9, lsl #4
000000000001f2cc	ldr	x8, [x8, #0x8]
000000000001f2d0	ldr	x8, [x8, #0x20]
000000000001f2d4	mov	x0, x21
000000000001f2d8	mov	x1, x23
000000000001f2dc	blr	x8
000000000001f2e0	mov	x21, x0
000000000001f2e4	mov	w26, #0xa0
000000000001f2e8	b	0x1f2f0
000000000001f2ec	cbnz	x1, 0x1f570
000000000001f2f0	ldr	x8, [x21]
000000000001f2f4	and	x8, x8, #0xfffffffffffffffc
000000000001f2f8	ldr	x8, [x8]
000000000001f2fc	ldr	w9, [x8, #0x3c]
000000000001f300	ldr	x8, [x8, #0x40]
000000000001f304	tbnz	w9, #0x1f, 0x1f328
000000000001f308	and	x9, x9, x26
000000000001f30c	add	x8, x8, x9, lsl #4
000000000001f310	ldr	x8, [x8, #0x8]
000000000001f314	ldr	x8, [x8]
000000000001f318	mov	x0, x21
000000000001f31c	blr	x8
000000000001f320	tbnz	w0, #0x0, 0x1f3c4
000000000001f324	b	0x1f578
000000000001f328	neg	w10, w9
000000000001f32c	mvn	w9, w9
000000000001f330	cmp	w10, #0x9
000000000001f334	b.ge	0x1f36c
000000000001f338	cmp	w10, #0x2
000000000001f33c	b.lt	0x1f3a0
000000000001f340	mov	x10, #0x0
000000000001f344	mov	x11, x8
000000000001f348	ldr	w12, [x11]
000000000001f34c	cmp	w12, #0x9f
000000000001f350	b.gt	0x1f3a8
000000000001f354	add	x10, x10, #0x1
000000000001f358	add	x11, x11, #0x10
000000000001f35c	cmp	x9, x10
000000000001f360	b.ne	0x1f348
000000000001f364	mov	x10, x9
000000000001f368	b	0x1f3a8
000000000001f36c	mov	w10, #0x0
000000000001f370	add	w11, w9, w10
000000000001f374	cmp	w11, #0x0
000000000001f378	cinc	w11, w11, lt
000000000001f37c	asr	w11, w11, #1
000000000001f380	sbfiz	x12, x11, #4, #32
000000000001f384	ldr	w12, [x8, x12]
000000000001f388	cmp	w12, #0xa0
000000000001f38c	csinc	w10, w10, w11, ge
000000000001f390	csel	w9, w9, w11, lt
000000000001f394	cmp	w10, w9
000000000001f398	b.lt	0x1f370
000000000001f39c	b	0x1f3a8
000000000001f3a0	mov	w10, #0x0
000000000001f3a4	b	0x1f3a8
000000000001f3a8	sxtw	x9, w10
000000000001f3ac	add	x8, x8, x9, lsl #4
000000000001f3b0	ldr	x8, [x8, #0x8]
000000000001f3b4	ldr	x8, [x8]
000000000001f3b8	mov	x0, x21
000000000001f3bc	blr	x8
000000000001f3c0	tbz	w0, #0x0, 0x1f578
000000000001f3c4	ldarb	w8, [x25]
000000000001f3c8	tbz	w8, #0x0, 0x1f3d0
000000000001f3cc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001f3d0	ldr	x8, [x21]
000000000001f3d4	and	x8, x8, #0xfffffffffffffffc
000000000001f3d8	ldr	x8, [x8]
000000000001f3dc	ldr	w9, [x8, #0x3c]
000000000001f3e0	ldr	x8, [x8, #0x40]
000000000001f3e4	tbnz	w9, #0x1f, 0x1f3f0
000000000001f3e8	and	x9, x9, x26
000000000001f3ec	b	0x1f474
000000000001f3f0	neg	w10, w9
000000000001f3f4	mvn	w9, w9
000000000001f3f8	cmp	w10, #0x9
000000000001f3fc	b.ge	0x1f434
000000000001f400	cmp	w10, #0x2
000000000001f404	b.lt	0x1f468
000000000001f408	mov	x10, #0x0
000000000001f40c	mov	x11, x8
000000000001f410	ldr	w12, [x11]
000000000001f414	cmp	w12, #0x9f
000000000001f418	b.gt	0x1f470
000000000001f41c	add	x10, x10, #0x1
000000000001f420	add	x11, x11, #0x10
000000000001f424	cmp	x9, x10
000000000001f428	b.ne	0x1f410
000000000001f42c	mov	x10, x9
000000000001f430	b	0x1f470
000000000001f434	mov	w10, #0x0
000000000001f438	add	w11, w9, w10
000000000001f43c	cmp	w11, #0x0
000000000001f440	cinc	w11, w11, lt
000000000001f444	asr	w11, w11, #1
000000000001f448	sbfiz	x12, x11, #4, #32
000000000001f44c	ldr	w12, [x8, x12]
000000000001f450	cmp	w12, #0xa0
000000000001f454	csinc	w10, w10, w11, ge
000000000001f458	csel	w9, w9, w11, lt
000000000001f45c	cmp	w10, w9
000000000001f460	b.lt	0x1f438
000000000001f464	b	0x1f470
000000000001f468	mov	w10, #0x0
000000000001f46c	b	0x1f470
000000000001f470	sxtw	x9, w10
000000000001f474	add	x8, x8, x9, lsl #4
000000000001f478	ldr	x8, [x8, #0x8]
000000000001f47c	ldr	x8, [x8, #0x8]
000000000001f480	mov	x0, x21
000000000001f484	mov	x1, x20
000000000001f488	blr	x8
000000000001f48c	mov	x23, x0
000000000001f490	ldr	x8, [x22]
000000000001f494	and	x8, x8, #0xfffffffffffffffc
000000000001f498	ldr	x8, [x8]
000000000001f49c	ldr	w9, [x8, #0x3c]
000000000001f4a0	ldr	x8, [x8, #0x40]
000000000001f4a4	tbnz	w9, #0x1f, 0x1f4b0
000000000001f4a8	and	x9, x9, x26
000000000001f4ac	b	0x1f534
000000000001f4b0	neg	w10, w9
000000000001f4b4	mvn	w9, w9
000000000001f4b8	cmp	w10, #0x9
000000000001f4bc	b.ge	0x1f4f4
000000000001f4c0	cmp	w10, #0x2
000000000001f4c4	b.lt	0x1f528
000000000001f4c8	mov	x10, #0x0
000000000001f4cc	mov	x11, x8
000000000001f4d0	ldr	w12, [x11]
000000000001f4d4	cmp	w12, #0x9f
000000000001f4d8	b.gt	0x1f530
000000000001f4dc	add	x10, x10, #0x1
000000000001f4e0	add	x11, x11, #0x10
000000000001f4e4	cmp	x9, x10
000000000001f4e8	b.ne	0x1f4d0
000000000001f4ec	mov	x10, x9
000000000001f4f0	b	0x1f530
000000000001f4f4	mov	w10, #0x0
000000000001f4f8	add	w11, w9, w10
000000000001f4fc	cmp	w11, #0x0
000000000001f500	cinc	w11, w11, lt
000000000001f504	asr	w11, w11, #1
000000000001f508	sbfiz	x12, x11, #4, #32
000000000001f50c	ldr	w12, [x8, x12]
000000000001f510	cmp	w12, #0xa0
000000000001f514	csinc	w10, w10, w11, ge
000000000001f518	csel	w9, w9, w11, lt
000000000001f51c	cmp	w10, w9
000000000001f520	b.lt	0x1f4f8
000000000001f524	b	0x1f530
000000000001f528	mov	w10, #0x0
000000000001f52c	b	0x1f530
000000000001f530	sxtw	x9, w10
000000000001f534	add	x8, x8, x9, lsl #4
000000000001f538	ldr	x8, [x8, #0x8]
000000000001f53c	ldr	x8, [x8, #0x8]
000000000001f540	mov	x0, x22
000000000001f544	mov	x1, x19
000000000001f548	blr	x8
000000000001f54c	mov	x1, x0
000000000001f550	cbz	x23, 0x1f2ec
000000000001f554	ldr	x8, [x23]
000000000001f558	and	x8, x8, #0xfffffffffffffffc
000000000001f55c	ldr	x8, [x8]
000000000001f560	ldr	x8, [x8, #0x70]
000000000001f564	mov	x0, x23
000000000001f568	blr	x8
000000000001f56c	tbnz	w0, #0x0, 0x1f2f0
000000000001f570	mov	w0, #0x0
000000000001f574	b	0x1f57c
000000000001f578	mov	w0, #0x1
000000000001f57c	ldr	x8, [sp, #0x8]
000000000001f580	str	x8, [x24, #0x110]
000000000001f584	ldp	x29, x30, [sp, #0x80]
000000000001f588	ldp	x20, x19, [sp, #0x70]
000000000001f58c	ldp	x22, x21, [sp, #0x60]
000000000001f590	ldp	x24, x23, [sp, #0x50]
000000000001f594	ldp	x26, x25, [sp, #0x40]
000000000001f598	add	sp, sp, #0x90
000000000001f59c	ret
_kfun:kotlin.collections.AbstractSet#equals(kotlin.Any?){}kotlin.Boolean:
000000000001f5a0	stp	x20, x19, [sp, #-0x20]!
000000000001f5a4	stp	x29, x30, [sp, #0x10]
000000000001f5a8	add	x29, sp, #0x10
000000000001f5ac	mov	x19, x1
000000000001f5b0	mov	x20, x0
000000000001f5b4	adr	x8, #0x6328f
000000000001f5b8	nop
000000000001f5bc	ldarb	w8, [x8]
000000000001f5c0	tbz	w8, #0x0, 0x1f5c8
000000000001f5c4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001f5c8	cmp	x19, x20
000000000001f5cc	b.eq	0x1f604
000000000001f5d0	cbz	x19, 0x1f6b8
000000000001f5d4	ldr	x8, [x19]
000000000001f5d8	and	x8, x8, #0xfffffffffffffffc
000000000001f5dc	ldr	x8, [x8]
000000000001f5e0	ldr	w9, [x8, #0x3c]
000000000001f5e4	ldr	x8, [x8, #0x40]
000000000001f5e8	tbnz	w9, #0x1f, 0x1f614
000000000001f5ec	and	x9, x9, #0x1e
000000000001f5f0	lsl	x9, x9, #4
000000000001f5f4	ldr	w8, [x8, x9]
000000000001f5f8	cmp	w8, #0x1e
000000000001f5fc	b.ne	0x1f6b8
000000000001f600	b	0x1f6dc
000000000001f604	mov	w0, #0x1
000000000001f608	ldp	x29, x30, [sp, #0x10]
000000000001f60c	ldp	x20, x19, [sp], #0x20
000000000001f610	ret
000000000001f614	neg	w10, w9
000000000001f618	mvn	w9, w9
000000000001f61c	cmp	w10, #0x9
000000000001f620	b.ge	0x1f66c
000000000001f624	cmp	w10, #0x2
000000000001f628	b.lt	0x1f6a0
000000000001f62c	mov	x10, #0x0
000000000001f630	mov	x11, x8
000000000001f634	ldr	w12, [x11]
000000000001f638	cmp	w12, #0x1d
000000000001f63c	b.gt	0x1f6c8
000000000001f640	add	x10, x10, #0x1
000000000001f644	add	x11, x11, #0x10
000000000001f648	cmp	x9, x10
000000000001f64c	b.ne	0x1f634
000000000001f650	mov	x10, x9
000000000001f654	sxtw	x9, w10
000000000001f658	lsl	x9, x9, #4
000000000001f65c	ldr	w8, [x8, x9]
000000000001f660	cmp	w8, #0x1e
000000000001f664	b.ne	0x1f6b8
000000000001f668	b	0x1f6dc
000000000001f66c	mov	w10, #0x0
000000000001f670	add	w11, w9, w10
000000000001f674	cmp	w11, #0x0
000000000001f678	cinc	w11, w11, lt
000000000001f67c	asr	w11, w11, #1
000000000001f680	sbfiz	x12, x11, #4, #32
000000000001f684	ldr	w12, [x8, x12]
000000000001f688	cmp	w12, #0x1e
000000000001f68c	csinc	w10, w10, w11, ge
000000000001f690	csel	w9, w9, w11, lt
000000000001f694	cmp	w10, w9
000000000001f698	b.lt	0x1f670
000000000001f69c	b	0x1f6c8
000000000001f6a0	mov	w10, #0x0
000000000001f6a4	sxtw	x9, w10
000000000001f6a8	lsl	x9, x9, #4
000000000001f6ac	ldr	w8, [x8, x9]
000000000001f6b0	cmp	w8, #0x1e
000000000001f6b4	b.eq	0x1f6dc
000000000001f6b8	mov	w0, #0x0
000000000001f6bc	ldp	x29, x30, [sp, #0x10]
000000000001f6c0	ldp	x20, x19, [sp], #0x20
000000000001f6c4	ret
000000000001f6c8	sxtw	x9, w10
000000000001f6cc	lsl	x9, x9, #4
000000000001f6d0	ldr	w8, [x8, x9]
000000000001f6d4	cmp	w8, #0x1e
000000000001f6d8	b.ne	0x1f6b8
000000000001f6dc	mov	x0, x20
000000000001f6e0	mov	x1, x19
000000000001f6e4	ldp	x29, x30, [sp, #0x10]
000000000001f6e8	ldp	x20, x19, [sp], #0x20
000000000001f6ec	b	"_kfun:kotlin.collections.AbstractSet.Companion#setEquals(kotlin.collections.Set<*>;kotlin.collections.Set<*>){}kotlin.Boolean"
_kfun:kotlin.collections.AbstractSet#hashCode(){}kotlin.Int:
000000000001f6f0	stp	x20, x19, [sp, #-0x20]!
000000000001f6f4	stp	x29, x30, [sp, #0x10]
000000000001f6f8	add	x29, sp, #0x10
000000000001f6fc	mov	x19, x0
000000000001f700	adr	x8, #0x63143
000000000001f704	nop
000000000001f708	ldarb	w8, [x8]
000000000001f70c	tbz	w8, #0x0, 0x1f714
000000000001f710	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001f714	mov	x0, x19
000000000001f718	ldp	x29, x30, [sp, #0x10]
000000000001f71c	ldp	x20, x19, [sp], #0x20
000000000001f720	b	"_kfun:kotlin.collections.AbstractSet.Companion#unorderedHashCode(kotlin.collections.Collection<*>){}kotlin.Int"
_kfun:kotlin.collections.AbstractSet.Companion#unorderedHashCode(kotlin.collections.Collection<*>){}kotlin.Int:
000000000001f724	sub	sp, sp, #0x70
000000000001f728	stp	x24, x23, [sp, #0x30]
000000000001f72c	stp	x22, x21, [sp, #0x40]
000000000001f730	stp	x20, x19, [sp, #0x50]
000000000001f734	stp	x29, x30, [sp, #0x60]
000000000001f738	add	x29, sp, #0x60
000000000001f73c	mov	x20, x0
000000000001f740	movi.16b	v0, #0x0
000000000001f744	stp	q0, q0, [sp]
000000000001f748	str	xzr, [sp, #0x20]
000000000001f74c	mov	x19, sp
000000000001f750	add	x21, x19, #0x18
000000000001f754	adrp	x0, 73 ; 0x68000
000000000001f758	add	x0, x0, #0xa00
000000000001f75c	ldr	x8, [x0]
000000000001f760	blr	x8
000000000001f764	ldr	x22, [x0]
000000000001f768	ldr	x8, [x22, #0x110]
000000000001f76c	str	x19, [x22, #0x110]
000000000001f770	mov	x9, #0x500000000
000000000001f774	stp	x8, x9, [sp, #0x8]
000000000001f778	adr	x23, #0x630cb
000000000001f77c	nop
000000000001f780	ldarb	w8, [x23]
000000000001f784	tbz	w8, #0x0, 0x1f78c
000000000001f788	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001f78c	add	x19, x19, #0x20
000000000001f790	ldr	x8, [x20]
000000000001f794	and	x8, x8, #0xfffffffffffffffc
000000000001f798	ldr	x8, [x8]
000000000001f79c	ldr	w9, [x8, #0x3c]
000000000001f7a0	ldr	x8, [x8, #0x40]
000000000001f7a4	tbnz	w9, #0x1f, 0x1f7b4
000000000001f7a8	mov	w10, #0x12
000000000001f7ac	and	x9, x9, x10
000000000001f7b0	b	0x1f838
000000000001f7b4	neg	w10, w9
000000000001f7b8	mvn	w9, w9
000000000001f7bc	cmp	w10, #0x9
000000000001f7c0	b.ge	0x1f7f8
000000000001f7c4	cmp	w10, #0x2
000000000001f7c8	b.lt	0x1f82c
000000000001f7cc	mov	x10, #0x0
000000000001f7d0	mov	x11, x8
000000000001f7d4	ldr	w12, [x11]
000000000001f7d8	cmp	w12, #0x11
000000000001f7dc	b.gt	0x1f834
000000000001f7e0	add	x10, x10, #0x1
000000000001f7e4	add	x11, x11, #0x10
000000000001f7e8	cmp	x9, x10
000000000001f7ec	b.ne	0x1f7d4
000000000001f7f0	mov	x10, x9
000000000001f7f4	b	0x1f834
000000000001f7f8	mov	w10, #0x0
000000000001f7fc	add	w11, w9, w10
000000000001f800	cmp	w11, #0x0
000000000001f804	cinc	w11, w11, lt
000000000001f808	asr	w11, w11, #1
000000000001f80c	sbfiz	x12, x11, #4, #32
000000000001f810	ldr	w12, [x8, x12]
000000000001f814	cmp	w12, #0x12
000000000001f818	csinc	w10, w10, w11, ge
000000000001f81c	csel	w9, w9, w11, lt
000000000001f820	cmp	w10, w9
000000000001f824	b.lt	0x1f7fc
000000000001f828	b	0x1f834
000000000001f82c	mov	w10, #0x0
000000000001f830	b	0x1f834
000000000001f834	sxtw	x9, w10
000000000001f838	add	x8, x8, x9, lsl #4
000000000001f83c	ldr	x8, [x8, #0x8]
000000000001f840	ldr	x8, [x8, #0x20]
000000000001f844	mov	x0, x20
000000000001f848	mov	x1, x21
000000000001f84c	blr	x8
000000000001f850	mov	x21, x0
000000000001f854	mov	w20, #0x0
000000000001f858	mov	w24, #0xa0
000000000001f85c	b	0x1f864
000000000001f860	add	w20, w20, w0
000000000001f864	ldr	x8, [x21]
000000000001f868	and	x8, x8, #0xfffffffffffffffc
000000000001f86c	ldr	x8, [x8]
000000000001f870	ldr	w9, [x8, #0x3c]
000000000001f874	ldr	x8, [x8, #0x40]
000000000001f878	tbnz	w9, #0x1f, 0x1f89c
000000000001f87c	and	x9, x9, x24
000000000001f880	add	x8, x8, x9, lsl #4
000000000001f884	ldr	x8, [x8, #0x8]
000000000001f888	ldr	x8, [x8]
000000000001f88c	mov	x0, x21
000000000001f890	blr	x8
000000000001f894	tbnz	w0, #0x0, 0x1f938
000000000001f898	b	0x1fa1c
000000000001f89c	neg	w10, w9
000000000001f8a0	mvn	w9, w9
000000000001f8a4	cmp	w10, #0x9
000000000001f8a8	b.ge	0x1f8e0
000000000001f8ac	cmp	w10, #0x2
000000000001f8b0	b.lt	0x1f914
000000000001f8b4	mov	x10, #0x0
000000000001f8b8	mov	x11, x8
000000000001f8bc	ldr	w12, [x11]
000000000001f8c0	cmp	w12, #0x9f
000000000001f8c4	b.gt	0x1f91c
000000000001f8c8	add	x10, x10, #0x1
000000000001f8cc	add	x11, x11, #0x10
000000000001f8d0	cmp	x9, x10
000000000001f8d4	b.ne	0x1f8bc
000000000001f8d8	mov	x10, x9
000000000001f8dc	b	0x1f91c
000000000001f8e0	mov	w10, #0x0
000000000001f8e4	add	w11, w9, w10
000000000001f8e8	cmp	w11, #0x0
000000000001f8ec	cinc	w11, w11, lt
000000000001f8f0	asr	w11, w11, #1
000000000001f8f4	sbfiz	x12, x11, #4, #32
000000000001f8f8	ldr	w12, [x8, x12]
000000000001f8fc	cmp	w12, #0xa0
000000000001f900	csinc	w10, w10, w11, ge
000000000001f904	csel	w9, w9, w11, lt
000000000001f908	cmp	w10, w9
000000000001f90c	b.lt	0x1f8e4
000000000001f910	b	0x1f91c
000000000001f914	mov	w10, #0x0
000000000001f918	b	0x1f91c
000000000001f91c	sxtw	x9, w10
000000000001f920	add	x8, x8, x9, lsl #4
000000000001f924	ldr	x8, [x8, #0x8]
000000000001f928	ldr	x8, [x8]
000000000001f92c	mov	x0, x21
000000000001f930	blr	x8
000000000001f934	tbz	w0, #0x0, 0x1fa1c
000000000001f938	ldarb	w8, [x23]
000000000001f93c	tbz	w8, #0x0, 0x1f944
000000000001f940	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001f944	ldr	x8, [x21]
000000000001f948	and	x8, x8, #0xfffffffffffffffc
000000000001f94c	ldr	x8, [x8]
000000000001f950	ldr	w9, [x8, #0x3c]
000000000001f954	ldr	x8, [x8, #0x40]
000000000001f958	tbnz	w9, #0x1f, 0x1f964
000000000001f95c	and	x9, x9, x24
000000000001f960	b	0x1f9e8
000000000001f964	neg	w10, w9
000000000001f968	mvn	w9, w9
000000000001f96c	cmp	w10, #0x9
000000000001f970	b.ge	0x1f9a8
000000000001f974	cmp	w10, #0x2
000000000001f978	b.lt	0x1f9dc
000000000001f97c	mov	x10, #0x0
000000000001f980	mov	x11, x8
000000000001f984	ldr	w12, [x11]
000000000001f988	cmp	w12, #0x9f
000000000001f98c	b.gt	0x1f9e4
000000000001f990	add	x10, x10, #0x1
000000000001f994	add	x11, x11, #0x10
000000000001f998	cmp	x9, x10
000000000001f99c	b.ne	0x1f984
000000000001f9a0	mov	x10, x9
000000000001f9a4	b	0x1f9e4
000000000001f9a8	mov	w10, #0x0
000000000001f9ac	add	w11, w9, w10
000000000001f9b0	cmp	w11, #0x0
000000000001f9b4	cinc	w11, w11, lt
000000000001f9b8	asr	w11, w11, #1
000000000001f9bc	sbfiz	x12, x11, #4, #32
000000000001f9c0	ldr	w12, [x8, x12]
000000000001f9c4	cmp	w12, #0xa0
000000000001f9c8	csinc	w10, w10, w11, ge
000000000001f9cc	csel	w9, w9, w11, lt
000000000001f9d0	cmp	w10, w9
000000000001f9d4	b.lt	0x1f9ac
000000000001f9d8	b	0x1f9e4
000000000001f9dc	mov	w10, #0x0
000000000001f9e0	b	0x1f9e4
000000000001f9e4	sxtw	x9, w10
000000000001f9e8	add	x8, x8, x9, lsl #4
000000000001f9ec	ldr	x8, [x8, #0x8]
000000000001f9f0	ldr	x8, [x8, #0x8]
000000000001f9f4	mov	x0, x21
000000000001f9f8	mov	x1, x19
000000000001f9fc	blr	x8
000000000001fa00	cbz	x0, 0x1f860
000000000001fa04	ldr	x8, [x0]
000000000001fa08	and	x8, x8, #0xfffffffffffffffc
000000000001fa0c	ldr	x8, [x8]
000000000001fa10	ldr	x8, [x8, #0x78]
000000000001fa14	blr	x8
000000000001fa18	b	0x1f860
000000000001fa1c	ldr	x8, [sp, #0x8]
000000000001fa20	str	x8, [x22, #0x110]
000000000001fa24	mov	x0, x20
000000000001fa28	ldp	x29, x30, [sp, #0x60]
000000000001fa2c	ldp	x20, x19, [sp, #0x50]
000000000001fa30	ldp	x22, x21, [sp, #0x40]
000000000001fa34	ldp	x24, x23, [sp, #0x30]
000000000001fa38	add	sp, sp, #0x70
000000000001fa3c	ret
_kfun:kotlin.collections.AbstractSet.Companion#setEquals(kotlin.collections.Set<*>;kotlin.collections.Set<*>){}kotlin.Boolean:
000000000001fa40	stp	x22, x21, [sp, #-0x30]!
000000000001fa44	stp	x20, x19, [sp, #0x10]
000000000001fa48	stp	x29, x30, [sp, #0x20]
000000000001fa4c	add	x29, sp, #0x20
000000000001fa50	mov	x19, x1
000000000001fa54	mov	x20, x0
000000000001fa58	adr	x8, #0x62deb
000000000001fa5c	nop
000000000001fa60	ldarb	w8, [x8]
000000000001fa64	tbz	w8, #0x0, 0x1fa6c
000000000001fa68	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001fa6c	ldr	x8, [x20]
000000000001fa70	and	x8, x8, #0xfffffffffffffffc
000000000001fa74	ldr	x8, [x8]
000000000001fa78	ldr	w9, [x8, #0x3c]
000000000001fa7c	ldr	x8, [x8, #0x40]
000000000001fa80	tbnz	w9, #0x1f, 0x1fa8c
000000000001fa84	and	x9, x9, #0x1e
000000000001fa88	b	0x1fb10
000000000001fa8c	neg	w10, w9
000000000001fa90	mvn	w9, w9
000000000001fa94	cmp	w10, #0x9
000000000001fa98	b.ge	0x1fad0
000000000001fa9c	cmp	w10, #0x2
000000000001faa0	b.lt	0x1fb04
000000000001faa4	mov	x10, #0x0
000000000001faa8	mov	x11, x8
000000000001faac	ldr	w12, [x11]
000000000001fab0	cmp	w12, #0x1d
000000000001fab4	b.gt	0x1fb0c
000000000001fab8	add	x10, x10, #0x1
000000000001fabc	add	x11, x11, #0x10
000000000001fac0	cmp	x9, x10
000000000001fac4	b.ne	0x1faac
000000000001fac8	mov	x10, x9
000000000001facc	b	0x1fb0c
000000000001fad0	mov	w10, #0x0
000000000001fad4	add	w11, w9, w10
000000000001fad8	cmp	w11, #0x0
000000000001fadc	cinc	w11, w11, lt
000000000001fae0	asr	w11, w11, #1
000000000001fae4	sbfiz	x12, x11, #4, #32
000000000001fae8	ldr	w12, [x8, x12]
000000000001faec	cmp	w12, #0x1e
000000000001faf0	csinc	w10, w10, w11, ge
000000000001faf4	csel	w9, w9, w11, lt
000000000001faf8	cmp	w10, w9
000000000001fafc	b.lt	0x1fad4
000000000001fb00	b	0x1fb0c
000000000001fb04	mov	w10, #0x0
000000000001fb08	b	0x1fb0c
000000000001fb0c	sxtw	x9, w10
000000000001fb10	add	x8, x8, x9, lsl #4
000000000001fb14	ldr	x8, [x8, #0x8]
000000000001fb18	ldr	x8, [x8]
000000000001fb1c	mov	x0, x20
000000000001fb20	blr	x8
000000000001fb24	mov	x21, x0
000000000001fb28	ldr	x8, [x19]
000000000001fb2c	and	x8, x8, #0xfffffffffffffffc
000000000001fb30	ldr	x8, [x8]
000000000001fb34	ldr	w9, [x8, #0x3c]
000000000001fb38	ldr	x8, [x8, #0x40]
000000000001fb3c	tbnz	w9, #0x1f, 0x1fb48
000000000001fb40	and	x9, x9, #0x1e
000000000001fb44	b	0x1fbcc
000000000001fb48	neg	w10, w9
000000000001fb4c	mvn	w9, w9
000000000001fb50	cmp	w10, #0x9
000000000001fb54	b.ge	0x1fb8c
000000000001fb58	cmp	w10, #0x2
000000000001fb5c	b.lt	0x1fbc0
000000000001fb60	mov	x10, #0x0
000000000001fb64	mov	x11, x8
000000000001fb68	ldr	w12, [x11]
000000000001fb6c	cmp	w12, #0x1d
000000000001fb70	b.gt	0x1fbc8
000000000001fb74	add	x10, x10, #0x1
000000000001fb78	add	x11, x11, #0x10
000000000001fb7c	cmp	x9, x10
000000000001fb80	b.ne	0x1fb68
000000000001fb84	mov	x10, x9
000000000001fb88	b	0x1fbc8
000000000001fb8c	mov	w10, #0x0
000000000001fb90	add	w11, w9, w10
000000000001fb94	cmp	w11, #0x0
000000000001fb98	cinc	w11, w11, lt
000000000001fb9c	asr	w11, w11, #1
000000000001fba0	sbfiz	x12, x11, #4, #32
000000000001fba4	ldr	w12, [x8, x12]
000000000001fba8	cmp	w12, #0x1e
000000000001fbac	csinc	w10, w10, w11, ge
000000000001fbb0	csel	w9, w9, w11, lt
000000000001fbb4	cmp	w10, w9
000000000001fbb8	b.lt	0x1fb90
000000000001fbbc	b	0x1fbc8
000000000001fbc0	mov	w10, #0x0
000000000001fbc4	b	0x1fbc8
000000000001fbc8	sxtw	x9, w10
000000000001fbcc	add	x8, x8, x9, lsl #4
000000000001fbd0	ldr	x8, [x8, #0x8]
000000000001fbd4	ldr	x8, [x8]
000000000001fbd8	mov	x0, x19
000000000001fbdc	blr	x8
000000000001fbe0	cmp	w21, w0
000000000001fbe4	b.ne	0x1fc0c
000000000001fbe8	ldr	x8, [x20]
000000000001fbec	and	x8, x8, #0xfffffffffffffffc
000000000001fbf0	ldr	x8, [x8]
000000000001fbf4	ldr	w9, [x8, #0x3c]
000000000001fbf8	ldr	x8, [x8, #0x40]
000000000001fbfc	tbnz	w9, #0x1f, 0x1fc20
000000000001fc00	mov	w10, #0x12
000000000001fc04	and	x9, x9, x10
000000000001fc08	b	0x1fca4
000000000001fc0c	mov	w0, #0x0
000000000001fc10	ldp	x29, x30, [sp, #0x20]
000000000001fc14	ldp	x20, x19, [sp, #0x10]
000000000001fc18	ldp	x22, x21, [sp], #0x30
000000000001fc1c	ret
000000000001fc20	neg	w10, w9
000000000001fc24	mvn	w9, w9
000000000001fc28	cmp	w10, #0x9
000000000001fc2c	b.ge	0x1fc64
000000000001fc30	cmp	w10, #0x2
000000000001fc34	b.lt	0x1fc98
000000000001fc38	mov	x10, #0x0
000000000001fc3c	mov	x11, x8
000000000001fc40	ldr	w12, [x11]
000000000001fc44	cmp	w12, #0x11
000000000001fc48	b.gt	0x1fca0
000000000001fc4c	add	x10, x10, #0x1
000000000001fc50	add	x11, x11, #0x10
000000000001fc54	cmp	x9, x10
000000000001fc58	b.ne	0x1fc40
000000000001fc5c	mov	x10, x9
000000000001fc60	b	0x1fca0
000000000001fc64	mov	w10, #0x0
000000000001fc68	add	w11, w9, w10
000000000001fc6c	cmp	w11, #0x0
000000000001fc70	cinc	w11, w11, lt
000000000001fc74	asr	w11, w11, #1
000000000001fc78	sbfiz	x12, x11, #4, #32
000000000001fc7c	ldr	w12, [x8, x12]
000000000001fc80	cmp	w12, #0x12
000000000001fc84	csinc	w10, w10, w11, ge
000000000001fc88	csel	w9, w9, w11, lt
000000000001fc8c	cmp	w10, w9
000000000001fc90	b.lt	0x1fc68
000000000001fc94	b	0x1fca0
000000000001fc98	mov	w10, #0x0
000000000001fc9c	b	0x1fca0
000000000001fca0	sxtw	x9, w10
000000000001fca4	add	x8, x8, x9, lsl #4
000000000001fca8	ldr	x8, [x8, #0x8]
000000000001fcac	ldr	x2, [x8, #0x10]
000000000001fcb0	mov	x0, x20
000000000001fcb4	mov	x1, x19
000000000001fcb8	ldp	x29, x30, [sp, #0x20]
000000000001fcbc	ldp	x20, x19, [sp, #0x10]
000000000001fcc0	ldp	x22, x21, [sp], #0x30
000000000001fcc4	br	x2
_kfun:kotlin.collections#<get-lastIndex>__at__kotlin.collections.List<0:0>(){0ยง<kotlin.Any?>}kotlin.Int:
000000000001fcc8	stp	x20, x19, [sp, #-0x20]!
000000000001fccc	stp	x29, x30, [sp, #0x10]
000000000001fcd0	add	x29, sp, #0x10
000000000001fcd4	mov	x19, x0
000000000001fcd8	adr	x8, #0x62b6b
000000000001fcdc	nop
000000000001fce0	ldarb	w8, [x8]
000000000001fce4	tbz	w8, #0x0, 0x1fcec
000000000001fce8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001fcec	ldr	x8, [x19]
000000000001fcf0	and	x8, x8, #0xfffffffffffffffc
000000000001fcf4	ldr	x8, [x8]
000000000001fcf8	ldr	w9, [x8, #0x3c]
000000000001fcfc	ldr	x8, [x8, #0x40]
000000000001fd00	tbnz	w9, #0x1f, 0x1fd10
000000000001fd04	mov	w10, #0x2b
000000000001fd08	and	x9, x9, x10
000000000001fd0c	b	0x1fd94
000000000001fd10	neg	w10, w9
000000000001fd14	mvn	w9, w9
000000000001fd18	cmp	w10, #0x9
000000000001fd1c	b.ge	0x1fd54
000000000001fd20	cmp	w10, #0x2
000000000001fd24	b.lt	0x1fd88
000000000001fd28	mov	x10, #0x0
000000000001fd2c	mov	x11, x8
000000000001fd30	ldr	w12, [x11]
000000000001fd34	cmp	w12, #0x2a
000000000001fd38	b.gt	0x1fd90
000000000001fd3c	add	x10, x10, #0x1
000000000001fd40	add	x11, x11, #0x10
000000000001fd44	cmp	x9, x10
000000000001fd48	b.ne	0x1fd30
000000000001fd4c	mov	x10, x9
000000000001fd50	b	0x1fd90
000000000001fd54	mov	w10, #0x0
000000000001fd58	add	w11, w9, w10
000000000001fd5c	cmp	w11, #0x0
000000000001fd60	cinc	w11, w11, lt
000000000001fd64	asr	w11, w11, #1
000000000001fd68	sbfiz	x12, x11, #4, #32
000000000001fd6c	ldr	w12, [x8, x12]
000000000001fd70	cmp	w12, #0x2b
000000000001fd74	csinc	w10, w10, w11, ge
000000000001fd78	csel	w9, w9, w11, lt
000000000001fd7c	cmp	w10, w9
000000000001fd80	b.lt	0x1fd58
000000000001fd84	b	0x1fd90
000000000001fd88	mov	w10, #0x0
000000000001fd8c	b	0x1fd90
000000000001fd90	sxtw	x9, w10
000000000001fd94	add	x8, x8, x9, lsl #4
000000000001fd98	ldr	x8, [x8, #0x8]
000000000001fd9c	ldr	x8, [x8]
000000000001fda0	mov	x0, x19
000000000001fda4	blr	x8
000000000001fda8	sub	w0, w0, #0x1
000000000001fdac	ldp	x29, x30, [sp, #0x10]
000000000001fdb0	ldp	x20, x19, [sp], #0x20
000000000001fdb4	ret
_kfun:kotlin.collections#removeAll__at__kotlin.collections.MutableList<0:0>(kotlin.Function1<0:0,kotlin.Boolean>){0ยง<kotlin.Any?>}kotlin.Boolean:
000000000001fdb8	sub	sp, sp, #0xb0
000000000001fdbc	stp	x28, x27, [sp, #0x50]
000000000001fdc0	stp	x26, x25, [sp, #0x60]
000000000001fdc4	stp	x24, x23, [sp, #0x70]
000000000001fdc8	stp	x22, x21, [sp, #0x80]
000000000001fdcc	stp	x20, x19, [sp, #0x90]
000000000001fdd0	stp	x29, x30, [sp, #0xa0]
000000000001fdd4	add	x29, sp, #0xa0
000000000001fdd8	mov	x21, x1
000000000001fddc	mov	x20, x0
000000000001fde0	adr	x19, #0x62a63
000000000001fde4	nop
000000000001fde8	ldarb	w8, [x19]
000000000001fdec	tbz	w8, #0x0, 0x1fdf4
000000000001fdf0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001fdf4	movi.16b	v0, #0x0
000000000001fdf8	stp	q0, q0, [sp, #0x10]
000000000001fdfc	str	xzr, [sp, #0x40]
000000000001fe00	str	q0, [sp, #0x30]
000000000001fe04	add	x27, sp, #0x10
000000000001fe08	adrp	x22, 73 ; 0x68000
000000000001fe0c	add	x22, x22, #0xa00
000000000001fe10	ldr	x26, [x22]
000000000001fe14	mov	x0, x22
000000000001fe18	blr	x26
000000000001fe1c	ldr	x8, [x0]
000000000001fe20	ldr	x9, [x8, #0x110]
000000000001fe24	str	x27, [x8, #0x110]
000000000001fe28	mov	x8, #0x700000000
000000000001fe2c	stp	x9, x8, [sp, #0x18]
000000000001fe30	cbz	x20, 0x201e4
000000000001fe34	ldr	x8, [x20]
000000000001fe38	and	x8, x8, #0xfffffffffffffffc
000000000001fe3c	ldr	x8, [x8]
000000000001fe40	ldr	w9, [x8, #0x3c]
000000000001fe44	ldr	x8, [x8, #0x40]
000000000001fe48	tbnz	w9, #0x1f, 0x20118
000000000001fe4c	mov	w10, #0xb8
000000000001fe50	and	x9, x9, x10
000000000001fe54	lsl	x9, x9, #4
000000000001fe58	ldr	w8, [x8, x9]
000000000001fe5c	cmp	w8, #0xb8
000000000001fe60	b.ne	0x201e4
000000000001fe64	str	x26, [sp]
000000000001fe68	mov	x0, x20
000000000001fe6c	bl	"_kfun:kotlin.collections#<get-lastIndex>__at__kotlin.collections.List<0:0>(){0ยง<kotlin.Any?>}kotlin.Int"
000000000001fe70	tbnz	w0, #0x1f, 0x20170
000000000001fe74	mov	x23, x0
000000000001fe78	mov	w25, #0x0
000000000001fe7c	mov	w22, #0x0
000000000001fe80	add	x24, x27, #0x20
000000000001fe84	add	x26, x27, #0x18
000000000001fe88	add	x8, x27, #0x28
000000000001fe8c	str	x8, [sp, #0x8]
000000000001fe90	mov	w27, #0x2c
000000000001fe94	b	0x1fed4
000000000001fe98	mov	w10, #0x16
000000000001fe9c	and	x9, x9, x10
000000000001fea0	add	x8, x8, x9, lsl #4
000000000001fea4	ldr	x8, [x8, #0x8]
000000000001fea8	ldr	x8, [x8, #0x58]
000000000001feac	mov	x0, x20
000000000001feb0	mov	x1, x22
000000000001feb4	mov	x2, x28
000000000001feb8	ldr	x3, [sp, #0x8]
000000000001febc	blr	x8
000000000001fec0	add	w22, w22, #0x1
000000000001fec4	add	w8, w25, #0x1
000000000001fec8	cmp	w25, w23
000000000001fecc	mov	x25, x8
000000000001fed0	b.eq	0x20174
000000000001fed4	ldarb	w8, [x19]
000000000001fed8	tbz	w8, #0x0, 0x1fee0
000000000001fedc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001fee0	ldr	x8, [x20]
000000000001fee4	and	x8, x8, #0xfffffffffffffffc
000000000001fee8	ldr	x8, [x8]
000000000001feec	ldr	w9, [x8, #0x3c]
000000000001fef0	ldr	x8, [x8, #0x40]
000000000001fef4	tbnz	w9, #0x1f, 0x1ff04
000000000001fef8	mov	w10, #0x2b
000000000001fefc	and	x9, x9, x10
000000000001ff00	b	0x1ff88
000000000001ff04	neg	w10, w9
000000000001ff08	mvn	w9, w9
000000000001ff0c	cmp	w10, #0x9
000000000001ff10	b.ge	0x1ff48
000000000001ff14	cmp	w10, #0x2
000000000001ff18	b.lt	0x1ff7c
000000000001ff1c	mov	x10, #0x0
000000000001ff20	mov	x11, x8
000000000001ff24	ldr	w12, [x11]
000000000001ff28	cmp	w12, #0x2a
000000000001ff2c	b.gt	0x1ff84
000000000001ff30	add	x10, x10, #0x1
000000000001ff34	add	x11, x11, #0x10
000000000001ff38	cmp	x9, x10
000000000001ff3c	b.ne	0x1ff24
000000000001ff40	mov	x10, x9
000000000001ff44	b	0x1ff84
000000000001ff48	mov	w10, #0x0
000000000001ff4c	add	w11, w9, w10
000000000001ff50	cmp	w11, #0x0
000000000001ff54	cinc	w11, w11, lt
000000000001ff58	asr	w11, w11, #1
000000000001ff5c	sbfiz	x12, x11, #4, #32
000000000001ff60	ldr	w12, [x8, x12]
000000000001ff64	cmp	w12, #0x2b
000000000001ff68	csinc	w10, w10, w11, ge
000000000001ff6c	csel	w9, w9, w11, lt
000000000001ff70	cmp	w10, w9
000000000001ff74	b.lt	0x1ff4c
000000000001ff78	b	0x1ff84
000000000001ff7c	mov	w10, #0x0
000000000001ff80	b	0x1ff84
000000000001ff84	sxtw	x9, w10
000000000001ff88	add	x8, x8, x9, lsl #4
000000000001ff8c	ldr	x8, [x8, #0x8]
000000000001ff90	ldr	x8, [x8, #0x18]
000000000001ff94	mov	x0, x20
000000000001ff98	mov	x1, x25
000000000001ff9c	mov	x2, x26
000000000001ffa0	blr	x8
000000000001ffa4	mov	x28, x0
000000000001ffa8	ldr	x8, [x21]
000000000001ffac	and	x8, x8, #0xfffffffffffffffc
000000000001ffb0	ldr	x8, [x8]
000000000001ffb4	ldr	w9, [x8, #0x3c]
000000000001ffb8	ldr	x8, [x8, #0x40]
000000000001ffbc	tbnz	w9, #0x1f, 0x1ffc8
000000000001ffc0	and	x9, x9, x27
000000000001ffc4	b	0x2004c
000000000001ffc8	neg	w10, w9
000000000001ffcc	mvn	w9, w9
000000000001ffd0	cmp	w10, #0x9
000000000001ffd4	b.ge	0x2000c
000000000001ffd8	cmp	w10, #0x2
000000000001ffdc	b.lt	0x20040
000000000001ffe0	mov	x10, #0x0
000000000001ffe4	mov	x11, x8
000000000001ffe8	ldr	w12, [x11]
000000000001ffec	cmp	w12, #0x2b
000000000001fff0	b.gt	0x20048
000000000001fff4	add	x10, x10, #0x1
000000000001fff8	add	x11, x11, #0x10
000000000001fffc	cmp	x9, x10
0000000000020000	b.ne	0x1ffe8
0000000000020004	mov	x10, x9
0000000000020008	b	0x20048
000000000002000c	mov	w10, #0x0
0000000000020010	add	w11, w9, w10
0000000000020014	cmp	w11, #0x0
0000000000020018	cinc	w11, w11, lt
000000000002001c	asr	w11, w11, #1
0000000000020020	sbfiz	x12, x11, #4, #32
0000000000020024	ldr	w12, [x8, x12]
0000000000020028	cmp	w12, #0x2c
000000000002002c	csinc	w10, w10, w11, ge
0000000000020030	csel	w9, w9, w11, lt
0000000000020034	cmp	w10, w9
0000000000020038	b.lt	0x20010
000000000002003c	b	0x20048
0000000000020040	mov	w10, #0x0
0000000000020044	b	0x20048
0000000000020048	sxtw	x9, w10
000000000002004c	add	x8, x8, x9, lsl #4
0000000000020050	ldr	x8, [x8, #0x8]
0000000000020054	ldr	x8, [x8]
0000000000020058	mov	x0, x21
000000000002005c	mov	x1, x28
0000000000020060	mov	x2, x24
0000000000020064	blr	x8
0000000000020068	ldrb	w8, [x0, #0x8]
000000000002006c	tbnz	w8, #0x0, 0x1fec4
0000000000020070	cmp	w22, w25
0000000000020074	b.eq	0x1fec0
0000000000020078	ldr	x8, [x20]
000000000002007c	and	x8, x8, #0xfffffffffffffffc
0000000000020080	ldr	x8, [x8]
0000000000020084	ldr	w9, [x8, #0x3c]
0000000000020088	ldr	x8, [x8, #0x40]
000000000002008c	tbz	w9, #0x1f, 0x1fe98
0000000000020090	neg	w10, w9
0000000000020094	mvn	w9, w9
0000000000020098	cmp	w10, #0x9
000000000002009c	b.ge	0x200d4
00000000000200a0	cmp	w10, #0x2
00000000000200a4	b.lt	0x20108
00000000000200a8	mov	x10, #0x0
00000000000200ac	mov	x11, x8
00000000000200b0	ldr	w12, [x11]
00000000000200b4	cmp	w12, #0x15
00000000000200b8	b.gt	0x20110
00000000000200bc	add	x10, x10, #0x1
00000000000200c0	add	x11, x11, #0x10
00000000000200c4	cmp	x9, x10
00000000000200c8	b.ne	0x200b0
00000000000200cc	mov	x10, x9
00000000000200d0	b	0x20110
00000000000200d4	mov	w10, #0x0
00000000000200d8	add	w11, w9, w10
00000000000200dc	cmp	w11, #0x0
00000000000200e0	cinc	w11, w11, lt
00000000000200e4	asr	w11, w11, #1
00000000000200e8	sbfiz	x12, x11, #4, #32
00000000000200ec	ldr	w12, [x8, x12]
00000000000200f0	cmp	w12, #0x16
00000000000200f4	csinc	w10, w10, w11, ge
00000000000200f8	csel	w9, w9, w11, lt
00000000000200fc	cmp	w10, w9
0000000000020100	b.lt	0x200d8
0000000000020104	b	0x20110
0000000000020108	mov	w10, #0x0
000000000002010c	b	0x20110
0000000000020110	sxtw	x9, w10
0000000000020114	b	0x1fea0
0000000000020118	neg	w10, w9
000000000002011c	mvn	w9, w9
0000000000020120	cmp	w10, #0x9
0000000000020124	b.ge	0x201a0
0000000000020128	cmp	w10, #0x2
000000000002012c	b.lt	0x20360
0000000000020130	mov	x10, #0x0
0000000000020134	mov	x11, x8
0000000000020138	ldr	w12, [x11]
000000000002013c	cmp	w12, #0xb7
0000000000020140	b.gt	0x203c8
0000000000020144	add	x10, x10, #0x1
0000000000020148	add	x11, x11, #0x10
000000000002014c	cmp	x9, x10
0000000000020150	b.ne	0x20138
0000000000020154	mov	x10, x9
0000000000020158	sxtw	x9, w10
000000000002015c	lsl	x9, x9, #4
0000000000020160	ldr	w8, [x8, x9]
0000000000020164	cmp	w8, #0xb8
0000000000020168	b.ne	0x201e4
000000000002016c	b	0x1fe64
0000000000020170	mov	w22, #0x0
0000000000020174	ldr	x8, [x20]
0000000000020178	and	x8, x8, #0xfffffffffffffffc
000000000002017c	ldr	x8, [x8]
0000000000020180	ldr	w9, [x8, #0x3c]
0000000000020184	ldr	x8, [x8, #0x40]
0000000000020188	tbnz	w9, #0x1f, 0x202ec
000000000002018c	mov	w10, #0x2b
0000000000020190	and	x9, x9, x10
0000000000020194	ldr	x26, [sp]
0000000000020198	add	x23, sp, #0x10
000000000002019c	b	0x203ec
00000000000201a0	mov	w10, #0x0
00000000000201a4	add	w11, w9, w10
00000000000201a8	cmp	w11, #0x0
00000000000201ac	cinc	w11, w11, lt
00000000000201b0	asr	w11, w11, #1
00000000000201b4	sbfiz	x12, x11, #4, #32
00000000000201b8	ldr	w12, [x8, x12]
00000000000201bc	cmp	w12, #0xb8
00000000000201c0	csinc	w10, w10, w11, ge
00000000000201c4	csel	w9, w9, w11, lt
00000000000201c8	cmp	w10, w9
00000000000201cc	b.lt	0x201a4
00000000000201d0	sxtw	x9, w10
00000000000201d4	lsl	x9, x9, #4
00000000000201d8	ldr	w8, [x8, x9]
00000000000201dc	cmp	w8, #0xb8
00000000000201e0	b.eq	0x1fe64
00000000000201e4	ldr	x8, [x20]
00000000000201e8	and	x8, x8, #0xfffffffffffffffc
00000000000201ec	ldr	x8, [x8]
00000000000201f0	ldr	w9, [x8, #0x3c]
00000000000201f4	ldr	x8, [x8, #0x40]
00000000000201f8	tbnz	w9, #0x1f, 0x20260
00000000000201fc	mov	w10, #0x24
0000000000020200	and	x9, x9, x10
0000000000020204	lsl	x9, x9, #4
0000000000020208	ldr	w8, [x8, x9]
000000000002020c	cmp	w8, #0x24
0000000000020210	b.ne	0x20350
0000000000020214	mov	x0, x20
0000000000020218	mov	x1, x21
000000000002021c	mov	w2, #0x1
0000000000020220	bl	"_kfun:kotlin.collections.filterInPlace#internal.14"
0000000000020224	mov	x8, x0
0000000000020228	mov	x0, x22
000000000002022c	blr	x26
0000000000020230	ldr	x9, [x0]
0000000000020234	ldr	x10, [sp, #0x18]
0000000000020238	str	x10, [x9, #0x110]
000000000002023c	mov	x0, x8
0000000000020240	ldp	x29, x30, [sp, #0xa0]
0000000000020244	ldp	x20, x19, [sp, #0x90]
0000000000020248	ldp	x22, x21, [sp, #0x80]
000000000002024c	ldp	x24, x23, [sp, #0x70]
0000000000020250	ldp	x26, x25, [sp, #0x60]
0000000000020254	ldp	x28, x27, [sp, #0x50]
0000000000020258	add	sp, sp, #0xb0
000000000002025c	ret
0000000000020260	neg	w10, w9
0000000000020264	mvn	w9, w9
0000000000020268	cmp	w10, #0x9
000000000002026c	b.ge	0x202b8
0000000000020270	cmp	w10, #0x2
0000000000020274	b.lt	0x20338
0000000000020278	mov	x10, #0x0
000000000002027c	mov	x11, x8
0000000000020280	ldr	w12, [x11]
0000000000020284	cmp	w12, #0x23
0000000000020288	b.gt	0x203b0
000000000002028c	add	x10, x10, #0x1
0000000000020290	add	x11, x11, #0x10
0000000000020294	cmp	x9, x10
0000000000020298	b.ne	0x20280
000000000002029c	mov	x10, x9
00000000000202a0	sxtw	x9, w10
00000000000202a4	lsl	x9, x9, #4
00000000000202a8	ldr	w8, [x8, x9]
00000000000202ac	cmp	w8, #0x24
00000000000202b0	b.eq	0x20214
00000000000202b4	b	0x20350
00000000000202b8	mov	w10, #0x0
00000000000202bc	add	w11, w9, w10
00000000000202c0	cmp	w11, #0x0
00000000000202c4	cinc	w11, w11, lt
00000000000202c8	asr	w11, w11, #1
00000000000202cc	sbfiz	x12, x11, #4, #32
00000000000202d0	ldr	w12, [x8, x12]
00000000000202d4	cmp	w12, #0x24
00000000000202d8	csinc	w10, w10, w11, ge
00000000000202dc	csel	w9, w9, w11, lt
00000000000202e0	cmp	w10, w9
00000000000202e4	b.lt	0x202bc
00000000000202e8	b	0x2033c
00000000000202ec	neg	w10, w9
00000000000202f0	mvn	w9, w9
00000000000202f4	cmp	w10, #0x9
00000000000202f8	ldr	x26, [sp]
00000000000202fc	add	x23, sp, #0x10
0000000000020300	b.ge	0x2037c
0000000000020304	cmp	w10, #0x2
0000000000020308	b.lt	0x203e0
000000000002030c	mov	x10, #0x0
0000000000020310	mov	x11, x8
0000000000020314	ldr	w12, [x11]
0000000000020318	cmp	w12, #0x2a
000000000002031c	b.gt	0x203e8
0000000000020320	add	x10, x10, #0x1
0000000000020324	add	x11, x11, #0x10
0000000000020328	cmp	x9, x10
000000000002032c	b.ne	0x20314
0000000000020330	mov	x10, x9
0000000000020334	b	0x203e8
0000000000020338	mov	w10, #0x0
000000000002033c	sxtw	x9, w10
0000000000020340	lsl	x9, x9, #4
0000000000020344	ldr	w8, [x8, x9]
0000000000020348	cmp	w8, #0x24
000000000002034c	b.eq	0x20214
0000000000020350	adr	x1, #0x37210
0000000000020354	nop
0000000000020358	mov	x0, x20
000000000002035c	bl	_ThrowClassCastException
0000000000020360	mov	w10, #0x0
0000000000020364	sxtw	x9, w10
0000000000020368	lsl	x9, x9, #4
000000000002036c	ldr	w8, [x8, x9]
0000000000020370	cmp	w8, #0xb8
0000000000020374	b.eq	0x1fe64
0000000000020378	b	0x201e4
000000000002037c	mov	w10, #0x0
0000000000020380	add	w11, w9, w10
0000000000020384	cmp	w11, #0x0
0000000000020388	cinc	w11, w11, lt
000000000002038c	asr	w11, w11, #1
0000000000020390	sbfiz	x12, x11, #4, #32
0000000000020394	ldr	w12, [x8, x12]
0000000000020398	cmp	w12, #0x2b
000000000002039c	csinc	w10, w10, w11, ge
00000000000203a0	csel	w9, w9, w11, lt
00000000000203a4	cmp	w10, w9
00000000000203a8	b.lt	0x20380
00000000000203ac	b	0x203e8
00000000000203b0	sxtw	x9, w10
00000000000203b4	lsl	x9, x9, #4
00000000000203b8	ldr	w8, [x8, x9]
00000000000203bc	cmp	w8, #0x24
00000000000203c0	b.eq	0x20214
00000000000203c4	b	0x20350
00000000000203c8	sxtw	x9, w10
00000000000203cc	lsl	x9, x9, #4
00000000000203d0	ldr	w8, [x8, x9]
00000000000203d4	cmp	w8, #0xb8
00000000000203d8	b.ne	0x201e4
00000000000203dc	b	0x1fe64
00000000000203e0	mov	w10, #0x0
00000000000203e4	b	0x203e8
00000000000203e8	sxtw	x9, w10
00000000000203ec	add	x8, x8, x9, lsl #4
00000000000203f0	ldr	x8, [x8, #0x8]
00000000000203f4	ldr	x8, [x8]
00000000000203f8	mov	x0, x20
00000000000203fc	blr	x8
0000000000020400	cmp	w22, w0
0000000000020404	b.ge	0x20428
0000000000020408	mov	x0, x20
000000000002040c	bl	"_kfun:kotlin.collections#<get-lastIndex>__at__kotlin.collections.List<0:0>(){0ยง<kotlin.Any?>}kotlin.Int"
0000000000020410	cmp	w22, w0
0000000000020414	b.le	0x20438
0000000000020418	mov	w8, #0x1
000000000002041c	adrp	x22, 72 ; 0x68000
0000000000020420	add	x22, x22, #0xa00
0000000000020424	b	0x20228
0000000000020428	mov	w8, #0x0
000000000002042c	adrp	x22, 72 ; 0x68000
0000000000020430	add	x22, x22, #0xa00
0000000000020434	b	0x20228
0000000000020438	mov	x21, x0
000000000002043c	add	x23, x23, #0x30
0000000000020440	mov	w24, #0x16
0000000000020444	b	0x20490
0000000000020448	sub	w25, w21, #0x1
000000000002044c	ldr	x8, [x20]
0000000000020450	and	x8, x8, #0xfffffffffffffffc
0000000000020454	ldr	x8, [x8]
0000000000020458	ldr	w9, [x8, #0x3c]
000000000002045c	ldr	x8, [x8, #0x40]
0000000000020460	tbnz	w9, #0x1f, 0x204a0
0000000000020464	and	x9, x9, x24
0000000000020468	add	x8, x8, x9, lsl #4
000000000002046c	ldr	x8, [x8, #0x8]
0000000000020470	ldr	x8, [x8, #0x48]
0000000000020474	mov	x0, x20
0000000000020478	mov	x1, x21
000000000002047c	mov	x2, x23
0000000000020480	blr	x8
0000000000020484	cmp	w21, w22
0000000000020488	mov	x21, x25
000000000002048c	b.eq	0x20418
0000000000020490	ldarb	w8, [x19]
0000000000020494	tbz	w8, #0x0, 0x20448
0000000000020498	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002049c	b	0x20448
00000000000204a0	neg	w10, w9
00000000000204a4	mvn	w9, w9
00000000000204a8	cmp	w10, #0x9
00000000000204ac	b.ge	0x204e8
00000000000204b0	cmp	w10, #0x2
00000000000204b4	b.lt	0x2051c
00000000000204b8	mov	x10, #0x0
00000000000204bc	mov	x11, x8
00000000000204c0	ldr	w12, [x11]
00000000000204c4	cmp	w12, #0x15
00000000000204c8	b.gt	0x20528
00000000000204cc	add	x10, x10, #0x1
00000000000204d0	add	x11, x11, #0x10
00000000000204d4	cmp	x9, x10
00000000000204d8	b.ne	0x204c0
00000000000204dc	mov	x10, x9
00000000000204e0	sxtw	x9, w10
00000000000204e4	b	0x20468
00000000000204e8	mov	w10, #0x0
00000000000204ec	add	w11, w9, w10
00000000000204f0	cmp	w11, #0x0
00000000000204f4	cinc	w11, w11, lt
00000000000204f8	asr	w11, w11, #1
00000000000204fc	sbfiz	x12, x11, #4, #32
0000000000020500	ldr	w12, [x8, x12]
0000000000020504	cmp	w12, #0x16
0000000000020508	csinc	w10, w10, w11, ge
000000000002050c	csel	w9, w9, w11, lt
0000000000020510	cmp	w10, w9
0000000000020514	b.lt	0x204ec
0000000000020518	b	0x20528
000000000002051c	mov	w10, #0x0
0000000000020520	sxtw	x9, w10
0000000000020524	b	0x20468
0000000000020528	sxtw	x9, w10
000000000002052c	b	0x20468
_kfun:kotlin.collections.filterInPlace#internal.14:
0000000000020530	sub	sp, sp, #0x90
0000000000020534	stp	x28, x27, [sp, #0x30]
0000000000020538	stp	x26, x25, [sp, #0x40]
000000000002053c	stp	x24, x23, [sp, #0x50]
0000000000020540	stp	x22, x21, [sp, #0x60]
0000000000020544	stp	x20, x19, [sp, #0x70]
0000000000020548	stp	x29, x30, [sp, #0x80]
000000000002054c	add	x29, sp, #0x80
0000000000020550	mov	x19, x2
0000000000020554	mov	x20, x1
0000000000020558	mov	x23, x0
000000000002055c	movi.16b	v0, #0x0
0000000000020560	stp	q0, q0, [sp]
0000000000020564	str	q0, [sp, #0x20]
0000000000020568	mov	x22, sp
000000000002056c	add	x24, x22, #0x18
0000000000020570	adrp	x0, 72 ; 0x68000
0000000000020574	add	x0, x0, #0xa00
0000000000020578	ldr	x8, [x0]
000000000002057c	blr	x8
0000000000020580	ldr	x25, [x0]
0000000000020584	ldr	x8, [x25, #0x110]
0000000000020588	str	x22, [x25, #0x110]
000000000002058c	mov	x9, #0x600000000
0000000000020590	stp	x8, x9, [sp, #0x8]
0000000000020594	adr	x26, #0x622af
0000000000020598	nop
000000000002059c	ldarb	w8, [x26]
00000000000205a0	tbz	w8, #0x0, 0x205a8
00000000000205a4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000205a8	add	x21, x22, #0x20
00000000000205ac	add	x22, x22, #0x28
00000000000205b0	ldr	x8, [x23]
00000000000205b4	and	x8, x8, #0xfffffffffffffffc
00000000000205b8	ldr	x8, [x8]
00000000000205bc	ldr	w9, [x8, #0x3c]
00000000000205c0	ldr	x8, [x8, #0x40]
00000000000205c4	tbnz	w9, #0x1f, 0x205d4
00000000000205c8	mov	w10, #0x24
00000000000205cc	and	x9, x9, x10
00000000000205d0	b	0x20658
00000000000205d4	neg	w10, w9
00000000000205d8	mvn	w9, w9
00000000000205dc	cmp	w10, #0x9
00000000000205e0	b.ge	0x20618
00000000000205e4	cmp	w10, #0x2
00000000000205e8	b.lt	0x2064c
00000000000205ec	mov	x10, #0x0
00000000000205f0	mov	x11, x8
00000000000205f4	ldr	w12, [x11]
00000000000205f8	cmp	w12, #0x23
00000000000205fc	b.gt	0x20654
0000000000020600	add	x10, x10, #0x1
0000000000020604	add	x11, x11, #0x10
0000000000020608	cmp	x9, x10
000000000002060c	b.ne	0x205f4
0000000000020610	mov	x10, x9
0000000000020614	b	0x20654
0000000000020618	mov	w10, #0x0
000000000002061c	add	w11, w9, w10
0000000000020620	cmp	w11, #0x0
0000000000020624	cinc	w11, w11, lt
0000000000020628	asr	w11, w11, #1
000000000002062c	sbfiz	x12, x11, #4, #32
0000000000020630	ldr	w12, [x8, x12]
0000000000020634	cmp	w12, #0x24
0000000000020638	csinc	w10, w10, w11, ge
000000000002063c	csel	w9, w9, w11, lt
0000000000020640	cmp	w10, w9
0000000000020644	b.lt	0x2061c
0000000000020648	b	0x20654
000000000002064c	mov	w10, #0x0
0000000000020650	b	0x20654
0000000000020654	sxtw	x9, w10
0000000000020658	add	x8, x8, x9, lsl #4
000000000002065c	ldr	x8, [x8, #0x8]
0000000000020660	ldr	x8, [x8]
0000000000020664	mov	x0, x23
0000000000020668	mov	x1, x24
000000000002066c	blr	x8
0000000000020670	mov	x23, x0
0000000000020674	mov	w28, #0x0
0000000000020678	mov	w24, #0xa0
000000000002067c	mov	w27, #0x2c
0000000000020680	ldr	x8, [x23]
0000000000020684	and	x8, x8, #0xfffffffffffffffc
0000000000020688	ldr	x8, [x8]
000000000002068c	ldr	w9, [x8, #0x3c]
0000000000020690	ldr	x8, [x8, #0x40]
0000000000020694	tbz	w9, #0x1f, 0x206dc
0000000000020698	b	0x207d4
000000000002069c	and	x9, x9, x27
00000000000206a0	add	x8, x8, x9, lsl #4
00000000000206a4	ldr	x8, [x8, #0x8]
00000000000206a8	ldr	x8, [x8]
00000000000206ac	mov	x0, x20
00000000000206b0	mov	x2, x22
00000000000206b4	blr	x8
00000000000206b8	ldrb	w8, [x0, #0x8]
00000000000206bc	cmp	w8, w19
00000000000206c0	b.eq	0x206fc
00000000000206c4	ldr	x8, [x23]
00000000000206c8	and	x8, x8, #0xfffffffffffffffc
00000000000206cc	ldr	x8, [x8]
00000000000206d0	ldr	w9, [x8, #0x3c]
00000000000206d4	ldr	x8, [x8, #0x40]
00000000000206d8	tbnz	w9, #0x1f, 0x207d4
00000000000206dc	and	x9, x9, x24
00000000000206e0	add	x8, x8, x9, lsl #4
00000000000206e4	ldr	x8, [x8, #0x8]
00000000000206e8	ldr	x8, [x8]
00000000000206ec	mov	x0, x23
00000000000206f0	blr	x8
00000000000206f4	tbnz	w0, #0x0, 0x20870
00000000000206f8	b	0x209dc
00000000000206fc	ldr	x8, [x23]
0000000000020700	and	x8, x8, #0xfffffffffffffffc
0000000000020704	ldr	x8, [x8]
0000000000020708	ldr	w9, [x8, #0x3c]
000000000002070c	ldr	x8, [x8, #0x40]
0000000000020710	tbnz	w9, #0x1f, 0x20720
0000000000020714	mov	w10, #0x39
0000000000020718	and	x9, x9, x10
000000000002071c	b	0x207a4
0000000000020720	neg	w10, w9
0000000000020724	mvn	w9, w9
0000000000020728	cmp	w10, #0x9
000000000002072c	b.ge	0x20764
0000000000020730	cmp	w10, #0x2
0000000000020734	b.lt	0x20798
0000000000020738	mov	x10, #0x0
000000000002073c	mov	x11, x8
0000000000020740	ldr	w12, [x11]
0000000000020744	cmp	w12, #0x38
0000000000020748	b.gt	0x207a0
000000000002074c	add	x10, x10, #0x1
0000000000020750	add	x11, x11, #0x10
0000000000020754	cmp	x9, x10
0000000000020758	b.ne	0x20740
000000000002075c	mov	x10, x9
0000000000020760	b	0x207a0
0000000000020764	mov	w10, #0x0
0000000000020768	add	w11, w9, w10
000000000002076c	cmp	w11, #0x0
0000000000020770	cinc	w11, w11, lt
0000000000020774	asr	w11, w11, #1
0000000000020778	sbfiz	x12, x11, #4, #32
000000000002077c	ldr	w12, [x8, x12]
0000000000020780	cmp	w12, #0x39
0000000000020784	csinc	w10, w10, w11, ge
0000000000020788	csel	w9, w9, w11, lt
000000000002078c	cmp	w10, w9
0000000000020790	b.lt	0x20768
0000000000020794	b	0x207a0
0000000000020798	mov	w10, #0x0
000000000002079c	b	0x207a0
00000000000207a0	sxtw	x9, w10
00000000000207a4	add	x8, x8, x9, lsl #4
00000000000207a8	ldr	x8, [x8, #0x8]
00000000000207ac	ldr	x8, [x8]
00000000000207b0	mov	x0, x23
00000000000207b4	blr	x8
00000000000207b8	mov	w28, #0x1
00000000000207bc	ldr	x8, [x23]
00000000000207c0	and	x8, x8, #0xfffffffffffffffc
00000000000207c4	ldr	x8, [x8]
00000000000207c8	ldr	w9, [x8, #0x3c]
00000000000207cc	ldr	x8, [x8, #0x40]
00000000000207d0	tbz	w9, #0x1f, 0x206dc
00000000000207d4	neg	w10, w9
00000000000207d8	mvn	w9, w9
00000000000207dc	cmp	w10, #0x9
00000000000207e0	b.ge	0x20818
00000000000207e4	cmp	w10, #0x2
00000000000207e8	b.lt	0x2084c
00000000000207ec	mov	x10, #0x0
00000000000207f0	mov	x11, x8
00000000000207f4	ldr	w12, [x11]
00000000000207f8	cmp	w12, #0x9f
00000000000207fc	b.gt	0x20854
0000000000020800	add	x10, x10, #0x1
0000000000020804	add	x11, x11, #0x10
0000000000020808	cmp	x9, x10
000000000002080c	b.ne	0x207f4
0000000000020810	mov	x10, x9
0000000000020814	b	0x20854
0000000000020818	mov	w10, #0x0
000000000002081c	add	w11, w9, w10
0000000000020820	cmp	w11, #0x0
0000000000020824	cinc	w11, w11, lt
0000000000020828	asr	w11, w11, #1
000000000002082c	sbfiz	x12, x11, #4, #32
0000000000020830	ldr	w12, [x8, x12]
0000000000020834	cmp	w12, #0xa0
0000000000020838	csinc	w10, w10, w11, ge
000000000002083c	csel	w9, w9, w11, lt
0000000000020840	cmp	w10, w9
0000000000020844	b.lt	0x2081c
0000000000020848	b	0x20854
000000000002084c	mov	w10, #0x0
0000000000020850	b	0x20854
0000000000020854	sxtw	x9, w10
0000000000020858	add	x8, x8, x9, lsl #4
000000000002085c	ldr	x8, [x8, #0x8]
0000000000020860	ldr	x8, [x8]
0000000000020864	mov	x0, x23
0000000000020868	blr	x8
000000000002086c	tbz	w0, #0x0, 0x209dc
0000000000020870	ldarb	w8, [x26]
0000000000020874	tbz	w8, #0x0, 0x2087c
0000000000020878	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002087c	ldr	x8, [x23]
0000000000020880	and	x8, x8, #0xfffffffffffffffc
0000000000020884	ldr	x8, [x8]
0000000000020888	ldr	w9, [x8, #0x3c]
000000000002088c	ldr	x8, [x8, #0x40]
0000000000020890	tbnz	w9, #0x1f, 0x2089c
0000000000020894	and	x9, x9, x24
0000000000020898	b	0x20920
000000000002089c	neg	w10, w9
00000000000208a0	mvn	w9, w9
00000000000208a4	cmp	w10, #0x9
00000000000208a8	b.ge	0x208e0
00000000000208ac	cmp	w10, #0x2
00000000000208b0	b.lt	0x20914
00000000000208b4	mov	x10, #0x0
00000000000208b8	mov	x11, x8
00000000000208bc	ldr	w12, [x11]
00000000000208c0	cmp	w12, #0x9f
00000000000208c4	b.gt	0x2091c
00000000000208c8	add	x10, x10, #0x1
00000000000208cc	add	x11, x11, #0x10
00000000000208d0	cmp	x9, x10
00000000000208d4	b.ne	0x208bc
00000000000208d8	mov	x10, x9
00000000000208dc	b	0x2091c
00000000000208e0	mov	w10, #0x0
00000000000208e4	add	w11, w9, w10
00000000000208e8	cmp	w11, #0x0
00000000000208ec	cinc	w11, w11, lt
00000000000208f0	asr	w11, w11, #1
00000000000208f4	sbfiz	x12, x11, #4, #32
00000000000208f8	ldr	w12, [x8, x12]
00000000000208fc	cmp	w12, #0xa0
0000000000020900	csinc	w10, w10, w11, ge
0000000000020904	csel	w9, w9, w11, lt
0000000000020908	cmp	w10, w9
000000000002090c	b.lt	0x208e4
0000000000020910	b	0x2091c
0000000000020914	mov	w10, #0x0
0000000000020918	b	0x2091c
000000000002091c	sxtw	x9, w10
0000000000020920	add	x8, x8, x9, lsl #4
0000000000020924	ldr	x8, [x8, #0x8]
0000000000020928	ldr	x8, [x8, #0x8]
000000000002092c	mov	x0, x23
0000000000020930	mov	x1, x21
0000000000020934	blr	x8
0000000000020938	mov	x1, x0
000000000002093c	ldr	x8, [x20]
0000000000020940	and	x8, x8, #0xfffffffffffffffc
0000000000020944	ldr	x8, [x8]
0000000000020948	ldr	w9, [x8, #0x3c]
000000000002094c	ldr	x8, [x8, #0x40]
0000000000020950	tbz	w9, #0x1f, 0x2069c
0000000000020954	neg	w10, w9
0000000000020958	mvn	w9, w9
000000000002095c	cmp	w10, #0x9
0000000000020960	b.ge	0x20998
0000000000020964	cmp	w10, #0x2
0000000000020968	b.lt	0x209cc
000000000002096c	mov	x10, #0x0
0000000000020970	mov	x11, x8
0000000000020974	ldr	w12, [x11]
0000000000020978	cmp	w12, #0x2b
000000000002097c	b.gt	0x209d4
0000000000020980	add	x10, x10, #0x1
0000000000020984	add	x11, x11, #0x10
0000000000020988	cmp	x9, x10
000000000002098c	b.ne	0x20974
0000000000020990	mov	x10, x9
0000000000020994	b	0x209d4
0000000000020998	mov	w10, #0x0
000000000002099c	add	w11, w9, w10
00000000000209a0	cmp	w11, #0x0
00000000000209a4	cinc	w11, w11, lt
00000000000209a8	asr	w11, w11, #1
00000000000209ac	sbfiz	x12, x11, #4, #32
00000000000209b0	ldr	w12, [x8, x12]
00000000000209b4	cmp	w12, #0x2c
00000000000209b8	csinc	w10, w10, w11, ge
00000000000209bc	csel	w9, w9, w11, lt
00000000000209c0	cmp	w10, w9
00000000000209c4	b.lt	0x2099c
00000000000209c8	b	0x209d4
00000000000209cc	mov	w10, #0x0
00000000000209d0	b	0x209d4
00000000000209d4	sxtw	x9, w10
00000000000209d8	b	0x206a0
00000000000209dc	ldr	x8, [sp, #0x8]
00000000000209e0	str	x8, [x25, #0x110]
00000000000209e4	and	w0, w28, #0x1
00000000000209e8	ldp	x29, x30, [sp, #0x80]
00000000000209ec	ldp	x20, x19, [sp, #0x70]
00000000000209f0	ldp	x22, x21, [sp, #0x60]
00000000000209f4	ldp	x24, x23, [sp, #0x50]
00000000000209f8	ldp	x26, x25, [sp, #0x40]
00000000000209fc	ldp	x28, x27, [sp, #0x30]
0000000000020a00	add	sp, sp, #0x90
0000000000020a04	ret
_kfun:kotlin.enums.EnumEntriesList.<get-entries>#internal:
0000000000020a08	sub	sp, sp, #0x70
0000000000020a0c	stp	x22, x21, [sp, #0x40]
0000000000020a10	stp	x20, x19, [sp, #0x50]
0000000000020a14	stp	x29, x30, [sp, #0x60]
0000000000020a18	add	x29, sp, #0x60
0000000000020a1c	mov	x19, x1
0000000000020a20	mov	x20, x0
0000000000020a24	movi.16b	v0, #0x0
0000000000020a28	stp	q0, q0, [sp]
0000000000020a2c	stp	q0, q0, [sp, #0x20]
0000000000020a30	mov	x22, sp
0000000000020a34	adrp	x0, 72 ; 0x68000
0000000000020a38	add	x0, x0, #0xa00
0000000000020a3c	ldr	x8, [x0]
0000000000020a40	blr	x8
0000000000020a44	ldr	x21, [x0]
0000000000020a48	ldr	x8, [x21, #0x110]
0000000000020a4c	str	x22, [x21, #0x110]
0000000000020a50	mov	x9, #0x800000000
0000000000020a54	stp	x8, x9, [sp, #0x8]
0000000000020a58	adr	x8, #0x61deb
0000000000020a5c	nop
0000000000020a60	ldarb	w8, [x8]
0000000000020a64	tbz	w8, #0x0, 0x20a6c
0000000000020a68	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000020a6c	ldr	x0, [x20, #0x10]
0000000000020a70	stp	x0, x0, [sp, #0x18]
0000000000020a74	str	x0, [sp, #0x28]
0000000000020a78	cbnz	x0, 0x20b48
0000000000020a7c	add	x1, x22, #0x30
0000000000020a80	ldr	x0, [x20, #0x8]
0000000000020a84	ldr	x8, [x0]
0000000000020a88	and	x8, x8, #0xfffffffffffffffc
0000000000020a8c	ldr	x8, [x8]
0000000000020a90	ldr	w9, [x8, #0x3c]
0000000000020a94	ldr	x8, [x8, #0x40]
0000000000020a98	tbnz	w9, #0x1f, 0x20aa8
0000000000020a9c	mov	w10, #0x59
0000000000020aa0	and	x9, x9, x10
0000000000020aa4	b	0x20b2c
0000000000020aa8	neg	w10, w9
0000000000020aac	mvn	w9, w9
0000000000020ab0	cmp	w10, #0x9
0000000000020ab4	b.ge	0x20aec
0000000000020ab8	cmp	w10, #0x2
0000000000020abc	b.lt	0x20b20
0000000000020ac0	mov	x10, #0x0
0000000000020ac4	mov	x11, x8
0000000000020ac8	ldr	w12, [x11]
0000000000020acc	cmp	w12, #0x58
0000000000020ad0	b.gt	0x20b28
0000000000020ad4	add	x10, x10, #0x1
0000000000020ad8	add	x11, x11, #0x10
0000000000020adc	cmp	x9, x10
0000000000020ae0	b.ne	0x20ac8
0000000000020ae4	mov	x10, x9
0000000000020ae8	b	0x20b28
0000000000020aec	mov	w10, #0x0
0000000000020af0	add	w11, w9, w10
0000000000020af4	cmp	w11, #0x0
0000000000020af8	cinc	w11, w11, lt
0000000000020afc	asr	w11, w11, #1
0000000000020b00	sbfiz	x12, x11, #4, #32
0000000000020b04	ldr	w12, [x8, x12]
0000000000020b08	cmp	w12, #0x59
0000000000020b0c	csinc	w10, w10, w11, ge
0000000000020b10	csel	w9, w9, w11, lt
0000000000020b14	cmp	w10, w9
0000000000020b18	b.lt	0x20af0
0000000000020b1c	b	0x20b28
0000000000020b20	mov	w10, #0x0
0000000000020b24	b	0x20b28
0000000000020b28	sxtw	x9, w10
0000000000020b2c	add	x8, x8, x9, lsl #4
0000000000020b30	ldr	x8, [x8, #0x8]
0000000000020b34	ldr	x8, [x8]
0000000000020b38	blr	x8
0000000000020b3c	str	x0, [sp, #0x20]
0000000000020b40	str	x0, [sp, #0x38]
0000000000020b44	str	x0, [x20, #0x10]
0000000000020b48	str	x0, [x19]
0000000000020b4c	ldr	x8, [sp, #0x8]
0000000000020b50	str	x8, [x21, #0x110]
0000000000020b54	ldp	x29, x30, [sp, #0x60]
0000000000020b58	ldp	x20, x19, [sp, #0x50]
0000000000020b5c	ldp	x22, x21, [sp, #0x40]
0000000000020b60	add	sp, sp, #0x70
0000000000020b64	ret
_kfun:kotlin.enums.EnumEntriesList.<get-size>#internal:
0000000000020b68	sub	sp, sp, #0x50
0000000000020b6c	stp	x22, x21, [sp, #0x20]
0000000000020b70	stp	x20, x19, [sp, #0x30]
0000000000020b74	stp	x29, x30, [sp, #0x40]
0000000000020b78	add	x29, sp, #0x40
0000000000020b7c	mov	x19, x0
0000000000020b80	movi.16b	v0, #0x0
0000000000020b84	stp	q0, q0, [sp]
0000000000020b88	mov	x8, sp
0000000000020b8c	add	x20, x8, #0x18
0000000000020b90	adrp	x0, 72 ; 0x68000
0000000000020b94	add	x0, x0, #0xa00
0000000000020b98	ldr	x9, [x0]
0000000000020b9c	blr	x9
0000000000020ba0	ldr	x21, [x0]
0000000000020ba4	ldr	x9, [x21, #0x110]
0000000000020ba8	str	x8, [x21, #0x110]
0000000000020bac	mov	x8, #0x400000000
0000000000020bb0	stp	x9, x8, [sp, #0x8]
0000000000020bb4	adr	x8, #0x61c8f
0000000000020bb8	nop
0000000000020bbc	ldarb	w8, [x8]
0000000000020bc0	tbz	w8, #0x0, 0x20bc8
0000000000020bc4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000020bc8	mov	x0, x19
0000000000020bcc	mov	x1, x20
0000000000020bd0	bl	"_kfun:kotlin.enums.EnumEntriesList.<get-entries>#internal"
0000000000020bd4	ldr	w0, [x0, #0x8]
0000000000020bd8	ldr	x8, [sp, #0x8]
0000000000020bdc	str	x8, [x21, #0x110]
0000000000020be0	ldp	x29, x30, [sp, #0x40]
0000000000020be4	ldp	x20, x19, [sp, #0x30]
0000000000020be8	ldp	x22, x21, [sp, #0x20]
0000000000020bec	add	sp, sp, #0x50
0000000000020bf0	ret
_kfun:kotlin.enums.EnumEntriesList.get#internal:
0000000000020bf4	sub	sp, sp, #0x60
0000000000020bf8	stp	x24, x23, [sp, #0x20]
0000000000020bfc	stp	x22, x21, [sp, #0x30]
0000000000020c00	stp	x20, x19, [sp, #0x40]
0000000000020c04	stp	x29, x30, [sp, #0x50]
0000000000020c08	add	x29, sp, #0x50
0000000000020c0c	mov	x19, x2
0000000000020c10	mov	x20, x1
0000000000020c14	mov	x21, x0
0000000000020c18	movi.16b	v0, #0x0
0000000000020c1c	stp	q0, q0, [sp]
0000000000020c20	mov	x8, sp
0000000000020c24	add	x22, x8, #0x18
0000000000020c28	adrp	x0, 72 ; 0x68000
0000000000020c2c	add	x0, x0, #0xa00
0000000000020c30	ldr	x9, [x0]
0000000000020c34	blr	x9
0000000000020c38	ldr	x23, [x0]
0000000000020c3c	ldr	x9, [x23, #0x110]
0000000000020c40	str	x8, [x23, #0x110]
0000000000020c44	mov	x8, #0x400000000
0000000000020c48	stp	x9, x8, [sp, #0x8]
0000000000020c4c	adr	x8, #0x61bf7
0000000000020c50	nop
0000000000020c54	ldarb	w8, [x8]
0000000000020c58	tbz	w8, #0x0, 0x20c60
0000000000020c5c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000020c60	mov	x0, x21
0000000000020c64	mov	x1, x22
0000000000020c68	bl	"_kfun:kotlin.enums.EnumEntriesList.<get-entries>#internal"
0000000000020c6c	mov	x21, x0
0000000000020c70	ldr	w1, [x0, #0x8]
0000000000020c74	mov	x0, x20
0000000000020c78	bl	"_kfun:kotlin.collections.AbstractList.Companion#checkElementIndex(kotlin.Int;kotlin.Int){}"
0000000000020c7c	ldr	w8, [x21, #0x8]
0000000000020c80	cmp	w8, w20
0000000000020c84	b.ls	0x20cb4
0000000000020c88	add	x8, x21, w20, sxtw #3
0000000000020c8c	ldr	x0, [x8, #0x10]
0000000000020c90	str	x0, [x19]
0000000000020c94	ldr	x8, [sp, #0x8]
0000000000020c98	str	x8, [x23, #0x110]
0000000000020c9c	ldp	x29, x30, [sp, #0x50]
0000000000020ca0	ldp	x20, x19, [sp, #0x40]
0000000000020ca4	ldp	x22, x21, [sp, #0x30]
0000000000020ca8	ldp	x24, x23, [sp, #0x20]
0000000000020cac	add	sp, sp, #0x60
0000000000020cb0	ret
0000000000020cb4	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.enums.EnumEntriesList.contains#internal:
0000000000020cb8	sub	sp, sp, #0x70
0000000000020cbc	stp	x24, x23, [sp, #0x30]
0000000000020cc0	stp	x22, x21, [sp, #0x40]
0000000000020cc4	stp	x20, x19, [sp, #0x50]
0000000000020cc8	stp	x29, x30, [sp, #0x60]
0000000000020ccc	add	x29, sp, #0x60
0000000000020cd0	mov	x19, x1
0000000000020cd4	mov	x20, x0
0000000000020cd8	movi.16b	v0, #0x0
0000000000020cdc	stp	q0, q0, [sp]
0000000000020ce0	str	xzr, [sp, #0x20]
0000000000020ce4	mov	x23, sp
0000000000020ce8	adrp	x0, 72 ; 0x68000
0000000000020cec	add	x0, x0, #0xa00
0000000000020cf0	ldr	x8, [x0]
0000000000020cf4	blr	x8
0000000000020cf8	ldr	x22, [x0]
0000000000020cfc	ldr	x8, [x22, #0x110]
0000000000020d00	str	x23, [x22, #0x110]
0000000000020d04	mov	x9, #0x500000000
0000000000020d08	stp	x8, x9, [sp, #0x8]
0000000000020d0c	adr	x8, #0x61b37
0000000000020d10	nop
0000000000020d14	ldarb	w8, [x8]
0000000000020d18	tbz	w8, #0x0, 0x20d20
0000000000020d1c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000020d20	cbz	x19, 0x20d40
0000000000020d24	ldr	x8, [x19]
0000000000020d28	and	x8, x8, #0xfffffffffffffffc
0000000000020d2c	ldr	x8, [x8]
0000000000020d30	ldr	w8, [x8, #0x5c]
0000000000020d34	sub	w8, w8, #0x57
0000000000020d38	cmp	w8, #0xe
0000000000020d3c	b.ls	0x20d48
0000000000020d40	mov	w0, #0x0
0000000000020d44	b	0x20d6c
0000000000020d48	add	x21, x23, #0x20
0000000000020d4c	add	x1, x23, #0x18
0000000000020d50	mov	x0, x20
0000000000020d54	bl	"_kfun:kotlin.enums.EnumEntriesList.<get-entries>#internal"
0000000000020d58	ldr	w1, [x19, #0x10]
0000000000020d5c	mov	x2, x21
0000000000020d60	bl	"_kfun:kotlin.collections#getOrNull__at__kotlin.Array<out|0:0>(kotlin.Int){0ยง<kotlin.Any?>}0:0?"
0000000000020d64	cmp	x0, x19
0000000000020d68	cset	w0, eq
0000000000020d6c	ldr	x8, [sp, #0x8]
0000000000020d70	str	x8, [x22, #0x110]
0000000000020d74	ldp	x29, x30, [sp, #0x60]
0000000000020d78	ldp	x20, x19, [sp, #0x50]
0000000000020d7c	ldp	x22, x21, [sp, #0x40]
0000000000020d80	ldp	x24, x23, [sp, #0x30]
0000000000020d84	add	sp, sp, #0x70
0000000000020d88	ret
_kfun:kotlin.enums.EnumEntriesList.indexOf#internal:
0000000000020d8c	sub	sp, sp, #0x70
0000000000020d90	stp	x24, x23, [sp, #0x30]
0000000000020d94	stp	x22, x21, [sp, #0x40]
0000000000020d98	stp	x20, x19, [sp, #0x50]
0000000000020d9c	stp	x29, x30, [sp, #0x60]
0000000000020da0	add	x29, sp, #0x60
0000000000020da4	mov	x19, x1
0000000000020da8	mov	x20, x0
0000000000020dac	movi.16b	v0, #0x0
0000000000020db0	stp	q0, q0, [sp]
0000000000020db4	str	xzr, [sp, #0x20]
0000000000020db8	mov	x22, sp
0000000000020dbc	adrp	x0, 72 ; 0x68000
0000000000020dc0	add	x0, x0, #0xa00
0000000000020dc4	ldr	x8, [x0]
0000000000020dc8	blr	x8
0000000000020dcc	ldr	x23, [x0]
0000000000020dd0	ldr	x8, [x23, #0x110]
0000000000020dd4	str	x22, [x23, #0x110]
0000000000020dd8	mov	x9, #0x500000000
0000000000020ddc	stp	x8, x9, [sp, #0x8]
0000000000020de0	adr	x8, #0x61a63
0000000000020de4	nop
0000000000020de8	ldarb	w8, [x8]
0000000000020dec	tbz	w8, #0x0, 0x20df4
0000000000020df0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000020df4	cbz	x19, 0x20e14
0000000000020df8	ldr	x8, [x19]
0000000000020dfc	and	x8, x8, #0xfffffffffffffffc
0000000000020e00	ldr	x8, [x8]
0000000000020e04	ldr	w8, [x8, #0x5c]
0000000000020e08	sub	w8, w8, #0x57
0000000000020e0c	cmp	w8, #0xe
0000000000020e10	b.ls	0x20e1c
0000000000020e14	mov	w0, #-0x1
0000000000020e18	b	0x20e44
0000000000020e1c	add	x21, x22, #0x20
0000000000020e20	add	x1, x22, #0x18
0000000000020e24	ldr	w22, [x19, #0x10]
0000000000020e28	mov	x0, x20
0000000000020e2c	bl	"_kfun:kotlin.enums.EnumEntriesList.<get-entries>#internal"
0000000000020e30	mov	x1, x22
0000000000020e34	mov	x2, x21
0000000000020e38	bl	"_kfun:kotlin.collections#getOrNull__at__kotlin.Array<out|0:0>(kotlin.Int){0ยง<kotlin.Any?>}0:0?"
0000000000020e3c	cmp	x0, x19
0000000000020e40	csinv	w0, w22, wzr, eq
0000000000020e44	ldr	x8, [sp, #0x8]
0000000000020e48	str	x8, [x23, #0x110]
0000000000020e4c	ldp	x29, x30, [sp, #0x60]
0000000000020e50	ldp	x20, x19, [sp, #0x50]
0000000000020e54	ldp	x22, x21, [sp, #0x40]
0000000000020e58	ldp	x24, x23, [sp, #0x30]
0000000000020e5c	add	sp, sp, #0x70
0000000000020e60	ret
_kfun:kotlin.enums.EnumEntriesList.lastIndexOf#internal:
0000000000020e64	stp	x20, x19, [sp, #-0x20]!
0000000000020e68	stp	x29, x30, [sp, #0x10]
0000000000020e6c	add	x29, sp, #0x10
0000000000020e70	mov	x19, x1
0000000000020e74	mov	x20, x0
0000000000020e78	adr	x8, #0x619cb
0000000000020e7c	nop
0000000000020e80	ldarb	w8, [x8]
0000000000020e84	tbz	w8, #0x0, 0x20e8c
0000000000020e88	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000020e8c	cbz	x19, 0x20eac
0000000000020e90	ldr	x8, [x19]
0000000000020e94	and	x8, x8, #0xfffffffffffffffc
0000000000020e98	ldr	x8, [x8]
0000000000020e9c	ldr	w8, [x8, #0x5c]
0000000000020ea0	sub	w8, w8, #0x57
0000000000020ea4	cmp	w8, #0xe
0000000000020ea8	b.ls	0x20ebc
0000000000020eac	mov	w0, #-0x1
0000000000020eb0	ldp	x29, x30, [sp, #0x10]
0000000000020eb4	ldp	x20, x19, [sp], #0x20
0000000000020eb8	ret
0000000000020ebc	mov	x0, x20
0000000000020ec0	mov	x1, x19
0000000000020ec4	ldp	x29, x30, [sp, #0x10]
0000000000020ec8	ldp	x20, x19, [sp], #0x20
0000000000020ecc	b	"_kfun:kotlin.enums.EnumEntriesList.indexOf#internal"
_kfun:kotlin.enums#enumEntries(kotlin.Array<0:0>){0ยง<kotlin.Enum<0:0>>}kotlin.enums.EnumEntries<0:0>:
0000000000020ed0	sub	sp, sp, #0x80
0000000000020ed4	stp	x22, x21, [sp, #0x50]
0000000000020ed8	stp	x20, x19, [sp, #0x60]
0000000000020edc	stp	x29, x30, [sp, #0x70]
0000000000020ee0	add	x29, sp, #0x70
0000000000020ee4	mov	x19, x1
0000000000020ee8	mov	x20, x0
0000000000020eec	movi.16b	v0, #0x0
0000000000020ef0	stp	q0, q0, [sp]
0000000000020ef4	str	xzr, [sp, #0x20]
0000000000020ef8	adrp	x0, 72 ; 0x68000
0000000000020efc	add	x0, x0, #0xa00
0000000000020f00	ldr	x8, [x0]
0000000000020f04	blr	x8
0000000000020f08	ldr	x22, [x0]
0000000000020f0c	ldr	x8, [x22, #0x110]
0000000000020f10	mov	x9, sp
0000000000020f14	str	x9, [x22, #0x110]
0000000000020f18	mov	x9, #0x500000000
0000000000020f1c	stp	x8, x9, [sp, #0x8]
0000000000020f20	adr	x8, #0x61923
0000000000020f24	nop
0000000000020f28	ldarb	w8, [x8]
0000000000020f2c	tbz	w8, #0x0, 0x20f34
0000000000020f30	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000020f34	ldr	x8, [x22, #0x118]
0000000000020f38	add	x0, x8, #0x70
0000000000020f3c	mov	w1, #0x18
0000000000020f40	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000020f44	mov	x21, x0
0000000000020f48	adr	x8, #0x37bf8
0000000000020f4c	nop
0000000000020f50	str	x8, [x21, #0x10]!
0000000000020f54	stur	xzr, [x21, #-0x8]
0000000000020f58	str	x21, [sp, #0x18]
0000000000020f5c	str	x20, [x21, #0x8]
0000000000020f60	ldr	x8, [x22, #0x118]
0000000000020f64	add	x0, x8, #0x70
0000000000020f68	mov	w1, #0x20
0000000000020f6c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000020f70	mov	x20, x0
0000000000020f74	adr	x8, #0x37adc
0000000000020f78	nop
0000000000020f7c	str	x8, [x20, #0x10]!
0000000000020f80	stur	xzr, [x20, #-0x8]
0000000000020f84	str	x20, [sp, #0x20]
0000000000020f88	str	x21, [x20, #0x8]
0000000000020f8c	movi.16b	v0, #0x0
0000000000020f90	stp	q0, q0, [sp, #0x30]
0000000000020f94	add	x8, sp, #0x30
0000000000020f98	add	x1, x8, #0x18
0000000000020f9c	ldr	x9, [x22, #0x110]
0000000000020fa0	str	x8, [x22, #0x110]
0000000000020fa4	mov	x8, #0x400000000
0000000000020fa8	stp	x9, x8, [sp, #0x38]
0000000000020fac	mov	x0, x20
0000000000020fb0	bl	"_kfun:kotlin.enums.EnumEntriesList.<get-entries>#internal"
0000000000020fb4	ldr	x8, [sp, #0x38]
0000000000020fb8	str	x8, [x22, #0x110]
0000000000020fbc	str	x20, [x19]
0000000000020fc0	ldr	x8, [sp, #0x8]
0000000000020fc4	str	x8, [x22, #0x110]
0000000000020fc8	mov	x0, x20
0000000000020fcc	ldp	x29, x30, [sp, #0x70]
0000000000020fd0	ldp	x20, x19, [sp, #0x60]
0000000000020fd4	ldp	x22, x21, [sp, #0x50]
0000000000020fd8	add	sp, sp, #0x80
0000000000020fdc	ret
_kfun:kotlin.enums.$enumEntries$lambda$0$FUNCTION_REFERENCE$21.invoke#internal:
0000000000020fe0	stp	x20, x19, [sp, #-0x20]!
0000000000020fe4	stp	x29, x30, [sp, #0x10]
0000000000020fe8	add	x29, sp, #0x10
0000000000020fec	mov	x19, x1
0000000000020ff0	mov	x20, x0
0000000000020ff4	adr	x8, #0x6184f
0000000000020ff8	nop
0000000000020ffc	ldarb	w8, [x8]
0000000000021000	tbz	w8, #0x0, 0x21008
0000000000021004	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000021008	ldr	x0, [x20, #0x8]
000000000002100c	str	x0, [x19]
0000000000021010	ldp	x29, x30, [sp, #0x10]
0000000000021014	ldp	x20, x19, [sp], #0x20
0000000000021018	ret
_kfun:kotlin.text#substringAfterLast$default__at__kotlin.String(kotlin.Char;kotlin.String?;kotlin.Int){}kotlin.String:
000000000002101c	stp	x22, x21, [sp, #-0x30]!
0000000000021020	stp	x20, x19, [sp, #0x10]
0000000000021024	stp	x29, x30, [sp, #0x20]
0000000000021028	add	x29, sp, #0x20
000000000002102c	mov	x19, x2
0000000000021030	mov	x21, x1
0000000000021034	mov	x20, x0
0000000000021038	adr	x8, #0x6180b
000000000002103c	nop
0000000000021040	ldarb	w8, [x8]
0000000000021044	tbz	w8, #0x0, 0x2104c
0000000000021048	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002104c	mov	x0, x20
0000000000021050	bl	"_kfun:kotlin.text#<get-lastIndex>__at__kotlin.CharSequence(){}kotlin.Int"
0000000000021054	mov	x2, x0
0000000000021058	mov	x0, x20
000000000002105c	mov	x1, x21
0000000000021060	bl	"_kfun:kotlin.text#lastIndexOf__at__kotlin.CharSequence(kotlin.Char;kotlin.Int;kotlin.Boolean){}kotlin.Int"
0000000000021064	cmn	w0, #0x1
0000000000021068	b.eq	0x2109c
000000000002106c	ldr	w2, [x20, #0x8]
0000000000021070	add	w1, w0, #0x1
0000000000021074	mov	x0, x20
0000000000021078	mov	x3, x19
000000000002107c	bl	_Kotlin_String_subSequence
0000000000021080	mov	x20, x0
0000000000021084	ldr	x8, [x0]
0000000000021088	and	x8, x8, #0xfffffffffffffffc
000000000002108c	ldr	x8, [x8]
0000000000021090	ldr	w8, [x8, #0x5c]
0000000000021094	cmp	w8, #0x75
0000000000021098	b.ne	0x210b4
000000000002109c	str	x20, [x19]
00000000000210a0	mov	x0, x20
00000000000210a4	ldp	x29, x30, [sp, #0x20]
00000000000210a8	ldp	x20, x19, [sp, #0x10]
00000000000210ac	ldp	x22, x21, [sp], #0x30
00000000000210b0	ret
00000000000210b4	adr	x1, #0x3462c
00000000000210b8	nop
00000000000210bc	mov	x0, x20
00000000000210c0	bl	_ThrowClassCastException
_kfun:kotlin.text#<get-lastIndex>__at__kotlin.CharSequence(){}kotlin.Int:
00000000000210c4	stp	x20, x19, [sp, #-0x20]!
00000000000210c8	stp	x29, x30, [sp, #0x10]
00000000000210cc	add	x29, sp, #0x10
00000000000210d0	mov	x19, x0
00000000000210d4	adr	x8, #0x6176f
00000000000210d8	nop
00000000000210dc	ldarb	w8, [x8]
00000000000210e0	tbz	w8, #0x0, 0x210e8
00000000000210e4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000210e8	ldr	x8, [x19]
00000000000210ec	and	x8, x8, #0xfffffffffffffffc
00000000000210f0	ldr	x8, [x8]
00000000000210f4	ldr	w9, [x8, #0x3c]
00000000000210f8	ldr	x8, [x8, #0x40]
00000000000210fc	tbnz	w9, #0x1f, 0x2110c
0000000000021100	mov	w10, #0x19
0000000000021104	and	x9, x9, x10
0000000000021108	b	0x21190
000000000002110c	neg	w10, w9
0000000000021110	mvn	w9, w9
0000000000021114	cmp	w10, #0x9
0000000000021118	b.ge	0x21150
000000000002111c	cmp	w10, #0x2
0000000000021120	b.lt	0x21184
0000000000021124	mov	x10, #0x0
0000000000021128	mov	x11, x8
000000000002112c	ldr	w12, [x11]
0000000000021130	cmp	w12, #0x18
0000000000021134	b.gt	0x2118c
0000000000021138	add	x10, x10, #0x1
000000000002113c	add	x11, x11, #0x10
0000000000021140	cmp	x9, x10
0000000000021144	b.ne	0x2112c
0000000000021148	mov	x10, x9
000000000002114c	b	0x2118c
0000000000021150	mov	w10, #0x0
0000000000021154	add	w11, w9, w10
0000000000021158	cmp	w11, #0x0
000000000002115c	cinc	w11, w11, lt
0000000000021160	asr	w11, w11, #1
0000000000021164	sbfiz	x12, x11, #4, #32
0000000000021168	ldr	w12, [x8, x12]
000000000002116c	cmp	w12, #0x19
0000000000021170	csinc	w10, w10, w11, ge
0000000000021174	csel	w9, w9, w11, lt
0000000000021178	cmp	w10, w9
000000000002117c	b.lt	0x21154
0000000000021180	b	0x2118c
0000000000021184	mov	w10, #0x0
0000000000021188	b	0x2118c
000000000002118c	sxtw	x9, w10
0000000000021190	add	x8, x8, x9, lsl #4
0000000000021194	ldr	x8, [x8, #0x8]
0000000000021198	ldr	x8, [x8]
000000000002119c	mov	x0, x19
00000000000211a0	blr	x8
00000000000211a4	sub	w0, w0, #0x1
00000000000211a8	ldp	x29, x30, [sp, #0x10]
00000000000211ac	ldp	x20, x19, [sp], #0x20
00000000000211b0	ret
_kfun:kotlin.text#lastIndexOf__at__kotlin.CharSequence(kotlin.Char;kotlin.Int;kotlin.Boolean){}kotlin.Int:
00000000000211b4	sub	sp, sp, #0xf0
00000000000211b8	stp	x28, x27, [sp, #0x90]
00000000000211bc	stp	x26, x25, [sp, #0xa0]
00000000000211c0	stp	x24, x23, [sp, #0xb0]
00000000000211c4	stp	x22, x21, [sp, #0xc0]
00000000000211c8	stp	x20, x19, [sp, #0xd0]
00000000000211cc	stp	x29, x30, [sp, #0xe0]
00000000000211d0	add	x29, sp, #0xe0
00000000000211d4	mov	x20, x2
00000000000211d8	mov	x21, x1
00000000000211dc	mov	x19, x0
00000000000211e0	movi.16b	v0, #0x0
00000000000211e4	stp	q0, q0, [sp, #0x20]
00000000000211e8	str	xzr, [sp, #0x50]
00000000000211ec	str	q0, [sp, #0x40]
00000000000211f0	adr	x8, #0x33480
00000000000211f4	nop
00000000000211f8	orr	x8, x8, #0x3
00000000000211fc	str	x8, [sp, #0x8]
0000000000021200	mov	w8, #0x1
0000000000021204	str	w8, [sp, #0x10]
0000000000021208	strh	wzr, [sp, #0x18]
000000000002120c	adrp	x0, 71 ; 0x68000
0000000000021210	add	x0, x0, #0xa00
0000000000021214	ldr	x8, [x0]
0000000000021218	blr	x8
000000000002121c	ldr	x22, [x0]
0000000000021220	ldr	x8, [x22, #0x110]
0000000000021224	add	x9, sp, #0x20
0000000000021228	str	x9, [x22, #0x110]
000000000002122c	mov	x9, #0x700000000
0000000000021230	stp	x8, x9, [sp, #0x28]
0000000000021234	adr	x23, #0x6160f
0000000000021238	nop
000000000002123c	ldarb	w8, [x23]
0000000000021240	tbz	w8, #0x0, 0x21248
0000000000021244	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000021248	cbz	x19, 0x212a4
000000000002124c	ldr	x8, [x19]
0000000000021250	and	x8, x8, #0xfffffffffffffffc
0000000000021254	ldr	x8, [x8]
0000000000021258	ldr	w8, [x8, #0x5c]
000000000002125c	cmp	w8, #0x75
0000000000021260	b.ne	0x212a4
0000000000021264	tbnz	w20, #0x1f, 0x21494
0000000000021268	ldr	w8, [x19, #0x8]
000000000002126c	cbz	w8, 0x21494
0000000000021270	sub	w9, w8, #0x1
0000000000021274	cmp	w8, w20
0000000000021278	csel	w0, w20, w9, hi
000000000002127c	tbnz	w0, #0x1f, 0x21494
0000000000021280	add	x8, x19, #0x10
0000000000021284	ldrh	w9, [x8, x0, lsl #1]
0000000000021288	cmp	w9, w21
000000000002128c	b.eq	0x214a0
0000000000021290	sub	x0, x0, #0x1
0000000000021294	add	w9, w0, #0x1
0000000000021298	cmp	w9, #0x0
000000000002129c	b.gt	0x21284
00000000000212a0	b	0x21494
00000000000212a4	add	x8, sp, #0x8
00000000000212a8	stp	x8, x8, [sp, #0x38]
00000000000212ac	stp	x8, x8, [sp, #0x48]
00000000000212b0	ldr	x9, [sp, #0x8]
00000000000212b4	strh	w21, [sp, #0x18]
00000000000212b8	ldr	w8, [sp, #0x10]
00000000000212bc	cmp	w8, #0x1
00000000000212c0	b.ne	0x2135c
00000000000212c4	cbz	x19, 0x2135c
00000000000212c8	ldr	x8, [x19]
00000000000212cc	and	x8, x8, #0xfffffffffffffffc
00000000000212d0	ldr	x8, [x8]
00000000000212d4	ldr	w8, [x8, #0x5c]
00000000000212d8	cmp	w8, #0x75
00000000000212dc	b.ne	0x2135c
00000000000212e0	movi.16b	v0, #0x0
00000000000212e4	stp	q0, q0, [sp, #0x60]
00000000000212e8	str	xzr, [sp, #0x80]
00000000000212ec	ldr	x8, [x22, #0x110]
00000000000212f0	add	x9, sp, #0x60
00000000000212f4	str	x9, [x22, #0x110]
00000000000212f8	mov	x9, #0x500000000
00000000000212fc	stp	x8, x9, [sp, #0x68]
0000000000021300	ldr	w8, [sp, #0x10]
0000000000021304	cmp	w8, #0x1
0000000000021308	b.ne	0x214d0
000000000002130c	ldrh	w8, [sp, #0x18]
0000000000021310	ldr	x9, [sp, #0x68]
0000000000021314	str	x9, [x22, #0x110]
0000000000021318	tbnz	w20, #0x1f, 0x21494
000000000002131c	ldr	w9, [x19, #0x8]
0000000000021320	cbz	w9, 0x21494
0000000000021324	sub	w10, w9, #0x1
0000000000021328	cmp	w9, w20
000000000002132c	csel	w9, w20, w10, hi
0000000000021330	tbnz	w9, #0x1f, 0x21494
0000000000021334	add	x10, x19, #0x10
0000000000021338	ldrh	w11, [x10, x9, lsl #1]
000000000002133c	cmp	w11, w8
0000000000021340	b.eq	0x214c8
0000000000021344	sub	x9, x9, #0x1
0000000000021348	add	w11, w9, #0x1
000000000002134c	mov	w0, #-0x1
0000000000021350	cmp	w11, #0x0
0000000000021354	b.gt	0x21338
0000000000021358	b	0x214a0
000000000002135c	mov	x0, x19
0000000000021360	bl	"_kfun:kotlin.text#<get-lastIndex>__at__kotlin.CharSequence(){}kotlin.Int"
0000000000021364	cmp	w0, w20
0000000000021368	csel	w20, w0, w20, lt
000000000002136c	tbnz	w20, #0x1f, 0x21494
0000000000021370	add	x8, sp, #0x8
0000000000021374	add	x24, x8, #0x10
0000000000021378	mov	w25, #0x19
000000000002137c	ldarb	w8, [x23]
0000000000021380	tbz	w8, #0x0, 0x21388
0000000000021384	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000021388	sub	w26, w20, #0x1
000000000002138c	ldr	x8, [x19]
0000000000021390	and	x8, x8, #0xfffffffffffffffc
0000000000021394	ldr	x8, [x8]
0000000000021398	ldr	w9, [x8, #0x3c]
000000000002139c	ldr	x8, [x8, #0x40]
00000000000213a0	tbnz	w9, #0x1f, 0x213ac
00000000000213a4	and	x9, x9, x25
00000000000213a8	b	0x21430
00000000000213ac	neg	w10, w9
00000000000213b0	mvn	w9, w9
00000000000213b4	cmp	w10, #0x9
00000000000213b8	b.ge	0x213f0
00000000000213bc	cmp	w10, #0x2
00000000000213c0	b.lt	0x21424
00000000000213c4	mov	x10, #0x0
00000000000213c8	mov	x11, x8
00000000000213cc	ldr	w12, [x11]
00000000000213d0	cmp	w12, #0x18
00000000000213d4	b.gt	0x2142c
00000000000213d8	add	x10, x10, #0x1
00000000000213dc	add	x11, x11, #0x10
00000000000213e0	cmp	x9, x10
00000000000213e4	b.ne	0x213cc
00000000000213e8	mov	x10, x9
00000000000213ec	b	0x2142c
00000000000213f0	mov	w10, #0x0
00000000000213f4	add	w11, w9, w10
00000000000213f8	cmp	w11, #0x0
00000000000213fc	cinc	w11, w11, lt
0000000000021400	asr	w11, w11, #1
0000000000021404	sbfiz	x12, x11, #4, #32
0000000000021408	ldr	w12, [x8, x12]
000000000002140c	cmp	w12, #0x19
0000000000021410	csinc	w10, w10, w11, ge
0000000000021414	csel	w9, w9, w11, lt
0000000000021418	cmp	w10, w9
000000000002141c	b.lt	0x213f4
0000000000021420	b	0x2142c
0000000000021424	mov	w10, #0x0
0000000000021428	b	0x2142c
000000000002142c	sxtw	x9, w10
0000000000021430	add	x8, x8, x9, lsl #4
0000000000021434	ldr	x8, [x8, #0x8]
0000000000021438	ldr	x8, [x8, #0x8]
000000000002143c	mov	x0, x19
0000000000021440	mov	x1, x20
0000000000021444	blr	x8
0000000000021448	mov	x21, x0
000000000002144c	ldr	w8, [sp, #0x10]
0000000000021450	bic	w27, w8, w8, asr #31
0000000000021454	mov	x28, x24
0000000000021458	cbz	w27, 0x21480
000000000002145c	ldarb	w8, [x23]
0000000000021460	tbz	w8, #0x0, 0x21468
0000000000021464	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000021468	ldrh	w8, [x28]
000000000002146c	cmp	w8, w21
0000000000021470	b.eq	0x2149c
0000000000021474	sub	w27, w27, #0x1
0000000000021478	add	x28, x28, #0x2
000000000002147c	cbnz	w27, 0x2145c
0000000000021480	mov	w0, #-0x1
0000000000021484	cmp	w20, #0x0
0000000000021488	mov	x20, x26
000000000002148c	b.gt	0x2137c
0000000000021490	b	0x214a0
0000000000021494	mov	w0, #-0x1
0000000000021498	b	0x214a0
000000000002149c	mov	x0, x20
00000000000214a0	ldr	x8, [sp, #0x28]
00000000000214a4	str	x8, [x22, #0x110]
00000000000214a8	ldp	x29, x30, [sp, #0xe0]
00000000000214ac	ldp	x20, x19, [sp, #0xd0]
00000000000214b0	ldp	x22, x21, [sp, #0xc0]
00000000000214b4	ldp	x24, x23, [sp, #0xb0]
00000000000214b8	ldp	x26, x25, [sp, #0xa0]
00000000000214bc	ldp	x28, x27, [sp, #0x90]
00000000000214c0	add	sp, sp, #0xf0
00000000000214c4	ret
00000000000214c8	mov	x0, x9
00000000000214cc	b	0x214a0
00000000000214d0	cbnz	w8, 0x21508
00000000000214d4	ldr	x8, [x22, #0x118]
00000000000214d8	add	x0, x8, #0x70
00000000000214dc	mov	w1, #0x38
00000000000214e0	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000214e4	mov	x19, x0
00000000000214e8	adr	x8, #0x335b8
00000000000214ec	nop
00000000000214f0	str	x8, [x19, #0x10]!
00000000000214f4	stur	xzr, [x19, #-0x8]
00000000000214f8	str	x19, [sp, #0x78]
00000000000214fc	adr	x1, #0x40494
0000000000021500	nop
0000000000021504	b	0x21538
0000000000021508	ldr	x8, [x22, #0x118]
000000000002150c	add	x0, x8, #0x70
0000000000021510	mov	w1, #0x38
0000000000021514	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000021518	mov	x19, x0
000000000002151c	adr	x8, #0x33764
0000000000021520	nop
0000000000021524	str	x8, [x19, #0x10]!
0000000000021528	stur	xzr, [x19, #-0x8]
000000000002152c	str	x19, [sp, #0x80]
0000000000021530	adr	x1, #0x40490
0000000000021534	nop
0000000000021538	mov	x0, x19
000000000002153c	bl	"_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}"
0000000000021540	mov	x0, x19
0000000000021544	bl	_ThrowException
_kfun:kotlin.UByte#$<bridge-NBNB>compareTo(kotlin.UByte){}kotlin.Int(kotlin.Any?){}kotlin.Int:
0000000000021548	stp	x20, x19, [sp, #-0x20]!
000000000002154c	stp	x29, x30, [sp, #0x10]
0000000000021550	add	x29, sp, #0x10
0000000000021554	mov	x19, x1
0000000000021558	mov	x20, x0
000000000002155c	adr	x8, #0x612e7
0000000000021560	nop
0000000000021564	ldarb	w8, [x8]
0000000000021568	tbz	w8, #0x0, 0x21570
000000000002156c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000021570	ldrb	w8, [x20, #0x8]
0000000000021574	ldrb	w9, [x19, #0x8]
0000000000021578	cmp	w8, w9
000000000002157c	mov	w8, #-0x1
0000000000021580	cneg	w8, w8, hs
0000000000021584	csel	w0, wzr, w8, eq
0000000000021588	ldp	x29, x30, [sp, #0x10]
000000000002158c	ldp	x20, x19, [sp], #0x20
0000000000021590	ret
_kfun:kotlin.UByte#$<bridge-NBN>toString(){}kotlin.String(){}kotlin.String:
0000000000021594	sub	sp, sp, #0x40
0000000000021598	stp	x20, x19, [sp, #0x20]
000000000002159c	stp	x29, x30, [sp, #0x30]
00000000000215a0	add	x29, sp, #0x30
00000000000215a4	mov	x19, x1
00000000000215a8	mov	x20, x0
00000000000215ac	adr	x8, #0x61297
00000000000215b0	nop
00000000000215b4	ldarb	w8, [x8]
00000000000215b8	tbz	w8, #0x0, 0x215c0
00000000000215bc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000215c0	ldrb	w8, [x20, #0x8]
00000000000215c4	str	x8, [sp]
00000000000215c8	adr	x2, #0x316d8 ; literal pool for: "%d"
00000000000215cc	nop
00000000000215d0	add	x0, sp, #0x10
00000000000215d4	mov	w1, #0x10
00000000000215d8	bl	__ZN5konan8snprintfEPcmPKcz
00000000000215dc	add	x0, sp, #0x10
00000000000215e0	mov	x1, x19
00000000000215e4	bl	_CreateStringFromCString
00000000000215e8	str	x0, [x19]
00000000000215ec	ldp	x29, x30, [sp, #0x30]
00000000000215f0	ldp	x20, x19, [sp, #0x20]
00000000000215f4	add	sp, sp, #0x40
00000000000215f8	ret
_kfun:kotlin.UByte#$<bridge-NBN>hashCode(){}kotlin.Int(){}kotlin.Int:
00000000000215fc	stp	x20, x19, [sp, #-0x20]!
0000000000021600	stp	x29, x30, [sp, #0x10]
0000000000021604	add	x29, sp, #0x10
0000000000021608	mov	x19, x0
000000000002160c	adr	x8, #0x61237
0000000000021610	nop
0000000000021614	ldarb	w8, [x8]
0000000000021618	tbz	w8, #0x0, 0x21620
000000000002161c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000021620	ldrsb	w0, [x19, #0x8]
0000000000021624	ldp	x29, x30, [sp, #0x10]
0000000000021628	ldp	x20, x19, [sp], #0x20
000000000002162c	ret
_kfun:kotlin.UByte#$<bridge-NBNN>equals(kotlin.Any?){}kotlin.Boolean(kotlin.Any?){}kotlin.Boolean:
0000000000021630	stp	x20, x19, [sp, #-0x20]!
0000000000021634	stp	x29, x30, [sp, #0x10]
0000000000021638	add	x29, sp, #0x10
000000000002163c	mov	x19, x1
0000000000021640	mov	x20, x0
0000000000021644	adr	x8, #0x611ff
0000000000021648	nop
000000000002164c	ldarb	w8, [x8]
0000000000021650	tbz	w8, #0x0, 0x21658
0000000000021654	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000021658	cbz	x19, 0x216a8
000000000002165c	ldrb	w8, [x20, #0x8]
0000000000021660	ldr	x9, [x19]
0000000000021664	and	x9, x9, #0xfffffffffffffffc
0000000000021668	ldr	x9, [x9]
000000000002166c	ldr	w9, [x9, #0x5c]
0000000000021670	cmp	w9, #0x17f
0000000000021674	b.ne	0x216a8
0000000000021678	ldr	x9, [x19]
000000000002167c	and	x9, x9, #0xfffffffffffffffc
0000000000021680	ldr	x9, [x9]
0000000000021684	ldr	w9, [x9, #0x5c]
0000000000021688	cmp	w9, #0x17f
000000000002168c	b.ne	0x216b8
0000000000021690	ldrb	w9, [x19, #0x8]
0000000000021694	cmp	w9, w8
0000000000021698	cset	w0, eq
000000000002169c	ldp	x29, x30, [sp, #0x10]
00000000000216a0	ldp	x20, x19, [sp], #0x20
00000000000216a4	ret
00000000000216a8	mov	w0, #0x0
00000000000216ac	ldp	x29, x30, [sp, #0x10]
00000000000216b0	ldp	x20, x19, [sp], #0x20
00000000000216b4	ret
00000000000216b8	adr	x1, #0x375f8
00000000000216bc	nop
00000000000216c0	mov	x0, x19
00000000000216c4	bl	_ThrowClassCastException
_kfun:kotlin.UInt#$<bridge-NBNB>compareTo(kotlin.UInt){}kotlin.Int(kotlin.Any?){}kotlin.Int:
00000000000216c8	stp	x20, x19, [sp, #-0x20]!
00000000000216cc	stp	x29, x30, [sp, #0x10]
00000000000216d0	add	x29, sp, #0x10
00000000000216d4	mov	x19, x1
00000000000216d8	mov	x20, x0
00000000000216dc	adr	x8, #0x61167
00000000000216e0	nop
00000000000216e4	ldarb	w8, [x8]
00000000000216e8	tbz	w8, #0x0, 0x216f0
00000000000216ec	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000216f0	ldr	w8, [x20, #0x8]
00000000000216f4	ldr	w9, [x19, #0x8]
00000000000216f8	cmp	w8, w9
00000000000216fc	mov	w8, #-0x1
0000000000021700	cneg	w8, w8, hs
0000000000021704	csel	w0, wzr, w8, eq
0000000000021708	ldp	x29, x30, [sp, #0x10]
000000000002170c	ldp	x20, x19, [sp], #0x20
0000000000021710	ret
_kfun:kotlin.UInt#$<bridge-NBN>toString(){}kotlin.String(){}kotlin.String:
0000000000021714	sub	sp, sp, #0x50
0000000000021718	stp	x20, x19, [sp, #0x30]
000000000002171c	stp	x29, x30, [sp, #0x40]
0000000000021720	add	x29, sp, #0x40
0000000000021724	mov	x19, x1
0000000000021728	mov	x20, x0
000000000002172c	adr	x8, #0x61117
0000000000021730	nop
0000000000021734	ldarb	w8, [x8]
0000000000021738	tbz	w8, #0x0, 0x21740
000000000002173c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000021740	ldr	w8, [x20, #0x8]
0000000000021744	str	x8, [sp]
0000000000021748	adr	x2, #0x31553 ; literal pool for: "%lld"
000000000002174c	nop
0000000000021750	add	x0, sp, #0x10
0000000000021754	mov	w1, #0x20
0000000000021758	bl	__ZN5konan8snprintfEPcmPKcz
000000000002175c	add	x0, sp, #0x10
0000000000021760	mov	x1, x19
0000000000021764	bl	_CreateStringFromCString
0000000000021768	str	x0, [x19]
000000000002176c	ldp	x29, x30, [sp, #0x40]
0000000000021770	ldp	x20, x19, [sp, #0x30]
0000000000021774	add	sp, sp, #0x50
0000000000021778	ret
_kfun:kotlin.UInt#$<bridge-NBN>hashCode(){}kotlin.Int(){}kotlin.Int:
000000000002177c	stp	x20, x19, [sp, #-0x20]!
0000000000021780	stp	x29, x30, [sp, #0x10]
0000000000021784	add	x29, sp, #0x10
0000000000021788	mov	x19, x0
000000000002178c	adr	x8, #0x610b7
0000000000021790	nop
0000000000021794	ldarb	w8, [x8]
0000000000021798	tbz	w8, #0x0, 0x217a0
000000000002179c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000217a0	ldr	w0, [x19, #0x8]
00000000000217a4	ldp	x29, x30, [sp, #0x10]
00000000000217a8	ldp	x20, x19, [sp], #0x20
00000000000217ac	ret
_kfun:kotlin.UInt#$<bridge-NBNN>equals(kotlin.Any?){}kotlin.Boolean(kotlin.Any?){}kotlin.Boolean:
00000000000217b0	stp	x20, x19, [sp, #-0x20]!
00000000000217b4	stp	x29, x30, [sp, #0x10]
00000000000217b8	add	x29, sp, #0x10
00000000000217bc	mov	x19, x1
00000000000217c0	mov	x20, x0
00000000000217c4	adr	x8, #0x6107f
00000000000217c8	nop
00000000000217cc	ldarb	w8, [x8]
00000000000217d0	tbz	w8, #0x0, 0x217d8
00000000000217d4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000217d8	cbz	x19, 0x21828
00000000000217dc	ldr	w8, [x20, #0x8]
00000000000217e0	ldr	x9, [x19]
00000000000217e4	and	x9, x9, #0xfffffffffffffffc
00000000000217e8	ldr	x9, [x9]
00000000000217ec	ldr	w9, [x9, #0x5c]
00000000000217f0	cmp	w9, #0x183
00000000000217f4	b.ne	0x21828
00000000000217f8	ldr	x9, [x19]
00000000000217fc	and	x9, x9, #0xfffffffffffffffc
0000000000021800	ldr	x9, [x9]
0000000000021804	ldr	w9, [x9, #0x5c]
0000000000021808	cmp	w9, #0x183
000000000002180c	b.ne	0x21838
0000000000021810	ldr	w9, [x19, #0x8]
0000000000021814	cmp	w9, w8
0000000000021818	cset	w0, eq
000000000002181c	ldp	x29, x30, [sp, #0x10]
0000000000021820	ldp	x20, x19, [sp], #0x20
0000000000021824	ret
0000000000021828	mov	w0, #0x0
000000000002182c	ldp	x29, x30, [sp, #0x10]
0000000000021830	ldp	x20, x19, [sp], #0x20
0000000000021834	ret
0000000000021838	adr	x1, #0x37508
000000000002183c	nop
0000000000021840	mov	x0, x19
0000000000021844	bl	_ThrowClassCastException
_kfun:kotlin.ULong#$<bridge-NBNB>compareTo(kotlin.ULong){}kotlin.Int(kotlin.Any?){}kotlin.Int:
0000000000021848	stp	x20, x19, [sp, #-0x20]!
000000000002184c	stp	x29, x30, [sp, #0x10]
0000000000021850	add	x29, sp, #0x10
0000000000021854	mov	x19, x1
0000000000021858	mov	x20, x0
000000000002185c	adr	x8, #0x60fe7
0000000000021860	nop
0000000000021864	ldarb	w8, [x8]
0000000000021868	tbz	w8, #0x0, 0x21870
000000000002186c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000021870	ldr	x8, [x20, #0x8]
0000000000021874	ldr	x9, [x19, #0x8]
0000000000021878	cmp	x8, x9
000000000002187c	mov	w8, #-0x1
0000000000021880	cneg	w8, w8, hs
0000000000021884	csel	w0, wzr, w8, eq
0000000000021888	ldp	x29, x30, [sp, #0x10]
000000000002188c	ldp	x20, x19, [sp], #0x20
0000000000021890	ret
_kfun:kotlin.ULong#$<bridge-NBN>toString(){}kotlin.String(){}kotlin.String:
0000000000021894	sub	sp, sp, #0xd0
0000000000021898	stp	x24, x23, [sp, #0x90]
000000000002189c	stp	x22, x21, [sp, #0xa0]
00000000000218a0	stp	x20, x19, [sp, #0xb0]
00000000000218a4	stp	x29, x30, [sp, #0xc0]
00000000000218a8	add	x29, sp, #0xc0
00000000000218ac	mov	x19, x1
00000000000218b0	mov	x20, x0
00000000000218b4	adr	x8, #0x60f8f
00000000000218b8	nop
00000000000218bc	ldarb	w8, [x8]
00000000000218c0	tbz	w8, #0x0, 0x218c8
00000000000218c4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000218c8	ldr	x8, [x20, #0x8]
00000000000218cc	movi.16b	v0, #0x0
00000000000218d0	stp	q0, q0, [sp]
00000000000218d4	str	xzr, [sp, #0x20]
00000000000218d8	adrp	x20, 71 ; 0x68000
00000000000218dc	add	x20, x20, #0xa00
00000000000218e0	ldr	x24, [x20]
00000000000218e4	mov	x0, x20
00000000000218e8	blr	x24
00000000000218ec	ldr	x10, [x0]
00000000000218f0	ldr	x11, [x10, #0x110]
00000000000218f4	mov	x9, sp
00000000000218f8	str	x9, [x10, #0x110]
00000000000218fc	mov	x10, #0x500000000
0000000000021900	stp	x11, x10, [sp, #0x8]
0000000000021904	tbnz	x8, #0x3f, 0x2191c
0000000000021908	mov	x0, x8
000000000002190c	mov	w1, #0xa
0000000000021910	mov	x2, x19
0000000000021914	bl	_Kotlin_Long_toStringRadix
0000000000021918	b	0x2197c
000000000002191c	add	x21, x9, #0x20
0000000000021920	add	x2, x9, #0x18
0000000000021924	mov	x9, #-0x3333333333333334
0000000000021928	movk	x9, #0xcccd
000000000002192c	umulh	x9, x8, x9
0000000000021930	lsr	x9, x9, #4
0000000000021934	mov	x10, #-0x14
0000000000021938	madd	x8, x9, x10, x8
000000000002193c	sub	x10, x8, #0xa
0000000000021940	cmp	x8, #0x9
0000000000021944	cset	w0, gt
0000000000021948	csel	x22, x10, x8, gt
000000000002194c	bfi	x0, x9, #1, #60
0000000000021950	mov	w1, #0xa
0000000000021954	bl	_Kotlin_Long_toStringRadix
0000000000021958	mov	x23, x0
000000000002195c	mov	x0, x22
0000000000021960	mov	w1, #0xa
0000000000021964	mov	x2, x21
0000000000021968	bl	_Kotlin_Long_toStringRadix
000000000002196c	mov	x1, x0
0000000000021970	mov	x0, x23
0000000000021974	mov	x2, x19
0000000000021978	bl	_Kotlin_String_plusImpl
000000000002197c	mov	x8, x0
0000000000021980	str	x0, [x19]
0000000000021984	mov	x0, x20
0000000000021988	blr	x24
000000000002198c	ldr	x9, [x0]
0000000000021990	ldr	x10, [sp, #0x8]
0000000000021994	str	x10, [x9, #0x110]
0000000000021998	str	x8, [x19]
000000000002199c	mov	x0, x8
00000000000219a0	ldp	x29, x30, [sp, #0xc0]
00000000000219a4	ldp	x20, x19, [sp, #0xb0]
00000000000219a8	ldp	x22, x21, [sp, #0xa0]
00000000000219ac	ldp	x24, x23, [sp, #0x90]
00000000000219b0	add	sp, sp, #0xd0
00000000000219b4	ret
_kfun:kotlin.ULong#$<bridge-NBN>hashCode(){}kotlin.Int(){}kotlin.Int:
00000000000219b8	stp	x20, x19, [sp, #-0x20]!
00000000000219bc	stp	x29, x30, [sp, #0x10]
00000000000219c0	add	x29, sp, #0x10
00000000000219c4	mov	x19, x0
00000000000219c8	adr	x8, #0x60e7b
00000000000219cc	nop
00000000000219d0	ldarb	w8, [x8]
00000000000219d4	tbz	w8, #0x0, 0x219dc
00000000000219d8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000219dc	ldp	w8, w9, [x19, #0x8]
00000000000219e0	eor	w0, w9, w8
00000000000219e4	ldp	x29, x30, [sp, #0x10]
00000000000219e8	ldp	x20, x19, [sp], #0x20
00000000000219ec	ret
_kfun:kotlin.ULong#$<bridge-NBNN>equals(kotlin.Any?){}kotlin.Boolean(kotlin.Any?){}kotlin.Boolean:
00000000000219f0	stp	x20, x19, [sp, #-0x20]!
00000000000219f4	stp	x29, x30, [sp, #0x10]
00000000000219f8	add	x29, sp, #0x10
00000000000219fc	mov	x19, x1
0000000000021a00	mov	x20, x0
0000000000021a04	adr	x8, #0x60e3f
0000000000021a08	nop
0000000000021a0c	ldarb	w8, [x8]
0000000000021a10	tbz	w8, #0x0, 0x21a18
0000000000021a14	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000021a18	cbz	x19, 0x21a68
0000000000021a1c	ldr	x8, [x20, #0x8]
0000000000021a20	ldr	x9, [x19]
0000000000021a24	and	x9, x9, #0xfffffffffffffffc
0000000000021a28	ldr	x9, [x9]
0000000000021a2c	ldr	w9, [x9, #0x5c]
0000000000021a30	cmp	w9, #0x18c
0000000000021a34	b.ne	0x21a68
0000000000021a38	ldr	x9, [x19]
0000000000021a3c	and	x9, x9, #0xfffffffffffffffc
0000000000021a40	ldr	x9, [x9]
0000000000021a44	ldr	w9, [x9, #0x5c]
0000000000021a48	cmp	w9, #0x18c
0000000000021a4c	b.ne	0x21a78
0000000000021a50	ldr	x9, [x19, #0x8]
0000000000021a54	cmp	x9, x8
0000000000021a58	cset	w0, eq
0000000000021a5c	ldp	x29, x30, [sp, #0x10]
0000000000021a60	ldp	x20, x19, [sp], #0x20
0000000000021a64	ret
0000000000021a68	mov	w0, #0x0
0000000000021a6c	ldp	x29, x30, [sp, #0x10]
0000000000021a70	ldp	x20, x19, [sp], #0x20
0000000000021a74	ret
0000000000021a78	adr	x1, #0x37358
0000000000021a7c	nop
0000000000021a80	mov	x0, x19
0000000000021a84	bl	_ThrowClassCastException
_kfun:kotlin.UShort#$<bridge-NBNB>compareTo(kotlin.UShort){}kotlin.Int(kotlin.Any?){}kotlin.Int:
0000000000021a88	stp	x20, x19, [sp, #-0x20]!
0000000000021a8c	stp	x29, x30, [sp, #0x10]
0000000000021a90	add	x29, sp, #0x10
0000000000021a94	mov	x19, x1
0000000000021a98	mov	x20, x0
0000000000021a9c	adr	x8, #0x60da7
0000000000021aa0	nop
0000000000021aa4	ldarb	w8, [x8]
0000000000021aa8	tbz	w8, #0x0, 0x21ab0
0000000000021aac	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000021ab0	ldrh	w8, [x20, #0x8]
0000000000021ab4	ldrh	w9, [x19, #0x8]
0000000000021ab8	cmp	w8, w9
0000000000021abc	mov	w8, #-0x1
0000000000021ac0	cneg	w8, w8, hs
0000000000021ac4	csel	w0, wzr, w8, eq
0000000000021ac8	ldp	x29, x30, [sp, #0x10]
0000000000021acc	ldp	x20, x19, [sp], #0x20
0000000000021ad0	ret
_kfun:kotlin.UShort#$<bridge-NBN>toString(){}kotlin.String(){}kotlin.String:
0000000000021ad4	sub	sp, sp, #0x40
0000000000021ad8	stp	x20, x19, [sp, #0x20]
0000000000021adc	stp	x29, x30, [sp, #0x30]
0000000000021ae0	add	x29, sp, #0x30
0000000000021ae4	mov	x19, x1
0000000000021ae8	mov	x20, x0
0000000000021aec	adr	x8, #0x60d57
0000000000021af0	nop
0000000000021af4	ldarb	w8, [x8]
0000000000021af8	tbz	w8, #0x0, 0x21b00
0000000000021afc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000021b00	ldrh	w8, [x20, #0x8]
0000000000021b04	str	x8, [sp]
0000000000021b08	adr	x2, #0x31198 ; literal pool for: "%d"
0000000000021b0c	nop
0000000000021b10	add	x0, sp, #0x10
0000000000021b14	mov	w1, #0x10
0000000000021b18	bl	__ZN5konan8snprintfEPcmPKcz
0000000000021b1c	add	x0, sp, #0x10
0000000000021b20	mov	x1, x19
0000000000021b24	bl	_CreateStringFromCString
0000000000021b28	str	x0, [x19]
0000000000021b2c	ldp	x29, x30, [sp, #0x30]
0000000000021b30	ldp	x20, x19, [sp, #0x20]
0000000000021b34	add	sp, sp, #0x40
0000000000021b38	ret
_kfun:kotlin.UShort#$<bridge-NBN>hashCode(){}kotlin.Int(){}kotlin.Int:
0000000000021b3c	stp	x20, x19, [sp, #-0x20]!
0000000000021b40	stp	x29, x30, [sp, #0x10]
0000000000021b44	add	x29, sp, #0x10
0000000000021b48	mov	x19, x0
0000000000021b4c	adr	x8, #0x60cf7
0000000000021b50	nop
0000000000021b54	ldarb	w8, [x8]
0000000000021b58	tbz	w8, #0x0, 0x21b60
0000000000021b5c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000021b60	ldrsh	w0, [x19, #0x8]
0000000000021b64	ldp	x29, x30, [sp, #0x10]
0000000000021b68	ldp	x20, x19, [sp], #0x20
0000000000021b6c	ret
_kfun:kotlin.UShort#$<bridge-NBNN>equals(kotlin.Any?){}kotlin.Boolean(kotlin.Any?){}kotlin.Boolean:
0000000000021b70	stp	x20, x19, [sp, #-0x20]!
0000000000021b74	stp	x29, x30, [sp, #0x10]
0000000000021b78	add	x29, sp, #0x10
0000000000021b7c	mov	x19, x1
0000000000021b80	mov	x20, x0
0000000000021b84	adr	x8, #0x60cbf
0000000000021b88	nop
0000000000021b8c	ldarb	w8, [x8]
0000000000021b90	tbz	w8, #0x0, 0x21b98
0000000000021b94	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000021b98	cbz	x19, 0x21be8
0000000000021b9c	ldrh	w8, [x20, #0x8]
0000000000021ba0	ldr	x9, [x19]
0000000000021ba4	and	x9, x9, #0xfffffffffffffffc
0000000000021ba8	ldr	x9, [x9]
0000000000021bac	ldr	w9, [x9, #0x5c]
0000000000021bb0	cmp	w9, #0x195
0000000000021bb4	b.ne	0x21be8
0000000000021bb8	ldr	x9, [x19]
0000000000021bbc	and	x9, x9, #0xfffffffffffffffc
0000000000021bc0	ldr	x9, [x9]
0000000000021bc4	ldr	w9, [x9, #0x5c]
0000000000021bc8	cmp	w9, #0x195
0000000000021bcc	b.ne	0x21bf8
0000000000021bd0	ldrh	w9, [x19, #0x8]
0000000000021bd4	cmp	w9, w8
0000000000021bd8	cset	w0, eq
0000000000021bdc	ldp	x29, x30, [sp, #0x10]
0000000000021be0	ldp	x20, x19, [sp], #0x20
0000000000021be4	ret
0000000000021be8	mov	w0, #0x0
0000000000021bec	ldp	x29, x30, [sp, #0x10]
0000000000021bf0	ldp	x20, x19, [sp], #0x20
0000000000021bf4	ret
0000000000021bf8	adr	x1, #0x37268
0000000000021bfc	nop
0000000000021c00	mov	x0, x19
0000000000021c04	bl	_ThrowClassCastException
_kfun:com.example.fannkuchReduxKmm.FannkuchReduxKmm#fannkuch(kotlin.Int){}kotlin.Int:
0000000000021c08	sub	sp, sp, #0xf0
0000000000021c0c	stp	x28, x27, [sp, #0x90]
0000000000021c10	stp	x26, x25, [sp, #0xa0]
0000000000021c14	stp	x24, x23, [sp, #0xb0]
0000000000021c18	stp	x22, x21, [sp, #0xc0]
0000000000021c1c	stp	x20, x19, [sp, #0xd0]
0000000000021c20	stp	x29, x30, [sp, #0xe0]
0000000000021c24	add	x29, sp, #0xe0
0000000000021c28	mov	x24, x0
0000000000021c2c	movi.16b	v0, #0x0
0000000000021c30	stp	q0, q0, [sp, #0x50]
0000000000021c34	str	xzr, [sp, #0x80]
0000000000021c38	str	q0, [sp, #0x70]
0000000000021c3c	adrp	x0, 71 ; 0x68000
0000000000021c40	add	x0, x0, #0xa00
0000000000021c44	ldr	x8, [x0]
0000000000021c48	blr	x8
0000000000021c4c	ldr	x23, [x0]
0000000000021c50	ldr	x8, [x23, #0x110]
0000000000021c54	add	x9, sp, #0x50
0000000000021c58	str	x9, [x23, #0x110]
0000000000021c5c	mov	x9, #0x700000000
0000000000021c60	stp	x8, x9, [sp, #0x58]
0000000000021c64	adr	x8, #0x60bdf
0000000000021c68	nop
0000000000021c6c	ldarb	w8, [x8]
0000000000021c70	tbz	w8, #0x0, 0x21c78
0000000000021c74	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000021c78	tbnz	w24, #0x1f, 0x220a8
0000000000021c7c	ldr	x8, [x23, #0x118]
0000000000021c80	mov	w9, w24
0000000000021c84	str	x9, [sp, #0x30]
0000000000021c88	lsl	x9, x9, #2
0000000000021c8c	add	x9, x9, #0x1f
0000000000021c90	and	x22, x9, #0x7fffffff8
0000000000021c94	add	x0, x8, #0x70
0000000000021c98	mov	x1, x22
0000000000021c9c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000021ca0	mov	x20, x0
0000000000021ca4	adr	x19, #0x32a5c
0000000000021ca8	nop
0000000000021cac	mov	x8, x0
0000000000021cb0	str	x19, [x8, #0x10]!
0000000000021cb4	str	xzr, [x0, #0x18]
0000000000021cb8	str	xzr, [x0, #0x8]
0000000000021cbc	str	w24, [x0, #0x18]
0000000000021cc0	str	x8, [sp, #0x28]
0000000000021cc4	str	x8, [sp, #0x68]
0000000000021cc8	ldr	x8, [x23, #0x118]
0000000000021ccc	add	x0, x8, #0x70
0000000000021cd0	mov	x1, x22
0000000000021cd4	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000021cd8	mov	x21, x0
0000000000021cdc	mov	x25, x0
0000000000021ce0	str	x19, [x25, #0x10]!
0000000000021ce4	str	xzr, [x0, #0x18]
0000000000021ce8	str	xzr, [x0, #0x8]
0000000000021cec	str	w24, [x0, #0x18]
0000000000021cf0	str	x25, [sp, #0x70]
0000000000021cf4	ldr	x8, [x23, #0x118]
0000000000021cf8	add	x0, x8, #0x70
0000000000021cfc	mov	x1, x22
0000000000021d00	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000021d04	mov	x8, x0
0000000000021d08	str	x19, [x8, #0x10]!
0000000000021d0c	str	xzr, [x0, #0x18]
0000000000021d10	str	xzr, [x0, #0x8]
0000000000021d14	str	x0, [sp, #0x18]
0000000000021d18	str	w24, [x0, #0x18]
0000000000021d1c	str	x8, [sp, #0x40]
0000000000021d20	str	x8, [sp, #0x78]
0000000000021d24	cbz	w24, 0x21d6c
0000000000021d28	mov	x22, #0x0
0000000000021d2c	add	x19, x21, #0x20
0000000000021d30	adr	x8, #0x60b13
0000000000021d34	nop
0000000000021d38	ldarb	w8, [x8]
0000000000021d3c	tbz	w8, #0x0, 0x21d44
0000000000021d40	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000021d44	ldr	w8, [x21, #0x18]
0000000000021d48	cmp	x22, x8
0000000000021d4c	b.hs	0x220a4
0000000000021d50	ldr	xzr, [x25]
0000000000021d54	str	w22, [x19, x22, lsl #2]
0000000000021d58	add	x8, x22, #0x1
0000000000021d5c	mov	x22, x8
0000000000021d60	ldr	x9, [sp, #0x30]
0000000000021d64	cmp	x9, x8
0000000000021d68	b.ne	0x21d30
0000000000021d6c	str	x23, [sp]
0000000000021d70	str	xzr, [sp, #0x10]
0000000000021d74	str	wzr, [sp, #0xc]
0000000000021d78	ldr	x22, [sp, #0x18]
0000000000021d7c	add	x8, x22, #0x20
0000000000021d80	str	x8, [sp, #0x48]
0000000000021d84	add	x26, x21, #0x20
0000000000021d88	add	x27, x20, #0x20
0000000000021d8c	mov	x23, x24
0000000000021d90	str	w24, [sp, #0x24]
0000000000021d94	adr	x8, #0x60aaf
0000000000021d98	nop
0000000000021d9c	ldarb	w8, [x8]
0000000000021da0	tbz	w8, #0x0, 0x21da8
0000000000021da4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000021da8	sub	w19, w23, #0x1
0000000000021dac	cbz	w19, 0x21df0
0000000000021db0	adr	x8, #0x60a93
0000000000021db4	nop
0000000000021db8	ldarb	w8, [x8]
0000000000021dbc	tbz	w8, #0x0, 0x21dc4
0000000000021dc0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000021dc4	sub	w8, w23, #0x1
0000000000021dc8	ldr	w9, [x22, #0x18]
0000000000021dcc	cmp	w9, w8
0000000000021dd0	b.ls	0x220a4
0000000000021dd4	ldr	x9, [sp, #0x40]
0000000000021dd8	ldr	xzr, [x9]
0000000000021ddc	ldr	x9, [sp, #0x48]
0000000000021de0	str	w23, [x9, w19, sxtw #2]
0000000000021de4	sub	w19, w19, #0x1
0000000000021de8	mov	x23, x8
0000000000021dec	cbnz	w19, 0x21db0
0000000000021df0	cbz	w24, 0x21e4c
0000000000021df4	mov	x19, #0x0
0000000000021df8	adr	x8, #0x60a4b
0000000000021dfc	nop
0000000000021e00	ldarb	w8, [x8]
0000000000021e04	tbz	w8, #0x0, 0x21e0c
0000000000021e08	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000021e0c	ldr	w8, [x21, #0x18]
0000000000021e10	cmp	x19, x8
0000000000021e14	b.hs	0x220a4
0000000000021e18	ldr	w8, [x20, #0x18]
0000000000021e1c	cmp	x19, x8
0000000000021e20	b.hs	0x220a4
0000000000021e24	lsl	x8, x19, #2
0000000000021e28	ldr	w9, [x26, x8]
0000000000021e2c	add	x10, x19, #0x1
0000000000021e30	ldr	x11, [sp, #0x28]
0000000000021e34	ldr	xzr, [x11]
0000000000021e38	str	w9, [x27, x8]
0000000000021e3c	mov	x19, x10
0000000000021e40	ldr	x8, [sp, #0x30]
0000000000021e44	cmp	x8, x10
0000000000021e48	b.ne	0x21df8
0000000000021e4c	ldr	w8, [x20, #0x18]
0000000000021e50	cbz	w8, 0x220a4
0000000000021e54	mov	w28, #0x0
0000000000021e58	ldr	x19, [sp, #0x28]
0000000000021e5c	ldr	w22, [x27]
0000000000021e60	cbz	w22, 0x21f08
0000000000021e64	adr	x8, #0x609df
0000000000021e68	nop
0000000000021e6c	ldarb	w8, [x8]
0000000000021e70	tbz	w8, #0x0, 0x21e78
0000000000021e74	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000021e78	add	w8, w22, #0x1
0000000000021e7c	cmp	w8, #0x2
0000000000021e80	b.lt	0x21ef4
0000000000021e84	mov	x23, #0x0
0000000000021e88	asr	w8, w8, #1
0000000000021e8c	cmp	w8, #0x1
0000000000021e90	csinc	w24, w8, wzr, gt
0000000000021e94	adr	x8, #0x609af
0000000000021e98	nop
0000000000021e9c	ldarb	w8, [x8]
0000000000021ea0	tbz	w8, #0x0, 0x21ea8
0000000000021ea4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000021ea8	ldr	w8, [x20, #0x18]
0000000000021eac	cmp	x23, x8
0000000000021eb0	b.hs	0x220a4
0000000000021eb4	cmp	w8, w22
0000000000021eb8	b.ls	0x220a4
0000000000021ebc	ldr	w8, [x27, x23, lsl #2]
0000000000021ec0	ldr	w9, [x27, w22, sxtw #2]
0000000000021ec4	ldr	xzr, [x20, #0x10]
0000000000021ec8	str	w9, [x27, x23, lsl #2]
0000000000021ecc	ldr	w9, [x20, #0x18]
0000000000021ed0	cmp	w9, w22
0000000000021ed4	b.ls	0x220a4
0000000000021ed8	add	x23, x23, #0x1
0000000000021edc	sxtw	x9, w22
0000000000021ee0	ldr	xzr, [x19]
0000000000021ee4	str	w8, [x27, x9, lsl #2]
0000000000021ee8	sub	w22, w22, #0x1
0000000000021eec	cmp	x24, x23
0000000000021ef0	b.ne	0x21e94
0000000000021ef4	ldr	w8, [x20, #0x18]
0000000000021ef8	cbz	w8, 0x220a4
0000000000021efc	add	w28, w28, #0x1
0000000000021f00	ldr	w22, [x27]
0000000000021f04	cbnz	w22, 0x21e64
0000000000021f08	ldp	w9, w8, [sp, #0x10]
0000000000021f0c	cmp	w8, w28
0000000000021f10	csel	w10, w28, w8, lt
0000000000021f14	ldr	w8, [sp, #0xc]
0000000000021f18	tst	w8, #0x1
0000000000021f1c	cneg	w8, w28, ne
0000000000021f20	add	w9, w9, w8
0000000000021f24	stp	w9, w10, [sp, #0x10]
0000000000021f28	mov	w23, #0x1
0000000000021f2c	ldr	w24, [sp, #0x24]
0000000000021f30	cmp	w23, #0x0
0000000000021f34	csel	w22, w23, wzr, gt
0000000000021f38	adr	x8, #0x6090b
0000000000021f3c	nop
0000000000021f40	ldarb	w8, [x8]
0000000000021f44	tbz	w8, #0x0, 0x21f4c
0000000000021f48	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000021f4c	cmp	w23, w24
0000000000021f50	b.eq	0x22060
0000000000021f54	ldr	w8, [x21, #0x18]
0000000000021f58	cbz	w8, 0x220a4
0000000000021f5c	mov	x28, #0x0
0000000000021f60	ldr	w8, [x26]
0000000000021f64	str	w8, [sp, #0x3c]
0000000000021f68	mov	x24, #0x100000000
0000000000021f6c	mov	x19, x26
0000000000021f70	cbz	x22, 0x21fc4
0000000000021f74	adr	x8, #0x608cf
0000000000021f78	nop
0000000000021f7c	ldarb	w8, [x8]
0000000000021f80	tbz	w8, #0x0, 0x21f88
0000000000021f84	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000021f88	add	x8, x28, #0x1
0000000000021f8c	ldr	w9, [x21, #0x18]
0000000000021f90	cmp	x8, x9
0000000000021f94	b.hs	0x220a4
0000000000021f98	cmp	x28, x9
0000000000021f9c	b.hs	0x220a4
0000000000021fa0	asr	x9, x24, #30
0000000000021fa4	ldr	w9, [x26, x9]
0000000000021fa8	ldr	xzr, [x25]
0000000000021fac	str	w9, [x19], #0x4
0000000000021fb0	sub	x22, x22, #0x1
0000000000021fb4	mov	x9, #0x100000000
0000000000021fb8	add	x24, x24, x9
0000000000021fbc	mov	x28, x8
0000000000021fc0	cbnz	x22, 0x21f74
0000000000021fc4	ldr	w8, [x21, #0x18]
0000000000021fc8	cmp	w8, w23
0000000000021fcc	b.ls	0x220a4
0000000000021fd0	ldr	xzr, [x25]
0000000000021fd4	ldr	w8, [sp, #0x3c]
0000000000021fd8	str	w8, [x26, w23, sxtw #2]
0000000000021fdc	ldr	x22, [sp, #0x18]
0000000000021fe0	ldr	w8, [x22, #0x18]
0000000000021fe4	cmp	w8, w23
0000000000021fe8	ldr	w24, [sp, #0x24]
0000000000021fec	b.ls	0x220a4
0000000000021ff0	sxtw	x8, w23
0000000000021ff4	lsl	x9, x8, #2
0000000000021ff8	ldr	x10, [sp, #0x48]
0000000000021ffc	ldr	w8, [x10, x9]
0000000000022000	sub	w8, w8, #0x1
0000000000022004	ldr	xzr, [x22, #0x10]
0000000000022008	str	w8, [x10, x9]
000000000002200c	ldr	w9, [x22, #0x18]
0000000000022010	cmp	w9, w23
0000000000022014	b.ls	0x220a4
0000000000022018	cmp	w8, #0x0
000000000002201c	b.gt	0x22040
0000000000022020	add	w23, w23, #0x1
0000000000022024	cmp	w23, #0x0
0000000000022028	csel	w22, w23, wzr, gt
000000000002202c	adr	x8, #0x60817
0000000000022030	nop
0000000000022034	ldarb	w8, [x8]
0000000000022038	tbnz	w8, #0x0, 0x21f48
000000000002203c	b	0x21f4c
0000000000022040	ldr	w8, [sp, #0xc]
0000000000022044	add	w8, w8, #0x1
0000000000022048	str	w8, [sp, #0xc]
000000000002204c	adr	x8, #0x607f7
0000000000022050	nop
0000000000022054	ldarb	w8, [x8]
0000000000022058	tbnz	w8, #0x0, 0x21da4
000000000002205c	b	0x21da8
0000000000022060	add	x8, sp, #0x50
0000000000022064	add	x1, x8, #0x30
0000000000022068	ldr	w0, [sp, #0x10]
000000000002206c	bl	"_kfun:kotlin#<Int-box>(kotlin.Int){}kotlin.Any"
0000000000022070	bl	"_kfun:kotlin.io#println(kotlin.Any?){}"
0000000000022074	ldr	x8, [sp, #0x58]
0000000000022078	ldr	x9, [sp]
000000000002207c	str	x8, [x9, #0x110]
0000000000022080	ldr	w0, [sp, #0x14]
0000000000022084	ldp	x29, x30, [sp, #0xe0]
0000000000022088	ldp	x20, x19, [sp, #0xd0]
000000000002208c	ldp	x22, x21, [sp, #0xc0]
0000000000022090	ldp	x24, x23, [sp, #0xb0]
0000000000022094	ldp	x26, x25, [sp, #0xa0]
0000000000022098	ldp	x28, x27, [sp, #0x90]
000000000002209c	add	sp, sp, #0xf0
00000000000220a0	ret
00000000000220a4	bl	_ThrowArrayIndexOutOfBoundsException
00000000000220a8	bl	_ThrowIllegalArgumentException
_kfun:com.example.fannkuchReduxKmm.FannkuchReduxKmm#runBenchmark(kotlin.Int){}:
00000000000220ac	sub	sp, sp, #0xc0
00000000000220b0	stp	x26, x25, [sp, #0x70]
00000000000220b4	stp	x24, x23, [sp, #0x80]
00000000000220b8	stp	x22, x21, [sp, #0x90]
00000000000220bc	stp	x20, x19, [sp, #0xa0]
00000000000220c0	stp	x29, x30, [sp, #0xb0]
00000000000220c4	add	x29, sp, #0xb0
00000000000220c8	mov	x20, x0
00000000000220cc	movi.16b	v0, #0x0
00000000000220d0	stp	q0, q0, [sp, #0x20]
00000000000220d4	str	xzr, [sp, #0x60]
00000000000220d8	stp	q0, q0, [sp, #0x40]
00000000000220dc	add	x8, sp, #0x20
00000000000220e0	add	x24, x8, #0x20
00000000000220e4	add	x21, x8, #0x30
00000000000220e8	add	x19, x8, #0x40
00000000000220ec	add	x23, x8, #0x28
00000000000220f0	add	x22, x8, #0x38
00000000000220f4	stp	xzr, xzr, [sp, #0x10]
00000000000220f8	adr	x9, #0x36298
00000000000220fc	nop
0000000000022100	orr	x9, x9, #0x3
0000000000022104	str	x9, [sp, #0x8]
0000000000022108	adrp	x0, 70 ; 0x68000
000000000002210c	add	x0, x0, #0xa00
0000000000022110	ldr	x9, [x0]
0000000000022114	blr	x9
0000000000022118	ldr	x26, [x0]
000000000002211c	ldr	x9, [x26, #0x110]
0000000000022120	str	x8, [x26, #0x110]
0000000000022124	mov	x8, #0x900000000
0000000000022128	stp	x9, x8, [sp, #0x28]
000000000002212c	adr	x8, #0x60717
0000000000022130	nop
0000000000022134	ldarb	w8, [x8]
0000000000022138	tbz	w8, #0x0, 0x22140
000000000002213c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000022140	mov	x0, x20
0000000000022144	bl	"_kfun:com.example.fannkuchReduxKmm.FannkuchReduxKmm#fannkuch(kotlin.Int){}kotlin.Int"
0000000000022148	mov	x25, x0
000000000002214c	add	x8, sp, #0x8
0000000000022150	str	x8, [sp, #0x38]
0000000000022154	add	x0, sp, #0x8
0000000000022158	mov	w1, #0xa
000000000002215c	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
0000000000022160	adr	x1, #0x3fbc0
0000000000022164	nop
0000000000022168	add	x0, sp, #0x8
000000000002216c	mov	x2, x24
0000000000022170	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000022174	add	x0, sp, #0x8
0000000000022178	mov	x1, x20
000000000002217c	mov	x2, x23
0000000000022180	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
0000000000022184	adr	x1, #0x3fbcc
0000000000022188	nop
000000000002218c	add	x0, sp, #0x8
0000000000022190	mov	x2, x21
0000000000022194	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000022198	add	x0, sp, #0x8
000000000002219c	mov	x1, x25
00000000000221a0	mov	x2, x22
00000000000221a4	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
00000000000221a8	add	x0, sp, #0x8
00000000000221ac	mov	x1, x19
00000000000221b0	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
00000000000221b4	bl	_Kotlin_io_Console_println
00000000000221b8	ldr	x8, [sp, #0x28]
00000000000221bc	str	x8, [x26, #0x110]
00000000000221c0	ldp	x29, x30, [sp, #0xb0]
00000000000221c4	ldp	x20, x19, [sp, #0xa0]
00000000000221c8	ldp	x22, x21, [sp, #0x90]
00000000000221cc	ldp	x24, x23, [sp, #0x80]
00000000000221d0	ldp	x26, x25, [sp, #0x70]
00000000000221d4	add	sp, sp, #0xc0
00000000000221d8	ret
00000000000221dc	stp	x20, x19, [sp, #-0x20]!
00000000000221e0	stp	x29, x30, [sp, #0x10]
00000000000221e4	add	x29, sp, #0x10
00000000000221e8	mov	x19, x1
00000000000221ec	mov	x20, x0
00000000000221f0	adr	x8, #0x60653
00000000000221f4	nop
00000000000221f8	ldarb	w8, [x8]
00000000000221fc	tbz	w8, #0x0, 0x22204
0000000000022200	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000022204	sub	w8, w20, #0x1
0000000000022208	cmp	w8, #0x3
000000000002220c	b.hs	0x2221c
0000000000022210	ldp	x29, x30, [sp, #0x10]
0000000000022214	ldp	x20, x19, [sp], #0x20
0000000000022218	ret
000000000002221c	adr	x1, #0x606bc
0000000000022220	nop
0000000000022224	mov	x0, x19
0000000000022228	mov	w2, #0x3
000000000002222c	ldp	x29, x30, [sp, #0x10]
0000000000022230	ldp	x20, x19, [sp], #0x20
0000000000022234	b	_AddTLSRecord
0000000000022238	stp	x20, x19, [sp, #-0x20]!
000000000002223c	stp	x29, x30, [sp, #0x10]
0000000000022240	add	x29, sp, #0x10
0000000000022244	mov	x19, x1
0000000000022248	mov	x20, x0
000000000002224c	adr	x8, #0x605f7
0000000000022250	nop
0000000000022254	ldarb	w8, [x8]
0000000000022258	tbz	w8, #0x0, 0x22260
000000000002225c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000022260	sub	w8, w20, #0x1
0000000000022264	cmp	w8, #0x3
0000000000022268	b.hs	0x22278
000000000002226c	ldp	x29, x30, [sp, #0x10]
0000000000022270	ldp	x20, x19, [sp], #0x20
0000000000022274	ret
0000000000022278	adr	x1, #0x60660
000000000002227c	nop
0000000000022280	mov	x0, x19
0000000000022284	mov	w2, #0x3
0000000000022288	ldp	x29, x30, [sp, #0x10]
000000000002228c	ldp	x20, x19, [sp], #0x20
0000000000022290	b	_AddTLSRecord
0000000000022294	stp	x20, x19, [sp, #-0x20]!
0000000000022298	stp	x29, x30, [sp, #0x10]
000000000002229c	add	x29, sp, #0x10
00000000000222a0	mov	x19, x1
00000000000222a4	mov	x20, x0
00000000000222a8	adr	x8, #0x6059b
00000000000222ac	nop
00000000000222b0	ldarb	w8, [x8]
00000000000222b4	tbz	w8, #0x0, 0x222bc
00000000000222b8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000222bc	sub	w8, w20, #0x1
00000000000222c0	cmp	w8, #0x3
00000000000222c4	b.hs	0x222d4
00000000000222c8	ldp	x29, x30, [sp, #0x10]
00000000000222cc	ldp	x20, x19, [sp], #0x20
00000000000222d0	ret
00000000000222d4	adr	x1, #0x60604
00000000000222d8	nop
00000000000222dc	mov	x0, x19
00000000000222e0	mov	w2, #0x3
00000000000222e4	ldp	x29, x30, [sp, #0x10]
00000000000222e8	ldp	x20, x19, [sp], #0x20
00000000000222ec	b	_AddTLSRecord
00000000000222f0	stp	x20, x19, [sp, #-0x20]!
00000000000222f4	stp	x29, x30, [sp, #0x10]
00000000000222f8	add	x29, sp, #0x10
00000000000222fc	mov	x19, x1
0000000000022300	mov	x20, x0
0000000000022304	adr	x8, #0x6053f
0000000000022308	nop
000000000002230c	ldarb	w8, [x8]
0000000000022310	tbz	w8, #0x0, 0x22318
0000000000022314	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000022318	sub	w8, w20, #0x1
000000000002231c	cmp	w8, #0x2
0000000000022320	b.lo	0x22354
0000000000022324	cbnz	w20, 0x22344
0000000000022328	adr	x1, #0x605b0
000000000002232c	nop
0000000000022330	mov	x0, x19
0000000000022334	mov	w2, #0x3
0000000000022338	ldp	x29, x30, [sp, #0x10]
000000000002233c	ldp	x20, x19, [sp], #0x20
0000000000022340	b	_AddTLSRecord
0000000000022344	adr	x8, #0x6050c
0000000000022348	nop
000000000002234c	str	xzr, [x8, #0x20]
0000000000022350	str	wzr, [x8]
0000000000022354	ldp	x29, x30, [sp, #0x10]
0000000000022358	ldp	x20, x19, [sp], #0x20
000000000002235c	ret
0000000000022360	stp	x20, x19, [sp, #-0x20]!
0000000000022364	stp	x29, x30, [sp, #0x10]
0000000000022368	add	x29, sp, #0x10
000000000002236c	mov	x19, x1
0000000000022370	mov	x20, x0
0000000000022374	adr	x8, #0x604cf
0000000000022378	nop
000000000002237c	ldarb	w8, [x8]
0000000000022380	tbz	w8, #0x0, 0x22388
0000000000022384	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000022388	sub	w8, w20, #0x1
000000000002238c	cmp	w8, #0x3
0000000000022390	b.hs	0x223a0
0000000000022394	ldp	x29, x30, [sp, #0x10]
0000000000022398	ldp	x20, x19, [sp], #0x20
000000000002239c	ret
00000000000223a0	adr	x1, #0x60538
00000000000223a4	nop
00000000000223a8	mov	x0, x19
00000000000223ac	mov	w2, #0x3
00000000000223b0	ldp	x29, x30, [sp, #0x10]
00000000000223b4	ldp	x20, x19, [sp], #0x20
00000000000223b8	b	_AddTLSRecord
00000000000223bc	stp	x20, x19, [sp, #-0x20]!
00000000000223c0	stp	x29, x30, [sp, #0x10]
00000000000223c4	add	x29, sp, #0x10
00000000000223c8	mov	x19, x1
00000000000223cc	mov	x20, x0
00000000000223d0	adr	x8, #0x60473
00000000000223d4	nop
00000000000223d8	ldarb	w8, [x8]
00000000000223dc	tbz	w8, #0x0, 0x223e4
00000000000223e0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000223e4	sub	w8, w20, #0x1
00000000000223e8	cmp	w8, #0x2
00000000000223ec	b.lo	0x22424
00000000000223f0	cbnz	w20, 0x22410
00000000000223f4	adr	x1, #0x604e4
00000000000223f8	nop
00000000000223fc	mov	x0, x19
0000000000022400	mov	w2, #0x3
0000000000022404	ldp	x29, x30, [sp, #0x10]
0000000000022408	ldp	x20, x19, [sp], #0x20
000000000002240c	b	_AddTLSRecord
0000000000022410	adr	x8, #0x60444
0000000000022414	nop
0000000000022418	stur	xzr, [x8, #0x2c]
000000000002241c	stur	xzr, [x8, #0x24]
0000000000022420	str	wzr, [x8]
0000000000022424	ldp	x29, x30, [sp, #0x10]
0000000000022428	ldp	x20, x19, [sp], #0x20
000000000002242c	ret
0000000000022430	stp	x20, x19, [sp, #-0x20]!
0000000000022434	stp	x29, x30, [sp, #0x10]
0000000000022438	add	x29, sp, #0x10
000000000002243c	mov	x19, x1
0000000000022440	mov	x20, x0
0000000000022444	adr	x8, #0x603ff
0000000000022448	nop
000000000002244c	ldarb	w8, [x8]
0000000000022450	tbz	w8, #0x0, 0x22458
0000000000022454	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000022458	sub	w8, w20, #0x1
000000000002245c	cmp	w8, #0x3
0000000000022460	b.hs	0x22470
0000000000022464	ldp	x29, x30, [sp, #0x10]
0000000000022468	ldp	x20, x19, [sp], #0x20
000000000002246c	ret
0000000000022470	adr	x1, #0x60468
0000000000022474	nop
0000000000022478	mov	x0, x19
000000000002247c	mov	w2, #0x3
0000000000022480	ldp	x29, x30, [sp, #0x10]
0000000000022484	ldp	x20, x19, [sp], #0x20
0000000000022488	b	_AddTLSRecord
000000000002248c	stp	x20, x19, [sp, #-0x20]!
0000000000022490	stp	x29, x30, [sp, #0x10]
0000000000022494	add	x29, sp, #0x10
0000000000022498	mov	x19, x1
000000000002249c	mov	x20, x0
00000000000224a0	adr	x8, #0x603a3
00000000000224a4	nop
00000000000224a8	ldarb	w8, [x8]
00000000000224ac	tbz	w8, #0x0, 0x224b4
00000000000224b0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000224b4	sub	w8, w20, #0x1
00000000000224b8	cmp	w8, #0x3
00000000000224bc	b.hs	0x224cc
00000000000224c0	ldp	x29, x30, [sp, #0x10]
00000000000224c4	ldp	x20, x19, [sp], #0x20
00000000000224c8	ret
00000000000224cc	adr	x1, #0x6040c
00000000000224d0	nop
00000000000224d4	mov	x0, x19
00000000000224d8	mov	w2, #0x3
00000000000224dc	ldp	x29, x30, [sp, #0x10]
00000000000224e0	ldp	x20, x19, [sp], #0x20
00000000000224e4	b	_AddTLSRecord
00000000000224e8	stp	x20, x19, [sp, #-0x20]!
00000000000224ec	stp	x29, x30, [sp, #0x10]
00000000000224f0	add	x29, sp, #0x10
00000000000224f4	mov	x19, x1
00000000000224f8	mov	x20, x0
00000000000224fc	adr	x8, #0x60347
0000000000022500	nop
0000000000022504	ldarb	w8, [x8]
0000000000022508	tbz	w8, #0x0, 0x22510
000000000002250c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000022510	sub	w8, w20, #0x1
0000000000022514	cmp	w8, #0x3
0000000000022518	b.hs	0x22528
000000000002251c	ldp	x29, x30, [sp, #0x10]
0000000000022520	ldp	x20, x19, [sp], #0x20
0000000000022524	ret
0000000000022528	adr	x1, #0x603b0
000000000002252c	nop
0000000000022530	mov	x0, x19
0000000000022534	mov	w2, #0x3
0000000000022538	ldp	x29, x30, [sp, #0x10]
000000000002253c	ldp	x20, x19, [sp], #0x20
0000000000022540	b	_AddTLSRecord
0000000000022544	stp	x20, x19, [sp, #-0x20]!
0000000000022548	stp	x29, x30, [sp, #0x10]
000000000002254c	add	x29, sp, #0x10
0000000000022550	mov	x19, x1
0000000000022554	mov	x20, x0
0000000000022558	adr	x8, #0x602eb
000000000002255c	nop
0000000000022560	ldarb	w8, [x8]
0000000000022564	tbz	w8, #0x0, 0x2256c
0000000000022568	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002256c	sub	w8, w20, #0x1
0000000000022570	cmp	w8, #0x2
0000000000022574	b.lo	0x225a8
0000000000022578	cbnz	w20, 0x22598
000000000002257c	adr	x1, #0x6035c
0000000000022580	nop
0000000000022584	mov	x0, x19
0000000000022588	mov	w2, #0x3
000000000002258c	ldp	x29, x30, [sp, #0x10]
0000000000022590	ldp	x20, x19, [sp], #0x20
0000000000022594	b	_AddTLSRecord
0000000000022598	adr	x8, #0x602c0
000000000002259c	nop
00000000000225a0	stp	xzr, xzr, [x8, #0x30]
00000000000225a4	str	wzr, [x8]
00000000000225a8	ldp	x29, x30, [sp, #0x10]
00000000000225ac	ldp	x20, x19, [sp], #0x20
00000000000225b0	ret
00000000000225b4	stp	x20, x19, [sp, #-0x20]!
00000000000225b8	stp	x29, x30, [sp, #0x10]
00000000000225bc	add	x29, sp, #0x10
00000000000225c0	mov	x19, x1
00000000000225c4	mov	x20, x0
00000000000225c8	adr	x8, #0x6027b
00000000000225cc	nop
00000000000225d0	ldarb	w8, [x8]
00000000000225d4	tbz	w8, #0x0, 0x225dc
00000000000225d8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000225dc	sub	w8, w20, #0x1
00000000000225e0	cmp	w8, #0x3
00000000000225e4	b.hs	0x225f4
00000000000225e8	ldp	x29, x30, [sp, #0x10]
00000000000225ec	ldp	x20, x19, [sp], #0x20
00000000000225f0	ret
00000000000225f4	adr	x1, #0x602e4
00000000000225f8	nop
00000000000225fc	mov	x0, x19
0000000000022600	mov	w2, #0x3
0000000000022604	ldp	x29, x30, [sp, #0x10]
0000000000022608	ldp	x20, x19, [sp], #0x20
000000000002260c	b	_AddTLSRecord
0000000000022610	stp	x20, x19, [sp, #-0x20]!
0000000000022614	stp	x29, x30, [sp, #0x10]
0000000000022618	add	x29, sp, #0x10
000000000002261c	mov	x19, x1
0000000000022620	mov	x20, x0
0000000000022624	adr	x8, #0x6021f
0000000000022628	nop
000000000002262c	ldarb	w8, [x8]
0000000000022630	tbz	w8, #0x0, 0x22638
0000000000022634	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000022638	sub	w8, w20, #0x1
000000000002263c	cmp	w8, #0x2
0000000000022640	b.lo	0x2266c
0000000000022644	cbnz	w20, 0x22664
0000000000022648	adr	x1, #0x60290
000000000002264c	nop
0000000000022650	mov	x0, x19
0000000000022654	mov	w2, #0x3
0000000000022658	ldp	x29, x30, [sp, #0x10]
000000000002265c	ldp	x20, x19, [sp], #0x20
0000000000022660	b	_AddTLSRecord
0000000000022664	adrp	x8, 96 ; 0x82000
0000000000022668	str	xzr, [x8, #0x8b0]
000000000002266c	ldp	x29, x30, [sp, #0x10]
0000000000022670	ldp	x20, x19, [sp], #0x20
0000000000022674	ret
0000000000022678	stp	x20, x19, [sp, #-0x20]!
000000000002267c	stp	x29, x30, [sp, #0x10]
0000000000022680	add	x29, sp, #0x10
0000000000022684	mov	x19, x1
0000000000022688	mov	x20, x0
000000000002268c	adr	x8, #0x601b7
0000000000022690	nop
0000000000022694	ldarb	w8, [x8]
0000000000022698	tbz	w8, #0x0, 0x226a0
000000000002269c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000226a0	sub	w8, w20, #0x1
00000000000226a4	cmp	w8, #0x3
00000000000226a8	b.hs	0x226b8
00000000000226ac	ldp	x29, x30, [sp, #0x10]
00000000000226b0	ldp	x20, x19, [sp], #0x20
00000000000226b4	ret
00000000000226b8	adr	x1, #0x60220
00000000000226bc	nop
00000000000226c0	mov	x0, x19
00000000000226c4	mov	w2, #0x3
00000000000226c8	ldp	x29, x30, [sp, #0x10]
00000000000226cc	ldp	x20, x19, [sp], #0x20
00000000000226d0	b	_AddTLSRecord
00000000000226d4	stp	x20, x19, [sp, #-0x20]!
00000000000226d8	stp	x29, x30, [sp, #0x10]
00000000000226dc	add	x29, sp, #0x10
00000000000226e0	mov	x19, x1
00000000000226e4	mov	x20, x0
00000000000226e8	adr	x8, #0x6015b
00000000000226ec	nop
00000000000226f0	ldarb	w8, [x8]
00000000000226f4	tbz	w8, #0x0, 0x226fc
00000000000226f8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000226fc	sub	w8, w20, #0x1
0000000000022700	cmp	w8, #0x3
0000000000022704	b.hs	0x22714
0000000000022708	ldp	x29, x30, [sp, #0x10]
000000000002270c	ldp	x20, x19, [sp], #0x20
0000000000022710	ret
0000000000022714	adr	x1, #0x601c4
0000000000022718	nop
000000000002271c	mov	x0, x19
0000000000022720	mov	w2, #0x3
0000000000022724	ldp	x29, x30, [sp, #0x10]
0000000000022728	ldp	x20, x19, [sp], #0x20
000000000002272c	b	_AddTLSRecord
0000000000022730	stp	x20, x19, [sp, #-0x20]!
0000000000022734	stp	x29, x30, [sp, #0x10]
0000000000022738	add	x29, sp, #0x10
000000000002273c	mov	x19, x1
0000000000022740	mov	x20, x0
0000000000022744	adr	x8, #0x600ff
0000000000022748	nop
000000000002274c	ldarb	w8, [x8]
0000000000022750	tbz	w8, #0x0, 0x22758
0000000000022754	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000022758	sub	w8, w20, #0x1
000000000002275c	cmp	w8, #0x2
0000000000022760	b.lo	0x2278c
0000000000022764	cbnz	w20, 0x22784
0000000000022768	adr	x1, #0x60170
000000000002276c	nop
0000000000022770	mov	x0, x19
0000000000022774	mov	w2, #0x3
0000000000022778	ldp	x29, x30, [sp, #0x10]
000000000002277c	ldp	x20, x19, [sp], #0x20
0000000000022780	b	_AddTLSRecord
0000000000022784	adrp	x8, 96 ; 0x82000
0000000000022788	str	xzr, [x8, #0x898]
000000000002278c	ldp	x29, x30, [sp, #0x10]
0000000000022790	ldp	x20, x19, [sp], #0x20
0000000000022794	ret
0000000000022798	stp	x20, x19, [sp, #-0x20]!
000000000002279c	stp	x29, x30, [sp, #0x10]
00000000000227a0	add	x29, sp, #0x10
00000000000227a4	mov	x19, x1
00000000000227a8	mov	x20, x0
00000000000227ac	adr	x8, #0x60097
00000000000227b0	nop
00000000000227b4	ldarb	w8, [x8]
00000000000227b8	tbz	w8, #0x0, 0x227c0
00000000000227bc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000227c0	sub	w8, w20, #0x1
00000000000227c4	cmp	w8, #0x3
00000000000227c8	b.hs	0x227d8
00000000000227cc	ldp	x29, x30, [sp, #0x10]
00000000000227d0	ldp	x20, x19, [sp], #0x20
00000000000227d4	ret
00000000000227d8	adr	x1, #0x60100
00000000000227dc	nop
00000000000227e0	mov	x0, x19
00000000000227e4	mov	w2, #0x3
00000000000227e8	ldp	x29, x30, [sp, #0x10]
00000000000227ec	ldp	x20, x19, [sp], #0x20
00000000000227f0	b	_AddTLSRecord
00000000000227f4	stp	x20, x19, [sp, #-0x20]!
00000000000227f8	stp	x29, x30, [sp, #0x10]
00000000000227fc	add	x29, sp, #0x10
0000000000022800	mov	x19, x1
0000000000022804	mov	x20, x0
0000000000022808	adr	x8, #0x6003b
000000000002280c	nop
0000000000022810	ldarb	w8, [x8]
0000000000022814	tbz	w8, #0x0, 0x2281c
0000000000022818	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002281c	sub	w8, w20, #0x1
0000000000022820	cmp	w8, #0x2
0000000000022824	b.lo	0x22854
0000000000022828	cbnz	w20, 0x22848
000000000002282c	adr	x1, #0x600ac
0000000000022830	nop
0000000000022834	mov	x0, x19
0000000000022838	mov	w2, #0x3
000000000002283c	ldp	x29, x30, [sp, #0x10]
0000000000022840	ldp	x20, x19, [sp], #0x20
0000000000022844	b	_AddTLSRecord
0000000000022848	adr	x8, #0x60058
000000000002284c	nop
0000000000022850	stp	xzr, xzr, [x8]
0000000000022854	ldp	x29, x30, [sp, #0x10]
0000000000022858	ldp	x20, x19, [sp], #0x20
000000000002285c	ret
0000000000022860	stp	x20, x19, [sp, #-0x20]!
0000000000022864	stp	x29, x30, [sp, #0x10]
0000000000022868	add	x29, sp, #0x10
000000000002286c	mov	x19, x1
0000000000022870	mov	x20, x0
0000000000022874	adr	x8, #0x5ffcf
0000000000022878	nop
000000000002287c	ldarb	w8, [x8]
0000000000022880	tbz	w8, #0x0, 0x22888
0000000000022884	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000022888	sub	w8, w20, #0x1
000000000002288c	cmp	w8, #0x3
0000000000022890	b.hs	0x228a0
0000000000022894	ldp	x29, x30, [sp, #0x10]
0000000000022898	ldp	x20, x19, [sp], #0x20
000000000002289c	ret
00000000000228a0	adr	x1, #0x60038
00000000000228a4	nop
00000000000228a8	mov	x0, x19
00000000000228ac	mov	w2, #0x3
00000000000228b0	ldp	x29, x30, [sp, #0x10]
00000000000228b4	ldp	x20, x19, [sp], #0x20
00000000000228b8	b	_AddTLSRecord
00000000000228bc	stp	x20, x19, [sp, #-0x20]!
00000000000228c0	stp	x29, x30, [sp, #0x10]
00000000000228c4	add	x29, sp, #0x10
00000000000228c8	mov	x19, x1
00000000000228cc	mov	x20, x0
00000000000228d0	adr	x8, #0x5ff73
00000000000228d4	nop
00000000000228d8	ldarb	w8, [x8]
00000000000228dc	tbz	w8, #0x0, 0x228e4
00000000000228e0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000228e4	sub	w8, w20, #0x1
00000000000228e8	cmp	w8, #0x3
00000000000228ec	b.hs	0x228fc
00000000000228f0	ldp	x29, x30, [sp, #0x10]
00000000000228f4	ldp	x20, x19, [sp], #0x20
00000000000228f8	ret
00000000000228fc	adr	x1, #0x5ffdc
0000000000022900	nop
0000000000022904	mov	x0, x19
0000000000022908	mov	w2, #0x3
000000000002290c	ldp	x29, x30, [sp, #0x10]
0000000000022910	ldp	x20, x19, [sp], #0x20
0000000000022914	b	_AddTLSRecord
0000000000022918	stp	x20, x19, [sp, #-0x20]!
000000000002291c	stp	x29, x30, [sp, #0x10]
0000000000022920	add	x29, sp, #0x10
0000000000022924	mov	x19, x1
0000000000022928	mov	x20, x0
000000000002292c	adr	x8, #0x5ff17
0000000000022930	nop
0000000000022934	ldarb	w8, [x8]
0000000000022938	tbz	w8, #0x0, 0x22940
000000000002293c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000022940	sub	w8, w20, #0x1
0000000000022944	cmp	w8, #0x2
0000000000022948	b.lo	0x22974
000000000002294c	cbnz	w20, 0x2296c
0000000000022950	adr	x1, #0x5ff88
0000000000022954	nop
0000000000022958	mov	x0, x19
000000000002295c	mov	w2, #0x3
0000000000022960	ldp	x29, x30, [sp, #0x10]
0000000000022964	ldp	x20, x19, [sp], #0x20
0000000000022968	b	_AddTLSRecord
000000000002296c	adrp	x8, 96 ; 0x82000
0000000000022970	str	xzr, [x8, #0x898]
0000000000022974	ldp	x29, x30, [sp, #0x10]
0000000000022978	ldp	x20, x19, [sp], #0x20
000000000002297c	ret
0000000000022980	stp	x20, x19, [sp, #-0x20]!
0000000000022984	stp	x29, x30, [sp, #0x10]
0000000000022988	add	x29, sp, #0x10
000000000002298c	mov	x19, x1
0000000000022990	mov	x20, x0
0000000000022994	adr	x8, #0x5feaf
0000000000022998	nop
000000000002299c	ldarb	w8, [x8]
00000000000229a0	tbz	w8, #0x0, 0x229a8
00000000000229a4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000229a8	sub	w8, w20, #0x1
00000000000229ac	cmp	w8, #0x3
00000000000229b0	b.hs	0x229c0
00000000000229b4	ldp	x29, x30, [sp, #0x10]
00000000000229b8	ldp	x20, x19, [sp], #0x20
00000000000229bc	ret
00000000000229c0	adr	x1, #0x5ff18
00000000000229c4	nop
00000000000229c8	mov	x0, x19
00000000000229cc	mov	w2, #0x3
00000000000229d0	ldp	x29, x30, [sp, #0x10]
00000000000229d4	ldp	x20, x19, [sp], #0x20
00000000000229d8	b	_AddTLSRecord
00000000000229dc	stp	x20, x19, [sp, #-0x20]!
00000000000229e0	stp	x29, x30, [sp, #0x10]
00000000000229e4	add	x29, sp, #0x10
00000000000229e8	mov	x19, x1
00000000000229ec	mov	x20, x0
00000000000229f0	adr	x8, #0x5fe53
00000000000229f4	nop
00000000000229f8	ldarb	w8, [x8]
00000000000229fc	tbz	w8, #0x0, 0x22a04
0000000000022a00	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000022a04	sub	w8, w20, #0x1
0000000000022a08	cmp	w8, #0x2
0000000000022a0c	b.lo	0x22a3c
0000000000022a10	cbnz	w20, 0x22a30
0000000000022a14	adr	x1, #0x5fec4
0000000000022a18	nop
0000000000022a1c	mov	x0, x19
0000000000022a20	mov	w2, #0x3
0000000000022a24	ldp	x29, x30, [sp, #0x10]
0000000000022a28	ldp	x20, x19, [sp], #0x20
0000000000022a2c	b	_AddTLSRecord
0000000000022a30	adr	x8, #0x5fe98
0000000000022a34	nop
0000000000022a38	stp	xzr, xzr, [x8]
0000000000022a3c	ldp	x29, x30, [sp, #0x10]
0000000000022a40	ldp	x20, x19, [sp], #0x20
0000000000022a44	ret
0000000000022a48	stp	x20, x19, [sp, #-0x20]!
0000000000022a4c	stp	x29, x30, [sp, #0x10]
0000000000022a50	add	x29, sp, #0x10
0000000000022a54	mov	x19, x1
0000000000022a58	mov	x20, x0
0000000000022a5c	adr	x8, #0x5fde7
0000000000022a60	nop
0000000000022a64	ldarb	w8, [x8]
0000000000022a68	tbz	w8, #0x0, 0x22a70
0000000000022a6c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000022a70	sub	w8, w20, #0x1
0000000000022a74	cmp	w8, #0x2
0000000000022a78	b.lo	0x22aa4
0000000000022a7c	cbnz	w20, 0x22a9c
0000000000022a80	adr	x1, #0x5fe58
0000000000022a84	nop
0000000000022a88	mov	x0, x19
0000000000022a8c	mov	w2, #0x3
0000000000022a90	ldp	x29, x30, [sp, #0x10]
0000000000022a94	ldp	x20, x19, [sp], #0x20
0000000000022a98	b	_AddTLSRecord
0000000000022a9c	adrp	x8, 96 ; 0x82000
0000000000022aa0	str	xzr, [x8, #0x8b0]
0000000000022aa4	ldp	x29, x30, [sp, #0x10]
0000000000022aa8	ldp	x20, x19, [sp], #0x20
0000000000022aac	ret
0000000000022ab0	stp	x20, x19, [sp, #-0x20]!
0000000000022ab4	stp	x29, x30, [sp, #0x10]
0000000000022ab8	add	x29, sp, #0x10
0000000000022abc	mov	x19, x1
0000000000022ac0	mov	x20, x0
0000000000022ac4	adr	x8, #0x5fd7f
0000000000022ac8	nop
0000000000022acc	ldarb	w8, [x8]
0000000000022ad0	tbz	w8, #0x0, 0x22ad8
0000000000022ad4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000022ad8	sub	w8, w20, #0x1
0000000000022adc	cmp	w8, #0x2
0000000000022ae0	b.lo	0x22b14
0000000000022ae4	cbnz	w20, 0x22b04
0000000000022ae8	adr	x1, #0x5fdf0
0000000000022aec	nop
0000000000022af0	mov	x0, x19
0000000000022af4	mov	w2, #0x3
0000000000022af8	ldp	x29, x30, [sp, #0x10]
0000000000022afc	ldp	x20, x19, [sp], #0x20
0000000000022b00	b	_AddTLSRecord
0000000000022b04	adr	x8, #0x5fd94
0000000000022b08	nop
0000000000022b0c	str	xzr, [x8, #0x20]
0000000000022b10	str	xzr, [x8]
0000000000022b14	ldp	x29, x30, [sp, #0x10]
0000000000022b18	ldp	x20, x19, [sp], #0x20
0000000000022b1c	ret
0000000000022b20	stp	x20, x19, [sp, #-0x20]!
0000000000022b24	stp	x29, x30, [sp, #0x10]
0000000000022b28	add	x29, sp, #0x10
0000000000022b2c	mov	x19, x1
0000000000022b30	mov	x20, x0
0000000000022b34	adr	x8, #0x5fd0f
0000000000022b38	nop
0000000000022b3c	ldarb	w8, [x8]
0000000000022b40	tbz	w8, #0x0, 0x22b48
0000000000022b44	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000022b48	sub	w8, w20, #0x1
0000000000022b4c	cmp	w8, #0x3
0000000000022b50	b.hs	0x22b60
0000000000022b54	ldp	x29, x30, [sp, #0x10]
0000000000022b58	ldp	x20, x19, [sp], #0x20
0000000000022b5c	ret
0000000000022b60	adr	x1, #0x5fd78
0000000000022b64	nop
0000000000022b68	mov	x0, x19
0000000000022b6c	mov	w2, #0x3
0000000000022b70	ldp	x29, x30, [sp, #0x10]
0000000000022b74	ldp	x20, x19, [sp], #0x20
0000000000022b78	b	_AddTLSRecord
0000000000022b7c	stp	x20, x19, [sp, #-0x20]!
0000000000022b80	stp	x29, x30, [sp, #0x10]
0000000000022b84	add	x29, sp, #0x10
0000000000022b88	mov	x19, x1
0000000000022b8c	mov	x20, x0
0000000000022b90	adr	x8, #0x5fcb3
0000000000022b94	nop
0000000000022b98	ldarb	w8, [x8]
0000000000022b9c	tbz	w8, #0x0, 0x22ba4
0000000000022ba0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000022ba4	sub	w8, w20, #0x1
0000000000022ba8	cmp	w8, #0x3
0000000000022bac	b.hs	0x22bbc
0000000000022bb0	ldp	x29, x30, [sp, #0x10]
0000000000022bb4	ldp	x20, x19, [sp], #0x20
0000000000022bb8	ret
0000000000022bbc	adr	x1, #0x5fd1c
0000000000022bc0	nop
0000000000022bc4	mov	x0, x19
0000000000022bc8	mov	w2, #0x3
0000000000022bcc	ldp	x29, x30, [sp, #0x10]
0000000000022bd0	ldp	x20, x19, [sp], #0x20
0000000000022bd4	b	_AddTLSRecord
0000000000022bd8	stp	x20, x19, [sp, #-0x20]!
0000000000022bdc	stp	x29, x30, [sp, #0x10]
0000000000022be0	add	x29, sp, #0x10
0000000000022be4	mov	x19, x1
0000000000022be8	mov	x20, x0
0000000000022bec	adr	x8, #0x5fc57
0000000000022bf0	nop
0000000000022bf4	ldarb	w8, [x8]
0000000000022bf8	tbz	w8, #0x0, 0x22c00
0000000000022bfc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000022c00	sub	w8, w20, #0x1
0000000000022c04	cmp	w8, #0x3
0000000000022c08	b.hs	0x22c18
0000000000022c0c	ldp	x29, x30, [sp, #0x10]
0000000000022c10	ldp	x20, x19, [sp], #0x20
0000000000022c14	ret
0000000000022c18	adr	x1, #0x5fcc0
0000000000022c1c	nop
0000000000022c20	mov	x0, x19
0000000000022c24	mov	w2, #0x3
0000000000022c28	ldp	x29, x30, [sp, #0x10]
0000000000022c2c	ldp	x20, x19, [sp], #0x20
0000000000022c30	b	_AddTLSRecord
0000000000022c34	stp	x20, x19, [sp, #-0x20]!
0000000000022c38	stp	x29, x30, [sp, #0x10]
0000000000022c3c	add	x29, sp, #0x10
0000000000022c40	mov	x19, x1
0000000000022c44	mov	x20, x0
0000000000022c48	adr	x8, #0x5fbfb
0000000000022c4c	nop
0000000000022c50	ldarb	w8, [x8]
0000000000022c54	tbz	w8, #0x0, 0x22c5c
0000000000022c58	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000022c5c	sub	w8, w20, #0x1
0000000000022c60	cmp	w8, #0x3
0000000000022c64	b.hs	0x22c74
0000000000022c68	ldp	x29, x30, [sp, #0x10]
0000000000022c6c	ldp	x20, x19, [sp], #0x20
0000000000022c70	ret
0000000000022c74	adr	x1, #0x5fc64
0000000000022c78	nop
0000000000022c7c	mov	x0, x19
0000000000022c80	mov	w2, #0x3
0000000000022c84	ldp	x29, x30, [sp, #0x10]
0000000000022c88	ldp	x20, x19, [sp], #0x20
0000000000022c8c	b	_AddTLSRecord
0000000000022c90	stp	x20, x19, [sp, #-0x20]!
0000000000022c94	stp	x29, x30, [sp, #0x10]
0000000000022c98	add	x29, sp, #0x10
0000000000022c9c	mov	x19, x1
0000000000022ca0	mov	x20, x0
0000000000022ca4	adr	x8, #0x5fb9f
0000000000022ca8	nop
0000000000022cac	ldarb	w8, [x8]
0000000000022cb0	tbz	w8, #0x0, 0x22cb8
0000000000022cb4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000022cb8	sub	w8, w20, #0x1
0000000000022cbc	cmp	w8, #0x3
0000000000022cc0	b.hs	0x22cd0
0000000000022cc4	ldp	x29, x30, [sp, #0x10]
0000000000022cc8	ldp	x20, x19, [sp], #0x20
0000000000022ccc	ret
0000000000022cd0	adr	x1, #0x5fc08
0000000000022cd4	nop
0000000000022cd8	mov	x0, x19
0000000000022cdc	mov	w2, #0x3
0000000000022ce0	ldp	x29, x30, [sp, #0x10]
0000000000022ce4	ldp	x20, x19, [sp], #0x20
0000000000022ce8	b	_AddTLSRecord
0000000000022cec	stp	x20, x19, [sp, #-0x20]!
0000000000022cf0	stp	x29, x30, [sp, #0x10]
0000000000022cf4	add	x29, sp, #0x10
0000000000022cf8	mov	x19, x1
0000000000022cfc	mov	x20, x0
0000000000022d00	adr	x8, #0x5fb43
0000000000022d04	nop
0000000000022d08	ldarb	w8, [x8]
0000000000022d0c	tbz	w8, #0x0, 0x22d14
0000000000022d10	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000022d14	sub	w8, w20, #0x1
0000000000022d18	cmp	w8, #0x3
0000000000022d1c	b.hs	0x22d2c
0000000000022d20	ldp	x29, x30, [sp, #0x10]
0000000000022d24	ldp	x20, x19, [sp], #0x20
0000000000022d28	ret
0000000000022d2c	adr	x1, #0x5fbac
0000000000022d30	nop
0000000000022d34	mov	x0, x19
0000000000022d38	mov	w2, #0x3
0000000000022d3c	ldp	x29, x30, [sp, #0x10]
0000000000022d40	ldp	x20, x19, [sp], #0x20
0000000000022d44	b	_AddTLSRecord
0000000000022d48	stp	x20, x19, [sp, #-0x20]!
0000000000022d4c	stp	x29, x30, [sp, #0x10]
0000000000022d50	add	x29, sp, #0x10
0000000000022d54	mov	x19, x1
0000000000022d58	mov	x20, x0
0000000000022d5c	adr	x8, #0x5fae7
0000000000022d60	nop
0000000000022d64	ldarb	w8, [x8]
0000000000022d68	tbz	w8, #0x0, 0x22d70
0000000000022d6c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000022d70	sub	w8, w20, #0x1
0000000000022d74	cmp	w8, #0x3
0000000000022d78	b.hs	0x22d88
0000000000022d7c	ldp	x29, x30, [sp, #0x10]
0000000000022d80	ldp	x20, x19, [sp], #0x20
0000000000022d84	ret
0000000000022d88	adr	x1, #0x5fb50
0000000000022d8c	nop
0000000000022d90	mov	x0, x19
0000000000022d94	mov	w2, #0x3
0000000000022d98	ldp	x29, x30, [sp, #0x10]
0000000000022d9c	ldp	x20, x19, [sp], #0x20
0000000000022da0	b	_AddTLSRecord
0000000000022da4	stp	x20, x19, [sp, #-0x20]!
0000000000022da8	stp	x29, x30, [sp, #0x10]
0000000000022dac	add	x29, sp, #0x10
0000000000022db0	mov	x19, x1
0000000000022db4	mov	x20, x0
0000000000022db8	adr	x8, #0x5fa8b
0000000000022dbc	nop
0000000000022dc0	ldarb	w8, [x8]
0000000000022dc4	tbz	w8, #0x0, 0x22dcc
0000000000022dc8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000022dcc	sub	w8, w20, #0x1
0000000000022dd0	cmp	w8, #0x3
0000000000022dd4	b.hs	0x22de4
0000000000022dd8	ldp	x29, x30, [sp, #0x10]
0000000000022ddc	ldp	x20, x19, [sp], #0x20
0000000000022de0	ret
0000000000022de4	adr	x1, #0x5faf4
0000000000022de8	nop
0000000000022dec	mov	x0, x19
0000000000022df0	mov	w2, #0x3
0000000000022df4	ldp	x29, x30, [sp, #0x10]
0000000000022df8	ldp	x20, x19, [sp], #0x20
0000000000022dfc	b	_AddTLSRecord
0000000000022e00	stp	x20, x19, [sp, #-0x20]!
0000000000022e04	stp	x29, x30, [sp, #0x10]
0000000000022e08	add	x29, sp, #0x10
0000000000022e0c	mov	x19, x1
0000000000022e10	mov	x20, x0
0000000000022e14	adr	x8, #0x5fa2f
0000000000022e18	nop
0000000000022e1c	ldarb	w8, [x8]
0000000000022e20	tbz	w8, #0x0, 0x22e28
0000000000022e24	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000022e28	sub	w8, w20, #0x1
0000000000022e2c	cmp	w8, #0x3
0000000000022e30	b.hs	0x22e40
0000000000022e34	ldp	x29, x30, [sp, #0x10]
0000000000022e38	ldp	x20, x19, [sp], #0x20
0000000000022e3c	ret
0000000000022e40	adr	x1, #0x5fa98
0000000000022e44	nop
0000000000022e48	mov	x0, x19
0000000000022e4c	mov	w2, #0x3
0000000000022e50	ldp	x29, x30, [sp, #0x10]
0000000000022e54	ldp	x20, x19, [sp], #0x20
0000000000022e58	b	_AddTLSRecord
0000000000022e5c	stp	x20, x19, [sp, #-0x20]!
0000000000022e60	stp	x29, x30, [sp, #0x10]
0000000000022e64	add	x29, sp, #0x10
0000000000022e68	mov	x19, x1
0000000000022e6c	mov	x20, x0
0000000000022e70	adr	x8, #0x5f9d3
0000000000022e74	nop
0000000000022e78	ldarb	w8, [x8]
0000000000022e7c	tbz	w8, #0x0, 0x22e84
0000000000022e80	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000022e84	sub	w8, w20, #0x1
0000000000022e88	cmp	w8, #0x2
0000000000022e8c	b.lo	0x22eb8
0000000000022e90	cbnz	w20, 0x22eb0
0000000000022e94	adr	x1, #0x5fa44
0000000000022e98	nop
0000000000022e9c	mov	x0, x19
0000000000022ea0	mov	w2, #0x3
0000000000022ea4	ldp	x29, x30, [sp, #0x10]
0000000000022ea8	ldp	x20, x19, [sp], #0x20
0000000000022eac	b	_AddTLSRecord
0000000000022eb0	adrp	x8, 96 ; 0x82000
0000000000022eb4	str	xzr, [x8, #0x8c0]
0000000000022eb8	ldp	x29, x30, [sp, #0x10]
0000000000022ebc	ldp	x20, x19, [sp], #0x20
0000000000022ec0	ret
0000000000022ec4	stp	x20, x19, [sp, #-0x20]!
0000000000022ec8	stp	x29, x30, [sp, #0x10]
0000000000022ecc	add	x29, sp, #0x10
0000000000022ed0	mov	x19, x1
0000000000022ed4	mov	x20, x0
0000000000022ed8	adr	x8, #0x5f96b
0000000000022edc	nop
0000000000022ee0	ldarb	w8, [x8]
0000000000022ee4	tbz	w8, #0x0, 0x22eec
0000000000022ee8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000022eec	sub	w8, w20, #0x1
0000000000022ef0	cmp	w8, #0x3
0000000000022ef4	b.hs	0x22f04
0000000000022ef8	ldp	x29, x30, [sp, #0x10]
0000000000022efc	ldp	x20, x19, [sp], #0x20
0000000000022f00	ret
0000000000022f04	adr	x1, #0x5f9d4
0000000000022f08	nop
0000000000022f0c	mov	x0, x19
0000000000022f10	mov	w2, #0x3
0000000000022f14	ldp	x29, x30, [sp, #0x10]
0000000000022f18	ldp	x20, x19, [sp], #0x20
0000000000022f1c	b	_AddTLSRecord
0000000000022f20	stp	x20, x19, [sp, #-0x20]!
0000000000022f24	stp	x29, x30, [sp, #0x10]
0000000000022f28	add	x29, sp, #0x10
0000000000022f2c	mov	x19, x1
0000000000022f30	mov	x20, x0
0000000000022f34	adr	x8, #0x5f90f
0000000000022f38	nop
0000000000022f3c	ldarb	w8, [x8]
0000000000022f40	tbz	w8, #0x0, 0x22f48
0000000000022f44	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000022f48	sub	w8, w20, #0x1
0000000000022f4c	cmp	w8, #0x3
0000000000022f50	b.hs	0x22f60
0000000000022f54	ldp	x29, x30, [sp, #0x10]
0000000000022f58	ldp	x20, x19, [sp], #0x20
0000000000022f5c	ret
0000000000022f60	adr	x1, #0x5f978
0000000000022f64	nop
0000000000022f68	mov	x0, x19
0000000000022f6c	mov	w2, #0x3
0000000000022f70	ldp	x29, x30, [sp, #0x10]
0000000000022f74	ldp	x20, x19, [sp], #0x20
0000000000022f78	b	_AddTLSRecord
0000000000022f7c	stp	x20, x19, [sp, #-0x20]!
0000000000022f80	stp	x29, x30, [sp, #0x10]
0000000000022f84	add	x29, sp, #0x10
0000000000022f88	mov	x19, x1
0000000000022f8c	mov	x20, x0
0000000000022f90	adr	x8, #0x5f8b3
0000000000022f94	nop
0000000000022f98	ldarb	w8, [x8]
0000000000022f9c	tbz	w8, #0x0, 0x22fa4
0000000000022fa0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000022fa4	sub	w8, w20, #0x1
0000000000022fa8	cmp	w8, #0x3
0000000000022fac	b.hs	0x22fbc
0000000000022fb0	ldp	x29, x30, [sp, #0x10]
0000000000022fb4	ldp	x20, x19, [sp], #0x20
0000000000022fb8	ret
0000000000022fbc	adr	x1, #0x5f91c
0000000000022fc0	nop
0000000000022fc4	mov	x0, x19
0000000000022fc8	mov	w2, #0x3
0000000000022fcc	ldp	x29, x30, [sp, #0x10]
0000000000022fd0	ldp	x20, x19, [sp], #0x20
0000000000022fd4	b	_AddTLSRecord
0000000000022fd8	stp	x20, x19, [sp, #-0x20]!
0000000000022fdc	stp	x29, x30, [sp, #0x10]
0000000000022fe0	add	x29, sp, #0x10
0000000000022fe4	mov	x19, x1
0000000000022fe8	mov	x20, x0
0000000000022fec	adr	x8, #0x5f857
0000000000022ff0	nop
0000000000022ff4	ldarb	w8, [x8]
0000000000022ff8	tbz	w8, #0x0, 0x23000
0000000000022ffc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000023000	sub	w8, w20, #0x1
0000000000023004	cmp	w8, #0x2
0000000000023008	b.lo	0x23034
000000000002300c	cbnz	w20, 0x2302c
0000000000023010	adr	x1, #0x5f8c8
0000000000023014	nop
0000000000023018	mov	x0, x19
000000000002301c	mov	w2, #0x3
0000000000023020	ldp	x29, x30, [sp, #0x10]
0000000000023024	ldp	x20, x19, [sp], #0x20
0000000000023028	b	_AddTLSRecord
000000000002302c	adrp	x8, 95 ; 0x82000
0000000000023030	str	xzr, [x8, #0x8d0]
0000000000023034	ldp	x29, x30, [sp, #0x10]
0000000000023038	ldp	x20, x19, [sp], #0x20
000000000002303c	ret
0000000000023040	stp	x20, x19, [sp, #-0x20]!
0000000000023044	stp	x29, x30, [sp, #0x10]
0000000000023048	add	x29, sp, #0x10
000000000002304c	mov	x19, x1
0000000000023050	mov	x20, x0
0000000000023054	adr	x8, #0x5f7ef
0000000000023058	nop
000000000002305c	ldarb	w8, [x8]
0000000000023060	tbz	w8, #0x0, 0x23068
0000000000023064	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000023068	sub	w8, w20, #0x1
000000000002306c	cmp	w8, #0x2
0000000000023070	b.lo	0x2309c
0000000000023074	cbnz	w20, 0x23094
0000000000023078	adr	x1, #0x5f860
000000000002307c	nop
0000000000023080	mov	x0, x19
0000000000023084	mov	w2, #0x3
0000000000023088	ldp	x29, x30, [sp, #0x10]
000000000002308c	ldp	x20, x19, [sp], #0x20
0000000000023090	b	_AddTLSRecord
0000000000023094	adrp	x8, 95 ; 0x82000
0000000000023098	str	xzr, [x8, #0x8d0]
000000000002309c	ldp	x29, x30, [sp, #0x10]
00000000000230a0	ldp	x20, x19, [sp], #0x20
00000000000230a4	ret
00000000000230a8	stp	x20, x19, [sp, #-0x20]!
00000000000230ac	stp	x29, x30, [sp, #0x10]
00000000000230b0	add	x29, sp, #0x10
00000000000230b4	mov	x19, x1
00000000000230b8	mov	x20, x0
00000000000230bc	adr	x8, #0x5f787
00000000000230c0	nop
00000000000230c4	ldarb	w8, [x8]
00000000000230c8	tbz	w8, #0x0, 0x230d0
00000000000230cc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000230d0	sub	w8, w20, #0x1
00000000000230d4	cmp	w8, #0x3
00000000000230d8	b.hs	0x230e8
00000000000230dc	ldp	x29, x30, [sp, #0x10]
00000000000230e0	ldp	x20, x19, [sp], #0x20
00000000000230e4	ret
00000000000230e8	adr	x1, #0x5f7f0
00000000000230ec	nop
00000000000230f0	mov	x0, x19
00000000000230f4	mov	w2, #0x3
00000000000230f8	ldp	x29, x30, [sp, #0x10]
00000000000230fc	ldp	x20, x19, [sp], #0x20
0000000000023100	b	_AddTLSRecord
_blockDisposeHelper:
0000000000023104	sub	sp, sp, #0x50
0000000000023108	stp	x22, x21, [sp, #0x20]
000000000002310c	stp	x20, x19, [sp, #0x30]
0000000000023110	stp	x29, x30, [sp, #0x40]
0000000000023114	add	x29, sp, #0x40
0000000000023118	mov	x20, x0
000000000002311c	stp	xzr, xzr, [sp, #0x8]
0000000000023120	str	xzr, [sp, #0x18]
0000000000023124	bl	_Kotlin_initRuntimeIfNeeded
0000000000023128	adrp	x19, 69 ; 0x68000
000000000002312c	add	x19, x19, #0xa00
0000000000023130	ldr	x21, [x19]
0000000000023134	mov	x0, x19
0000000000023138	blr	x21
000000000002313c	ldr	x8, [x0]
0000000000023140	add	x0, x8, #0x138
0000000000023144	ldaxr	w8, [x0]
0000000000023148	stlxr	w9, wzr, [x0]
000000000002314c	cbnz	w9, 0x23144
0000000000023150	adr	x22, #0x5f6f3
0000000000023154	nop
0000000000023158	cmp	w8, #0x1
000000000002315c	b.ne	0x2316c
0000000000023160	ldarb	w8, [x22]
0000000000023164	tbz	w8, #0x0, 0x2316c
0000000000023168	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000002316c	mov	x0, x19
0000000000023170	blr	x21
0000000000023174	ldr	x8, [x0]
0000000000023178	ldr	x9, [x8, #0x110]
000000000002317c	add	x10, sp, #0x8
0000000000023180	str	x10, [x8, #0x110]
0000000000023184	mov	x8, #0x300000000
0000000000023188	stp	x9, x8, [sp, #0x10]
000000000002318c	ldarb	w8, [x22]
0000000000023190	tbz	w8, #0x0, 0x23198
0000000000023194	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000023198	ldr	x8, [x20, #0x20]
000000000002319c	cbz	x8, 0x231b8
00000000000231a0	ldr	x1, [x20, #0x28]
00000000000231a4	mov	x0, x19
00000000000231a8	blr	x21
00000000000231ac	ldr	x8, [x0]
00000000000231b0	add	x0, x8, #0x8
00000000000231b4	bl	__ZN6kotlin2mm17StableRefRegistry19UnregisterStableRefEPNS0_10ThreadDataEPNS_16MultiSourceQueueIP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS6_EEE4NodeE
00000000000231b8	mov	x0, x19
00000000000231bc	blr	x21
00000000000231c0	ldr	x8, [x0]
00000000000231c4	ldr	x9, [sp, #0x10]
00000000000231c8	str	x9, [x8, #0x110]
00000000000231cc	add	x8, x8, #0x138
00000000000231d0	mov	w9, #0x1
00000000000231d4	ldaxr	wzr, [x8]
00000000000231d8	stlxr	w10, w9, [x8]
00000000000231dc	cbnz	w10, 0x231d4
00000000000231e0	ldp	x29, x30, [sp, #0x40]
00000000000231e4	ldp	x20, x19, [sp, #0x30]
00000000000231e8	ldp	x22, x21, [sp, #0x20]
00000000000231ec	add	sp, sp, #0x50
00000000000231f0	ret
_blockCopyHelper:
00000000000231f4	stp	x22, x21, [sp, #-0x30]!
00000000000231f8	stp	x20, x19, [sp, #0x10]
00000000000231fc	stp	x29, x30, [sp, #0x20]
0000000000023200	add	x29, sp, #0x20
0000000000023204	mov	x20, x1
0000000000023208	mov	x19, x0
000000000002320c	adr	x8, #0x5f637
0000000000023210	nop
0000000000023214	ldarb	w8, [x8]
0000000000023218	tbz	w8, #0x0, 0x23220
000000000002321c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000023220	bl	_Kotlin_initRuntimeIfNeeded
0000000000023224	ldr	x20, [x20, #0x20]
0000000000023228	adrp	x0, 69 ; 0x68000
000000000002322c	add	x0, x0, #0xa00
0000000000023230	ldr	x8, [x0]
0000000000023234	blr	x8
0000000000023238	ldr	x21, [x0]
000000000002323c	mov	w0, #0x1
0000000000023240	mov	w1, #0x28
0000000000023244	bl	0x4db20 ; symbol stub for: _calloc
0000000000023248	ldr	x8, [x21, #0xa8]!
000000000002324c	sub	x9, x21, #0x8
0000000000023250	stp	x8, x21, [x0]
0000000000023254	str	x0, [x8, #0x8]
0000000000023258	str	x0, [x21]
000000000002325c	ldr	x8, [x21, #0x10]
0000000000023260	add	x8, x8, #0x1
0000000000023264	str	x8, [x21, #0x10]
0000000000023268	stp	x9, x0, [x0, #0x18]
000000000002326c	str	x20, [x0, #0x10]!
0000000000023270	stp	x20, x0, [x19, #0x20]
0000000000023274	ldp	x29, x30, [sp, #0x20]
0000000000023278	ldp	x20, x19, [sp, #0x10]
000000000002327c	ldp	x22, x21, [sp], #0x30
0000000000023280	ret
_convertFunction1:
0000000000023284	sub	sp, sp, #0x80
0000000000023288	stp	x22, x21, [sp, #0x50]
000000000002328c	stp	x20, x19, [sp, #0x60]
0000000000023290	stp	x29, x30, [sp, #0x70]
0000000000023294	add	x29, sp, #0x70
0000000000023298	mov	x20, x0
000000000002329c	str	xzr, [sp, #0x8]
00000000000232a0	adrp	x19, 69 ; 0x68000
00000000000232a4	add	x19, x19, #0xa00
00000000000232a8	ldr	x21, [x19]
00000000000232ac	mov	x0, x19
00000000000232b0	blr	x21
00000000000232b4	ldr	x8, [x0]
00000000000232b8	ldr	x9, [x8, #0x110]
00000000000232bc	add	x10, sp, #0x8
00000000000232c0	str	x10, [x8, #0x110]
00000000000232c4	mov	x8, #0x300000000
00000000000232c8	stp	x9, x8, [sp, #0x10]
00000000000232cc	adr	x8, #0x5f577
00000000000232d0	nop
00000000000232d4	ldarb	w8, [x8]
00000000000232d8	tbz	w8, #0x0, 0x232e0
00000000000232dc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000232e0	cbz	x20, 0x2331c
00000000000232e4	nop
00000000000232e8	ldr	x8, #0x30d30 ; literal pool symbol address: __NSConcreteStackBlock
00000000000232ec	mov	w9, #-0x3e000000
00000000000232f0	stp	x8, x9, [sp, #0x20]
00000000000232f4	adr	x8, #0x80
00000000000232f8	nop
00000000000232fc	adr	x9, #0x44024
0000000000023300	nop
0000000000023304	stp	x8, x9, [sp, #0x30]
0000000000023308	stp	x20, xzr, [sp, #0x40]
000000000002330c	add	x0, sp, #0x20
0000000000023310	bl	0x4dd00 ; symbol stub for: _objc_retainBlock
0000000000023314	mov	x1, x0
0000000000023318	b	0x23320
000000000002331c	mov	x1, #0x0
0000000000023320	mov	x0, x19
0000000000023324	blr	x21
0000000000023328	ldr	x8, [x0]
000000000002332c	ldr	x9, [sp, #0x10]
0000000000023330	str	x9, [x8, #0x110]
0000000000023334	mov	x0, x1
0000000000023338	ldp	x29, x30, [sp, #0x70]
000000000002333c	ldp	x20, x19, [sp, #0x60]
0000000000023340	ldp	x22, x21, [sp, #0x50]
0000000000023344	add	sp, sp, #0x80
0000000000023348	ret
000000000002334c	mov	x1, x0
0000000000023350	mov	x0, x19
0000000000023354	blr	x21
0000000000023358	ldr	x8, [x0]
000000000002335c	add	x9, sp, #0x8
0000000000023360	str	x9, [x8, #0x110]
0000000000023364	mov	x0, x1
0000000000023368	bl	0x4da78 ; symbol stub for: ___cxa_begin_catch
000000000002336c	bl	0x4da48 ; symbol stub for: __ZSt9terminatev
0000000000023370	b	0x23370
_invokeBlock1:
0000000000023374	sub	sp, sp, #0x80
0000000000023378	stp	x26, x25, [sp, #0x30]
000000000002337c	stp	x24, x23, [sp, #0x40]
0000000000023380	stp	x22, x21, [sp, #0x50]
0000000000023384	stp	x20, x19, [sp, #0x60]
0000000000023388	stp	x29, x30, [sp, #0x70]
000000000002338c	add	x29, sp, #0x70
0000000000023390	mov	x22, x1
0000000000023394	mov	x21, x0
0000000000023398	str	xzr, [sp, #0x20]
000000000002339c	movi.16b	v0, #0x0
00000000000233a0	stp	q0, q0, [sp]
00000000000233a4	mov	x8, sp
00000000000233a8	add	x20, x8, #0x20
00000000000233ac	add	x23, x8, #0x18
00000000000233b0	bl	_Kotlin_initRuntimeIfNeeded
00000000000233b4	adrp	x19, 69 ; 0x68000
00000000000233b8	add	x19, x19, #0xa00
00000000000233bc	ldr	x24, [x19]
00000000000233c0	mov	x0, x19
00000000000233c4	blr	x24
00000000000233c8	ldr	x8, [x0]
00000000000233cc	add	x0, x8, #0x138
00000000000233d0	ldaxr	w8, [x0]
00000000000233d4	stlxr	w9, wzr, [x0]
00000000000233d8	cbnz	w9, 0x233d0
00000000000233dc	adr	x25, #0x5f467
00000000000233e0	nop
00000000000233e4	cmp	w8, #0x1
00000000000233e8	b.ne	0x233f8
00000000000233ec	ldarb	w8, [x25]
00000000000233f0	tbz	w8, #0x0, 0x233f8
00000000000233f4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000233f8	mov	x0, x19
00000000000233fc	blr	x24
0000000000023400	ldr	x8, [x0]
0000000000023404	ldr	x9, [x8, #0x110]
0000000000023408	mov	x10, sp
000000000002340c	str	x10, [x8, #0x110]
0000000000023410	mov	x8, #0x500000000
0000000000023414	stp	x9, x8, [sp, #0x8]
0000000000023418	ldarb	w8, [x25]
000000000002341c	tbz	w8, #0x0, 0x23424
0000000000023420	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000023424	bl	_Kotlin_initRuntimeIfNeeded
0000000000023428	ldr	x21, [x21, #0x20]
000000000002342c	cbz	x22, 0x2346c
0000000000023430	nop
0000000000023434	ldr	x1, #0x5f664
0000000000023438	mov	x0, x22
000000000002343c	mov	x2, x23
0000000000023440	bl	0x4dcb8 ; Objc message: -[x0 count]
0000000000023444	mov	x1, x0
0000000000023448	ldr	x8, [x21]
000000000002344c	and	x8, x8, #0xfffffffffffffffc
0000000000023450	ldr	x8, [x8]
0000000000023454	ldr	w9, [x8, #0x3c]
0000000000023458	ldr	x8, [x8, #0x40]
000000000002345c	tbnz	w9, #0x1f, 0x2348c
0000000000023460	mov	w10, #0x2c
0000000000023464	and	x9, x9, x10
0000000000023468	b	0x23510
000000000002346c	mov	x1, #0x0
0000000000023470	str	xzr, [sp, #0x18]
0000000000023474	ldr	x8, [x21]
0000000000023478	and	x8, x8, #0xfffffffffffffffc
000000000002347c	ldr	x8, [x8]
0000000000023480	ldr	w9, [x8, #0x3c]
0000000000023484	ldr	x8, [x8, #0x40]
0000000000023488	tbz	w9, #0x1f, 0x23460
000000000002348c	neg	w10, w9
0000000000023490	mvn	w9, w9
0000000000023494	cmp	w10, #0x9
0000000000023498	b.ge	0x234d0
000000000002349c	cmp	w10, #0x2
00000000000234a0	b.lt	0x23504
00000000000234a4	mov	x10, #0x0
00000000000234a8	mov	x11, x8
00000000000234ac	ldr	w12, [x11]
00000000000234b0	cmp	w12, #0x2b
00000000000234b4	b.gt	0x2350c
00000000000234b8	add	x10, x10, #0x1
00000000000234bc	add	x11, x11, #0x10
00000000000234c0	cmp	x9, x10
00000000000234c4	b.ne	0x234ac
00000000000234c8	mov	x10, x9
00000000000234cc	b	0x2350c
00000000000234d0	mov	w10, #0x0
00000000000234d4	add	w11, w9, w10
00000000000234d8	cmp	w11, #0x0
00000000000234dc	cinc	w11, w11, lt
00000000000234e0	asr	w11, w11, #1
00000000000234e4	sbfiz	x12, x11, #4, #32
00000000000234e8	ldr	w12, [x8, x12]
00000000000234ec	cmp	w12, #0x2c
00000000000234f0	csinc	w10, w10, w11, ge
00000000000234f4	csel	w9, w9, w11, lt
00000000000234f8	cmp	w10, w9
00000000000234fc	b.lt	0x234d4
0000000000023500	b	0x2350c
0000000000023504	mov	w10, #0x0
0000000000023508	b	0x2350c
000000000002350c	sxtw	x9, w10
0000000000023510	add	x8, x8, x9, lsl #4
0000000000023514	ldr	x8, [x8, #0x8]
0000000000023518	ldr	x8, [x8]
000000000002351c	mov	x0, x21
0000000000023520	mov	x2, x20
0000000000023524	blr	x8
0000000000023528	bl	_Kotlin_ObjCExport_refToRetainedObjC
000000000002352c	mov	x1, x0
0000000000023530	mov	x0, x19
0000000000023534	blr	x24
0000000000023538	ldr	x8, [x0]
000000000002353c	ldr	x9, [sp, #0x8]
0000000000023540	str	x9, [x8, #0x110]
0000000000023544	add	x8, x8, #0x138
0000000000023548	mov	w9, #0x1
000000000002354c	ldaxr	wzr, [x8]
0000000000023550	stlxr	w10, w9, [x8]
0000000000023554	cbnz	w10, 0x2354c
0000000000023558	mov	x0, x1
000000000002355c	ldp	x29, x30, [sp, #0x70]
0000000000023560	ldp	x20, x19, [sp, #0x60]
0000000000023564	ldp	x22, x21, [sp, #0x50]
0000000000023568	ldp	x24, x23, [sp, #0x40]
000000000002356c	ldp	x26, x25, [sp, #0x30]
0000000000023570	add	sp, sp, #0x80
0000000000023574	b	0x4dc64 ; symbol stub for: _objc_autoreleaseReturnValue
0000000000023578	mov	x1, x0
000000000002357c	mov	x0, x19
0000000000023580	blr	x24
0000000000023584	ldr	x8, [x0]
0000000000023588	mov	x9, sp
000000000002358c	str	x9, [x8, #0x110]
0000000000023590	mov	x0, x1
0000000000023594	bl	0x4da78 ; symbol stub for: ___cxa_begin_catch
0000000000023598	bl	0x4da48 ; symbol stub for: __ZSt9terminatev
000000000002359c	b	0x2359c
_convertFunction0:
00000000000235a0	sub	sp, sp, #0x80
00000000000235a4	stp	x22, x21, [sp, #0x50]
00000000000235a8	stp	x20, x19, [sp, #0x60]
00000000000235ac	stp	x29, x30, [sp, #0x70]
00000000000235b0	add	x29, sp, #0x70
00000000000235b4	mov	x20, x0
00000000000235b8	str	xzr, [sp, #0x8]
00000000000235bc	adrp	x19, 69 ; 0x68000
00000000000235c0	add	x19, x19, #0xa00
00000000000235c4	ldr	x21, [x19]
00000000000235c8	mov	x0, x19
00000000000235cc	blr	x21
00000000000235d0	ldr	x8, [x0]
00000000000235d4	ldr	x9, [x8, #0x110]
00000000000235d8	add	x10, sp, #0x8
00000000000235dc	str	x10, [x8, #0x110]
00000000000235e0	mov	x8, #0x300000000
00000000000235e4	stp	x9, x8, [sp, #0x10]
00000000000235e8	adr	x8, #0x5f25b
00000000000235ec	nop
00000000000235f0	ldarb	w8, [x8]
00000000000235f4	tbz	w8, #0x0, 0x235fc
00000000000235f8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000235fc	cbz	x20, 0x23638
0000000000023600	nop
0000000000023604	ldr	x8, #0x30a14 ; literal pool symbol address: __NSConcreteStackBlock
0000000000023608	mov	w9, #-0x3e000000
000000000002360c	stp	x8, x9, [sp, #0x20]
0000000000023610	adr	x8, #0x80
0000000000023614	nop
0000000000023618	adr	x9, #0x43d38
000000000002361c	nop
0000000000023620	stp	x8, x9, [sp, #0x30]
0000000000023624	stp	x20, xzr, [sp, #0x40]
0000000000023628	add	x0, sp, #0x20
000000000002362c	bl	0x4dd00 ; symbol stub for: _objc_retainBlock
0000000000023630	mov	x1, x0
0000000000023634	b	0x2363c
0000000000023638	mov	x1, #0x0
000000000002363c	mov	x0, x19
0000000000023640	blr	x21
0000000000023644	ldr	x8, [x0]
0000000000023648	ldr	x9, [sp, #0x10]
000000000002364c	str	x9, [x8, #0x110]
0000000000023650	mov	x0, x1
0000000000023654	ldp	x29, x30, [sp, #0x70]
0000000000023658	ldp	x20, x19, [sp, #0x60]
000000000002365c	ldp	x22, x21, [sp, #0x50]
0000000000023660	add	sp, sp, #0x80
0000000000023664	ret
0000000000023668	mov	x1, x0
000000000002366c	mov	x0, x19
0000000000023670	blr	x21
0000000000023674	ldr	x8, [x0]
0000000000023678	add	x9, sp, #0x8
000000000002367c	str	x9, [x8, #0x110]
0000000000023680	mov	x0, x1
0000000000023684	bl	0x4da78 ; symbol stub for: ___cxa_begin_catch
0000000000023688	bl	0x4da48 ; symbol stub for: __ZSt9terminatev
000000000002368c	b	0x2368c
_invokeBlock0:
0000000000023690	sub	sp, sp, #0x60
0000000000023694	stp	x24, x23, [sp, #0x20]
0000000000023698	stp	x22, x21, [sp, #0x30]
000000000002369c	stp	x20, x19, [sp, #0x40]
00000000000236a0	stp	x29, x30, [sp, #0x50]
00000000000236a4	add	x29, sp, #0x50
00000000000236a8	mov	x21, x0
00000000000236ac	movi.16b	v0, #0x0
00000000000236b0	stp	q0, q0, [sp]
00000000000236b4	mov	x8, sp
00000000000236b8	add	x20, x8, #0x18
00000000000236bc	bl	_Kotlin_initRuntimeIfNeeded
00000000000236c0	adrp	x19, 69 ; 0x68000
00000000000236c4	add	x19, x19, #0xa00
00000000000236c8	ldr	x22, [x19]
00000000000236cc	mov	x0, x19
00000000000236d0	blr	x22
00000000000236d4	ldr	x8, [x0]
00000000000236d8	add	x0, x8, #0x138
00000000000236dc	ldaxr	w8, [x0]
00000000000236e0	stlxr	w9, wzr, [x0]
00000000000236e4	cbnz	w9, 0x236dc
00000000000236e8	adr	x23, #0x5f15b
00000000000236ec	nop
00000000000236f0	cmp	w8, #0x1
00000000000236f4	b.ne	0x23704
00000000000236f8	ldarb	w8, [x23]
00000000000236fc	tbz	w8, #0x0, 0x23704
0000000000023700	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000023704	mov	x0, x19
0000000000023708	blr	x22
000000000002370c	ldr	x8, [x0]
0000000000023710	ldr	x9, [x8, #0x110]
0000000000023714	mov	x10, sp
0000000000023718	str	x10, [x8, #0x110]
000000000002371c	mov	x8, #0x400000000
0000000000023720	stp	x9, x8, [sp, #0x8]
0000000000023724	ldarb	w8, [x23]
0000000000023728	tbz	w8, #0x0, 0x23730
000000000002372c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000023730	bl	_Kotlin_initRuntimeIfNeeded
0000000000023734	ldr	x0, [x21, #0x20]
0000000000023738	ldr	x8, [x0]
000000000002373c	and	x8, x8, #0xfffffffffffffffc
0000000000023740	ldr	x8, [x8]
0000000000023744	ldr	w9, [x8, #0x3c]
0000000000023748	ldr	x8, [x8, #0x40]
000000000002374c	tbnz	w9, #0x1f, 0x2375c
0000000000023750	mov	w10, #0x59
0000000000023754	and	x9, x9, x10
0000000000023758	b	0x237e0
000000000002375c	neg	w10, w9
0000000000023760	mvn	w9, w9
0000000000023764	cmp	w10, #0x9
0000000000023768	b.ge	0x237a0
000000000002376c	cmp	w10, #0x2
0000000000023770	b.lt	0x237d4
0000000000023774	mov	x10, #0x0
0000000000023778	mov	x11, x8
000000000002377c	ldr	w12, [x11]
0000000000023780	cmp	w12, #0x58
0000000000023784	b.gt	0x237dc
0000000000023788	add	x10, x10, #0x1
000000000002378c	add	x11, x11, #0x10
0000000000023790	cmp	x9, x10
0000000000023794	b.ne	0x2377c
0000000000023798	mov	x10, x9
000000000002379c	b	0x237dc
00000000000237a0	mov	w10, #0x0
00000000000237a4	add	w11, w9, w10
00000000000237a8	cmp	w11, #0x0
00000000000237ac	cinc	w11, w11, lt
00000000000237b0	asr	w11, w11, #1
00000000000237b4	sbfiz	x12, x11, #4, #32
00000000000237b8	ldr	w12, [x8, x12]
00000000000237bc	cmp	w12, #0x59
00000000000237c0	csinc	w10, w10, w11, ge
00000000000237c4	csel	w9, w9, w11, lt
00000000000237c8	cmp	w10, w9
00000000000237cc	b.lt	0x237a4
00000000000237d0	b	0x237dc
00000000000237d4	mov	w10, #0x0
00000000000237d8	b	0x237dc
00000000000237dc	sxtw	x9, w10
00000000000237e0	add	x8, x8, x9, lsl #4
00000000000237e4	ldr	x8, [x8, #0x8]
00000000000237e8	ldr	x8, [x8]
00000000000237ec	mov	x1, x20
00000000000237f0	blr	x8
00000000000237f4	bl	_Kotlin_ObjCExport_refToRetainedObjC
00000000000237f8	mov	x1, x0
00000000000237fc	mov	x0, x19
0000000000023800	blr	x22
0000000000023804	ldr	x8, [x0]
0000000000023808	ldr	x9, [sp, #0x8]
000000000002380c	str	x9, [x8, #0x110]
0000000000023810	add	x8, x8, #0x138
0000000000023814	mov	w9, #0x1
0000000000023818	ldaxr	wzr, [x8]
000000000002381c	stlxr	w10, w9, [x8]
0000000000023820	cbnz	w10, 0x23818
0000000000023824	mov	x0, x1
0000000000023828	ldp	x29, x30, [sp, #0x50]
000000000002382c	ldp	x20, x19, [sp, #0x40]
0000000000023830	ldp	x22, x21, [sp, #0x30]
0000000000023834	ldp	x24, x23, [sp, #0x20]
0000000000023838	add	sp, sp, #0x60
000000000002383c	b	0x4dc64 ; symbol stub for: _objc_autoreleaseReturnValue
0000000000023840	mov	x1, x0
0000000000023844	mov	x0, x19
0000000000023848	blr	x22
000000000002384c	ldr	x8, [x0]
0000000000023850	mov	x9, sp
0000000000023854	str	x9, [x8, #0x110]
0000000000023858	mov	x0, x1
000000000002385c	bl	0x4da78 ; symbol stub for: ___cxa_begin_catch
0000000000023860	bl	0x4da48 ; symbol stub for: __ZSt9terminatev
0000000000023864	b	0x23864
_convertFunction2:
0000000000023868	sub	sp, sp, #0x80
000000000002386c	stp	x22, x21, [sp, #0x50]
0000000000023870	stp	x20, x19, [sp, #0x60]
0000000000023874	stp	x29, x30, [sp, #0x70]
0000000000023878	add	x29, sp, #0x70
000000000002387c	mov	x20, x0
0000000000023880	str	xzr, [sp, #0x8]
0000000000023884	adrp	x19, 69 ; 0x68000
0000000000023888	add	x19, x19, #0xa00
000000000002388c	ldr	x21, [x19]
0000000000023890	mov	x0, x19
0000000000023894	blr	x21
0000000000023898	ldr	x8, [x0]
000000000002389c	ldr	x9, [x8, #0x110]
00000000000238a0	add	x10, sp, #0x8
00000000000238a4	str	x10, [x8, #0x110]
00000000000238a8	mov	x8, #0x300000000
00000000000238ac	stp	x9, x8, [sp, #0x10]
00000000000238b0	adr	x8, #0x5ef93
00000000000238b4	nop
00000000000238b8	ldarb	w8, [x8]
00000000000238bc	tbz	w8, #0x0, 0x238c4
00000000000238c0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000238c4	cbz	x20, 0x23900
00000000000238c8	nop
00000000000238cc	ldr	x8, #0x3074c ; literal pool symbol address: __NSConcreteStackBlock
00000000000238d0	mov	w9, #-0x3e000000
00000000000238d4	stp	x8, x9, [sp, #0x20]
00000000000238d8	adr	x8, #0x80
00000000000238dc	nop
00000000000238e0	adr	x9, #0x43aa0
00000000000238e4	nop
00000000000238e8	stp	x8, x9, [sp, #0x30]
00000000000238ec	stp	x20, xzr, [sp, #0x40]
00000000000238f0	add	x0, sp, #0x20
00000000000238f4	bl	0x4dd00 ; symbol stub for: _objc_retainBlock
00000000000238f8	mov	x1, x0
00000000000238fc	b	0x23904
0000000000023900	mov	x1, #0x0
0000000000023904	mov	x0, x19
0000000000023908	blr	x21
000000000002390c	ldr	x8, [x0]
0000000000023910	ldr	x9, [sp, #0x10]
0000000000023914	str	x9, [x8, #0x110]
0000000000023918	mov	x0, x1
000000000002391c	ldp	x29, x30, [sp, #0x70]
0000000000023920	ldp	x20, x19, [sp, #0x60]
0000000000023924	ldp	x22, x21, [sp, #0x50]
0000000000023928	add	sp, sp, #0x80
000000000002392c	ret
0000000000023930	mov	x1, x0
0000000000023934	mov	x0, x19
0000000000023938	blr	x21
000000000002393c	ldr	x8, [x0]
0000000000023940	add	x9, sp, #0x8
0000000000023944	str	x9, [x8, #0x110]
0000000000023948	mov	x0, x1
000000000002394c	bl	0x4da78 ; symbol stub for: ___cxa_begin_catch
0000000000023950	bl	0x4da48 ; symbol stub for: __ZSt9terminatev
0000000000023954	b	0x23954
_invokeBlock2:
0000000000023958	sub	sp, sp, #0x90
000000000002395c	stp	x28, x27, [sp, #0x30]
0000000000023960	stp	x26, x25, [sp, #0x40]
0000000000023964	stp	x24, x23, [sp, #0x50]
0000000000023968	stp	x22, x21, [sp, #0x60]
000000000002396c	stp	x20, x19, [sp, #0x70]
0000000000023970	stp	x29, x30, [sp, #0x80]
0000000000023974	add	x29, sp, #0x80
0000000000023978	mov	x23, x2
000000000002397c	mov	x22, x1
0000000000023980	mov	x21, x0
0000000000023984	movi.16b	v0, #0x0
0000000000023988	stp	q0, q0, [sp, #0x10]
000000000002398c	str	q0, [sp]
0000000000023990	mov	x8, sp
0000000000023994	add	x24, x8, #0x20
0000000000023998	add	x25, x8, #0x18
000000000002399c	add	x20, x8, #0x28
00000000000239a0	bl	_Kotlin_initRuntimeIfNeeded
00000000000239a4	adrp	x19, 69 ; 0x68000
00000000000239a8	add	x19, x19, #0xa00
00000000000239ac	ldr	x26, [x19]
00000000000239b0	mov	x0, x19
00000000000239b4	blr	x26
00000000000239b8	ldr	x8, [x0]
00000000000239bc	add	x0, x8, #0x138
00000000000239c0	ldaxr	w8, [x0]
00000000000239c4	stlxr	w9, wzr, [x0]
00000000000239c8	cbnz	w9, 0x239c0
00000000000239cc	adr	x27, #0x5ee77
00000000000239d0	nop
00000000000239d4	cmp	w8, #0x1
00000000000239d8	b.ne	0x239e8
00000000000239dc	ldarb	w8, [x27]
00000000000239e0	tbz	w8, #0x0, 0x239e8
00000000000239e4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000239e8	mov	x0, x19
00000000000239ec	blr	x26
00000000000239f0	ldr	x8, [x0]
00000000000239f4	ldr	x9, [x8, #0x110]
00000000000239f8	mov	x10, sp
00000000000239fc	str	x10, [x8, #0x110]
0000000000023a00	mov	x8, #0x600000000
0000000000023a04	stp	x9, x8, [sp, #0x8]
0000000000023a08	ldarb	w8, [x27]
0000000000023a0c	tbz	w8, #0x0, 0x23a14
0000000000023a10	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000023a14	bl	_Kotlin_initRuntimeIfNeeded
0000000000023a18	ldr	x21, [x21, #0x20]
0000000000023a1c	adrp	x27, 95 ; 0x82000
0000000000023a20	cbz	x22, 0x23a74
0000000000023a24	ldr	x1, [x27, #0xa98]
0000000000023a28	mov	x0, x22
0000000000023a2c	mov	x2, x25
0000000000023a30	bl	0x4dcb8 ; Objc message: -[x0 count]
0000000000023a34	mov	x22, x0
0000000000023a38	cbz	x23, 0x23a7c
0000000000023a3c	ldr	x1, [x27, #0xa98]
0000000000023a40	mov	x0, x23
0000000000023a44	mov	x2, x24
0000000000023a48	bl	0x4dcb8 ; Objc message: -[x0 count]
0000000000023a4c	mov	x2, x0
0000000000023a50	ldr	x8, [x21]
0000000000023a54	and	x8, x8, #0xfffffffffffffffc
0000000000023a58	ldr	x8, [x8]
0000000000023a5c	ldr	w9, [x8, #0x3c]
0000000000023a60	ldr	x8, [x8, #0x40]
0000000000023a64	tbnz	w9, #0x1f, 0x23a9c
0000000000023a68	mov	w10, #0x61
0000000000023a6c	and	x9, x9, x10
0000000000023a70	b	0x23b20
0000000000023a74	str	xzr, [sp, #0x18]
0000000000023a78	cbnz	x23, 0x23a3c
0000000000023a7c	mov	x2, #0x0
0000000000023a80	str	xzr, [sp, #0x20]
0000000000023a84	ldr	x8, [x21]
0000000000023a88	and	x8, x8, #0xfffffffffffffffc
0000000000023a8c	ldr	x8, [x8]
0000000000023a90	ldr	w9, [x8, #0x3c]
0000000000023a94	ldr	x8, [x8, #0x40]
0000000000023a98	tbz	w9, #0x1f, 0x23a68
0000000000023a9c	neg	w10, w9
0000000000023aa0	mvn	w9, w9
0000000000023aa4	cmp	w10, #0x9
0000000000023aa8	b.ge	0x23ae0
0000000000023aac	cmp	w10, #0x2
0000000000023ab0	b.lt	0x23b14
0000000000023ab4	mov	x10, #0x0
0000000000023ab8	mov	x11, x8
0000000000023abc	ldr	w12, [x11]
0000000000023ac0	cmp	w12, #0x60
0000000000023ac4	b.gt	0x23b1c
0000000000023ac8	add	x10, x10, #0x1
0000000000023acc	add	x11, x11, #0x10
0000000000023ad0	cmp	x9, x10
0000000000023ad4	b.ne	0x23abc
0000000000023ad8	mov	x10, x9
0000000000023adc	b	0x23b1c
0000000000023ae0	mov	w10, #0x0
0000000000023ae4	add	w11, w9, w10
0000000000023ae8	cmp	w11, #0x0
0000000000023aec	cinc	w11, w11, lt
0000000000023af0	asr	w11, w11, #1
0000000000023af4	sbfiz	x12, x11, #4, #32
0000000000023af8	ldr	w12, [x8, x12]
0000000000023afc	cmp	w12, #0x61
0000000000023b00	csinc	w10, w10, w11, ge
0000000000023b04	csel	w9, w9, w11, lt
0000000000023b08	cmp	w10, w9
0000000000023b0c	b.lt	0x23ae4
0000000000023b10	b	0x23b1c
0000000000023b14	mov	w10, #0x0
0000000000023b18	b	0x23b1c
0000000000023b1c	sxtw	x9, w10
0000000000023b20	add	x8, x8, x9, lsl #4
0000000000023b24	ldr	x8, [x8, #0x8]
0000000000023b28	ldr	x8, [x8]
0000000000023b2c	mov	x0, x21
0000000000023b30	mov	x1, x22
0000000000023b34	mov	x3, x20
0000000000023b38	blr	x8
0000000000023b3c	bl	_Kotlin_ObjCExport_refToRetainedObjC
0000000000023b40	mov	x1, x0
0000000000023b44	mov	x0, x19
0000000000023b48	blr	x26
0000000000023b4c	ldr	x8, [x0]
0000000000023b50	ldr	x9, [sp, #0x8]
0000000000023b54	str	x9, [x8, #0x110]
0000000000023b58	add	x8, x8, #0x138
0000000000023b5c	mov	w9, #0x1
0000000000023b60	ldaxr	wzr, [x8]
0000000000023b64	stlxr	w10, w9, [x8]
0000000000023b68	cbnz	w10, 0x23b60
0000000000023b6c	mov	x0, x1
0000000000023b70	ldp	x29, x30, [sp, #0x80]
0000000000023b74	ldp	x20, x19, [sp, #0x70]
0000000000023b78	ldp	x22, x21, [sp, #0x60]
0000000000023b7c	ldp	x24, x23, [sp, #0x50]
0000000000023b80	ldp	x26, x25, [sp, #0x40]
0000000000023b84	ldp	x28, x27, [sp, #0x30]
0000000000023b88	add	sp, sp, #0x90
0000000000023b8c	b	0x4dc64 ; symbol stub for: _objc_autoreleaseReturnValue
0000000000023b90	mov	x1, x0
0000000000023b94	mov	x0, x19
0000000000023b98	blr	x26
0000000000023b9c	ldr	x8, [x0]
0000000000023ba0	mov	x9, sp
0000000000023ba4	str	x9, [x8, #0x110]
0000000000023ba8	mov	x0, x1
0000000000023bac	bl	0x4da78 ; symbol stub for: ___cxa_begin_catch
0000000000023bb0	bl	0x4da48 ; symbol stub for: __ZSt9terminatev
0000000000023bb4	b	0x23bb4
_convertFunction3:
0000000000023bb8	sub	sp, sp, #0x80
0000000000023bbc	stp	x22, x21, [sp, #0x50]
0000000000023bc0	stp	x20, x19, [sp, #0x60]
0000000000023bc4	stp	x29, x30, [sp, #0x70]
0000000000023bc8	add	x29, sp, #0x70
0000000000023bcc	mov	x20, x0
0000000000023bd0	str	xzr, [sp, #0x8]
0000000000023bd4	adrp	x19, 69 ; 0x68000
0000000000023bd8	add	x19, x19, #0xa00
0000000000023bdc	ldr	x21, [x19]
0000000000023be0	mov	x0, x19
0000000000023be4	blr	x21
0000000000023be8	ldr	x8, [x0]
0000000000023bec	ldr	x9, [x8, #0x110]
0000000000023bf0	add	x10, sp, #0x8
0000000000023bf4	str	x10, [x8, #0x110]
0000000000023bf8	mov	x8, #0x300000000
0000000000023bfc	stp	x9, x8, [sp, #0x10]
0000000000023c00	adr	x8, #0x5ec43
0000000000023c04	nop
0000000000023c08	ldarb	w8, [x8]
0000000000023c0c	tbz	w8, #0x0, 0x23c14
0000000000023c10	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000023c14	cbz	x20, 0x23c50
0000000000023c18	nop
0000000000023c1c	ldr	x8, #0x303fc ; literal pool symbol address: __NSConcreteStackBlock
0000000000023c20	mov	w9, #-0x3e000000
0000000000023c24	stp	x8, x9, [sp, #0x20]
0000000000023c28	adr	x8, #0x80
0000000000023c2c	nop
0000000000023c30	adr	x9, #0x43780
0000000000023c34	nop
0000000000023c38	stp	x8, x9, [sp, #0x30]
0000000000023c3c	stp	x20, xzr, [sp, #0x40]
0000000000023c40	add	x0, sp, #0x20
0000000000023c44	bl	0x4dd00 ; symbol stub for: _objc_retainBlock
0000000000023c48	mov	x1, x0
0000000000023c4c	b	0x23c54
0000000000023c50	mov	x1, #0x0
0000000000023c54	mov	x0, x19
0000000000023c58	blr	x21
0000000000023c5c	ldr	x8, [x0]
0000000000023c60	ldr	x9, [sp, #0x10]
0000000000023c64	str	x9, [x8, #0x110]
0000000000023c68	mov	x0, x1
0000000000023c6c	ldp	x29, x30, [sp, #0x70]
0000000000023c70	ldp	x20, x19, [sp, #0x60]
0000000000023c74	ldp	x22, x21, [sp, #0x50]
0000000000023c78	add	sp, sp, #0x80
0000000000023c7c	ret
0000000000023c80	mov	x1, x0
0000000000023c84	mov	x0, x19
0000000000023c88	blr	x21
0000000000023c8c	ldr	x8, [x0]
0000000000023c90	add	x9, sp, #0x8
0000000000023c94	str	x9, [x8, #0x110]
0000000000023c98	mov	x0, x1
0000000000023c9c	bl	0x4da78 ; symbol stub for: ___cxa_begin_catch
0000000000023ca0	bl	0x4da48 ; symbol stub for: __ZSt9terminatev
0000000000023ca4	b	0x23ca4
_invokeBlock3:
0000000000023ca8	sub	sp, sp, #0xb0
0000000000023cac	stp	x28, x27, [sp, #0x50]
0000000000023cb0	stp	x26, x25, [sp, #0x60]
0000000000023cb4	stp	x24, x23, [sp, #0x70]
0000000000023cb8	stp	x22, x21, [sp, #0x80]
0000000000023cbc	stp	x20, x19, [sp, #0x90]
0000000000023cc0	stp	x29, x30, [sp, #0xa0]
0000000000023cc4	add	x29, sp, #0xa0
0000000000023cc8	mov	x24, x3
0000000000023ccc	mov	x23, x2
0000000000023cd0	mov	x22, x1
0000000000023cd4	mov	x21, x0
0000000000023cd8	str	xzr, [sp, #0x40]
0000000000023cdc	movi.16b	v0, #0x0
0000000000023ce0	stp	q0, q0, [sp, #0x20]
0000000000023ce4	add	x8, sp, #0x10
0000000000023ce8	str	q0, [sp, #0x10]
0000000000023cec	add	x26, x8, #0x20
0000000000023cf0	add	x9, x8, #0x30
0000000000023cf4	str	x9, [sp, #0x8]
0000000000023cf8	add	x27, x8, #0x18
0000000000023cfc	add	x25, x8, #0x28
0000000000023d00	bl	_Kotlin_initRuntimeIfNeeded
0000000000023d04	adrp	x19, 69 ; 0x68000
0000000000023d08	add	x19, x19, #0xa00
0000000000023d0c	ldr	x28, [x19]
0000000000023d10	mov	x0, x19
0000000000023d14	blr	x28
0000000000023d18	ldr	x8, [x0]
0000000000023d1c	add	x0, x8, #0x138
0000000000023d20	ldaxr	w8, [x0]
0000000000023d24	stlxr	w9, wzr, [x0]
0000000000023d28	cbnz	w9, 0x23d20
0000000000023d2c	adr	x20, #0x5eb17
0000000000023d30	nop
0000000000023d34	cmp	w8, #0x1
0000000000023d38	b.ne	0x23d48
0000000000023d3c	ldarb	w8, [x20]
0000000000023d40	tbz	w8, #0x0, 0x23d48
0000000000023d44	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000023d48	mov	x0, x19
0000000000023d4c	blr	x28
0000000000023d50	ldr	x8, [x0]
0000000000023d54	ldr	x9, [x8, #0x110]
0000000000023d58	add	x10, sp, #0x10
0000000000023d5c	str	x10, [x8, #0x110]
0000000000023d60	mov	x8, #0x700000000
0000000000023d64	stp	x9, x8, [sp, #0x18]
0000000000023d68	ldarb	w8, [x20]
0000000000023d6c	tbz	w8, #0x0, 0x23d74
0000000000023d70	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000023d74	bl	_Kotlin_initRuntimeIfNeeded
0000000000023d78	ldr	x21, [x21, #0x20]
0000000000023d7c	adrp	x20, 95 ; 0x82000
0000000000023d80	cbz	x22, 0x23dec
0000000000023d84	ldr	x1, [x20, #0xa98]
0000000000023d88	mov	x0, x22
0000000000023d8c	mov	x2, x27
0000000000023d90	bl	0x4dcb8 ; Objc message: -[x0 count]
0000000000023d94	mov	x22, x0
0000000000023d98	cbz	x23, 0x23df4
0000000000023d9c	ldr	x1, [x20, #0xa98]
0000000000023da0	mov	x0, x23
0000000000023da4	mov	x2, x26
0000000000023da8	bl	0x4dcb8 ; Objc message: -[x0 count]
0000000000023dac	mov	x23, x0
0000000000023db0	cbz	x24, 0x23dfc
0000000000023db4	ldr	x1, [x20, #0xa98]
0000000000023db8	mov	x0, x24
0000000000023dbc	mov	x2, x25
0000000000023dc0	bl	0x4dcb8 ; Objc message: -[x0 count]
0000000000023dc4	mov	x3, x0
0000000000023dc8	ldr	x8, [x21]
0000000000023dcc	and	x8, x8, #0xfffffffffffffffc
0000000000023dd0	ldr	x8, [x8]
0000000000023dd4	ldr	w9, [x8, #0x3c]
0000000000023dd8	ldr	x8, [x8, #0x40]
0000000000023ddc	tbnz	w9, #0x1f, 0x23e1c
0000000000023de0	mov	w10, #0x158
0000000000023de4	and	x9, x9, x10
0000000000023de8	b	0x23ea0
0000000000023dec	str	xzr, [sp, #0x28]
0000000000023df0	cbnz	x23, 0x23d9c
0000000000023df4	str	xzr, [sp, #0x30]
0000000000023df8	cbnz	x24, 0x23db4
0000000000023dfc	mov	x3, #0x0
0000000000023e00	str	xzr, [sp, #0x38]
0000000000023e04	ldr	x8, [x21]
0000000000023e08	and	x8, x8, #0xfffffffffffffffc
0000000000023e0c	ldr	x8, [x8]
0000000000023e10	ldr	w9, [x8, #0x3c]
0000000000023e14	ldr	x8, [x8, #0x40]
0000000000023e18	tbz	w9, #0x1f, 0x23de0
0000000000023e1c	neg	w10, w9
0000000000023e20	mvn	w9, w9
0000000000023e24	cmp	w10, #0x9
0000000000023e28	b.ge	0x23e60
0000000000023e2c	cmp	w10, #0x2
0000000000023e30	b.lt	0x23e94
0000000000023e34	mov	x10, #0x0
0000000000023e38	mov	x11, x8
0000000000023e3c	ldr	w12, [x11]
0000000000023e40	cmp	w12, #0x157
0000000000023e44	b.gt	0x23e9c
0000000000023e48	add	x10, x10, #0x1
0000000000023e4c	add	x11, x11, #0x10
0000000000023e50	cmp	x9, x10
0000000000023e54	b.ne	0x23e3c
0000000000023e58	mov	x10, x9
0000000000023e5c	b	0x23e9c
0000000000023e60	mov	w10, #0x0
0000000000023e64	add	w11, w9, w10
0000000000023e68	cmp	w11, #0x0
0000000000023e6c	cinc	w11, w11, lt
0000000000023e70	asr	w11, w11, #1
0000000000023e74	sbfiz	x12, x11, #4, #32
0000000000023e78	ldr	w12, [x8, x12]
0000000000023e7c	cmp	w12, #0x158
0000000000023e80	csinc	w10, w10, w11, ge
0000000000023e84	csel	w9, w9, w11, lt
0000000000023e88	cmp	w10, w9
0000000000023e8c	b.lt	0x23e64
0000000000023e90	b	0x23e9c
0000000000023e94	mov	w10, #0x0
0000000000023e98	b	0x23e9c
0000000000023e9c	sxtw	x9, w10
0000000000023ea0	add	x8, x8, x9, lsl #4
0000000000023ea4	ldr	x8, [x8, #0x8]
0000000000023ea8	ldr	x8, [x8]
0000000000023eac	mov	x0, x21
0000000000023eb0	mov	x1, x22
0000000000023eb4	mov	x2, x23
0000000000023eb8	ldr	x4, [sp, #0x8]
0000000000023ebc	blr	x8
0000000000023ec0	bl	_Kotlin_ObjCExport_refToRetainedObjC
0000000000023ec4	mov	x1, x0
0000000000023ec8	mov	x0, x19
0000000000023ecc	blr	x28
0000000000023ed0	ldr	x8, [x0]
0000000000023ed4	ldr	x9, [sp, #0x18]
0000000000023ed8	str	x9, [x8, #0x110]
0000000000023edc	add	x8, x8, #0x138
0000000000023ee0	mov	w9, #0x1
0000000000023ee4	ldaxr	wzr, [x8]
0000000000023ee8	stlxr	w10, w9, [x8]
0000000000023eec	cbnz	w10, 0x23ee4
0000000000023ef0	mov	x0, x1
0000000000023ef4	ldp	x29, x30, [sp, #0xa0]
0000000000023ef8	ldp	x20, x19, [sp, #0x90]
0000000000023efc	ldp	x22, x21, [sp, #0x80]
0000000000023f00	ldp	x24, x23, [sp, #0x70]
0000000000023f04	ldp	x26, x25, [sp, #0x60]
0000000000023f08	ldp	x28, x27, [sp, #0x50]
0000000000023f0c	add	sp, sp, #0xb0
0000000000023f10	b	0x4dc64 ; symbol stub for: _objc_autoreleaseReturnValue
0000000000023f14	mov	x1, x0
0000000000023f18	mov	x0, x19
0000000000023f1c	blr	x28
0000000000023f20	ldr	x8, [x0]
0000000000023f24	add	x9, sp, #0x10
0000000000023f28	str	x9, [x8, #0x110]
0000000000023f2c	mov	x0, x1
0000000000023f30	bl	0x4da78 ; symbol stub for: ___cxa_begin_catch
0000000000023f34	bl	0x4da48 ; symbol stub for: __ZSt9terminatev
0000000000023f38	b	0x23f38
_invokeFunction0:
0000000000023f3c	sub	sp, sp, #0x60
0000000000023f40	stp	x24, x23, [sp, #0x20]
0000000000023f44	stp	x22, x21, [sp, #0x30]
0000000000023f48	stp	x20, x19, [sp, #0x40]
0000000000023f4c	stp	x29, x30, [sp, #0x50]
0000000000023f50	add	x29, sp, #0x50
0000000000023f54	mov	x19, x1
0000000000023f58	mov	x22, x0
0000000000023f5c	movi.16b	v0, #0x0
0000000000023f60	stp	q0, q0, [sp]
0000000000023f64	mov	x21, sp
0000000000023f68	adrp	x20, 69 ; 0x68000
0000000000023f6c	add	x20, x20, #0xa00
0000000000023f70	ldr	x23, [x20]
0000000000023f74	mov	x0, x20
0000000000023f78	blr	x23
0000000000023f7c	ldr	x8, [x0]
0000000000023f80	ldr	x9, [x8, #0x110]
0000000000023f84	str	x21, [x8, #0x110]
0000000000023f88	mov	x8, #0x400000000
0000000000023f8c	stp	x9, x8, [sp, #0x8]
0000000000023f90	adr	x24, #0x5e8b3
0000000000023f94	nop
0000000000023f98	ldarb	w8, [x24]
0000000000023f9c	tbz	w8, #0x0, 0x23fa4
0000000000023fa0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000023fa4	mov	x8, #0x0
0000000000023fa8	add	x21, x21, #0x18
0000000000023fac	ldar	x9, [x22]
0000000000023fb0	ands	x9, x9, #0xfffffffffffffffc
0000000000023fb4	b.eq	0x23fcc
0000000000023fb8	ldr	x10, [x9]
0000000000023fbc	cmp	x10, x9
0000000000023fc0	b.eq	0x23fcc
0000000000023fc4	add	x8, x9, #0x10
0000000000023fc8	ldar	x8, [x8]
0000000000023fcc	ldr	x1, [x8, #0x10]
0000000000023fd0	mov	x0, x20
0000000000023fd4	blr	x23
0000000000023fd8	ldr	x9, [x0]
0000000000023fdc	add	x9, x9, #0x138
0000000000023fe0	mov	w10, #0x1
0000000000023fe4	ldaxr	wzr, [x9]
0000000000023fe8	stlxr	w11, w10, [x9]
0000000000023fec	cbnz	w11, 0x23fe4
0000000000023ff0	mov	x0, x8
0000000000023ff4	bl	0x24108
0000000000023ff8	mov	x22, x0
0000000000023ffc	mov	x0, x20
0000000000024000	blr	x23
0000000000024004	ldr	x8, [x0]
0000000000024008	add	x0, x8, #0x138
000000000002400c	ldaxr	w8, [x0]
0000000000024010	stlxr	w9, wzr, [x0]
0000000000024014	cbnz	w9, 0x2400c
0000000000024018	cmp	w8, #0x1
000000000002401c	b.ne	0x2402c
0000000000024020	ldarb	w8, [x24]
0000000000024024	tbz	w8, #0x0, 0x2402c
0000000000024028	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000002402c	cbz	x22, 0x2404c
0000000000024030	nop
0000000000024034	ldr	x1, #0x5ea64
0000000000024038	mov	x0, x22
000000000002403c	mov	x2, x21
0000000000024040	bl	0x4dcb8 ; Objc message: -[x0 count]
0000000000024044	mov	x21, x0
0000000000024048	b	0x24054
000000000002404c	mov	x21, #0x0
0000000000024050	str	xzr, [sp, #0x18]
0000000000024054	mov	x0, x20
0000000000024058	blr	x23
000000000002405c	ldr	x8, [x0]
0000000000024060	add	x8, x8, #0x138
0000000000024064	mov	w9, #0x1
0000000000024068	ldaxr	wzr, [x8]
000000000002406c	stlxr	w10, w9, [x8]
0000000000024070	cbnz	w10, 0x24068
0000000000024074	mov	x0, x22
0000000000024078	bl	0x4dcdc ; symbol stub for: _objc_release
000000000002407c	mov	x0, x20
0000000000024080	blr	x23
0000000000024084	ldr	x8, [x0]
0000000000024088	add	x0, x8, #0x138
000000000002408c	ldaxr	w8, [x0]
0000000000024090	stlxr	w9, wzr, [x0]
0000000000024094	cbnz	w9, 0x2408c
0000000000024098	cmp	w8, #0x1
000000000002409c	b.ne	0x240ac
00000000000240a0	ldarb	w8, [x24]
00000000000240a4	tbz	w8, #0x0, 0x240ac
00000000000240a8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000240ac	str	x21, [x19]
00000000000240b0	mov	x0, x20
00000000000240b4	blr	x23
00000000000240b8	ldr	x8, [x0]
00000000000240bc	ldr	x9, [sp, #0x8]
00000000000240c0	str	x9, [x8, #0x110]
00000000000240c4	mov	x0, x21
00000000000240c8	ldp	x29, x30, [sp, #0x50]
00000000000240cc	ldp	x20, x19, [sp, #0x40]
00000000000240d0	ldp	x22, x21, [sp, #0x30]
00000000000240d4	ldp	x24, x23, [sp, #0x20]
00000000000240d8	add	sp, sp, #0x60
00000000000240dc	ret
00000000000240e0	mov	x1, x0
00000000000240e4	mov	x0, x20
00000000000240e8	blr	x23
00000000000240ec	ldr	x8, [x0]
00000000000240f0	mov	x9, sp
00000000000240f4	str	x9, [x8, #0x110]
00000000000240f8	mov	x0, x1
00000000000240fc	bl	0x4da78 ; symbol stub for: ___cxa_begin_catch
0000000000024100	bl	0x4da48 ; symbol stub for: __ZSt9terminatev
0000000000024104	b	0x24104
0000000000024108	stp	x29, x30, [sp, #-0x10]!
000000000002410c	mov	x29, sp
0000000000024110	blr	x1
0000000000024114	mov	x29, x29
0000000000024118	ldp	x29, x30, [sp], #0x10
000000000002411c	b	0x4dcf4 ; symbol stub for: _objc_retainAutoreleasedReturnValue
_convertBlock0:
0000000000024120	sub	sp, sp, #0x50
0000000000024124	stp	x22, x21, [sp, #0x20]
0000000000024128	stp	x20, x19, [sp, #0x30]
000000000002412c	stp	x29, x30, [sp, #0x40]
0000000000024130	add	x29, sp, #0x40
0000000000024134	mov	x19, x1
0000000000024138	mov	x21, x0
000000000002413c	movi.16b	v0, #0x0
0000000000024140	stp	q0, q0, [sp]
0000000000024144	adrp	x20, 68 ; 0x68000
0000000000024148	add	x20, x20, #0xa00
000000000002414c	ldr	x22, [x20]
0000000000024150	mov	x0, x20
0000000000024154	blr	x22
0000000000024158	ldr	x8, [x0]
000000000002415c	ldr	x9, [x8, #0x110]
0000000000024160	mov	x10, sp
0000000000024164	str	x10, [x8, #0x110]
0000000000024168	mov	x8, #0x400000000
000000000002416c	stp	x9, x8, [sp, #0x8]
0000000000024170	adr	x8, #0x5e6d3
0000000000024174	nop
0000000000024178	ldarb	w8, [x8]
000000000002417c	tbz	w8, #0x0, 0x24184
0000000000024180	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000024184	cbz	x21, 0x241b0
0000000000024188	mov	x0, x21
000000000002418c	bl	0x4dd00 ; symbol stub for: _objc_retainBlock
0000000000024190	mov	x1, x0
0000000000024194	mov	x8, sp
0000000000024198	add	x2, x8, #0x18
000000000002419c	adr	x0, #0x3dbe4
00000000000241a0	nop
00000000000241a4	bl	_Kotlin_ObjCExport_AllocInstanceWithAssociatedObject
00000000000241a8	mov	x8, x0
00000000000241ac	b	0x241b4
00000000000241b0	mov	x8, #0x0
00000000000241b4	str	x8, [x19]
00000000000241b8	mov	x0, x20
00000000000241bc	blr	x22
00000000000241c0	ldr	x9, [x0]
00000000000241c4	ldr	x10, [sp, #0x8]
00000000000241c8	str	x10, [x9, #0x110]
00000000000241cc	mov	x0, x8
00000000000241d0	ldp	x29, x30, [sp, #0x40]
00000000000241d4	ldp	x20, x19, [sp, #0x30]
00000000000241d8	ldp	x22, x21, [sp, #0x20]
00000000000241dc	add	sp, sp, #0x50
00000000000241e0	ret
00000000000241e4	mov	x1, x0
00000000000241e8	mov	x0, x20
00000000000241ec	blr	x22
00000000000241f0	ldr	x8, [x0]
00000000000241f4	mov	x9, sp
00000000000241f8	str	x9, [x8, #0x110]
00000000000241fc	mov	x0, x1
0000000000024200	bl	0x4da78 ; symbol stub for: ___cxa_begin_catch
0000000000024204	bl	0x4da48 ; symbol stub for: __ZSt9terminatev
0000000000024208	b	0x24208
_invokeFunction1:
000000000002420c	sub	sp, sp, #0x80
0000000000024210	stp	x28, x27, [sp, #0x20]
0000000000024214	stp	x26, x25, [sp, #0x30]
0000000000024218	stp	x24, x23, [sp, #0x40]
000000000002421c	stp	x22, x21, [sp, #0x50]
0000000000024220	stp	x20, x19, [sp, #0x60]
0000000000024224	stp	x29, x30, [sp, #0x70]
0000000000024228	add	x29, sp, #0x70
000000000002422c	mov	x19, x2
0000000000024230	mov	x22, x1
0000000000024234	mov	x23, x0
0000000000024238	movi.16b	v0, #0x0
000000000002423c	stp	q0, q0, [sp]
0000000000024240	mov	x27, sp
0000000000024244	adrp	x20, 68 ; 0x68000
0000000000024248	add	x20, x20, #0xa00
000000000002424c	ldr	x25, [x20]
0000000000024250	mov	x0, x20
0000000000024254	blr	x25
0000000000024258	ldr	x8, [x0]
000000000002425c	ldr	x9, [x8, #0x110]
0000000000024260	str	x27, [x8, #0x110]
0000000000024264	mov	x8, #0x400000000
0000000000024268	stp	x9, x8, [sp, #0x8]
000000000002426c	adr	x26, #0x5e5d7
0000000000024270	nop
0000000000024274	ldarb	w8, [x26]
0000000000024278	tbz	w8, #0x0, 0x24280
000000000002427c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000024280	mov	x21, #0x0
0000000000024284	ldar	x8, [x23]
0000000000024288	ands	x8, x8, #0xfffffffffffffffc
000000000002428c	b.eq	0x242a4
0000000000024290	ldr	x9, [x8]
0000000000024294	cmp	x9, x8
0000000000024298	b.eq	0x242a4
000000000002429c	add	x8, x8, #0x10
00000000000242a0	ldar	x21, [x8]
00000000000242a4	ldr	x24, [x21, #0x10]
00000000000242a8	mov	x0, x22
00000000000242ac	bl	_Kotlin_ObjCExport_refToRetainedObjC
00000000000242b0	mov	x23, x0
00000000000242b4	add	x22, x27, #0x18
00000000000242b8	mov	x0, x20
00000000000242bc	blr	x25
00000000000242c0	ldr	x8, [x0]
00000000000242c4	add	x8, x8, #0x138
00000000000242c8	mov	w9, #0x1
00000000000242cc	ldaxr	wzr, [x8]
00000000000242d0	stlxr	w10, w9, [x8]
00000000000242d4	cbnz	w10, 0x242cc
00000000000242d8	mov	x0, x21
00000000000242dc	mov	x1, x23
00000000000242e0	mov	x2, x24
00000000000242e4	bl	0x24408
00000000000242e8	mov	x21, x0
00000000000242ec	mov	x0, x23
00000000000242f0	bl	0x4dcdc ; symbol stub for: _objc_release
00000000000242f4	mov	x0, x20
00000000000242f8	blr	x25
00000000000242fc	ldr	x8, [x0]
0000000000024300	add	x0, x8, #0x138
0000000000024304	ldaxr	w8, [x0]
0000000000024308	stlxr	w9, wzr, [x0]
000000000002430c	cbnz	w9, 0x24304
0000000000024310	cmp	w8, #0x1
0000000000024314	b.ne	0x24324
0000000000024318	ldarb	w8, [x26]
000000000002431c	tbz	w8, #0x0, 0x24324
0000000000024320	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000024324	cbz	x21, 0x24344
0000000000024328	nop
000000000002432c	ldr	x1, #0x5e76c
0000000000024330	mov	x0, x21
0000000000024334	mov	x2, x22
0000000000024338	bl	0x4dcb8 ; Objc message: -[x0 count]
000000000002433c	mov	x22, x0
0000000000024340	b	0x2434c
0000000000024344	mov	x22, #0x0
0000000000024348	str	xzr, [sp, #0x18]
000000000002434c	mov	x0, x20
0000000000024350	blr	x25
0000000000024354	ldr	x8, [x0]
0000000000024358	add	x8, x8, #0x138
000000000002435c	mov	w9, #0x1
0000000000024360	ldaxr	wzr, [x8]
0000000000024364	stlxr	w10, w9, [x8]
0000000000024368	cbnz	w10, 0x24360
000000000002436c	mov	x0, x21
0000000000024370	bl	0x4dcdc ; symbol stub for: _objc_release
0000000000024374	mov	x0, x20
0000000000024378	blr	x25
000000000002437c	ldr	x8, [x0]
0000000000024380	add	x0, x8, #0x138
0000000000024384	ldaxr	w8, [x0]
0000000000024388	stlxr	w9, wzr, [x0]
000000000002438c	cbnz	w9, 0x24384
0000000000024390	cmp	w8, #0x1
0000000000024394	b.ne	0x243a4
0000000000024398	ldarb	w8, [x26]
000000000002439c	tbz	w8, #0x0, 0x243a4
00000000000243a0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000243a4	str	x22, [x19]
00000000000243a8	mov	x0, x20
00000000000243ac	blr	x25
00000000000243b0	ldr	x8, [x0]
00000000000243b4	ldr	x9, [sp, #0x8]
00000000000243b8	str	x9, [x8, #0x110]
00000000000243bc	mov	x0, x22
00000000000243c0	ldp	x29, x30, [sp, #0x70]
00000000000243c4	ldp	x20, x19, [sp, #0x60]
00000000000243c8	ldp	x22, x21, [sp, #0x50]
00000000000243cc	ldp	x24, x23, [sp, #0x40]
00000000000243d0	ldp	x26, x25, [sp, #0x30]
00000000000243d4	ldp	x28, x27, [sp, #0x20]
00000000000243d8	add	sp, sp, #0x80
00000000000243dc	ret
00000000000243e0	mov	x1, x0
00000000000243e4	mov	x0, x20
00000000000243e8	blr	x25
00000000000243ec	ldr	x8, [x0]
00000000000243f0	mov	x9, sp
00000000000243f4	str	x9, [x8, #0x110]
00000000000243f8	mov	x0, x1
00000000000243fc	bl	0x4da78 ; symbol stub for: ___cxa_begin_catch
0000000000024400	bl	0x4da48 ; symbol stub for: __ZSt9terminatev
0000000000024404	b	0x24404
0000000000024408	stp	x29, x30, [sp, #-0x10]!
000000000002440c	mov	x29, sp
0000000000024410	blr	x2
0000000000024414	mov	x29, x29
0000000000024418	ldp	x29, x30, [sp], #0x10
000000000002441c	b	0x4dcf4 ; symbol stub for: _objc_retainAutoreleasedReturnValue
_convertBlock1:
0000000000024420	sub	sp, sp, #0x50
0000000000024424	stp	x22, x21, [sp, #0x20]
0000000000024428	stp	x20, x19, [sp, #0x30]
000000000002442c	stp	x29, x30, [sp, #0x40]
0000000000024430	add	x29, sp, #0x40
0000000000024434	mov	x19, x1
0000000000024438	mov	x21, x0
000000000002443c	movi.16b	v0, #0x0
0000000000024440	stp	q0, q0, [sp]
0000000000024444	adrp	x20, 68 ; 0x68000
0000000000024448	add	x20, x20, #0xa00
000000000002444c	ldr	x22, [x20]
0000000000024450	mov	x0, x20
0000000000024454	blr	x22
0000000000024458	ldr	x8, [x0]
000000000002445c	ldr	x9, [x8, #0x110]
0000000000024460	mov	x10, sp
0000000000024464	str	x10, [x8, #0x110]
0000000000024468	mov	x8, #0x400000000
000000000002446c	stp	x9, x8, [sp, #0x8]
0000000000024470	adr	x8, #0x5e3d3
0000000000024474	nop
0000000000024478	ldarb	w8, [x8]
000000000002447c	tbz	w8, #0x0, 0x24484
0000000000024480	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000024484	cbz	x21, 0x244b0
0000000000024488	mov	x0, x21
000000000002448c	bl	0x4dd00 ; symbol stub for: _objc_retainBlock
0000000000024490	mov	x1, x0
0000000000024494	mov	x8, sp
0000000000024498	add	x2, x8, #0x18
000000000002449c	adr	x0, #0x3d9a4
00000000000244a0	nop
00000000000244a4	bl	_Kotlin_ObjCExport_AllocInstanceWithAssociatedObject
00000000000244a8	mov	x8, x0
00000000000244ac	b	0x244b4
00000000000244b0	mov	x8, #0x0
00000000000244b4	str	x8, [x19]
00000000000244b8	mov	x0, x20
00000000000244bc	blr	x22
00000000000244c0	ldr	x9, [x0]
00000000000244c4	ldr	x10, [sp, #0x8]
00000000000244c8	str	x10, [x9, #0x110]
00000000000244cc	mov	x0, x8
00000000000244d0	ldp	x29, x30, [sp, #0x40]
00000000000244d4	ldp	x20, x19, [sp, #0x30]
00000000000244d8	ldp	x22, x21, [sp, #0x20]
00000000000244dc	add	sp, sp, #0x50
00000000000244e0	ret
00000000000244e4	mov	x1, x0
00000000000244e8	mov	x0, x20
00000000000244ec	blr	x22
00000000000244f0	ldr	x8, [x0]
00000000000244f4	mov	x9, sp
00000000000244f8	str	x9, [x8, #0x110]
00000000000244fc	mov	x0, x1
0000000000024500	bl	0x4da78 ; symbol stub for: ___cxa_begin_catch
0000000000024504	bl	0x4da48 ; symbol stub for: __ZSt9terminatev
0000000000024508	b	0x24508
_invokeFunction2:
000000000002450c	sub	sp, sp, #0x80
0000000000024510	stp	x28, x27, [sp, #0x20]
0000000000024514	stp	x26, x25, [sp, #0x30]
0000000000024518	stp	x24, x23, [sp, #0x40]
000000000002451c	stp	x22, x21, [sp, #0x50]
0000000000024520	stp	x20, x19, [sp, #0x60]
0000000000024524	stp	x29, x30, [sp, #0x70]
0000000000024528	add	x29, sp, #0x70
000000000002452c	mov	x19, x3
0000000000024530	mov	x22, x2
0000000000024534	mov	x23, x1
0000000000024538	mov	x24, x0
000000000002453c	movi.16b	v0, #0x0
0000000000024540	stp	q0, q0, [sp]
0000000000024544	mov	x28, sp
0000000000024548	adrp	x20, 68 ; 0x68000
000000000002454c	add	x20, x20, #0xa00
0000000000024550	ldr	x26, [x20]
0000000000024554	mov	x0, x20
0000000000024558	blr	x26
000000000002455c	ldr	x8, [x0]
0000000000024560	ldr	x9, [x8, #0x110]
0000000000024564	str	x28, [x8, #0x110]
0000000000024568	mov	x8, #0x400000000
000000000002456c	stp	x9, x8, [sp, #0x8]
0000000000024570	adr	x27, #0x5e2d3
0000000000024574	nop
0000000000024578	ldarb	w8, [x27]
000000000002457c	tbz	w8, #0x0, 0x24584
0000000000024580	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000024584	mov	x21, #0x0
0000000000024588	ldar	x8, [x24]
000000000002458c	ands	x8, x8, #0xfffffffffffffffc
0000000000024590	b.eq	0x245a8
0000000000024594	ldr	x9, [x8]
0000000000024598	cmp	x9, x8
000000000002459c	b.eq	0x245a8
00000000000245a0	add	x8, x8, #0x10
00000000000245a4	ldar	x21, [x8]
00000000000245a8	ldr	x24, [x21, #0x10]
00000000000245ac	mov	x0, x23
00000000000245b0	bl	_Kotlin_ObjCExport_refToRetainedObjC
00000000000245b4	mov	x23, x0
00000000000245b8	mov	x0, x22
00000000000245bc	bl	_Kotlin_ObjCExport_refToRetainedObjC
00000000000245c0	mov	x25, x0
00000000000245c4	add	x22, x28, #0x18
00000000000245c8	mov	x0, x20
00000000000245cc	blr	x26
00000000000245d0	ldr	x8, [x0]
00000000000245d4	add	x8, x8, #0x138
00000000000245d8	mov	w9, #0x1
00000000000245dc	ldaxr	wzr, [x8]
00000000000245e0	stlxr	w10, w9, [x8]
00000000000245e4	cbnz	w10, 0x245dc
00000000000245e8	mov	x0, x21
00000000000245ec	mov	x1, x23
00000000000245f0	mov	x2, x25
00000000000245f4	mov	x3, x24
00000000000245f8	bl	0x24724
00000000000245fc	mov	x21, x0
0000000000024600	mov	x0, x23
0000000000024604	bl	0x4dcdc ; symbol stub for: _objc_release
0000000000024608	mov	x0, x25
000000000002460c	bl	0x4dcdc ; symbol stub for: _objc_release
0000000000024610	mov	x0, x20
0000000000024614	blr	x26
0000000000024618	ldr	x8, [x0]
000000000002461c	add	x0, x8, #0x138
0000000000024620	ldaxr	w8, [x0]
0000000000024624	stlxr	w9, wzr, [x0]
0000000000024628	cbnz	w9, 0x24620
000000000002462c	cmp	w8, #0x1
0000000000024630	b.ne	0x24640
0000000000024634	ldarb	w8, [x27]
0000000000024638	tbz	w8, #0x0, 0x24640
000000000002463c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000024640	cbz	x21, 0x24660
0000000000024644	nop
0000000000024648	ldr	x1, #0x5e450
000000000002464c	mov	x0, x21
0000000000024650	mov	x2, x22
0000000000024654	bl	0x4dcb8 ; Objc message: -[x0 count]
0000000000024658	mov	x22, x0
000000000002465c	b	0x24668
0000000000024660	mov	x22, #0x0
0000000000024664	str	xzr, [sp, #0x18]
0000000000024668	mov	x0, x20
000000000002466c	blr	x26
0000000000024670	ldr	x8, [x0]
0000000000024674	add	x8, x8, #0x138
0000000000024678	mov	w9, #0x1
000000000002467c	ldaxr	wzr, [x8]
0000000000024680	stlxr	w10, w9, [x8]
0000000000024684	cbnz	w10, 0x2467c
0000000000024688	mov	x0, x21
000000000002468c	bl	0x4dcdc ; symbol stub for: _objc_release
0000000000024690	mov	x0, x20
0000000000024694	blr	x26
0000000000024698	ldr	x8, [x0]
000000000002469c	add	x0, x8, #0x138
00000000000246a0	ldaxr	w8, [x0]
00000000000246a4	stlxr	w9, wzr, [x0]
00000000000246a8	cbnz	w9, 0x246a0
00000000000246ac	cmp	w8, #0x1
00000000000246b0	b.ne	0x246c0
00000000000246b4	ldarb	w8, [x27]
00000000000246b8	tbz	w8, #0x0, 0x246c0
00000000000246bc	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000246c0	str	x22, [x19]
00000000000246c4	mov	x0, x20
00000000000246c8	blr	x26
00000000000246cc	ldr	x8, [x0]
00000000000246d0	ldr	x9, [sp, #0x8]
00000000000246d4	str	x9, [x8, #0x110]
00000000000246d8	mov	x0, x22
00000000000246dc	ldp	x29, x30, [sp, #0x70]
00000000000246e0	ldp	x20, x19, [sp, #0x60]
00000000000246e4	ldp	x22, x21, [sp, #0x50]
00000000000246e8	ldp	x24, x23, [sp, #0x40]
00000000000246ec	ldp	x26, x25, [sp, #0x30]
00000000000246f0	ldp	x28, x27, [sp, #0x20]
00000000000246f4	add	sp, sp, #0x80
00000000000246f8	ret
00000000000246fc	mov	x1, x0
0000000000024700	mov	x0, x20
0000000000024704	blr	x26
0000000000024708	ldr	x8, [x0]
000000000002470c	mov	x9, sp
0000000000024710	str	x9, [x8, #0x110]
0000000000024714	mov	x0, x1
0000000000024718	bl	0x4da78 ; symbol stub for: ___cxa_begin_catch
000000000002471c	bl	0x4da48 ; symbol stub for: __ZSt9terminatev
0000000000024720	b	0x24720
0000000000024724	stp	x29, x30, [sp, #-0x10]!
0000000000024728	mov	x29, sp
000000000002472c	blr	x3
0000000000024730	mov	x29, x29
0000000000024734	ldp	x29, x30, [sp], #0x10
0000000000024738	b	0x4dcf4 ; symbol stub for: _objc_retainAutoreleasedReturnValue
_convertBlock2:
000000000002473c	sub	sp, sp, #0x50
0000000000024740	stp	x22, x21, [sp, #0x20]
0000000000024744	stp	x20, x19, [sp, #0x30]
0000000000024748	stp	x29, x30, [sp, #0x40]
000000000002474c	add	x29, sp, #0x40
0000000000024750	mov	x19, x1
0000000000024754	mov	x21, x0
0000000000024758	movi.16b	v0, #0x0
000000000002475c	stp	q0, q0, [sp]
0000000000024760	adrp	x20, 68 ; 0x68000
0000000000024764	add	x20, x20, #0xa00
0000000000024768	ldr	x22, [x20]
000000000002476c	mov	x0, x20
0000000000024770	blr	x22
0000000000024774	ldr	x8, [x0]
0000000000024778	ldr	x9, [x8, #0x110]
000000000002477c	mov	x10, sp
0000000000024780	str	x10, [x8, #0x110]
0000000000024784	mov	x8, #0x400000000
0000000000024788	stp	x9, x8, [sp, #0x8]
000000000002478c	adr	x8, #0x5e0b7
0000000000024790	nop
0000000000024794	ldarb	w8, [x8]
0000000000024798	tbz	w8, #0x0, 0x247a0
000000000002479c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000247a0	cbz	x21, 0x247cc
00000000000247a4	mov	x0, x21
00000000000247a8	bl	0x4dd00 ; symbol stub for: _objc_retainBlock
00000000000247ac	mov	x1, x0
00000000000247b0	mov	x8, sp
00000000000247b4	add	x2, x8, #0x18
00000000000247b8	adr	x0, #0x3d7a8
00000000000247bc	nop
00000000000247c0	bl	_Kotlin_ObjCExport_AllocInstanceWithAssociatedObject
00000000000247c4	mov	x8, x0
00000000000247c8	b	0x247d0
00000000000247cc	mov	x8, #0x0
00000000000247d0	str	x8, [x19]
00000000000247d4	mov	x0, x20
00000000000247d8	blr	x22
00000000000247dc	ldr	x9, [x0]
00000000000247e0	ldr	x10, [sp, #0x8]
00000000000247e4	str	x10, [x9, #0x110]
00000000000247e8	mov	x0, x8
00000000000247ec	ldp	x29, x30, [sp, #0x40]
00000000000247f0	ldp	x20, x19, [sp, #0x30]
00000000000247f4	ldp	x22, x21, [sp, #0x20]
00000000000247f8	add	sp, sp, #0x50
00000000000247fc	ret
0000000000024800	mov	x1, x0
0000000000024804	mov	x0, x20
0000000000024808	blr	x22
000000000002480c	ldr	x8, [x0]
0000000000024810	mov	x9, sp
0000000000024814	str	x9, [x8, #0x110]
0000000000024818	mov	x0, x1
000000000002481c	bl	0x4da78 ; symbol stub for: ___cxa_begin_catch
0000000000024820	bl	0x4da48 ; symbol stub for: __ZSt9terminatev
0000000000024824	b	0x24824
_invokeFunction3:
0000000000024828	sub	sp, sp, #0x80
000000000002482c	stp	x28, x27, [sp, #0x20]
0000000000024830	stp	x26, x25, [sp, #0x30]
0000000000024834	stp	x24, x23, [sp, #0x40]
0000000000024838	stp	x22, x21, [sp, #0x50]
000000000002483c	stp	x20, x19, [sp, #0x60]
0000000000024840	stp	x29, x30, [sp, #0x70]
0000000000024844	add	x29, sp, #0x70
0000000000024848	mov	x19, x4
000000000002484c	mov	x22, x3
0000000000024850	mov	x23, x2
0000000000024854	mov	x24, x1
0000000000024858	mov	x25, x0
000000000002485c	movi.16b	v0, #0x0
0000000000024860	stp	q0, q0, [sp]
0000000000024864	mov	x28, sp
0000000000024868	adrp	x20, 68 ; 0x68000
000000000002486c	add	x20, x20, #0xa00
0000000000024870	ldr	x27, [x20]
0000000000024874	mov	x0, x20
0000000000024878	blr	x27
000000000002487c	ldr	x8, [x0]
0000000000024880	ldr	x9, [x8, #0x110]
0000000000024884	str	x28, [x8, #0x110]
0000000000024888	mov	x8, #0x400000000
000000000002488c	stp	x9, x8, [sp, #0x8]
0000000000024890	adr	x8, #0x5dfb3
0000000000024894	nop
0000000000024898	ldarb	w8, [x8]
000000000002489c	tbz	w8, #0x0, 0x248a4
00000000000248a0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000248a4	mov	x21, #0x0
00000000000248a8	ldar	x8, [x25]
00000000000248ac	ands	x8, x8, #0xfffffffffffffffc
00000000000248b0	b.eq	0x248c8
00000000000248b4	ldr	x9, [x8]
00000000000248b8	cmp	x9, x8
00000000000248bc	b.eq	0x248c8
00000000000248c0	add	x8, x8, #0x10
00000000000248c4	ldar	x21, [x8]
00000000000248c8	ldr	x25, [x21, #0x10]
00000000000248cc	mov	x0, x24
00000000000248d0	bl	_Kotlin_ObjCExport_refToRetainedObjC
00000000000248d4	mov	x24, x0
00000000000248d8	mov	x0, x23
00000000000248dc	bl	_Kotlin_ObjCExport_refToRetainedObjC
00000000000248e0	mov	x23, x0
00000000000248e4	mov	x0, x22
00000000000248e8	bl	_Kotlin_ObjCExport_refToRetainedObjC
00000000000248ec	mov	x26, x0
00000000000248f0	add	x22, x28, #0x18
00000000000248f4	mov	x0, x20
00000000000248f8	blr	x27
00000000000248fc	ldr	x8, [x0]
0000000000024900	add	x8, x8, #0x138
0000000000024904	mov	w9, #0x1
0000000000024908	ldaxr	wzr, [x8]
000000000002490c	stlxr	w10, w9, [x8]
0000000000024910	cbnz	w10, 0x24908
0000000000024914	mov	x0, x21
0000000000024918	mov	x1, x24
000000000002491c	mov	x2, x23
0000000000024920	mov	x3, x26
0000000000024924	mov	x4, x25
0000000000024928	bl	0x24a6c
000000000002492c	mov	x21, x0
0000000000024930	mov	x0, x24
0000000000024934	bl	0x4dcdc ; symbol stub for: _objc_release
0000000000024938	mov	x0, x23
000000000002493c	bl	0x4dcdc ; symbol stub for: _objc_release
0000000000024940	mov	x0, x26
0000000000024944	bl	0x4dcdc ; symbol stub for: _objc_release
0000000000024948	mov	x0, x20
000000000002494c	blr	x27
0000000000024950	ldr	x8, [x0]
0000000000024954	add	x0, x8, #0x138
0000000000024958	ldaxr	w8, [x0]
000000000002495c	stlxr	w9, wzr, [x0]
0000000000024960	cbnz	w9, 0x24958
0000000000024964	cmp	w8, #0x1
0000000000024968	b.ne	0x24980
000000000002496c	adr	x8, #0x5ded7
0000000000024970	nop
0000000000024974	ldarb	w8, [x8]
0000000000024978	tbz	w8, #0x0, 0x24980
000000000002497c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000024980	cbz	x21, 0x249a0
0000000000024984	nop
0000000000024988	ldr	x1, #0x5e110
000000000002498c	mov	x0, x21
0000000000024990	mov	x2, x22
0000000000024994	bl	0x4dcb8 ; Objc message: -[x0 count]
0000000000024998	mov	x22, x0
000000000002499c	b	0x249a8
00000000000249a0	mov	x22, #0x0
00000000000249a4	str	xzr, [sp, #0x18]
00000000000249a8	mov	x0, x20
00000000000249ac	blr	x27
00000000000249b0	ldr	x8, [x0]
00000000000249b4	add	x8, x8, #0x138
00000000000249b8	mov	w9, #0x1
00000000000249bc	ldaxr	wzr, [x8]
00000000000249c0	stlxr	w10, w9, [x8]
00000000000249c4	cbnz	w10, 0x249bc
00000000000249c8	mov	x0, x21
00000000000249cc	bl	0x4dcdc ; symbol stub for: _objc_release
00000000000249d0	mov	x0, x20
00000000000249d4	blr	x27
00000000000249d8	ldr	x8, [x0]
00000000000249dc	add	x0, x8, #0x138
00000000000249e0	ldaxr	w8, [x0]
00000000000249e4	stlxr	w9, wzr, [x0]
00000000000249e8	cbnz	w9, 0x249e0
00000000000249ec	cmp	w8, #0x1
00000000000249f0	b.ne	0x24a08
00000000000249f4	adr	x8, #0x5de4f
00000000000249f8	nop
00000000000249fc	ldarb	w8, [x8]
0000000000024a00	tbz	w8, #0x0, 0x24a08
0000000000024a04	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000024a08	str	x22, [x19]
0000000000024a0c	mov	x0, x20
0000000000024a10	blr	x27
0000000000024a14	ldr	x8, [x0]
0000000000024a18	ldr	x9, [sp, #0x8]
0000000000024a1c	str	x9, [x8, #0x110]
0000000000024a20	mov	x0, x22
0000000000024a24	ldp	x29, x30, [sp, #0x70]
0000000000024a28	ldp	x20, x19, [sp, #0x60]
0000000000024a2c	ldp	x22, x21, [sp, #0x50]
0000000000024a30	ldp	x24, x23, [sp, #0x40]
0000000000024a34	ldp	x26, x25, [sp, #0x30]
0000000000024a38	ldp	x28, x27, [sp, #0x20]
0000000000024a3c	add	sp, sp, #0x80
0000000000024a40	ret
0000000000024a44	mov	x1, x0
0000000000024a48	mov	x0, x20
0000000000024a4c	blr	x27
0000000000024a50	ldr	x8, [x0]
0000000000024a54	mov	x9, sp
0000000000024a58	str	x9, [x8, #0x110]
0000000000024a5c	mov	x0, x1
0000000000024a60	bl	0x4da78 ; symbol stub for: ___cxa_begin_catch
0000000000024a64	bl	0x4da48 ; symbol stub for: __ZSt9terminatev
0000000000024a68	b	0x24a68
0000000000024a6c	stp	x29, x30, [sp, #-0x10]!
0000000000024a70	mov	x29, sp
0000000000024a74	blr	x4
0000000000024a78	mov	x29, x29
0000000000024a7c	ldp	x29, x30, [sp], #0x10
0000000000024a80	b	0x4dcf4 ; symbol stub for: _objc_retainAutoreleasedReturnValue
_convertBlock3:
0000000000024a84	sub	sp, sp, #0x50
0000000000024a88	stp	x22, x21, [sp, #0x20]
0000000000024a8c	stp	x20, x19, [sp, #0x30]
0000000000024a90	stp	x29, x30, [sp, #0x40]
0000000000024a94	add	x29, sp, #0x40
0000000000024a98	mov	x19, x1
0000000000024a9c	mov	x21, x0
0000000000024aa0	movi.16b	v0, #0x0
0000000000024aa4	stp	q0, q0, [sp]
0000000000024aa8	adrp	x20, 68 ; 0x68000
0000000000024aac	add	x20, x20, #0xa00
0000000000024ab0	ldr	x22, [x20]
0000000000024ab4	mov	x0, x20
0000000000024ab8	blr	x22
0000000000024abc	ldr	x8, [x0]
0000000000024ac0	ldr	x9, [x8, #0x110]
0000000000024ac4	mov	x10, sp
0000000000024ac8	str	x10, [x8, #0x110]
0000000000024acc	mov	x8, #0x400000000
0000000000024ad0	stp	x9, x8, [sp, #0x8]
0000000000024ad4	adr	x8, #0x5dd6f
0000000000024ad8	nop
0000000000024adc	ldarb	w8, [x8]
0000000000024ae0	tbz	w8, #0x0, 0x24ae8
0000000000024ae4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000024ae8	cbz	x21, 0x24b14
0000000000024aec	mov	x0, x21
0000000000024af0	bl	0x4dd00 ; symbol stub for: _objc_retainBlock
0000000000024af4	mov	x1, x0
0000000000024af8	mov	x8, sp
0000000000024afc	add	x2, x8, #0x18
0000000000024b00	adr	x0, #0x3d520
0000000000024b04	nop
0000000000024b08	bl	_Kotlin_ObjCExport_AllocInstanceWithAssociatedObject
0000000000024b0c	mov	x8, x0
0000000000024b10	b	0x24b18
0000000000024b14	mov	x8, #0x0
0000000000024b18	str	x8, [x19]
0000000000024b1c	mov	x0, x20
0000000000024b20	blr	x22
0000000000024b24	ldr	x9, [x0]
0000000000024b28	ldr	x10, [sp, #0x8]
0000000000024b2c	str	x10, [x9, #0x110]
0000000000024b30	mov	x0, x8
0000000000024b34	ldp	x29, x30, [sp, #0x40]
0000000000024b38	ldp	x20, x19, [sp, #0x30]
0000000000024b3c	ldp	x22, x21, [sp, #0x20]
0000000000024b40	add	sp, sp, #0x50
0000000000024b44	ret
0000000000024b48	mov	x1, x0
0000000000024b4c	mov	x0, x20
0000000000024b50	blr	x22
0000000000024b54	ldr	x8, [x0]
0000000000024b58	mov	x9, sp
0000000000024b5c	str	x9, [x8, #0x110]
0000000000024b60	mov	x0, x1
0000000000024b64	bl	0x4da78 ; symbol stub for: ___cxa_begin_catch
0000000000024b68	bl	0x4da48 ; symbol stub for: __ZSt9terminatev
0000000000024b6c	b	0x24b6c
_kotlin2objc_Kotlin_Any_equals:
0000000000024b70	sub	sp, sp, #0x70
0000000000024b74	stp	x26, x25, [sp, #0x20]
0000000000024b78	stp	x24, x23, [sp, #0x30]
0000000000024b7c	stp	x22, x21, [sp, #0x40]
0000000000024b80	stp	x20, x19, [sp, #0x50]
0000000000024b84	stp	x29, x30, [sp, #0x60]
0000000000024b88	add	x29, sp, #0x60
0000000000024b8c	mov	x20, x1
0000000000024b90	mov	x21, x0
0000000000024b94	str	xzr, [sp, #0x8]
0000000000024b98	adrp	x19, 68 ; 0x68000
0000000000024b9c	add	x19, x19, #0xa00
0000000000024ba0	ldr	x24, [x19]
0000000000024ba4	mov	x0, x19
0000000000024ba8	blr	x24
0000000000024bac	ldr	x8, [x0]
0000000000024bb0	ldr	x9, [x8, #0x110]
0000000000024bb4	add	x10, sp, #0x8
0000000000024bb8	str	x10, [x8, #0x110]
0000000000024bbc	mov	x8, #0x300000000
0000000000024bc0	stp	x9, x8, [sp, #0x10]
0000000000024bc4	adr	x25, #0x5dc7f
0000000000024bc8	nop
0000000000024bcc	ldarb	w8, [x25]
0000000000024bd0	tbz	w8, #0x0, 0x24bd8
0000000000024bd4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000024bd8	mov	x0, x21
0000000000024bdc	bl	_Kotlin_ObjCExport_refToLocalObjC
0000000000024be0	mov	x21, x0
0000000000024be4	nop
0000000000024be8	ldr	x23, #0x41988 ; Objc selector ref: isEqual:
0000000000024bec	mov	x0, x20
0000000000024bf0	bl	_Kotlin_ObjCExport_refToRetainedObjC
0000000000024bf4	mov	x22, x0
0000000000024bf8	mov	x0, x19
0000000000024bfc	blr	x24
0000000000024c00	ldr	x8, [x0]
0000000000024c04	add	x8, x8, #0x138
0000000000024c08	mov	w9, #0x1
0000000000024c0c	ldaxr	wzr, [x8]
0000000000024c10	stlxr	w10, w9, [x8]
0000000000024c14	cbnz	w10, 0x24c0c
0000000000024c18	mov	x0, x21
0000000000024c1c	mov	x1, x23
0000000000024c20	mov	x2, x22
0000000000024c24	bl	0x4dcb8 ; Objc message: -[x0 isEqual:]
0000000000024c28	mov	x20, x0
0000000000024c2c	mov	x0, x22
0000000000024c30	bl	0x4dcdc ; symbol stub for: _objc_release
0000000000024c34	mov	x0, x19
0000000000024c38	blr	x24
0000000000024c3c	ldr	x8, [x0]
0000000000024c40	add	x0, x8, #0x138
0000000000024c44	ldaxr	w8, [x0]
0000000000024c48	stlxr	w9, wzr, [x0]
0000000000024c4c	cbnz	w9, 0x24c44
0000000000024c50	cmp	w8, #0x1
0000000000024c54	b.ne	0x24c64
0000000000024c58	ldarb	w8, [x25]
0000000000024c5c	tbz	w8, #0x0, 0x24c64
0000000000024c60	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000024c64	cmp	w20, #0x0
0000000000024c68	cset	w8, ne
0000000000024c6c	mov	x0, x19
0000000000024c70	blr	x24
0000000000024c74	ldr	x9, [x0]
0000000000024c78	ldr	x10, [sp, #0x10]
0000000000024c7c	str	x10, [x9, #0x110]
0000000000024c80	mov	x0, x8
0000000000024c84	ldp	x29, x30, [sp, #0x60]
0000000000024c88	ldp	x20, x19, [sp, #0x50]
0000000000024c8c	ldp	x22, x21, [sp, #0x40]
0000000000024c90	ldp	x24, x23, [sp, #0x30]
0000000000024c94	ldp	x26, x25, [sp, #0x20]
0000000000024c98	add	sp, sp, #0x70
0000000000024c9c	ret
0000000000024ca0	mov	x1, x0
0000000000024ca4	mov	x0, x19
0000000000024ca8	blr	x24
0000000000024cac	ldr	x8, [x0]
0000000000024cb0	add	x9, sp, #0x8
0000000000024cb4	str	x9, [x8, #0x110]
0000000000024cb8	mov	x0, x1
0000000000024cbc	bl	0x4da78 ; symbol stub for: ___cxa_begin_catch
0000000000024cc0	bl	0x4da48 ; symbol stub for: __ZSt9terminatev
0000000000024cc4	b	0x24cc4
_kotlin2objc_kfun:kotlin.Any#hashCode(){}kotlin.Int:
0000000000024cc8	sub	sp, sp, #0x50
0000000000024ccc	stp	x22, x21, [sp, #0x20]
0000000000024cd0	stp	x20, x19, [sp, #0x30]
0000000000024cd4	stp	x29, x30, [sp, #0x40]
0000000000024cd8	add	x29, sp, #0x40
0000000000024cdc	mov	x20, x0
0000000000024ce0	str	xzr, [sp, #0x8]
0000000000024ce4	adrp	x19, 68 ; 0x68000
0000000000024ce8	add	x19, x19, #0xa00
0000000000024cec	ldr	x21, [x19]
0000000000024cf0	mov	x0, x19
0000000000024cf4	blr	x21
0000000000024cf8	ldr	x8, [x0]
0000000000024cfc	ldr	x9, [x8, #0x110]
0000000000024d00	add	x10, sp, #0x8
0000000000024d04	str	x10, [x8, #0x110]
0000000000024d08	mov	x8, #0x300000000
0000000000024d0c	stp	x9, x8, [sp, #0x10]
0000000000024d10	adr	x22, #0x5db33
0000000000024d14	nop
0000000000024d18	ldarb	w8, [x22]
0000000000024d1c	tbz	w8, #0x0, 0x24d24
0000000000024d20	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000024d24	mov	x0, x20
0000000000024d28	bl	_Kotlin_ObjCExport_refToLocalObjC
0000000000024d2c	mov	x2, x0
0000000000024d30	nop
0000000000024d34	ldr	x1, #0x4178c ; Objc selector ref: hash
0000000000024d38	mov	x0, x19
0000000000024d3c	blr	x21
0000000000024d40	ldr	x8, [x0]
0000000000024d44	add	x8, x8, #0x138
0000000000024d48	mov	w9, #0x1
0000000000024d4c	ldaxr	wzr, [x8]
0000000000024d50	stlxr	w10, w9, [x8]
0000000000024d54	cbnz	w10, 0x24d4c
0000000000024d58	mov	x0, x2
0000000000024d5c	bl	0x4dcb8 ; Objc message: -[x0 hash]
0000000000024d60	mov	x20, x0
0000000000024d64	mov	x0, x19
0000000000024d68	blr	x21
0000000000024d6c	ldr	x8, [x0]
0000000000024d70	add	x0, x8, #0x138
0000000000024d74	ldaxr	w8, [x0]
0000000000024d78	stlxr	w9, wzr, [x0]
0000000000024d7c	cbnz	w9, 0x24d74
0000000000024d80	cmp	w8, #0x1
0000000000024d84	b.ne	0x24d94
0000000000024d88	ldarb	w8, [x22]
0000000000024d8c	tbz	w8, #0x0, 0x24d94
0000000000024d90	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000024d94	lsr	x8, x20, #32
0000000000024d98	eor	w8, w20, w8
0000000000024d9c	mov	x0, x19
0000000000024da0	blr	x21
0000000000024da4	ldr	x9, [x0]
0000000000024da8	ldr	x10, [sp, #0x10]
0000000000024dac	str	x10, [x9, #0x110]
0000000000024db0	mov	x0, x8
0000000000024db4	ldp	x29, x30, [sp, #0x40]
0000000000024db8	ldp	x20, x19, [sp, #0x30]
0000000000024dbc	ldp	x22, x21, [sp, #0x20]
0000000000024dc0	add	sp, sp, #0x50
0000000000024dc4	ret
0000000000024dc8	mov	x1, x0
0000000000024dcc	mov	x0, x19
0000000000024dd0	blr	x21
0000000000024dd4	ldr	x8, [x0]
0000000000024dd8	add	x9, sp, #0x8
0000000000024ddc	str	x9, [x8, #0x110]
0000000000024de0	mov	x0, x1
0000000000024de4	bl	0x4da78 ; symbol stub for: ___cxa_begin_catch
0000000000024de8	bl	0x4da48 ; symbol stub for: __ZSt9terminatev
0000000000024dec	b	0x24dec
_kotlin2objc_kfun:kotlin.Any#toString(){}kotlin.String:
0000000000024df0	sub	sp, sp, #0x60
0000000000024df4	stp	x24, x23, [sp, #0x20]
0000000000024df8	stp	x22, x21, [sp, #0x30]
0000000000024dfc	stp	x20, x19, [sp, #0x40]
0000000000024e00	stp	x29, x30, [sp, #0x50]
0000000000024e04	add	x29, sp, #0x50
0000000000024e08	mov	x19, x1
0000000000024e0c	mov	x21, x0
0000000000024e10	movi.16b	v0, #0x0
0000000000024e14	stp	q0, q0, [sp]
0000000000024e18	mov	x22, sp
0000000000024e1c	adrp	x20, 68 ; 0x68000
0000000000024e20	add	x20, x20, #0xa00
0000000000024e24	ldr	x23, [x20]
0000000000024e28	mov	x0, x20
0000000000024e2c	blr	x23
0000000000024e30	ldr	x8, [x0]
0000000000024e34	ldr	x9, [x8, #0x110]
0000000000024e38	str	x22, [x8, #0x110]
0000000000024e3c	mov	x8, #0x400000000
0000000000024e40	stp	x9, x8, [sp, #0x8]
0000000000024e44	adr	x24, #0x5d9ff
0000000000024e48	nop
0000000000024e4c	ldarb	w8, [x24]
0000000000024e50	tbz	w8, #0x0, 0x24e58
0000000000024e54	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000024e58	mov	x0, x21
0000000000024e5c	bl	_Kotlin_ObjCExport_refToLocalObjC
0000000000024e60	mov	x2, x0
0000000000024e64	add	x22, x22, #0x18
0000000000024e68	nop
0000000000024e6c	ldr	x1, #0x4162c ; Objc selector ref: description
0000000000024e70	mov	x0, x20
0000000000024e74	blr	x23
0000000000024e78	ldr	x8, [x0]
0000000000024e7c	add	x8, x8, #0x138
0000000000024e80	mov	w9, #0x1
0000000000024e84	ldaxr	wzr, [x8]
0000000000024e88	stlxr	w10, w9, [x8]
0000000000024e8c	cbnz	w10, 0x24e84
0000000000024e90	mov	x0, x2
0000000000024e94	bl	0x24fa8
0000000000024e98	mov	x21, x0
0000000000024e9c	mov	x0, x20
0000000000024ea0	blr	x23
0000000000024ea4	ldr	x8, [x0]
0000000000024ea8	add	x0, x8, #0x138
0000000000024eac	ldaxr	w8, [x0]
0000000000024eb0	stlxr	w9, wzr, [x0]
0000000000024eb4	cbnz	w9, 0x24eac
0000000000024eb8	cmp	w8, #0x1
0000000000024ebc	b.ne	0x24ecc
0000000000024ec0	ldarb	w8, [x24]
0000000000024ec4	tbz	w8, #0x0, 0x24ecc
0000000000024ec8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000024ecc	cbz	x21, 0x24eec
0000000000024ed0	nop
0000000000024ed4	ldr	x1, #0x5dbc4
0000000000024ed8	mov	x0, x21
0000000000024edc	mov	x2, x22
0000000000024ee0	bl	0x4dcb8 ; Objc message: -[x0 description]
0000000000024ee4	mov	x22, x0
0000000000024ee8	b	0x24ef4
0000000000024eec	mov	x22, #0x0
0000000000024ef0	str	xzr, [sp, #0x18]
0000000000024ef4	mov	x0, x20
0000000000024ef8	blr	x23
0000000000024efc	ldr	x8, [x0]
0000000000024f00	add	x8, x8, #0x138
0000000000024f04	mov	w9, #0x1
0000000000024f08	ldaxr	wzr, [x8]
0000000000024f0c	stlxr	w10, w9, [x8]
0000000000024f10	cbnz	w10, 0x24f08
0000000000024f14	mov	x0, x21
0000000000024f18	bl	0x4dcdc ; symbol stub for: _objc_release
0000000000024f1c	mov	x0, x20
0000000000024f20	blr	x23
0000000000024f24	ldr	x8, [x0]
0000000000024f28	add	x0, x8, #0x138
0000000000024f2c	ldaxr	w8, [x0]
0000000000024f30	stlxr	w9, wzr, [x0]
0000000000024f34	cbnz	w9, 0x24f2c
0000000000024f38	cmp	w8, #0x1
0000000000024f3c	b.ne	0x24f4c
0000000000024f40	ldarb	w8, [x24]
0000000000024f44	tbz	w8, #0x0, 0x24f4c
0000000000024f48	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000024f4c	str	x22, [x19]
0000000000024f50	mov	x0, x20
0000000000024f54	blr	x23
0000000000024f58	ldr	x8, [x0]
0000000000024f5c	ldr	x9, [sp, #0x8]
0000000000024f60	str	x9, [x8, #0x110]
0000000000024f64	mov	x0, x22
0000000000024f68	ldp	x29, x30, [sp, #0x50]
0000000000024f6c	ldp	x20, x19, [sp, #0x40]
0000000000024f70	ldp	x22, x21, [sp, #0x30]
0000000000024f74	ldp	x24, x23, [sp, #0x20]
0000000000024f78	add	sp, sp, #0x60
0000000000024f7c	ret
0000000000024f80	mov	x1, x0
0000000000024f84	mov	x0, x20
0000000000024f88	blr	x23
0000000000024f8c	ldr	x8, [x0]
0000000000024f90	mov	x9, sp
0000000000024f94	str	x9, [x8, #0x110]
0000000000024f98	mov	x0, x1
0000000000024f9c	bl	0x4da78 ; symbol stub for: ___cxa_begin_catch
0000000000024fa0	bl	0x4da48 ; symbol stub for: __ZSt9terminatev
0000000000024fa4	b	0x24fa4
0000000000024fa8	stp	x29, x30, [sp, #-0x10]!
0000000000024fac	mov	x29, sp
0000000000024fb0	bl	0x4dcb8 ; Objc message: -[x0 description]
0000000000024fb4	mov	x29, x29
0000000000024fb8	ldp	x29, x30, [sp], #0x10
0000000000024fbc	b	0x4dcf4 ; symbol stub for: _objc_retainAutoreleasedReturnValue
_objc2kotlin_kfun:com.example.fannkuchReduxKmm.FannkuchReduxKmm#<init>(){}:
0000000000024fc0	sub	sp, sp, #0x70
0000000000024fc4	stp	x24, x23, [sp, #0x30]
0000000000024fc8	stp	x22, x21, [sp, #0x40]
0000000000024fcc	stp	x20, x19, [sp, #0x50]
0000000000024fd0	stp	x29, x30, [sp, #0x60]
0000000000024fd4	add	x29, sp, #0x60
0000000000024fd8	mov	x19, x0
0000000000024fdc	str	xzr, [sp, #0x20]
0000000000024fe0	movi.16b	v0, #0x0
0000000000024fe4	stp	q0, q0, [sp]
0000000000024fe8	mov	x8, sp
0000000000024fec	add	x21, x8, #0x18
0000000000024ff0	bl	_Kotlin_initRuntimeIfNeeded
0000000000024ff4	adrp	x20, 68 ; 0x68000
0000000000024ff8	add	x20, x20, #0xa00
0000000000024ffc	ldr	x22, [x20]
0000000000025000	mov	x0, x20
0000000000025004	blr	x22
0000000000025008	ldr	x8, [x0]
000000000002500c	add	x0, x8, #0x138
0000000000025010	ldaxr	w8, [x0]
0000000000025014	stlxr	w9, wzr, [x0]
0000000000025018	cbnz	w9, 0x25010
000000000002501c	adr	x23, #0x5d827
0000000000025020	nop
0000000000025024	cmp	w8, #0x1
0000000000025028	b.ne	0x25038
000000000002502c	ldarb	w8, [x23]
0000000000025030	tbz	w8, #0x0, 0x25038
0000000000025034	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000025038	mov	x0, x20
000000000002503c	blr	x22
0000000000025040	ldr	x8, [x0]
0000000000025044	ldr	x9, [x8, #0x110]
0000000000025048	mov	x10, sp
000000000002504c	str	x10, [x8, #0x110]
0000000000025050	mov	x8, #0x500000000
0000000000025054	stp	x9, x8, [sp, #0x8]
0000000000025058	ldarb	w8, [x23]
000000000002505c	tbz	w8, #0x0, 0x25064
0000000000025060	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000025064	cbz	x19, 0x250cc
0000000000025068	nop
000000000002506c	ldr	x1, #0x5da2c
0000000000025070	mov	x0, x19
0000000000025074	mov	x2, x21
0000000000025078	bl	0x4dcb8 ; Objc message: -[x0 description]
000000000002507c	ldarb	w8, [x23]
0000000000025080	tbz	w8, #0x0, 0x25088
0000000000025084	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000025088	mov	x0, x20
000000000002508c	blr	x22
0000000000025090	ldr	x8, [x0]
0000000000025094	ldr	x9, [sp, #0x8]
0000000000025098	str	x9, [x8, #0x110]
000000000002509c	add	x8, x8, #0x138
00000000000250a0	mov	w9, #0x1
00000000000250a4	ldaxr	wzr, [x8]
00000000000250a8	stlxr	w10, w9, [x8]
00000000000250ac	cbnz	w10, 0x250a4
00000000000250b0	mov	x0, x19
00000000000250b4	ldp	x29, x30, [sp, #0x60]
00000000000250b8	ldp	x20, x19, [sp, #0x50]
00000000000250bc	ldp	x22, x21, [sp, #0x40]
00000000000250c0	ldp	x24, x23, [sp, #0x30]
00000000000250c4	add	sp, sp, #0x70
00000000000250c8	ret
00000000000250cc	str	xzr, [sp, #0x18]
00000000000250d0	ldarb	w8, [x23]
00000000000250d4	tbnz	w8, #0x0, 0x25084
00000000000250d8	b	0x25088
00000000000250dc	mov	x1, x0
00000000000250e0	mov	x0, x20
00000000000250e4	blr	x22
00000000000250e8	ldr	x8, [x0]
00000000000250ec	mov	x9, sp
00000000000250f0	str	x9, [x8, #0x110]
00000000000250f4	mov	x0, x1
00000000000250f8	bl	0x4da78 ; symbol stub for: ___cxa_begin_catch
00000000000250fc	bl	0x4da48 ; symbol stub for: __ZSt9terminatev
0000000000025100	b	0x25100
_objc2kotlin_kfun:com.example.fannkuchReduxKmm.FannkuchReduxKmm#fannkuch(kotlin.Int){}kotlin.Int:
0000000000025104	sub	sp, sp, #0x70
0000000000025108	stp	x24, x23, [sp, #0x30]
000000000002510c	stp	x22, x21, [sp, #0x40]
0000000000025110	stp	x20, x19, [sp, #0x50]
0000000000025114	stp	x29, x30, [sp, #0x60]
0000000000025118	add	x29, sp, #0x60
000000000002511c	mov	x20, x2
0000000000025120	mov	x21, x0
0000000000025124	str	xzr, [sp, #0x20]
0000000000025128	movi.16b	v0, #0x0
000000000002512c	stp	q0, q0, [sp]
0000000000025130	mov	x8, sp
0000000000025134	add	x22, x8, #0x18
0000000000025138	bl	_Kotlin_initRuntimeIfNeeded
000000000002513c	adrp	x19, 67 ; 0x68000
0000000000025140	add	x19, x19, #0xa00
0000000000025144	ldr	x23, [x19]
0000000000025148	mov	x0, x19
000000000002514c	blr	x23
0000000000025150	ldr	x8, [x0]
0000000000025154	add	x0, x8, #0x138
0000000000025158	ldaxr	w8, [x0]
000000000002515c	stlxr	w9, wzr, [x0]
0000000000025160	cbnz	w9, 0x25158
0000000000025164	adr	x24, #0x5d6df
0000000000025168	nop
000000000002516c	cmp	w8, #0x1
0000000000025170	b.ne	0x25180
0000000000025174	ldarb	w8, [x24]
0000000000025178	tbz	w8, #0x0, 0x25180
000000000002517c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000025180	mov	x0, x19
0000000000025184	blr	x23
0000000000025188	ldr	x8, [x0]
000000000002518c	ldr	x9, [x8, #0x110]
0000000000025190	mov	x10, sp
0000000000025194	str	x10, [x8, #0x110]
0000000000025198	mov	x8, #0x500000000
000000000002519c	stp	x9, x8, [sp, #0x8]
00000000000251a0	ldarb	w8, [x24]
00000000000251a4	tbz	w8, #0x0, 0x251ac
00000000000251a8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000251ac	cbz	x21, 0x251c8
00000000000251b0	nop
00000000000251b4	ldr	x1, #0x5d8e4
00000000000251b8	mov	x0, x21
00000000000251bc	mov	x2, x22
00000000000251c0	bl	0x4dcb8 ; Objc message: -[x0 description]
00000000000251c4	b	0x251cc
00000000000251c8	str	xzr, [sp, #0x18]
00000000000251cc	mov	x0, x20
00000000000251d0	bl	"_kfun:com.example.fannkuchReduxKmm.FannkuchReduxKmm#fannkuch(kotlin.Int){}kotlin.Int"
00000000000251d4	mov	x1, x0
00000000000251d8	mov	x0, x19
00000000000251dc	blr	x23
00000000000251e0	ldr	x8, [x0]
00000000000251e4	ldr	x9, [sp, #0x8]
00000000000251e8	str	x9, [x8, #0x110]
00000000000251ec	add	x8, x8, #0x138
00000000000251f0	mov	w9, #0x1
00000000000251f4	ldaxr	wzr, [x8]
00000000000251f8	stlxr	w10, w9, [x8]
00000000000251fc	cbnz	w10, 0x251f4
0000000000025200	mov	x0, x1
0000000000025204	ldp	x29, x30, [sp, #0x60]
0000000000025208	ldp	x20, x19, [sp, #0x50]
000000000002520c	ldp	x22, x21, [sp, #0x40]
0000000000025210	ldp	x24, x23, [sp, #0x30]
0000000000025214	add	sp, sp, #0x70
0000000000025218	ret
000000000002521c	mov	x1, x0
0000000000025220	mov	x0, x19
0000000000025224	blr	x23
0000000000025228	ldr	x8, [x0]
000000000002522c	mov	x9, sp
0000000000025230	str	x9, [x8, #0x110]
0000000000025234	mov	x0, x1
0000000000025238	bl	0x4da78 ; symbol stub for: ___cxa_begin_catch
000000000002523c	ldr	x8, [x0, #0x8]
0000000000025240	ldr	x20, [x8]
0000000000025244	str	x20, [sp, #0x20]
0000000000025248	bl	0x4da84 ; symbol stub for: ___cxa_end_catch
000000000002524c	mov	x0, x20
0000000000025250	bl	_Kotlin_ObjCExport_trapOnUndeclaredException
0000000000025254	brk	#0x1
0000000000025258	mov	x1, x0
000000000002525c	mov	x0, x19
0000000000025260	blr	x23
0000000000025264	ldr	x8, [x0]
0000000000025268	mov	x9, sp
000000000002526c	str	x9, [x8, #0x110]
0000000000025270	mov	x0, x1
0000000000025274	bl	0x4da78 ; symbol stub for: ___cxa_begin_catch
0000000000025278	bl	0x4da48 ; symbol stub for: __ZSt9terminatev
000000000002527c	b	0x2527c
_objc2kotlin_kfun:com.example.fannkuchReduxKmm.FannkuchReduxKmm#runBenchmark(kotlin.Int){}:
0000000000025280	sub	sp, sp, #0x70
0000000000025284	stp	x24, x23, [sp, #0x30]
0000000000025288	stp	x22, x21, [sp, #0x40]
000000000002528c	stp	x20, x19, [sp, #0x50]
0000000000025290	stp	x29, x30, [sp, #0x60]
0000000000025294	add	x29, sp, #0x60
0000000000025298	mov	x20, x2
000000000002529c	mov	x21, x0
00000000000252a0	str	xzr, [sp, #0x20]
00000000000252a4	movi.16b	v0, #0x0
00000000000252a8	stp	q0, q0, [sp]
00000000000252ac	mov	x8, sp
00000000000252b0	add	x22, x8, #0x18
00000000000252b4	bl	_Kotlin_initRuntimeIfNeeded
00000000000252b8	adrp	x19, 67 ; 0x68000
00000000000252bc	add	x19, x19, #0xa00
00000000000252c0	ldr	x23, [x19]
00000000000252c4	mov	x0, x19
00000000000252c8	blr	x23
00000000000252cc	ldr	x8, [x0]
00000000000252d0	add	x0, x8, #0x138
00000000000252d4	ldaxr	w8, [x0]
00000000000252d8	stlxr	w9, wzr, [x0]
00000000000252dc	cbnz	w9, 0x252d4
00000000000252e0	adr	x24, #0x5d563
00000000000252e4	nop
00000000000252e8	cmp	w8, #0x1
00000000000252ec	b.ne	0x252fc
00000000000252f0	ldarb	w8, [x24]
00000000000252f4	tbz	w8, #0x0, 0x252fc
00000000000252f8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000252fc	mov	x0, x19
0000000000025300	blr	x23
0000000000025304	ldr	x8, [x0]
0000000000025308	ldr	x9, [x8, #0x110]
000000000002530c	mov	x10, sp
0000000000025310	str	x10, [x8, #0x110]
0000000000025314	mov	x8, #0x500000000
0000000000025318	stp	x9, x8, [sp, #0x8]
000000000002531c	ldarb	w8, [x24]
0000000000025320	tbz	w8, #0x0, 0x25328
0000000000025324	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000025328	cbz	x21, 0x25344
000000000002532c	nop
0000000000025330	ldr	x1, #0x5d768
0000000000025334	mov	x0, x21
0000000000025338	mov	x2, x22
000000000002533c	bl	0x4dcb8 ; Objc message: -[x0 description]
0000000000025340	b	0x25348
0000000000025344	str	xzr, [sp, #0x18]
0000000000025348	mov	x0, x20
000000000002534c	bl	"_kfun:com.example.fannkuchReduxKmm.FannkuchReduxKmm#runBenchmark(kotlin.Int){}"
0000000000025350	mov	x0, x19
0000000000025354	blr	x23
0000000000025358	ldr	x8, [x0]
000000000002535c	ldr	x9, [sp, #0x8]
0000000000025360	str	x9, [x8, #0x110]
0000000000025364	add	x8, x8, #0x138
0000000000025368	mov	w9, #0x1
000000000002536c	ldaxr	wzr, [x8]
0000000000025370	stlxr	w10, w9, [x8]
0000000000025374	cbnz	w10, 0x2536c
0000000000025378	ldp	x29, x30, [sp, #0x60]
000000000002537c	ldp	x20, x19, [sp, #0x50]
0000000000025380	ldp	x22, x21, [sp, #0x40]
0000000000025384	ldp	x24, x23, [sp, #0x30]
0000000000025388	add	sp, sp, #0x70
000000000002538c	ret
0000000000025390	mov	x1, x0
0000000000025394	mov	x0, x19
0000000000025398	blr	x23
000000000002539c	ldr	x8, [x0]
00000000000253a0	mov	x9, sp
00000000000253a4	str	x9, [x8, #0x110]
00000000000253a8	mov	x0, x1
00000000000253ac	bl	0x4da78 ; symbol stub for: ___cxa_begin_catch
00000000000253b0	ldr	x8, [x0, #0x8]
00000000000253b4	ldr	x20, [x8]
00000000000253b8	str	x20, [sp, #0x20]
00000000000253bc	bl	0x4da84 ; symbol stub for: ___cxa_end_catch
00000000000253c0	mov	x0, x20
00000000000253c4	bl	_Kotlin_ObjCExport_trapOnUndeclaredException
00000000000253c8	brk	#0x1
00000000000253cc	mov	x1, x0
00000000000253d0	mov	x0, x19
00000000000253d4	blr	x23
00000000000253d8	ldr	x8, [x0]
00000000000253dc	mov	x9, sp
00000000000253e0	str	x9, [x8, #0x110]
00000000000253e4	mov	x0, x1
00000000000253e8	bl	0x4da78 ; symbol stub for: ___cxa_begin_catch
00000000000253ec	bl	0x4da48 ; symbol stub for: __ZSt9terminatev
00000000000253f0	b	0x253f0
_objc2kotlin_Kotlin_Any_equals:
00000000000253f4	sub	sp, sp, #0x80
00000000000253f8	stp	x26, x25, [sp, #0x30]
00000000000253fc	stp	x24, x23, [sp, #0x40]
0000000000025400	stp	x22, x21, [sp, #0x50]
0000000000025404	stp	x20, x19, [sp, #0x60]
0000000000025408	stp	x29, x30, [sp, #0x70]
000000000002540c	add	x29, sp, #0x70
0000000000025410	mov	x20, x2
0000000000025414	mov	x22, x0
0000000000025418	movi.16b	v0, #0x0
000000000002541c	stp	q0, q0, [sp, #0x10]
0000000000025420	str	q0, [sp]
0000000000025424	mov	x8, sp
0000000000025428	add	x21, x8, #0x20
000000000002542c	add	x23, x8, #0x18
0000000000025430	bl	_Kotlin_initRuntimeIfNeeded
0000000000025434	adrp	x19, 67 ; 0x68000
0000000000025438	add	x19, x19, #0xa00
000000000002543c	ldr	x24, [x19]
0000000000025440	mov	x0, x19
0000000000025444	blr	x24
0000000000025448	ldr	x8, [x0]
000000000002544c	add	x0, x8, #0x138
0000000000025450	ldaxr	w8, [x0]
0000000000025454	stlxr	w9, wzr, [x0]
0000000000025458	cbnz	w9, 0x25450
000000000002545c	adr	x25, #0x5d3e7
0000000000025460	nop
0000000000025464	cmp	w8, #0x1
0000000000025468	b.ne	0x25478
000000000002546c	ldarb	w8, [x25]
0000000000025470	tbz	w8, #0x0, 0x25478
0000000000025474	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000025478	mov	x0, x19
000000000002547c	blr	x24
0000000000025480	ldr	x8, [x0]
0000000000025484	ldr	x9, [x8, #0x110]
0000000000025488	mov	x10, sp
000000000002548c	str	x10, [x8, #0x110]
0000000000025490	mov	x8, #0x600000000
0000000000025494	stp	x9, x8, [sp, #0x8]
0000000000025498	ldarb	w8, [x25]
000000000002549c	tbz	w8, #0x0, 0x254a4
00000000000254a0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000254a4	adrp	x25, 93 ; 0x82000
00000000000254a8	cbz	x22, 0x254d8
00000000000254ac	ldr	x1, [x25, #0xa98]
00000000000254b0	mov	x0, x22
00000000000254b4	mov	x2, x23
00000000000254b8	bl	0x4dcb8 ; Objc message: -[x0 description]
00000000000254bc	mov	x22, x0
00000000000254c0	cbz	x20, 0x254e0
00000000000254c4	ldr	x1, [x25, #0xa98]
00000000000254c8	mov	x0, x20
00000000000254cc	mov	x2, x21
00000000000254d0	bl	0x4dcb8 ; Objc message: -[x0 description]
00000000000254d4	b	0x254e8
00000000000254d8	str	xzr, [sp, #0x18]
00000000000254dc	cbnz	x20, 0x254c4
00000000000254e0	mov	x0, #0x0
00000000000254e4	str	xzr, [sp, #0x20]
00000000000254e8	cmp	x22, x0
00000000000254ec	cset	w8, eq
00000000000254f0	mov	x0, x19
00000000000254f4	blr	x24
00000000000254f8	ldr	x9, [x0]
00000000000254fc	ldr	x10, [sp, #0x8]
0000000000025500	str	x10, [x9, #0x110]
0000000000025504	add	x9, x9, #0x138
0000000000025508	mov	w10, #0x1
000000000002550c	ldaxr	wzr, [x9]
0000000000025510	stlxr	w11, w10, [x9]
0000000000025514	cbnz	w11, 0x2550c
0000000000025518	mov	x0, x8
000000000002551c	ldp	x29, x30, [sp, #0x70]
0000000000025520	ldp	x20, x19, [sp, #0x60]
0000000000025524	ldp	x22, x21, [sp, #0x50]
0000000000025528	ldp	x24, x23, [sp, #0x40]
000000000002552c	ldp	x26, x25, [sp, #0x30]
0000000000025530	add	sp, sp, #0x80
0000000000025534	ret
0000000000025538	mov	x1, x0
000000000002553c	mov	x0, x19
0000000000025540	blr	x24
0000000000025544	ldr	x8, [x0]
0000000000025548	mov	x9, sp
000000000002554c	str	x9, [x8, #0x110]
0000000000025550	mov	x0, x1
0000000000025554	bl	0x4da78 ; symbol stub for: ___cxa_begin_catch
0000000000025558	bl	0x4da48 ; symbol stub for: __ZSt9terminatev
000000000002555c	b	0x2555c
_objc2kotlin_kfun:kotlin.Any#hashCode(){}kotlin.Int:
0000000000025560	sub	sp, sp, #0x70
0000000000025564	stp	x24, x23, [sp, #0x30]
0000000000025568	stp	x22, x21, [sp, #0x40]
000000000002556c	stp	x20, x19, [sp, #0x50]
0000000000025570	stp	x29, x30, [sp, #0x60]
0000000000025574	add	x29, sp, #0x60
0000000000025578	mov	x20, x0
000000000002557c	str	xzr, [sp, #0x20]
0000000000025580	movi.16b	v0, #0x0
0000000000025584	stp	q0, q0, [sp]
0000000000025588	mov	x8, sp
000000000002558c	add	x21, x8, #0x18
0000000000025590	bl	_Kotlin_initRuntimeIfNeeded
0000000000025594	adrp	x19, 67 ; 0x68000
0000000000025598	add	x19, x19, #0xa00
000000000002559c	ldr	x22, [x19]
00000000000255a0	mov	x0, x19
00000000000255a4	blr	x22
00000000000255a8	ldr	x8, [x0]
00000000000255ac	add	x0, x8, #0x138
00000000000255b0	ldaxr	w8, [x0]
00000000000255b4	stlxr	w9, wzr, [x0]
00000000000255b8	cbnz	w9, 0x255b0
00000000000255bc	adr	x23, #0x5d287
00000000000255c0	nop
00000000000255c4	cmp	w8, #0x1
00000000000255c8	b.ne	0x255d8
00000000000255cc	ldarb	w8, [x23]
00000000000255d0	tbz	w8, #0x0, 0x255d8
00000000000255d4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000255d8	mov	x0, x19
00000000000255dc	blr	x22
00000000000255e0	ldr	x8, [x0]
00000000000255e4	ldr	x9, [x8, #0x110]
00000000000255e8	mov	x10, sp
00000000000255ec	str	x10, [x8, #0x110]
00000000000255f0	mov	x8, #0x500000000
00000000000255f4	stp	x9, x8, [sp, #0x8]
00000000000255f8	ldarb	w8, [x23]
00000000000255fc	tbz	w8, #0x0, 0x25604
0000000000025600	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000025604	cbz	x20, 0x25670
0000000000025608	nop
000000000002560c	ldr	x1, #0x5d48c
0000000000025610	mov	x0, x20
0000000000025614	mov	x2, x21
0000000000025618	bl	0x4dcb8 ; Objc message: -[x0 description]
000000000002561c	and	x20, x0, #0xffffffff
0000000000025620	ldarb	w8, [x23]
0000000000025624	tbz	w8, #0x0, 0x2562c
0000000000025628	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002562c	mov	x0, x19
0000000000025630	blr	x22
0000000000025634	ldr	x8, [x0]
0000000000025638	ldr	x9, [sp, #0x8]
000000000002563c	str	x9, [x8, #0x110]
0000000000025640	add	x8, x8, #0x138
0000000000025644	mov	w9, #0x1
0000000000025648	ldaxr	wzr, [x8]
000000000002564c	stlxr	w10, w9, [x8]
0000000000025650	cbnz	w10, 0x25648
0000000000025654	mov	x0, x20
0000000000025658	ldp	x29, x30, [sp, #0x60]
000000000002565c	ldp	x20, x19, [sp, #0x50]
0000000000025660	ldp	x22, x21, [sp, #0x40]
0000000000025664	ldp	x24, x23, [sp, #0x30]
0000000000025668	add	sp, sp, #0x70
000000000002566c	ret
0000000000025670	str	xzr, [sp, #0x18]
0000000000025674	ldarb	w8, [x23]
0000000000025678	tbnz	w8, #0x0, 0x25628
000000000002567c	b	0x2562c
0000000000025680	mov	x1, x0
0000000000025684	mov	x0, x19
0000000000025688	blr	x22
000000000002568c	ldr	x8, [x0]
0000000000025690	mov	x9, sp
0000000000025694	str	x9, [x8, #0x110]
0000000000025698	mov	x0, x1
000000000002569c	bl	0x4da78 ; symbol stub for: ___cxa_begin_catch
00000000000256a0	bl	0x4da48 ; symbol stub for: __ZSt9terminatev
00000000000256a4	b	0x256a4
_objc2kotlin_kfun:kotlin.Any#toString(){}kotlin.String:
00000000000256a8	sub	sp, sp, #0x70
00000000000256ac	stp	x24, x23, [sp, #0x30]
00000000000256b0	stp	x22, x21, [sp, #0x40]
00000000000256b4	stp	x20, x19, [sp, #0x50]
00000000000256b8	stp	x29, x30, [sp, #0x60]
00000000000256bc	add	x29, sp, #0x60
00000000000256c0	mov	x21, x0
00000000000256c4	movi.16b	v0, #0x0
00000000000256c8	stp	q0, q0, [sp, #0x10]
00000000000256cc	str	q0, [sp]
00000000000256d0	mov	x8, sp
00000000000256d4	add	x22, x8, #0x18
00000000000256d8	add	x20, x8, #0x28
00000000000256dc	bl	_Kotlin_initRuntimeIfNeeded
00000000000256e0	adrp	x19, 67 ; 0x68000
00000000000256e4	add	x19, x19, #0xa00
00000000000256e8	ldr	x23, [x19]
00000000000256ec	mov	x0, x19
00000000000256f0	blr	x23
00000000000256f4	ldr	x8, [x0]
00000000000256f8	add	x0, x8, #0x138
00000000000256fc	ldaxr	w8, [x0]
0000000000025700	stlxr	w9, wzr, [x0]
0000000000025704	cbnz	w9, 0x256fc
0000000000025708	adr	x24, #0x5d13b
000000000002570c	nop
0000000000025710	cmp	w8, #0x1
0000000000025714	b.ne	0x25724
0000000000025718	ldarb	w8, [x24]
000000000002571c	tbz	w8, #0x0, 0x25724
0000000000025720	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000025724	mov	x0, x19
0000000000025728	blr	x23
000000000002572c	ldr	x8, [x0]
0000000000025730	ldr	x9, [x8, #0x110]
0000000000025734	mov	x10, sp
0000000000025738	str	x10, [x8, #0x110]
000000000002573c	mov	x8, #0x600000000
0000000000025740	stp	x9, x8, [sp, #0x8]
0000000000025744	ldarb	w8, [x24]
0000000000025748	tbz	w8, #0x0, 0x25750
000000000002574c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000025750	cbz	x21, 0x2576c
0000000000025754	nop
0000000000025758	ldr	x1, #0x5d340
000000000002575c	mov	x0, x21
0000000000025760	mov	x2, x22
0000000000025764	bl	0x4dcb8 ; Objc message: -[x0 description]
0000000000025768	b	0x25774
000000000002576c	mov	x0, #0x0
0000000000025770	str	xzr, [sp, #0x18]
0000000000025774	mov	x1, x20
0000000000025778	bl	"_kfun:kotlin.Any#toString(){}kotlin.String"
000000000002577c	bl	_Kotlin_ObjCExport_refToRetainedObjC
0000000000025780	mov	x1, x0
0000000000025784	mov	x0, x19
0000000000025788	blr	x23
000000000002578c	ldr	x8, [x0]
0000000000025790	ldr	x9, [sp, #0x8]
0000000000025794	str	x9, [x8, #0x110]
0000000000025798	add	x8, x8, #0x138
000000000002579c	mov	w9, #0x1
00000000000257a0	ldaxr	wzr, [x8]
00000000000257a4	stlxr	w10, w9, [x8]
00000000000257a8	cbnz	w10, 0x257a0
00000000000257ac	mov	x0, x1
00000000000257b0	ldp	x29, x30, [sp, #0x60]
00000000000257b4	ldp	x20, x19, [sp, #0x50]
00000000000257b8	ldp	x22, x21, [sp, #0x40]
00000000000257bc	ldp	x24, x23, [sp, #0x30]
00000000000257c0	add	sp, sp, #0x70
00000000000257c4	b	0x4dc64 ; symbol stub for: _objc_autoreleaseReturnValue
00000000000257c8	mov	x1, x0
00000000000257cc	mov	x0, x19
00000000000257d0	blr	x23
00000000000257d4	ldr	x8, [x0]
00000000000257d8	mov	x9, sp
00000000000257dc	str	x9, [x8, #0x110]
00000000000257e0	mov	x0, x1
00000000000257e4	bl	0x4da78 ; symbol stub for: ___cxa_begin_catch
00000000000257e8	ldr	x8, [x0, #0x8]
00000000000257ec	ldr	x20, [x8]
00000000000257f0	str	x20, [sp, #0x20]
00000000000257f4	bl	0x4da84 ; symbol stub for: ___cxa_end_catch
00000000000257f8	mov	x0, x20
00000000000257fc	bl	_Kotlin_ObjCExport_trapOnUndeclaredException
0000000000025800	brk	#0x1
0000000000025804	mov	x1, x0
0000000000025808	mov	x0, x19
000000000002580c	blr	x23
0000000000025810	ldr	x8, [x0]
0000000000025814	mov	x9, sp
0000000000025818	str	x9, [x8, #0x110]
000000000002581c	mov	x0, x1
0000000000025820	bl	0x4da78 ; symbol stub for: ___cxa_begin_catch
0000000000025824	bl	0x4da48 ; symbol stub for: __ZSt9terminatev
0000000000025828	b	0x25828
_objc2kotlin_virtual_Kotlin_Any_equals:
000000000002582c	sub	sp, sp, #0x80
0000000000025830	stp	x26, x25, [sp, #0x30]
0000000000025834	stp	x24, x23, [sp, #0x40]
0000000000025838	stp	x22, x21, [sp, #0x50]
000000000002583c	stp	x20, x19, [sp, #0x60]
0000000000025840	stp	x29, x30, [sp, #0x70]
0000000000025844	add	x29, sp, #0x70
0000000000025848	mov	x20, x2
000000000002584c	mov	x22, x0
0000000000025850	movi.16b	v0, #0x0
0000000000025854	stp	q0, q0, [sp, #0x10]
0000000000025858	str	q0, [sp]
000000000002585c	mov	x8, sp
0000000000025860	add	x21, x8, #0x20
0000000000025864	add	x23, x8, #0x18
0000000000025868	bl	_Kotlin_initRuntimeIfNeeded
000000000002586c	adrp	x19, 67 ; 0x68000
0000000000025870	add	x19, x19, #0xa00
0000000000025874	ldr	x24, [x19]
0000000000025878	mov	x0, x19
000000000002587c	blr	x24
0000000000025880	ldr	x8, [x0]
0000000000025884	add	x0, x8, #0x138
0000000000025888	ldaxr	w8, [x0]
000000000002588c	stlxr	w9, wzr, [x0]
0000000000025890	cbnz	w9, 0x25888
0000000000025894	adr	x25, #0x5cfaf
0000000000025898	nop
000000000002589c	cmp	w8, #0x1
00000000000258a0	b.ne	0x258b0
00000000000258a4	ldarb	w8, [x25]
00000000000258a8	tbz	w8, #0x0, 0x258b0
00000000000258ac	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000258b0	mov	x0, x19
00000000000258b4	blr	x24
00000000000258b8	ldr	x8, [x0]
00000000000258bc	ldr	x9, [x8, #0x110]
00000000000258c0	mov	x10, sp
00000000000258c4	str	x10, [x8, #0x110]
00000000000258c8	mov	x8, #0x600000000
00000000000258cc	stp	x9, x8, [sp, #0x8]
00000000000258d0	ldarb	w8, [x25]
00000000000258d4	tbz	w8, #0x0, 0x258dc
00000000000258d8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000258dc	adrp	x25, 93 ; 0x82000
00000000000258e0	cbz	x22, 0x25914
00000000000258e4	ldr	x1, [x25, #0xa98]
00000000000258e8	mov	x0, x22
00000000000258ec	mov	x2, x23
00000000000258f0	bl	0x4dcb8 ; Objc message: -[x0 description]
00000000000258f4	mov	x22, x0
00000000000258f8	cbz	x20, 0x2591c
00000000000258fc	ldr	x1, [x25, #0xa98]
0000000000025900	mov	x0, x20
0000000000025904	mov	x2, x21
0000000000025908	bl	0x4dcb8 ; Objc message: -[x0 description]
000000000002590c	mov	x1, x0
0000000000025910	b	0x25924
0000000000025914	str	xzr, [sp, #0x18]
0000000000025918	cbnz	x20, 0x258fc
000000000002591c	mov	x1, #0x0
0000000000025920	str	xzr, [sp, #0x20]
0000000000025924	ldr	x8, [x22]
0000000000025928	and	x8, x8, #0xfffffffffffffffc
000000000002592c	ldr	x8, [x8]
0000000000025930	ldr	x8, [x8, #0x70]
0000000000025934	mov	x0, x22
0000000000025938	blr	x8
000000000002593c	mov	x1, x0
0000000000025940	mov	x0, x19
0000000000025944	blr	x24
0000000000025948	ldr	x8, [x0]
000000000002594c	ldr	x9, [sp, #0x8]
0000000000025950	str	x9, [x8, #0x110]
0000000000025954	add	x8, x8, #0x138
0000000000025958	mov	w9, #0x1
000000000002595c	ldaxr	wzr, [x8]
0000000000025960	stlxr	w10, w9, [x8]
0000000000025964	cbnz	w10, 0x2595c
0000000000025968	mov	x0, x1
000000000002596c	ldp	x29, x30, [sp, #0x70]
0000000000025970	ldp	x20, x19, [sp, #0x60]
0000000000025974	ldp	x22, x21, [sp, #0x50]
0000000000025978	ldp	x24, x23, [sp, #0x40]
000000000002597c	ldp	x26, x25, [sp, #0x30]
0000000000025980	add	sp, sp, #0x80
0000000000025984	ret
0000000000025988	mov	x1, x0
000000000002598c	mov	x0, x19
0000000000025990	blr	x24
0000000000025994	ldr	x8, [x0]
0000000000025998	mov	x9, sp
000000000002599c	str	x9, [x8, #0x110]
00000000000259a0	mov	x0, x1
00000000000259a4	bl	0x4da78 ; symbol stub for: ___cxa_begin_catch
00000000000259a8	ldr	x8, [x0, #0x8]
00000000000259ac	ldr	x20, [x8]
00000000000259b0	str	x20, [sp, #0x28]
00000000000259b4	bl	0x4da84 ; symbol stub for: ___cxa_end_catch
00000000000259b8	mov	x0, x20
00000000000259bc	bl	_Kotlin_ObjCExport_trapOnUndeclaredException
00000000000259c0	brk	#0x1
00000000000259c4	mov	x1, x0
00000000000259c8	mov	x0, x19
00000000000259cc	blr	x24
00000000000259d0	ldr	x8, [x0]
00000000000259d4	mov	x9, sp
00000000000259d8	str	x9, [x8, #0x110]
00000000000259dc	mov	x0, x1
00000000000259e0	bl	0x4da78 ; symbol stub for: ___cxa_begin_catch
00000000000259e4	bl	0x4da48 ; symbol stub for: __ZSt9terminatev
00000000000259e8	b	0x259e8
_objc2kotlin_virtual_kfun:kotlin.Any#hashCode(){}kotlin.Int:
00000000000259ec	sub	sp, sp, #0x70
00000000000259f0	stp	x24, x23, [sp, #0x30]
00000000000259f4	stp	x22, x21, [sp, #0x40]
00000000000259f8	stp	x20, x19, [sp, #0x50]
00000000000259fc	stp	x29, x30, [sp, #0x60]
0000000000025a00	add	x29, sp, #0x60
0000000000025a04	mov	x20, x0
0000000000025a08	str	xzr, [sp, #0x20]
0000000000025a0c	movi.16b	v0, #0x0
0000000000025a10	stp	q0, q0, [sp]
0000000000025a14	mov	x8, sp
0000000000025a18	add	x21, x8, #0x18
0000000000025a1c	bl	_Kotlin_initRuntimeIfNeeded
0000000000025a20	adrp	x19, 67 ; 0x68000
0000000000025a24	add	x19, x19, #0xa00
0000000000025a28	ldr	x22, [x19]
0000000000025a2c	mov	x0, x19
0000000000025a30	blr	x22
0000000000025a34	ldr	x8, [x0]
0000000000025a38	add	x0, x8, #0x138
0000000000025a3c	ldaxr	w8, [x0]
0000000000025a40	stlxr	w9, wzr, [x0]
0000000000025a44	cbnz	w9, 0x25a3c
0000000000025a48	adr	x23, #0x5cdfb
0000000000025a4c	nop
0000000000025a50	cmp	w8, #0x1
0000000000025a54	b.ne	0x25a64
0000000000025a58	ldarb	w8, [x23]
0000000000025a5c	tbz	w8, #0x0, 0x25a64
0000000000025a60	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000025a64	mov	x0, x19
0000000000025a68	blr	x22
0000000000025a6c	ldr	x8, [x0]
0000000000025a70	ldr	x9, [x8, #0x110]
0000000000025a74	mov	x10, sp
0000000000025a78	str	x10, [x8, #0x110]
0000000000025a7c	mov	x8, #0x500000000
0000000000025a80	stp	x9, x8, [sp, #0x8]
0000000000025a84	ldarb	w8, [x23]
0000000000025a88	tbz	w8, #0x0, 0x25a90
0000000000025a8c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000025a90	nop
0000000000025a94	ldr	x1, #0x5d004
0000000000025a98	mov	x0, x20
0000000000025a9c	mov	x2, x21
0000000000025aa0	bl	0x4dcb8 ; Objc message: -[x0 description]
0000000000025aa4	ldr	x8, [x0]
0000000000025aa8	and	x8, x8, #0xfffffffffffffffc
0000000000025aac	ldr	x8, [x8]
0000000000025ab0	ldr	x8, [x8, #0x78]
0000000000025ab4	blr	x8
0000000000025ab8	mov	w8, w0
0000000000025abc	mov	x0, x19
0000000000025ac0	blr	x22
0000000000025ac4	ldr	x9, [x0]
0000000000025ac8	ldr	x10, [sp, #0x8]
0000000000025acc	str	x10, [x9, #0x110]
0000000000025ad0	add	x9, x9, #0x138
0000000000025ad4	mov	w10, #0x1
0000000000025ad8	ldaxr	wzr, [x9]
0000000000025adc	stlxr	w11, w10, [x9]
0000000000025ae0	cbnz	w11, 0x25ad8
0000000000025ae4	mov	x0, x8
0000000000025ae8	ldp	x29, x30, [sp, #0x60]
0000000000025aec	ldp	x20, x19, [sp, #0x50]
0000000000025af0	ldp	x22, x21, [sp, #0x40]
0000000000025af4	ldp	x24, x23, [sp, #0x30]
0000000000025af8	add	sp, sp, #0x70
0000000000025afc	ret
0000000000025b00	mov	x1, x0
0000000000025b04	mov	x0, x19
0000000000025b08	blr	x22
0000000000025b0c	ldr	x8, [x0]
0000000000025b10	mov	x9, sp
0000000000025b14	str	x9, [x8, #0x110]
0000000000025b18	mov	x0, x1
0000000000025b1c	bl	0x4da78 ; symbol stub for: ___cxa_begin_catch
0000000000025b20	ldr	x8, [x0, #0x8]
0000000000025b24	ldr	x20, [x8]
0000000000025b28	str	x20, [sp, #0x20]
0000000000025b2c	bl	0x4da84 ; symbol stub for: ___cxa_end_catch
0000000000025b30	mov	x0, x20
0000000000025b34	bl	_Kotlin_ObjCExport_trapOnUndeclaredException
0000000000025b38	brk	#0x1
0000000000025b3c	mov	x1, x0
0000000000025b40	mov	x0, x19
0000000000025b44	blr	x22
0000000000025b48	ldr	x8, [x0]
0000000000025b4c	mov	x9, sp
0000000000025b50	str	x9, [x8, #0x110]
0000000000025b54	mov	x0, x1
0000000000025b58	bl	0x4da78 ; symbol stub for: ___cxa_begin_catch
0000000000025b5c	bl	0x4da48 ; symbol stub for: __ZSt9terminatev
0000000000025b60	b	0x25b60
_objc2kotlin_virtual_kfun:kotlin.Any#toString(){}kotlin.String:
0000000000025b64	sub	sp, sp, #0x70
0000000000025b68	stp	x24, x23, [sp, #0x30]
0000000000025b6c	stp	x22, x21, [sp, #0x40]
0000000000025b70	stp	x20, x19, [sp, #0x50]
0000000000025b74	stp	x29, x30, [sp, #0x60]
0000000000025b78	add	x29, sp, #0x60
0000000000025b7c	mov	x21, x0
0000000000025b80	movi.16b	v0, #0x0
0000000000025b84	stp	q0, q0, [sp, #0x10]
0000000000025b88	str	q0, [sp]
0000000000025b8c	mov	x8, sp
0000000000025b90	add	x22, x8, #0x18
0000000000025b94	add	x20, x8, #0x28
0000000000025b98	bl	_Kotlin_initRuntimeIfNeeded
0000000000025b9c	adrp	x19, 67 ; 0x68000
0000000000025ba0	add	x19, x19, #0xa00
0000000000025ba4	ldr	x23, [x19]
0000000000025ba8	mov	x0, x19
0000000000025bac	blr	x23
0000000000025bb0	ldr	x8, [x0]
0000000000025bb4	add	x0, x8, #0x138
0000000000025bb8	ldaxr	w8, [x0]
0000000000025bbc	stlxr	w9, wzr, [x0]
0000000000025bc0	cbnz	w9, 0x25bb8
0000000000025bc4	adr	x24, #0x5cc7f
0000000000025bc8	nop
0000000000025bcc	cmp	w8, #0x1
0000000000025bd0	b.ne	0x25be0
0000000000025bd4	ldarb	w8, [x24]
0000000000025bd8	tbz	w8, #0x0, 0x25be0
0000000000025bdc	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000025be0	mov	x0, x19
0000000000025be4	blr	x23
0000000000025be8	ldr	x8, [x0]
0000000000025bec	ldr	x9, [x8, #0x110]
0000000000025bf0	mov	x10, sp
0000000000025bf4	str	x10, [x8, #0x110]
0000000000025bf8	mov	x8, #0x600000000
0000000000025bfc	stp	x9, x8, [sp, #0x8]
0000000000025c00	ldarb	w8, [x24]
0000000000025c04	tbz	w8, #0x0, 0x25c0c
0000000000025c08	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000025c0c	nop
0000000000025c10	ldr	x1, #0x5ce88
0000000000025c14	mov	x0, x21
0000000000025c18	mov	x2, x22
0000000000025c1c	bl	0x4dcb8 ; Objc message: -[x0 description]
0000000000025c20	ldr	x8, [x0]
0000000000025c24	and	x8, x8, #0xfffffffffffffffc
0000000000025c28	ldr	x8, [x8]
0000000000025c2c	ldr	x8, [x8, #0x80]
0000000000025c30	mov	x1, x20
0000000000025c34	blr	x8
0000000000025c38	bl	_Kotlin_ObjCExport_refToRetainedObjC
0000000000025c3c	mov	x1, x0
0000000000025c40	mov	x0, x19
0000000000025c44	blr	x23
0000000000025c48	ldr	x8, [x0]
0000000000025c4c	ldr	x9, [sp, #0x8]
0000000000025c50	str	x9, [x8, #0x110]
0000000000025c54	add	x8, x8, #0x138
0000000000025c58	mov	w9, #0x1
0000000000025c5c	ldaxr	wzr, [x8]
0000000000025c60	stlxr	w10, w9, [x8]
0000000000025c64	cbnz	w10, 0x25c5c
0000000000025c68	mov	x0, x1
0000000000025c6c	ldp	x29, x30, [sp, #0x60]
0000000000025c70	ldp	x20, x19, [sp, #0x50]
0000000000025c74	ldp	x22, x21, [sp, #0x40]
0000000000025c78	ldp	x24, x23, [sp, #0x30]
0000000000025c7c	add	sp, sp, #0x70
0000000000025c80	b	0x4dc64 ; symbol stub for: _objc_autoreleaseReturnValue
0000000000025c84	mov	x1, x0
0000000000025c88	mov	x0, x19
0000000000025c8c	blr	x23
0000000000025c90	ldr	x8, [x0]
0000000000025c94	mov	x9, sp
0000000000025c98	str	x9, [x8, #0x110]
0000000000025c9c	mov	x0, x1
0000000000025ca0	bl	0x4da78 ; symbol stub for: ___cxa_begin_catch
0000000000025ca4	ldr	x8, [x0, #0x8]
0000000000025ca8	ldr	x20, [x8]
0000000000025cac	str	x20, [sp, #0x20]
0000000000025cb0	bl	0x4da84 ; symbol stub for: ___cxa_end_catch
0000000000025cb4	mov	x0, x20
0000000000025cb8	bl	_Kotlin_ObjCExport_trapOnUndeclaredException
0000000000025cbc	brk	#0x1
0000000000025cc0	mov	x1, x0
0000000000025cc4	mov	x0, x19
0000000000025cc8	blr	x23
0000000000025ccc	ldr	x8, [x0]
0000000000025cd0	mov	x9, sp
0000000000025cd4	str	x9, [x8, #0x110]
0000000000025cd8	mov	x0, x1
0000000000025cdc	bl	0x4da78 ; symbol stub for: ___cxa_begin_catch
0000000000025ce0	bl	0x4da48 ; symbol stub for: __ZSt9terminatev
0000000000025ce4	b	0x25ce4
0000000000025ce8	sub	sp, sp, #0x50
0000000000025cec	stp	x22, x21, [sp, #0x20]
0000000000025cf0	stp	x20, x19, [sp, #0x30]
0000000000025cf4	stp	x29, x30, [sp, #0x40]
0000000000025cf8	add	x29, sp, #0x40
0000000000025cfc	mov	x20, x0
0000000000025d00	str	xzr, [sp, #0x8]
0000000000025d04	adrp	x19, 67 ; 0x68000
0000000000025d08	add	x19, x19, #0xa00
0000000000025d0c	ldr	x21, [x19]
0000000000025d10	mov	x0, x19
0000000000025d14	blr	x21
0000000000025d18	ldr	x8, [x0]
0000000000025d1c	ldr	x9, [x8, #0x110]
0000000000025d20	add	x10, sp, #0x8
0000000000025d24	str	x10, [x8, #0x110]
0000000000025d28	mov	x8, #0x300000000
0000000000025d2c	stp	x9, x8, [sp, #0x10]
0000000000025d30	adr	x8, #0x5cb13
0000000000025d34	nop
0000000000025d38	ldarb	w8, [x8]
0000000000025d3c	tbz	w8, #0x0, 0x25d44
0000000000025d40	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000025d44	ldrb	w20, [x20, #0x8]
0000000000025d48	nop
0000000000025d4c	ldr	x0, #0x40954 ; Objc class ref: FRKBoolean
0000000000025d50	bl	0x4dc40 ; symbol stub for: _objc_alloc
0000000000025d54	nop
0000000000025d58	ldr	x1, #0x40778 ; Objc selector ref: initWithBool:
0000000000025d5c	mov	x2, x20
0000000000025d60	bl	0x4dcb8 ; Objc message: +[FRKBoolean initWithBool:]
0000000000025d64	mov	x1, x0
0000000000025d68	mov	x0, x19
0000000000025d6c	blr	x21
0000000000025d70	ldr	x8, [x0]
0000000000025d74	ldr	x9, [sp, #0x10]
0000000000025d78	str	x9, [x8, #0x110]
0000000000025d7c	mov	x0, x1
0000000000025d80	ldp	x29, x30, [sp, #0x40]
0000000000025d84	ldp	x20, x19, [sp, #0x30]
0000000000025d88	ldp	x22, x21, [sp, #0x20]
0000000000025d8c	add	sp, sp, #0x50
0000000000025d90	ret
0000000000025d94	mov	x1, x0
0000000000025d98	mov	x0, x19
0000000000025d9c	blr	x21
0000000000025da0	ldr	x8, [x0]
0000000000025da4	add	x9, sp, #0x8
0000000000025da8	str	x9, [x8, #0x110]
0000000000025dac	mov	x0, x1
0000000000025db0	bl	0x4da78 ; symbol stub for: ___cxa_begin_catch
0000000000025db4	bl	0x4da48 ; symbol stub for: __ZSt9terminatev
0000000000025db8	b	0x25db8
0000000000025dbc	sub	sp, sp, #0x50
0000000000025dc0	stp	x22, x21, [sp, #0x20]
0000000000025dc4	stp	x20, x19, [sp, #0x30]
0000000000025dc8	stp	x29, x30, [sp, #0x40]
0000000000025dcc	add	x29, sp, #0x40
0000000000025dd0	mov	x20, x0
0000000000025dd4	str	xzr, [sp, #0x8]
0000000000025dd8	adrp	x19, 67 ; 0x68000
0000000000025ddc	add	x19, x19, #0xa00
0000000000025de0	ldr	x21, [x19]
0000000000025de4	mov	x0, x19
0000000000025de8	blr	x21
0000000000025dec	ldr	x8, [x0]
0000000000025df0	ldr	x9, [x8, #0x110]
0000000000025df4	add	x10, sp, #0x8
0000000000025df8	str	x10, [x8, #0x110]
0000000000025dfc	mov	x8, #0x300000000
0000000000025e00	stp	x9, x8, [sp, #0x10]
0000000000025e04	adr	x8, #0x5ca3f
0000000000025e08	nop
0000000000025e0c	ldarb	w8, [x8]
0000000000025e10	tbz	w8, #0x0, 0x25e18
0000000000025e14	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000025e18	ldrb	w20, [x20, #0x8]
0000000000025e1c	nop
0000000000025e20	ldr	x0, #0x40888 ; Objc class ref: FRKByte
0000000000025e24	bl	0x4dc40 ; symbol stub for: _objc_alloc
0000000000025e28	nop
0000000000025e2c	ldr	x1, #0x406cc ; Objc selector ref: initWithChar:
0000000000025e30	sxtb	w2, w20
0000000000025e34	bl	0x4dcb8 ; Objc message: +[FRKByte initWithChar:]
0000000000025e38	mov	x1, x0
0000000000025e3c	mov	x0, x19
0000000000025e40	blr	x21
0000000000025e44	ldr	x8, [x0]
0000000000025e48	ldr	x9, [sp, #0x10]
0000000000025e4c	str	x9, [x8, #0x110]
0000000000025e50	mov	x0, x1
0000000000025e54	ldp	x29, x30, [sp, #0x40]
0000000000025e58	ldp	x20, x19, [sp, #0x30]
0000000000025e5c	ldp	x22, x21, [sp, #0x20]
0000000000025e60	add	sp, sp, #0x50
0000000000025e64	ret
0000000000025e68	mov	x1, x0
0000000000025e6c	mov	x0, x19
0000000000025e70	blr	x21
0000000000025e74	ldr	x8, [x0]
0000000000025e78	add	x9, sp, #0x8
0000000000025e7c	str	x9, [x8, #0x110]
0000000000025e80	mov	x0, x1
0000000000025e84	bl	0x4da78 ; symbol stub for: ___cxa_begin_catch
0000000000025e88	bl	0x4da48 ; symbol stub for: __ZSt9terminatev
0000000000025e8c	b	0x25e8c
0000000000025e90	sub	sp, sp, #0x50
0000000000025e94	stp	x22, x21, [sp, #0x20]
0000000000025e98	stp	x20, x19, [sp, #0x30]
0000000000025e9c	stp	x29, x30, [sp, #0x40]
0000000000025ea0	add	x29, sp, #0x40
0000000000025ea4	mov	x20, x0
0000000000025ea8	str	xzr, [sp, #0x8]
0000000000025eac	adrp	x19, 67 ; 0x68000
0000000000025eb0	add	x19, x19, #0xa00
0000000000025eb4	ldr	x21, [x19]
0000000000025eb8	mov	x0, x19
0000000000025ebc	blr	x21
0000000000025ec0	ldr	x8, [x0]
0000000000025ec4	ldr	x9, [x8, #0x110]
0000000000025ec8	add	x10, sp, #0x8
0000000000025ecc	str	x10, [x8, #0x110]
0000000000025ed0	mov	x8, #0x300000000
0000000000025ed4	stp	x9, x8, [sp, #0x10]
0000000000025ed8	adr	x8, #0x5c96b
0000000000025edc	nop
0000000000025ee0	ldarb	w8, [x8]
0000000000025ee4	tbz	w8, #0x0, 0x25eec
0000000000025ee8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000025eec	ldrh	w20, [x20, #0x8]
0000000000025ef0	nop
0000000000025ef4	ldr	x0, #0x407bc ; Objc class ref: FRKShort
0000000000025ef8	bl	0x4dc40 ; symbol stub for: _objc_alloc
0000000000025efc	nop
0000000000025f00	ldr	x1, #0x40638 ; Objc selector ref: initWithShort:
0000000000025f04	sxth	w2, w20
0000000000025f08	bl	0x4dcb8 ; Objc message: +[FRKShort initWithShort:]
0000000000025f0c	mov	x1, x0
0000000000025f10	mov	x0, x19
0000000000025f14	blr	x21
0000000000025f18	ldr	x8, [x0]
0000000000025f1c	ldr	x9, [sp, #0x10]
0000000000025f20	str	x9, [x8, #0x110]
0000000000025f24	mov	x0, x1
0000000000025f28	ldp	x29, x30, [sp, #0x40]
0000000000025f2c	ldp	x20, x19, [sp, #0x30]
0000000000025f30	ldp	x22, x21, [sp, #0x20]
0000000000025f34	add	sp, sp, #0x50
0000000000025f38	ret
0000000000025f3c	mov	x1, x0
0000000000025f40	mov	x0, x19
0000000000025f44	blr	x21
0000000000025f48	ldr	x8, [x0]
0000000000025f4c	add	x9, sp, #0x8
0000000000025f50	str	x9, [x8, #0x110]
0000000000025f54	mov	x0, x1
0000000000025f58	bl	0x4da78 ; symbol stub for: ___cxa_begin_catch
0000000000025f5c	bl	0x4da48 ; symbol stub for: __ZSt9terminatev
0000000000025f60	b	0x25f60
0000000000025f64	sub	sp, sp, #0x50
0000000000025f68	stp	x22, x21, [sp, #0x20]
0000000000025f6c	stp	x20, x19, [sp, #0x30]
0000000000025f70	stp	x29, x30, [sp, #0x40]
0000000000025f74	add	x29, sp, #0x40
0000000000025f78	mov	x20, x0
0000000000025f7c	str	xzr, [sp, #0x8]
0000000000025f80	adrp	x19, 67 ; 0x68000
0000000000025f84	add	x19, x19, #0xa00
0000000000025f88	ldr	x21, [x19]
0000000000025f8c	mov	x0, x19
0000000000025f90	blr	x21
0000000000025f94	ldr	x8, [x0]
0000000000025f98	ldr	x9, [x8, #0x110]
0000000000025f9c	add	x10, sp, #0x8
0000000000025fa0	str	x10, [x8, #0x110]
0000000000025fa4	mov	x8, #0x300000000
0000000000025fa8	stp	x9, x8, [sp, #0x10]
0000000000025fac	adr	x8, #0x5c897
0000000000025fb0	nop
0000000000025fb4	ldarb	w8, [x8]
0000000000025fb8	tbz	w8, #0x0, 0x25fc0
0000000000025fbc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000025fc0	ldr	w20, [x20, #0x8]
0000000000025fc4	nop
0000000000025fc8	ldr	x0, #0x406f0 ; Objc class ref: FRKInt
0000000000025fcc	bl	0x4dc40 ; symbol stub for: _objc_alloc
0000000000025fd0	nop
0000000000025fd4	ldr	x1, #0x4053c ; Objc selector ref: initWithInt:
0000000000025fd8	mov	x2, x20
0000000000025fdc	bl	0x4dcb8 ; Objc message: +[FRKInt initWithInt:]
0000000000025fe0	mov	x1, x0
0000000000025fe4	mov	x0, x19
0000000000025fe8	blr	x21
0000000000025fec	ldr	x8, [x0]
0000000000025ff0	ldr	x9, [sp, #0x10]
0000000000025ff4	str	x9, [x8, #0x110]
0000000000025ff8	mov	x0, x1
0000000000025ffc	ldp	x29, x30, [sp, #0x40]
0000000000026000	ldp	x20, x19, [sp, #0x30]
0000000000026004	ldp	x22, x21, [sp, #0x20]
0000000000026008	add	sp, sp, #0x50
000000000002600c	ret
0000000000026010	mov	x1, x0
0000000000026014	mov	x0, x19
0000000000026018	blr	x21
000000000002601c	ldr	x8, [x0]
0000000000026020	add	x9, sp, #0x8
0000000000026024	str	x9, [x8, #0x110]
0000000000026028	mov	x0, x1
000000000002602c	bl	0x4da78 ; symbol stub for: ___cxa_begin_catch
0000000000026030	bl	0x4da48 ; symbol stub for: __ZSt9terminatev
0000000000026034	b	0x26034
0000000000026038	sub	sp, sp, #0x50
000000000002603c	stp	x22, x21, [sp, #0x20]
0000000000026040	stp	x20, x19, [sp, #0x30]
0000000000026044	stp	x29, x30, [sp, #0x40]
0000000000026048	add	x29, sp, #0x40
000000000002604c	mov	x20, x0
0000000000026050	str	xzr, [sp, #0x8]
0000000000026054	adrp	x19, 66 ; 0x68000
0000000000026058	add	x19, x19, #0xa00
000000000002605c	ldr	x21, [x19]
0000000000026060	mov	x0, x19
0000000000026064	blr	x21
0000000000026068	ldr	x8, [x0]
000000000002606c	ldr	x9, [x8, #0x110]
0000000000026070	add	x10, sp, #0x8
0000000000026074	str	x10, [x8, #0x110]
0000000000026078	mov	x8, #0x300000000
000000000002607c	stp	x9, x8, [sp, #0x10]
0000000000026080	adr	x8, #0x5c7c3
0000000000026084	nop
0000000000026088	ldarb	w8, [x8]
000000000002608c	tbz	w8, #0x0, 0x26094
0000000000026090	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000026094	ldr	x20, [x20, #0x8]
0000000000026098	nop
000000000002609c	ldr	x0, #0x40624 ; Objc class ref: FRKLong
00000000000260a0	bl	0x4dc40 ; symbol stub for: _objc_alloc
00000000000260a4	nop
00000000000260a8	ldr	x1, #0x40480 ; Objc selector ref: initWithLongLong:
00000000000260ac	mov	x2, x20
00000000000260b0	bl	0x4dcb8 ; Objc message: +[FRKLong initWithLongLong:]
00000000000260b4	mov	x1, x0
00000000000260b8	mov	x0, x19
00000000000260bc	blr	x21
00000000000260c0	ldr	x8, [x0]
00000000000260c4	ldr	x9, [sp, #0x10]
00000000000260c8	str	x9, [x8, #0x110]
00000000000260cc	mov	x0, x1
00000000000260d0	ldp	x29, x30, [sp, #0x40]
00000000000260d4	ldp	x20, x19, [sp, #0x30]
00000000000260d8	ldp	x22, x21, [sp, #0x20]
00000000000260dc	add	sp, sp, #0x50
00000000000260e0	ret
00000000000260e4	mov	x1, x0
00000000000260e8	mov	x0, x19
00000000000260ec	blr	x21
00000000000260f0	ldr	x8, [x0]
00000000000260f4	add	x9, sp, #0x8
00000000000260f8	str	x9, [x8, #0x110]
00000000000260fc	mov	x0, x1
0000000000026100	bl	0x4da78 ; symbol stub for: ___cxa_begin_catch
0000000000026104	bl	0x4da48 ; symbol stub for: __ZSt9terminatev
0000000000026108	b	0x26108
000000000002610c	sub	sp, sp, #0x50
0000000000026110	stp	x22, x21, [sp, #0x20]
0000000000026114	stp	x20, x19, [sp, #0x30]
0000000000026118	stp	x29, x30, [sp, #0x40]
000000000002611c	add	x29, sp, #0x40
0000000000026120	mov	x20, x0
0000000000026124	str	xzr, [sp, #0x8]
0000000000026128	adrp	x19, 66 ; 0x68000
000000000002612c	add	x19, x19, #0xa00
0000000000026130	ldr	x21, [x19]
0000000000026134	mov	x0, x19
0000000000026138	blr	x21
000000000002613c	ldr	x8, [x0]
0000000000026140	ldr	x9, [x8, #0x110]
0000000000026144	add	x10, sp, #0x8
0000000000026148	str	x10, [x8, #0x110]
000000000002614c	mov	x8, #0x300000000
0000000000026150	stp	x9, x8, [sp, #0x10]
0000000000026154	adr	x8, #0x5c6ef
0000000000026158	nop
000000000002615c	ldarb	w8, [x8]
0000000000026160	tbz	w8, #0x0, 0x26168
0000000000026164	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000026168	ldrb	w20, [x20, #0x8]
000000000002616c	nop
0000000000026170	ldr	x0, #0x40558 ; Objc class ref: FRKUByte
0000000000026174	bl	0x4dc40 ; symbol stub for: _objc_alloc
0000000000026178	nop
000000000002617c	ldr	x1, #0x403c4 ; Objc selector ref: initWithUnsignedChar:
0000000000026180	mov	x2, x20
0000000000026184	bl	0x4dcb8 ; Objc message: +[FRKUByte initWithUnsignedChar:]
0000000000026188	mov	x1, x0
000000000002618c	mov	x0, x19
0000000000026190	blr	x21
0000000000026194	ldr	x8, [x0]
0000000000026198	ldr	x9, [sp, #0x10]
000000000002619c	str	x9, [x8, #0x110]
00000000000261a0	mov	x0, x1
00000000000261a4	ldp	x29, x30, [sp, #0x40]
00000000000261a8	ldp	x20, x19, [sp, #0x30]
00000000000261ac	ldp	x22, x21, [sp, #0x20]
00000000000261b0	add	sp, sp, #0x50
00000000000261b4	ret
00000000000261b8	mov	x1, x0
00000000000261bc	mov	x0, x19
00000000000261c0	blr	x21
00000000000261c4	ldr	x8, [x0]
00000000000261c8	add	x9, sp, #0x8
00000000000261cc	str	x9, [x8, #0x110]
00000000000261d0	mov	x0, x1
00000000000261d4	bl	0x4da78 ; symbol stub for: ___cxa_begin_catch
00000000000261d8	bl	0x4da48 ; symbol stub for: __ZSt9terminatev
00000000000261dc	b	0x261dc
00000000000261e0	sub	sp, sp, #0x50
00000000000261e4	stp	x22, x21, [sp, #0x20]
00000000000261e8	stp	x20, x19, [sp, #0x30]
00000000000261ec	stp	x29, x30, [sp, #0x40]
00000000000261f0	add	x29, sp, #0x40
00000000000261f4	mov	x20, x0
00000000000261f8	str	xzr, [sp, #0x8]
00000000000261fc	adrp	x19, 66 ; 0x68000
0000000000026200	add	x19, x19, #0xa00
0000000000026204	ldr	x21, [x19]
0000000000026208	mov	x0, x19
000000000002620c	blr	x21
0000000000026210	ldr	x8, [x0]
0000000000026214	ldr	x9, [x8, #0x110]
0000000000026218	add	x10, sp, #0x8
000000000002621c	str	x10, [x8, #0x110]
0000000000026220	mov	x8, #0x300000000
0000000000026224	stp	x9, x8, [sp, #0x10]
0000000000026228	adr	x8, #0x5c61b
000000000002622c	nop
0000000000026230	ldarb	w8, [x8]
0000000000026234	tbz	w8, #0x0, 0x2623c
0000000000026238	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002623c	ldrh	w20, [x20, #0x8]
0000000000026240	nop
0000000000026244	ldr	x0, #0x4048c ; Objc class ref: FRKUShort
0000000000026248	bl	0x4dc40 ; symbol stub for: _objc_alloc
000000000002624c	nop
0000000000026250	ldr	x1, #0x40308 ; Objc selector ref: initWithUnsignedShort:
0000000000026254	mov	x2, x20
0000000000026258	bl	0x4dcb8 ; Objc message: +[FRKUShort initWithUnsignedShort:]
000000000002625c	mov	x1, x0
0000000000026260	mov	x0, x19
0000000000026264	blr	x21
0000000000026268	ldr	x8, [x0]
000000000002626c	ldr	x9, [sp, #0x10]
0000000000026270	str	x9, [x8, #0x110]
0000000000026274	mov	x0, x1
0000000000026278	ldp	x29, x30, [sp, #0x40]
000000000002627c	ldp	x20, x19, [sp, #0x30]
0000000000026280	ldp	x22, x21, [sp, #0x20]
0000000000026284	add	sp, sp, #0x50
0000000000026288	ret
000000000002628c	mov	x1, x0
0000000000026290	mov	x0, x19
0000000000026294	blr	x21
0000000000026298	ldr	x8, [x0]
000000000002629c	add	x9, sp, #0x8
00000000000262a0	str	x9, [x8, #0x110]
00000000000262a4	mov	x0, x1
00000000000262a8	bl	0x4da78 ; symbol stub for: ___cxa_begin_catch
00000000000262ac	bl	0x4da48 ; symbol stub for: __ZSt9terminatev
00000000000262b0	b	0x262b0
00000000000262b4	sub	sp, sp, #0x50
00000000000262b8	stp	x22, x21, [sp, #0x20]
00000000000262bc	stp	x20, x19, [sp, #0x30]
00000000000262c0	stp	x29, x30, [sp, #0x40]
00000000000262c4	add	x29, sp, #0x40
00000000000262c8	mov	x20, x0
00000000000262cc	str	xzr, [sp, #0x8]
00000000000262d0	adrp	x19, 66 ; 0x68000
00000000000262d4	add	x19, x19, #0xa00
00000000000262d8	ldr	x21, [x19]
00000000000262dc	mov	x0, x19
00000000000262e0	blr	x21
00000000000262e4	ldr	x8, [x0]
00000000000262e8	ldr	x9, [x8, #0x110]
00000000000262ec	add	x10, sp, #0x8
00000000000262f0	str	x10, [x8, #0x110]
00000000000262f4	mov	x8, #0x300000000
00000000000262f8	stp	x9, x8, [sp, #0x10]
00000000000262fc	adr	x8, #0x5c547
0000000000026300	nop
0000000000026304	ldarb	w8, [x8]
0000000000026308	tbz	w8, #0x0, 0x26310
000000000002630c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000026310	ldr	w20, [x20, #0x8]
0000000000026314	nop
0000000000026318	ldr	x0, #0x403c0 ; Objc class ref: FRKUInt
000000000002631c	bl	0x4dc40 ; symbol stub for: _objc_alloc
0000000000026320	nop
0000000000026324	ldr	x1, #0x40224 ; Objc selector ref: initWithUnsignedInt:
0000000000026328	mov	x2, x20
000000000002632c	bl	0x4dcb8 ; Objc message: +[FRKUInt initWithUnsignedInt:]
0000000000026330	mov	x1, x0
0000000000026334	mov	x0, x19
0000000000026338	blr	x21
000000000002633c	ldr	x8, [x0]
0000000000026340	ldr	x9, [sp, #0x10]
0000000000026344	str	x9, [x8, #0x110]
0000000000026348	mov	x0, x1
000000000002634c	ldp	x29, x30, [sp, #0x40]
0000000000026350	ldp	x20, x19, [sp, #0x30]
0000000000026354	ldp	x22, x21, [sp, #0x20]
0000000000026358	add	sp, sp, #0x50
000000000002635c	ret
0000000000026360	mov	x1, x0
0000000000026364	mov	x0, x19
0000000000026368	blr	x21
000000000002636c	ldr	x8, [x0]
0000000000026370	add	x9, sp, #0x8
0000000000026374	str	x9, [x8, #0x110]
0000000000026378	mov	x0, x1
000000000002637c	bl	0x4da78 ; symbol stub for: ___cxa_begin_catch
0000000000026380	bl	0x4da48 ; symbol stub for: __ZSt9terminatev
0000000000026384	b	0x26384
0000000000026388	sub	sp, sp, #0x50
000000000002638c	stp	x22, x21, [sp, #0x20]
0000000000026390	stp	x20, x19, [sp, #0x30]
0000000000026394	stp	x29, x30, [sp, #0x40]
0000000000026398	add	x29, sp, #0x40
000000000002639c	mov	x20, x0
00000000000263a0	str	xzr, [sp, #0x8]
00000000000263a4	adrp	x19, 66 ; 0x68000
00000000000263a8	add	x19, x19, #0xa00
00000000000263ac	ldr	x21, [x19]
00000000000263b0	mov	x0, x19
00000000000263b4	blr	x21
00000000000263b8	ldr	x8, [x0]
00000000000263bc	ldr	x9, [x8, #0x110]
00000000000263c0	add	x10, sp, #0x8
00000000000263c4	str	x10, [x8, #0x110]
00000000000263c8	mov	x8, #0x300000000
00000000000263cc	stp	x9, x8, [sp, #0x10]
00000000000263d0	adr	x8, #0x5c473
00000000000263d4	nop
00000000000263d8	ldarb	w8, [x8]
00000000000263dc	tbz	w8, #0x0, 0x263e4
00000000000263e0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000263e4	ldr	x20, [x20, #0x8]
00000000000263e8	nop
00000000000263ec	ldr	x0, #0x402f4 ; Objc class ref: FRKULong
00000000000263f0	bl	0x4dc40 ; symbol stub for: _objc_alloc
00000000000263f4	nop
00000000000263f8	ldr	x1, #0x40158 ; Objc selector ref: initWithUnsignedLongLong:
00000000000263fc	mov	x2, x20
0000000000026400	bl	0x4dcb8 ; Objc message: +[FRKULong initWithUnsignedLongLong:]
0000000000026404	mov	x1, x0
0000000000026408	mov	x0, x19
000000000002640c	blr	x21
0000000000026410	ldr	x8, [x0]
0000000000026414	ldr	x9, [sp, #0x10]
0000000000026418	str	x9, [x8, #0x110]
000000000002641c	mov	x0, x1
0000000000026420	ldp	x29, x30, [sp, #0x40]
0000000000026424	ldp	x20, x19, [sp, #0x30]
0000000000026428	ldp	x22, x21, [sp, #0x20]
000000000002642c	add	sp, sp, #0x50
0000000000026430	ret
0000000000026434	mov	x1, x0
0000000000026438	mov	x0, x19
000000000002643c	blr	x21
0000000000026440	ldr	x8, [x0]
0000000000026444	add	x9, sp, #0x8
0000000000026448	str	x9, [x8, #0x110]
000000000002644c	mov	x0, x1
0000000000026450	bl	0x4da78 ; symbol stub for: ___cxa_begin_catch
0000000000026454	bl	0x4da48 ; symbol stub for: __ZSt9terminatev
0000000000026458	b	0x26458
000000000002645c	sub	sp, sp, #0x60
0000000000026460	stp	d9, d8, [sp, #0x20]
0000000000026464	stp	x22, x21, [sp, #0x30]
0000000000026468	stp	x20, x19, [sp, #0x40]
000000000002646c	stp	x29, x30, [sp, #0x50]
0000000000026470	add	x29, sp, #0x50
0000000000026474	mov	x20, x0
0000000000026478	str	xzr, [sp, #0x8]
000000000002647c	adrp	x19, 66 ; 0x68000
0000000000026480	add	x19, x19, #0xa00
0000000000026484	ldr	x21, [x19]
0000000000026488	mov	x0, x19
000000000002648c	blr	x21
0000000000026490	ldr	x8, [x0]
0000000000026494	ldr	x9, [x8, #0x110]
0000000000026498	add	x10, sp, #0x8
000000000002649c	str	x10, [x8, #0x110]
00000000000264a0	mov	x8, #0x300000000
00000000000264a4	stp	x9, x8, [sp, #0x10]
00000000000264a8	adr	x8, #0x5c39b
00000000000264ac	nop
00000000000264b0	ldarb	w8, [x8]
00000000000264b4	tbz	w8, #0x0, 0x264bc
00000000000264b8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000264bc	ldr	s8, [x20, #0x8]
00000000000264c0	nop
00000000000264c4	ldr	x0, #0x40224 ; Objc class ref: FRKFloat
00000000000264c8	bl	0x4dc40 ; symbol stub for: _objc_alloc
00000000000264cc	nop
00000000000264d0	ldr	x1, #0x40038 ; Objc selector ref: initWithFloat:
00000000000264d4	fmov	s0, s8
00000000000264d8	bl	0x4dcb8 ; Objc message: +[FRKFloat initWithFloat:]
00000000000264dc	mov	x1, x0
00000000000264e0	mov	x0, x19
00000000000264e4	blr	x21
00000000000264e8	ldr	x8, [x0]
00000000000264ec	ldr	x9, [sp, #0x10]
00000000000264f0	str	x9, [x8, #0x110]
00000000000264f4	mov	x0, x1
00000000000264f8	ldp	x29, x30, [sp, #0x50]
00000000000264fc	ldp	x20, x19, [sp, #0x40]
0000000000026500	ldp	x22, x21, [sp, #0x30]
0000000000026504	ldp	d9, d8, [sp, #0x20]
0000000000026508	add	sp, sp, #0x60
000000000002650c	ret
0000000000026510	mov	x1, x0
0000000000026514	mov	x0, x19
0000000000026518	blr	x21
000000000002651c	ldr	x8, [x0]
0000000000026520	add	x9, sp, #0x8
0000000000026524	str	x9, [x8, #0x110]
0000000000026528	mov	x0, x1
000000000002652c	bl	0x4da78 ; symbol stub for: ___cxa_begin_catch
0000000000026530	bl	0x4da48 ; symbol stub for: __ZSt9terminatev
0000000000026534	b	0x26534
0000000000026538	sub	sp, sp, #0x60
000000000002653c	stp	d9, d8, [sp, #0x20]
0000000000026540	stp	x22, x21, [sp, #0x30]
0000000000026544	stp	x20, x19, [sp, #0x40]
0000000000026548	stp	x29, x30, [sp, #0x50]
000000000002654c	add	x29, sp, #0x50
0000000000026550	mov	x20, x0
0000000000026554	str	xzr, [sp, #0x8]
0000000000026558	adrp	x19, 66 ; 0x68000
000000000002655c	add	x19, x19, #0xa00
0000000000026560	ldr	x21, [x19]
0000000000026564	mov	x0, x19
0000000000026568	blr	x21
000000000002656c	ldr	x8, [x0]
0000000000026570	ldr	x9, [x8, #0x110]
0000000000026574	add	x10, sp, #0x8
0000000000026578	str	x10, [x8, #0x110]
000000000002657c	mov	x8, #0x300000000
0000000000026580	stp	x9, x8, [sp, #0x10]
0000000000026584	adr	x8, #0x5c2bf
0000000000026588	nop
000000000002658c	ldarb	w8, [x8]
0000000000026590	tbz	w8, #0x0, 0x26598
0000000000026594	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000026598	ldr	d8, [x20, #0x8]
000000000002659c	nop
00000000000265a0	ldr	x0, #0x40150 ; Objc class ref: FRKDouble
00000000000265a4	bl	0x4dc40 ; symbol stub for: _objc_alloc
00000000000265a8	nop
00000000000265ac	ldr	x1, #0x3ff54 ; Objc selector ref: initWithDouble:
00000000000265b0	fmov	d0, d8
00000000000265b4	bl	0x4dcb8 ; Objc message: +[FRKDouble initWithDouble:]
00000000000265b8	mov	x1, x0
00000000000265bc	mov	x0, x19
00000000000265c0	blr	x21
00000000000265c4	ldr	x8, [x0]
00000000000265c8	ldr	x9, [sp, #0x10]
00000000000265cc	str	x9, [x8, #0x110]
00000000000265d0	mov	x0, x1
00000000000265d4	ldp	x29, x30, [sp, #0x50]
00000000000265d8	ldp	x20, x19, [sp, #0x40]
00000000000265dc	ldp	x22, x21, [sp, #0x30]
00000000000265e0	ldp	d9, d8, [sp, #0x20]
00000000000265e4	add	sp, sp, #0x60
00000000000265e8	ret
00000000000265ec	mov	x1, x0
00000000000265f0	mov	x0, x19
00000000000265f4	blr	x21
00000000000265f8	ldr	x8, [x0]
00000000000265fc	add	x9, sp, #0x8
0000000000026600	str	x9, [x8, #0x110]
0000000000026604	mov	x0, x1
0000000000026608	bl	0x4da78 ; symbol stub for: ___cxa_begin_catch
000000000002660c	bl	0x4da48 ; symbol stub for: __ZSt9terminatev
0000000000026610	b	0x26610
___unnamed_111:
0000000000026614	brk	#0x1
0000000000026618	adrp	x8, 92 ; 0x82000
000000000002661c	ldrb	w8, [x8, #0x840]
0000000000026620	tbz	w8, #0x0, 0x26640
0000000000026624	adrp	x8, 92 ; 0x82000
0000000000026628	ldrb	w9, [x8, #0x841]
000000000002662c	tbz	w9, #0x0, 0x26a2c
0000000000026630	adrp	x8, 92 ; 0x82000
0000000000026634	ldrb	w9, [x8, #0x842]
0000000000026638	tbz	w9, #0x0, 0x26a40
000000000002663c	ret
0000000000026640	adr	x8, #0x5c200
0000000000026644	nop
0000000000026648	mov	w9, #0x1
000000000002664c	strb	w9, [x8]
0000000000026650	add	x9, x8, #0x270
0000000000026654	ldr	x10, [x8, #0x270]
0000000000026658	ldr	x11, [x8, #0x2c8]
000000000002665c	add	x11, x11, #0x8
0000000000026660	cmp	x10, #0x0
0000000000026664	csel	x11, x9, x11, eq
0000000000026668	adr	x10, #0x41e58
000000000002666c	nop
0000000000026670	str	x10, [x11]
0000000000026674	ldr	x11, [x8, #0x270]
0000000000026678	add	x12, x10, #0x8
000000000002667c	cmp	x11, #0x0
0000000000026680	csel	x11, x9, x12, eq
0000000000026684	add	x12, x10, #0x10
0000000000026688	str	x12, [x11]
000000000002668c	ldr	x11, [x8, #0x270]
0000000000026690	add	x12, x10, #0x18
0000000000026694	cmp	x11, #0x0
0000000000026698	csel	x11, x9, x12, eq
000000000002669c	add	x12, x10, #0x20
00000000000266a0	str	x12, [x11]
00000000000266a4	ldr	x11, [x8, #0x270]
00000000000266a8	add	x12, x10, #0x28
00000000000266ac	cmp	x11, #0x0
00000000000266b0	csel	x11, x9, x12, eq
00000000000266b4	add	x12, x10, #0x30
00000000000266b8	str	x12, [x11]
00000000000266bc	ldr	x11, [x8, #0x270]
00000000000266c0	add	x12, x10, #0x38
00000000000266c4	cmp	x11, #0x0
00000000000266c8	csel	x11, x9, x12, eq
00000000000266cc	add	x12, x10, #0x40
00000000000266d0	str	x12, [x11]
00000000000266d4	ldr	x11, [x8, #0x270]
00000000000266d8	add	x12, x10, #0x48
00000000000266dc	cmp	x11, #0x0
00000000000266e0	csel	x11, x9, x12, eq
00000000000266e4	add	x12, x10, #0x50
00000000000266e8	str	x12, [x11]
00000000000266ec	ldr	x11, [x8, #0x270]
00000000000266f0	add	x12, x10, #0x58
00000000000266f4	cmp	x11, #0x0
00000000000266f8	csel	x11, x9, x12, eq
00000000000266fc	add	x12, x10, #0x60
0000000000026700	str	x12, [x11]
0000000000026704	ldr	x11, [x8, #0x270]
0000000000026708	add	x12, x10, #0x68
000000000002670c	cmp	x11, #0x0
0000000000026710	csel	x11, x9, x12, eq
0000000000026714	add	x12, x10, #0x70
0000000000026718	str	x12, [x11]
000000000002671c	ldr	x11, [x8, #0x270]
0000000000026720	add	x12, x10, #0x78
0000000000026724	cmp	x11, #0x0
0000000000026728	csel	x11, x9, x12, eq
000000000002672c	add	x12, x10, #0x80
0000000000026730	str	x12, [x11]
0000000000026734	ldr	x11, [x8, #0x270]
0000000000026738	add	x12, x10, #0x88
000000000002673c	cmp	x11, #0x0
0000000000026740	csel	x11, x9, x12, eq
0000000000026744	add	x12, x10, #0x90
0000000000026748	str	x12, [x11]
000000000002674c	ldr	x11, [x8, #0x270]
0000000000026750	add	x12, x10, #0x98
0000000000026754	cmp	x11, #0x0
0000000000026758	csel	x11, x9, x12, eq
000000000002675c	add	x12, x10, #0xa0
0000000000026760	str	x12, [x11]
0000000000026764	ldr	x11, [x8, #0x270]
0000000000026768	add	x12, x10, #0xa8
000000000002676c	cmp	x11, #0x0
0000000000026770	csel	x11, x9, x12, eq
0000000000026774	add	x12, x10, #0xb0
0000000000026778	str	x12, [x11]
000000000002677c	ldr	x11, [x8, #0x270]
0000000000026780	add	x12, x10, #0xb8
0000000000026784	cmp	x11, #0x0
0000000000026788	csel	x11, x9, x12, eq
000000000002678c	add	x12, x10, #0xc0
0000000000026790	str	x12, [x11]
0000000000026794	ldr	x11, [x8, #0x270]
0000000000026798	add	x12, x10, #0xc8
000000000002679c	cmp	x11, #0x0
00000000000267a0	csel	x11, x9, x12, eq
00000000000267a4	add	x12, x10, #0xd0
00000000000267a8	str	x12, [x11]
00000000000267ac	ldr	x11, [x8, #0x270]
00000000000267b0	add	x12, x10, #0xd8
00000000000267b4	cmp	x11, #0x0
00000000000267b8	csel	x11, x9, x12, eq
00000000000267bc	add	x12, x10, #0xe0
00000000000267c0	str	x12, [x11]
00000000000267c4	ldr	x11, [x8, #0x270]
00000000000267c8	add	x12, x10, #0xe8
00000000000267cc	cmp	x11, #0x0
00000000000267d0	csel	x11, x9, x12, eq
00000000000267d4	add	x12, x10, #0xf0
00000000000267d8	str	x12, [x11]
00000000000267dc	ldr	x11, [x8, #0x270]
00000000000267e0	add	x12, x10, #0xf8
00000000000267e4	cmp	x11, #0x0
00000000000267e8	csel	x11, x9, x12, eq
00000000000267ec	add	x12, x10, #0x100
00000000000267f0	str	x12, [x11]
00000000000267f4	ldr	x11, [x8, #0x270]
00000000000267f8	add	x12, x10, #0x108
00000000000267fc	cmp	x11, #0x0
0000000000026800	csel	x11, x9, x12, eq
0000000000026804	add	x12, x10, #0x110
0000000000026808	str	x12, [x11]
000000000002680c	ldr	x11, [x8, #0x270]
0000000000026810	add	x12, x10, #0x118
0000000000026814	cmp	x11, #0x0
0000000000026818	csel	x11, x9, x12, eq
000000000002681c	add	x12, x10, #0x120
0000000000026820	str	x12, [x11]
0000000000026824	ldr	x11, [x8, #0x270]
0000000000026828	add	x12, x10, #0x128
000000000002682c	cmp	x11, #0x0
0000000000026830	csel	x11, x9, x12, eq
0000000000026834	add	x12, x10, #0x130
0000000000026838	str	x12, [x11]
000000000002683c	ldr	x11, [x8, #0x270]
0000000000026840	add	x12, x10, #0x138
0000000000026844	cmp	x11, #0x0
0000000000026848	csel	x11, x9, x12, eq
000000000002684c	add	x12, x10, #0x140
0000000000026850	str	x12, [x11]
0000000000026854	ldr	x11, [x8, #0x270]
0000000000026858	add	x12, x10, #0x148
000000000002685c	cmp	x11, #0x0
0000000000026860	csel	x11, x9, x12, eq
0000000000026864	add	x12, x10, #0x150
0000000000026868	str	x12, [x11]
000000000002686c	ldr	x11, [x8, #0x270]
0000000000026870	add	x12, x10, #0x158
0000000000026874	cmp	x11, #0x0
0000000000026878	csel	x11, x9, x12, eq
000000000002687c	add	x12, x10, #0x160
0000000000026880	str	x12, [x11]
0000000000026884	ldr	x11, [x8, #0x270]
0000000000026888	add	x12, x10, #0x168
000000000002688c	cmp	x11, #0x0
0000000000026890	csel	x11, x9, x12, eq
0000000000026894	add	x12, x10, #0x170
0000000000026898	str	x12, [x11]
000000000002689c	ldr	x11, [x8, #0x270]
00000000000268a0	add	x12, x10, #0x178
00000000000268a4	cmp	x11, #0x0
00000000000268a8	csel	x11, x9, x12, eq
00000000000268ac	add	x12, x10, #0x180
00000000000268b0	str	x12, [x11]
00000000000268b4	ldr	x11, [x8, #0x270]
00000000000268b8	add	x12, x10, #0x188
00000000000268bc	cmp	x11, #0x0
00000000000268c0	csel	x11, x9, x12, eq
00000000000268c4	add	x12, x10, #0x190
00000000000268c8	str	x12, [x11]
00000000000268cc	ldr	x11, [x8, #0x270]
00000000000268d0	add	x12, x10, #0x198
00000000000268d4	cmp	x11, #0x0
00000000000268d8	csel	x11, x9, x12, eq
00000000000268dc	add	x12, x10, #0x1a0
00000000000268e0	str	x12, [x11]
00000000000268e4	ldr	x11, [x8, #0x270]
00000000000268e8	add	x12, x10, #0x1a8
00000000000268ec	cmp	x11, #0x0
00000000000268f0	csel	x11, x9, x12, eq
00000000000268f4	add	x12, x10, #0x1b0
00000000000268f8	str	x12, [x11]
00000000000268fc	ldr	x11, [x8, #0x270]
0000000000026900	add	x12, x10, #0x1b8
0000000000026904	cmp	x11, #0x0
0000000000026908	csel	x11, x9, x12, eq
000000000002690c	add	x12, x10, #0x1c0
0000000000026910	str	x12, [x11]
0000000000026914	ldr	x11, [x8, #0x270]
0000000000026918	add	x12, x10, #0x1c8
000000000002691c	cmp	x11, #0x0
0000000000026920	csel	x11, x9, x12, eq
0000000000026924	add	x12, x10, #0x1d0
0000000000026928	str	x12, [x11]
000000000002692c	ldr	x11, [x8, #0x270]
0000000000026930	add	x12, x10, #0x1d8
0000000000026934	cmp	x11, #0x0
0000000000026938	csel	x11, x9, x12, eq
000000000002693c	add	x12, x10, #0x1e0
0000000000026940	str	x12, [x11]
0000000000026944	ldr	x11, [x8, #0x270]
0000000000026948	add	x12, x10, #0x1e8
000000000002694c	cmp	x11, #0x0
0000000000026950	csel	x11, x9, x12, eq
0000000000026954	add	x12, x10, #0x1f0
0000000000026958	str	x12, [x11]
000000000002695c	ldr	x11, [x8, #0x270]
0000000000026960	add	x12, x10, #0x1f8
0000000000026964	cmp	x11, #0x0
0000000000026968	csel	x11, x9, x12, eq
000000000002696c	add	x12, x10, #0x200
0000000000026970	str	x12, [x11]
0000000000026974	ldr	x11, [x8, #0x270]
0000000000026978	add	x12, x10, #0x208
000000000002697c	cmp	x11, #0x0
0000000000026980	csel	x11, x9, x12, eq
0000000000026984	add	x12, x10, #0x210
0000000000026988	str	x12, [x11]
000000000002698c	ldr	x11, [x8, #0x270]
0000000000026990	add	x12, x10, #0x218
0000000000026994	cmp	x11, #0x0
0000000000026998	csel	x11, x9, x12, eq
000000000002699c	add	x12, x10, #0x220
00000000000269a0	str	x12, [x11]
00000000000269a4	ldr	x11, [x8, #0x270]
00000000000269a8	add	x12, x10, #0x228
00000000000269ac	cmp	x11, #0x0
00000000000269b0	csel	x11, x9, x12, eq
00000000000269b4	add	x12, x10, #0x230
00000000000269b8	str	x12, [x11]
00000000000269bc	ldr	x11, [x8, #0x270]
00000000000269c0	add	x12, x10, #0x238
00000000000269c4	cmp	x11, #0x0
00000000000269c8	csel	x11, x9, x12, eq
00000000000269cc	add	x12, x10, #0x240
00000000000269d0	str	x12, [x11]
00000000000269d4	ldr	x11, [x8, #0x270]
00000000000269d8	add	x12, x10, #0x248
00000000000269dc	cmp	x11, #0x0
00000000000269e0	csel	x11, x9, x12, eq
00000000000269e4	add	x12, x10, #0x250
00000000000269e8	str	x12, [x11]
00000000000269ec	ldr	x11, [x8, #0x270]
00000000000269f0	add	x12, x10, #0x258
00000000000269f4	cmp	x11, #0x0
00000000000269f8	csel	x11, x9, x12, eq
00000000000269fc	add	x12, x10, #0x260
0000000000026a00	str	x12, [x11]
0000000000026a04	ldr	x11, [x8, #0x270]
0000000000026a08	add	x12, x10, #0x268
0000000000026a0c	cmp	x11, #0x0
0000000000026a10	csel	x9, x9, x12, eq
0000000000026a14	add	x10, x10, #0x270
0000000000026a18	str	x10, [x9]
0000000000026a1c	str	x10, [x8, #0x2c8]
0000000000026a20	adrp	x8, 92 ; 0x82000
0000000000026a24	ldrb	w9, [x8, #0x841]
0000000000026a28	tbnz	w9, #0x0, 0x26630
0000000000026a2c	mov	w9, #0x1
0000000000026a30	strb	w9, [x8, #0x841]
0000000000026a34	adrp	x8, 92 ; 0x82000
0000000000026a38	ldrb	w9, [x8, #0x842]
0000000000026a3c	tbnz	w9, #0x0, 0x2663c
0000000000026a40	mov	w9, #0x1
0000000000026a44	strb	w9, [x8, #0x842]
0000000000026a48	ret
___clang_call_terminate:
0000000000026a4c	stp	x29, x30, [sp, #-0x10]!
0000000000026a50	bl	0x4da78 ; symbol stub for: ___cxa_begin_catch
0000000000026a54	bl	0x4da48 ; symbol stub for: __ZSt9terminatev
__ZNSt3__125__throw_bad_function_callEv:
0000000000026a58	stp	x29, x30, [sp, #-0x10]!
0000000000026a5c	mov	x29, sp
0000000000026a60	mov	w0, #0x8
0000000000026a64	bl	0x4da6c ; symbol stub for: ___cxa_allocate_exception
0000000000026a68	adr	x8, #0x3b898
0000000000026a6c	nop
0000000000026a70	str	x8, [x0]
0000000000026a74	adr	x1, #0x3b8a4
0000000000026a78	nop
0000000000026a7c	adr	x2, #0xc
0000000000026a80	nop
0000000000026a84	bl	0x4dab4 ; symbol stub for: ___cxa_throw
__ZNSt3__117bad_function_callD1Ev:
0000000000026a88	b	0x4da18 ; symbol stub for: __ZNSt9exceptionD2Ev
__ZNSt3__117bad_function_callD0Ev:
0000000000026a8c	stp	x29, x30, [sp, #-0x10]!
0000000000026a90	mov	x29, sp
0000000000026a94	bl	0x4da18 ; symbol stub for: __ZNSt9exceptionD2Ev
0000000000026a98	ldp	x29, x30, [sp], #0x10
0000000000026a9c	b	0x4da54 ; symbol stub for: __ZdlPv
__ZNSt3__18optionalINS_12basic_stringIcNS_11char_traitsIcEEN6kotlin11std_support9allocatorIcEEEEEaSIRNS_17basic_string_viewIcS3_EEvEERS9_OT_:
0000000000026aa0	stp	x26, x25, [sp, #-0x50]!
0000000000026aa4	stp	x24, x23, [sp, #0x10]
0000000000026aa8	stp	x22, x21, [sp, #0x20]
0000000000026aac	stp	x20, x19, [sp, #0x30]
0000000000026ab0	stp	x29, x30, [sp, #0x40]
0000000000026ab4	add	x29, sp, #0x40
0000000000026ab8	mov	x20, x2
0000000000026abc	mov	x21, x1
0000000000026ac0	mov	x19, x0
0000000000026ac4	ldrb	w8, [x0, #0x18]
0000000000026ac8	cbz	w8, 0x26af0
0000000000026acc	ldrsb	w8, [x19, #0x17]
0000000000026ad0	tbnz	w8, #0x1f, 0x26b10
0000000000026ad4	subs	x8, x20, #0x16
0000000000026ad8	b.ls	0x26bac
0000000000026adc	cmn	x8, #0x28
0000000000026ae0	b.hi	0x26c50
0000000000026ae4	mov	w25, #0x16
0000000000026ae8	mov	x22, x19
0000000000026aec	b	0x26b4c
0000000000026af0	cmn	x20, #0x10
0000000000026af4	b.hs	0x26c50
0000000000026af8	cmp	x20, #0x17
0000000000026afc	b.hs	0x26bd8
0000000000026b00	strb	w20, [x19, #0x17]
0000000000026b04	mov	x22, x19
0000000000026b08	cbnz	x20, 0x26bfc
0000000000026b0c	b	0x26c0c
0000000000026b10	ldr	x8, [x19, #0x10]
0000000000026b14	and	x8, x8, #0x7fffffffffffffff
0000000000026b18	sub	x25, x8, #0x1
0000000000026b1c	cmp	x25, x20
0000000000026b20	b.hs	0x26c1c
0000000000026b24	sub	x9, x20, x25
0000000000026b28	mov	x10, #-0x11
0000000000026b2c	sub	x8, x10, x8
0000000000026b30	cmp	x8, x9
0000000000026b34	b.lo	0x26c50
0000000000026b38	ldr	x22, [x19]
0000000000026b3c	mov	x8, #-0x1a
0000000000026b40	movk	x8, #0x7fff, lsl #48
0000000000026b44	cmp	x25, x8
0000000000026b48	b.hi	0x26c48
0000000000026b4c	lsl	x8, x25, #1
0000000000026b50	cmp	x8, x20
0000000000026b54	csel	x8, x8, x20, hi
0000000000026b58	add	x9, x8, #0x10
0000000000026b5c	and	x9, x9, #0xfffffffffffffff0
0000000000026b60	cmp	x8, #0x17
0000000000026b64	mov	w8, #0x17
0000000000026b68	csel	x23, x8, x9, lo
0000000000026b6c	mov	x0, x23
0000000000026b70	mov	w1, #0x1
0000000000026b74	bl	0x4db20 ; symbol stub for: _calloc
0000000000026b78	mov	x24, x0
0000000000026b7c	mov	x1, x21
0000000000026b80	mov	x2, x20
0000000000026b84	bl	0x4dbec ; symbol stub for: _memcpy
0000000000026b88	cmp	x25, #0x16
0000000000026b8c	b.eq	0x26b98
0000000000026b90	mov	x0, x22
0000000000026b94	bl	0x4dba4 ; symbol stub for: _free
0000000000026b98	orr	x8, x23, #0x8000000000000000
0000000000026b9c	stp	x20, x8, [x19, #0x8]
0000000000026ba0	str	x24, [x19]
0000000000026ba4	strb	wzr, [x24, x20]
0000000000026ba8	b	0x26c2c
0000000000026bac	mov	x22, x19
0000000000026bb0	cbz	x20, 0x26bc4
0000000000026bb4	mov	x0, x22
0000000000026bb8	mov	x1, x21
0000000000026bbc	mov	x2, x20
0000000000026bc0	bl	0x4dbf8 ; symbol stub for: _memmove
0000000000026bc4	strb	wzr, [x22, x20]
0000000000026bc8	ldrsb	w8, [x19, #0x17]
0000000000026bcc	tbnz	w8, #0x1f, 0x26c28
0000000000026bd0	strb	w20, [x19, #0x17]
0000000000026bd4	b	0x26c2c
0000000000026bd8	add	x8, x20, #0x10
0000000000026bdc	and	x23, x8, #0xfffffffffffffff0
0000000000026be0	mov	x0, x23
0000000000026be4	mov	w1, #0x1
0000000000026be8	bl	0x4db20 ; symbol stub for: _calloc
0000000000026bec	mov	x22, x0
0000000000026bf0	orr	x8, x23, #0x8000000000000000
0000000000026bf4	stp	x20, x8, [x19, #0x8]
0000000000026bf8	str	x0, [x19]
0000000000026bfc	mov	x0, x22
0000000000026c00	mov	x1, x21
0000000000026c04	mov	x2, x20
0000000000026c08	bl	0x4dbec ; symbol stub for: _memcpy
0000000000026c0c	strb	wzr, [x22, x20]
0000000000026c10	mov	w8, #0x1
0000000000026c14	strb	w8, [x19, #0x18]
0000000000026c18	b	0x26c2c
0000000000026c1c	ldr	x22, [x19]
0000000000026c20	cbnz	x20, 0x26bb4
0000000000026c24	b	0x26bc4
0000000000026c28	str	x20, [x19, #0x8]
0000000000026c2c	mov	x0, x19
0000000000026c30	ldp	x29, x30, [sp, #0x40]
0000000000026c34	ldp	x20, x19, [sp, #0x30]
0000000000026c38	ldp	x22, x21, [sp, #0x20]
0000000000026c3c	ldp	x24, x23, [sp, #0x10]
0000000000026c40	ldp	x26, x25, [sp], #0x50
0000000000026c44	ret
0000000000026c48	mov	x23, #-0x11
0000000000026c4c	b	0x26b6c
0000000000026c50	mov	x0, x19
0000000000026c54	bl	0x4d8f8 ; symbol stub for: __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv
__ZN6kotlin13RepeatedTimerINS_12steady_clockEE3RunIZNS_2gc8internal24GCSchedulerDataWithTimerIS1_EC1ERNS4_17GCSchedulerConfigENSt3__18functionIFvvEEEEUlvE_EEvOT_:
0000000000026c58	sub	sp, sp, #0x70
0000000000026c5c	stp	x28, x27, [sp, #0x10]
0000000000026c60	stp	x26, x25, [sp, #0x20]
0000000000026c64	stp	x24, x23, [sp, #0x30]
0000000000026c68	stp	x22, x21, [sp, #0x40]
0000000000026c6c	stp	x20, x19, [sp, #0x50]
0000000000026c70	stp	x29, x30, [sp, #0x60]
0000000000026c74	add	x29, sp, #0x60
0000000000026c78	mov	x20, x1
0000000000026c7c	mov	x19, x0
0000000000026c80	str	x0, [sp]
0000000000026c84	mov	w8, #0x1
0000000000026c88	strb	w8, [sp, #0x8]
0000000000026c8c	bl	0x4d9b8 ; symbol stub for: __ZNSt3__15mutex4lockEv
0000000000026c90	ldrb	w8, [x19, #0x70]
0000000000026c94	cbz	w8, 0x26e98
0000000000026c98	mov	x22, #0x914f0000
0000000000026c9c	movk	x22, #0x4e94, lsl #32
0000000000026ca0	add	x21, x19, #0x40
0000000000026ca4	mov	x23, #0x53f7
0000000000026ca8	movk	x23, #0xa5e3, lsl #16
0000000000026cac	movk	x23, #0xc49b, lsl #32
0000000000026cb0	movk	x23, #0x20, lsl #48
0000000000026cb4	mov	w24, #0x3e8
0000000000026cb8	mov	x25, #0xac09
0000000000026cbc	movk	x25, #0x5a1c, lsl #16
0000000000026cc0	movk	x25, #0x3b64, lsl #32
0000000000026cc4	movk	x25, #0xffdf, lsl #48
0000000000026cc8	b	0x26cf8
0000000000026ccc	mov	w8, #0x1
0000000000026cd0	strb	w8, [sp, #0x8]
0000000000026cd4	bl	0x4d9dc ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
0000000000026cd8	ldr	x8, [x19, #0x78]
0000000000026cdc	adds	x8, x0, x8
0000000000026ce0	asr	x9, x8, #63
0000000000026ce4	eor	x9, x9, #0x8000000000000000
0000000000026ce8	csel	x8, x9, x8, vs
0000000000026cec	str	x8, [x19, #0x80]
0000000000026cf0	ldrb	w8, [x19, #0x70]
0000000000026cf4	cbz	w8, 0x26e8c
0000000000026cf8	strb	wzr, [x19, #0x88]
0000000000026cfc	ldr	x27, [x19, #0x80]
0000000000026d00	b	0x26d0c
0000000000026d04	ldrb	w8, [x19, #0x88]
0000000000026d08	cbnz	w8, 0x26cf0
0000000000026d0c	bl	0x4d9dc ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
0000000000026d10	cmp	x0, x27
0000000000026d14	b.ge	0x26df0
0000000000026d18	subs	x8, x27, x0
0000000000026d1c	asr	x9, x8, #63
0000000000026d20	eor	x9, x9, #0x8000000000000000
0000000000026d24	csel	x8, x9, x8, vs
0000000000026d28	cmp	x8, x22
0000000000026d2c	csel	x26, x8, x22, lt
0000000000026d30	bl	0x4d9dc ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
0000000000026d34	add	x28, x0, x26
0000000000026d38	b	0x26d60
0000000000026d3c	mov	x8, #-0x8000000000000000
0000000000026d40	add	x2, x8, x26
0000000000026d44	mov	x1, sp
0000000000026d48	mov	x0, x21
0000000000026d4c	bl	0x4d97c ; symbol stub for: __ZNSt3__118condition_variable15__do_timed_waitERNS_11unique_lockINS_5mutexEEENS_6chrono10time_pointINS5_12system_clockENS5_8durationIxNS_5ratioILl1ELl1000000000EEEEEEE
0000000000026d50	bl	0x4d9dc ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
0000000000026d54	bl	0x4d9dc ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
0000000000026d58	cmp	x0, x28
0000000000026d5c	b.ge	0x26d04
0000000000026d60	ldrb	w8, [x19, #0x88]
0000000000026d64	cbnz	w8, 0x26cf0
0000000000026d68	bl	0x4d9dc ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
0000000000026d6c	cmp	x0, x28
0000000000026d70	b.ge	0x26d04
0000000000026d74	bl	0x4d9dc ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
0000000000026d78	sub	x26, x28, x0
0000000000026d7c	cmp	x26, #0x1
0000000000026d80	b.lt	0x26d54
0000000000026d84	bl	0x4d9dc ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
0000000000026d88	bl	0x4d9e8 ; symbol stub for: __ZNSt3__16chrono12system_clock3nowEv
0000000000026d8c	cbz	x0, 0x26db8
0000000000026d90	cmp	x0, #0x1
0000000000026d94	b.lt	0x26dd0
0000000000026d98	cmp	x0, x23
0000000000026d9c	b.le	0x26dd8
0000000000026da0	mov	x8, #0x7fffffffffffffff
0000000000026da4	mov	x2, #0x7fffffffffffffff
0000000000026da8	sub	x9, x2, x26
0000000000026dac	cmp	x8, x9
0000000000026db0	b.le	0x26d40
0000000000026db4	b	0x26d44
0000000000026db8	mov	x8, #0x0
0000000000026dbc	mov	x2, #0x7fffffffffffffff
0000000000026dc0	sub	x9, x2, x26
0000000000026dc4	cmp	x8, x9
0000000000026dc8	b.le	0x26d40
0000000000026dcc	b	0x26d44
0000000000026dd0	cmp	x0, x25
0000000000026dd4	b.lt	0x26d3c
0000000000026dd8	mul	x8, x0, x24
0000000000026ddc	mov	x2, #0x7fffffffffffffff
0000000000026de0	sub	x9, x2, x26
0000000000026de4	cmp	x8, x9
0000000000026de8	b.le	0x26d40
0000000000026dec	b	0x26d44
0000000000026df0	ldrb	w8, [sp, #0x8]
0000000000026df4	cbz	w8, 0x26ee8
0000000000026df8	ldr	x0, [sp]
0000000000026dfc	bl	0x4d9c4 ; symbol stub for: __ZNSt3__15mutex6unlockEv
0000000000026e00	strb	wzr, [sp, #0x8]
0000000000026e04	ldr	x26, [x20]
0000000000026e08	ldr	x8, [x26, #0x10]
0000000000026e0c	ldar	w8, [x8]
0000000000026e10	cmp	w8, #0x1
0000000000026e14	b.eq	0x26e74
0000000000026e18	bl	0x4d9dc ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
0000000000026e1c	add	x8, x26, #0x38
0000000000026e20	ldar	x8, [x8]
0000000000026e24	ldr	x9, [x26, #0x30]
0000000000026e28	add	x9, x9, #0x18
0000000000026e2c	ldar	x9, [x9]
0000000000026e30	mul	x10, x9, x24
0000000000026e34	smulh	x11, x9, x24
0000000000026e38	cmp	x11, x10, asr #63
0000000000026e3c	asr	x9, x9, #63
0000000000026e40	eor	x9, x9, #0x7fffffffffffffff
0000000000026e44	csel	x9, x9, x10, ne
0000000000026e48	adds	x8, x8, x9
0000000000026e4c	asr	x9, x8, #63
0000000000026e50	eor	x9, x9, #0x8000000000000000
0000000000026e54	csel	x8, x9, x8, vs
0000000000026e58	cmp	x0, x8
0000000000026e5c	b.lt	0x26e74
0000000000026e60	ldr	x0, [x26, #0x58]
0000000000026e64	cbz	x0, 0x26efc
0000000000026e68	ldr	x8, [x0]
0000000000026e6c	ldr	x8, [x8, #0x30]
0000000000026e70	blr	x8
0000000000026e74	ldr	x0, [sp]
0000000000026e78	cbz	x0, 0x26ed4
0000000000026e7c	ldrb	w8, [sp, #0x8]
0000000000026e80	cbnz	w8, 0x26ec0
0000000000026e84	bl	0x4d9b8 ; symbol stub for: __ZNSt3__15mutex4lockEv
0000000000026e88	b	0x26ccc
0000000000026e8c	ldrb	w8, [sp, #0x8]
0000000000026e90	cbz	w8, 0x26ea0
0000000000026e94	ldr	x19, [sp]
0000000000026e98	mov	x0, x19
0000000000026e9c	bl	0x4d9c4 ; symbol stub for: __ZNSt3__15mutex6unlockEv
0000000000026ea0	ldp	x29, x30, [sp, #0x60]
0000000000026ea4	ldp	x20, x19, [sp, #0x50]
0000000000026ea8	ldp	x22, x21, [sp, #0x40]
0000000000026eac	ldp	x24, x23, [sp, #0x30]
0000000000026eb0	ldp	x26, x25, [sp, #0x20]
0000000000026eb4	ldp	x28, x27, [sp, #0x10]
0000000000026eb8	add	sp, sp, #0x70
0000000000026ebc	ret
0000000000026ec0	adr	x1, #0x2a1cf ; literal pool for: "unique_lock::lock: already locked"
0000000000026ec4	nop
0000000000026ec8	mov	w0, #0xb
0000000000026ecc	bl	0x4d9ac ; symbol stub for: __ZNSt3__120__throw_system_errorEiPKc
0000000000026ed0	b	0x26f00
0000000000026ed4	adr	x1, #0x2a192 ; literal pool for: "unique_lock::lock: references null mutex"
0000000000026ed8	nop
0000000000026edc	mov	w0, #0x1
0000000000026ee0	bl	0x4d9ac ; symbol stub for: __ZNSt3__120__throw_system_errorEiPKc
0000000000026ee4	b	0x26f00
0000000000026ee8	adr	x1, #0x2b230 ; literal pool for: "unique_lock::unlock: not locked"
0000000000026eec	nop
0000000000026ef0	mov	w0, #0x1
0000000000026ef4	bl	0x4d9ac ; symbol stub for: __ZNSt3__120__throw_system_errorEiPKc
0000000000026ef8	b	0x26f00
0000000000026efc	bl	__ZNSt3__125__throw_bad_function_callEv
0000000000026f00	brk	#0x1
0000000000026f04	bl	___clang_call_terminate
0000000000026f08	b	0x26f0c
0000000000026f0c	mov	x19, x0
0000000000026f10	ldrb	w8, [sp, #0x8]
0000000000026f14	cbz	w8, 0x26f20
0000000000026f18	ldr	x0, [sp]
0000000000026f1c	bl	0x4d9c4 ; symbol stub for: __ZNSt3__15mutex6unlockEv
0000000000026f20	mov	x0, x19
0000000000026f24	bl	___clang_call_terminate
__ZN6kotlin12ScopedThread3RunIMNS_13RepeatedTimerINS_12steady_clockEEEDoFvOZNS_2gc8internal24GCSchedulerDataWithTimerIS3_EC1ERNS5_17GCSchedulerConfigENSt3__18functionIFvvEEEEUlvE_EJPS4_SF_EEENSB_13invoke_resultIT_JDpT0_EE4typeENS0_10attributesEOSL_DpOSM_:
0000000000026f28	stp	x22, x21, [sp, #-0x30]!
0000000000026f2c	stp	x20, x19, [sp, #0x10]
0000000000026f30	stp	x29, x30, [sp, #0x20]
0000000000026f34	add	x29, sp, #0x20
0000000000026f38	mov	x19, x3
0000000000026f3c	mov	x21, x2
0000000000026f40	mov	x20, x1
0000000000026f44	ldrb	w8, [x0, #0x18]
0000000000026f48	cbz	w8, 0x26f5c
0000000000026f4c	ldrsb	w8, [x0, #0x17]
0000000000026f50	tbz	w8, #0x1f, 0x26f58
0000000000026f54	ldr	x0, [x0]
0000000000026f58	bl	0x4ddfc ; symbol stub for: _pthread_setname_np
0000000000026f5c	ldr	x8, [x21]
0000000000026f60	ldp	x2, x9, [x20]
0000000000026f64	add	x0, x8, x9, asr #1
0000000000026f68	tbz	w9, #0x0, 0x26f74
0000000000026f6c	ldr	x8, [x0]
0000000000026f70	ldr	x2, [x8, w2, uxtw]
0000000000026f74	mov	x1, x19
0000000000026f78	ldp	x29, x30, [sp, #0x20]
0000000000026f7c	ldp	x20, x19, [sp, #0x10]
0000000000026f80	ldp	x22, x21, [sp], #0x30
0000000000026f84	br	x2
0000000000026f88	bl	___clang_call_terminate
__ZNSt3__114__thread_proxyINS_5tupleIJNS_10unique_ptrINS_15__thread_structENS_14default_deleteIS3_EEEEPFvN6kotlin12ScopedThread10attributesEOMNS7_13RepeatedTimerINS7_12steady_clockEEEDoFvOZNS7_2gc8internal24GCSchedulerDataWithTimerISB_EC1ERNSD_17GCSchedulerConfigENS_8functionIFvvEEEEUlvE_EOPSC_SN_ES9_SP_SR_SM_EEEEEPvSW_:
0000000000026f8c	sub	sp, sp, #0x40
0000000000026f90	stp	x20, x19, [sp, #0x20]
0000000000026f94	stp	x29, x30, [sp, #0x30]
0000000000026f98	add	x29, sp, #0x30
0000000000026f9c	mov	x19, x0
0000000000026fa0	bl	0x4d9a0 ; symbol stub for: __ZNSt3__119__thread_local_dataEv
0000000000026fa4	ldr	x1, [x19]
0000000000026fa8	str	xzr, [x19]
0000000000026fac	ldr	x0, [x0]
0000000000026fb0	bl	0x4de08 ; symbol stub for: _pthread_setspecific
0000000000026fb4	add	x1, x19, #0x30
0000000000026fb8	add	x2, x19, #0x40
0000000000026fbc	add	x3, x19, #0x48
0000000000026fc0	ldr	x8, [x19, #0x8]
0000000000026fc4	strb	wzr, [sp]
0000000000026fc8	strb	wzr, [sp, #0x18]
0000000000026fcc	ldrb	w9, [x19, #0x28]
0000000000026fd0	cbz	w9, 0x26ff4
0000000000026fd4	ldr	q0, [x19, #0x10]
0000000000026fd8	str	q0, [sp]
0000000000026fdc	ldr	x9, [x19, #0x20]
0000000000026fe0	str	x9, [sp, #0x10]
0000000000026fe4	stp	xzr, xzr, [x19, #0x18]
0000000000026fe8	str	xzr, [x19, #0x10]
0000000000026fec	mov	w9, #0x1
0000000000026ff0	strb	w9, [sp, #0x18]
0000000000026ff4	mov	x0, sp
0000000000026ff8	blr	x8
0000000000026ffc	ldrb	w8, [sp, #0x18]
0000000000027000	cbz	w8, 0x27014
0000000000027004	ldrsb	w8, [sp, #0x17]
0000000000027008	tbz	w8, #0x1f, 0x27014
000000000002700c	ldr	x0, [sp]
0000000000027010	bl	0x4dba4 ; symbol stub for: _free
0000000000027014	ldrb	w8, [x19, #0x28]
0000000000027018	cbz	w8, 0x2702c
000000000002701c	ldrsb	w8, [x19, #0x27]
0000000000027020	tbz	w8, #0x1f, 0x2702c
0000000000027024	ldr	x0, [x19, #0x10]
0000000000027028	bl	0x4dba4 ; symbol stub for: _free
000000000002702c	ldr	x0, [x19]
0000000000027030	str	xzr, [x19]
0000000000027034	cbz	x0, 0x27040
0000000000027038	bl	0x4d940 ; symbol stub for: __ZNSt3__115__thread_structD1Ev
000000000002703c	bl	0x4da54 ; symbol stub for: __ZdlPv
0000000000027040	mov	x0, x19
0000000000027044	bl	0x4da54 ; symbol stub for: __ZdlPv
0000000000027048	mov	x0, #0x0
000000000002704c	ldp	x29, x30, [sp, #0x30]
0000000000027050	ldp	x20, x19, [sp, #0x20]
0000000000027054	add	sp, sp, #0x40
0000000000027058	ret
000000000002705c	mov	x20, x0
0000000000027060	ldrb	w8, [sp, #0x18]
0000000000027064	cbz	w8, 0x2708c
0000000000027068	ldrsb	w8, [sp, #0x17]
000000000002706c	tbz	w8, #0x1f, 0x2708c
0000000000027070	ldr	x0, [sp]
0000000000027074	bl	0x4dba4 ; symbol stub for: _free
0000000000027078	b	0x2708c
000000000002707c	mov	x20, x0
0000000000027080	b	0x2708c
0000000000027084	mov	x20, x0
0000000000027088	cbz	x19, 0x270c0
000000000002708c	ldrb	w8, [x19, #0x28]
0000000000027090	cbz	w8, 0x270a4
0000000000027094	ldrsb	w8, [x19, #0x27]
0000000000027098	tbz	w8, #0x1f, 0x270a4
000000000002709c	ldr	x0, [x19, #0x10]
00000000000270a0	bl	0x4dba4 ; symbol stub for: _free
00000000000270a4	ldr	x0, [x19]
00000000000270a8	str	xzr, [x19]
00000000000270ac	cbz	x0, 0x270b8
00000000000270b0	bl	0x4d940 ; symbol stub for: __ZNSt3__115__thread_structD1Ev
00000000000270b4	bl	0x4da54 ; symbol stub for: __ZdlPv
00000000000270b8	mov	x0, x19
00000000000270bc	bl	0x4da54 ; symbol stub for: __ZdlPv
00000000000270c0	mov	x0, x20
00000000000270c4	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
__ZN6kotlin2gc8internal24GCSchedulerDataWithTimerINS_12steady_clockEED1Ev:
00000000000270c8	stp	x20, x19, [sp, #-0x20]!
00000000000270cc	stp	x29, x30, [sp, #0x10]
00000000000270d0	add	x29, sp, #0x10
00000000000270d4	mov	x19, x0
00000000000270d8	adr	x8, #0x3b278
00000000000270dc	nop
00000000000270e0	str	x8, [x0], #0x60
00000000000270e4	bl	__ZN6kotlin13RepeatedTimerINS_12steady_clockEED2Ev
00000000000270e8	add	x8, x19, #0x40
00000000000270ec	ldr	x0, [x19, #0x58]
00000000000270f0	cmp	x8, x0
00000000000270f4	b.eq	0x27108
00000000000270f8	cbz	x0, 0x27114
00000000000270fc	ldr	x8, [x0]
0000000000027100	ldr	x8, [x8, #0x28]
0000000000027104	b	0x27110
0000000000027108	ldr	x8, [x0]
000000000002710c	ldr	x8, [x8, #0x20]
0000000000027110	blr	x8
0000000000027114	mov	x0, x19
0000000000027118	ldp	x29, x30, [sp, #0x10]
000000000002711c	ldp	x20, x19, [sp], #0x20
0000000000027120	ret
__ZN6kotlin2gc8internal24GCSchedulerDataWithTimerINS_12steady_clockEED0Ev:
0000000000027124	stp	x20, x19, [sp, #-0x20]!
0000000000027128	stp	x29, x30, [sp, #0x10]
000000000002712c	add	x29, sp, #0x10
0000000000027130	mov	x19, x0
0000000000027134	adr	x8, #0x3b21c
0000000000027138	nop
000000000002713c	str	x8, [x0], #0x60
0000000000027140	bl	__ZN6kotlin13RepeatedTimerINS_12steady_clockEED2Ev
0000000000027144	add	x8, x19, #0x40
0000000000027148	ldr	x0, [x19, #0x58]
000000000002714c	cmp	x8, x0
0000000000027150	b.eq	0x27164
0000000000027154	cbz	x0, 0x27170
0000000000027158	ldr	x8, [x0]
000000000002715c	ldr	x8, [x8, #0x28]
0000000000027160	b	0x2716c
0000000000027164	ldr	x8, [x0]
0000000000027168	ldr	x8, [x8, #0x20]
000000000002716c	blr	x8
0000000000027170	mov	x0, x19
0000000000027174	ldp	x29, x30, [sp, #0x10]
0000000000027178	ldp	x20, x19, [sp], #0x20
000000000002717c	b	0x4da54 ; symbol stub for: __ZdlPv
__ZN6kotlin2gc8internal24GCSchedulerDataWithTimerINS_12steady_clockEE20UpdateFromThreadDataERNS0_21GCSchedulerThreadDataE:
0000000000027180	stp	x29, x30, [sp, #-0x10]!
0000000000027184	mov	x29, sp
0000000000027188	ldr	x8, [x1, #0x28]
000000000002718c	add	x9, x0, #0x20
0000000000027190	ldaxr	x10, [x9]
0000000000027194	add	x10, x10, x8
0000000000027198	stlxr	w11, x10, [x9]
000000000002719c	cbnz	w11, 0x27190
00000000000271a0	add	x8, x0, #0x20
00000000000271a4	ldar	x8, [x8]
00000000000271a8	add	x9, x0, #0x28
00000000000271ac	ldar	x9, [x9]
00000000000271b0	add	x8, x9, x8
00000000000271b4	ldr	x9, [x0, #0x18]
00000000000271b8	add	x9, x9, #0x20
00000000000271bc	ldar	x9, [x9]
00000000000271c0	cmp	x8, x9
00000000000271c4	b.lo	0x271dc
00000000000271c8	ldr	x0, [x0, #0x58]
00000000000271cc	cbz	x0, 0x271e4
00000000000271d0	ldr	x8, [x0]
00000000000271d4	ldr	x8, [x8, #0x30]
00000000000271d8	blr	x8
00000000000271dc	ldp	x29, x30, [sp], #0x10
00000000000271e0	ret
00000000000271e4	bl	__ZNSt3__125__throw_bad_function_callEv
00000000000271e8	brk	#0x1
00000000000271ec	bl	___clang_call_terminate
__ZN6kotlin2gc8internal24GCSchedulerDataWithTimerINS_12steady_clockEE15OnPerformFullGCEv:
00000000000271f0	stp	x22, x21, [sp, #-0x30]!
00000000000271f4	stp	x20, x19, [sp, #0x10]
00000000000271f8	stp	x29, x30, [sp, #0x20]
00000000000271fc	add	x29, sp, #0x20
0000000000027200	mov	x19, x0
0000000000027204	add	x8, x0, #0x20
0000000000027208	stlr	xzr, [x8]
000000000002720c	bl	0x4d9dc ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
0000000000027210	add	x8, x19, #0x38
0000000000027214	stlr	x0, [x8]
0000000000027218	ldr	x8, [x19, #0x8]
000000000002721c	add	x8, x8, #0x18
0000000000027220	ldar	x21, [x8]
0000000000027224	add	x20, x19, #0x60
0000000000027228	mov	x0, x20
000000000002722c	bl	0x4d9b8 ; symbol stub for: __ZNSt3__15mutex4lockEv
0000000000027230	mov	w8, #0x3e8
0000000000027234	mul	x9, x21, x8
0000000000027238	smulh	x8, x21, x8
000000000002723c	cmp	x8, x9, asr #63
0000000000027240	asr	x8, x21, #63
0000000000027244	eor	x8, x8, #0x7fffffffffffffff
0000000000027248	csel	x8, x8, x9, ne
000000000002724c	str	x8, [x19, #0xd8]
0000000000027250	bl	0x4d9dc ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
0000000000027254	ldr	x8, [x19, #0xd8]
0000000000027258	adds	x8, x0, x8
000000000002725c	asr	x9, x8, #63
0000000000027260	eor	x9, x9, #0x8000000000000000
0000000000027264	csel	x8, x9, x8, vs
0000000000027268	str	x8, [x19, #0xe0]
000000000002726c	mov	w8, #0x1
0000000000027270	strb	w8, [x19, #0xe8]
0000000000027274	mov	x0, x20
0000000000027278	bl	0x4d9c4 ; symbol stub for: __ZNSt3__15mutex6unlockEv
000000000002727c	add	x0, x19, #0xa0
0000000000027280	ldp	x29, x30, [sp, #0x20]
0000000000027284	ldp	x20, x19, [sp, #0x10]
0000000000027288	ldp	x22, x21, [sp], #0x30
000000000002728c	b	0x4d970 ; symbol stub for: __ZNSt3__118condition_variable10notify_allEv
0000000000027290	bl	___clang_call_terminate
__ZN6kotlin2gc8internal24GCSchedulerDataWithTimerINS_12steady_clockEE19UpdateAliveSetBytesEm:
0000000000027294	add	x8, x0, #0x28
0000000000027298	stlr	x1, [x8]
000000000002729c	ldr	x8, [x0, #0x18]
00000000000272a0	add	x8, x8, #0x10
00000000000272a4	ldarb	w8, [x8]
00000000000272a8	tbz	w8, #0x0, 0x2731c
00000000000272ac	ucvtf	d0, x1
00000000000272b0	ldr	x8, [x0, #0x18]
00000000000272b4	add	x8, x8, #0x28
00000000000272b8	ldar	x8, [x8]
00000000000272bc	fmov	d1, x8
00000000000272c0	fdiv	d0, d0, d1
00000000000272c4	fabs	d1, d0
00000000000272c8	fcmp	d0, d0
00000000000272cc	mov	x8, #0x7ff0000000000000
00000000000272d0	fmov	d2, x8
00000000000272d4	fccmp	d1, d2, #0x4, vc
00000000000272d8	b.eq	0x2731c
00000000000272dc	ldr	x8, [x0, #0x18]
00000000000272e0	add	x8, x8, #0x30
00000000000272e4	ldar	x8, [x8]
00000000000272e8	scvtf	d1, x8
00000000000272ec	ldr	x8, [x0, #0x18]
00000000000272f0	add	x8, x8, #0x38
00000000000272f4	ldar	x8, [x8]
00000000000272f8	scvtf	d2, x8
00000000000272fc	fcmp	d0, d1
0000000000027300	fcsel	d0, d1, d0, mi
0000000000027304	fcmp	d0, d2
0000000000027308	fcsel	d0, d2, d0, gt
000000000002730c	fcvtzs	x8, d0
0000000000027310	ldr	x9, [x0, #0x18]
0000000000027314	add	x9, x9, #0x20
0000000000027318	stlr	x8, [x9]
000000000002731c	ret
__ZN6kotlin13RepeatedTimerINS_12steady_clockEED2Ev:
0000000000027320	stp	x22, x21, [sp, #-0x30]!
0000000000027324	stp	x20, x19, [sp, #0x10]
0000000000027328	stp	x29, x30, [sp, #0x20]
000000000002732c	add	x29, sp, #0x20
0000000000027330	mov	x19, x0
0000000000027334	bl	0x4d9b8 ; symbol stub for: __ZNSt3__15mutex4lockEv
0000000000027338	strb	wzr, [x19, #0x70]
000000000002733c	mov	w8, #0x1
0000000000027340	strb	w8, [x19, #0x88]
0000000000027344	mov	x0, x19
0000000000027348	bl	0x4d9c4 ; symbol stub for: __ZNSt3__15mutex6unlockEv
000000000002734c	add	x20, x19, #0x40
0000000000027350	mov	x0, x20
0000000000027354	bl	0x4d970 ; symbol stub for: __ZNSt3__118condition_variable10notify_allEv
0000000000027358	add	x21, x19, #0x90
000000000002735c	mov	x0, x21
0000000000027360	bl	0x4d9f4 ; symbol stub for: __ZNSt3__16thread4joinEv
0000000000027364	ldr	x8, [x21]
0000000000027368	cbz	x8, 0x27374
000000000002736c	mov	x0, x21
0000000000027370	bl	0x4d9f4 ; symbol stub for: __ZNSt3__16thread4joinEv
0000000000027374	mov	x0, x21
0000000000027378	bl	0x4da00 ; symbol stub for: __ZNSt3__16threadD1Ev
000000000002737c	mov	x0, x20
0000000000027380	bl	0x4d994 ; symbol stub for: __ZNSt3__118condition_variableD1Ev
0000000000027384	mov	x0, x19
0000000000027388	ldp	x29, x30, [sp, #0x20]
000000000002738c	ldp	x20, x19, [sp, #0x10]
0000000000027390	ldp	x22, x21, [sp], #0x30
0000000000027394	b	0x4d9d0 ; symbol stub for: __ZNSt3__15mutexD1Ev
0000000000027398	mov	x19, x0
000000000002739c	mov	x0, x21
00000000000273a0	bl	0x4da00 ; symbol stub for: __ZNSt3__16threadD1Ev
00000000000273a4	mov	x0, x19
00000000000273a8	bl	___clang_call_terminate
00000000000273ac	b	0x273b0
00000000000273b0	mov	x20, x0
00000000000273b4	add	x0, x19, #0x90
00000000000273b8	bl	__ZN6kotlin12ScopedThreadD1Ev
00000000000273bc	add	x0, x19, #0x40
00000000000273c0	bl	0x4d994 ; symbol stub for: __ZNSt3__118condition_variableD1Ev
00000000000273c4	mov	x0, x19
00000000000273c8	bl	0x4d9d0 ; symbol stub for: __ZNSt3__15mutexD1Ev
00000000000273cc	mov	x0, x20
00000000000273d0	bl	___clang_call_terminate
__ZN6kotlin12ScopedThreadD1Ev:
00000000000273d4	stp	x20, x19, [sp, #-0x20]!
00000000000273d8	stp	x29, x30, [sp, #0x10]
00000000000273dc	add	x29, sp, #0x10
00000000000273e0	mov	x19, x0
00000000000273e4	ldr	x8, [x0]
00000000000273e8	cbz	x8, 0x273f4
00000000000273ec	mov	x0, x19
00000000000273f0	bl	0x4d9f4 ; symbol stub for: __ZNSt3__16thread4joinEv
00000000000273f4	mov	x0, x19
00000000000273f8	ldp	x29, x30, [sp, #0x10]
00000000000273fc	ldp	x20, x19, [sp], #0x20
0000000000027400	b	0x4da00 ; symbol stub for: __ZNSt3__16threadD1Ev
0000000000027404	mov	x20, x0
0000000000027408	mov	x0, x19
000000000002740c	bl	0x4da00 ; symbol stub for: __ZNSt3__16threadD1Ev
0000000000027410	mov	x0, x20
0000000000027414	bl	___clang_call_terminate
__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv:
0000000000027418	sub	sp, sp, #0x40
000000000002741c	stp	x22, x21, [sp, #0x10]
0000000000027420	stp	x20, x19, [sp, #0x20]
0000000000027424	stp	x29, x30, [sp, #0x30]
0000000000027428	add	x29, sp, #0x30
000000000002742c	adr	x20, #0x5b417
0000000000027430	nop
0000000000027434	ldarb	w8, [x20]
0000000000027438	tbz	w8, #0x0, 0x274c0
000000000002743c	mov	x19, x0
0000000000027440	ldr	x8, [x0, #0x8]
0000000000027444	ldr	x8, [x8, #0x110]
0000000000027448	add	x0, x8, #0x48
000000000002744c	bl	__ZN6kotlin2gc22ConcurrentMarkAndSweep10ThreadData14OnSuspendForGCEv
0000000000027450	adr	x0, #0x41350
0000000000027454	nop
0000000000027458	str	x0, [sp]
000000000002745c	mov	w8, #0x1
0000000000027460	strb	w8, [sp, #0x8]
0000000000027464	bl	0x4d9b8 ; symbol stub for: __ZNSt3__15mutex4lockEv
0000000000027468	bl	__ZN5konan15currentThreadIdEv
000000000002746c	bl	0x4d9dc ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
0000000000027470	add	x21, x19, #0x10
0000000000027474	ldarb	w8, [x21]
0000000000027478	and	w22, w8, #0x1
000000000002747c	mov	w8, #0x1
0000000000027480	stlrb	w8, [x21]
0000000000027484	ldarb	w8, [x20]
0000000000027488	tbz	w8, #0x0, 0x274a8
000000000002748c	adr	x19, #0x412b4
0000000000027490	nop
0000000000027494	mov	x1, sp
0000000000027498	mov	x0, x19
000000000002749c	bl	0x4d988 ; symbol stub for: __ZNSt3__118condition_variable4waitERNS_11unique_lockINS_5mutexEEE
00000000000274a0	ldarb	w8, [x20]
00000000000274a4	tbnz	w8, #0x0, 0x27494
00000000000274a8	bl	0x4d9dc ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
00000000000274ac	stlrb	w22, [x21]
00000000000274b0	ldrb	w8, [sp, #0x8]
00000000000274b4	cbz	w8, 0x274c0
00000000000274b8	ldr	x0, [sp]
00000000000274bc	bl	0x4d9c4 ; symbol stub for: __ZNSt3__15mutex6unlockEv
00000000000274c0	ldp	x29, x30, [sp, #0x30]
00000000000274c4	ldp	x20, x19, [sp, #0x20]
00000000000274c8	ldp	x22, x21, [sp, #0x10]
00000000000274cc	add	sp, sp, #0x40
00000000000274d0	ret
00000000000274d4	mov	x19, x0
00000000000274d8	adr	x0, #0x412c8
00000000000274dc	nop
00000000000274e0	bl	0x4d9c4 ; symbol stub for: __ZNSt3__15mutex6unlockEv
00000000000274e4	mov	x0, x19
00000000000274e8	bl	___clang_call_terminate
00000000000274ec	bl	___clang_call_terminate
__ZN6kotlin2mm24RequestThreadsSuspensionEv:
00000000000274f0	stp	x20, x19, [sp, #-0x20]!
00000000000274f4	stp	x29, x30, [sp, #0x10]
00000000000274f8	add	x29, sp, #0x10
00000000000274fc	adr	x0, #0x412a4
0000000000027500	nop
0000000000027504	bl	0x4d9b8 ; symbol stub for: __ZNSt3__15mutex4lockEv
0000000000027508	adr	x8, #0x5b33b
000000000002750c	nop
0000000000027510	ldaxrb	w9, [x8]
0000000000027514	cbnz	w9, 0x27528
0000000000027518	mov	w19, #0x1
000000000002751c	stlxrb	w9, w19, [x8]
0000000000027520	cbnz	w9, 0x27510
0000000000027524	b	0x27530
0000000000027528	mov	w19, #0x0
000000000002752c	clrex
0000000000027530	adr	x0, #0x41270
0000000000027534	nop
0000000000027538	bl	0x4d9c4 ; symbol stub for: __ZNSt3__15mutex6unlockEv
000000000002753c	mov	x0, x19
0000000000027540	ldp	x29, x30, [sp, #0x10]
0000000000027544	ldp	x20, x19, [sp], #0x20
0000000000027548	ret
000000000002754c	bl	___clang_call_terminate
__ZNSt3__116allocator_traitsIN6kotlin11std_support9allocatorINS1_14SingleLockListINS1_2mm10ThreadDataENS_15recursive_mutexENS3_IS6_EEE4NodeEEEE9__destroyISA_EEvNS_17integral_constantIbLb0EEERSB_PT_:
0000000000027550	stp	x22, x21, [sp, #-0x30]!
0000000000027554	stp	x20, x19, [sp, #0x10]
0000000000027558	stp	x29, x30, [sp, #0x20]
000000000002755c	add	x29, sp, #0x20
0000000000027560	mov	x19, x0
0000000000027564	ldr	x20, [x0, #0x150]
0000000000027568	str	xzr, [x0, #0x150]
000000000002756c	cbz	x20, 0x27580
0000000000027570	mov	x0, x20
0000000000027574	bl	__ZNSt3__116allocator_traitsIN6kotlin11std_support9allocatorINS1_14SingleLockListINS1_2mm10ThreadDataENS_15recursive_mutexENS3_IS6_EEE4NodeEEEE9__destroyISA_EEvNS_17integral_constantIbLb0EEERSB_PT_
0000000000027578	mov	x0, x20
000000000002757c	bl	0x4dba4 ; symbol stub for: _free
0000000000027580	ldr	x0, [x19, #0x120]
0000000000027584	cbz	x0, 0x27590
0000000000027588	str	x0, [x19, #0x128]
000000000002758c	bl	0x4dba4 ; symbol stub for: _free
0000000000027590	add	x0, x19, #0x118
0000000000027594	bl	__ZN6kotlin2gc2GC10ThreadDataD1Ev
0000000000027598	add	x0, x19, #0xd8
000000000002759c	bl	__ZN6kotlin16MultiSourceQueueINS_2mm15ExtraObjectDataENS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_19ObjectPoolAllocatorIS2_EEE8Producer7PublishEv
00000000000275a0	ldr	x8, [x19, #0x108]
00000000000275a4	cbz	x8, 0x275e4
00000000000275a8	add	x20, x19, #0xf8
00000000000275ac	ldp	x8, x0, [x19, #0xf8]
00000000000275b0	ldr	x9, [x8, #0x8]
00000000000275b4	ldr	x10, [x0]
00000000000275b8	str	x9, [x10, #0x8]
00000000000275bc	ldr	x8, [x8, #0x8]
00000000000275c0	str	x10, [x8]
00000000000275c4	str	xzr, [x19, #0x108]
00000000000275c8	cmp	x0, x20
00000000000275cc	b.eq	0x275e4
00000000000275d0	ldr	x21, [x0, #0x8]
00000000000275d4	bl	_mi_free
00000000000275d8	mov	x0, x21
00000000000275dc	cmp	x21, x20
00000000000275e0	b.ne	0x275d0
00000000000275e4	ldr	x8, [x19, #0xf0]
00000000000275e8	cbz	x8, 0x27628
00000000000275ec	add	x20, x19, #0xe0
00000000000275f0	ldp	x8, x0, [x19, #0xe0]
00000000000275f4	ldr	x9, [x8, #0x8]
00000000000275f8	ldr	x10, [x0]
00000000000275fc	str	x9, [x10, #0x8]
0000000000027600	ldr	x8, [x8, #0x8]
0000000000027604	str	x10, [x8]
0000000000027608	str	xzr, [x19, #0xf0]
000000000002760c	cmp	x0, x20
0000000000027610	b.eq	0x27628
0000000000027614	ldr	x21, [x0, #0x8]
0000000000027618	bl	_mi_free
000000000002761c	mov	x0, x21
0000000000027620	cmp	x21, x20
0000000000027624	b.ne	0x27614
0000000000027628	add	x0, x19, #0xa0
000000000002762c	bl	__ZN6kotlin16MultiSourceQueueIP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS2_EEE8Producer7PublishEv
0000000000027630	ldr	x8, [x19, #0xd0]
0000000000027634	cbz	x8, 0x27674
0000000000027638	add	x20, x19, #0xc0
000000000002763c	ldp	x8, x0, [x19, #0xc0]
0000000000027640	ldr	x9, [x8, #0x8]
0000000000027644	ldr	x10, [x0]
0000000000027648	str	x9, [x10, #0x8]
000000000002764c	ldr	x8, [x8, #0x8]
0000000000027650	str	x10, [x8]
0000000000027654	str	xzr, [x19, #0xd0]
0000000000027658	cmp	x0, x20
000000000002765c	b.eq	0x27674
0000000000027660	ldr	x21, [x0, #0x8]
0000000000027664	bl	0x4dba4 ; symbol stub for: _free
0000000000027668	mov	x0, x21
000000000002766c	cmp	x21, x20
0000000000027670	b.ne	0x27660
0000000000027674	ldr	x8, [x19, #0xb8]
0000000000027678	cbz	x8, 0x276b8
000000000002767c	add	x20, x19, #0xa8
0000000000027680	ldp	x8, x0, [x19, #0xa8]
0000000000027684	ldr	x9, [x8, #0x8]
0000000000027688	ldr	x10, [x0]
000000000002768c	str	x9, [x10, #0x8]
0000000000027690	ldr	x8, [x8, #0x8]
0000000000027694	str	x10, [x8]
0000000000027698	str	xzr, [x19, #0xb8]
000000000002769c	cmp	x0, x20
00000000000276a0	b.eq	0x276b8
00000000000276a4	ldr	x21, [x0, #0x8]
00000000000276a8	bl	0x4dba4 ; symbol stub for: _free
00000000000276ac	mov	x0, x21
00000000000276b0	cmp	x21, x20
00000000000276b4	b.ne	0x276a4
00000000000276b8	ldr	x0, [x19, #0x70]
00000000000276bc	cbz	x0, 0x276d0
00000000000276c0	ldr	x20, [x0]
00000000000276c4	bl	0x4dba4 ; symbol stub for: _free
00000000000276c8	mov	x0, x20
00000000000276cc	cbnz	x20, 0x276c0
00000000000276d0	ldr	x0, [x19, #0x60]
00000000000276d4	str	xzr, [x19, #0x60]
00000000000276d8	cbz	x0, 0x276e0
00000000000276dc	bl	0x4dba4 ; symbol stub for: _free
00000000000276e0	ldr	x0, [x19, #0x48]
00000000000276e4	cbz	x0, 0x276f0
00000000000276e8	str	x0, [x19, #0x50]
00000000000276ec	bl	0x4dba4 ; symbol stub for: _free
00000000000276f0	add	x0, x19, #0x10
00000000000276f4	bl	__ZN6kotlin16MultiSourceQueueIPP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS3_EEE8Producer7PublishEv
00000000000276f8	ldr	x8, [x19, #0x40]
00000000000276fc	cbz	x8, 0x2773c
0000000000027700	add	x20, x19, #0x30
0000000000027704	ldp	x8, x0, [x19, #0x30]
0000000000027708	ldr	x9, [x8, #0x8]
000000000002770c	ldr	x10, [x0]
0000000000027710	str	x9, [x10, #0x8]
0000000000027714	ldr	x8, [x8, #0x8]
0000000000027718	str	x10, [x8]
000000000002771c	str	xzr, [x19, #0x40]
0000000000027720	cmp	x0, x20
0000000000027724	b.eq	0x2773c
0000000000027728	ldr	x21, [x0, #0x8]
000000000002772c	bl	0x4dba4 ; symbol stub for: _free
0000000000027730	mov	x0, x21
0000000000027734	cmp	x21, x20
0000000000027738	b.ne	0x27728
000000000002773c	ldr	x8, [x19, #0x28]
0000000000027740	cbz	x8, 0x27780
0000000000027744	add	x20, x19, #0x18
0000000000027748	ldp	x8, x0, [x19, #0x18]
000000000002774c	ldr	x9, [x8, #0x8]
0000000000027750	ldr	x10, [x0]
0000000000027754	str	x9, [x10, #0x8]
0000000000027758	ldr	x8, [x8, #0x8]
000000000002775c	str	x10, [x8]
0000000000027760	str	xzr, [x19, #0x28]
0000000000027764	cmp	x0, x20
0000000000027768	b.eq	0x27780
000000000002776c	ldr	x19, [x0, #0x8]
0000000000027770	bl	0x4dba4 ; symbol stub for: _free
0000000000027774	mov	x0, x19
0000000000027778	cmp	x19, x20
000000000002777c	b.ne	0x2776c
0000000000027780	ldp	x29, x30, [sp, #0x20]
0000000000027784	ldp	x20, x19, [sp, #0x10]
0000000000027788	ldp	x22, x21, [sp], #0x30
000000000002778c	ret
__ZN6kotlin16MultiSourceQueueIPP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS3_EEE8Producer7PublishEv:
0000000000027790	stp	x22, x21, [sp, #-0x30]!
0000000000027794	stp	x20, x19, [sp, #0x10]
0000000000027798	stp	x29, x30, [sp, #0x20]
000000000002779c	add	x29, sp, #0x20
00000000000277a0	mov	x19, x0
00000000000277a4	add	x8, x0, #0x8
00000000000277a8	ldr	x9, [x0, #0x10]
00000000000277ac	cmp	x8, x9
00000000000277b0	b.eq	0x277c8
00000000000277b4	add	x10, x9, #0x18
00000000000277b8	stlr	xzr, [x10]
00000000000277bc	ldr	x9, [x9, #0x8]
00000000000277c0	cmp	x8, x9
00000000000277c4	b.ne	0x277b4
00000000000277c8	ldr	x8, [x19]
00000000000277cc	add	x20, x8, #0x30
00000000000277d0	mov	w21, #0x1
00000000000277d4	ldaxrb	w8, [x20]
00000000000277d8	stxrb	w9, w21, [x20]
00000000000277dc	cbnz	w9, 0x277d4
00000000000277e0	tbz	w8, #0x0, 0x277ec
00000000000277e4	bl	0x4de20 ; symbol stub for: _sched_yield
00000000000277e8	b	0x277d4
00000000000277ec	ldr	x8, [x19]
00000000000277f0	ldr	x9, [x19, #0x18]
00000000000277f4	cbz	x9, 0x27834
00000000000277f8	ldp	x11, x10, [x19, #0x8]
00000000000277fc	ldr	x12, [x11, #0x8]
0000000000027800	ldr	x13, [x10]
0000000000027804	str	x12, [x13, #0x8]
0000000000027808	ldr	x12, [x11, #0x8]
000000000002780c	str	x13, [x12]
0000000000027810	ldr	x12, [x8]
0000000000027814	str	x10, [x12, #0x8]
0000000000027818	str	x12, [x10]
000000000002781c	str	x11, [x8]
0000000000027820	str	x8, [x11, #0x8]
0000000000027824	ldr	x10, [x8, #0x10]
0000000000027828	add	x9, x10, x9
000000000002782c	str	x9, [x8, #0x10]
0000000000027830	str	xzr, [x19, #0x18]
0000000000027834	ldr	x9, [x19, #0x30]
0000000000027838	cbz	x9, 0x2787c
000000000002783c	add	x10, x8, #0x18
0000000000027840	ldp	x12, x11, [x19, #0x20]
0000000000027844	ldr	x13, [x12, #0x8]
0000000000027848	ldr	x14, [x11]
000000000002784c	str	x13, [x14, #0x8]
0000000000027850	ldr	x13, [x12, #0x8]
0000000000027854	str	x14, [x13]
0000000000027858	ldr	x13, [x8, #0x18]
000000000002785c	str	x11, [x13, #0x8]
0000000000027860	str	x13, [x11]
0000000000027864	str	x12, [x8, #0x18]
0000000000027868	str	x10, [x12, #0x8]
000000000002786c	ldr	x10, [x8, #0x28]
0000000000027870	add	x9, x10, x9
0000000000027874	str	x9, [x8, #0x28]
0000000000027878	str	xzr, [x19, #0x30]
000000000002787c	stlrb	wzr, [x20]
0000000000027880	ldp	x29, x30, [sp, #0x20]
0000000000027884	ldp	x20, x19, [sp, #0x10]
0000000000027888	ldp	x22, x21, [sp], #0x30
000000000002788c	ret
0000000000027890	bl	___clang_call_terminate
__ZN6kotlin16MultiSourceQueueIP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS2_EEE8Producer7PublishEv:
0000000000027894	stp	x22, x21, [sp, #-0x30]!
0000000000027898	stp	x20, x19, [sp, #0x10]
000000000002789c	stp	x29, x30, [sp, #0x20]
00000000000278a0	add	x29, sp, #0x20
00000000000278a4	mov	x19, x0
00000000000278a8	add	x8, x0, #0x8
00000000000278ac	ldr	x9, [x0, #0x10]
00000000000278b0	cmp	x8, x9
00000000000278b4	b.eq	0x278cc
00000000000278b8	add	x10, x9, #0x18
00000000000278bc	stlr	xzr, [x10]
00000000000278c0	ldr	x9, [x9, #0x8]
00000000000278c4	cmp	x8, x9
00000000000278c8	b.ne	0x278b8
00000000000278cc	ldr	x8, [x19]
00000000000278d0	add	x20, x8, #0x30
00000000000278d4	mov	w21, #0x1
00000000000278d8	ldaxrb	w8, [x20]
00000000000278dc	stxrb	w9, w21, [x20]
00000000000278e0	cbnz	w9, 0x278d8
00000000000278e4	tbz	w8, #0x0, 0x278f0
00000000000278e8	bl	0x4de20 ; symbol stub for: _sched_yield
00000000000278ec	b	0x278d8
00000000000278f0	ldr	x8, [x19]
00000000000278f4	ldr	x9, [x19, #0x18]
00000000000278f8	cbz	x9, 0x27938
00000000000278fc	ldp	x11, x10, [x19, #0x8]
0000000000027900	ldr	x12, [x11, #0x8]
0000000000027904	ldr	x13, [x10]
0000000000027908	str	x12, [x13, #0x8]
000000000002790c	ldr	x12, [x11, #0x8]
0000000000027910	str	x13, [x12]
0000000000027914	ldr	x12, [x8]
0000000000027918	str	x10, [x12, #0x8]
000000000002791c	str	x12, [x10]
0000000000027920	str	x11, [x8]
0000000000027924	str	x8, [x11, #0x8]
0000000000027928	ldr	x10, [x8, #0x10]
000000000002792c	add	x9, x10, x9
0000000000027930	str	x9, [x8, #0x10]
0000000000027934	str	xzr, [x19, #0x18]
0000000000027938	ldr	x9, [x19, #0x30]
000000000002793c	cbz	x9, 0x27980
0000000000027940	add	x10, x8, #0x18
0000000000027944	ldp	x12, x11, [x19, #0x20]
0000000000027948	ldr	x13, [x12, #0x8]
000000000002794c	ldr	x14, [x11]
0000000000027950	str	x13, [x14, #0x8]
0000000000027954	ldr	x13, [x12, #0x8]
0000000000027958	str	x14, [x13]
000000000002795c	ldr	x13, [x8, #0x18]
0000000000027960	str	x11, [x13, #0x8]
0000000000027964	str	x13, [x11]
0000000000027968	str	x12, [x8, #0x18]
000000000002796c	str	x10, [x12, #0x8]
0000000000027970	ldr	x10, [x8, #0x28]
0000000000027974	add	x9, x10, x9
0000000000027978	str	x9, [x8, #0x28]
000000000002797c	str	xzr, [x19, #0x30]
0000000000027980	stlrb	wzr, [x20]
0000000000027984	ldp	x29, x30, [sp, #0x20]
0000000000027988	ldp	x20, x19, [sp, #0x10]
000000000002798c	ldp	x22, x21, [sp], #0x30
0000000000027990	ret
0000000000027994	bl	___clang_call_terminate
__ZN6kotlin16MultiSourceQueueINS_2mm15ExtraObjectDataENS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_19ObjectPoolAllocatorIS2_EEE8Producer7PublishEv:
0000000000027998	stp	x22, x21, [sp, #-0x30]!
000000000002799c	stp	x20, x19, [sp, #0x10]
00000000000279a0	stp	x29, x30, [sp, #0x20]
00000000000279a4	add	x29, sp, #0x20
00000000000279a8	mov	x19, x0
00000000000279ac	add	x8, x0, #0x8
00000000000279b0	ldr	x9, [x0, #0x10]
00000000000279b4	cmp	x8, x9
00000000000279b8	b.eq	0x279d0
00000000000279bc	add	x10, x9, #0x38
00000000000279c0	stlr	xzr, [x10]
00000000000279c4	ldr	x9, [x9, #0x8]
00000000000279c8	cmp	x8, x9
00000000000279cc	b.ne	0x279bc
00000000000279d0	ldr	x8, [x19]
00000000000279d4	add	x20, x8, #0x30
00000000000279d8	mov	w21, #0x1
00000000000279dc	ldaxrb	w8, [x20]
00000000000279e0	stxrb	w9, w21, [x20]
00000000000279e4	cbnz	w9, 0x279dc
00000000000279e8	tbz	w8, #0x0, 0x279f4
00000000000279ec	bl	0x4de20 ; symbol stub for: _sched_yield
00000000000279f0	b	0x279dc
00000000000279f4	ldr	x8, [x19]
00000000000279f8	ldr	x9, [x19, #0x18]
00000000000279fc	cbz	x9, 0x27a3c
0000000000027a00	ldp	x11, x10, [x19, #0x8]
0000000000027a04	ldr	x12, [x11, #0x8]
0000000000027a08	ldr	x13, [x10]
0000000000027a0c	str	x12, [x13, #0x8]
0000000000027a10	ldr	x12, [x11, #0x8]
0000000000027a14	str	x13, [x12]
0000000000027a18	ldr	x12, [x8]
0000000000027a1c	str	x10, [x12, #0x8]
0000000000027a20	str	x12, [x10]
0000000000027a24	str	x11, [x8]
0000000000027a28	str	x8, [x11, #0x8]
0000000000027a2c	ldr	x10, [x8, #0x10]
0000000000027a30	add	x9, x10, x9
0000000000027a34	str	x9, [x8, #0x10]
0000000000027a38	str	xzr, [x19, #0x18]
0000000000027a3c	ldr	x9, [x19, #0x30]
0000000000027a40	cbz	x9, 0x27a84
0000000000027a44	add	x10, x8, #0x18
0000000000027a48	ldp	x12, x11, [x19, #0x20]
0000000000027a4c	ldr	x13, [x12, #0x8]
0000000000027a50	ldr	x14, [x11]
0000000000027a54	str	x13, [x14, #0x8]
0000000000027a58	ldr	x13, [x12, #0x8]
0000000000027a5c	str	x14, [x13]
0000000000027a60	ldr	x13, [x8, #0x18]
0000000000027a64	str	x11, [x13, #0x8]
0000000000027a68	str	x13, [x11]
0000000000027a6c	str	x12, [x8, #0x18]
0000000000027a70	str	x10, [x12, #0x8]
0000000000027a74	ldr	x10, [x8, #0x28]
0000000000027a78	add	x9, x10, x9
0000000000027a7c	str	x9, [x8, #0x28]
0000000000027a80	str	xzr, [x19, #0x30]
0000000000027a84	stlrb	wzr, [x20]
0000000000027a88	ldp	x29, x30, [sp, #0x20]
0000000000027a8c	ldp	x20, x19, [sp, #0x10]
0000000000027a90	ldp	x22, x21, [sp], #0x30
0000000000027a94	ret
0000000000027a98	bl	___clang_call_terminate
__ZNSt3__110unique_ptrIN6kotlin14SingleLockListINS1_2mm10ThreadDataENS_15recursive_mutexENS1_11std_support9allocatorIS4_EEE4NodeENS6_17allocator_deleterISA_NS7_ISA_EEEEED1Ev:
0000000000027a9c	stp	x20, x19, [sp, #-0x20]!
0000000000027aa0	stp	x29, x30, [sp, #0x10]
0000000000027aa4	add	x29, sp, #0x10
0000000000027aa8	adrp	x8, 91 ; 0x82000
0000000000027aac	ldr	x19, [x8, #0xb30]
0000000000027ab0	str	xzr, [x8, #0xb30]
0000000000027ab4	cbz	x19, 0x27ad0
0000000000027ab8	mov	x0, x19
0000000000027abc	bl	__ZNSt3__116allocator_traitsIN6kotlin11std_support9allocatorINS1_14SingleLockListINS1_2mm10ThreadDataENS_15recursive_mutexENS3_IS6_EEE4NodeEEEE9__destroyISA_EEvNS_17integral_constantIbLb0EEERSB_PT_
0000000000027ac0	mov	x0, x19
0000000000027ac4	ldp	x29, x30, [sp, #0x10]
0000000000027ac8	ldp	x20, x19, [sp], #0x20
0000000000027acc	b	0x4dba4 ; symbol stub for: _free
0000000000027ad0	ldp	x29, x30, [sp, #0x10]
0000000000027ad4	ldp	x20, x19, [sp], #0x20
0000000000027ad8	ret
__ZNSt3__16__sortIRNS_6__lessINS_17basic_string_viewIcNS_11char_traitsIcEEEES5_EEPS5_EEvT0_S9_T_:
0000000000027adc	sub	sp, sp, #0x70
0000000000027ae0	stp	x28, x27, [sp, #0x10]
0000000000027ae4	stp	x26, x25, [sp, #0x20]
0000000000027ae8	stp	x24, x23, [sp, #0x30]
0000000000027aec	stp	x22, x21, [sp, #0x40]
0000000000027af0	stp	x20, x19, [sp, #0x50]
0000000000027af4	stp	x29, x30, [sp, #0x60]
0000000000027af8	add	x29, sp, #0x60
0000000000027afc	mov	x20, x1
0000000000027b00	mov	x19, x0
0000000000027b04	sub	x21, x20, #0x10
0000000000027b08	sub	x26, x20, #0x20
0000000000027b0c	mov	x22, x19
0000000000027b10	mov	x19, x22
0000000000027b14	sub	x9, x20, x22
0000000000027b18	asr	x8, x9, #4
0000000000027b1c	cmp	x8, #0x5
0000000000027b20	b.ls	0x27f0c
0000000000027b24	cmp	x9, #0x1ef
0000000000027b28	b.le	0x27fe0
0000000000027b2c	cmp	x8, #0x0
0000000000027b30	cinc	x10, x8, lt
0000000000027b34	asr	x27, x10, #1
0000000000027b38	add	x22, x19, x27, lsl #4
0000000000027b3c	mov	w10, #0x3e71
0000000000027b40	cmp	x9, x10
0000000000027b44	b.lt	0x27b78
0000000000027b48	add	x9, x8, #0x3
0000000000027b4c	cmp	x8, #0x0
0000000000027b50	csel	x8, x9, x8, lt
0000000000027b54	lsl	x8, x8, #2
0000000000027b58	and	x8, x8, #0xfffffffffffffff0
0000000000027b5c	add	x1, x19, x8
0000000000027b60	add	x3, x22, x8
0000000000027b64	mov	x0, x19
0000000000027b68	mov	x2, x22
0000000000027b6c	mov	x4, x21
0000000000027b70	bl	__ZNSt3__17__sort5IRNS_6__lessINS_17basic_string_viewIcNS_11char_traitsIcEEEES5_EEPS5_EEjT0_S9_S9_S9_S9_T_
0000000000027b74	b	0x27b88
0000000000027b78	mov	x0, x19
0000000000027b7c	mov	x1, x22
0000000000027b80	mov	x2, x21
0000000000027b84	bl	__ZNSt3__17__sort3IRNS_6__lessINS_17basic_string_viewIcNS_11char_traitsIcEEEES5_EEPS5_EEjT0_S9_S9_T_
0000000000027b88	mov	x23, x0
0000000000027b8c	ldr	x24, [x19, #0x8]
0000000000027b90	add	x8, x19, x27, lsl #4
0000000000027b94	ldr	x28, [x8, #0x8]
0000000000027b98	cmp	x28, x24
0000000000027b9c	csel	x2, x28, x24, lo
0000000000027ba0	cbz	x2, 0x27c0c
0000000000027ba4	ldr	x1, [x22]
0000000000027ba8	ldr	x0, [x19]
0000000000027bac	bl	0x4dbe0 ; symbol stub for: _memcmp
0000000000027bb0	cbz	w0, 0x27c0c
0000000000027bb4	tbnz	w0, #0x1f, 0x27c14
0000000000027bb8	mov	x8, x26
0000000000027bbc	b	0x27bcc
0000000000027bc0	mov	w0, #0x0
0000000000027bc4	sub	x8, x27, #0x10
0000000000027bc8	tbnz	w0, #0x1f, 0x27c28
0000000000027bcc	cmp	x8, x19
0000000000027bd0	b.eq	0x27db0
0000000000027bd4	mov	x27, x8
0000000000027bd8	ldr	x25, [x8, #0x8]
0000000000027bdc	cmp	x28, x25
0000000000027be0	csel	x2, x28, x25, lo
0000000000027be4	cbz	x2, 0x27bf8
0000000000027be8	ldr	x1, [x22]
0000000000027bec	ldr	x0, [x27]
0000000000027bf0	bl	0x4dbe0 ; symbol stub for: _memcmp
0000000000027bf4	cbnz	w0, 0x27bc4
0000000000027bf8	cmp	x25, x28
0000000000027bfc	b.eq	0x27bc0
0000000000027c00	b.lo	0x27c28
0000000000027c04	mov	w0, #0x1
0000000000027c08	b	0x27bc4
0000000000027c0c	cmp	x24, x28
0000000000027c10	b.hs	0x27bb8
0000000000027c14	mov	x27, x21
0000000000027c18	add	x24, x19, #0x10
0000000000027c1c	cmp	x24, x27
0000000000027c20	b.lo	0x27c7c
0000000000027c24	b	0x27d08
0000000000027c28	ldr	q0, [x19]
0000000000027c2c	str	q0, [sp]
0000000000027c30	ldr	q0, [x27]
0000000000027c34	str	q0, [x19]
0000000000027c38	ldr	q0, [sp]
0000000000027c3c	str	q0, [x27]
0000000000027c40	add	w23, w23, #0x1
0000000000027c44	add	x24, x19, #0x10
0000000000027c48	cmp	x24, x27
0000000000027c4c	b.hs	0x27d08
0000000000027c50	b	0x27c7c
0000000000027c54	ldr	q0, [x24]
0000000000027c58	str	q0, [sp]
0000000000027c5c	ldr	q0, [x27]
0000000000027c60	str	q0, [x24]
0000000000027c64	ldr	q0, [sp]
0000000000027c68	str	q0, [x27]
0000000000027c6c	add	w23, w23, #0x1
0000000000027c70	cmp	x24, x22
0000000000027c74	csel	x22, x27, x22, eq
0000000000027c78	add	x24, x24, #0x10
0000000000027c7c	ldr	x28, [x22, #0x8]
0000000000027c80	b	0x27c90
0000000000027c84	cmp	x25, x28
0000000000027c88	b.hs	0x27cb4
0000000000027c8c	add	x24, x24, #0x10
0000000000027c90	ldr	x25, [x24, #0x8]
0000000000027c94	cmp	x28, x25
0000000000027c98	csel	x2, x28, x25, lo
0000000000027c9c	cbz	x2, 0x27c84
0000000000027ca0	ldr	x1, [x22]
0000000000027ca4	ldr	x0, [x24]
0000000000027ca8	bl	0x4dbe0 ; symbol stub for: _memcmp
0000000000027cac	cbz	w0, 0x27c84
0000000000027cb0	tbnz	w0, #0x1f, 0x27c8c
0000000000027cb4	sub	x8, x27, #0x10
0000000000027cb8	b	0x27cc8
0000000000027cbc	mov	w0, #0x0
0000000000027cc0	sub	x8, x27, #0x10
0000000000027cc4	tbnz	w0, #0x1f, 0x27d00
0000000000027cc8	mov	x27, x8
0000000000027ccc	ldr	x25, [x8, #0x8]
0000000000027cd0	cmp	x28, x25
0000000000027cd4	csel	x2, x28, x25, lo
0000000000027cd8	cbz	x2, 0x27cec
0000000000027cdc	ldr	x1, [x22]
0000000000027ce0	ldr	x0, [x27]
0000000000027ce4	bl	0x4dbe0 ; symbol stub for: _memcmp
0000000000027ce8	cbnz	w0, 0x27cc0
0000000000027cec	cmp	x25, x28
0000000000027cf0	b.eq	0x27cbc
0000000000027cf4	b.lo	0x27d00
0000000000027cf8	mov	w0, #0x1
0000000000027cfc	b	0x27cc0
0000000000027d00	cmp	x24, x27
0000000000027d04	b.ls	0x27c54
0000000000027d08	cmp	x24, x22
0000000000027d0c	b.eq	0x27d60
0000000000027d10	ldr	x25, [x22, #0x8]
0000000000027d14	ldr	x27, [x24, #0x8]
0000000000027d18	cmp	x27, x25
0000000000027d1c	csel	x2, x27, x25, lo
0000000000027d20	cbz	x2, 0x27d3c
0000000000027d24	ldr	x1, [x24]
0000000000027d28	ldr	x0, [x22]
0000000000027d2c	bl	0x4dbe0 ; symbol stub for: _memcmp
0000000000027d30	cbz	w0, 0x27d3c
0000000000027d34	tbnz	w0, #0x1f, 0x27d44
0000000000027d38	b	0x27d60
0000000000027d3c	cmp	x25, x27
0000000000027d40	b.hs	0x27d60
0000000000027d44	ldr	q0, [x24]
0000000000027d48	str	q0, [sp]
0000000000027d4c	ldr	q0, [x22]
0000000000027d50	str	q0, [x24]
0000000000027d54	ldr	q0, [sp]
0000000000027d58	str	q0, [x22]
0000000000027d5c	add	w23, w23, #0x1
0000000000027d60	cbnz	w23, 0x27d8c
0000000000027d64	mov	x0, x19
0000000000027d68	mov	x1, x24
0000000000027d6c	bl	__ZNSt3__127__insertion_sort_incompleteIRNS_6__lessINS_17basic_string_viewIcNS_11char_traitsIcEEEES5_EEPS5_EEbT0_S9_T_
0000000000027d70	mov	x23, x0
0000000000027d74	add	x22, x24, #0x10
0000000000027d78	mov	x0, x22
0000000000027d7c	mov	x1, x20
0000000000027d80	bl	__ZNSt3__127__insertion_sort_incompleteIRNS_6__lessINS_17basic_string_viewIcNS_11char_traitsIcEEEES5_EEPS5_EEbT0_S9_T_
0000000000027d84	cbnz	w0, 0x27f00
0000000000027d88	tbnz	w23, #0x0, 0x27b10
0000000000027d8c	sub	x8, x24, x19
0000000000027d90	sub	x9, x20, x24
0000000000027d94	cmp	x8, x9
0000000000027d98	b.ge	0x27eec
0000000000027d9c	mov	x0, x19
0000000000027da0	mov	x1, x24
0000000000027da4	bl	__ZNSt3__16__sortIRNS_6__lessINS_17basic_string_viewIcNS_11char_traitsIcEEEES5_EEPS5_EEvT0_S9_T_
0000000000027da8	add	x22, x24, #0x10
0000000000027dac	b	0x27b10
0000000000027db0	add	x22, x19, #0x10
0000000000027db4	ldur	x23, [x20, #-0x8]
0000000000027db8	cmp	x23, x24
0000000000027dbc	csel	x2, x23, x24, lo
0000000000027dc0	cbz	x2, 0x27ddc
0000000000027dc4	ldr	x1, [x21]
0000000000027dc8	ldr	x0, [x19]
0000000000027dcc	bl	0x4dbe0 ; symbol stub for: _memcmp
0000000000027dd0	cbz	w0, 0x27ddc
0000000000027dd4	tbz	w0, #0x1f, 0x27dfc
0000000000027dd8	b	0x27de4
0000000000027ddc	cmp	x24, x23
0000000000027de0	b.hs	0x27dfc
0000000000027de4	cmp	x22, x21
0000000000027de8	b.ne	0x27e48
0000000000027dec	b	0x280f0
0000000000027df0	cmp	x24, x23
0000000000027df4	b.lo	0x27e28
0000000000027df8	add	x22, x22, #0x10
0000000000027dfc	cmp	x22, x21
0000000000027e00	b.eq	0x280f0
0000000000027e04	ldr	x23, [x22, #0x8]
0000000000027e08	cmp	x23, x24
0000000000027e0c	csel	x2, x23, x24, lo
0000000000027e10	cbz	x2, 0x27df0
0000000000027e14	ldr	x1, [x22]
0000000000027e18	ldr	x0, [x19]
0000000000027e1c	bl	0x4dbe0 ; symbol stub for: _memcmp
0000000000027e20	cbz	w0, 0x27df0
0000000000027e24	tbz	w0, #0x1f, 0x27df8
0000000000027e28	ldr	q0, [x22]
0000000000027e2c	str	q0, [sp]
0000000000027e30	ldr	q0, [x21]
0000000000027e34	str	q0, [x22], #0x10
0000000000027e38	ldr	q0, [sp]
0000000000027e3c	str	q0, [x21]
0000000000027e40	cmp	x22, x21
0000000000027e44	b.eq	0x280f0
0000000000027e48	mov	x23, x21
0000000000027e4c	ldr	x24, [x19, #0x8]
0000000000027e50	b	0x27e60
0000000000027e54	cmp	x24, x25
0000000000027e58	b.lo	0x27e84
0000000000027e5c	add	x22, x22, #0x10
0000000000027e60	ldr	x25, [x22, #0x8]
0000000000027e64	cmp	x25, x24
0000000000027e68	csel	x2, x25, x24, lo
0000000000027e6c	cbz	x2, 0x27e54
0000000000027e70	ldr	x1, [x22]
0000000000027e74	ldr	x0, [x19]
0000000000027e78	bl	0x4dbe0 ; symbol stub for: _memcmp
0000000000027e7c	cbz	w0, 0x27e54
0000000000027e80	tbz	w0, #0x1f, 0x27e5c
0000000000027e84	sub	x8, x23, #0x10
0000000000027e88	b	0x27e94
0000000000027e8c	sub	x8, x23, #0x10
0000000000027e90	tbz	w0, #0x1f, 0x27ec8
0000000000027e94	mov	x23, x8
0000000000027e98	ldr	x25, [x8, #0x8]
0000000000027e9c	cmp	x25, x24
0000000000027ea0	csel	x2, x25, x24, lo
0000000000027ea4	cbz	x2, 0x27eb8
0000000000027ea8	ldr	x1, [x23]
0000000000027eac	ldr	x0, [x19]
0000000000027eb0	bl	0x4dbe0 ; symbol stub for: _memcmp
0000000000027eb4	cbnz	w0, 0x27e8c
0000000000027eb8	cmp	x24, x25
0000000000027ebc	b.hs	0x27ec8
0000000000027ec0	mov	w0, #-0x1
0000000000027ec4	b	0x27e8c
0000000000027ec8	cmp	x22, x23
0000000000027ecc	b.hs	0x27b10
0000000000027ed0	ldr	q0, [x22]
0000000000027ed4	str	q0, [sp]
0000000000027ed8	ldr	q0, [x23]
0000000000027edc	str	q0, [x22], #0x10
0000000000027ee0	ldr	q0, [sp]
0000000000027ee4	str	q0, [x23]
0000000000027ee8	b	0x27e4c
0000000000027eec	add	x0, x24, #0x10
0000000000027ef0	mov	x1, x20
0000000000027ef4	bl	__ZNSt3__16__sortIRNS_6__lessINS_17basic_string_viewIcNS_11char_traitsIcEEEES5_EEPS5_EEvT0_S9_T_
0000000000027ef8	mov	x20, x24
0000000000027efc	b	0x27b04
0000000000027f00	mov	x20, x24
0000000000027f04	tbz	w23, #0x0, 0x27b04
0000000000027f08	b	0x280f0
0000000000027f0c	adr	x9, #0x26734
0000000000027f10	nop
0000000000027f14	adr	x10, #0x10
0000000000027f18	ldrb	w11, [x9, x8]
0000000000027f1c	add	x10, x10, x11, lsl #2
0000000000027f20	br	x10
0000000000027f24	ldur	x20, [x20, #-0x8]
0000000000027f28	ldr	x22, [x19, #0x8]
0000000000027f2c	cmp	x22, x20
0000000000027f30	csel	x2, x22, x20, lo
0000000000027f34	cbz	x2, 0x280d0
0000000000027f38	ldr	x1, [x19]
0000000000027f3c	ldr	x0, [x21]
0000000000027f40	bl	0x4dbe0 ; symbol stub for: _memcmp
0000000000027f44	cbz	w0, 0x280d0
0000000000027f48	tbnz	w0, #0x1f, 0x280d8
0000000000027f4c	b	0x280f0
0000000000027f50	add	x1, x19, #0x10
0000000000027f54	mov	x0, x19
0000000000027f58	mov	x2, x21
0000000000027f5c	ldp	x29, x30, [sp, #0x60]
0000000000027f60	ldp	x20, x19, [sp, #0x50]
0000000000027f64	ldp	x22, x21, [sp, #0x40]
0000000000027f68	ldp	x24, x23, [sp, #0x30]
0000000000027f6c	ldp	x26, x25, [sp, #0x20]
0000000000027f70	ldp	x28, x27, [sp, #0x10]
0000000000027f74	add	sp, sp, #0x70
0000000000027f78	b	__ZNSt3__17__sort3IRNS_6__lessINS_17basic_string_viewIcNS_11char_traitsIcEEEES5_EEPS5_EEjT0_S9_S9_T_
0000000000027f7c	add	x1, x19, #0x10
0000000000027f80	add	x2, x19, #0x20
0000000000027f84	mov	x0, x19
0000000000027f88	mov	x3, x21
0000000000027f8c	ldp	x29, x30, [sp, #0x60]
0000000000027f90	ldp	x20, x19, [sp, #0x50]
0000000000027f94	ldp	x22, x21, [sp, #0x40]
0000000000027f98	ldp	x24, x23, [sp, #0x30]
0000000000027f9c	ldp	x26, x25, [sp, #0x20]
0000000000027fa0	ldp	x28, x27, [sp, #0x10]
0000000000027fa4	add	sp, sp, #0x70
0000000000027fa8	b	__ZNSt3__17__sort4IRNS_6__lessINS_17basic_string_viewIcNS_11char_traitsIcEEEES5_EEPS5_EEjT0_S9_S9_S9_T_
0000000000027fac	add	x1, x19, #0x10
0000000000027fb0	add	x2, x19, #0x20
0000000000027fb4	add	x3, x19, #0x30
0000000000027fb8	mov	x0, x19
0000000000027fbc	mov	x4, x21
0000000000027fc0	ldp	x29, x30, [sp, #0x60]
0000000000027fc4	ldp	x20, x19, [sp, #0x50]
0000000000027fc8	ldp	x22, x21, [sp, #0x40]
0000000000027fcc	ldp	x24, x23, [sp, #0x30]
0000000000027fd0	ldp	x26, x25, [sp, #0x20]
0000000000027fd4	ldp	x28, x27, [sp, #0x10]
0000000000027fd8	add	sp, sp, #0x70
0000000000027fdc	b	__ZNSt3__17__sort5IRNS_6__lessINS_17basic_string_viewIcNS_11char_traitsIcEEEES5_EEPS5_EEjT0_S9_S9_S9_S9_T_
0000000000027fe0	add	x21, x19, #0x20
0000000000027fe4	add	x1, x19, #0x10
0000000000027fe8	mov	x0, x19
0000000000027fec	mov	x2, x21
0000000000027ff0	bl	__ZNSt3__17__sort3IRNS_6__lessINS_17basic_string_viewIcNS_11char_traitsIcEEEES5_EEPS5_EEjT0_S9_S9_T_
0000000000027ff4	add	x8, x19, #0x30
0000000000027ff8	cmp	x8, x20
0000000000027ffc	b.eq	0x280f0
0000000000028000	mov	x23, #0x0
0000000000028004	b	0x28020
0000000000028008	mov	x25, x19
000000000002800c	stp	x22, x24, [x25]
0000000000028010	add	x8, x21, #0x10
0000000000028014	add	x23, x23, #0x10
0000000000028018	cmp	x8, x20
000000000002801c	b.eq	0x280f0
0000000000028020	mov	x26, x21
0000000000028024	mov	x21, x8
0000000000028028	ldr	x24, [x8, #0x8]
000000000002802c	ldr	x25, [x26, #0x8]
0000000000028030	cmp	x25, x24
0000000000028034	csel	x2, x25, x24, lo
0000000000028038	cbz	x2, 0x28058
000000000002803c	ldr	x1, [x26]
0000000000028040	ldr	x22, [x21]
0000000000028044	mov	x0, x22
0000000000028048	bl	0x4dbe0 ; symbol stub for: _memcmp
000000000002804c	cbz	w0, 0x28058
0000000000028050	tbz	w0, #0x1f, 0x28010
0000000000028054	b	0x28064
0000000000028058	cmp	x24, x25
000000000002805c	b.hs	0x28010
0000000000028060	ldr	x22, [x21]
0000000000028064	mov	x27, x23
0000000000028068	b	0x28084
000000000002806c	cmp	x24, x26
0000000000028070	b.hs	0x280c4
0000000000028074	mov	w0, #-0x1
0000000000028078	sub	x26, x25, #0x10
000000000002807c	sub	x27, x27, #0x10
0000000000028080	tbz	w0, #0x1f, 0x2800c
0000000000028084	add	x8, x19, x27
0000000000028088	ldr	q0, [x8, #0x20]
000000000002808c	str	q0, [x8, #0x30]
0000000000028090	cmn	x27, #0x20
0000000000028094	b.eq	0x28008
0000000000028098	mov	x25, x26
000000000002809c	ldr	x26, [x8, #0x18]
00000000000280a0	cmp	x26, x24
00000000000280a4	csel	x2, x26, x24, lo
00000000000280a8	cbz	x2, 0x2806c
00000000000280ac	add	x8, x19, x27
00000000000280b0	ldr	x1, [x8, #0x10]
00000000000280b4	mov	x0, x22
00000000000280b8	bl	0x4dbe0 ; symbol stub for: _memcmp
00000000000280bc	cbnz	w0, 0x28078
00000000000280c0	b	0x2806c
00000000000280c4	add	x8, x19, x27
00000000000280c8	add	x25, x8, #0x20
00000000000280cc	b	0x2800c
00000000000280d0	cmp	x20, x22
00000000000280d4	b.hs	0x280f0
00000000000280d8	ldr	q0, [x19]
00000000000280dc	str	q0, [sp]
00000000000280e0	ldr	q0, [x21]
00000000000280e4	str	q0, [x19]
00000000000280e8	ldr	q0, [sp]
00000000000280ec	str	q0, [x21]
00000000000280f0	ldp	x29, x30, [sp, #0x60]
00000000000280f4	ldp	x20, x19, [sp, #0x50]
00000000000280f8	ldp	x22, x21, [sp, #0x40]
00000000000280fc	ldp	x24, x23, [sp, #0x30]
0000000000028100	ldp	x26, x25, [sp, #0x20]
0000000000028104	ldp	x28, x27, [sp, #0x10]
0000000000028108	add	sp, sp, #0x70
000000000002810c	ret
__ZNSt3__17__sort3IRNS_6__lessINS_17basic_string_viewIcNS_11char_traitsIcEEEES5_EEPS5_EEjT0_S9_S9_T_:
0000000000028110	sub	sp, sp, #0x90
0000000000028114	stp	x24, x23, [sp, #0x50]
0000000000028118	stp	x22, x21, [sp, #0x60]
000000000002811c	stp	x20, x19, [sp, #0x70]
0000000000028120	stp	x29, x30, [sp, #0x80]
0000000000028124	add	x29, sp, #0x80
0000000000028128	mov	x20, x2
000000000002812c	mov	x19, x1
0000000000028130	mov	x21, x0
0000000000028134	ldr	x23, [x1, #0x8]
0000000000028138	ldr	x24, [x0, #0x8]
000000000002813c	cmp	x24, x23
0000000000028140	csel	x2, x24, x23, lo
0000000000028144	cbz	x2, 0x28170
0000000000028148	ldr	x1, [x21]
000000000002814c	ldr	x0, [x19]
0000000000028150	bl	0x4dbe0 ; symbol stub for: _memcmp
0000000000028154	mov	x22, x0
0000000000028158	cbz	w0, 0x28170
000000000002815c	ldr	x24, [x20, #0x8]
0000000000028160	cmp	x23, x24
0000000000028164	csel	x2, x23, x24, lo
0000000000028168	cbnz	x2, 0x28190
000000000002816c	b	0x281c4
0000000000028170	cmp	x23, x24
0000000000028174	mov	w8, #-0x1
0000000000028178	cneg	w8, w8, hs
000000000002817c	csel	w22, wzr, w8, eq
0000000000028180	ldr	x24, [x20, #0x8]
0000000000028184	cmp	x23, x24
0000000000028188	csel	x2, x23, x24, lo
000000000002818c	cbz	x2, 0x281c4
0000000000028190	ldr	x1, [x19]
0000000000028194	ldr	x0, [x20]
0000000000028198	bl	0x4dbe0 ; symbol stub for: _memcmp
000000000002819c	cbz	w0, 0x281c4
00000000000281a0	tbnz	w22, #0x1f, 0x281d8
00000000000281a4	tbnz	w0, #0x1f, 0x28218
00000000000281a8	mov	w0, #0x0
00000000000281ac	ldp	x29, x30, [sp, #0x80]
00000000000281b0	ldp	x20, x19, [sp, #0x70]
00000000000281b4	ldp	x22, x21, [sp, #0x60]
00000000000281b8	ldp	x24, x23, [sp, #0x50]
00000000000281bc	add	sp, sp, #0x90
00000000000281c0	ret
00000000000281c4	cmp	x24, x23
00000000000281c8	mov	w8, #-0x1
00000000000281cc	cneg	w8, w8, hs
00000000000281d0	csel	w0, wzr, w8, eq
00000000000281d4	tbz	w22, #0x1f, 0x281a4
00000000000281d8	tbnz	w0, #0x1f, 0x28254
00000000000281dc	ldr	q0, [x21]
00000000000281e0	ldr	q1, [x19]
00000000000281e4	str	q1, [x21]
00000000000281e8	str	q0, [x19]
00000000000281ec	ldr	x21, [x20, #0x8]
00000000000281f0	ldr	x22, [x19, #0x8]
00000000000281f4	cmp	x22, x21
00000000000281f8	csel	x2, x22, x21, lo
00000000000281fc	cbz	x2, 0x28268
0000000000028200	ldr	x1, [x19]
0000000000028204	ldr	x0, [x20]
0000000000028208	bl	0x4dbe0 ; symbol stub for: _memcmp
000000000002820c	cbz	w0, 0x28268
0000000000028210	tbz	w0, #0x1f, 0x282b8
0000000000028214	b	0x28270
0000000000028218	ldr	q0, [x19]
000000000002821c	ldr	q1, [x20]
0000000000028220	str	q1, [x19]
0000000000028224	str	q0, [x20]
0000000000028228	ldr	x20, [x19, #0x8]
000000000002822c	ldr	x22, [x21, #0x8]
0000000000028230	cmp	x22, x20
0000000000028234	csel	x2, x22, x20, lo
0000000000028238	cbz	x2, 0x28284
000000000002823c	ldr	x1, [x21]
0000000000028240	ldr	x0, [x19]
0000000000028244	bl	0x4dbe0 ; symbol stub for: _memcmp
0000000000028248	cbz	w0, 0x28284
000000000002824c	tbz	w0, #0x1f, 0x282b8
0000000000028250	b	0x2828c
0000000000028254	ldr	q0, [x21]
0000000000028258	ldr	q1, [x20]
000000000002825c	str	q1, [x21]
0000000000028260	str	q0, [x20]
0000000000028264	b	0x282b8
0000000000028268	cmp	x21, x22
000000000002826c	b.hs	0x282b8
0000000000028270	ldr	q0, [x19]
0000000000028274	ldr	q1, [x20]
0000000000028278	str	q1, [x19]
000000000002827c	str	q0, [x20]
0000000000028280	b	0x2829c
0000000000028284	cmp	x20, x22
0000000000028288	b.hs	0x282b8
000000000002828c	ldr	q0, [x21]
0000000000028290	ldr	q1, [x19]
0000000000028294	str	q1, [x21]
0000000000028298	str	q0, [x19]
000000000002829c	mov	w0, #0x2
00000000000282a0	ldp	x29, x30, [sp, #0x80]
00000000000282a4	ldp	x20, x19, [sp, #0x70]
00000000000282a8	ldp	x22, x21, [sp, #0x60]
00000000000282ac	ldp	x24, x23, [sp, #0x50]
00000000000282b0	add	sp, sp, #0x90
00000000000282b4	ret
00000000000282b8	mov	w0, #0x1
00000000000282bc	ldp	x29, x30, [sp, #0x80]
00000000000282c0	ldp	x20, x19, [sp, #0x70]
00000000000282c4	ldp	x22, x21, [sp, #0x60]
00000000000282c8	ldp	x24, x23, [sp, #0x50]
00000000000282cc	add	sp, sp, #0x90
00000000000282d0	ret
__ZNSt3__17__sort4IRNS_6__lessINS_17basic_string_viewIcNS_11char_traitsIcEEEES5_EEPS5_EEjT0_S9_S9_S9_T_:
00000000000282d4	sub	sp, sp, #0x80
00000000000282d8	stp	x26, x25, [sp, #0x30]
00000000000282dc	stp	x24, x23, [sp, #0x40]
00000000000282e0	stp	x22, x21, [sp, #0x50]
00000000000282e4	stp	x20, x19, [sp, #0x60]
00000000000282e8	stp	x29, x30, [sp, #0x70]
00000000000282ec	add	x29, sp, #0x70
00000000000282f0	mov	x24, x3
00000000000282f4	mov	x23, x2
00000000000282f8	mov	x19, x1
00000000000282fc	mov	x20, x0
0000000000028300	bl	__ZNSt3__17__sort3IRNS_6__lessINS_17basic_string_viewIcNS_11char_traitsIcEEEES5_EEPS5_EEjT0_S9_S9_T_
0000000000028304	mov	x21, x0
0000000000028308	mov	x22, x0
000000000002830c	ldr	x25, [x24, #0x8]
0000000000028310	ldr	x26, [x23, #0x8]
0000000000028314	cmp	x26, x25
0000000000028318	csel	x2, x26, x25, lo
000000000002831c	cbz	x2, 0x28338
0000000000028320	ldr	x1, [x23]
0000000000028324	ldr	x0, [x24]
0000000000028328	bl	0x4dbe0 ; symbol stub for: _memcmp
000000000002832c	cbz	w0, 0x28338
0000000000028330	tbnz	w0, #0x1f, 0x28340
0000000000028334	b	0x283e4
0000000000028338	cmp	x25, x26
000000000002833c	b.hs	0x283e4
0000000000028340	ldr	q0, [x23]
0000000000028344	ldr	q1, [x24]
0000000000028348	str	q1, [x23]
000000000002834c	str	q0, [x24]
0000000000028350	add	w22, w21, #0x1
0000000000028354	ldr	x24, [x23, #0x8]
0000000000028358	ldr	x25, [x19, #0x8]
000000000002835c	cmp	x25, x24
0000000000028360	csel	x2, x25, x24, lo
0000000000028364	cbz	x2, 0x28380
0000000000028368	ldr	x1, [x19]
000000000002836c	ldr	x0, [x23]
0000000000028370	bl	0x4dbe0 ; symbol stub for: _memcmp
0000000000028374	cbz	w0, 0x28380
0000000000028378	tbnz	w0, #0x1f, 0x28388
000000000002837c	b	0x283e4
0000000000028380	cmp	x24, x25
0000000000028384	b.hs	0x283e4
0000000000028388	ldr	q0, [x19]
000000000002838c	ldr	q1, [x23]
0000000000028390	str	q1, [x19]
0000000000028394	str	q0, [x23]
0000000000028398	add	w22, w21, #0x2
000000000002839c	ldr	x23, [x19, #0x8]
00000000000283a0	ldr	x24, [x20, #0x8]
00000000000283a4	cmp	x24, x23
00000000000283a8	csel	x2, x24, x23, lo
00000000000283ac	cbz	x2, 0x283c8
00000000000283b0	ldr	x1, [x20]
00000000000283b4	ldr	x0, [x19]
00000000000283b8	bl	0x4dbe0 ; symbol stub for: _memcmp
00000000000283bc	cbz	w0, 0x283c8
00000000000283c0	tbnz	w0, #0x1f, 0x283d0
00000000000283c4	b	0x283e4
00000000000283c8	cmp	x23, x24
00000000000283cc	b.hs	0x283e4
00000000000283d0	ldr	q0, [x20]
00000000000283d4	ldr	q1, [x19]
00000000000283d8	str	q1, [x20]
00000000000283dc	str	q0, [x19]
00000000000283e0	add	w22, w21, #0x3
00000000000283e4	mov	x0, x22
00000000000283e8	ldp	x29, x30, [sp, #0x70]
00000000000283ec	ldp	x20, x19, [sp, #0x60]
00000000000283f0	ldp	x22, x21, [sp, #0x50]
00000000000283f4	ldp	x24, x23, [sp, #0x40]
00000000000283f8	ldp	x26, x25, [sp, #0x30]
00000000000283fc	add	sp, sp, #0x80
0000000000028400	ret
__ZNSt3__17__sort5IRNS_6__lessINS_17basic_string_viewIcNS_11char_traitsIcEEEES5_EEPS5_EEjT0_S9_S9_S9_S9_T_:
0000000000028404	sub	sp, sp, #0xa0
0000000000028408	stp	x28, x27, [sp, #0x40]
000000000002840c	stp	x26, x25, [sp, #0x50]
0000000000028410	stp	x24, x23, [sp, #0x60]
0000000000028414	stp	x22, x21, [sp, #0x70]
0000000000028418	stp	x20, x19, [sp, #0x80]
000000000002841c	stp	x29, x30, [sp, #0x90]
0000000000028420	add	x29, sp, #0x90
0000000000028424	mov	x25, x4
0000000000028428	mov	x24, x3
000000000002842c	mov	x23, x2
0000000000028430	mov	x19, x1
0000000000028434	mov	x20, x0
0000000000028438	bl	__ZNSt3__17__sort4IRNS_6__lessINS_17basic_string_viewIcNS_11char_traitsIcEEEES5_EEPS5_EEjT0_S9_S9_S9_T_
000000000002843c	mov	x21, x0
0000000000028440	mov	x22, x0
0000000000028444	ldr	x26, [x25, #0x8]
0000000000028448	ldr	x27, [x24, #0x8]
000000000002844c	cmp	x27, x26
0000000000028450	csel	x2, x27, x26, lo
0000000000028454	cbz	x2, 0x28470
0000000000028458	ldr	x1, [x24]
000000000002845c	ldr	x0, [x25]
0000000000028460	bl	0x4dbe0 ; symbol stub for: _memcmp
0000000000028464	cbz	w0, 0x28470
0000000000028468	tbnz	w0, #0x1f, 0x28478
000000000002846c	b	0x28564
0000000000028470	cmp	x26, x27
0000000000028474	b.hs	0x28564
0000000000028478	ldr	q0, [x24]
000000000002847c	ldr	q1, [x25]
0000000000028480	str	q1, [x24]
0000000000028484	str	q0, [x25]
0000000000028488	add	w22, w21, #0x1
000000000002848c	ldr	x25, [x24, #0x8]
0000000000028490	ldr	x26, [x23, #0x8]
0000000000028494	cmp	x26, x25
0000000000028498	csel	x2, x26, x25, lo
000000000002849c	cbz	x2, 0x284b8
00000000000284a0	ldr	x1, [x23]
00000000000284a4	ldr	x0, [x24]
00000000000284a8	bl	0x4dbe0 ; symbol stub for: _memcmp
00000000000284ac	cbz	w0, 0x284b8
00000000000284b0	tbnz	w0, #0x1f, 0x284c0
00000000000284b4	b	0x28564
00000000000284b8	cmp	x25, x26
00000000000284bc	b.hs	0x28564
00000000000284c0	ldr	q0, [x23]
00000000000284c4	ldr	q1, [x24]
00000000000284c8	str	q1, [x23]
00000000000284cc	str	q0, [x24]
00000000000284d0	add	w22, w21, #0x2
00000000000284d4	ldr	x24, [x23, #0x8]
00000000000284d8	ldr	x25, [x19, #0x8]
00000000000284dc	cmp	x25, x24
00000000000284e0	csel	x2, x25, x24, lo
00000000000284e4	cbz	x2, 0x28500
00000000000284e8	ldr	x1, [x19]
00000000000284ec	ldr	x0, [x23]
00000000000284f0	bl	0x4dbe0 ; symbol stub for: _memcmp
00000000000284f4	cbz	w0, 0x28500
00000000000284f8	tbnz	w0, #0x1f, 0x28508
00000000000284fc	b	0x28564
0000000000028500	cmp	x24, x25
0000000000028504	b.hs	0x28564
0000000000028508	ldr	q0, [x19]
000000000002850c	ldr	q1, [x23]
0000000000028510	str	q1, [x19]
0000000000028514	str	q0, [x23]
0000000000028518	add	w22, w21, #0x3
000000000002851c	ldr	x23, [x19, #0x8]
0000000000028520	ldr	x24, [x20, #0x8]
0000000000028524	cmp	x24, x23
0000000000028528	csel	x2, x24, x23, lo
000000000002852c	cbz	x2, 0x28548
0000000000028530	ldr	x1, [x20]
0000000000028534	ldr	x0, [x19]
0000000000028538	bl	0x4dbe0 ; symbol stub for: _memcmp
000000000002853c	cbz	w0, 0x28548
0000000000028540	tbnz	w0, #0x1f, 0x28550
0000000000028544	b	0x28564
0000000000028548	cmp	x23, x24
000000000002854c	b.hs	0x28564
0000000000028550	ldr	q0, [x20]
0000000000028554	ldr	q1, [x19]
0000000000028558	str	q1, [x20]
000000000002855c	str	q0, [x19]
0000000000028560	add	w22, w21, #0x4
0000000000028564	mov	x0, x22
0000000000028568	ldp	x29, x30, [sp, #0x90]
000000000002856c	ldp	x20, x19, [sp, #0x80]
0000000000028570	ldp	x22, x21, [sp, #0x70]
0000000000028574	ldp	x24, x23, [sp, #0x60]
0000000000028578	ldp	x26, x25, [sp, #0x50]
000000000002857c	ldp	x28, x27, [sp, #0x40]
0000000000028580	add	sp, sp, #0xa0
0000000000028584	ret
__ZNSt3__127__insertion_sort_incompleteIRNS_6__lessINS_17basic_string_viewIcNS_11char_traitsIcEEEES5_EEPS5_EEbT0_S9_T_:
0000000000028588	sub	sp, sp, #0x70
000000000002858c	stp	x28, x27, [sp, #0x10]
0000000000028590	stp	x26, x25, [sp, #0x20]
0000000000028594	stp	x24, x23, [sp, #0x30]
0000000000028598	stp	x22, x21, [sp, #0x40]
000000000002859c	stp	x20, x19, [sp, #0x50]
00000000000285a0	stp	x29, x30, [sp, #0x60]
00000000000285a4	add	x29, sp, #0x60
00000000000285a8	mov	x20, x1
00000000000285ac	mov	x19, x0
00000000000285b0	sub	x8, x1, x0
00000000000285b4	asr	x8, x8, #4
00000000000285b8	cmp	x8, #0x5
00000000000285bc	b.hi	0x2860c
00000000000285c0	mov	w0, #0x1
00000000000285c4	adr	x9, #0x26082
00000000000285c8	nop
00000000000285cc	adr	x10, #0x10
00000000000285d0	ldrb	w11, [x9, x8]
00000000000285d4	add	x10, x10, x11, lsl #2
00000000000285d8	br	x10
00000000000285dc	sub	x21, x20, #0x10
00000000000285e0	ldur	x20, [x20, #-0x8]
00000000000285e4	ldr	x22, [x19, #0x8]
00000000000285e8	cmp	x22, x20
00000000000285ec	csel	x2, x22, x20, lo
00000000000285f0	cbz	x2, 0x28760
00000000000285f4	ldr	x1, [x19]
00000000000285f8	ldr	x0, [x21]
00000000000285fc	bl	0x4dbe0 ; symbol stub for: _memcmp
0000000000028600	cbz	w0, 0x28760
0000000000028604	tbnz	w0, #0x1f, 0x28768
0000000000028608	b	0x28778
000000000002860c	add	x21, x19, #0x20
0000000000028610	add	x1, x19, #0x10
0000000000028614	mov	x0, x19
0000000000028618	mov	x2, x21
000000000002861c	bl	__ZNSt3__17__sort3IRNS_6__lessINS_17basic_string_viewIcNS_11char_traitsIcEEEES5_EEPS5_EEjT0_S9_S9_T_
0000000000028620	add	x8, x19, #0x30
0000000000028624	cmp	x8, x20
0000000000028628	b.eq	0x28778
000000000002862c	mov	x23, #0x0
0000000000028630	mov	w24, #0x0
0000000000028634	b	0x2865c
0000000000028638	mov	x26, x19
000000000002863c	stp	x22, x25, [x26]
0000000000028640	add	w24, w24, #0x1
0000000000028644	cmp	w24, #0x8
0000000000028648	b.eq	0x2879c
000000000002864c	add	x8, x21, #0x10
0000000000028650	add	x23, x23, #0x10
0000000000028654	cmp	x8, x20
0000000000028658	b.eq	0x28778
000000000002865c	mov	x27, x21
0000000000028660	mov	x21, x8
0000000000028664	ldr	x25, [x8, #0x8]
0000000000028668	ldr	x26, [x27, #0x8]
000000000002866c	cmp	x26, x25
0000000000028670	csel	x2, x26, x25, lo
0000000000028674	cbz	x2, 0x28694
0000000000028678	ldr	x1, [x27]
000000000002867c	ldr	x22, [x21]
0000000000028680	mov	x0, x22
0000000000028684	bl	0x4dbe0 ; symbol stub for: _memcmp
0000000000028688	cbz	w0, 0x28694
000000000002868c	tbz	w0, #0x1f, 0x2864c
0000000000028690	b	0x286a0
0000000000028694	cmp	x25, x26
0000000000028698	b.hs	0x2864c
000000000002869c	ldr	x22, [x21]
00000000000286a0	mov	x28, x23
00000000000286a4	b	0x286c0
00000000000286a8	cmp	x25, x27
00000000000286ac	b.hs	0x28700
00000000000286b0	mov	w0, #-0x1
00000000000286b4	sub	x27, x26, #0x10
00000000000286b8	sub	x28, x28, #0x10
00000000000286bc	tbz	w0, #0x1f, 0x2863c
00000000000286c0	add	x8, x19, x28
00000000000286c4	ldr	q0, [x8, #0x20]
00000000000286c8	str	q0, [x8, #0x30]
00000000000286cc	cmn	x28, #0x20
00000000000286d0	b.eq	0x28638
00000000000286d4	mov	x26, x27
00000000000286d8	ldr	x27, [x8, #0x18]
00000000000286dc	cmp	x27, x25
00000000000286e0	csel	x2, x27, x25, lo
00000000000286e4	cbz	x2, 0x286a8
00000000000286e8	add	x8, x19, x28
00000000000286ec	ldr	x1, [x8, #0x10]
00000000000286f0	mov	x0, x22
00000000000286f4	bl	0x4dbe0 ; symbol stub for: _memcmp
00000000000286f8	cbnz	w0, 0x286b4
00000000000286fc	b	0x286a8
0000000000028700	add	x8, x19, x28
0000000000028704	add	x26, x8, #0x20
0000000000028708	b	0x2863c
000000000002870c	add	x1, x19, #0x10
0000000000028710	sub	x2, x20, #0x10
0000000000028714	mov	x0, x19
0000000000028718	bl	__ZNSt3__17__sort3IRNS_6__lessINS_17basic_string_viewIcNS_11char_traitsIcEEEES5_EEPS5_EEjT0_S9_S9_T_
000000000002871c	mov	w0, #0x1
0000000000028720	b	0x2877c
0000000000028724	add	x1, x19, #0x10
0000000000028728	add	x2, x19, #0x20
000000000002872c	sub	x3, x20, #0x10
0000000000028730	mov	x0, x19
0000000000028734	bl	__ZNSt3__17__sort4IRNS_6__lessINS_17basic_string_viewIcNS_11char_traitsIcEEEES5_EEPS5_EEjT0_S9_S9_S9_T_
0000000000028738	mov	w0, #0x1
000000000002873c	b	0x2877c
0000000000028740	add	x1, x19, #0x10
0000000000028744	add	x2, x19, #0x20
0000000000028748	add	x3, x19, #0x30
000000000002874c	sub	x4, x20, #0x10
0000000000028750	mov	x0, x19
0000000000028754	bl	__ZNSt3__17__sort5IRNS_6__lessINS_17basic_string_viewIcNS_11char_traitsIcEEEES5_EEPS5_EEjT0_S9_S9_S9_S9_T_
0000000000028758	mov	w0, #0x1
000000000002875c	b	0x2877c
0000000000028760	cmp	x20, x22
0000000000028764	b.hs	0x28778
0000000000028768	ldr	q0, [x19]
000000000002876c	ldr	q1, [x21]
0000000000028770	str	q1, [x19]
0000000000028774	str	q0, [x21]
0000000000028778	mov	w0, #0x1
000000000002877c	ldp	x29, x30, [sp, #0x60]
0000000000028780	ldp	x20, x19, [sp, #0x50]
0000000000028784	ldp	x22, x21, [sp, #0x40]
0000000000028788	ldp	x24, x23, [sp, #0x30]
000000000002878c	ldp	x26, x25, [sp, #0x20]
0000000000028790	ldp	x28, x27, [sp, #0x10]
0000000000028794	add	sp, sp, #0x70
0000000000028798	ret
000000000002879c	add	x8, x21, #0x10
00000000000287a0	cmp	x8, x20
00000000000287a4	cset	w0, eq
00000000000287a8	b	0x2877c
__ZN6kotlin2mm15ExtraObjectData7InstallEP9ObjHeader:
00000000000287ac	stp	x22, x21, [sp, #-0x30]!
00000000000287b0	stp	x20, x19, [sp, #0x10]
00000000000287b4	stp	x29, x30, [sp, #0x20]
00000000000287b8	add	x29, sp, #0x20
00000000000287bc	ldar	x21, [x0]
00000000000287c0	and	x1, x21, #0xfffffffffffffffc
00000000000287c4	ldr	x8, [x1]
00000000000287c8	cmp	x1, #0x0
00000000000287cc	ccmp	x8, x1, #0x4, ne
00000000000287d0	b.ne	0x28878
00000000000287d4	tst	x21, #0x3
00000000000287d8	b.ne	0x2888c
00000000000287dc	mov	x19, x0
00000000000287e0	adrp	x0, 64 ; 0x68000
00000000000287e4	add	x0, x0, #0xa00
00000000000287e8	ldr	x8, [x0]
00000000000287ec	blr	x8
00000000000287f0	ldr	x20, [x0]
00000000000287f4	add	x22, x20, #0xd8
00000000000287f8	mov	w0, #0x48
00000000000287fc	bl	__ZN6kotlin20allocateInObjectPoolEm
0000000000028800	mov	x1, x0
0000000000028804	str	xzr, [x1, #0x18]!
0000000000028808	str	xzr, [x0]
000000000002880c	str	wzr, [x0, #0x20]
0000000000028810	stp	xzr, x19, [x0, #0x28]
0000000000028814	stlr	x21, [x1]
0000000000028818	stp	x22, xzr, [x0, #0x38]
000000000002881c	mov	x8, x20
0000000000028820	ldr	x9, [x8, #0xe0]!
0000000000028824	stp	x9, x8, [x0]
0000000000028828	str	x0, [x9, #0x8]
000000000002882c	str	x0, [x8]
0000000000028830	ldr	x8, [x20, #0xf0]
0000000000028834	add	x8, x8, #0x1
0000000000028838	str	x8, [x20, #0xf0]
000000000002883c	str	x0, [x0, #0x40]
0000000000028840	ldaxr	x22, [x19]
0000000000028844	cmp	x22, x21
0000000000028848	b.ne	0x28860
000000000002884c	stlxr	w8, x1, [x19]
0000000000028850	cbnz	w8, 0x28840
0000000000028854	mov	w8, #0x1
0000000000028858	tbz	w8, #0x0, 0x2886c
000000000002885c	b	0x28878
0000000000028860	mov	w8, #0x0
0000000000028864	clrex
0000000000028868	tbnz	w8, #0x0, 0x28878
000000000002886c	add	x0, x20, #0x8
0000000000028870	bl	__ZN6kotlin2mm22ExtraObjectDataFactory22DestroyExtraObjectDataEPNS0_10ThreadDataERNS0_15ExtraObjectDataE
0000000000028874	mov	x1, x22
0000000000028878	mov	x0, x1
000000000002887c	ldp	x29, x30, [sp, #0x20]
0000000000028880	ldp	x20, x19, [sp, #0x10]
0000000000028884	ldp	x22, x21, [sp], #0x30
0000000000028888	ret
000000000002888c	adr	x2, #0x297ec ; literal pool for: "Object must not be tagged"
0000000000028890	nop
0000000000028894	mov	w0, #0x0
0000000000028898	bl	__ZN6kotlin8internal24RuntimeAssertFailedPanicEbPKcS2_z
000000000002889c	brk	#0x1
00000000000288a0	bl	___clang_call_terminate
__ZN6kotlin2mm22ExtraObjectDataFactory22DestroyExtraObjectDataEPNS0_10ThreadDataERNS0_15ExtraObjectDataE:
00000000000288a4	stp	x20, x19, [sp, #-0x20]!
00000000000288a8	stp	x29, x30, [sp, #0x10]
00000000000288ac	add	x29, sp, #0x10
00000000000288b0	mov	x19, x0
00000000000288b4	add	x8, x0, #0xd0
00000000000288b8	sub	x20, x1, #0x8
00000000000288bc	add	x9, x1, #0x20
00000000000288c0	ldar	x9, [x9]
00000000000288c4	cmp	x8, x9
00000000000288c8	b.eq	0x28900
00000000000288cc	mov	w0, #0x18
00000000000288d0	bl	__ZN6kotlin20allocateInObjectPoolEm
00000000000288d4	ldr	x8, [x19, #0xf0]!
00000000000288d8	stp	x19, x20, [x0, #0x8]
00000000000288dc	str	x8, [x0]
00000000000288e0	str	x0, [x8, #0x8]
00000000000288e4	str	x0, [x19]
00000000000288e8	ldr	x8, [x19, #0x10]
00000000000288ec	add	x8, x8, #0x1
00000000000288f0	str	x8, [x19, #0x10]
00000000000288f4	ldp	x29, x30, [sp, #0x10]
00000000000288f8	ldp	x20, x19, [sp], #0x20
00000000000288fc	ret
0000000000028900	ldr	x0, [x20, #0x30]
0000000000028904	ldp	x9, x8, [x0]
0000000000028908	str	x8, [x9, #0x8]
000000000002890c	ldr	x8, [x0, #0x8]
0000000000028910	str	x9, [x8]
0000000000028914	ldr	x8, [x19, #0xe8]
0000000000028918	sub	x8, x8, #0x1
000000000002891c	str	x8, [x19, #0xe8]
0000000000028920	ldp	x29, x30, [sp, #0x10]
0000000000028924	ldp	x20, x19, [sp], #0x20
0000000000028928	b	_mi_free
__ZN6kotlin2mm15ExtraObjectData9UninstallEv:
000000000002892c	stp	x22, x21, [sp, #-0x30]!
0000000000028930	stp	x20, x19, [sp, #0x10]
0000000000028934	stp	x29, x30, [sp, #0x20]
0000000000028938	add	x29, sp, #0x20
000000000002893c	mov	x19, x0
0000000000028940	add	x8, x0, #0x18
0000000000028944	ldar	x8, [x8]
0000000000028948	tbz	w8, #0x0, 0x28954
000000000002894c	and	x8, x8, #0xfffffffffffffffe
0000000000028950	ldr	x8, [x8, #0x8]
0000000000028954	mov	x9, x19
0000000000028958	ldr	x10, [x9], #0x10
000000000002895c	stlr	x10, [x8]
0000000000028960	ldar	x8, [x9]
0000000000028964	cbz	x8, 0x289d8
0000000000028968	adrp	x0, 64 ; 0x68000
000000000002896c	add	x0, x0, #0xa00
0000000000028970	ldr	x9, [x0]
0000000000028974	blr	x9
0000000000028978	ldr	x22, [x0]
000000000002897c	add	x20, x22, #0x138
0000000000028980	mov	w9, #0x1
0000000000028984	ldaxr	w21, [x20]
0000000000028988	stlxr	w10, w9, [x20]
000000000002898c	cbnz	w10, 0x28984
0000000000028990	nop
0000000000028994	ldr	x1, #0x5a10c
0000000000028998	mov	x0, x8
000000000002899c	mov	w2, #0x0
00000000000289a0	bl	0x4dcb8 ; Objc message: -[x0 initWithDouble:]
00000000000289a4	cbz	x22, 0x289d8
00000000000289a8	ldaxr	w8, [x20]
00000000000289ac	stlxr	w9, w21, [x20]
00000000000289b0	cbnz	w9, 0x289a8
00000000000289b4	cbnz	w21, 0x289d8
00000000000289b8	cmp	w8, #0x1
00000000000289bc	b.ne	0x289d8
00000000000289c0	adr	x8, #0x59e83
00000000000289c4	nop
00000000000289c8	ldarb	w8, [x8]
00000000000289cc	tbz	w8, #0x0, 0x289d8
00000000000289d0	mov	x0, x20
00000000000289d4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000289d8	add	x8, x19, #0x10
00000000000289dc	stlr	xzr, [x8]
00000000000289e0	ldp	x29, x30, [sp, #0x20]
00000000000289e4	ldp	x20, x19, [sp, #0x10]
00000000000289e8	ldp	x22, x21, [sp], #0x30
00000000000289ec	ret
00000000000289f0	mov	x19, x0
00000000000289f4	cbz	x22, 0x28a28
00000000000289f8	ldaxr	w8, [x20]
00000000000289fc	stlxr	w9, w21, [x20]
0000000000028a00	cbnz	w9, 0x289f8
0000000000028a04	cbnz	w21, 0x28a28
0000000000028a08	cmp	w8, #0x1
0000000000028a0c	b.ne	0x28a28
0000000000028a10	adr	x8, #0x59e33
0000000000028a14	nop
0000000000028a18	ldarb	w8, [x8]
0000000000028a1c	tbz	w8, #0x0, 0x28a28
0000000000028a20	mov	x0, x20
0000000000028a24	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000028a28	mov	x0, x19
0000000000028a2c	bl	___clang_call_terminate
_AddTLSRecord:
0000000000028a30	stp	x28, x27, [sp, #-0x60]!
0000000000028a34	stp	x26, x25, [sp, #0x10]
0000000000028a38	stp	x24, x23, [sp, #0x20]
0000000000028a3c	stp	x22, x21, [sp, #0x30]
0000000000028a40	stp	x20, x19, [sp, #0x40]
0000000000028a44	stp	x29, x30, [sp, #0x50]
0000000000028a48	add	x29, sp, #0x50
0000000000028a4c	mov	x19, x2
0000000000028a50	mov	x22, x1
0000000000028a54	mov	x20, x0
0000000000028a58	add	x21, x0, #0x60
0000000000028a5c	lsr	x8, x1, #32
0000000000028a60	lsl	w9, w22, #3
0000000000028a64	add	x9, x9, #0x8
0000000000028a68	eor	x9, x9, x8
0000000000028a6c	mov	x10, #0x2d69
0000000000028a70	movk	x10, #0xeb38, lsl #16
0000000000028a74	movk	x10, #0xea08, lsl #32
0000000000028a78	movk	x10, #0x9ddf, lsl #48
0000000000028a7c	mul	x9, x9, x10
0000000000028a80	eor	x8, x9, x8
0000000000028a84	eor	x8, x8, x9, lsr #47
0000000000028a88	mul	x8, x8, x10
0000000000028a8c	eor	x8, x8, x8, lsr #47
0000000000028a90	mul	x25, x8, x10
0000000000028a94	ldr	x24, [x0, #0x68]
0000000000028a98	cbz	x24, 0x28ac0
0000000000028a9c	fmov	d0, x24
0000000000028aa0	cnt.8b	v0, v0
0000000000028aa4	uaddlv.8b	h0, v0
0000000000028aa8	fmov	w8, s0
0000000000028aac	cmp	x8, #0x1
0000000000028ab0	b.hi	0x28acc
0000000000028ab4	sub	x9, x24, #0x1
0000000000028ab8	and	x9, x25, x9
0000000000028abc	b	0x28ae0
0000000000028ac0	mov	x26, x20
0000000000028ac4	ldr	w27, [x26, #0x8c]!
0000000000028ac8	b	0x28c08
0000000000028acc	mov	x9, x25
0000000000028ad0	cmp	x25, x24
0000000000028ad4	b.lo	0x28ae0
0000000000028ad8	udiv	x9, x25, x24
0000000000028adc	msub	x9, x9, x24, x25
0000000000028ae0	ldr	x10, [x21]
0000000000028ae4	ldr	x10, [x10, x9, lsl #3]
0000000000028ae8	cbz	x10, 0x28b74
0000000000028aec	ldr	x10, [x10]
0000000000028af0	cbz	x10, 0x28b74
0000000000028af4	sub	x11, x24, #0x1
0000000000028af8	b	0x28b10
0000000000028afc	ldr	x12, [x10, #0x10]
0000000000028b00	cmp	x12, x22
0000000000028b04	b.eq	0x28dec
0000000000028b08	ldr	x10, [x10]
0000000000028b0c	cbz	x10, 0x28b44
0000000000028b10	ldr	x12, [x10, #0x8]
0000000000028b14	cmp	x12, x25
0000000000028b18	b.eq	0x28afc
0000000000028b1c	cmp	x8, #0x1
0000000000028b20	b.hi	0x28b2c
0000000000028b24	and	x12, x12, x11
0000000000028b28	b	0x28b3c
0000000000028b2c	cmp	x12, x24
0000000000028b30	b.lo	0x28b3c
0000000000028b34	udiv	x13, x12, x24
0000000000028b38	msub	x12, x13, x24, x12
0000000000028b3c	cmp	x12, x9
0000000000028b40	b.eq	0x28b08
0000000000028b44	mov	x26, x20
0000000000028b48	ldr	w27, [x26, #0x8c]!
0000000000028b4c	cbz	x24, 0x28ac8
0000000000028b50	fmov	d0, x24
0000000000028b54	cnt.8b	v0, v0
0000000000028b58	uaddlv.8b	h0, v0
0000000000028b5c	fmov	w8, s0
0000000000028b60	cmp	x8, #0x1
0000000000028b64	b.hi	0x28b94
0000000000028b68	sub	x9, x24, #0x1
0000000000028b6c	and	x28, x25, x9
0000000000028b70	b	0x28bac
0000000000028b74	mov	x26, x20
0000000000028b78	ldr	w27, [x26, #0x8c]!
0000000000028b7c	fmov	d0, x24
0000000000028b80	cnt.8b	v0, v0
0000000000028b84	uaddlv.8b	h0, v0
0000000000028b88	fmov	w8, s0
0000000000028b8c	cmp	x8, #0x1
0000000000028b90	b.ls	0x28b68
0000000000028b94	mov	x28, x25
0000000000028b98	cmp	x25, x24
0000000000028b9c	b.lo	0x28bac
0000000000028ba0	udiv	x9, x25, x24
0000000000028ba4	mul	x9, x9, x24
0000000000028ba8	sub	x28, x25, x9
0000000000028bac	ldr	x9, [x21]
0000000000028bb0	ldr	x9, [x9, x28, lsl #3]
0000000000028bb4	cbz	x9, 0x28c08
0000000000028bb8	sub	x10, x24, #0x1
0000000000028bbc	b	0x28bd8
0000000000028bc0	and	x11, x11, x10
0000000000028bc4	cmp	x11, x28
0000000000028bc8	b.ne	0x28c08
0000000000028bcc	ldr	x11, [x9, #0x10]
0000000000028bd0	cmp	x11, x22
0000000000028bd4	b.eq	0x28de4
0000000000028bd8	ldr	x9, [x9]
0000000000028bdc	cbz	x9, 0x28c08
0000000000028be0	ldr	x11, [x9, #0x8]
0000000000028be4	cmp	x11, x25
0000000000028be8	b.eq	0x28bcc
0000000000028bec	cmp	x8, #0x1
0000000000028bf0	b.ls	0x28bc0
0000000000028bf4	cmp	x11, x24
0000000000028bf8	b.lo	0x28bc4
0000000000028bfc	udiv	x12, x11, x24
0000000000028c00	msub	x11, x12, x24, x11
0000000000028c04	b	0x28bc4
0000000000028c08	mov	w0, #0x1
0000000000028c0c	mov	w1, #0x20
0000000000028c10	bl	0x4db20 ; symbol stub for: _calloc
0000000000028c14	mov	x23, x0
0000000000028c18	mov	w8, w27
0000000000028c1c	bfi	x8, x19, #32, #32
0000000000028c20	stp	x22, x8, [x0, #0x10]
0000000000028c24	str	x25, [x0, #0x8]
0000000000028c28	ldr	x8, [x20, #0x78]
0000000000028c2c	add	x8, x8, #0x1
0000000000028c30	ucvtf	s0, x8
0000000000028c34	ldr	s1, [x20, #0x80]
0000000000028c38	cbz	x24, 0x28c4c
0000000000028c3c	ucvtf	s2, x24
0000000000028c40	fmul	s2, s1, s2
0000000000028c44	fcmp	s2, s0
0000000000028c48	b.pl	0x28d54
0000000000028c4c	cmp	x24, #0x3
0000000000028c50	cset	w8, lo
0000000000028c54	sub	x9, x24, #0x1
0000000000028c58	tst	x24, x9
0000000000028c5c	cset	w9, ne
0000000000028c60	orr	w8, w8, w9
0000000000028c64	bfi	x8, x24, #1, #63
0000000000028c68	fdiv	s0, s0, s1
0000000000028c6c	fcvtpu	x9, s0
0000000000028c70	cmp	x8, x9
0000000000028c74	csel	x22, x9, x8, lo
0000000000028c78	subs	x8, x22, #0x1
0000000000028c7c	b.ne	0x28c88
0000000000028c80	mov	w22, #0x2
0000000000028c84	b	0x28ca0
0000000000028c88	tst	x22, x8
0000000000028c8c	b.eq	0x28ca0
0000000000028c90	mov	x0, x22
0000000000028c94	bl	0x4d928 ; symbol stub for: __ZNSt3__112__next_primeEm
0000000000028c98	mov	x22, x0
0000000000028c9c	ldr	x24, [x20, #0x68]
0000000000028ca0	cmp	x22, x24
0000000000028ca4	b.ls	0x28cb8
0000000000028ca8	mov	x0, x21
0000000000028cac	mov	x1, x22
0000000000028cb0	bl	__ZNSt3__112__hash_tableINS_17__hash_value_typeIPvN6kotlin2mm18ThreadLocalStorage5EntryEEENS_22__unordered_map_hasherIS2_S7_NS_4hashIS2_EELb1EEENS_21__unordered_map_equalIS2_S7_NS_8equal_toIS2_EELb1EEENS3_11std_support9allocatorIS7_EEE8__rehashEm
0000000000028cb4	b	0x28d24
0000000000028cb8	b.hs	0x28d24
0000000000028cbc	ldr	x8, [x20, #0x78]
0000000000028cc0	ucvtf	s0, x8
0000000000028cc4	ldr	s1, [x20, #0x80]
0000000000028cc8	fdiv	s0, s0, s1
0000000000028ccc	fcvtpu	x0, s0
0000000000028cd0	cmp	x24, #0x3
0000000000028cd4	b.lo	0x28d10
0000000000028cd8	fmov	d0, x24
0000000000028cdc	cnt.8b	v0, v0
0000000000028ce0	uaddlv.8b	h0, v0
0000000000028ce4	fmov	w8, s0
0000000000028ce8	cmp	x8, #0x1
0000000000028cec	b.hi	0x28d10
0000000000028cf0	sub	x8, x0, #0x1
0000000000028cf4	clz	x8, x8
0000000000028cf8	neg	x8, x8
0000000000028cfc	mov	w9, #0x1
0000000000028d00	lsl	x8, x9, x8
0000000000028d04	cmp	x0, #0x2
0000000000028d08	csel	x0, x0, x8, lo
0000000000028d0c	b	0x28d14
0000000000028d10	bl	0x4d928 ; symbol stub for: __ZNSt3__112__next_primeEm
0000000000028d14	cmp	x22, x0
0000000000028d18	csel	x22, x0, x22, lo
0000000000028d1c	cmp	x22, x24
0000000000028d20	b.lo	0x28ca8
0000000000028d24	ldr	x24, [x20, #0x68]
0000000000028d28	sub	x8, x24, #0x1
0000000000028d2c	tst	x24, x8
0000000000028d30	b.ne	0x28d48
0000000000028d34	and	x28, x8, x25
0000000000028d38	ldr	x9, [x21]
0000000000028d3c	ldr	x8, [x9, x28, lsl #3]
0000000000028d40	cbnz	x8, 0x28d60
0000000000028d44	b	0x28d84
0000000000028d48	cmp	x25, x24
0000000000028d4c	b.hs	0x28d6c
0000000000028d50	mov	x28, x25
0000000000028d54	ldr	x9, [x21]
0000000000028d58	ldr	x8, [x9, x28, lsl #3]
0000000000028d5c	cbz	x8, 0x28d84
0000000000028d60	ldr	x9, [x8]
0000000000028d64	str	x9, [x23]
0000000000028d68	b	0x28dd0
0000000000028d6c	udiv	x8, x25, x24
0000000000028d70	mul	x8, x8, x24
0000000000028d74	sub	x28, x25, x8
0000000000028d78	ldr	x9, [x21]
0000000000028d7c	ldr	x8, [x9, x28, lsl #3]
0000000000028d80	cbnz	x8, 0x28d60
0000000000028d84	mov	x8, x20
0000000000028d88	ldr	x10, [x8, #0x70]!
0000000000028d8c	str	x10, [x23]
0000000000028d90	str	x23, [x8]
0000000000028d94	str	x8, [x9, x28, lsl #3]
0000000000028d98	ldr	x8, [x23]
0000000000028d9c	cbz	x8, 0x28dd4
0000000000028da0	ldr	x8, [x8, #0x8]
0000000000028da4	sub	x9, x24, #0x1
0000000000028da8	tst	x24, x9
0000000000028dac	b.ne	0x28db8
0000000000028db0	and	x8, x8, x9
0000000000028db4	b	0x28dc8
0000000000028db8	cmp	x8, x24
0000000000028dbc	b.lo	0x28dc8
0000000000028dc0	udiv	x9, x8, x24
0000000000028dc4	msub	x8, x9, x24, x8
0000000000028dc8	ldr	x9, [x21]
0000000000028dcc	add	x8, x9, x8, lsl #3
0000000000028dd0	str	x23, [x8]
0000000000028dd4	ldr	x8, [x20, #0x78]
0000000000028dd8	add	x8, x8, #0x1
0000000000028ddc	str	x8, [x20, #0x78]
0000000000028de0	ldr	w27, [x20, #0x8c]
0000000000028de4	add	w8, w27, w19
0000000000028de8	str	w8, [x26]
0000000000028dec	ldp	x29, x30, [sp, #0x50]
0000000000028df0	ldp	x20, x19, [sp, #0x40]
0000000000028df4	ldp	x22, x21, [sp, #0x30]
0000000000028df8	ldp	x24, x23, [sp, #0x20]
0000000000028dfc	ldp	x26, x25, [sp, #0x10]
0000000000028e00	ldp	x28, x27, [sp], #0x60
0000000000028e04	ret
0000000000028e08	mov	x19, x0
0000000000028e0c	cbz	x23, 0x28e18
0000000000028e10	mov	x0, x23
0000000000028e14	bl	0x4dba4 ; symbol stub for: _free
0000000000028e18	mov	x0, x19
0000000000028e1c	bl	___clang_call_terminate
__ZNSt3__112__hash_tableINS_17__hash_value_typeIPvN6kotlin2mm18ThreadLocalStorage5EntryEEENS_22__unordered_map_hasherIS2_S7_NS_4hashIS2_EELb1EEENS_21__unordered_map_equalIS2_S7_NS_8equal_toIS2_EELb1EEENS3_11std_support9allocatorIS7_EEE8__rehashEm:
0000000000028e20	stp	x20, x19, [sp, #-0x20]!
0000000000028e24	stp	x29, x30, [sp, #0x10]
0000000000028e28	add	x29, sp, #0x10
0000000000028e2c	mov	x19, x0
0000000000028e30	cbz	x1, 0x28ea8
0000000000028e34	mov	x20, x1
0000000000028e38	mov	x0, x1
0000000000028e3c	mov	w1, #0x8
0000000000028e40	bl	0x4db20 ; symbol stub for: _calloc
0000000000028e44	mov	x8, x0
0000000000028e48	ldr	x0, [x19]
0000000000028e4c	str	x8, [x19]
0000000000028e50	cbz	x0, 0x28e58
0000000000028e54	bl	0x4dba4 ; symbol stub for: _free
0000000000028e58	mov	x8, #0x0
0000000000028e5c	str	x20, [x19, #0x8]
0000000000028e60	ldr	x9, [x19]
0000000000028e64	str	xzr, [x9, x8, lsl #3]
0000000000028e68	add	x8, x8, #0x1
0000000000028e6c	cmp	x8, x20
0000000000028e70	b.lo	0x28e60
0000000000028e74	mov	x11, x19
0000000000028e78	ldr	x8, [x11, #0x10]!
0000000000028e7c	cbz	x8, 0x28f84
0000000000028e80	ldr	x9, [x8, #0x8]
0000000000028e84	fmov	d0, x20
0000000000028e88	cnt.8b	v0, v0
0000000000028e8c	uaddlv.8b	h0, v0
0000000000028e90	fmov	w10, s0
0000000000028e94	cmp	x10, #0x1
0000000000028e98	b.hi	0x28ec0
0000000000028e9c	sub	x12, x20, #0x1
0000000000028ea0	and	x9, x9, x12
0000000000028ea4	b	0x28ed0
0000000000028ea8	ldr	x0, [x19]
0000000000028eac	str	xzr, [x19]
0000000000028eb0	cbz	x0, 0x28eb8
0000000000028eb4	bl	0x4dba4 ; symbol stub for: _free
0000000000028eb8	str	xzr, [x19, #0x8]
0000000000028ebc	b	0x28f84
0000000000028ec0	cmp	x9, x20
0000000000028ec4	b.lo	0x28ed0
0000000000028ec8	udiv	x12, x9, x20
0000000000028ecc	msub	x9, x12, x20, x9
0000000000028ed0	ldr	x12, [x19]
0000000000028ed4	str	x11, [x12, x9, lsl #3]
0000000000028ed8	ldr	x12, [x8]
0000000000028edc	cbz	x12, 0x28f84
0000000000028ee0	sub	x11, x20, #0x1
0000000000028ee4	b	0x28ef4
0000000000028ee8	mov	x8, x12
0000000000028eec	ldr	x12, [x8]
0000000000028ef0	cbz	x12, 0x28f84
0000000000028ef4	ldr	x13, [x12, #0x8]
0000000000028ef8	cmp	x10, #0x1
0000000000028efc	b.hi	0x28f08
0000000000028f00	and	x13, x13, x11
0000000000028f04	b	0x28f18
0000000000028f08	cmp	x13, x20
0000000000028f0c	b.lo	0x28f18
0000000000028f10	udiv	x14, x13, x20
0000000000028f14	msub	x13, x14, x20, x13
0000000000028f18	cmp	x13, x9
0000000000028f1c	b.eq	0x28ee8
0000000000028f20	ldr	x14, [x19]
0000000000028f24	ldr	x16, [x14, x13, lsl #3]
0000000000028f28	mov	x15, x12
0000000000028f2c	cbz	x16, 0x28f74
0000000000028f30	mov	x14, x15
0000000000028f34	ldr	x15, [x15]
0000000000028f38	cbz	x15, 0x28f4c
0000000000028f3c	ldr	x16, [x12, #0x10]
0000000000028f40	ldr	x17, [x15, #0x10]
0000000000028f44	cmp	x16, x17
0000000000028f48	b.eq	0x28f30
0000000000028f4c	str	x15, [x8]
0000000000028f50	ldr	x15, [x19]
0000000000028f54	lsl	x13, x13, #3
0000000000028f58	ldr	x15, [x15, x13]
0000000000028f5c	ldr	x15, [x15]
0000000000028f60	str	x15, [x14]
0000000000028f64	ldr	x14, [x19]
0000000000028f68	ldr	x13, [x14, x13]
0000000000028f6c	str	x12, [x13]
0000000000028f70	b	0x28eec
0000000000028f74	str	x8, [x14, x13, lsl #3]
0000000000028f78	mov	x8, x12
0000000000028f7c	mov	x9, x13
0000000000028f80	b	0x28eec
0000000000028f84	ldp	x29, x30, [sp, #0x10]
0000000000028f88	ldp	x20, x19, [sp], #0x20
0000000000028f8c	ret
_LookupTLS:
0000000000028f90	stp	x29, x30, [sp, #-0x10]!
0000000000028f94	mov	x29, sp
0000000000028f98	adrp	x0, 64 ; 0x68000
0000000000028f9c	add	x0, x0, #0xa00
0000000000028fa0	ldr	x8, [x0]
0000000000028fa4	blr	x8
0000000000028fa8	ldr	x8, [x0]
0000000000028fac	ldr	x10, [x8, #0x90]
0000000000028fb0	adr	x9, #0x59928
0000000000028fb4	nop
0000000000028fb8	cmp	x10, x9
0000000000028fbc	b.eq	0x29024
0000000000028fc0	ldr	x10, [x8, #0x68]
0000000000028fc4	cbz	x10, 0x29148
0000000000028fc8	fmov	d0, x10
0000000000028fcc	cnt.8b	v0, v0
0000000000028fd0	uaddlv.8b	h0, v0
0000000000028fd4	fmov	w11, s0
0000000000028fd8	cmp	x11, #0x1
0000000000028fdc	b.hi	0x29040
0000000000028fe0	sub	x12, x10, #0x1
0000000000028fe4	lsr	x13, x9, #32
0000000000028fe8	lsl	w14, w9, #3
0000000000028fec	add	x14, x14, #0x8
0000000000028ff0	eor	x14, x14, x13
0000000000028ff4	mov	x15, #0x2d69
0000000000028ff8	movk	x15, #0xeb38, lsl #16
0000000000028ffc	movk	x15, #0xea08, lsl #32
0000000000029000	movk	x15, #0x9ddf, lsl #48
0000000000029004	mul	x14, x14, x15
0000000000029008	eor	x13, x14, x13
000000000002900c	eor	x13, x13, x14, lsr #47
0000000000029010	mul	x13, x13, x15
0000000000029014	eor	x13, x13, x13, lsr #47
0000000000029018	mul	x13, x13, x15
000000000002901c	and	x13, x12, x13
0000000000029020	b	0x290ac
0000000000029024	add	x12, x8, #0x98
0000000000029028	ldr	x9, [x12]
000000000002902c	lsl	x9, x9, #32
0000000000029030	ldr	x8, [x8, #0x48]
0000000000029034	add	x0, x8, x9, asr #29
0000000000029038	ldp	x29, x30, [sp], #0x10
000000000002903c	ret
0000000000029040	lsr	x12, x9, #32
0000000000029044	lsl	w13, w9, #3
0000000000029048	add	x13, x13, #0x8
000000000002904c	eor	x13, x13, x12
0000000000029050	mov	x14, #0x2d69
0000000000029054	movk	x14, #0xeb38, lsl #16
0000000000029058	movk	x14, #0xea08, lsl #32
000000000002905c	movk	x14, #0x9ddf, lsl #48
0000000000029060	mul	x13, x13, x14
0000000000029064	eor	x15, x13, x12
0000000000029068	eor	x13, x15, x13, lsr #47
000000000002906c	mul	x13, x13, x14
0000000000029070	eor	x13, x13, x13, lsr #47
0000000000029074	mul	x13, x13, x14
0000000000029078	cmp	x10, x13
000000000002907c	b.hi	0x290ac
0000000000029080	lsl	w13, w9, #3
0000000000029084	add	x13, x13, #0x8
0000000000029088	eor	x13, x13, x12
000000000002908c	mul	x13, x13, x14
0000000000029090	eor	x12, x13, x12
0000000000029094	eor	x12, x12, x13, lsr #47
0000000000029098	mul	x12, x12, x14
000000000002909c	eor	x12, x12, x12, lsr #47
00000000000290a0	mul	x12, x12, x14
00000000000290a4	udiv	x13, x12, x10
00000000000290a8	msub	x13, x13, x10, x12
00000000000290ac	ldr	x12, [x8, #0x60]
00000000000290b0	ldr	x12, [x12, x13, lsl #3]
00000000000290b4	cbz	x12, 0x2914c
00000000000290b8	ldr	x12, [x12]
00000000000290bc	cbz	x12, 0x2914c
00000000000290c0	sub	x14, x10, #0x1
00000000000290c4	lsr	x15, x9, #32
00000000000290c8	mov	x16, #0x2d69
00000000000290cc	movk	x16, #0xeb38, lsl #16
00000000000290d0	movk	x16, #0xea08, lsl #32
00000000000290d4	movk	x16, #0x9ddf, lsl #48
00000000000290d8	b	0x290f0
00000000000290dc	ldr	x17, [x12, #0x10]
00000000000290e0	cmp	x17, x9
00000000000290e4	b.eq	0x2914c
00000000000290e8	ldr	x12, [x12]
00000000000290ec	cbz	x12, 0x2914c
00000000000290f0	ldr	x17, [x12, #0x8]
00000000000290f4	lsl	w0, w9, #3
00000000000290f8	add	x0, x0, #0x8
00000000000290fc	eor	x0, x0, x15
0000000000029100	mul	x0, x0, x16
0000000000029104	eor	x1, x0, x15
0000000000029108	eor	x0, x1, x0, lsr #47
000000000002910c	mul	x0, x0, x16
0000000000029110	eor	x0, x0, x0, lsr #47
0000000000029114	mul	x0, x0, x16
0000000000029118	cmp	x17, x0
000000000002911c	b.eq	0x290dc
0000000000029120	cmp	x11, #0x1
0000000000029124	b.hi	0x29130
0000000000029128	and	x17, x17, x14
000000000002912c	b	0x29140
0000000000029130	cmp	x17, x10
0000000000029134	b.lo	0x29140
0000000000029138	udiv	x0, x17, x10
000000000002913c	msub	x17, x0, x10, x17
0000000000029140	cmp	x17, x13
0000000000029144	b.eq	0x290e8
0000000000029148	mov	x12, #0x0
000000000002914c	ldr	x9, [x12, #0x10]
0000000000029150	str	x9, [x8, #0x90]
0000000000029154	ldr	x9, [x12, #0x18]!
0000000000029158	str	x9, [x8, #0x98]
000000000002915c	ldr	x9, [x12]
0000000000029160	lsl	x9, x9, #32
0000000000029164	ldr	x8, [x8, #0x48]
0000000000029168	add	x0, x8, x9, asr #29
000000000002916c	ldp	x29, x30, [sp], #0x10
0000000000029170	ret
__ZN6kotlin2mm17StableRefRegistry19UnregisterStableRefEPNS0_10ThreadDataEPNS_16MultiSourceQueueIP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS6_EEE4NodeE:
0000000000029174	stp	x20, x19, [sp, #-0x20]!
0000000000029178	stp	x29, x30, [sp, #0x10]
000000000002917c	add	x29, sp, #0x10
0000000000029180	mov	x20, x1
0000000000029184	mov	x19, x0
0000000000029188	add	x8, x0, #0x98
000000000002918c	add	x9, x1, #0x8
0000000000029190	ldar	x9, [x9]
0000000000029194	cmp	x8, x9
0000000000029198	b.eq	0x291d4
000000000002919c	mov	w0, #0x1
00000000000291a0	mov	w1, #0x18
00000000000291a4	bl	0x4db20 ; symbol stub for: _calloc
00000000000291a8	ldr	x8, [x19, #0xb8]!
00000000000291ac	stp	x19, x20, [x0, #0x8]
00000000000291b0	str	x8, [x0]
00000000000291b4	str	x0, [x8, #0x8]
00000000000291b8	str	x0, [x19]
00000000000291bc	ldr	x8, [x19, #0x10]
00000000000291c0	add	x8, x8, #0x1
00000000000291c4	str	x8, [x19, #0x10]
00000000000291c8	ldp	x29, x30, [sp, #0x10]
00000000000291cc	ldp	x20, x19, [sp], #0x20
00000000000291d0	ret
00000000000291d4	ldr	x0, [x20, #0x10]
00000000000291d8	ldp	x9, x8, [x0]
00000000000291dc	str	x8, [x9, #0x8]
00000000000291e0	ldr	x8, [x0, #0x8]
00000000000291e4	str	x9, [x8]
00000000000291e8	ldr	x8, [x19, #0xb0]
00000000000291ec	sub	x8, x8, #0x1
00000000000291f0	str	x8, [x19, #0xb0]
00000000000291f4	ldp	x29, x30, [sp, #0x10]
00000000000291f8	ldp	x20, x19, [sp], #0x20
00000000000291fc	b	0x4dba4 ; symbol stub for: _free
__ZN18ExceptionObjHolder5ThrowEP9ObjHeader:
0000000000029200	stp	x20, x19, [sp, #-0x20]!
0000000000029204	stp	x29, x30, [sp, #0x10]
0000000000029208	add	x29, sp, #0x10
000000000002920c	mov	x19, x0
0000000000029210	mov	w0, #0x10
0000000000029214	bl	0x4da6c ; symbol stub for: ___cxa_allocate_exception
0000000000029218	mov	x1, x19
000000000002921c	bl	__ZN12_GLOBAL__N_122ExceptionObjHolderImplC1EP9ObjHeader
0000000000029220	adr	x1, #0x398f0
0000000000029224	nop
0000000000029228	adr	x2, #0x90
000000000002922c	nop
0000000000029230	bl	0x4dab4 ; symbol stub for: ___cxa_throw
__ZN12_GLOBAL__N_122ExceptionObjHolderImplC1EP9ObjHeader:
0000000000029234	stp	x22, x21, [sp, #-0x30]!
0000000000029238	stp	x20, x19, [sp, #0x10]
000000000002923c	stp	x29, x30, [sp, #0x20]
0000000000029240	add	x29, sp, #0x20
0000000000029244	mov	x19, x1
0000000000029248	mov	x20, x0
000000000002924c	adr	x8, #0x398ec
0000000000029250	nop
0000000000029254	str	x8, [x0]
0000000000029258	adrp	x0, 63 ; 0x68000
000000000002925c	add	x0, x0, #0xa00
0000000000029260	ldr	x8, [x0]
0000000000029264	blr	x8
0000000000029268	ldr	x21, [x0]
000000000002926c	mov	w0, #0x1
0000000000029270	mov	w1, #0x28
0000000000029274	bl	0x4db20 ; symbol stub for: _calloc
0000000000029278	ldr	x8, [x21, #0xa8]!
000000000002927c	sub	x9, x21, #0x8
0000000000029280	stp	x8, x21, [x0]
0000000000029284	str	x0, [x8, #0x8]
0000000000029288	str	x0, [x21]
000000000002928c	ldr	x8, [x21, #0x10]
0000000000029290	add	x8, x8, #0x1
0000000000029294	str	x8, [x21, #0x10]
0000000000029298	stp	x9, x0, [x0, #0x18]
000000000002929c	str	x19, [x0, #0x10]!
00000000000292a0	str	x0, [x20, #0x8]
00000000000292a4	mov	x0, x20
00000000000292a8	ldp	x29, x30, [sp, #0x20]
00000000000292ac	ldp	x20, x19, [sp, #0x10]
00000000000292b0	ldp	x22, x21, [sp], #0x30
00000000000292b4	ret
__ZN12_GLOBAL__N_122ExceptionObjHolderImplD1Ev:
00000000000292b8	stp	x22, x21, [sp, #-0x30]!
00000000000292bc	stp	x20, x19, [sp, #0x10]
00000000000292c0	stp	x29, x30, [sp, #0x20]
00000000000292c4	add	x29, sp, #0x20
00000000000292c8	mov	x19, x0
00000000000292cc	adr	x8, #0x3986c
00000000000292d0	nop
00000000000292d4	str	x8, [x0]
00000000000292d8	adrp	x0, 63 ; 0x68000
00000000000292dc	add	x0, x0, #0xa00
00000000000292e0	ldr	x8, [x0]
00000000000292e4	blr	x8
00000000000292e8	ldr	x20, [x0]
00000000000292ec	add	x8, x20, #0xa0
00000000000292f0	ldr	x21, [x19, #0x8]
00000000000292f4	add	x9, x21, #0x8
00000000000292f8	ldar	x9, [x9]
00000000000292fc	cmp	x8, x9
0000000000029300	b.eq	0x29344
0000000000029304	mov	w0, #0x1
0000000000029308	mov	w1, #0x18
000000000002930c	bl	0x4db20 ; symbol stub for: _calloc
0000000000029310	str	x21, [x0, #0x10]
0000000000029314	ldr	x8, [x20, #0xc0]!
0000000000029318	stp	x8, x20, [x0]
000000000002931c	str	x0, [x8, #0x8]
0000000000029320	str	x0, [x20]
0000000000029324	ldr	x8, [x20, #0x10]
0000000000029328	add	x8, x8, #0x1
000000000002932c	str	x8, [x20, #0x10]
0000000000029330	mov	x0, x19
0000000000029334	ldp	x29, x30, [sp, #0x20]
0000000000029338	ldp	x20, x19, [sp, #0x10]
000000000002933c	ldp	x22, x21, [sp], #0x30
0000000000029340	ret
0000000000029344	ldr	x0, [x21, #0x10]
0000000000029348	ldp	x9, x8, [x0]
000000000002934c	str	x8, [x9, #0x8]
0000000000029350	ldr	x8, [x0, #0x8]
0000000000029354	str	x9, [x8]
0000000000029358	ldr	x8, [x20, #0xb8]
000000000002935c	sub	x8, x8, #0x1
0000000000029360	str	x8, [x20, #0xb8]
0000000000029364	bl	0x4dba4 ; symbol stub for: _free
0000000000029368	mov	x0, x19
000000000002936c	ldp	x29, x30, [sp, #0x20]
0000000000029370	ldp	x20, x19, [sp, #0x10]
0000000000029374	ldp	x22, x21, [sp], #0x30
0000000000029378	ret
__ZN12_GLOBAL__N_122ExceptionObjHolderImplD0Ev:
000000000002937c	stp	x29, x30, [sp, #-0x10]!
0000000000029380	mov	x29, sp
0000000000029384	bl	__ZN12_GLOBAL__N_122ExceptionObjHolderImplD1Ev
0000000000029388	ldp	x29, x30, [sp], #0x10
000000000002938c	b	0x4da54 ; symbol stub for: __ZdlPv
__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv:
0000000000029390	stp	x29, x30, [sp, #-0x10]!
0000000000029394	mov	x29, sp
0000000000029398	adrp	x0, 63 ; 0x68000
000000000002939c	add	x0, x0, #0xa00
00000000000293a0	ldr	x8, [x0]
00000000000293a4	blr	x8
00000000000293a8	ldr	x8, [x0]
00000000000293ac	add	x0, x8, #0x138
00000000000293b0	ldp	x29, x30, [sp], #0x10
00000000000293b4	b	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
__ZN6kotlin2gc22ConcurrentMarkAndSweep10ThreadData14OnSuspendForGCEv:
00000000000293b8	sub	sp, sp, #0x80
00000000000293bc	stp	x22, x21, [sp, #0x50]
00000000000293c0	stp	x20, x19, [sp, #0x60]
00000000000293c4	stp	x29, x30, [sp, #0x70]
00000000000293c8	add	x29, sp, #0x70
00000000000293cc	mov	x19, x0
00000000000293d0	adr	x0, #0x3f410
00000000000293d4	nop
00000000000293d8	stur	x0, [x29, #-0x30]
00000000000293dc	mov	w8, #0x1
00000000000293e0	sturb	w8, [x29, #-0x28]
00000000000293e4	bl	0x4d9b8 ; symbol stub for: __ZNSt3__15mutex4lockEv
00000000000293e8	adr	x22, #0x5945c
00000000000293ec	nop
00000000000293f0	ldarb	w8, [x22]
00000000000293f4	tbz	w8, #0x0, 0x294e0
00000000000293f8	add	x8, x19, #0x18
00000000000293fc	ldarb	w9, [x8]
0000000000029400	and	w21, w9, #0x1
0000000000029404	mov	w9, #0x1
0000000000029408	stlrb	w9, [x8]
000000000002940c	ldr	x20, [x19, #0x8]
0000000000029410	add	x0, x20, #0x8
0000000000029414	bl	__ZN6kotlin16MultiSourceQueueIPP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS3_EEE8Producer7PublishEv
0000000000029418	add	x0, x20, #0x98
000000000002941c	bl	__ZN6kotlin16MultiSourceQueueIP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS2_EEE8Producer7PublishEv
0000000000029420	add	x0, x20, #0xd0
0000000000029424	bl	__ZN6kotlin16MultiSourceQueueINS_2mm15ExtraObjectDataENS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_19ObjectPoolAllocatorIS2_EEE8Producer7PublishEv
0000000000029428	ldr	x8, [x20, #0x110]
000000000002942c	add	x0, x8, #0x70
0000000000029430	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer7PublishEv
0000000000029434	ldarb	w8, [x22]
0000000000029438	tbz	w8, #0x0, 0x29458
000000000002943c	adr	x20, #0x3f334
0000000000029440	nop
0000000000029444	sub	x1, x29, #0x30
0000000000029448	mov	x0, x20
000000000002944c	bl	0x4d988 ; symbol stub for: __ZNSt3__118condition_variable4waitERNS_11unique_lockINS_5mutexEEE
0000000000029450	ldarb	w8, [x22]
0000000000029454	tbnz	w8, #0x0, 0x29444
0000000000029458	ldurb	w8, [x29, #-0x28]
000000000002945c	cbz	w8, 0x29504
0000000000029460	ldur	x0, [x29, #-0x30]
0000000000029464	bl	0x4d9c4 ; symbol stub for: __ZNSt3__15mutex6unlockEv
0000000000029468	sturb	wzr, [x29, #-0x28]
000000000002946c	stp	xzr, xzr, [sp, #0x30]
0000000000029470	ldr	x8, [sp, #0x30]
0000000000029474	and	x8, x8, #0x1
0000000000029478	str	x8, [sp, #0x30]
000000000002947c	ldr	x1, [x19, #0x8]
0000000000029480	add	x0, sp, #0x30
0000000000029484	bl	__ZN6kotlin2gc23collectRootSetForThreadIN12_GLOBAL__N_110MarkTraitsEEEvRNT_9MarkQueueERNS_2mm10ThreadDataE
0000000000029488	add	x0, sp, #0x10
000000000002948c	add	x1, sp, #0x30
0000000000029490	bl	__ZN6kotlin2gc4MarkIN12_GLOBAL__N_110MarkTraitsEEENS0_9MarkStatsERNT_9MarkQueueE
0000000000029494	ldr	x20, [x19]
0000000000029498	ldr	q0, [sp, #0x10]
000000000002949c	str	q0, [sp]
00000000000294a0	ldr	x22, [sp, #0x20]
00000000000294a4	adr	x0, #0x3f33c
00000000000294a8	nop
00000000000294ac	bl	0x4d9b8 ; symbol stub for: __ZNSt3__15mutex4lockEv
00000000000294b0	ldr	q0, [x20, #0x180]
00000000000294b4	ldr	q1, [sp]
00000000000294b8	add.2d	v0, v0, v1
00000000000294bc	str	q0, [x20, #0x180]
00000000000294c0	ldr	x8, [x20, #0x190]
00000000000294c4	add	x8, x8, x22
00000000000294c8	str	x8, [x20, #0x190]
00000000000294cc	adr	x0, #0x3f314
00000000000294d0	nop
00000000000294d4	bl	0x4d9c4 ; symbol stub for: __ZNSt3__15mutex6unlockEv
00000000000294d8	add	x8, x19, #0x18
00000000000294dc	stlrb	w21, [x8]
00000000000294e0	ldurb	w8, [x29, #-0x28]
00000000000294e4	cbz	w8, 0x294f0
00000000000294e8	ldur	x0, [x29, #-0x30]
00000000000294ec	bl	0x4d9c4 ; symbol stub for: __ZNSt3__15mutex6unlockEv
00000000000294f0	ldp	x29, x30, [sp, #0x70]
00000000000294f4	ldp	x20, x19, [sp, #0x60]
00000000000294f8	ldp	x22, x21, [sp, #0x50]
00000000000294fc	add	sp, sp, #0x80
0000000000029500	ret
0000000000029504	adr	x1, #0x28c14 ; literal pool for: "unique_lock::unlock: not locked"
0000000000029508	nop
000000000002950c	mov	w0, #0x1
0000000000029510	bl	0x4d9ac ; symbol stub for: __ZNSt3__120__throw_system_errorEiPKc
0000000000029514	brk	#0x1
0000000000029518	bl	___clang_call_terminate
000000000002951c	mov	x20, x0
0000000000029520	add	x8, x19, #0x18
0000000000029524	stlrb	w21, [x8]
0000000000029528	ldurb	w8, [x29, #-0x28]
000000000002952c	cbz	w8, 0x29538
0000000000029530	ldur	x0, [x29, #-0x30]
0000000000029534	bl	0x4d9c4 ; symbol stub for: __ZNSt3__15mutex6unlockEv
0000000000029538	mov	x0, x20
000000000002953c	bl	___clang_call_terminate
0000000000029540	bl	___clang_call_terminate
__ZN6kotlin2gc22ConcurrentMarkAndSweep29CollectRootSetAndStartMarkingEv:
0000000000029544	sub	sp, sp, #0x70
0000000000029548	stp	x26, x25, [sp, #0x20]
000000000002954c	stp	x24, x23, [sp, #0x30]
0000000000029550	stp	x22, x21, [sp, #0x40]
0000000000029554	stp	x20, x19, [sp, #0x50]
0000000000029558	stp	x29, x30, [sp, #0x60]
000000000002955c	add	x29, sp, #0x60
0000000000029560	mov	x19, x0
0000000000029564	adr	x0, #0x3f27c
0000000000029568	nop
000000000002956c	bl	0x4d9b8 ; symbol stub for: __ZNSt3__15mutex4lockEv
0000000000029570	adr	x8, #0x592d4
0000000000029574	nop
0000000000029578	stlrb	wzr, [x8]
000000000002957c	ldr	x9, [x19, #0x170]
0000000000029580	and	x9, x9, #0x1
0000000000029584	str	x9, [x19, #0x170]
0000000000029588	str	xzr, [x19, #0x178]
000000000002958c	add	x0, x8, #0x2fc
0000000000029590	bl	0x4d94c ; symbol stub for: __ZNSt3__115recursive_mutex4lockEv
0000000000029594	nop
0000000000029598	ldr	x22, #0x59598
000000000002959c	cbz	x22, 0x295f8
00000000000295a0	add	x20, x19, #0x170
00000000000295a4	b	0x295b0
00000000000295a8	ldr	x22, [x22, #0x150]
00000000000295ac	cbz	x22, 0x295f8
00000000000295b0	ldr	x8, [x22, #0x118]
00000000000295b4	add	x8, x8, #0x60
00000000000295b8	ldarb	w8, [x8]
00000000000295bc	tbnz	w8, #0x0, 0x295a8
00000000000295c0	add	x21, x22, #0x8
00000000000295c4	add	x0, x22, #0x10
00000000000295c8	bl	__ZN6kotlin16MultiSourceQueueIPP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS3_EEE8Producer7PublishEv
00000000000295cc	add	x0, x22, #0xa0
00000000000295d0	bl	__ZN6kotlin16MultiSourceQueueIP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS2_EEE8Producer7PublishEv
00000000000295d4	add	x0, x22, #0xd8
00000000000295d8	bl	__ZN6kotlin16MultiSourceQueueINS_2mm15ExtraObjectDataENS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_19ObjectPoolAllocatorIS2_EEE8Producer7PublishEv
00000000000295dc	ldr	x8, [x22, #0x118]
00000000000295e0	add	x0, x8, #0x70
00000000000295e4	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer7PublishEv
00000000000295e8	mov	x0, x20
00000000000295ec	mov	x1, x21
00000000000295f0	bl	__ZN6kotlin2gc23collectRootSetForThreadIN12_GLOBAL__N_110MarkTraitsEEEvRNT_9MarkQueueERNS_2mm10ThreadDataE
00000000000295f4	b	0x295a8
00000000000295f8	adr	x0, #0x59548
00000000000295fc	nop
0000000000029600	bl	0x4d958 ; symbol stub for: __ZNSt3__115recursive_mutex6unlockEv
0000000000029604	adr	x21, #0x595f4
0000000000029608	nop
000000000002960c	mov	w20, #0x1
0000000000029610	ldaxrb	w8, [x21]
0000000000029614	stxrb	w9, w20, [x21]
0000000000029618	cbnz	w9, 0x29610
000000000002961c	tbz	w8, #0x0, 0x29628
0000000000029620	bl	0x4de20 ; symbol stub for: _sched_yield
0000000000029624	b	0x29610
0000000000029628	add	x22, sp, #0x8
000000000002962c	stp	x22, x22, [sp, #0x8]
0000000000029630	str	xzr, [sp, #0x18]
0000000000029634	adr	x20, #0x595ac
0000000000029638	nop
000000000002963c	ldr	x8, [x20, #0x8]
0000000000029640	adrp	x23, 89 ; 0x82000
0000000000029644	cmp	x8, x20
0000000000029648	b.eq	0x296e4
000000000002964c	adrp	x24, 89 ; 0x82000
0000000000029650	b	0x29684
0000000000029654	ldr	x0, [x9, #0x10]
0000000000029658	ldp	x9, x8, [x0]
000000000002965c	str	x8, [x9, #0x8]
0000000000029660	ldr	x8, [x0, #0x8]
0000000000029664	str	x9, [x8]
0000000000029668	ldr	x8, [x24, #0xbd8]
000000000002966c	sub	x8, x8, #0x1
0000000000029670	str	x8, [x24, #0xbd8]
0000000000029674	bl	0x4dba4 ; symbol stub for: _free
0000000000029678	mov	x8, x25
000000000002967c	cmp	x25, x20
0000000000029680	b.eq	0x296e4
0000000000029684	ldp	x25, x9, [x8, #0x8]
0000000000029688	add	x10, x9, #0x8
000000000002968c	ldar	x10, [x10]
0000000000029690	cbz	x10, 0x29654
0000000000029694	cmp	x22, x8
0000000000029698	b.eq	0x29678
000000000002969c	ldr	x9, [x8, #0x8]
00000000000296a0	cmp	x9, x22
00000000000296a4	b.eq	0x29678
00000000000296a8	ldr	x10, [x8]
00000000000296ac	str	x9, [x10, #0x8]
00000000000296b0	ldr	x9, [x8, #0x8]
00000000000296b4	str	x10, [x9]
00000000000296b8	ldr	x9, [sp, #0x8]
00000000000296bc	str	x8, [x9, #0x8]
00000000000296c0	stp	x9, x22, [x8]
00000000000296c4	ldr	x9, [x23, #0xbf0]
00000000000296c8	sub	x9, x9, #0x1
00000000000296cc	str	x9, [x23, #0xbf0]
00000000000296d0	ldr	x9, [sp, #0x18]
00000000000296d4	add	x9, x9, #0x1
00000000000296d8	str	x8, [sp, #0x8]
00000000000296dc	str	x9, [sp, #0x18]
00000000000296e0	b	0x29678
00000000000296e4	ldr	x8, [x23, #0xbf0]
00000000000296e8	cbz	x8, 0x29724
00000000000296ec	ldp	x8, x0, [x20]
00000000000296f0	ldr	x9, [x8, #0x8]
00000000000296f4	ldr	x10, [x0]
00000000000296f8	str	x9, [x10, #0x8]
00000000000296fc	ldr	x8, [x8, #0x8]
0000000000029700	str	x10, [x8]
0000000000029704	str	xzr, [x20, #0x10]
0000000000029708	cmp	x0, x20
000000000002970c	b.eq	0x29724
0000000000029710	ldr	x22, [x0, #0x8]
0000000000029714	bl	0x4dba4 ; symbol stub for: _free
0000000000029718	mov	x0, x22
000000000002971c	cmp	x22, x20
0000000000029720	b.ne	0x29710
0000000000029724	ldr	x8, [sp, #0x18]
0000000000029728	cbz	x8, 0x29768
000000000002972c	ldp	x10, x9, [sp, #0x8]
0000000000029730	ldr	x11, [x10, #0x8]
0000000000029734	ldr	x12, [x9]
0000000000029738	str	x11, [x12, #0x8]
000000000002973c	ldr	x11, [x10, #0x8]
0000000000029740	str	x12, [x11]
0000000000029744	ldr	x11, [x20]
0000000000029748	str	x9, [x11, #0x8]
000000000002974c	str	x11, [x9]
0000000000029750	str	x10, [x20]
0000000000029754	str	x20, [x10, #0x8]
0000000000029758	ldr	x9, [x20, #0x10]
000000000002975c	add	x8, x9, x8
0000000000029760	str	x8, [x20, #0x10]
0000000000029764	str	xzr, [sp, #0x18]
0000000000029768	stlrb	wzr, [x21]
000000000002976c	adr	x20, #0x59454
0000000000029770	nop
0000000000029774	mov	w22, #0x1
0000000000029778	ldaxrb	w8, [x20]
000000000002977c	stxrb	w9, w22, [x20]
0000000000029780	cbnz	w9, 0x29778
0000000000029784	tbz	w8, #0x0, 0x29790
0000000000029788	bl	0x4de20 ; symbol stub for: _sched_yield
000000000002978c	b	0x29778
0000000000029790	mov	w22, #0x1
0000000000029794	ldaxrb	w8, [x21]
0000000000029798	stxrb	w9, w22, [x21]
000000000002979c	cbnz	w9, 0x29794
00000000000297a0	tbz	w8, #0x0, 0x297ac
00000000000297a4	bl	0x4de20 ; symbol stub for: _sched_yield
00000000000297a8	b	0x29794
00000000000297ac	mov	w11, #0x0
00000000000297b0	adr	x8, #0x593e8
00000000000297b4	nop
00000000000297b8	ldr	x14, [x8]
00000000000297bc	ldr	x12, [x8, #0x38]
00000000000297c0	adr	x8, #0x59408
00000000000297c4	nop
00000000000297c8	adr	x9, #0x593c8
00000000000297cc	nop
00000000000297d0	mov	x13, x14
00000000000297d4	mov	x10, x11
00000000000297d8	cmp	w10, #0x2
00000000000297dc	b.eq	0x29ab8
00000000000297e0	cmp	w10, #0x1
00000000000297e4	b.eq	0x297f0
00000000000297e8	cbnz	w10, 0x297d8
00000000000297ec	b	0x29800
00000000000297f0	mov	w10, #0x2
00000000000297f4	cmp	x13, x8
00000000000297f8	b.eq	0x297d8
00000000000297fc	b	0x29814
0000000000029800	mov	w11, #0x1
0000000000029804	mov	x14, x12
0000000000029808	cmp	x13, x9
000000000002980c	b.eq	0x297d0
0000000000029810	b	0x29818
0000000000029814	mov	x10, x11
0000000000029818	adrp	x11, 89 ; 0x82000
000000000002981c	adr	x12, #0x2adc4
0000000000029820	nop
0000000000029824	cbz	w10, 0x29838
0000000000029828	cmp	w10, #0x1
000000000002982c	b.ne	0x29af8
0000000000029830	add	x14, x13, #0x10
0000000000029834	b	0x2983c
0000000000029838	ldr	x14, [x13, #0x10]
000000000002983c	ldr	x14, [x14]
0000000000029840	cmp	x14, #0x2
0000000000029844	b.hs	0x2989c
0000000000029848	cbz	w10, 0x298d0
000000000002984c	cmp	w10, #0x1
0000000000029850	b.ne	0x29ab8
0000000000029854	ldr	x14, [x13, #0x8]
0000000000029858	ldr	x15, [x11, #0xbd0]
000000000002985c	mov	w10, #0x1
0000000000029860	cmp	w10, #0x2
0000000000029864	b.eq	0x29ab8
0000000000029868	cmp	w10, #0x1
000000000002986c	b.eq	0x29878
0000000000029870	cbnz	w10, 0x29860
0000000000029874	b	0x29888
0000000000029878	mov	w10, #0x2
000000000002987c	cmp	x14, x8
0000000000029880	b.eq	0x29860
0000000000029884	b	0x29aac
0000000000029888	mov	x13, x14
000000000002988c	cmp	x14, x9
0000000000029890	mov	x14, x15
0000000000029894	b.eq	0x2985c
0000000000029898	b	0x29824
000000000002989c	ldr	x15, [x14]
00000000000298a0	tst	x15, #0x3
00000000000298a4	b.eq	0x299ac
00000000000298a8	ldr	x15, [x14]
00000000000298ac	and	x15, x15, #0xfffffffffffffffc
00000000000298b0	ldr	x15, [x15]
00000000000298b4	cmp	x15, x12
00000000000298b8	b.eq	0x29a00
00000000000298bc	ldr	w16, [x15, #0x28]
00000000000298c0	cmp	w16, #0x1
00000000000298c4	b.lt	0x29848
00000000000298c8	mov	x16, #0x0
00000000000298cc	b	0x29934
00000000000298d0	mov	w15, #0x0
00000000000298d4	ldr	x14, [x13, #0x8]
00000000000298d8	ldr	x16, [x11, #0xbd0]
00000000000298dc	mov	x10, x15
00000000000298e0	cmp	w10, #0x2
00000000000298e4	b.eq	0x29ab8
00000000000298e8	cmp	w10, #0x1
00000000000298ec	b.eq	0x298f8
00000000000298f0	cbnz	w10, 0x298e0
00000000000298f4	b	0x29908
00000000000298f8	mov	w10, #0x2
00000000000298fc	cmp	x14, x8
0000000000029900	b.eq	0x298e0
0000000000029904	b	0x29aa0
0000000000029908	mov	w15, #0x1
000000000002990c	mov	x13, x14
0000000000029910	cmp	x14, x9
0000000000029914	mov	x14, x16
0000000000029918	b.eq	0x298dc
000000000002991c	b	0x29824
0000000000029920	clrex
0000000000029924	add	x16, x16, #0x1
0000000000029928	ldrsw	x17, [x15, #0x28]
000000000002992c	cmp	x16, x17
0000000000029930	b.ge	0x29848
0000000000029934	ldr	x17, [x15, #0x20]
0000000000029938	ldrsw	x17, [x17, x16, lsl #2]
000000000002993c	ldr	x17, [x17, x14]
0000000000029940	cbz	x17, 0x29924
0000000000029944	ldr	x0, [x17]
0000000000029948	and	x0, x0, #0x3
000000000002994c	cmp	x17, #0x2
0000000000029950	ccmp	x0, #0x0, #0x0, hs
0000000000029954	b.ne	0x29924
0000000000029958	ldur	x0, [x17, #-0x8]
000000000002995c	tbnz	w0, #0x0, 0x29924
0000000000029960	sub	x17, x17, #0x8
0000000000029964	orr	x1, x0, #0x1
0000000000029968	ldxr	x2, [x17]
000000000002996c	cmp	x2, x0
0000000000029970	b.ne	0x29920
0000000000029974	stxr	w2, x1, [x17]
0000000000029978	cbnz	w2, 0x29968
000000000002997c	ldr	x0, [x19, #0x170]
0000000000029980	ldr	x1, [x19, #0x170]
0000000000029984	and	x1, x1, #0x1
0000000000029988	orr	x1, x1, x17
000000000002998c	str	x1, [x19, #0x170]
0000000000029990	ldr	x1, [x17]
0000000000029994	bfxil	x0, x1, #0, #1
0000000000029998	str	x0, [x17]
000000000002999c	ldr	x17, [x19, #0x178]
00000000000299a0	add	x17, x17, #0x1
00000000000299a4	str	x17, [x19, #0x178]
00000000000299a8	b	0x29924
00000000000299ac	ldur	x15, [x14, #-0x8]
00000000000299b0	tbnz	w15, #0x0, 0x29848
00000000000299b4	sub	x14, x14, #0x8
00000000000299b8	orr	x16, x15, #0x1
00000000000299bc	ldxr	x17, [x14]
00000000000299c0	cmp	x17, x15
00000000000299c4	b.ne	0x29a98
00000000000299c8	stxr	w17, x16, [x14]
00000000000299cc	cbnz	w17, 0x299bc
00000000000299d0	ldr	x15, [x19, #0x170]
00000000000299d4	ldr	x16, [x19, #0x170]
00000000000299d8	and	x16, x16, #0x1
00000000000299dc	orr	x16, x16, x14
00000000000299e0	str	x16, [x19, #0x170]
00000000000299e4	ldr	x16, [x14]
00000000000299e8	bfxil	x15, x16, #0, #1
00000000000299ec	str	x15, [x14]
00000000000299f0	ldr	x14, [x19, #0x178]
00000000000299f4	add	x14, x14, #0x1
00000000000299f8	str	x14, [x19, #0x178]
00000000000299fc	b	0x29848
0000000000029a00	ldr	w15, [x14, #0x8]
0000000000029a04	cbz	w15, 0x29848
0000000000029a08	mov	w15, #0x0
0000000000029a0c	add	x16, x14, #0x10
0000000000029a10	b	0x29a28
0000000000029a14	clrex
0000000000029a18	add	w15, w15, #0x1
0000000000029a1c	ldr	w17, [x14, #0x8]
0000000000029a20	cmp	w15, w17
0000000000029a24	b.hs	0x29848
0000000000029a28	ldr	x17, [x16, w15, sxtw #3]
0000000000029a2c	cbz	x17, 0x29a18
0000000000029a30	ldr	x0, [x17]
0000000000029a34	and	x0, x0, #0x3
0000000000029a38	cmp	x17, #0x2
0000000000029a3c	ccmp	x0, #0x0, #0x0, hs
0000000000029a40	b.ne	0x29a18
0000000000029a44	ldur	x0, [x17, #-0x8]
0000000000029a48	tbnz	w0, #0x0, 0x29a18
0000000000029a4c	sub	x17, x17, #0x8
0000000000029a50	orr	x1, x0, #0x1
0000000000029a54	ldxr	x2, [x17]
0000000000029a58	cmp	x2, x0
0000000000029a5c	b.ne	0x29a14
0000000000029a60	stxr	w2, x1, [x17]
0000000000029a64	cbnz	w2, 0x29a54
0000000000029a68	ldr	x0, [x19, #0x170]
0000000000029a6c	ldr	x1, [x19, #0x170]
0000000000029a70	and	x1, x1, #0x1
0000000000029a74	orr	x1, x1, x17
0000000000029a78	str	x1, [x19, #0x170]
0000000000029a7c	ldr	x1, [x17]
0000000000029a80	bfxil	x0, x1, #0, #1
0000000000029a84	str	x0, [x17]
0000000000029a88	ldr	x17, [x19, #0x178]
0000000000029a8c	add	x17, x17, #0x1
0000000000029a90	str	x17, [x19, #0x178]
0000000000029a94	b	0x29a18
0000000000029a98	clrex
0000000000029a9c	b	0x29848
0000000000029aa0	mov	x10, x15
0000000000029aa4	mov	x13, x14
0000000000029aa8	b	0x29824
0000000000029aac	mov	w10, #0x1
0000000000029ab0	mov	x13, x14
0000000000029ab4	b	0x29824
0000000000029ab8	add	x8, x20, #0x38
0000000000029abc	stlrb	wzr, [x8]
0000000000029ac0	stlrb	wzr, [x20]
0000000000029ac4	adr	x19, #0x3ecac
0000000000029ac8	nop
0000000000029acc	mov	x0, x19
0000000000029ad0	bl	0x4d970 ; symbol stub for: __ZNSt3__118condition_variable10notify_allEv
0000000000029ad4	add	x0, x19, #0x70
0000000000029ad8	bl	0x4d9c4 ; symbol stub for: __ZNSt3__15mutex6unlockEv
0000000000029adc	ldp	x29, x30, [sp, #0x60]
0000000000029ae0	ldp	x20, x19, [sp, #0x50]
0000000000029ae4	ldp	x22, x21, [sp, #0x40]
0000000000029ae8	ldp	x24, x23, [sp, #0x30]
0000000000029aec	ldp	x26, x25, [sp, #0x20]
0000000000029af0	add	sp, sp, #0x70
0000000000029af4	ret
0000000000029af8	adr	x2, #0x2859a ; literal pool for: "Cannot dereference"
0000000000029afc	nop
0000000000029b00	mov	w0, #0x0
0000000000029b04	bl	__ZN6kotlin8internal24RuntimeAssertFailedPanicEbPKcS2_z
0000000000029b08	brk	#0x1
0000000000029b0c	bl	___clang_call_terminate
0000000000029b10	bl	___clang_call_terminate
0000000000029b14	bl	___clang_call_terminate
0000000000029b18	bl	___clang_call_terminate
0000000000029b1c	bl	___clang_call_terminate
0000000000029b20	bl	___clang_call_terminate
__ZN6kotlin2gc23collectRootSetForThreadIN12_GLOBAL__N_110MarkTraitsEEEvRNT_9MarkQueueERNS_2mm10ThreadDataE:
0000000000029b24	sub	sp, sp, #0x20
0000000000029b28	stp	x29, x30, [sp, #0x10]
0000000000029b2c	add	x29, sp, #0x10
0000000000029b30	ldr	x8, [x1, #0x110]
0000000000029b34	str	xzr, [x8, #0x28]
0000000000029b38	str	xzr, [x8, #0x38]
0000000000029b3c	ldr	x9, [x8]
0000000000029b40	add	x9, x9, #0x8
0000000000029b44	ldar	x9, [x9]
0000000000029b48	str	x9, [x8, #0x30]
0000000000029b4c	ldr	x9, [x8]
0000000000029b50	ldar	w9, [x9]
0000000000029b54	sxtw	x9, w9
0000000000029b58	str	x9, [x8, #0x40]
0000000000029b5c	ldr	x9, [x1, #0x108]
0000000000029b60	cbz	x9, 0x29bc0
0000000000029b64	ldpsw	x8, x10, [x9, #0x10]
0000000000029b68	lsl	x11, x8, #3
0000000000029b6c	add	x8, x9, x11
0000000000029b70	add	x8, x8, #0x18
0000000000029b74	add	x10, x8, x10, lsl #3
0000000000029b78	sub	x10, x10, x11
0000000000029b7c	sub	x10, x10, #0x18
0000000000029b80	stp	x8, x10, [sp]
0000000000029b84	cbz	x9, 0x29bc8
0000000000029b88	cmp	x8, x10
0000000000029b8c	b.lo	0x29bc8
0000000000029b90	ldr	x9, [x9, #0x8]
0000000000029b94	cbz	x9, 0x29bc0
0000000000029b98	ldpsw	x8, x10, [x9, #0x10]
0000000000029b9c	lsl	x11, x8, #3
0000000000029ba0	add	x12, x9, x11
0000000000029ba4	add	x8, x12, #0x18
0000000000029ba8	add	x10, x12, x10, lsl #3
0000000000029bac	sub	x10, x10, x11
0000000000029bb0	stp	x8, x10, [sp]
0000000000029bb4	cmp	x8, x10
0000000000029bb8	b.hs	0x29b90
0000000000029bbc	b	0x29bc8
0000000000029bc0	mov	x8, #0x0
0000000000029bc4	stp	xzr, xzr, [sp]
0000000000029bc8	mov	w14, #0x0
0000000000029bcc	ldp	x13, x12, [x1, #0x40]
0000000000029bd0	mov	x10, x9
0000000000029bd4	mov	x11, x14
0000000000029bd8	cmp	w11, #0x2
0000000000029bdc	b.eq	0x29ef0
0000000000029be0	cmp	w11, #0x1
0000000000029be4	b.eq	0x29bf0
0000000000029be8	cbnz	w11, 0x29bd8
0000000000029bec	b	0x29c00
0000000000029bf0	mov	w14, #0x2
0000000000029bf4	cmp	x12, x10
0000000000029bf8	b.eq	0x29bd4
0000000000029bfc	b	0x29c10
0000000000029c00	cbnz	x10, 0x29c10
0000000000029c04	mov	w14, #0x1
0000000000029c08	mov	x9, x13
0000000000029c0c	cbz	x8, 0x29bd0
0000000000029c10	adr	x9, #0x2a9d0
0000000000029c14	nop
0000000000029c18	mov	x12, x8
0000000000029c1c	cbz	w11, 0x29c2c
0000000000029c20	cmp	w11, #0x1
0000000000029c24	b.ne	0x29efc
0000000000029c28	mov	x12, x10
0000000000029c2c	ldr	x12, [x12]
0000000000029c30	cmp	x12, #0x2
0000000000029c34	b.hs	0x29c88
0000000000029c38	cmp	w11, #0x1
0000000000029c3c	b.ne	0x29e34
0000000000029c40	add	x12, x10, #0x8
0000000000029c44	ldp	x14, x13, [x1, #0x40]
0000000000029c48	mov	w11, #0x1
0000000000029c4c	cmp	w11, #0x2
0000000000029c50	b.eq	0x29ef0
0000000000029c54	cmp	w11, #0x1
0000000000029c58	b.eq	0x29c64
0000000000029c5c	cbnz	w11, 0x29c4c
0000000000029c60	b	0x29c74
0000000000029c64	mov	w11, #0x2
0000000000029c68	cmp	x12, x13
0000000000029c6c	b.eq	0x29c4c
0000000000029c70	b	0x29e8c
0000000000029c74	mov	x10, x12
0000000000029c78	cbnz	x12, 0x29c18
0000000000029c7c	mov	x12, x14
0000000000029c80	cbz	x8, 0x29c48
0000000000029c84	b	0x29c18
0000000000029c88	ldr	x13, [x12]
0000000000029c8c	tst	x13, #0x3
0000000000029c90	b.eq	0x29d48
0000000000029c94	ldr	x13, [x12]
0000000000029c98	and	x13, x13, #0xfffffffffffffffc
0000000000029c9c	ldr	x13, [x13]
0000000000029ca0	cmp	x13, x9
0000000000029ca4	b.eq	0x29d9c
0000000000029ca8	ldr	w14, [x13, #0x28]
0000000000029cac	cmp	w14, #0x1
0000000000029cb0	b.lt	0x29c38
0000000000029cb4	mov	x14, #0x0
0000000000029cb8	b	0x29cd0
0000000000029cbc	clrex
0000000000029cc0	add	x14, x14, #0x1
0000000000029cc4	ldrsw	x15, [x13, #0x28]
0000000000029cc8	cmp	x14, x15
0000000000029ccc	b.ge	0x29c38
0000000000029cd0	ldr	x15, [x13, #0x20]
0000000000029cd4	ldrsw	x15, [x15, x14, lsl #2]
0000000000029cd8	ldr	x15, [x15, x12]
0000000000029cdc	cbz	x15, 0x29cc0
0000000000029ce0	ldr	x16, [x15]
0000000000029ce4	and	x16, x16, #0x3
0000000000029ce8	cmp	x15, #0x2
0000000000029cec	ccmp	x16, #0x0, #0x0, hs
0000000000029cf0	b.ne	0x29cc0
0000000000029cf4	ldur	x16, [x15, #-0x8]
0000000000029cf8	tbnz	w16, #0x0, 0x29cc0
0000000000029cfc	sub	x15, x15, #0x8
0000000000029d00	orr	x17, x16, #0x1
0000000000029d04	ldxr	x2, [x15]
0000000000029d08	cmp	x2, x16
0000000000029d0c	b.ne	0x29cbc
0000000000029d10	stxr	w2, x17, [x15]
0000000000029d14	cbnz	w2, 0x29d04
0000000000029d18	ldr	x16, [x0]
0000000000029d1c	ldr	x17, [x0]
0000000000029d20	and	x17, x17, #0x1
0000000000029d24	orr	x17, x17, x15
0000000000029d28	str	x17, [x0]
0000000000029d2c	ldr	x17, [x15]
0000000000029d30	bfxil	x16, x17, #0, #1
0000000000029d34	str	x16, [x15]
0000000000029d38	ldr	x15, [x0, #0x8]
0000000000029d3c	add	x15, x15, #0x1
0000000000029d40	str	x15, [x0, #0x8]
0000000000029d44	b	0x29cc0
0000000000029d48	ldur	x13, [x12, #-0x8]
0000000000029d4c	tbnz	w13, #0x0, 0x29c38
0000000000029d50	sub	x12, x12, #0x8
0000000000029d54	orr	x14, x13, #0x1
0000000000029d58	ldxr	x15, [x12]
0000000000029d5c	cmp	x15, x13
0000000000029d60	b.ne	0x29e84
0000000000029d64	stxr	w15, x14, [x12]
0000000000029d68	cbnz	w15, 0x29d58
0000000000029d6c	ldr	x13, [x0]
0000000000029d70	ldr	x14, [x0]
0000000000029d74	and	x14, x14, #0x1
0000000000029d78	orr	x14, x14, x12
0000000000029d7c	str	x14, [x0]
0000000000029d80	ldr	x14, [x12]
0000000000029d84	bfxil	x13, x14, #0, #1
0000000000029d88	str	x13, [x12]
0000000000029d8c	ldr	x12, [x0, #0x8]
0000000000029d90	add	x12, x12, #0x1
0000000000029d94	str	x12, [x0, #0x8]
0000000000029d98	b	0x29c38
0000000000029d9c	ldr	w13, [x12, #0x8]
0000000000029da0	cbz	w13, 0x29c38
0000000000029da4	mov	w13, #0x0
0000000000029da8	add	x14, x12, #0x10
0000000000029dac	b	0x29dc4
0000000000029db0	clrex
0000000000029db4	add	w13, w13, #0x1
0000000000029db8	ldr	w15, [x12, #0x8]
0000000000029dbc	cmp	w13, w15
0000000000029dc0	b.hs	0x29c38
0000000000029dc4	ldr	x15, [x14, w13, sxtw #3]
0000000000029dc8	cbz	x15, 0x29db4
0000000000029dcc	ldr	x16, [x15]
0000000000029dd0	and	x16, x16, #0x3
0000000000029dd4	cmp	x15, #0x2
0000000000029dd8	ccmp	x16, #0x0, #0x0, hs
0000000000029ddc	b.ne	0x29db4
0000000000029de0	ldur	x16, [x15, #-0x8]
0000000000029de4	tbnz	w16, #0x0, 0x29db4
0000000000029de8	sub	x15, x15, #0x8
0000000000029dec	orr	x17, x16, #0x1
0000000000029df0	ldxr	x2, [x15]
0000000000029df4	cmp	x2, x16
0000000000029df8	b.ne	0x29db0
0000000000029dfc	stxr	w2, x17, [x15]
0000000000029e00	cbnz	w2, 0x29df0
0000000000029e04	ldr	x16, [x0]
0000000000029e08	ldr	x17, [x0]
0000000000029e0c	and	x17, x17, #0x1
0000000000029e10	orr	x17, x17, x15
0000000000029e14	str	x17, [x0]
0000000000029e18	ldr	x17, [x15]
0000000000029e1c	bfxil	x16, x17, #0, #1
0000000000029e20	str	x16, [x15]
0000000000029e24	ldr	x15, [x0, #0x8]
0000000000029e28	add	x15, x15, #0x1
0000000000029e2c	str	x15, [x0, #0x8]
0000000000029e30	b	0x29db4
0000000000029e34	cmp	w11, #0x2
0000000000029e38	b.eq	0x29ef0
0000000000029e3c	add	x8, x8, #0x8
0000000000029e40	str	x8, [sp]
0000000000029e44	cbz	x10, 0x29ea0
0000000000029e48	ldr	x11, [sp, #0x8]
0000000000029e4c	cmp	x8, x11
0000000000029e50	b.lo	0x29ea0
0000000000029e54	ldr	x10, [x10, #0x8]
0000000000029e58	cbz	x10, 0x29e98
0000000000029e5c	ldpsw	x8, x11, [x10, #0x10]
0000000000029e60	lsl	x12, x8, #3
0000000000029e64	add	x13, x10, x12
0000000000029e68	add	x8, x13, #0x18
0000000000029e6c	add	x11, x13, x11, lsl #3
0000000000029e70	sub	x11, x11, x12
0000000000029e74	stp	x8, x11, [sp]
0000000000029e78	cmp	x8, x11
0000000000029e7c	b.hs	0x29e54
0000000000029e80	b	0x29ea0
0000000000029e84	clrex
0000000000029e88	b	0x29c38
0000000000029e8c	mov	w11, #0x1
0000000000029e90	mov	x10, x12
0000000000029e94	b	0x29c18
0000000000029e98	mov	x8, #0x0
0000000000029e9c	stp	xzr, xzr, [sp]
0000000000029ea0	mov	w14, #0x0
0000000000029ea4	ldp	x13, x12, [x1, #0x40]
0000000000029ea8	mov	x15, x10
0000000000029eac	mov	x10, x15
0000000000029eb0	mov	x11, x14
0000000000029eb4	cmp	w11, #0x2
0000000000029eb8	b.eq	0x29ef0
0000000000029ebc	cmp	w11, #0x1
0000000000029ec0	b.eq	0x29ecc
0000000000029ec4	cbnz	w11, 0x29eb4
0000000000029ec8	b	0x29edc
0000000000029ecc	mov	w14, #0x2
0000000000029ed0	cmp	x12, x10
0000000000029ed4	b.eq	0x29eb0
0000000000029ed8	b	0x29c18
0000000000029edc	cbnz	x10, 0x29c18
0000000000029ee0	mov	w14, #0x1
0000000000029ee4	mov	x15, x13
0000000000029ee8	cbz	x8, 0x29eac
0000000000029eec	b	0x29c18
0000000000029ef0	ldp	x29, x30, [sp, #0x10]
0000000000029ef4	add	sp, sp, #0x20
0000000000029ef8	ret
0000000000029efc	adr	x2, #0x28196 ; literal pool for: "Cannot dereference"
0000000000029f00	nop
0000000000029f04	mov	w0, #0x0
0000000000029f08	bl	__ZN6kotlin8internal24RuntimeAssertFailedPanicEbPKcS2_z
0000000000029f0c	brk	#0x1
0000000000029f10	bl	___clang_call_terminate
__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer7PublishEv:
0000000000029f14	stp	x22, x21, [sp, #-0x30]!
0000000000029f18	stp	x20, x19, [sp, #0x10]
0000000000029f1c	stp	x29, x30, [sp, #0x20]
0000000000029f20	add	x29, sp, #0x20
0000000000029f24	ldr	x8, [x0, #0x18]
0000000000029f28	cbz	x8, 0x29fa0
0000000000029f2c	mov	x19, x0
0000000000029f30	ldr	x8, [x0]
0000000000029f34	add	x20, x8, #0x18
0000000000029f38	mov	w21, #0x1
0000000000029f3c	ldaxrb	w8, [x20]
0000000000029f40	stxrb	w9, w21, [x20]
0000000000029f44	cbnz	w9, 0x29f3c
0000000000029f48	tbz	w8, #0x0, 0x29f54
0000000000029f4c	bl	0x4de20 ; symbol stub for: _sched_yield
0000000000029f50	b	0x29f3c
0000000000029f54	ldr	x8, [x19]
0000000000029f58	ldr	x9, [x8]
0000000000029f5c	cbz	x9, 0x29f64
0000000000029f60	ldr	x8, [x8, #0x8]
0000000000029f64	ldr	x9, [x19, #0x18]
0000000000029f68	str	xzr, [x19, #0x18]
0000000000029f6c	ldr	x0, [x8]
0000000000029f70	str	x9, [x8]
0000000000029f74	cbz	x0, 0x29f80
0000000000029f78	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE4NodeD2Ev
0000000000029f7c	bl	_mi_free
0000000000029f80	ldr	x8, [x19]
0000000000029f84	ldp	x9, x10, [x19, #0x20]
0000000000029f88	str	x9, [x8, #0x8]
0000000000029f8c	stp	xzr, xzr, [x19, #0x20]
0000000000029f90	ldr	x9, [x8, #0x10]
0000000000029f94	add	x9, x9, x10
0000000000029f98	str	x9, [x8, #0x10]
0000000000029f9c	stlrb	wzr, [x20]
0000000000029fa0	ldp	x29, x30, [sp, #0x20]
0000000000029fa4	ldp	x20, x19, [sp, #0x10]
0000000000029fa8	ldp	x22, x21, [sp], #0x30
0000000000029fac	ret
0000000000029fb0	bl	___clang_call_terminate
__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE4NodeD2Ev:
0000000000029fb4	stp	x20, x19, [sp, #-0x20]!
0000000000029fb8	stp	x29, x30, [sp, #0x10]
0000000000029fbc	add	x29, sp, #0x10
0000000000029fc0	mov	x19, x0
0000000000029fc4	ldr	x0, [x0]
0000000000029fc8	str	xzr, [x19]
0000000000029fcc	cbz	x0, 0x29fd8
0000000000029fd0	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE4NodeD2Ev
0000000000029fd4	bl	_mi_free
0000000000029fd8	mov	x0, x19
0000000000029fdc	ldp	x29, x30, [sp, #0x10]
0000000000029fe0	ldp	x20, x19, [sp], #0x20
0000000000029fe4	ret
__ZN6kotlin2gc4MarkIN12_GLOBAL__N_110MarkTraitsEEENS0_9MarkStatsERNT_9MarkQueueE:
0000000000029fe8	stp	x20, x19, [sp, #-0x20]!
0000000000029fec	stp	x29, x30, [sp, #0x10]
0000000000029ff0	add	x29, sp, #0x10
0000000000029ff4	mov	x19, x1
0000000000029ff8	mov	x20, x0
0000000000029ffc	stp	xzr, xzr, [x0]
000000000002a000	ldr	x8, [x1, #0x8]
000000000002a004	str	x8, [x0, #0x10]
000000000002a008	bl	0x4d9dc ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
000000000002a00c	ldr	x8, [x19, #0x8]
000000000002a010	cbz	x8, 0x2a28c
000000000002a014	adr	x8, #0x2a5cc
000000000002a018	nop
000000000002a01c	ldr	x9, [x19]
000000000002a020	ldr	x10, [x19]
000000000002a024	ands	x10, x10, #0xfffffffffffffffe
000000000002a028	b.eq	0x2a054
000000000002a02c	ldr	x11, [x10]
000000000002a030	ldr	x12, [x19]
000000000002a034	bfxil	x11, x12, #0, #1
000000000002a038	str	x11, [x19]
000000000002a03c	ldr	x11, [x10]
000000000002a040	and	x11, x11, #0x1
000000000002a044	str	x11, [x10]
000000000002a048	ldr	x10, [x19, #0x8]
000000000002a04c	sub	x10, x10, #0x1
000000000002a050	str	x10, [x19, #0x8]
000000000002a054	sub	x9, x9, #0x8
000000000002a058	and	x10, x9, #0xfffffffffffffffe
000000000002a05c	ldr	x9, [x20]
000000000002a060	add	x9, x9, #0x1
000000000002a064	str	x9, [x20]
000000000002a068	ldr	x9, [x10, #0x10]
000000000002a06c	and	x9, x9, #0xfffffffffffffffc
000000000002a070	ldr	x9, [x9]
000000000002a074	ldrsw	x9, [x9, #0x14]
000000000002a078	tbnz	w9, #0x1f, 0x2a088
000000000002a07c	and	x9, x9, #0xffffffff
000000000002a080	add	x11, x9, #0xf
000000000002a084	b	0x2a094
000000000002a088	ldr	w11, [x10, #0x18]
000000000002a08c	mneg	x9, x9, x11
000000000002a090	add	x11, x9, #0x1f
000000000002a094	add	x9, x10, #0x10
000000000002a098	and	x11, x11, #0xfffffffffffffff8
000000000002a09c	add	x11, x11, #0xf
000000000002a0a0	and	x11, x11, #0xfffffffffffffff8
000000000002a0a4	ldr	x12, [x20, #0x8]
000000000002a0a8	add	x11, x12, x11
000000000002a0ac	str	x11, [x20, #0x8]
000000000002a0b0	ldr	x11, [x9]
000000000002a0b4	and	x11, x11, #0xfffffffffffffffc
000000000002a0b8	ldr	x11, [x11]
000000000002a0bc	cmp	x11, x8
000000000002a0c0	b.eq	0x2a160
000000000002a0c4	ldr	w10, [x11, #0x28]
000000000002a0c8	cmp	w10, #0x1
000000000002a0cc	b.lt	0x2a1f4
000000000002a0d0	mov	x10, #0x0
000000000002a0d4	b	0x2a0ec
000000000002a0d8	clrex
000000000002a0dc	add	x10, x10, #0x1
000000000002a0e0	ldrsw	x12, [x11, #0x28]
000000000002a0e4	cmp	x10, x12
000000000002a0e8	b.ge	0x2a1f4
000000000002a0ec	ldr	x12, [x11, #0x20]
000000000002a0f0	ldrsw	x12, [x12, x10, lsl #2]
000000000002a0f4	ldr	x12, [x12, x9]
000000000002a0f8	cmp	x12, #0x2
000000000002a0fc	b.lo	0x2a0dc
000000000002a100	ldr	x13, [x12]
000000000002a104	tst	x13, #0x3
000000000002a108	b.ne	0x2a0dc
000000000002a10c	ldur	x13, [x12, #-0x8]
000000000002a110	tbnz	w13, #0x0, 0x2a0dc
000000000002a114	sub	x12, x12, #0x8
000000000002a118	orr	x14, x13, #0x1
000000000002a11c	ldxr	x15, [x12]
000000000002a120	cmp	x15, x13
000000000002a124	b.ne	0x2a0d8
000000000002a128	stxr	w15, x14, [x12]
000000000002a12c	cbnz	w15, 0x2a11c
000000000002a130	ldr	x13, [x19]
000000000002a134	ldr	x14, [x19]
000000000002a138	and	x14, x14, #0x1
000000000002a13c	orr	x14, x14, x12
000000000002a140	str	x14, [x19]
000000000002a144	ldr	x14, [x12]
000000000002a148	bfxil	x13, x14, #0, #1
000000000002a14c	str	x13, [x12]
000000000002a150	ldr	x12, [x19, #0x8]
000000000002a154	add	x12, x12, #0x1
000000000002a158	str	x12, [x19, #0x8]
000000000002a15c	b	0x2a0dc
000000000002a160	ldr	w11, [x10, #0x18]
000000000002a164	cbz	w11, 0x2a1f4
000000000002a168	mov	w11, #0x0
000000000002a16c	add	x12, x10, #0x20
000000000002a170	b	0x2a188
000000000002a174	clrex
000000000002a178	add	w11, w11, #0x1
000000000002a17c	ldr	w13, [x10, #0x18]
000000000002a180	cmp	w11, w13
000000000002a184	b.hs	0x2a1f4
000000000002a188	ldr	x13, [x12, w11, sxtw #3]
000000000002a18c	cmp	x13, #0x2
000000000002a190	b.lo	0x2a178
000000000002a194	ldr	x14, [x13]
000000000002a198	tst	x14, #0x3
000000000002a19c	b.ne	0x2a178
000000000002a1a0	ldur	x14, [x13, #-0x8]
000000000002a1a4	tbnz	w14, #0x0, 0x2a178
000000000002a1a8	sub	x13, x13, #0x8
000000000002a1ac	orr	x15, x14, #0x1
000000000002a1b0	ldxr	x16, [x13]
000000000002a1b4	cmp	x16, x14
000000000002a1b8	b.ne	0x2a174
000000000002a1bc	stxr	w16, x15, [x13]
000000000002a1c0	cbnz	w16, 0x2a1b0
000000000002a1c4	ldr	x14, [x19]
000000000002a1c8	ldr	x15, [x19]
000000000002a1cc	and	x15, x15, #0x1
000000000002a1d0	orr	x15, x15, x13
000000000002a1d4	str	x15, [x19]
000000000002a1d8	ldr	x15, [x13]
000000000002a1dc	bfxil	x14, x15, #0, #1
000000000002a1e0	str	x14, [x13]
000000000002a1e4	ldr	x13, [x19, #0x8]
000000000002a1e8	add	x13, x13, #0x1
000000000002a1ec	str	x13, [x19, #0x8]
000000000002a1f0	b	0x2a178
000000000002a1f4	ldar	x9, [x9]
000000000002a1f8	and	x9, x9, #0xfffffffffffffffc
000000000002a1fc	ldr	x10, [x9]
000000000002a200	cmp	x9, #0x0
000000000002a204	ccmp	x10, x9, #0x4, ne
000000000002a208	b.eq	0x2a284
000000000002a20c	add	x9, x9, #0x18
000000000002a210	ldar	x9, [x9]
000000000002a214	sbfx	x10, x9, #0, #1
000000000002a218	and	x9, x9, x10
000000000002a21c	and	x9, x9, #0xfffffffffffffffe
000000000002a220	cmp	x9, #0x2
000000000002a224	b.lo	0x2a284
000000000002a228	ldur	x10, [x9, #-0x8]
000000000002a22c	tbnz	w10, #0x0, 0x2a284
000000000002a230	sub	x9, x9, #0x8
000000000002a234	orr	x11, x10, #0x1
000000000002a238	ldxr	x12, [x9]
000000000002a23c	cmp	x12, x10
000000000002a240	b.ne	0x2a280
000000000002a244	stxr	w12, x11, [x9]
000000000002a248	cbnz	w12, 0x2a238
000000000002a24c	ldr	x10, [x19]
000000000002a250	ldr	x11, [x19]
000000000002a254	and	x11, x11, #0x1
000000000002a258	orr	x11, x11, x9
000000000002a25c	str	x11, [x19]
000000000002a260	ldr	x11, [x9]
000000000002a264	bfxil	x10, x11, #0, #1
000000000002a268	str	x10, [x9]
000000000002a26c	ldr	x9, [x19, #0x8]
000000000002a270	add	x9, x9, #0x1
000000000002a274	str	x9, [x19, #0x8]
000000000002a278	cbnz	x9, 0x2a01c
000000000002a27c	b	0x2a28c
000000000002a280	clrex
000000000002a284	ldr	x9, [x19, #0x8]
000000000002a288	cbnz	x9, 0x2a01c
000000000002a28c	ldp	x29, x30, [sp, #0x10]
000000000002a290	ldp	x20, x19, [sp], #0x20
000000000002a294	b	0x4d9dc ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
__ZNSt3__110__function6__funcIZN6kotlin2gc11GCScheduler13NewThreadDataEvEUlRT_E_NS_9allocatorIS7_EEFvRNS3_21GCSchedulerThreadDataEEED1Ev:
000000000002a298	ret
__ZNSt3__110__function6__funcIZN6kotlin2gc11GCScheduler13NewThreadDataEvEUlRT_E_NS_9allocatorIS7_EEFvRNS3_21GCSchedulerThreadDataEEED0Ev:
000000000002a29c	b	0x4da54 ; symbol stub for: __ZdlPv
__ZNKSt3__110__function6__funcIZN6kotlin2gc11GCScheduler13NewThreadDataEvEUlRT_E_NS_9allocatorIS7_EEFvRNS3_21GCSchedulerThreadDataEEE7__cloneEv:
000000000002a2a0	stp	x20, x19, [sp, #-0x20]!
000000000002a2a4	stp	x29, x30, [sp, #0x10]
000000000002a2a8	add	x29, sp, #0x10
000000000002a2ac	mov	x19, x0
000000000002a2b0	mov	w0, #0x10
000000000002a2b4	bl	0x4da60 ; symbol stub for: __Znwm
000000000002a2b8	ldr	x8, [x19, #0x8]
000000000002a2bc	adr	x9, #0x3889c
000000000002a2c0	nop
000000000002a2c4	stp	x9, x8, [x0]
000000000002a2c8	ldp	x29, x30, [sp, #0x10]
000000000002a2cc	ldp	x20, x19, [sp], #0x20
000000000002a2d0	ret
__ZNKSt3__110__function6__funcIZN6kotlin2gc11GCScheduler13NewThreadDataEvEUlRT_E_NS_9allocatorIS7_EEFvRNS3_21GCSchedulerThreadDataEEE7__cloneEPNS0_6__baseISC_EE:
000000000002a2d4	ldr	x8, [x0, #0x8]
000000000002a2d8	adr	x9, #0x38880
000000000002a2dc	nop
000000000002a2e0	stp	x9, x8, [x1]
000000000002a2e4	ret
__ZNSt3__110__function6__funcIZN6kotlin2gc11GCScheduler13NewThreadDataEvEUlRT_E_NS_9allocatorIS7_EEFvRNS3_21GCSchedulerThreadDataEEE7destroyEv:
000000000002a2e8	ret
__ZNSt3__110__function6__funcIZN6kotlin2gc11GCScheduler13NewThreadDataEvEUlRT_E_NS_9allocatorIS7_EEFvRNS3_21GCSchedulerThreadDataEEE18destroy_deallocateEv:
000000000002a2ec	b	0x4da54 ; symbol stub for: __ZdlPv
__ZNSt3__110__function6__funcIZN6kotlin2gc11GCScheduler13NewThreadDataEvEUlRT_E_NS_9allocatorIS7_EEFvRNS3_21GCSchedulerThreadDataEEEclESB_:
000000000002a2f0	ldr	x8, [x0, #0x8]
000000000002a2f4	ldr	x0, [x8, #0x40]
000000000002a2f8	ldr	x8, [x0]
000000000002a2fc	ldr	x2, [x8, #0x10]
000000000002a300	br	x2
__ZNKSt3__110__function6__funcIZN6kotlin2gc11GCScheduler13NewThreadDataEvEUlRT_E_NS_9allocatorIS7_EEFvRNS3_21GCSchedulerThreadDataEEE6targetERKSt9type_info:
000000000002a304	stp	x20, x19, [sp, #-0x20]!
000000000002a308	stp	x29, x30, [sp, #0x10]
000000000002a30c	add	x29, sp, #0x10
000000000002a310	mov	x19, x0
000000000002a314	ldr	x9, [x1, #0x8]
000000000002a318	adr	x8, #0x24a35
000000000002a31c	nop
000000000002a320	mov	x10, #-0x8000000000000000
000000000002a324	add	x10, x8, x10
000000000002a328	cmp	x9, x10
000000000002a32c	b.ne	0x2a340
000000000002a330	add	x0, x19, #0x8
000000000002a334	ldp	x29, x30, [sp, #0x10]
000000000002a338	ldp	x20, x19, [sp], #0x20
000000000002a33c	ret
000000000002a340	tst	x9, x10
000000000002a344	b.lt	0x2a358
000000000002a348	mov	x0, #0x0
000000000002a34c	ldp	x29, x30, [sp, #0x10]
000000000002a350	ldp	x20, x19, [sp], #0x20
000000000002a354	ret
000000000002a358	and	x0, x9, #0x7fffffffffffffff
000000000002a35c	mov	x9, #-0x8000000000000000
000000000002a360	add	x8, x8, x9
000000000002a364	and	x1, x8, #0x7fffffffffffffff
000000000002a368	bl	0x4de5c ; symbol stub for: _strcmp
000000000002a36c	cbz	w0, 0x2a330
000000000002a370	mov	x0, #0x0
000000000002a374	ldp	x29, x30, [sp, #0x10]
000000000002a378	ldp	x20, x19, [sp], #0x20
000000000002a37c	ret
__ZNKSt3__110__function6__funcIZN6kotlin2gc11GCScheduler13NewThreadDataEvEUlRT_E_NS_9allocatorIS7_EEFvRNS3_21GCSchedulerThreadDataEEE11target_typeEv:
000000000002a380	adr	x0, #0x38838
000000000002a384	nop
000000000002a388	ret
__ZN6kotlin2gc2GC10ThreadDataC1ERS1_RNS_2mm10ThreadDataE:
000000000002a38c	sub	sp, sp, #0x50
000000000002a390	stp	x22, x21, [sp, #0x20]
000000000002a394	stp	x20, x19, [sp, #0x30]
000000000002a398	stp	x29, x30, [sp, #0x40]
000000000002a39c	add	x29, sp, #0x40
000000000002a3a0	mov	x20, x2
000000000002a3a4	mov	x22, x1
000000000002a3a8	mov	x19, x0
000000000002a3ac	mov	w0, #0x1
000000000002a3b0	mov	w1, #0xa0
000000000002a3b4	bl	0x4db20 ; symbol stub for: _calloc
000000000002a3b8	mov	x21, x0
000000000002a3bc	ldr	x8, [x22]
000000000002a3c0	add	x9, x8, #0x30
000000000002a3c4	adr	x10, #0x38794
000000000002a3c8	nop
000000000002a3cc	stp	x10, x9, [sp]
000000000002a3d0	mov	x11, sp
000000000002a3d4	str	x11, [sp, #0x18]
000000000002a3d8	str	x9, [x0]
000000000002a3dc	mov	x12, x0
000000000002a3e0	str	x10, [x12, #0x8]!
000000000002a3e4	str	x12, [x0, #0x20]
000000000002a3e8	str	x9, [x0, #0x10]
000000000002a3ec	add	x8, x8, #0x38
000000000002a3f0	movi.16b	v0, #0x0
000000000002a3f4	stur	q0, [x0, #0x28]
000000000002a3f8	stur	q0, [x0, #0x38]
000000000002a3fc	ldar	x8, [x8]
000000000002a400	str	x8, [x0, #0x30]
000000000002a404	mov	x8, x9
000000000002a408	ldar	w8, [x8]
000000000002a40c	sxtw	x8, w8
000000000002a410	str	x8, [x0, #0x40]
000000000002a414	mov	x0, x11
000000000002a418	cmp	x11, x0
000000000002a41c	b.eq	0x2a430
000000000002a420	cbz	x0, 0x2a43c
000000000002a424	ldr	x8, [x0]
000000000002a428	ldr	x8, [x8, #0x28]
000000000002a42c	b	0x2a438
000000000002a430	ldr	x8, [x0]
000000000002a434	ldr	x8, [x8, #0x20]
000000000002a438	blr	x8
000000000002a43c	ldr	x8, [x22]
000000000002a440	add	x9, x8, #0x98
000000000002a444	mov	x10, x21
000000000002a448	str	x9, [x10, #0x48]!
000000000002a44c	stp	x20, x21, [x21, #0x50]
000000000002a450	add	x8, x8, #0x10
000000000002a454	str	x8, [x21, #0x70]
000000000002a458	stp	x10, xzr, [x21, #0x80]
000000000002a45c	stp	xzr, xzr, [x21, #0x90]
000000000002a460	str	x21, [x19]
000000000002a464	mov	x0, x19
000000000002a468	ldp	x29, x30, [sp, #0x40]
000000000002a46c	ldp	x20, x19, [sp, #0x30]
000000000002a470	ldp	x22, x21, [sp, #0x20]
000000000002a474	add	sp, sp, #0x50
000000000002a478	ret
__ZN6kotlin2gc2GC10ThreadDataD1Ev:
000000000002a47c	stp	x20, x19, [sp, #-0x20]!
000000000002a480	stp	x29, x30, [sp, #0x10]
000000000002a484	add	x29, sp, #0x10
000000000002a488	mov	x19, x0
000000000002a48c	ldr	x20, [x0]
000000000002a490	str	xzr, [x0]
000000000002a494	cbz	x20, 0x2a4e8
000000000002a498	add	x0, x20, #0x70
000000000002a49c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer7PublishEv
000000000002a4a0	ldr	x0, [x20, #0x88]
000000000002a4a4	str	xzr, [x20, #0x88]
000000000002a4a8	cbz	x0, 0x2a4b4
000000000002a4ac	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE4NodeD2Ev
000000000002a4b0	bl	_mi_free
000000000002a4b4	add	x8, x20, #0x8
000000000002a4b8	ldr	x0, [x20, #0x20]
000000000002a4bc	cmp	x8, x0
000000000002a4c0	b.eq	0x2a4d4
000000000002a4c4	cbz	x0, 0x2a4e0
000000000002a4c8	ldr	x8, [x0]
000000000002a4cc	ldr	x8, [x8, #0x28]
000000000002a4d0	b	0x2a4dc
000000000002a4d4	ldr	x8, [x0]
000000000002a4d8	ldr	x8, [x8, #0x20]
000000000002a4dc	blr	x8
000000000002a4e0	mov	x0, x20
000000000002a4e4	bl	0x4dba4 ; symbol stub for: _free
000000000002a4e8	mov	x0, x19
000000000002a4ec	ldp	x29, x30, [sp, #0x10]
000000000002a4f0	ldp	x20, x19, [sp], #0x20
000000000002a4f4	ret
__ZN13GCStateHolder8scheduleEv:
000000000002a4f8	stp	x20, x19, [sp, #-0x20]!
000000000002a4fc	stp	x29, x30, [sp, #0x10]
000000000002a500	add	x29, sp, #0x10
000000000002a504	mov	x19, x0
000000000002a508	bl	0x4d9b8 ; symbol stub for: __ZNSt3__15mutex4lockEv
000000000002a50c	ldr	x20, [x19, #0xc0]
000000000002a510	ldr	x8, [x19, #0x40]
000000000002a514	cmp	x20, x8
000000000002a518	b.gt	0x2a530
000000000002a51c	add	x8, x8, #0x1
000000000002a520	str	x8, [x19, #0xc0]
000000000002a524	add	x0, x19, #0xd0
000000000002a528	bl	0x4d970 ; symbol stub for: __ZNSt3__118condition_variable10notify_allEv
000000000002a52c	ldr	x20, [x19, #0xc0]
000000000002a530	mov	x0, x19
000000000002a534	bl	0x4d9c4 ; symbol stub for: __ZNSt3__15mutex6unlockEv
000000000002a538	mov	x0, x20
000000000002a53c	ldp	x29, x30, [sp, #0x10]
000000000002a540	ldp	x20, x19, [sp], #0x20
000000000002a544	ret
__ZN6kotlin16ThreadStateGuardD1Ev:
000000000002a548	stp	x20, x19, [sp, #-0x20]!
000000000002a54c	stp	x29, x30, [sp, #0x10]
000000000002a550	add	x29, sp, #0x10
000000000002a554	mov	x19, x0
000000000002a558	ldr	x9, [x0]
000000000002a55c	cbz	x9, 0x2a594
000000000002a560	ldr	w8, [x19, #0x8]
000000000002a564	add	x0, x9, #0x138
000000000002a568	ldaxr	w9, [x0]
000000000002a56c	stlxr	w10, w8, [x0]
000000000002a570	cbnz	w10, 0x2a568
000000000002a574	cbnz	w8, 0x2a594
000000000002a578	cmp	w9, #0x1
000000000002a57c	b.ne	0x2a594
000000000002a580	adr	x8, #0x582c3
000000000002a584	nop
000000000002a588	ldarb	w8, [x8]
000000000002a58c	tbz	w8, #0x0, 0x2a594
000000000002a590	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000002a594	mov	x0, x19
000000000002a598	ldp	x29, x30, [sp, #0x10]
000000000002a59c	ldp	x20, x19, [sp], #0x20
000000000002a5a0	ret
__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy:
000000000002a5a4	sub	sp, sp, #0x70
000000000002a5a8	stp	x24, x23, [sp, #0x30]
000000000002a5ac	stp	x22, x21, [sp, #0x40]
000000000002a5b0	stp	x20, x19, [sp, #0x50]
000000000002a5b4	stp	x29, x30, [sp, #0x60]
000000000002a5b8	add	x29, sp, #0x60
000000000002a5bc	mov	x19, x0
000000000002a5c0	add	x8, x1, #0xf
000000000002a5c4	and	x20, x8, #0xfffffffffffffff8
000000000002a5c8	ldr	x8, [x0, #0x10]
000000000002a5cc	ldr	x21, [x8, #0x10]
000000000002a5d0	ldp	x8, x9, [x21, #0x28]
000000000002a5d4	add	x8, x8, x20
000000000002a5d8	str	x8, [x21, #0x28]
000000000002a5dc	cmp	x8, x9
000000000002a5e0	b.lo	0x2a624
000000000002a5e4	ldr	x0, [x21, #0x20]
000000000002a5e8	cbz	x0, 0x2a788
000000000002a5ec	ldr	x8, [x0]
000000000002a5f0	ldr	x8, [x8, #0x30]
000000000002a5f4	mov	x1, x21
000000000002a5f8	blr	x8
000000000002a5fc	str	xzr, [x21, #0x28]
000000000002a600	str	xzr, [x21, #0x38]
000000000002a604	ldr	x8, [x21]
000000000002a608	add	x8, x8, #0x8
000000000002a60c	ldar	x8, [x8]
000000000002a610	str	x8, [x21, #0x30]
000000000002a614	ldr	x8, [x21]
000000000002a618	ldar	w8, [x8]
000000000002a61c	sxtw	x8, w8
000000000002a620	str	x8, [x21, #0x40]
000000000002a624	adr	x23, #0x5821f
000000000002a628	nop
000000000002a62c	ldarb	w8, [x23]
000000000002a630	tbz	w8, #0x0, 0x2a638
000000000002a634	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002a638	mov	x0, x20
000000000002a63c	bl	__ZN6kotlin20allocateInObjectPoolEm
000000000002a640	mov	x21, x0
000000000002a644	cbnz	x0, 0x2a734
000000000002a648	ldr	x22, [x19, #0x10]
000000000002a64c	adrp	x0, 62 ; 0x68000
000000000002a650	add	x0, x0, #0xa00
000000000002a654	ldr	x8, [x0]
000000000002a658	blr	x8
000000000002a65c	ldr	x8, [x0]
000000000002a660	str	x8, [sp, #0x10]
000000000002a664	strb	wzr, [sp, #0x1c]
000000000002a668	add	x8, x8, #0x138
000000000002a66c	mov	w9, #0x1
000000000002a670	ldaxr	w10, [x8]
000000000002a674	stlxr	w11, w9, [x8]
000000000002a678	cbnz	w11, 0x2a670
000000000002a67c	str	w10, [sp, #0x18]
000000000002a680	ldr	x8, [x22]
000000000002a684	add	x0, x8, #0x18
000000000002a688	bl	__ZN13GCStateHolder8scheduleEv
000000000002a68c	mov	x21, x0
000000000002a690	ldr	x24, [x22]
000000000002a694	ldr	x22, [x24, #0xa0]
000000000002a698	str	x22, [sp, #0x20]
000000000002a69c	mov	w8, #0x1
000000000002a6a0	strb	w8, [sp, #0x28]
000000000002a6a4	mov	x0, x22
000000000002a6a8	bl	0x4d9b8 ; symbol stub for: __ZNSt3__15mutex4lockEv
000000000002a6ac	ldr	x8, [x24, #0x98]
000000000002a6b0	cmp	x8, x21
000000000002a6b4	b.ge	0x2a6e8
000000000002a6b8	add	x22, x24, #0xa8
000000000002a6bc	ldrb	w8, [x24, #0x158]
000000000002a6c0	cbnz	w8, 0x2a6dc
000000000002a6c4	add	x1, sp, #0x20
000000000002a6c8	mov	x0, x22
000000000002a6cc	bl	0x4d988 ; symbol stub for: __ZNSt3__118condition_variable4waitERNS_11unique_lockINS_5mutexEEE
000000000002a6d0	ldr	x8, [x24, #0x98]
000000000002a6d4	cmp	x8, x21
000000000002a6d8	b.lt	0x2a6bc
000000000002a6dc	ldrb	w8, [sp, #0x28]
000000000002a6e0	cbz	w8, 0x2a6f0
000000000002a6e4	ldr	x22, [sp, #0x20]
000000000002a6e8	mov	x0, x22
000000000002a6ec	bl	0x4d9c4 ; symbol stub for: __ZNSt3__15mutex6unlockEv
000000000002a6f0	ldr	x9, [sp, #0x10]
000000000002a6f4	cbz	x9, 0x2a724
000000000002a6f8	ldr	w8, [sp, #0x18]
000000000002a6fc	add	x0, x9, #0x138
000000000002a700	ldaxr	w9, [x0]
000000000002a704	stlxr	w10, w8, [x0]
000000000002a708	cbnz	w10, 0x2a700
000000000002a70c	cbnz	w8, 0x2a724
000000000002a710	cmp	w9, #0x1
000000000002a714	b.ne	0x2a724
000000000002a718	ldarb	w8, [x23]
000000000002a71c	tbz	w8, #0x0, 0x2a724
000000000002a720	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000002a724	mov	x0, x20
000000000002a728	bl	__ZN6kotlin20allocateInObjectPoolEm
000000000002a72c	mov	x21, x0
000000000002a730	cbz	x0, 0x2a790
000000000002a734	str	xzr, [x21]
000000000002a738	ldr	x8, [x19, #0x18]
000000000002a73c	cbz	x8, 0x2a75c
000000000002a740	ldr	x8, [x19, #0x20]
000000000002a744	ldr	x0, [x8]
000000000002a748	str	x21, [x8]
000000000002a74c	cbz	x0, 0x2a760
000000000002a750	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE4NodeD2Ev
000000000002a754	bl	_mi_free
000000000002a758	b	0x2a760
000000000002a75c	str	x21, [x19, #0x18]
000000000002a760	ldr	x8, [x19, #0x28]
000000000002a764	add	x8, x8, #0x1
000000000002a768	stp	x21, x8, [x19, #0x20]
000000000002a76c	mov	x0, x21
000000000002a770	ldp	x29, x30, [sp, #0x60]
000000000002a774	ldp	x20, x19, [sp, #0x50]
000000000002a778	ldp	x22, x21, [sp, #0x40]
000000000002a77c	ldp	x24, x23, [sp, #0x30]
000000000002a780	add	sp, sp, #0x70
000000000002a784	ret
000000000002a788	bl	__ZNSt3__125__throw_bad_function_callEv
000000000002a78c	b	0x2a7a4
000000000002a790	str	x20, [sp]
000000000002a794	adr	x0, #0x27911 ; literal pool for: "Out of memory trying to allocate %llu bytes. Aborting.\n"
000000000002a798	nop
000000000002a79c	bl	__ZN5konan13consoleErrorfEPKcz
000000000002a7a0	bl	__ZN5konan5abortEv
000000000002a7a4	brk	#0x1
000000000002a7a8	bl	___clang_call_terminate
000000000002a7ac	mov	x19, x0
000000000002a7b0	add	x0, sp, #0x10
000000000002a7b4	bl	__ZN6kotlin16ThreadStateGuardD1Ev
000000000002a7b8	mov	x0, x19
000000000002a7bc	bl	___clang_call_terminate
000000000002a7c0	bl	___clang_call_terminate
__ZN6kotlin12ScopedThread3RunIZNS_2gc22ConcurrentMarkAndSweepC1ERNS_2mm13ObjectFactoryIS3_EERNS2_11GCSchedulerEE3$_3JEEENSt3__113invoke_resultIT_JDpT0_EE4typeENS0_10attributesEOSD_DpOSE_:
000000000002a7c4	sub	sp, sp, #0x170
000000000002a7c8	stp	x28, x27, [sp, #0x110]
000000000002a7cc	stp	x26, x25, [sp, #0x120]
000000000002a7d0	stp	x24, x23, [sp, #0x130]
000000000002a7d4	stp	x22, x21, [sp, #0x140]
000000000002a7d8	stp	x20, x19, [sp, #0x150]
000000000002a7dc	stp	x29, x30, [sp, #0x160]
000000000002a7e0	add	x29, sp, #0x160
000000000002a7e4	mov	x19, x1
000000000002a7e8	ldrb	w8, [x0, #0x18]
000000000002a7ec	cbz	w8, 0x2a800
000000000002a7f0	ldrsb	w8, [x0, #0x17]
000000000002a7f4	tbz	w8, #0x1f, 0x2a7fc
000000000002a7f8	ldr	x0, [x0]
000000000002a7fc	bl	0x4ddfc ; symbol stub for: _pthread_setname_np
000000000002a800	ldr	x25, [x19]
000000000002a804	add	x26, x25, #0xe8
000000000002a808	add	x9, x25, #0x180
000000000002a80c	add	x8, x25, #0x68
000000000002a810	stp	x8, x9, [sp, #0x40]
000000000002a814	add	x9, x25, #0x170
000000000002a818	add	x8, x25, #0xa8
000000000002a81c	stp	x8, x9, [sp, #0x30]
000000000002a820	mov	w24, #0x1
000000000002a824	adrp	x23, 62 ; 0x68000
000000000002a828	add	x23, x23, #0xa00
000000000002a82c	ldr	x27, [x23]
000000000002a830	adr	x28, #0x58310
000000000002a834	nop
000000000002a838	adr	x20, #0x583f8
000000000002a83c	nop
000000000002a840	str	x25, [sp, #0x50]
000000000002a844	stp	x27, x26, [sp, #0x20]
000000000002a848	b	0x2a85c
000000000002a84c	stlrb	wzr, [x23]
000000000002a850	ldp	x27, x26, [sp, #0x20]
000000000002a854	adrp	x23, 62 ; 0x68000
000000000002a858	add	x23, x23, #0xa00
000000000002a85c	ldr	x0, [x25, #0xe0]
000000000002a860	stur	x0, [x29, #-0x80]
000000000002a864	sturb	w24, [x29, #-0x78]
000000000002a868	bl	0x4d9b8 ; symbol stub for: __ZNSt3__15mutex4lockEv
000000000002a86c	ldr	x21, [x25, #0xd8]
000000000002a870	ldr	x8, [x25, #0x98]
000000000002a874	cmp	x21, x8
000000000002a878	b.gt	0x2a8a8
000000000002a87c	ldrb	w8, [x25, #0x158]
000000000002a880	cbnz	w8, 0x2a8a0
000000000002a884	sub	x1, x29, #0x80
000000000002a888	mov	x0, x26
000000000002a88c	bl	0x4d988 ; symbol stub for: __ZNSt3__118condition_variable4waitERNS_11unique_lockINS_5mutexEEE
000000000002a890	ldr	x21, [x25, #0xd8]
000000000002a894	ldr	x8, [x25, #0x98]
000000000002a898	cmp	x21, x8
000000000002a89c	b.le	0x2a87c
000000000002a8a0	ldurb	w8, [x29, #-0x78]
000000000002a8a4	cbz	w8, 0x2a8b4
000000000002a8a8	ldur	x0, [x29, #-0x80]
000000000002a8ac	bl	0x4d9c4 ; symbol stub for: __ZNSt3__15mutex6unlockEv
000000000002a8b0	ldr	x21, [x25, #0xd8]
000000000002a8b4	ldrb	w8, [x25, #0x158]
000000000002a8b8	cmp	w8, #0x1
000000000002a8bc	b.eq	0x2b194
000000000002a8c0	ldr	w8, [x25, #0x198]
000000000002a8c4	cmp	w8, #0x0
000000000002a8c8	cset	w8, eq
000000000002a8cc	adr	x9, #0x57f78
000000000002a8d0	nop
000000000002a8d4	stlrb	w8, [x9]
000000000002a8d8	bl	0x4d9dc ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
000000000002a8dc	bl	__ZN6kotlin2mm24RequestThreadsSuspensionEv
000000000002a8e0	mov	x0, x23
000000000002a8e4	blr	x27
000000000002a8e8	ldr	x8, [x0]
000000000002a8ec	add	x9, x8, #0x8
000000000002a8f0	cmp	x8, #0x0
000000000002a8f4	csel	x19, xzr, x9, eq
000000000002a8f8	mov	x0, x28
000000000002a8fc	bl	0x4d94c ; symbol stub for: __ZNSt3__115recursive_mutex4lockEv
000000000002a900	nop
000000000002a904	ldr	x8, #0x5822c
000000000002a908	cbnz	x8, 0x2a918
000000000002a90c	b	0x2a960
000000000002a910	ldr	x8, [x8, #0x150]
000000000002a914	cbz	x8, 0x2a960
000000000002a918	add	x9, x8, #0x8
000000000002a91c	cmp	x9, x19
000000000002a920	b.eq	0x2a910
000000000002a924	add	x9, x8, #0x148
000000000002a928	ldarb	w9, [x9]
000000000002a92c	tbnz	w9, #0x0, 0x2a910
000000000002a930	add	x9, x8, #0x138
000000000002a934	ldar	w9, [x9]
000000000002a938	cmp	w9, #0x1
000000000002a93c	b.eq	0x2a910
000000000002a940	ldr	x9, [x8, #0x118]
000000000002a944	add	x9, x9, #0x60
000000000002a948	ldarb	w9, [x9]
000000000002a94c	tbnz	w9, #0x0, 0x2a910
000000000002a950	mov	x0, x28
000000000002a954	bl	0x4d958 ; symbol stub for: __ZNSt3__115recursive_mutex6unlockEv
000000000002a958	bl	0x4de20 ; symbol stub for: _sched_yield
000000000002a95c	b	0x2a8e0
000000000002a960	str	x21, [sp, #0x78]
000000000002a964	mov	x0, x28
000000000002a968	bl	0x4d958 ; symbol stub for: __ZNSt3__115recursive_mutex6unlockEv
000000000002a96c	bl	0x4d9dc ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
000000000002a970	ldr	x8, [sp, #0x48]
000000000002a974	stp	xzr, xzr, [x8, #0x8]
000000000002a978	str	xzr, [x8]
000000000002a97c	ldr	x22, [x25, #0x8]
000000000002a980	ldr	x0, [x22, #0x40]
000000000002a984	ldr	x8, [x0]
000000000002a988	ldr	x8, [x8, #0x18]
000000000002a98c	blr	x8
000000000002a990	ldr	x21, [x25, #0x60]
000000000002a994	mov	x0, x21
000000000002a998	bl	0x4d9b8 ; symbol stub for: __ZNSt3__15mutex4lockEv
000000000002a99c	ldr	x8, [sp, #0x78]
000000000002a9a0	str	x8, [x25, #0x58]
000000000002a9a4	ldr	x0, [sp, #0x40]
000000000002a9a8	bl	0x4d970 ; symbol stub for: __ZNSt3__118condition_variable10notify_allEv
000000000002a9ac	mov	x0, x21
000000000002a9b0	bl	0x4d9c4 ; symbol stub for: __ZNSt3__15mutex6unlockEv
000000000002a9b4	mov	x0, x25
000000000002a9b8	bl	__ZN6kotlin2gc22ConcurrentMarkAndSweep29CollectRootSetAndStartMarkingEv
000000000002a9bc	add	x0, sp, #0x80
000000000002a9c0	ldr	x1, [sp, #0x38]
000000000002a9c4	bl	__ZN6kotlin2gc4MarkIN12_GLOBAL__N_110MarkTraitsEEENS0_9MarkStatsERNT_9MarkQueueE
000000000002a9c8	ldr	q0, [sp, #0x80]
000000000002a9cc	str	q0, [sp, #0x60]
000000000002a9d0	ldr	x19, [sp, #0x90]
000000000002a9d4	adr	x21, #0x3de0c
000000000002a9d8	nop
000000000002a9dc	mov	x0, x21
000000000002a9e0	bl	0x4d9b8 ; symbol stub for: __ZNSt3__15mutex4lockEv
000000000002a9e4	ldr	q0, [x25, #0x180]
000000000002a9e8	ldr	q1, [sp, #0x60]
000000000002a9ec	add.2d	v0, v0, v1
000000000002a9f0	str	q0, [x25, #0x180]
000000000002a9f4	ldr	x8, [x25, #0x190]
000000000002a9f8	add	x8, x8, x19
000000000002a9fc	str	x8, [x25, #0x190]
000000000002aa00	mov	x0, x21
000000000002aa04	bl	0x4d9c4 ; symbol stub for: __ZNSt3__15mutex6unlockEv
000000000002aa08	mov	x0, x23
000000000002aa0c	blr	x27
000000000002aa10	ldr	x8, [x0]
000000000002aa14	add	x9, x8, #0x8
000000000002aa18	cmp	x8, #0x0
000000000002aa1c	csel	x19, xzr, x9, eq
000000000002aa20	mov	x0, x28
000000000002aa24	bl	0x4d94c ; symbol stub for: __ZNSt3__115recursive_mutex4lockEv
000000000002aa28	nop
000000000002aa2c	ldr	x8, #0x58104
000000000002aa30	cbnz	x8, 0x2aa40
000000000002aa34	b	0x2aa78
000000000002aa38	ldr	x8, [x8, #0x150]
000000000002aa3c	cbz	x8, 0x2aa78
000000000002aa40	add	x9, x8, #0x8
000000000002aa44	cmp	x9, x19
000000000002aa48	b.eq	0x2aa38
000000000002aa4c	add	x9, x8, #0x148
000000000002aa50	ldarb	w9, [x9]
000000000002aa54	tbnz	w9, #0x0, 0x2aa38
000000000002aa58	add	x9, x8, #0x138
000000000002aa5c	ldar	w9, [x9]
000000000002aa60	cmp	w9, #0x1
000000000002aa64	b.eq	0x2aa38
000000000002aa68	mov	x0, x28
000000000002aa6c	bl	0x4d958 ; symbol stub for: __ZNSt3__115recursive_mutex6unlockEv
000000000002aa70	bl	0x4de20 ; symbol stub for: _sched_yield
000000000002aa74	b	0x2aa08
000000000002aa78	mov	x0, x28
000000000002aa7c	bl	0x4d958 ; symbol stub for: __ZNSt3__115recursive_mutex6unlockEv
000000000002aa80	bl	0x4d9dc ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
000000000002aa84	ldr	x0, [x22, #0x40]
000000000002aa88	ldr	x1, [x25, #0x188]
000000000002aa8c	ldr	x8, [x0]
000000000002aa90	ldr	x8, [x8, #0x20]
000000000002aa94	blr	x8
000000000002aa98	sub	x21, x29, #0x80
000000000002aa9c	adr	x22, #0x5817c
000000000002aaa0	nop
000000000002aaa4	adrp	x23, 88 ; 0x82000
000000000002aaa8	adrp	x28, 88 ; 0x82000
000000000002aaac	ldaxrb	w8, [x20]
000000000002aab0	stxrb	w9, w24, [x20]
000000000002aab4	cbnz	w9, 0x2aaac
000000000002aab8	tbz	w8, #0x0, 0x2aac4
000000000002aabc	bl	0x4de20 ; symbol stub for: _sched_yield
000000000002aac0	b	0x2aaac
000000000002aac4	stp	x21, x21, [x29, #-0x80]
000000000002aac8	stur	xzr, [x29, #-0x70]
000000000002aacc	ldr	x8, [x22, #0x8]
000000000002aad0	cmp	x8, x22
000000000002aad4	b.ne	0x2abb0
000000000002aad8	ldr	x8, [x23, #0xc28]
000000000002aadc	cbz	x8, 0x2ab18
000000000002aae0	ldp	x8, x0, [x22]
000000000002aae4	ldr	x9, [x8, #0x8]
000000000002aae8	ldr	x10, [x0]
000000000002aaec	str	x9, [x10, #0x8]
000000000002aaf0	ldr	x8, [x8, #0x8]
000000000002aaf4	str	x10, [x8]
000000000002aaf8	str	xzr, [x22, #0x10]
000000000002aafc	cmp	x0, x22
000000000002ab00	b.eq	0x2ab18
000000000002ab04	ldr	x19, [x0, #0x8]
000000000002ab08	bl	_mi_free
000000000002ab0c	mov	x0, x19
000000000002ab10	cmp	x19, x22
000000000002ab14	b.ne	0x2ab04
000000000002ab18	ldur	x8, [x29, #-0x70]
000000000002ab1c	adr	x23, #0x580e4
000000000002ab20	nop
000000000002ab24	cbz	x8, 0x2ab64
000000000002ab28	ldp	x10, x9, [x29, #-0x80]
000000000002ab2c	ldr	x11, [x10, #0x8]
000000000002ab30	ldr	x12, [x9]
000000000002ab34	str	x11, [x12, #0x8]
000000000002ab38	ldr	x11, [x10, #0x8]
000000000002ab3c	str	x12, [x11]
000000000002ab40	ldr	x11, [x22]
000000000002ab44	str	x9, [x11, #0x8]
000000000002ab48	str	x11, [x9]
000000000002ab4c	str	x10, [x22]
000000000002ab50	str	x22, [x10, #0x8]
000000000002ab54	ldr	x9, [x22, #0x10]
000000000002ab58	add	x8, x9, x8
000000000002ab5c	str	x8, [x22, #0x10]
000000000002ab60	stur	xzr, [x29, #-0x70]
000000000002ab64	stlrb	wzr, [x20]
000000000002ab68	ldaxrb	w8, [x20]
000000000002ab6c	stxrb	w9, w24, [x20]
000000000002ab70	cbnz	w9, 0x2ab68
000000000002ab74	tbz	w8, #0x0, 0x2ac10
000000000002ab78	bl	0x4de20 ; symbol stub for: _sched_yield
000000000002ab7c	b	0x2ab68
000000000002ab80	ldr	x0, [x9, #0x30]
000000000002ab84	ldp	x9, x8, [x0]
000000000002ab88	str	x8, [x9, #0x8]
000000000002ab8c	ldr	x8, [x0, #0x8]
000000000002ab90	str	x9, [x8]
000000000002ab94	ldr	x8, [x28, #0xc10]
000000000002ab98	sub	x8, x8, #0x1
000000000002ab9c	str	x8, [x28, #0xc10]
000000000002aba0	bl	_mi_free
000000000002aba4	mov	x8, x19
000000000002aba8	cmp	x19, x22
000000000002abac	b.eq	0x2aad8
000000000002abb0	ldp	x19, x9, [x8, #0x8]
000000000002abb4	add	x10, x9, #0x28
000000000002abb8	ldar	x10, [x10]
000000000002abbc	cbz	x10, 0x2ab80
000000000002abc0	cmp	x21, x8
000000000002abc4	b.eq	0x2aba4
000000000002abc8	ldr	x9, [x8, #0x8]
000000000002abcc	cmp	x9, x21
000000000002abd0	b.eq	0x2aba4
000000000002abd4	ldr	x10, [x8]
000000000002abd8	str	x9, [x10, #0x8]
000000000002abdc	ldr	x9, [x8, #0x8]
000000000002abe0	str	x10, [x9]
000000000002abe4	ldur	x9, [x29, #-0x80]
000000000002abe8	str	x8, [x9, #0x8]
000000000002abec	stp	x9, x21, [x8]
000000000002abf0	ldr	x9, [x23, #0xc28]
000000000002abf4	sub	x9, x9, #0x1
000000000002abf8	str	x9, [x23, #0xc28]
000000000002abfc	ldur	x9, [x29, #-0x70]
000000000002ac00	add	x9, x9, #0x1
000000000002ac04	stur	x8, [x29, #-0x80]
000000000002ac08	stur	x9, [x29, #-0x70]
000000000002ac0c	b	0x2aba4
000000000002ac10	ldr	x21, [x23, #0x8]
000000000002ac14	cmp	x21, x23
000000000002ac18	b.ne	0x2ac38
000000000002ac1c	b	0x2ad50
000000000002ac20	ldr	x9, [x8]
000000000002ac24	tst	x9, #0x3
000000000002ac28	b.eq	0x2ac5c
000000000002ac2c	ldr	x21, [x21, #0x8]
000000000002ac30	cmp	x21, x23
000000000002ac34	b.eq	0x2ad50
000000000002ac38	add	x22, x21, #0x20
000000000002ac3c	ldar	w8, [x22]
000000000002ac40	tbnz	w8, #0x2, 0x2ac2c
000000000002ac44	add	x8, x21, #0x30
000000000002ac48	ldar	x8, [x8]
000000000002ac4c	tbz	w8, #0x0, 0x2ac20
000000000002ac50	and	x8, x8, #0xfffffffffffffffe
000000000002ac54	ldr	x8, [x8, #0x8]
000000000002ac58	b	0x2ac20
000000000002ac5c	ldur	x8, [x8, #-0x8]
000000000002ac60	tbnz	w8, #0x0, 0x2ac2c
000000000002ac64	add	x8, x21, #0x30
000000000002ac68	ldar	x9, [x8]
000000000002ac6c	tbz	w9, #0x0, 0x2ace0
000000000002ac70	ldar	x8, [x8]
000000000002ac74	tbz	w8, #0x0, 0x2ac80
000000000002ac78	and	x8, x8, #0xfffffffffffffffe
000000000002ac7c	ldr	x8, [x8, #0x8]
000000000002ac80	add	x9, x21, #0x30
000000000002ac84	ldar	x9, [x9]
000000000002ac88	sbfx	x10, x9, #0, #1
000000000002ac8c	and	x9, x9, x10
000000000002ac90	and	x10, x9, #0xfffffffffffffffe
000000000002ac94	add	x9, x10, #0x10
000000000002ac98	b	0x2aca4
000000000002ac9c	stlxr	w12, w24, [x9]
000000000002aca0	cbz	w12, 0x2acb0
000000000002aca4	ldaxr	w11, [x9]
000000000002aca8	cbz	w11, 0x2ac9c
000000000002acac	clrex
000000000002acb0	cmp	w11, #0x1
000000000002acb4	b.eq	0x2aca4
000000000002acb8	str	xzr, [x10, #0x8]
000000000002acbc	ldaxr	w10, [x9]
000000000002acc0	cmp	w10, #0x1
000000000002acc4	b.ne	0x2acd4
000000000002acc8	stlxr	w10, wzr, [x9]
000000000002accc	cbnz	w10, 0x2acbc
000000000002acd0	b	0x2acd8
000000000002acd4	clrex
000000000002acd8	add	x9, x21, #0x30
000000000002acdc	stlr	x8, [x9]
000000000002ace0	add	x8, x21, #0x28
000000000002ace4	ldar	x9, [x8]
000000000002ace8	cbz	x9, 0x2ad18
000000000002acec	ldar	x0, [x8]
000000000002acf0	cbz	x0, 0x2ad04
000000000002acf4	nop
000000000002acf8	ldr	x1, #0x57da8
000000000002acfc	mov	w2, #0x2
000000000002ad00	bl	0x4dcb8 ; Objc message: -[x0 initWithDouble:]
000000000002ad04	ldaxr	w8, [x22]
000000000002ad08	orr	w8, w8, #0x4
000000000002ad0c	stlxr	w9, w8, [x22]
000000000002ad10	cbnz	w9, 0x2ad04
000000000002ad14	b	0x2ac2c
000000000002ad18	add	x0, x21, #0x18
000000000002ad1c	bl	__ZN6kotlin2mm15ExtraObjectData9UninstallEv
000000000002ad20	ldp	x8, x19, [x21]
000000000002ad24	str	x19, [x8, #0x8]
000000000002ad28	ldr	x9, [x21, #0x8]
000000000002ad2c	str	x8, [x9]
000000000002ad30	ldr	x8, [x28, #0xc10]
000000000002ad34	sub	x8, x8, #0x1
000000000002ad38	str	x8, [x28, #0xc10]
000000000002ad3c	mov	x0, x21
000000000002ad40	bl	_mi_free
000000000002ad44	mov	x21, x19
000000000002ad48	cmp	x21, x23
000000000002ad4c	b.ne	0x2ac38
000000000002ad50	stlrb	wzr, [x20]
000000000002ad54	bl	0x4d9dc ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
000000000002ad58	ldr	x8, [x25]
000000000002ad5c	add	x21, x8, #0x8
000000000002ad60	add	x23, x8, #0x20
000000000002ad64	ldaxrb	w8, [x23]
000000000002ad68	stxrb	w9, w24, [x23]
000000000002ad6c	cbnz	w9, 0x2ad64
000000000002ad70	tbz	w8, #0x0, 0x2ad7c
000000000002ad74	bl	0x4de20 ; symbol stub for: _sched_yield
000000000002ad78	b	0x2ad64
000000000002ad7c	adr	x0, #0x3da24
000000000002ad80	nop
000000000002ad84	bl	0x4d9b8 ; symbol stub for: __ZNSt3__15mutex4lockEv
000000000002ad88	adr	x8, #0x57abb
000000000002ad8c	nop
000000000002ad90	stlrb	wzr, [x8]
000000000002ad94	adr	x19, #0x3d9ac
000000000002ad98	nop
000000000002ad9c	add	x0, x19, #0x60
000000000002ada0	bl	0x4d9c4 ; symbol stub for: __ZNSt3__15mutex6unlockEv
000000000002ada4	mov	x0, x19
000000000002ada8	bl	0x4d970 ; symbol stub for: __ZNSt3__118condition_variable10notify_allEv
000000000002adac	bl	0x4d9dc ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
000000000002adb0	str	x0, [sp, #0x60]
000000000002adb4	ldr	x28, [x21]
000000000002adb8	cbz	x28, 0x2aec4
000000000002adbc	mov	x22, #0x0
000000000002adc0	mov	x27, #0x0
000000000002adc4	mov	x25, #0x0
000000000002adc8	mov	x26, #0x0
000000000002adcc	b	0x2adf0
000000000002add0	ldr	x8, [x28, #0x8]
000000000002add4	and	x8, x8, #0xfffffffffffffffe
000000000002add8	str	x8, [x28, #0x8]
000000000002addc	ldr	x8, [x28]
000000000002ade0	mov	x22, x28
000000000002ade4	mov	x28, x8
000000000002ade8	mov	x19, x25
000000000002adec	cbz	x8, 0x2aed0
000000000002adf0	ldr	x8, [x28, #0x8]
000000000002adf4	tbnz	w8, #0x0, 0x2add0
000000000002adf8	add	x8, x28, #0x10
000000000002adfc	ldar	x8, [x8]
000000000002ae00	and	x8, x8, #0xfffffffffffffffc
000000000002ae04	ldr	x9, [x8]
000000000002ae08	cmp	x8, #0x0
000000000002ae0c	ccmp	x9, x8, #0x4, ne
000000000002ae10	b.ne	0x2ae58
000000000002ae14	ldr	x8, [x28, #0x10]
000000000002ae18	and	x8, x8, #0xfffffffffffffffc
000000000002ae1c	ldr	x8, [x8]
000000000002ae20	ldrb	w8, [x8, #0x58]
000000000002ae24	tbnz	w8, #0x6, 0x2ae58
000000000002ae28	sub	x0, x29, #0x80
000000000002ae2c	mov	x1, x21
000000000002ae30	mov	x2, x22
000000000002ae34	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE13ExtractUnsafeEPNS9_4NodeE
000000000002ae38	ldp	x0, x28, [x29, #-0x80]
000000000002ae3c	stur	xzr, [x29, #-0x80]
000000000002ae40	cbz	x0, 0x2ae4c
000000000002ae44	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE4NodeD2Ev
000000000002ae48	bl	_mi_free
000000000002ae4c	mov	x19, x25
000000000002ae50	cbnz	x28, 0x2adf0
000000000002ae54	b	0x2aed0
000000000002ae58	sub	x0, x29, #0x80
000000000002ae5c	mov	x1, x21
000000000002ae60	mov	x2, x22
000000000002ae64	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE13ExtractUnsafeEPNS9_4NodeE
000000000002ae68	ldp	x19, x28, [x29, #-0x80]
000000000002ae6c	stur	xzr, [x29, #-0x80]
000000000002ae70	cbz	x27, 0x2aeac
000000000002ae74	ldr	x0, [x25]
000000000002ae78	str	x19, [x25]
000000000002ae7c	cbz	x0, 0x2ae88
000000000002ae80	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE4NodeD2Ev
000000000002ae84	bl	_mi_free
000000000002ae88	ldur	x0, [x29, #-0x80]
000000000002ae8c	add	x26, x26, #0x1
000000000002ae90	stur	xzr, [x29, #-0x80]
000000000002ae94	cbz	x0, 0x2aea0
000000000002ae98	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE4NodeD2Ev
000000000002ae9c	bl	_mi_free
000000000002aea0	mov	x25, x19
000000000002aea4	cbnz	x28, 0x2adf0
000000000002aea8	b	0x2aed0
000000000002aeac	add	x26, x26, #0x1
000000000002aeb0	stur	xzr, [x29, #-0x80]
000000000002aeb4	mov	x27, x19
000000000002aeb8	mov	x25, x19
000000000002aebc	cbnz	x28, 0x2adf0
000000000002aec0	b	0x2aed0
000000000002aec4	mov	x27, #0x0
000000000002aec8	mov	x19, #0x0
000000000002aecc	mov	x26, #0x0
000000000002aed0	bl	0x4d9dc ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
000000000002aed4	ldr	x25, [sp, #0x50]
000000000002aed8	ldr	x21, [x25, #0xa0]
000000000002aedc	mov	x0, x21
000000000002aee0	bl	0x4d9b8 ; symbol stub for: __ZNSt3__15mutex4lockEv
000000000002aee4	ldr	x8, [sp, #0x78]
000000000002aee8	str	x8, [x25, #0x98]
000000000002aeec	ldr	x0, [sp, #0x30]
000000000002aef0	bl	0x4d970 ; symbol stub for: __ZNSt3__118condition_variable10notify_allEv
000000000002aef4	mov	x0, x21
000000000002aef8	bl	0x4d9c4 ; symbol stub for: __ZNSt3__15mutex6unlockEv
000000000002aefc	ldr	x21, [x25, #0x168]
000000000002af00	add	x0, x21, #0x58
000000000002af04	str	x0, [sp, #0xa0]
000000000002af08	strb	w24, [sp, #0xa8]
000000000002af0c	bl	0x4d9b8 ; symbol stub for: __ZNSt3__15mutex4lockEv
000000000002af10	adr	x28, #0x57c30
000000000002af14	nop
000000000002af18	cbnz	x26, 0x2af24
000000000002af1c	ldr	x8, [x21]
000000000002af20	cbz	x8, 0x2afbc
000000000002af24	add	x28, x21, #0x28
000000000002af28	ldrb	w8, [x21, #0xc1]
000000000002af2c	cbnz	w8, 0x2af44
000000000002af30	add	x1, sp, #0xa0
000000000002af34	mov	x0, x28
000000000002af38	bl	0x4d988 ; symbol stub for: __ZNSt3__118condition_variable4waitERNS_11unique_lockINS_5mutexEEE
000000000002af3c	ldrb	w8, [x21, #0xc1]
000000000002af40	cbz	w8, 0x2af30
000000000002af44	add	x0, x21, #0x140
000000000002af48	str	x0, [sp, #0x58]
000000000002af4c	bl	0x4d9b8 ; symbol stub for: __ZNSt3__15mutex4lockEv
000000000002af50	ldr	x8, [x21]
000000000002af54	cbnz	x8, 0x2b12c
000000000002af58	movi.16b	v0, #0x0
000000000002af5c	stp	q0, q0, [sp, #0xb0]
000000000002af60	add	x0, sp, #0xb0
000000000002af64	adr	x1, #0x27183 ; literal pool for: "GC finalizer processor"
000000000002af68	nop
000000000002af6c	mov	w2, #0x16
000000000002af70	bl	__ZNSt3__18optionalINS_12basic_stringIcNS_11char_traitsIcEEN6kotlin11std_support9allocatorIcEEEEEaSIRNS_17basic_string_viewIcS3_EEvEERS9_OT_
000000000002af74	mov	w0, #0x8
000000000002af78	bl	0x4da60 ; symbol stub for: __Znwm
000000000002af7c	mov	x25, x0
000000000002af80	bl	0x4d934 ; symbol stub for: __ZNSt3__115__thread_structC1Ev
000000000002af84	mov	w0, #0x38
000000000002af88	bl	0x4da60 ; symbol stub for: __Znwm
000000000002af8c	mov	x22, x0
000000000002af90	sturb	wzr, [x29, #-0x80]
000000000002af94	sturb	wzr, [x29, #-0x68]
000000000002af98	ldrb	w8, [sp, #0xc8]
000000000002af9c	cbz	w8, 0x2b034
000000000002afa0	ldrsb	w8, [sp, #0xc7]
000000000002afa4	tbnz	w8, #0x1f, 0x2b03c
000000000002afa8	ldr	q0, [sp, #0xb0]
000000000002afac	stur	q0, [x29, #-0x80]
000000000002afb0	ldr	x8, [sp, #0xc0]
000000000002afb4	stur	x8, [x29, #-0x70]
000000000002afb8	b	0x2b094
000000000002afbc	ldr	x8, [sp, #0x78]
000000000002afc0	stur	x8, [x29, #-0x80]
000000000002afc4	ldr	x0, [x21, #0xb0]
000000000002afc8	cbz	x0, 0x2b1c8
000000000002afcc	ldr	x8, [x0]
000000000002afd0	ldr	x8, [x8, #0x30]
000000000002afd4	sub	x1, x29, #0x80
000000000002afd8	blr	x8
000000000002afdc	ldrb	w8, [sp, #0xa8]
000000000002afe0	cbz	w8, 0x2afec
000000000002afe4	ldr	x0, [sp, #0xa0]
000000000002afe8	bl	0x4d9c4 ; symbol stub for: __ZNSt3__15mutex6unlockEv
000000000002afec	mov	x8, #0xf7cf
000000000002aff0	movk	x8, #0xe353, lsl #16
000000000002aff4	movk	x8, #0x9ba5, lsl #32
000000000002aff8	movk	x8, #0x20c4, lsl #48
000000000002affc	ldr	x9, [sp, #0x60]
000000000002b000	smulh	x8, x9, x8
000000000002b004	asr	x9, x8, #7
000000000002b008	add	x8, x9, x8, lsr #63
000000000002b00c	str	x8, [x25, #0x10]
000000000002b010	cbz	x27, 0x2a84c
000000000002b014	ldr	x19, [x27]
000000000002b018	str	xzr, [x27]
000000000002b01c	mov	x0, x27
000000000002b020	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE4NodeD2Ev
000000000002b024	bl	_mi_free
000000000002b028	mov	x27, x19
000000000002b02c	cbnz	x19, 0x2b014
000000000002b030	b	0x2a84c
000000000002b034	mov	w8, #0x1
000000000002b038	b	0x2b09c
000000000002b03c	str	x25, [sp, #0x18]
000000000002b040	ldp	x1, x25, [sp, #0xb0]
000000000002b044	cmp	x25, #0x16
000000000002b048	b.hi	0x2b058
000000000002b04c	sub	x0, x29, #0x80
000000000002b050	sturb	w25, [x29, #-0x69]
000000000002b054	b	0x2b088
000000000002b058	str	x1, [sp, #0x10]
000000000002b05c	cmn	x25, #0x10
000000000002b060	b.hs	0x2b1d0
000000000002b064	add	x8, x25, #0x10
000000000002b068	and	x0, x8, #0xfffffffffffffff0
000000000002b06c	str	x0, [sp, #0x8]
000000000002b070	mov	w1, #0x1
000000000002b074	bl	0x4db20 ; symbol stub for: _calloc
000000000002b078	ldp	x8, x1, [sp, #0x8]
000000000002b07c	orr	x8, x8, #0x8000000000000000
000000000002b080	stp	x25, x8, [x29, #-0x78]
000000000002b084	stur	x0, [x29, #-0x80]
000000000002b088	add	x2, x25, #0x1
000000000002b08c	bl	0x4dbec ; symbol stub for: _memcpy
000000000002b090	ldr	x25, [sp, #0x18]
000000000002b094	mov	w8, #0x0
000000000002b098	sturb	w24, [x29, #-0x68]
000000000002b09c	adr	x9, #0x4a8
000000000002b0a0	nop
000000000002b0a4	stp	x25, x9, [x22]
000000000002b0a8	mov	x25, x22
000000000002b0ac	strb	wzr, [x25, #0x10]!
000000000002b0b0	strb	wzr, [x22, #0x28]
000000000002b0b4	tbnz	w8, #0x0, 0x2b0d4
000000000002b0b8	ldur	q0, [x29, #-0x80]
000000000002b0bc	str	q0, [x25]
000000000002b0c0	ldur	x8, [x29, #-0x70]
000000000002b0c4	str	x8, [x25, #0x10]
000000000002b0c8	stp	xzr, xzr, [x29, #-0x78]
000000000002b0cc	stur	xzr, [x29, #-0x80]
000000000002b0d0	strb	w24, [x22, #0x28]
000000000002b0d4	str	x21, [x22, #0x30]
000000000002b0d8	sub	x0, x29, #0x88
000000000002b0dc	mov	x1, #0x0
000000000002b0e0	adr	x2, #0x7a8
000000000002b0e4	nop
000000000002b0e8	mov	x3, x22
000000000002b0ec	bl	0x4dd78 ; symbol stub for: _pthread_create
000000000002b0f0	cbnz	w0, 0x2b1b8
000000000002b0f4	ldr	x8, [x21]
000000000002b0f8	cbnz	x8, 0x2b1b4
000000000002b0fc	ldur	x8, [x29, #-0x88]
000000000002b100	str	x8, [x21]
000000000002b104	stur	xzr, [x29, #-0x88]
000000000002b108	sub	x0, x29, #0x88
000000000002b10c	bl	0x4da00 ; symbol stub for: __ZNSt3__16threadD1Ev
000000000002b110	ldrb	w8, [sp, #0xc8]
000000000002b114	ldr	x25, [sp, #0x50]
000000000002b118	cbz	w8, 0x2b12c
000000000002b11c	ldrsb	w8, [sp, #0xc7]
000000000002b120	tbz	w8, #0x1f, 0x2b12c
000000000002b124	ldr	x0, [sp, #0xb0]
000000000002b128	bl	0x4dba4 ; symbol stub for: _free
000000000002b12c	ldr	x0, [sp, #0x58]
000000000002b130	bl	0x4d9c4 ; symbol stub for: __ZNSt3__15mutex6unlockEv
000000000002b134	cbz	x27, 0x2b170
000000000002b138	ldr	x8, [x21, #0x10]
000000000002b13c	cbz	x8, 0x2b15c
000000000002b140	ldr	x8, [x21, #0x18]
000000000002b144	ldr	x0, [x8]
000000000002b148	str	x27, [x8]
000000000002b14c	cbz	x0, 0x2b160
000000000002b150	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE4NodeD2Ev
000000000002b154	bl	_mi_free
000000000002b158	b	0x2b160
000000000002b15c	str	x27, [x21, #0x10]
000000000002b160	mov	x27, #0x0
000000000002b164	ldr	x8, [x21, #0x20]
000000000002b168	add	x8, x8, x26
000000000002b16c	stp	x19, x8, [x21, #0x18]
000000000002b170	ldr	x8, [sp, #0x78]
000000000002b174	str	x8, [x21, #0xb8]
000000000002b178	mov	x0, x28
000000000002b17c	bl	0x4d970 ; symbol stub for: __ZNSt3__118condition_variable10notify_allEv
000000000002b180	adr	x28, #0x579c0
000000000002b184	nop
000000000002b188	ldrb	w8, [sp, #0xa8]
000000000002b18c	cbnz	w8, 0x2afe4
000000000002b190	b	0x2afec
000000000002b194	ldp	x29, x30, [sp, #0x160]
000000000002b198	ldp	x20, x19, [sp, #0x150]
000000000002b19c	ldp	x22, x21, [sp, #0x140]
000000000002b1a0	ldp	x24, x23, [sp, #0x130]
000000000002b1a4	ldp	x26, x25, [sp, #0x120]
000000000002b1a8	ldp	x28, x27, [sp, #0x110]
000000000002b1ac	add	sp, sp, #0x170
000000000002b1b0	ret
000000000002b1b4	bl	0x4da48 ; symbol stub for: __ZSt9terminatev
000000000002b1b8	adr	x1, #0x26f46 ; literal pool for: "thread constructor failed"
000000000002b1bc	nop
000000000002b1c0	bl	0x4d9ac ; symbol stub for: __ZNSt3__120__throw_system_errorEiPKc
000000000002b1c4	b	0x2b1d8
000000000002b1c8	bl	__ZNSt3__125__throw_bad_function_callEv
000000000002b1cc	b	0x2b1d8
000000000002b1d0	sub	x0, x29, #0x80
000000000002b1d4	bl	0x4d8f8 ; symbol stub for: __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv
000000000002b1d8	brk	#0x1
000000000002b1dc	bl	___clang_call_terminate
000000000002b1e0	mov	x19, x0
000000000002b1e4	ldurb	w8, [x29, #-0x68]
000000000002b1e8	cbz	w8, 0x2b208
000000000002b1ec	sub	x0, x29, #0x80
000000000002b1f0	bl	__ZN6kotlin2gc18FinalizerProcessor26StartFinalizerThreadIfNoneEv.cold.1
000000000002b1f4	b	0x2b208
000000000002b1f8	b	0x2b1fc
000000000002b1fc	mov	x19, x0
000000000002b200	ldrb	w8, [sp, #0xa8]
000000000002b204	cbnz	w8, 0x2b210
000000000002b208	mov	x0, x19
000000000002b20c	bl	___clang_call_terminate
000000000002b210	ldr	x0, [sp, #0xa0]
000000000002b214	bl	0x4d9c4 ; symbol stub for: __ZNSt3__15mutex6unlockEv
000000000002b218	mov	x0, x19
000000000002b21c	bl	___clang_call_terminate
000000000002b220	bl	___clang_call_terminate
000000000002b224	bl	___clang_call_terminate
000000000002b228	bl	___clang_call_terminate
000000000002b22c	b	0x2b230
000000000002b230	mov	x19, x0
000000000002b234	ldrb	w8, [x22, #0x28]
000000000002b238	cbz	w8, 0x2b24c
000000000002b23c	ldrsb	w8, [x22, #0x27]
000000000002b240	tbz	w8, #0x1f, 0x2b24c
000000000002b244	ldr	x0, [x25]
000000000002b248	bl	0x4dba4 ; symbol stub for: _free
000000000002b24c	ldr	x0, [x22]
000000000002b250	str	xzr, [x22]
000000000002b254	cbz	x0, 0x2b280
000000000002b258	bl	0x4d940 ; symbol stub for: __ZNSt3__115__thread_structD1Ev
000000000002b25c	bl	0x4da54 ; symbol stub for: __ZdlPv
000000000002b260	b	0x2b280
000000000002b264	mov	x19, x0
000000000002b268	mov	x22, x25
000000000002b26c	mov	x0, x25
000000000002b270	bl	0x4d940 ; symbol stub for: __ZNSt3__115__thread_structD1Ev
000000000002b274	b	0x2b280
000000000002b278	mov	x22, x25
000000000002b27c	mov	x19, x0
000000000002b280	mov	x0, x22
000000000002b284	bl	0x4da54 ; symbol stub for: __ZdlPv
000000000002b288	b	0x2b290
000000000002b28c	mov	x19, x0
000000000002b290	ldrb	w8, [sp, #0xc8]
000000000002b294	cbz	w8, 0x2b2a8
000000000002b298	ldrsb	w8, [sp, #0xc7]
000000000002b29c	tbz	w8, #0x1f, 0x2b2a8
000000000002b2a0	ldr	x0, [sp, #0xb0]
000000000002b2a4	bl	0x4dba4 ; symbol stub for: _free
000000000002b2a8	ldr	x0, [sp, #0x58]
000000000002b2ac	bl	0x4d9c4 ; symbol stub for: __ZNSt3__15mutex6unlockEv
000000000002b2b0	mov	x0, x19
000000000002b2b4	bl	___clang_call_terminate
000000000002b2b8	bl	___clang_call_terminate
000000000002b2bc	bl	___clang_call_terminate
000000000002b2c0	bl	___clang_call_terminate
000000000002b2c4	mov	x19, x0
000000000002b2c8	cbz	x27, 0x2b2e8
000000000002b2cc	ldr	x20, [x27]
000000000002b2d0	str	xzr, [x27]
000000000002b2d4	mov	x0, x27
000000000002b2d8	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE4NodeD2Ev
000000000002b2dc	bl	_mi_free
000000000002b2e0	mov	x27, x20
000000000002b2e4	cbnz	x20, 0x2b2cc
000000000002b2e8	stlrb	wzr, [x23]
000000000002b2ec	mov	x0, x19
000000000002b2f0	bl	___clang_call_terminate
000000000002b2f4	bl	___clang_call_terminate
000000000002b2f8	bl	___clang_call_terminate
000000000002b2fc	bl	___clang_call_terminate
000000000002b300	bl	___clang_call_terminate
000000000002b304	bl	___clang_call_terminate
000000000002b308	bl	___clang_call_terminate
000000000002b30c	bl	___clang_call_terminate
000000000002b310	bl	___clang_call_terminate
__ZNSt3__114__thread_proxyINS_5tupleIJNS_10unique_ptrINS_15__thread_structENS_14default_deleteIS3_EEEEPFvN6kotlin12ScopedThread10attributesEOZNS7_2gc22ConcurrentMarkAndSweepC1ERNS7_2mm13ObjectFactoryISB_EERNSA_11GCSchedulerEE3$_3ES9_SI_EEEEEPvSN_:
000000000002b314	sub	sp, sp, #0x40
000000000002b318	stp	x20, x19, [sp, #0x20]
000000000002b31c	stp	x29, x30, [sp, #0x30]
000000000002b320	add	x29, sp, #0x30
000000000002b324	mov	x19, x0
000000000002b328	bl	0x4d9a0 ; symbol stub for: __ZNSt3__119__thread_local_dataEv
000000000002b32c	ldr	x1, [x19]
000000000002b330	str	xzr, [x19]
000000000002b334	ldr	x0, [x0]
000000000002b338	bl	0x4de08 ; symbol stub for: _pthread_setspecific
000000000002b33c	add	x1, x19, #0x30
000000000002b340	ldr	x8, [x19, #0x8]
000000000002b344	strb	wzr, [sp]
000000000002b348	strb	wzr, [sp, #0x18]
000000000002b34c	ldrb	w9, [x19, #0x28]
000000000002b350	cbz	w9, 0x2b374
000000000002b354	ldr	q0, [x19, #0x10]
000000000002b358	str	q0, [sp]
000000000002b35c	ldr	x9, [x19, #0x20]
000000000002b360	str	x9, [sp, #0x10]
000000000002b364	stp	xzr, xzr, [x19, #0x18]
000000000002b368	str	xzr, [x19, #0x10]
000000000002b36c	mov	w9, #0x1
000000000002b370	strb	w9, [sp, #0x18]
000000000002b374	mov	x0, sp
000000000002b378	blr	x8
000000000002b37c	ldrb	w8, [sp, #0x18]
000000000002b380	cbz	w8, 0x2b394
000000000002b384	ldrsb	w8, [sp, #0x17]
000000000002b388	tbz	w8, #0x1f, 0x2b394
000000000002b38c	ldr	x0, [sp]
000000000002b390	bl	0x4dba4 ; symbol stub for: _free
000000000002b394	ldrb	w8, [x19, #0x28]
000000000002b398	cbz	w8, 0x2b3ac
000000000002b39c	ldrsb	w8, [x19, #0x27]
000000000002b3a0	tbz	w8, #0x1f, 0x2b3ac
000000000002b3a4	ldr	x0, [x19, #0x10]
000000000002b3a8	bl	0x4dba4 ; symbol stub for: _free
000000000002b3ac	ldr	x0, [x19]
000000000002b3b0	str	xzr, [x19]
000000000002b3b4	cbz	x0, 0x2b3c0
000000000002b3b8	bl	0x4d940 ; symbol stub for: __ZNSt3__115__thread_structD1Ev
000000000002b3bc	bl	0x4da54 ; symbol stub for: __ZdlPv
000000000002b3c0	mov	x0, x19
000000000002b3c4	bl	0x4da54 ; symbol stub for: __ZdlPv
000000000002b3c8	mov	x0, #0x0
000000000002b3cc	ldp	x29, x30, [sp, #0x30]
000000000002b3d0	ldp	x20, x19, [sp, #0x20]
000000000002b3d4	add	sp, sp, #0x40
000000000002b3d8	ret
000000000002b3dc	mov	x20, x0
000000000002b3e0	ldrb	w8, [sp, #0x18]
000000000002b3e4	cbz	w8, 0x2b40c
000000000002b3e8	ldrsb	w8, [sp, #0x17]
000000000002b3ec	tbz	w8, #0x1f, 0x2b40c
000000000002b3f0	ldr	x0, [sp]
000000000002b3f4	bl	0x4dba4 ; symbol stub for: _free
000000000002b3f8	b	0x2b40c
000000000002b3fc	mov	x20, x0
000000000002b400	b	0x2b40c
000000000002b404	mov	x20, x0
000000000002b408	cbz	x19, 0x2b440
000000000002b40c	ldrb	w8, [x19, #0x28]
000000000002b410	cbz	w8, 0x2b424
000000000002b414	ldrsb	w8, [x19, #0x27]
000000000002b418	tbz	w8, #0x1f, 0x2b424
000000000002b41c	ldr	x0, [x19, #0x10]
000000000002b420	bl	0x4dba4 ; symbol stub for: _free
000000000002b424	ldr	x0, [x19]
000000000002b428	str	xzr, [x19]
000000000002b42c	cbz	x0, 0x2b438
000000000002b430	bl	0x4d940 ; symbol stub for: __ZNSt3__115__thread_structD1Ev
000000000002b434	bl	0x4da54 ; symbol stub for: __ZdlPv
000000000002b438	mov	x0, x19
000000000002b43c	bl	0x4da54 ; symbol stub for: __ZdlPv
000000000002b440	mov	x0, x20
000000000002b444	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
__ZN13GCStateHolderD1Ev:
000000000002b448	stp	x20, x19, [sp, #-0x20]!
000000000002b44c	stp	x29, x30, [sp, #0x10]
000000000002b450	add	x29, sp, #0x10
000000000002b454	mov	x19, x0
000000000002b458	add	x0, x0, #0x110
000000000002b45c	bl	0x4d994 ; symbol stub for: __ZNSt3__118condition_variableD1Ev
000000000002b460	add	x0, x19, #0xd0
000000000002b464	bl	0x4d994 ; symbol stub for: __ZNSt3__118condition_variableD1Ev
000000000002b468	add	x0, x19, #0x90
000000000002b46c	bl	0x4d994 ; symbol stub for: __ZNSt3__118condition_variableD1Ev
000000000002b470	add	x0, x19, #0x50
000000000002b474	bl	0x4d994 ; symbol stub for: __ZNSt3__118condition_variableD1Ev
000000000002b478	mov	x0, x19
000000000002b47c	ldp	x29, x30, [sp, #0x10]
000000000002b480	ldp	x20, x19, [sp], #0x20
000000000002b484	b	0x4d9d0 ; symbol stub for: __ZNSt3__15mutexD1Ev
__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE13ExtractUnsafeEPNS9_4NodeE:
000000000002b488	stp	x22, x21, [sp, #-0x30]!
000000000002b48c	stp	x20, x19, [sp, #0x10]
000000000002b490	stp	x29, x30, [sp, #0x20]
000000000002b494	add	x29, sp, #0x20
000000000002b498	mov	x20, x1
000000000002b49c	mov	x19, x0
000000000002b4a0	cbz	x2, 0x2b4dc
000000000002b4a4	mov	x21, x2
000000000002b4a8	ldr	x22, [x2]
000000000002b4ac	str	xzr, [x2]
000000000002b4b0	ldr	x8, [x22]
000000000002b4b4	str	xzr, [x22]
000000000002b4b8	ldr	x0, [x2]
000000000002b4bc	str	x8, [x2]
000000000002b4c0	cbz	x0, 0x2b4d0
000000000002b4c4	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE4NodeD2Ev
000000000002b4c8	bl	_mi_free
000000000002b4cc	ldr	x8, [x21]
000000000002b4d0	mov	x0, x21
000000000002b4d4	cbnz	x8, 0x2b520
000000000002b4d8	b	0x2b518
000000000002b4dc	ldr	x22, [x20]
000000000002b4e0	str	xzr, [x20]
000000000002b4e4	ldr	x8, [x22]
000000000002b4e8	str	xzr, [x22]
000000000002b4ec	ldr	x0, [x20]
000000000002b4f0	str	x8, [x20]
000000000002b4f4	cbz	x0, 0x2b504
000000000002b4f8	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE4NodeD2Ev
000000000002b4fc	bl	_mi_free
000000000002b500	ldr	x8, [x20]
000000000002b504	cbz	x8, 0x2b510
000000000002b508	mov	x21, x20
000000000002b50c	b	0x2b520
000000000002b510	mov	x21, #0x0
000000000002b514	mov	x0, x20
000000000002b518	str	x21, [x20, #0x8]
000000000002b51c	mov	x21, x0
000000000002b520	ldr	x8, [x20, #0x10]
000000000002b524	sub	x8, x8, #0x1
000000000002b528	str	x8, [x20, #0x10]
000000000002b52c	ldr	x8, [x21]
000000000002b530	stp	x22, x8, [x19]
000000000002b534	ldp	x29, x30, [sp, #0x20]
000000000002b538	ldp	x20, x19, [sp, #0x10]
000000000002b53c	ldp	x22, x21, [sp], #0x30
000000000002b540	ret
__ZN6kotlin12ScopedThread3RunIZNS_2gc18FinalizerProcessor26StartFinalizerThreadIfNoneEvE3$_0JEEENSt3__113invoke_resultIT_JDpT0_EE4typeENS0_10attributesEOS7_DpOS8_:
000000000002b544	sub	sp, sp, #0xc0
000000000002b548	stp	x28, x27, [sp, #0x60]
000000000002b54c	stp	x26, x25, [sp, #0x70]
000000000002b550	stp	x24, x23, [sp, #0x80]
000000000002b554	stp	x22, x21, [sp, #0x90]
000000000002b558	stp	x20, x19, [sp, #0xa0]
000000000002b55c	stp	x29, x30, [sp, #0xb0]
000000000002b560	add	x29, sp, #0xb0
000000000002b564	mov	x19, x1
000000000002b568	ldrb	w8, [x0, #0x18]
000000000002b56c	cbz	w8, 0x2b580
000000000002b570	ldrsb	w8, [x0, #0x17]
000000000002b574	tbz	w8, #0x1f, 0x2b57c
000000000002b578	ldr	x0, [x0]
000000000002b57c	bl	0x4ddfc ; symbol stub for: _pthread_setname_np
000000000002b580	ldr	x28, [x19]
000000000002b584	bl	_Kotlin_initRuntimeIfNeeded
000000000002b588	add	x19, x28, #0xc8
000000000002b58c	mov	x0, x19
000000000002b590	bl	0x4d9b8 ; symbol stub for: __ZNSt3__15mutex4lockEv
000000000002b594	mov	w23, #0x1
000000000002b598	strb	w23, [x28, #0x138]
000000000002b59c	str	x19, [sp, #0x18]
000000000002b5a0	mov	x0, x19
000000000002b5a4	bl	0x4d9c4 ; symbol stub for: __ZNSt3__15mutex6unlockEv
000000000002b5a8	add	x0, x28, #0x108
000000000002b5ac	str	x0, [sp, #0x10]
000000000002b5b0	bl	0x4d970 ; symbol stub for: __ZNSt3__118condition_variable10notify_allEv
000000000002b5b4	mov	x21, #0x0
000000000002b5b8	add	x25, x28, #0x58
000000000002b5bc	add	x8, sp, #0x48
000000000002b5c0	add	x9, x8, #0x8
000000000002b5c4	add	x24, x28, #0x28
000000000002b5c8	add	x8, sp, #0x28
000000000002b5cc	add	x8, x8, #0x8
000000000002b5d0	stp	x8, x9, [sp]
000000000002b5d4	add	x8, x28, #0x18
000000000002b5d8	str	x8, [sp, #0x20]
000000000002b5dc	adrp	x8, 61 ; 0x68000
000000000002b5e0	add	x8, x8, #0xa00
000000000002b5e4	ldr	x19, [x8]
000000000002b5e8	str	x25, [sp, #0x48]
000000000002b5ec	strb	w23, [sp, #0x50]
000000000002b5f0	mov	x0, x25
000000000002b5f4	bl	0x4d9b8 ; symbol stub for: __ZNSt3__15mutex4lockEv
000000000002b5f8	ldr	x20, [x28, #0x20]
000000000002b5fc	cbnz	x20, 0x2b628
000000000002b600	ldr	x8, [x28, #0xb8]
000000000002b604	cmp	x8, x21
000000000002b608	b.ne	0x2b7ec
000000000002b60c	ldrb	w8, [x28, #0xc0]
000000000002b610	cbnz	w8, 0x2b7f4
000000000002b614	add	x1, sp, #0x48
000000000002b618	mov	x0, x24
000000000002b61c	bl	0x4d988 ; symbol stub for: __ZNSt3__118condition_variable4waitERNS_11unique_lockINS_5mutexEEE
000000000002b620	ldr	x20, [x28, #0x20]
000000000002b624	cbz	x20, 0x2b600
000000000002b628	ldp	x8, x9, [x28, #0x10]
000000000002b62c	str	xzr, [x28, #0x10]
000000000002b630	ldr	x21, [x28, #0xb8]
000000000002b634	ldrb	w10, [sp, #0x50]
000000000002b638	stp	x9, x20, [sp, #0x38]
000000000002b63c	str	x8, [sp, #0x30]
000000000002b640	ldr	x8, [sp, #0x20]
000000000002b644	stp	xzr, xzr, [x8]
000000000002b648	cbz	w10, 0x2b850
000000000002b64c	ldr	x0, [sp, #0x48]
000000000002b650	bl	0x4d9c4 ; symbol stub for: __ZNSt3__15mutex6unlockEv
000000000002b654	strb	wzr, [sp, #0x50]
000000000002b658	cbz	x20, 0x2b6dc
000000000002b65c	adrp	x0, 61 ; 0x68000
000000000002b660	add	x0, x0, #0xa00
000000000002b664	blr	x19
000000000002b668	ldr	x22, [x0]
000000000002b66c	add	x26, x22, #0x138
000000000002b670	ldaxr	w20, [x26]
000000000002b674	stlxr	w8, wzr, [x26]
000000000002b678	cbnz	w8, 0x2b670
000000000002b67c	cmp	w20, #0x1
000000000002b680	b.ne	0x2b69c
000000000002b684	adr	x8, #0x571bf
000000000002b688	nop
000000000002b68c	ldarb	w8, [x8]
000000000002b690	tbz	w8, #0x0, 0x2b69c
000000000002b694	mov	x0, x26
000000000002b698	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000002b69c	ldr	x23, [sp, #0x30]
000000000002b6a0	cbnz	x23, 0x2b744
000000000002b6a4	mov	w23, #0x1
000000000002b6a8	cbz	x22, 0x2b6dc
000000000002b6ac	ldaxr	w8, [x26]
000000000002b6b0	stlxr	w9, w20, [x26]
000000000002b6b4	cbnz	w9, 0x2b6ac
000000000002b6b8	cbnz	w20, 0x2b6dc
000000000002b6bc	cmp	w8, #0x1
000000000002b6c0	b.ne	0x2b6dc
000000000002b6c4	adr	x8, #0x5717f
000000000002b6c8	nop
000000000002b6cc	ldarb	w8, [x8]
000000000002b6d0	tbz	w8, #0x0, 0x2b6dc
000000000002b6d4	mov	x0, x26
000000000002b6d8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000002b6dc	str	x21, [sp, #0x58]
000000000002b6e0	ldr	x0, [x28, #0xb0]
000000000002b6e4	cbz	x0, 0x2b848
000000000002b6e8	ldr	x8, [x0]
000000000002b6ec	ldr	x8, [x8, #0x30]
000000000002b6f0	add	x1, sp, #0x58
000000000002b6f4	blr	x8
000000000002b6f8	ldr	x0, [sp, #0x30]
000000000002b6fc	str	xzr, [sp, #0x30]
000000000002b700	cbz	x0, 0x2b7d4
000000000002b704	ldr	x20, [x0]
000000000002b708	str	xzr, [x0]
000000000002b70c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE4NodeD2Ev
000000000002b710	bl	_mi_free
000000000002b714	mov	x0, x20
000000000002b718	cbnz	x20, 0x2b704
000000000002b71c	ldr	x0, [sp, #0x30]
000000000002b720	str	xzr, [sp, #0x30]
000000000002b724	cbz	x0, 0x2b730
000000000002b728	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE4NodeD2Ev
000000000002b72c	bl	_mi_free
000000000002b730	ldrb	w8, [sp, #0x50]
000000000002b734	cbnz	w8, 0x2b7e0
000000000002b738	b	0x2b5e8
000000000002b73c	ldr	x23, [x23]
000000000002b740	cbz	x23, 0x2b6a4
000000000002b744	add	x27, x23, #0x10
000000000002b748	ldr	x8, [x23, #0x10]
000000000002b74c	and	x8, x8, #0xfffffffffffffffc
000000000002b750	ldr	x1, [x8]
000000000002b754	ldrb	w8, [x1, #0x58]
000000000002b758	tbnz	w8, #0x6, 0x2b778
000000000002b75c	ldar	x8, [x27]
000000000002b760	and	x8, x8, #0xfffffffffffffffc
000000000002b764	ldr	x9, [x8]
000000000002b768	cmp	x8, #0x0
000000000002b76c	ccmp	x9, x8, #0x4, ne
000000000002b770	b.eq	0x2b73c
000000000002b774	b	0x2b798
000000000002b778	mov	x0, x27
000000000002b77c	bl	__ZN12_GLOBAL__N_121RunFinalizerHooksImplEP9ObjHeaderPK8TypeInfo
000000000002b780	ldar	x8, [x27]
000000000002b784	and	x8, x8, #0xfffffffffffffffc
000000000002b788	ldr	x9, [x8]
000000000002b78c	cmp	x8, #0x0
000000000002b790	ccmp	x9, x8, #0x4, ne
000000000002b794	b.eq	0x2b73c
000000000002b798	ldar	x8, [x27]
000000000002b79c	and	x8, x8, #0xfffffffffffffffc
000000000002b7a0	ldr	x9, [x8]
000000000002b7a4	cmp	x9, x8
000000000002b7a8	csel	x27, xzr, x8, eq
000000000002b7ac	mov	x0, x27
000000000002b7b0	bl	__ZN6kotlin2mm15ExtraObjectData9UninstallEv
000000000002b7b4	adrp	x0, 61 ; 0x68000
000000000002b7b8	add	x0, x0, #0xa00
000000000002b7bc	blr	x19
000000000002b7c0	ldr	x8, [x0]
000000000002b7c4	add	x0, x8, #0x8
000000000002b7c8	mov	x1, x27
000000000002b7cc	bl	__ZN6kotlin2mm22ExtraObjectDataFactory22DestroyExtraObjectDataEPNS0_10ThreadDataERNS0_15ExtraObjectDataE
000000000002b7d0	b	0x2b73c
000000000002b7d4	str	xzr, [sp, #0x30]
000000000002b7d8	ldrb	w8, [sp, #0x50]
000000000002b7dc	cbz	w8, 0x2b5e8
000000000002b7e0	ldr	x0, [sp, #0x48]
000000000002b7e4	bl	0x4d9c4 ; symbol stub for: __ZNSt3__15mutex6unlockEv
000000000002b7e8	b	0x2b5e8
000000000002b7ec	mov	x20, #0x0
000000000002b7f0	b	0x2b628
000000000002b7f4	strb	wzr, [x28, #0xc1]
000000000002b7f8	ldrb	w8, [sp, #0x50]
000000000002b7fc	cbz	w8, 0x2b808
000000000002b800	ldr	x0, [sp, #0x48]
000000000002b804	bl	0x4d9c4 ; symbol stub for: __ZNSt3__15mutex6unlockEv
000000000002b808	ldr	x19, [sp, #0x18]
000000000002b80c	mov	x0, x19
000000000002b810	bl	0x4d9b8 ; symbol stub for: __ZNSt3__15mutex4lockEv
000000000002b814	strb	wzr, [x28, #0x138]
000000000002b818	mov	x0, x19
000000000002b81c	bl	0x4d9c4 ; symbol stub for: __ZNSt3__15mutex6unlockEv
000000000002b820	ldr	x0, [sp, #0x10]
000000000002b824	bl	0x4d970 ; symbol stub for: __ZNSt3__118condition_variable10notify_allEv
000000000002b828	ldp	x29, x30, [sp, #0xb0]
000000000002b82c	ldp	x20, x19, [sp, #0xa0]
000000000002b830	ldp	x22, x21, [sp, #0x90]
000000000002b834	ldp	x24, x23, [sp, #0x80]
000000000002b838	ldp	x26, x25, [sp, #0x70]
000000000002b83c	ldp	x28, x27, [sp, #0x60]
000000000002b840	add	sp, sp, #0xc0
000000000002b844	ret
000000000002b848	bl	__ZNSt3__125__throw_bad_function_callEv
000000000002b84c	b	0x2b860
000000000002b850	adr	x1, #0x268c8 ; literal pool for: "unique_lock::unlock: not locked"
000000000002b854	nop
000000000002b858	mov	w0, #0x1
000000000002b85c	bl	0x4d9ac ; symbol stub for: __ZNSt3__120__throw_system_errorEiPKc
000000000002b860	brk	#0x1
000000000002b864	bl	___clang_call_terminate
000000000002b868	b	0x2b86c
000000000002b86c	mov	x19, x0
000000000002b870	ldr	x3, [sp, #0x30]
000000000002b874	add	x0, sp, #0x48
000000000002b878	ldp	x2, x1, [sp]
000000000002b87c	bl	__ZN6kotlin12ScopedThread3RunIZNS_2gc18FinalizerProcessor26StartFinalizerThreadIfNoneEvE3$_0JEEENSt3__113invoke_resultIT_JDpT0_EE4typeENS0_10attributesEOS7_DpOS8_.cold.1
000000000002b880	mov	x0, x19
000000000002b884	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
__ZNSt3__114__thread_proxyINS_5tupleIJNS_10unique_ptrINS_15__thread_structENS_14default_deleteIS3_EEEEPFvN6kotlin12ScopedThread10attributesEOZNS7_2gc18FinalizerProcessor26StartFinalizerThreadIfNoneEvE3$_0ES9_SC_EEEEEPvSH_:
000000000002b888	sub	sp, sp, #0x40
000000000002b88c	stp	x20, x19, [sp, #0x20]
000000000002b890	stp	x29, x30, [sp, #0x30]
000000000002b894	add	x29, sp, #0x30
000000000002b898	mov	x19, x0
000000000002b89c	bl	0x4d9a0 ; symbol stub for: __ZNSt3__119__thread_local_dataEv
000000000002b8a0	ldr	x1, [x19]
000000000002b8a4	str	xzr, [x19]
000000000002b8a8	ldr	x0, [x0]
000000000002b8ac	bl	0x4de08 ; symbol stub for: _pthread_setspecific
000000000002b8b0	add	x1, x19, #0x30
000000000002b8b4	ldr	x8, [x19, #0x8]
000000000002b8b8	strb	wzr, [sp]
000000000002b8bc	strb	wzr, [sp, #0x18]
000000000002b8c0	ldrb	w9, [x19, #0x28]
000000000002b8c4	cbz	w9, 0x2b8e8
000000000002b8c8	ldr	q0, [x19, #0x10]
000000000002b8cc	str	q0, [sp]
000000000002b8d0	ldr	x9, [x19, #0x20]
000000000002b8d4	str	x9, [sp, #0x10]
000000000002b8d8	stp	xzr, xzr, [x19, #0x18]
000000000002b8dc	str	xzr, [x19, #0x10]
000000000002b8e0	mov	w9, #0x1
000000000002b8e4	strb	w9, [sp, #0x18]
000000000002b8e8	mov	x0, sp
000000000002b8ec	blr	x8
000000000002b8f0	ldrb	w8, [sp, #0x18]
000000000002b8f4	cbz	w8, 0x2b908
000000000002b8f8	ldrsb	w8, [sp, #0x17]
000000000002b8fc	tbz	w8, #0x1f, 0x2b908
000000000002b900	ldr	x0, [sp]
000000000002b904	bl	0x4dba4 ; symbol stub for: _free
000000000002b908	ldrb	w8, [x19, #0x28]
000000000002b90c	cbz	w8, 0x2b920
000000000002b910	ldrsb	w8, [x19, #0x27]
000000000002b914	tbz	w8, #0x1f, 0x2b920
000000000002b918	ldr	x0, [x19, #0x10]
000000000002b91c	bl	0x4dba4 ; symbol stub for: _free
000000000002b920	ldr	x0, [x19]
000000000002b924	str	xzr, [x19]
000000000002b928	cbz	x0, 0x2b934
000000000002b92c	bl	0x4d940 ; symbol stub for: __ZNSt3__115__thread_structD1Ev
000000000002b930	bl	0x4da54 ; symbol stub for: __ZdlPv
000000000002b934	mov	x0, x19
000000000002b938	bl	0x4da54 ; symbol stub for: __ZdlPv
000000000002b93c	mov	x0, #0x0
000000000002b940	ldp	x29, x30, [sp, #0x30]
000000000002b944	ldp	x20, x19, [sp, #0x20]
000000000002b948	add	sp, sp, #0x40
000000000002b94c	ret
000000000002b950	mov	x20, x0
000000000002b954	ldrb	w8, [sp, #0x18]
000000000002b958	cbz	w8, 0x2b980
000000000002b95c	ldrsb	w8, [sp, #0x17]
000000000002b960	tbz	w8, #0x1f, 0x2b980
000000000002b964	ldr	x0, [sp]
000000000002b968	bl	0x4dba4 ; symbol stub for: _free
000000000002b96c	b	0x2b980
000000000002b970	mov	x20, x0
000000000002b974	b	0x2b980
000000000002b978	mov	x20, x0
000000000002b97c	cbz	x19, 0x2b9b4
000000000002b980	ldrb	w8, [x19, #0x28]
000000000002b984	cbz	w8, 0x2b998
000000000002b988	ldrsb	w8, [x19, #0x27]
000000000002b98c	tbz	w8, #0x1f, 0x2b998
000000000002b990	ldr	x0, [x19, #0x10]
000000000002b994	bl	0x4dba4 ; symbol stub for: _free
000000000002b998	ldr	x0, [x19]
000000000002b99c	str	xzr, [x19]
000000000002b9a0	cbz	x0, 0x2b9ac
000000000002b9a4	bl	0x4d940 ; symbol stub for: __ZNSt3__115__thread_structD1Ev
000000000002b9a8	bl	0x4da54 ; symbol stub for: __ZdlPv
000000000002b9ac	mov	x0, x19
000000000002b9b0	bl	0x4da54 ; symbol stub for: __ZdlPv
000000000002b9b4	mov	x0, x20
000000000002b9b8	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
__ZNSt3__110__function6__funcIZN6kotlin2gc22ConcurrentMarkAndSweepC1ERNS2_2mm13ObjectFactoryIS4_EERNS3_11GCSchedulerEE3$_2NS_9allocatorISB_EEFvvEED1Ev:
000000000002b9bc	ret
__ZNSt3__110__function6__funcIZN6kotlin2gc22ConcurrentMarkAndSweepC1ERNS2_2mm13ObjectFactoryIS4_EERNS3_11GCSchedulerEE3$_2NS_9allocatorISB_EEFvvEED0Ev:
000000000002b9c0	b	0x4da54 ; symbol stub for: __ZdlPv
__ZNKSt3__110__function6__funcIZN6kotlin2gc22ConcurrentMarkAndSweepC1ERNS2_2mm13ObjectFactoryIS4_EERNS3_11GCSchedulerEE3$_2NS_9allocatorISB_EEFvvEE7__cloneEv:
000000000002b9c4	stp	x20, x19, [sp, #-0x20]!
000000000002b9c8	stp	x29, x30, [sp, #0x10]
000000000002b9cc	add	x29, sp, #0x10
000000000002b9d0	mov	x19, x0
000000000002b9d4	mov	w0, #0x10
000000000002b9d8	bl	0x4da60 ; symbol stub for: __Znwm
000000000002b9dc	ldr	x8, [x19, #0x8]
000000000002b9e0	adr	x9, #0x37260
000000000002b9e4	nop
000000000002b9e8	stp	x9, x8, [x0]
000000000002b9ec	ldp	x29, x30, [sp, #0x10]
000000000002b9f0	ldp	x20, x19, [sp], #0x20
000000000002b9f4	ret
__ZNKSt3__110__function6__funcIZN6kotlin2gc22ConcurrentMarkAndSweepC1ERNS2_2mm13ObjectFactoryIS4_EERNS3_11GCSchedulerEE3$_2NS_9allocatorISB_EEFvvEE7__cloneEPNS0_6__baseISE_EE:
000000000002b9f8	ldr	x8, [x0, #0x8]
000000000002b9fc	adr	x9, #0x37244
000000000002ba00	nop
000000000002ba04	stp	x9, x8, [x1]
000000000002ba08	ret
__ZNSt3__110__function6__funcIZN6kotlin2gc22ConcurrentMarkAndSweepC1ERNS2_2mm13ObjectFactoryIS4_EERNS3_11GCSchedulerEE3$_2NS_9allocatorISB_EEFvvEE7destroyEv:
000000000002ba0c	ret
__ZNSt3__110__function6__funcIZN6kotlin2gc22ConcurrentMarkAndSweepC1ERNS2_2mm13ObjectFactoryIS4_EERNS3_11GCSchedulerEE3$_2NS_9allocatorISB_EEFvvEE18destroy_deallocateEv:
000000000002ba10	b	0x4da54 ; symbol stub for: __ZdlPv
__ZNSt3__110__function6__funcIZN6kotlin2gc22ConcurrentMarkAndSweepC1ERNS2_2mm13ObjectFactoryIS4_EERNS3_11GCSchedulerEE3$_2NS_9allocatorISB_EEFvvEEclEv:
000000000002ba14	ldr	x0, [x0, #0x8]
000000000002ba18	b	__ZZN6kotlin2gc22ConcurrentMarkAndSweepC1ERNS_2mm13ObjectFactoryIS1_EERNS0_11GCSchedulerEENK3$_2clEv
__ZNKSt3__110__function6__funcIZN6kotlin2gc22ConcurrentMarkAndSweepC1ERNS2_2mm13ObjectFactoryIS4_EERNS3_11GCSchedulerEE3$_2NS_9allocatorISB_EEFvvEE6targetERKSt9type_info:
000000000002ba1c	stp	x20, x19, [sp, #-0x20]!
000000000002ba20	stp	x29, x30, [sp, #0x10]
000000000002ba24	add	x29, sp, #0x10
000000000002ba28	mov	x19, x0
000000000002ba2c	ldr	x9, [x1, #0x8]
000000000002ba30	adr	x8, #0x23418
000000000002ba34	nop
000000000002ba38	cmp	x9, x8
000000000002ba3c	b.ne	0x2ba50
000000000002ba40	add	x0, x19, #0x8
000000000002ba44	ldp	x29, x30, [sp, #0x10]
000000000002ba48	ldp	x20, x19, [sp], #0x20
000000000002ba4c	ret
000000000002ba50	tst	x9, x8
000000000002ba54	b.lt	0x2ba68
000000000002ba58	mov	x0, #0x0
000000000002ba5c	ldp	x29, x30, [sp, #0x10]
000000000002ba60	ldp	x20, x19, [sp], #0x20
000000000002ba64	ret
000000000002ba68	and	x0, x9, #0x7fffffffffffffff
000000000002ba6c	and	x1, x8, #0x7fffffffffffffff
000000000002ba70	bl	0x4de5c ; symbol stub for: _strcmp
000000000002ba74	cbz	w0, 0x2ba40
000000000002ba78	mov	x0, #0x0
000000000002ba7c	ldp	x29, x30, [sp, #0x10]
000000000002ba80	ldp	x20, x19, [sp], #0x20
000000000002ba84	ret
__ZNKSt3__110__function6__funcIZN6kotlin2gc22ConcurrentMarkAndSweepC1ERNS2_2mm13ObjectFactoryIS4_EERNS3_11GCSchedulerEE3$_2NS_9allocatorISB_EEFvvEE11target_typeEv:
000000000002ba88	adr	x0, #0x37218
000000000002ba8c	nop
000000000002ba90	ret
__ZZN6kotlin2gc22ConcurrentMarkAndSweepC1ERNS_2mm13ObjectFactoryIS1_EERNS0_11GCSchedulerEENK3$_2clEv:
000000000002ba94	stp	x20, x19, [sp, #-0x20]!
000000000002ba98	stp	x29, x30, [sp, #0x10]
000000000002ba9c	add	x29, sp, #0x10
000000000002baa0	mov	x8, x0
000000000002baa4	adrp	x0, 61 ; 0x68000
000000000002baa8	add	x0, x0, #0xa00
000000000002baac	ldr	x9, [x0]
000000000002bab0	blr	x9
000000000002bab4	ldr	x19, [x0]
000000000002bab8	cbz	x19, 0x2bad4
000000000002babc	add	x9, x19, #0x138
000000000002bac0	mov	w10, #0x1
000000000002bac4	ldaxr	w20, [x9]
000000000002bac8	stlxr	w11, w10, [x9]
000000000002bacc	cbnz	w11, 0x2bac4
000000000002bad0	b	0x2bad8
000000000002bad4	mov	w20, #0x1
000000000002bad8	add	x0, x8, #0x18
000000000002badc	bl	__ZN13GCStateHolder8scheduleEv
000000000002bae0	cbz	x19, 0x2bb10
000000000002bae4	add	x0, x19, #0x138
000000000002bae8	ldaxr	w8, [x0]
000000000002baec	stlxr	w9, w20, [x0]
000000000002baf0	cbnz	w9, 0x2bae8
000000000002baf4	cbnz	w20, 0x2bb10
000000000002baf8	cmp	w8, #0x1
000000000002bafc	b.ne	0x2bb10
000000000002bb00	adr	x8, #0x56d43
000000000002bb04	nop
000000000002bb08	ldarb	w8, [x8]
000000000002bb0c	tbnz	w8, #0x0, 0x2bb1c
000000000002bb10	ldp	x29, x30, [sp, #0x10]
000000000002bb14	ldp	x20, x19, [sp], #0x20
000000000002bb18	ret
000000000002bb1c	ldp	x29, x30, [sp, #0x10]
000000000002bb20	ldp	x20, x19, [sp], #0x20
000000000002bb24	b	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000002bb28	mov	x9, x19
000000000002bb2c	mov	x19, x0
000000000002bb30	cbz	x9, 0x2bb68
000000000002bb34	mov	x8, x9
000000000002bb38	add	x0, x9, #0x138
000000000002bb3c	ldaxr	w8, [x0]
000000000002bb40	stlxr	w9, w20, [x0]
000000000002bb44	cbnz	w9, 0x2bb3c
000000000002bb48	cbnz	w20, 0x2bb68
000000000002bb4c	cmp	w8, #0x1
000000000002bb50	b.ne	0x2bb68
000000000002bb54	adr	x8, #0x56cef
000000000002bb58	nop
000000000002bb5c	ldarb	w8, [x8]
000000000002bb60	tbz	w8, #0x0, 0x2bb68
000000000002bb64	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000002bb68	mov	x0, x19
000000000002bb6c	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
__ZNSt3__110__function6__funcIZN6kotlin2gc22ConcurrentMarkAndSweepC1ERNS2_2mm13ObjectFactoryIS4_EERNS3_11GCSchedulerEE3$_1NS_9allocatorISB_EEFvxEED1Ev:
000000000002bb70	ret
__ZNSt3__110__function6__funcIZN6kotlin2gc22ConcurrentMarkAndSweepC1ERNS2_2mm13ObjectFactoryIS4_EERNS3_11GCSchedulerEE3$_1NS_9allocatorISB_EEFvxEED0Ev:
000000000002bb74	b	0x4da54 ; symbol stub for: __ZdlPv
__ZNKSt3__110__function6__funcIZN6kotlin2gc22ConcurrentMarkAndSweepC1ERNS2_2mm13ObjectFactoryIS4_EERNS3_11GCSchedulerEE3$_1NS_9allocatorISB_EEFvxEE7__cloneEv:
000000000002bb78	stp	x20, x19, [sp, #-0x20]!
000000000002bb7c	stp	x29, x30, [sp, #0x10]
000000000002bb80	add	x29, sp, #0x10
000000000002bb84	mov	x19, x0
000000000002bb88	mov	w0, #0x10
000000000002bb8c	bl	0x4da60 ; symbol stub for: __Znwm
000000000002bb90	ldr	x8, [x19, #0x8]
000000000002bb94	adr	x9, #0x37054
000000000002bb98	nop
000000000002bb9c	stp	x9, x8, [x0]
000000000002bba0	ldp	x29, x30, [sp, #0x10]
000000000002bba4	ldp	x20, x19, [sp], #0x20
000000000002bba8	ret
__ZNKSt3__110__function6__funcIZN6kotlin2gc22ConcurrentMarkAndSweepC1ERNS2_2mm13ObjectFactoryIS4_EERNS3_11GCSchedulerEE3$_1NS_9allocatorISB_EEFvxEE7__cloneEPNS0_6__baseISE_EE:
000000000002bbac	ldr	x8, [x0, #0x8]
000000000002bbb0	adr	x9, #0x37038
000000000002bbb4	nop
000000000002bbb8	stp	x9, x8, [x1]
000000000002bbbc	ret
__ZNSt3__110__function6__funcIZN6kotlin2gc22ConcurrentMarkAndSweepC1ERNS2_2mm13ObjectFactoryIS4_EERNS3_11GCSchedulerEE3$_1NS_9allocatorISB_EEFvxEE7destroyEv:
000000000002bbc0	ret
__ZNSt3__110__function6__funcIZN6kotlin2gc22ConcurrentMarkAndSweepC1ERNS2_2mm13ObjectFactoryIS4_EERNS3_11GCSchedulerEE3$_1NS_9allocatorISB_EEFvxEE18destroy_deallocateEv:
000000000002bbc4	b	0x4da54 ; symbol stub for: __ZdlPv
__ZNSt3__110__function6__funcIZN6kotlin2gc22ConcurrentMarkAndSweepC1ERNS2_2mm13ObjectFactoryIS4_EERNS3_11GCSchedulerEE3$_1NS_9allocatorISB_EEFvxEEclEOx:
000000000002bbc8	stp	x22, x21, [sp, #-0x30]!
000000000002bbcc	stp	x20, x19, [sp, #0x10]
000000000002bbd0	stp	x29, x30, [sp, #0x20]
000000000002bbd4	add	x29, sp, #0x20
000000000002bbd8	ldr	x20, [x1]
000000000002bbdc	ldr	x21, [x0, #0x8]
000000000002bbe0	ldr	x19, [x21, #0x120]
000000000002bbe4	mov	x0, x19
000000000002bbe8	bl	0x4d9b8 ; symbol stub for: __ZNSt3__15mutex4lockEv
000000000002bbec	str	x20, [x21, #0x118]
000000000002bbf0	add	x0, x21, #0x128
000000000002bbf4	bl	0x4d970 ; symbol stub for: __ZNSt3__118condition_variable10notify_allEv
000000000002bbf8	mov	x0, x19
000000000002bbfc	ldp	x29, x30, [sp, #0x20]
000000000002bc00	ldp	x20, x19, [sp, #0x10]
000000000002bc04	ldp	x22, x21, [sp], #0x30
000000000002bc08	b	0x4d9c4 ; symbol stub for: __ZNSt3__15mutex6unlockEv
__ZNKSt3__110__function6__funcIZN6kotlin2gc22ConcurrentMarkAndSweepC1ERNS2_2mm13ObjectFactoryIS4_EERNS3_11GCSchedulerEE3$_1NS_9allocatorISB_EEFvxEE6targetERKSt9type_info:
000000000002bc0c	stp	x20, x19, [sp, #-0x20]!
000000000002bc10	stp	x29, x30, [sp, #0x10]
000000000002bc14	add	x29, sp, #0x10
000000000002bc18	mov	x19, x0
000000000002bc1c	ldr	x9, [x1, #0x8]
000000000002bc20	adr	x8, #0x23315
000000000002bc24	nop
000000000002bc28	cmp	x9, x8
000000000002bc2c	b.ne	0x2bc40
000000000002bc30	add	x0, x19, #0x8
000000000002bc34	ldp	x29, x30, [sp, #0x10]
000000000002bc38	ldp	x20, x19, [sp], #0x20
000000000002bc3c	ret
000000000002bc40	tst	x9, x8
000000000002bc44	b.lt	0x2bc58
000000000002bc48	mov	x0, #0x0
000000000002bc4c	ldp	x29, x30, [sp, #0x10]
000000000002bc50	ldp	x20, x19, [sp], #0x20
000000000002bc54	ret
000000000002bc58	and	x0, x9, #0x7fffffffffffffff
000000000002bc5c	and	x1, x8, #0x7fffffffffffffff
000000000002bc60	bl	0x4de5c ; symbol stub for: _strcmp
000000000002bc64	cbz	w0, 0x2bc30
000000000002bc68	mov	x0, #0x0
000000000002bc6c	ldp	x29, x30, [sp, #0x10]
000000000002bc70	ldp	x20, x19, [sp], #0x20
000000000002bc74	ret
__ZNKSt3__110__function6__funcIZN6kotlin2gc22ConcurrentMarkAndSweepC1ERNS2_2mm13ObjectFactoryIS4_EERNS3_11GCSchedulerEE3$_1NS_9allocatorISB_EEFvxEE11target_typeEv:
000000000002bc78	adr	x0, #0x37050
000000000002bc7c	nop
000000000002bc80	ret
__ZNSt3__117__call_once_proxyINS_5tupleIJOZN6kotlin14initObjectPoolEvE3$_0EEEEEvPv:
000000000002bc84	adr	x8, #0x3cc14
000000000002bc88	nop
000000000002bc8c	mov	w9, #0x1
000000000002bc90	str	x9, [x8]
000000000002bc94	mov	w9, #0x2
000000000002bc98	str	w9, [x8, #0x8]
000000000002bc9c	ret
__ZN6kotlin20allocateInObjectPoolEm:
000000000002bca0	stp	x20, x19, [sp, #-0x20]!
000000000002bca4	stp	x29, x30, [sp, #0x10]
000000000002bca8	add	x29, sp, #0x10
000000000002bcac	mov	x1, x0
000000000002bcb0	adrp	x0, 61 ; 0x68000
000000000002bcb4	add	x0, x0, #0xa18
000000000002bcb8	ldr	x8, [x0]
000000000002bcbc	blr	x8
000000000002bcc0	tbnz	x1, #0x3f, 0x2bd50
000000000002bcc4	ldr	x0, [x0]
000000000002bcc8	cmp	x1, #0x400
000000000002bccc	b.hi	0x2bd64
000000000002bcd0	add	x8, x1, #0x7
000000000002bcd4	and	x8, x8, #0xfffffffffffffff8
000000000002bcd8	add	x8, x0, x8
000000000002bcdc	ldr	x8, [x8, #0x8]
000000000002bce0	ldr	x19, [x8, #0x8]
000000000002bce4	and	x9, x19, #0x7
000000000002bce8	cmp	x19, #0x0
000000000002bcec	ccmp	x9, #0x0, #0x0, ne
000000000002bcf0	b.ne	0x2bd64
000000000002bcf4	ldr	w9, [x8, #0x10]
000000000002bcf8	add	w9, w9, #0x1
000000000002bcfc	str	w9, [x8, #0x10]
000000000002bd00	ldr	x9, [x19]
000000000002bd04	str	x9, [x8, #0x8]
000000000002bd08	cmp	x1, #0x9
000000000002bd0c	b.lo	0x2bd2c
000000000002bd10	ldrb	w8, [x8, #0x7]
000000000002bd14	tbz	w8, #0x0, 0x2bd2c
000000000002bd18	str	xzr, [x19]
000000000002bd1c	mov	x0, x19
000000000002bd20	ldp	x29, x30, [sp, #0x10]
000000000002bd24	ldp	x20, x19, [sp], #0x20
000000000002bd28	ret
000000000002bd2c	mov	x0, x19
000000000002bd30	bl	__mi_usable_size
000000000002bd34	mov	x1, x0
000000000002bd38	mov	x0, x19
000000000002bd3c	bl	0x4db14 ; symbol stub for: _bzero
000000000002bd40	mov	x0, x19
000000000002bd44	ldp	x29, x30, [sp, #0x10]
000000000002bd48	ldp	x20, x19, [sp], #0x20
000000000002bd4c	ret
000000000002bd50	mov	x19, #0x0
000000000002bd54	mov	x0, x19
000000000002bd58	ldp	x29, x30, [sp, #0x10]
000000000002bd5c	ldp	x20, x19, [sp], #0x20
000000000002bd60	ret
000000000002bd64	sub	x8, x1, #0x8
000000000002bd68	mov	w9, #0x1fff8
000000000002bd6c	cmp	x8, x9
000000000002bd70	b.hi	0x2bd88
000000000002bd74	and	x8, x1, #0x7
000000000002bd78	cbnz	x8, 0x2bd88
000000000002bd7c	ldp	x29, x30, [sp, #0x10]
000000000002bd80	ldp	x20, x19, [sp], #0x20
000000000002bd84	b	__mi_heap_malloc_zero
000000000002bd88	add	x1, x1, #0x7
000000000002bd8c	bl	__mi_heap_malloc_zero
000000000002bd90	mov	x19, x0
000000000002bd94	cbz	x0, 0x2bd1c
000000000002bd98	and	x8, x19, #0xfffffffffffffff8
000000000002bd9c	add	x8, x8, #0x8
000000000002bda0	tst	x19, #0x7
000000000002bda4	csel	x8, x19, x8, eq
000000000002bda8	cmp	x8, x19
000000000002bdac	b.eq	0x2bd1c
000000000002bdb0	and	x9, x19, #0xffffffffffc00000
000000000002bdb4	and	x10, x19, #0x3fffff
000000000002bdb8	ldr	x11, [x9, #0x60]
000000000002bdbc	lsr	x10, x10, x11
000000000002bdc0	add	x9, x9, x10, lsl #6
000000000002bdc4	ldrb	w10, [x9, #0x7e]
000000000002bdc8	orr	w10, w10, #0x2
000000000002bdcc	strb	w10, [x9, #0x7e]
000000000002bdd0	mov	x19, x8
000000000002bdd4	mov	x0, x19
000000000002bdd8	ldp	x29, x30, [sp, #0x10]
000000000002bddc	ldp	x20, x19, [sp], #0x20
000000000002bde0	ret
__mi_process_init:
000000000002bde4	sub	sp, sp, #0x30
000000000002bde8	stp	x20, x19, [sp, #0x10]
000000000002bdec	stp	x29, x30, [sp, #0x20]
000000000002bdf0	add	x29, sp, #0x20
000000000002bdf4	nop
000000000002bdf8	ldr	x8, #0x3c210
000000000002bdfc	cbnz	x8, 0x2beb0
000000000002be00	bl	0x4ddf0 ; symbol stub for: _pthread_self
000000000002be04	bl	0x4dda8 ; symbol stub for: _pthread_mach_thread_np
000000000002be08	mov	w8, w0
000000000002be0c	adrp	x9, 61 ; 0x68000
000000000002be10	str	x8, [x9]
000000000002be14	bl	0x4dbc8 ; symbol stub for: _mach_absolute_time
000000000002be18	adr	x8, #0x440
000000000002be1c	nop
000000000002be20	adr	x9, #0x358
000000000002be24	nop
000000000002be28	eor	x8, x9, x8
000000000002be2c	eor	x8, x0, x8
000000000002be30	eor	w9, w8, w8, lsr #17
000000000002be34	and	x9, x9, #0xf
000000000002be38	add	x9, x9, #0x1
000000000002be3c	mov	w10, #0x11
000000000002be40	mov	x11, #0xe5b9
000000000002be44	movk	x11, #0x1ce4, lsl #16
000000000002be48	movk	x11, #0x476d, lsl #32
000000000002be4c	movk	x11, #0xbf58, lsl #48
000000000002be50	mov	x12, #0x11eb
000000000002be54	movk	x12, #0x1331, lsl #16
000000000002be58	movk	x12, #0x49bb, lsl #32
000000000002be5c	movk	x12, #0x94d0, lsl #48
000000000002be60	cmp	x8, #0x0
000000000002be64	csel	x8, x10, x8, eq
000000000002be68	eor	x8, x8, x8, lsr #30
000000000002be6c	mul	x8, x8, x11
000000000002be70	eor	x8, x8, x8, lsr #27
000000000002be74	mul	x8, x8, x12
000000000002be78	eor	x8, x8, x8, lsr #31
000000000002be7c	subs	x9, x9, #0x1
000000000002be80	b.ne	0x2be60
000000000002be84	adr	x19, #0x3b65c
000000000002be88	nop
000000000002be8c	str	x8, [x19, #0xb28]
000000000002be90	add	x0, x19, #0xb40
000000000002be94	bl	__mi_random_init
000000000002be98	mov	x0, x19
000000000002be9c	bl	__mi_heap_random_next
000000000002bea0	str	x0, [x19, #0xb30]
000000000002bea4	mov	x0, x19
000000000002bea8	bl	__mi_heap_random_next
000000000002beac	str	x0, [x19, #0xb38]
000000000002beb0	adrp	x8, 87 ; 0x82000
000000000002beb4	mov	w9, #0x1
000000000002beb8	strb	w9, [x8, #0x846]
000000000002bebc	adr	x0, #0x530
000000000002bec0	nop
000000000002bec4	bl	0x4dafc ; symbol stub for: _atexit
000000000002bec8	adr	x9, #0x56a58
000000000002becc	nop
000000000002bed0	ldaxr	x8, [x9]
000000000002bed4	add	x10, x8, #0x1
000000000002bed8	stlxr	w11, x10, [x9]
000000000002bedc	cbnz	w11, 0x2bed0
000000000002bee0	cmp	x8, #0x8, lsl #12
000000000002bee4	mov	w9, #0x8000
000000000002bee8	adr	x19, #0x3e8e0
000000000002beec	nop
000000000002bef0	csel	x20, x8, x9, lo
000000000002bef4	strb	wzr, [x19, x20]
000000000002bef8	nop
000000000002befc	ldr	x8, #0x28134 ; literal pool symbol address: ___stderrp
000000000002bf00	ldr	x1, [x8]
000000000002bf04	mov	x0, x19
000000000002bf08	bl	0x4db98 ; symbol stub for: _fputs
000000000002bf0c	mov	w8, #0xa
000000000002bf10	strb	w8, [x19, x20]
000000000002bf14	adrp	x8, 87 ; 0x82000
000000000002bf18	adr	x9, #0x9124
000000000002bf1c	nop
000000000002bf20	str	x9, [x8, #0x918]
000000000002bf24	mov	w0, #0x0
000000000002bf28	bl	_mi_option_get
000000000002bf2c	adr	x20, #0x3c57c
000000000002bf30	nop
000000000002bf34	ldr	x8, [x20, #0x388]
000000000002bf38	ldr	x9, [x20, #0x378]
000000000002bf3c	stp	x8, x9, [sp]
000000000002bf40	adr	x19, #0x26711 ; literal pool for: "option '%s': %ld\n"
000000000002bf44	nop
000000000002bf48	mov	x0, x19
000000000002bf4c	bl	__mi_verbose_message
000000000002bf50	mov	w0, #0x1
000000000002bf54	bl	_mi_option_get
000000000002bf58	ldr	x8, [x20, #0x3a0]
000000000002bf5c	ldr	x9, [x20, #0x390]
000000000002bf60	stp	x8, x9, [sp]
000000000002bf64	mov	x0, x19
000000000002bf68	bl	__mi_verbose_message
000000000002bf6c	mov	w0, #0x2
000000000002bf70	bl	_mi_option_get
000000000002bf74	mov	w0, #0x3
000000000002bf78	bl	_mi_option_get
000000000002bf7c	ldr	x8, [x20, #0x3d0]
000000000002bf80	ldr	x9, [x20, #0x3c0]
000000000002bf84	stp	x8, x9, [sp]
000000000002bf88	mov	x0, x19
000000000002bf8c	bl	__mi_verbose_message
000000000002bf90	mov	w0, #0x4
000000000002bf94	bl	_mi_option_get
000000000002bf98	ldr	x8, [x20, #0x3e8]
000000000002bf9c	ldr	x9, [x20, #0x3d8]
000000000002bfa0	stp	x8, x9, [sp]
000000000002bfa4	mov	x0, x19
000000000002bfa8	bl	__mi_verbose_message
000000000002bfac	mov	w0, #0x5
000000000002bfb0	bl	_mi_option_get
000000000002bfb4	ldr	x8, [x20, #0x400]
000000000002bfb8	ldr	x9, [x20, #0x3f0]
000000000002bfbc	stp	x8, x9, [sp]
000000000002bfc0	mov	x0, x19
000000000002bfc4	bl	__mi_verbose_message
000000000002bfc8	mov	w0, #0x6
000000000002bfcc	bl	_mi_option_get
000000000002bfd0	ldr	x8, [x20, #0x418]
000000000002bfd4	ldr	x9, [x20, #0x408]
000000000002bfd8	stp	x8, x9, [sp]
000000000002bfdc	mov	x0, x19
000000000002bfe0	bl	__mi_verbose_message
000000000002bfe4	mov	w0, #0x7
000000000002bfe8	bl	_mi_option_get
000000000002bfec	ldr	x8, [x20, #0x430]
000000000002bff0	ldr	x9, [x20, #0x420]
000000000002bff4	stp	x8, x9, [sp]
000000000002bff8	mov	x0, x19
000000000002bffc	bl	__mi_verbose_message
000000000002c000	mov	w0, #0x8
000000000002c004	bl	_mi_option_get
000000000002c008	ldr	x8, [x20, #0x448]
000000000002c00c	ldr	x9, [x20, #0x438]
000000000002c010	stp	x8, x9, [sp]
000000000002c014	mov	x0, x19
000000000002c018	bl	__mi_verbose_message
000000000002c01c	mov	w0, #0x9
000000000002c020	bl	_mi_option_get
000000000002c024	ldr	x8, [x20, #0x460]
000000000002c028	ldr	x9, [x20, #0x450]
000000000002c02c	stp	x8, x9, [sp]
000000000002c030	mov	x0, x19
000000000002c034	bl	__mi_verbose_message
000000000002c038	mov	w0, #0xa
000000000002c03c	bl	_mi_option_get
000000000002c040	ldr	x8, [x20, #0x478]
000000000002c044	ldr	x9, [x20, #0x468]
000000000002c048	stp	x8, x9, [sp]
000000000002c04c	mov	x0, x19
000000000002c050	bl	__mi_verbose_message
000000000002c054	mov	w0, #0xb
000000000002c058	bl	_mi_option_get
000000000002c05c	ldr	x8, [x20, #0x490]
000000000002c060	ldr	x9, [x20, #0x480]
000000000002c064	stp	x8, x9, [sp]
000000000002c068	mov	x0, x19
000000000002c06c	bl	__mi_verbose_message
000000000002c070	mov	w0, #0xc
000000000002c074	bl	_mi_option_get
000000000002c078	ldr	x8, [x20, #0x4a8]
000000000002c07c	ldr	x9, [x20, #0x498]
000000000002c080	stp	x8, x9, [sp]
000000000002c084	mov	x0, x19
000000000002c088	bl	__mi_verbose_message
000000000002c08c	mov	w0, #0xd
000000000002c090	bl	_mi_option_get
000000000002c094	ldr	x8, [x20, #0x4c0]
000000000002c098	ldr	x9, [x20, #0x4b0]
000000000002c09c	stp	x8, x9, [sp]
000000000002c0a0	mov	x0, x19
000000000002c0a4	bl	__mi_verbose_message
000000000002c0a8	mov	w0, #0xe
000000000002c0ac	bl	_mi_option_get
000000000002c0b0	ldr	x8, [x20, #0x4d8]
000000000002c0b4	ldr	x9, [x20, #0x4c8]
000000000002c0b8	stp	x8, x9, [sp]
000000000002c0bc	mov	x0, x19
000000000002c0c0	bl	__mi_verbose_message
000000000002c0c4	mov	w0, #0xf
000000000002c0c8	bl	_mi_option_get
000000000002c0cc	ldr	x8, [x20, #0x4f0]
000000000002c0d0	ldr	x9, [x20, #0x4e0]
000000000002c0d4	stp	x8, x9, [sp]
000000000002c0d8	mov	x0, x19
000000000002c0dc	bl	__mi_verbose_message
000000000002c0e0	mov	w0, #0x10
000000000002c0e4	bl	_mi_option_get
000000000002c0e8	ldr	x8, [x20, #0x508]
000000000002c0ec	ldr	x9, [x20, #0x4f8]
000000000002c0f0	stp	x8, x9, [sp]
000000000002c0f4	mov	x0, x19
000000000002c0f8	bl	__mi_verbose_message
000000000002c0fc	mov	w0, #0x11
000000000002c100	bl	_mi_option_get
000000000002c104	ldr	x8, [x20, #0x520]
000000000002c108	ldr	x9, [x20, #0x510]
000000000002c10c	stp	x8, x9, [sp]
000000000002c110	mov	x0, x19
000000000002c114	bl	__mi_verbose_message
000000000002c118	mov	w0, #0x12
000000000002c11c	bl	_mi_option_get
000000000002c120	ldr	x8, [x20, #0x538]
000000000002c124	ldr	x9, [x20, #0x528]
000000000002c128	stp	x8, x9, [sp]
000000000002c12c	mov	x0, x19
000000000002c130	bl	__mi_verbose_message
000000000002c134	mov	w0, #0x13
000000000002c138	bl	_mi_option_get
000000000002c13c	ldr	x8, [x20, #0x550]
000000000002c140	ldr	x9, [x20, #0x540]
000000000002c144	stp	x8, x9, [sp]
000000000002c148	mov	x0, x19
000000000002c14c	bl	__mi_verbose_message
000000000002c150	mov	w0, #0x12
000000000002c154	bl	_mi_option_get
000000000002c158	str	x0, [x20, #0x8]
000000000002c15c	mov	w0, #0x13
000000000002c160	bl	_mi_option_get
000000000002c164	str	x0, [x20]
000000000002c168	ldp	x29, x30, [sp, #0x20]
000000000002c16c	ldp	x20, x19, [sp, #0x10]
000000000002c170	add	sp, sp, #0x30
000000000002c174	b	_mi_process_init
_mi_heap_main_init:
000000000002c178	stp	x20, x19, [sp, #-0x20]!
000000000002c17c	stp	x29, x30, [sp, #0x10]
000000000002c180	add	x29, sp, #0x10
000000000002c184	nop
000000000002c188	ldr	x8, #0x3be80
000000000002c18c	cbz	x8, 0x2c19c
000000000002c190	ldp	x29, x30, [sp, #0x10]
000000000002c194	ldp	x20, x19, [sp], #0x20
000000000002c198	ret
000000000002c19c	bl	0x4ddf0 ; symbol stub for: _pthread_self
000000000002c1a0	bl	0x4dda8 ; symbol stub for: _pthread_mach_thread_np
000000000002c1a4	mov	w8, w0
000000000002c1a8	adrp	x9, 60 ; 0x68000
000000000002c1ac	str	x8, [x9]
000000000002c1b0	bl	0x4dbc8 ; symbol stub for: _mach_absolute_time
000000000002c1b4	adr	x8, #0xa4
000000000002c1b8	nop
000000000002c1bc	adr	x9, #-0x44
000000000002c1c0	nop
000000000002c1c4	eor	x8, x9, x8
000000000002c1c8	eor	x8, x0, x8
000000000002c1cc	eor	w9, w8, w8, lsr #17
000000000002c1d0	and	x9, x9, #0xf
000000000002c1d4	add	x9, x9, #0x1
000000000002c1d8	mov	w10, #0x11
000000000002c1dc	mov	x11, #0xe5b9
000000000002c1e0	movk	x11, #0x1ce4, lsl #16
000000000002c1e4	movk	x11, #0x476d, lsl #32
000000000002c1e8	movk	x11, #0xbf58, lsl #48
000000000002c1ec	mov	x12, #0x11eb
000000000002c1f0	movk	x12, #0x1331, lsl #16
000000000002c1f4	movk	x12, #0x49bb, lsl #32
000000000002c1f8	movk	x12, #0x94d0, lsl #48
000000000002c1fc	cmp	x8, #0x0
000000000002c200	csel	x8, x10, x8, eq
000000000002c204	eor	x8, x8, x8, lsr #30
000000000002c208	mul	x8, x8, x11
000000000002c20c	eor	x8, x8, x8, lsr #27
000000000002c210	mul	x8, x8, x12
000000000002c214	eor	x8, x8, x8, lsr #31
000000000002c218	subs	x9, x9, #0x1
000000000002c21c	b.ne	0x2c1fc
000000000002c220	adr	x19, #0x3b2c0
000000000002c224	nop
000000000002c228	str	x8, [x19, #0xb28]
000000000002c22c	add	x0, x19, #0xb40
000000000002c230	bl	__mi_random_init
000000000002c234	mov	x0, x19
000000000002c238	bl	__mi_heap_random_next
000000000002c23c	str	x0, [x19, #0xb30]
000000000002c240	mov	x0, x19
000000000002c244	bl	__mi_heap_random_next
000000000002c248	str	x0, [x19, #0xb38]
000000000002c24c	ldp	x29, x30, [sp, #0x10]
000000000002c250	ldp	x20, x19, [sp], #0x20
000000000002c254	ret
__os_random_weak:
000000000002c258	stp	x20, x19, [sp, #-0x20]!
000000000002c25c	stp	x29, x30, [sp, #0x10]
000000000002c260	add	x29, sp, #0x10
000000000002c264	adr	x8, #-0xc
000000000002c268	nop
000000000002c26c	eor	x19, x0, x8
000000000002c270	bl	0x4dbc8 ; symbol stub for: _mach_absolute_time
000000000002c274	eor	x0, x19, x0
000000000002c278	eor	w8, w0, w0, lsr #17
000000000002c27c	and	x8, x8, #0xf
000000000002c280	add	x8, x8, #0x1
000000000002c284	mov	w9, #0x11
000000000002c288	mov	x10, #0xe5b9
000000000002c28c	movk	x10, #0x1ce4, lsl #16
000000000002c290	movk	x10, #0x476d, lsl #32
000000000002c294	movk	x10, #0xbf58, lsl #48
000000000002c298	mov	x11, #0x11eb
000000000002c29c	movk	x11, #0x1331, lsl #16
000000000002c2a0	movk	x11, #0x49bb, lsl #32
000000000002c2a4	movk	x11, #0x94d0, lsl #48
000000000002c2a8	cmp	x0, #0x0
000000000002c2ac	csel	x12, x9, x0, eq
000000000002c2b0	eor	x12, x12, x12, lsr #30
000000000002c2b4	mul	x12, x12, x10
000000000002c2b8	eor	x12, x12, x12, lsr #27
000000000002c2bc	mul	x12, x12, x11
000000000002c2c0	eor	x0, x12, x12, lsr #31
000000000002c2c4	subs	x8, x8, #0x1
000000000002c2c8	b.ne	0x2c2a8
000000000002c2cc	ldp	x29, x30, [sp, #0x10]
000000000002c2d0	ldp	x20, x19, [sp], #0x20
000000000002c2d4	ret
__mi_random_init:
000000000002c2d8	sub	sp, sp, #0x40
000000000002c2dc	stp	x20, x19, [sp, #0x20]
000000000002c2e0	stp	x29, x30, [sp, #0x30]
000000000002c2e4	add	x29, sp, #0x30
000000000002c2e8	mov	x19, x0
000000000002c2ec	mov	x0, sp
000000000002c2f0	mov	w1, #0x20
000000000002c2f4	bl	0x4daf0 ; symbol stub for: _arc4random_buf
000000000002c2f8	movi.16b	v0, #0x0
000000000002c2fc	stp	q0, q0, [x19, #0x20]
000000000002c300	str	wzr, [x19, #0x80]
000000000002c304	stp	q0, q0, [x19, #0x60]
000000000002c308	stp	q0, q0, [x19, #0x40]
000000000002c30c	nop
000000000002c310	ldr	q0, 0x4e5a0
000000000002c314	ldr	q1, [sp]
000000000002c318	stp	q0, q1, [x19]
000000000002c31c	ldr	w8, [sp, #0x10]
000000000002c320	str	w8, [x19, #0x20]
000000000002c324	ldur	x8, [sp, #0x14]
000000000002c328	stur	x8, [x19, #0x24]
000000000002c32c	ldr	w8, [sp, #0x1c]
000000000002c330	str	w8, [x19, #0x2c]
000000000002c334	str	xzr, [x19, #0x30]
000000000002c338	lsr	x8, x19, #32
000000000002c33c	stp	w19, w8, [x19, #0x38]
000000000002c340	ldp	x29, x30, [sp, #0x30]
000000000002c344	ldp	x20, x19, [sp, #0x20]
000000000002c348	add	sp, sp, #0x40
000000000002c34c	ret
__mi_heap_random_next:
000000000002c350	stp	x22, x21, [sp, #-0x30]!
000000000002c354	stp	x20, x19, [sp, #0x10]
000000000002c358	stp	x29, x30, [sp, #0x20]
000000000002c35c	add	x29, sp, #0x20
000000000002c360	mov	x19, x0
000000000002c364	add	x20, x0, #0xb40
000000000002c368	ldr	w8, [x0, #0xbc0]
000000000002c36c	cmp	w8, #0x0
000000000002c370	b.gt	0x2c384
000000000002c374	mov	x0, x20
000000000002c378	bl	_chacha_block
000000000002c37c	mov	w8, #0x10
000000000002c380	str	w8, [x19, #0xbc0]
000000000002c384	mov	w22, #0x10
000000000002c388	sub	x8, x22, w8, sxtw
000000000002c38c	add	x8, x19, x8, lsl #2
000000000002c390	ldr	w21, [x8, #0xb80]
000000000002c394	str	wzr, [x8, #0xb80]
000000000002c398	ldr	w8, [x19, #0xbc0]
000000000002c39c	subs	w8, w8, #0x1
000000000002c3a0	str	w8, [x19, #0xbc0]
000000000002c3a4	b.gt	0x2c3b8
000000000002c3a8	mov	x0, x20
000000000002c3ac	bl	_chacha_block
000000000002c3b0	str	w22, [x19, #0xbc0]
000000000002c3b4	mov	w8, #0x10
000000000002c3b8	mov	w9, #0x10
000000000002c3bc	sub	x8, x9, w8, sxtw
000000000002c3c0	add	x8, x19, x8, lsl #2
000000000002c3c4	ldr	w0, [x8, #0xb80]
000000000002c3c8	str	wzr, [x8, #0xb80]
000000000002c3cc	ldr	w8, [x19, #0xbc0]
000000000002c3d0	sub	w8, w8, #0x1
000000000002c3d4	str	w8, [x19, #0xbc0]
000000000002c3d8	bfi	x0, x21, #32, #32
000000000002c3dc	ldp	x29, x30, [sp, #0x20]
000000000002c3e0	ldp	x20, x19, [sp, #0x10]
000000000002c3e4	ldp	x22, x21, [sp], #0x30
000000000002c3e8	ret
_mi_process_done:
000000000002c3ec	stp	x28, x27, [sp, #-0x60]!
000000000002c3f0	stp	x26, x25, [sp, #0x10]
000000000002c3f4	stp	x24, x23, [sp, #0x20]
000000000002c3f8	stp	x22, x21, [sp, #0x30]
000000000002c3fc	stp	x20, x19, [sp, #0x40]
000000000002c400	stp	x29, x30, [sp, #0x50]
000000000002c404	add	x29, sp, #0x50
000000000002c408	sub	sp, sp, #0x230
000000000002c40c	adrp	x8, 86 ; 0x82000
000000000002c410	ldrb	w8, [x8, #0x845]
000000000002c414	cmp	w8, #0x1
000000000002c418	b.ne	0x2ca08
000000000002c41c	adrp	x8, 86 ; 0x82000
000000000002c420	ldrb	w9, [x8, #0x849]
000000000002c424	tbnz	w9, #0x0, 0x2ca08
000000000002c428	mov	w9, #0x1
000000000002c42c	strb	w9, [x8, #0x849]
000000000002c430	adrp	x19, 60 ; 0x68000
000000000002c434	add	x19, x19, #0xa18
000000000002c438	ldr	x20, [x19]
000000000002c43c	mov	x0, x19
000000000002c440	blr	x20
000000000002c444	ldr	x0, [x0]
000000000002c448	mov	w1, #0x1
000000000002c44c	bl	_mi_heap_collect_ex
000000000002c450	mov	w0, #0x1
000000000002c454	bl	_mi_option_get
000000000002c458	cbnz	x0, 0x2c468
000000000002c45c	mov	w0, #0x2
000000000002c460	bl	_mi_option_get
000000000002c464	cbz	x0, 0x2c9e8
000000000002c468	bl	_mi_thread_init
000000000002c46c	mov	x0, x19
000000000002c470	blr	x20
000000000002c474	ldr	x8, [x0]
000000000002c478	ldr	x8, [x8]
000000000002c47c	add	x0, x8, #0xb0
000000000002c480	bl	_mi_stats_merge_from
000000000002c484	stp	xzr, xzr, [sp, #0x40]
000000000002c488	nop
000000000002c48c	ldr	q0, 0x4e5b0
000000000002c490	stur	q0, [sp, #0x58]
000000000002c494	add	x8, sp, #0x6c
000000000002c498	str	x8, [sp, #0x50]
000000000002c49c	adr	x10, #0x26234 ; literal pool for: "count  "
000000000002c4a0	nop
000000000002c4a4	adr	x8, #0x26225 ; literal pool for: "unit  "
000000000002c4a8	nop
000000000002c4ac	adr	x11, #0x26213 ; literal pool for: "current  "
000000000002c4b0	nop
000000000002c4b4	stp	x8, x10, [sp, #0x28]
000000000002c4b8	adr	x8, #0x261ff ; literal pool for: "freed  "
000000000002c4bc	nop
000000000002c4c0	adr	x10, #0x261ef ; literal pool for: "total  "
000000000002c4c4	nop
000000000002c4c8	stp	x8, x11, [sp, #0x18]
000000000002c4cc	adr	x8, #0x261dc ; literal pool for: "peak  "
000000000002c4d0	nop
000000000002c4d4	adr	x9, #0x261c9 ; literal pool for: "heap stats"
000000000002c4d8	nop
000000000002c4dc	stp	x8, x10, [sp, #0x8]
000000000002c4e0	str	x9, [sp]
000000000002c4e4	add	x1, sp, #0x40
000000000002c4e8	adr	x2, #0x26190 ; literal pool for: "%10s: %10s %10s %10s %10s %10s %10s\n"
000000000002c4ec	nop
000000000002c4f0	bl	__mi_fprintf
000000000002c4f4	adr	x19, #0x5694c
000000000002c4f8	nop
000000000002c4fc	add	x0, x19, #0x40
000000000002c500	adr	x1, #0x261d8 ; literal pool for: "reserved"
000000000002c504	nop
000000000002c508	add	x3, sp, #0x40
000000000002c50c	mov	w2, #0x1
000000000002c510	bl	_mi_stat_print
000000000002c514	add	x0, x19, #0x60
000000000002c518	adr	x1, #0x261c9 ; literal pool for: "committed"
000000000002c51c	nop
000000000002c520	add	x3, sp, #0x40
000000000002c524	mov	w2, #0x1
000000000002c528	bl	_mi_stat_print
000000000002c52c	add	x0, x19, #0x80
000000000002c530	adr	x1, #0x261bb ; literal pool for: "reset"
000000000002c534	nop
000000000002c538	add	x3, sp, #0x40
000000000002c53c	mov	w2, #0x1
000000000002c540	bl	_mi_stat_print
000000000002c544	add	x0, x19, #0xa0
000000000002c548	adr	x1, #0x261a9 ; literal pool for: "touched"
000000000002c54c	nop
000000000002c550	add	x3, sp, #0x40
000000000002c554	mov	w2, #0x1
000000000002c558	bl	_mi_stat_print
000000000002c55c	adr	x1, #0x2619d ; literal pool for: "segments"
000000000002c560	nop
000000000002c564	add	x3, sp, #0x40
000000000002c568	mov	x0, x19
000000000002c56c	mov	x2, #-0x1
000000000002c570	bl	_mi_stat_print
000000000002c574	add	x0, x19, #0xc0
000000000002c578	adr	x20, #0x2618a ; literal pool for: "-abandoned"
000000000002c57c	nop
000000000002c580	add	x3, sp, #0x40
000000000002c584	mov	x1, x20
000000000002c588	mov	x2, #-0x1
000000000002c58c	bl	_mi_stat_print
000000000002c590	add	x0, x19, #0x1a0
000000000002c594	adr	x1, #0x26179 ; literal pool for: "-cached"
000000000002c598	nop
000000000002c59c	add	x3, sp, #0x40
000000000002c5a0	mov	x2, #-0x1
000000000002c5a4	bl	_mi_stat_print
000000000002c5a8	add	x0, x19, #0x20
000000000002c5ac	adr	x1, #0x26169 ; literal pool for: "pages"
000000000002c5b0	nop
000000000002c5b4	add	x3, sp, #0x40
000000000002c5b8	mov	x2, #-0x1
000000000002c5bc	bl	_mi_stat_print
000000000002c5c0	add	x0, x19, #0xe0
000000000002c5c4	add	x3, sp, #0x40
000000000002c5c8	mov	x1, x20
000000000002c5cc	mov	x2, #-0x1
000000000002c5d0	bl	_mi_stat_print
000000000002c5d4	add	x0, x19, #0x1c0
000000000002c5d8	adr	x1, #0x26143 ; literal pool for: "-extended"
000000000002c5dc	nop
000000000002c5e0	add	x2, sp, #0x40
000000000002c5e4	bl	_mi_stat_counter_print
000000000002c5e8	add	x0, x19, #0x1f0
000000000002c5ec	adr	x1, #0x26139 ; literal pool for: "-noretire"
000000000002c5f0	nop
000000000002c5f4	add	x2, sp, #0x40
000000000002c5f8	bl	_mi_stat_counter_print
000000000002c5fc	add	x0, x19, #0x1d0
000000000002c600	adr	x1, #0x2612f ; literal pool for: "mmaps"
000000000002c604	nop
000000000002c608	add	x2, sp, #0x40
000000000002c60c	bl	_mi_stat_counter_print
000000000002c610	add	x0, x19, #0x1e0
000000000002c614	adr	x1, #0x26121 ; literal pool for: "commits"
000000000002c618	nop
000000000002c61c	add	x2, sp, #0x40
000000000002c620	bl	_mi_stat_counter_print
000000000002c624	add	x0, x19, #0x100
000000000002c628	adr	x1, #0x26115 ; literal pool for: "threads"
000000000002c62c	nop
000000000002c630	add	x3, sp, #0x40
000000000002c634	mov	x2, #-0x1
000000000002c638	bl	_mi_stat_print
000000000002c63c	ldr	x8, [x19, #0x208]
000000000002c640	cbz	x8, 0x2c658
000000000002c644	nop
000000000002c648	ldr	x9, #0x569f8
000000000002c64c	add	x9, x9, x9, lsl #2
000000000002c650	lsl	x9, x9, #1
000000000002c654	sdiv	x8, x9, x8
000000000002c658	mov	x9, #0x6666666666666666
000000000002c65c	movk	x9, #0x6667
000000000002c660	smulh	x9, x8, x9
000000000002c664	asr	x10, x9, #2
000000000002c668	add	x9, x10, x9, lsr #63
000000000002c66c	mov	x10, #-0xa
000000000002c670	madd	x8, x9, x10, x8
000000000002c674	adr	x10, #0x260e5 ; literal pool for: "searches"
000000000002c678	nop
000000000002c67c	stp	x10, x9, [sp]
000000000002c680	str	x8, [sp, #0x10]
000000000002c684	adr	x2, #0x260c1 ; literal pool for: "%10s: %5ld.%ld avg\n"
000000000002c688	nop
000000000002c68c	add	x1, sp, #0x40
000000000002c690	bl	__mi_fprintf
000000000002c694	nop
000000000002c698	ldr	x19, #0x56298
000000000002c69c	cbz	x19, 0x2ca28
000000000002c6a0	adr	x8, #0x260cd ; literal pool for: "numa nodes"
000000000002c6a4	nop
000000000002c6a8	stp	x8, x19, [sp]
000000000002c6ac	adr	x2, #0x260b6 ; literal pool for: "%10s: %7i\n"
000000000002c6b0	nop
000000000002c6b4	add	x1, sp, #0x40
000000000002c6b8	bl	__mi_fprintf
000000000002c6bc	adr	x20, #0x5628c
000000000002c6c0	nop
000000000002c6c4	ldr	x19, [x20, #0x8]
000000000002c6c8	sub	x0, x29, #0xe0
000000000002c6cc	mov	x1, #0x0
000000000002c6d0	bl	0x4dbbc ; symbol stub for: _gettimeofday
000000000002c6d4	ldur	x8, [x29, #-0xe0]
000000000002c6d8	mov	w21, #0x3e8
000000000002c6dc	mul	x8, x8, x21
000000000002c6e0	ldursw	x9, [x29, #-0xd8]
000000000002c6e4	mov	w22, #0x4dd3
000000000002c6e8	movk	w22, #0x1062, lsl #16
000000000002c6ec	mul	x9, x9, x22
000000000002c6f0	lsr	x10, x9, #32
000000000002c6f4	lsr	x9, x9, #63
000000000002c6f8	add	w9, w9, w10, asr #6
000000000002c6fc	ldr	x10, [x20]
000000000002c700	add	x8, x8, w9, sxtw
000000000002c704	add	x9, x19, x10
000000000002c708	sub	x23, x8, x9
000000000002c70c	sub	x1, x29, #0xe0
000000000002c710	mov	w0, #0x0
000000000002c714	bl	0x4dbb0 ; symbol stub for: _getrusage
000000000002c718	ldur	x8, [x29, #-0xe0]
000000000002c71c	ldursw	x9, [x29, #-0xd8]
000000000002c720	mul	x8, x8, x21
000000000002c724	mul	x9, x9, x22
000000000002c728	lsr	x10, x9, #32
000000000002c72c	lsr	x9, x9, #63
000000000002c730	add	w9, w9, w10, asr #6
000000000002c734	add	x24, x8, w9, sxtw
000000000002c738	ldur	x8, [x29, #-0xd0]
000000000002c73c	ldursw	x9, [x29, #-0xc8]
000000000002c740	mul	x8, x8, x21
000000000002c744	mul	x9, x9, x22
000000000002c748	lsr	x10, x9, #32
000000000002c74c	lsr	x9, x9, #63
000000000002c750	add	w9, w9, w10, asr #6
000000000002c754	add	x21, x8, w9, sxtw
000000000002c758	ldur	x22, [x29, #-0x98]
000000000002c75c	ldr	x19, [x20, #0x568]
000000000002c760	ldr	xzr, [x20, #0x570]
000000000002c764	ldur	x20, [x29, #-0xc0]
000000000002c768	mov	w8, #0xc
000000000002c76c	str	w8, [sp, #0x16c]
000000000002c770	nop
000000000002c774	ldr	x8, #0x278cc ; literal pool symbol address: _mach_task_self_
000000000002c778	ldr	w0, [x8]
000000000002c77c	add	x2, sp, #0x170
000000000002c780	add	x3, sp, #0x16c
000000000002c784	mov	w1, #0x14
000000000002c788	bl	0x4dec8 ; symbol stub for: _task_info
000000000002c78c	mov	x25, #0xf7cf
000000000002c790	movk	x25, #0xe353, lsl #16
000000000002c794	movk	x25, #0x9ba5, lsl #32
000000000002c798	movk	x25, #0x20c4, lsl #48
000000000002c79c	smulh	x8, x23, x25
000000000002c7a0	asr	x9, x8, #7
000000000002c7a4	add	x8, x9, x8, lsr #63
000000000002c7a8	mov	x26, #-0x3e8
000000000002c7ac	madd	x9, x8, x26, x23
000000000002c7b0	stp	x8, x9, [sp, #0x8]
000000000002c7b4	adr	x9, #0x25fd8 ; literal pool for: "elapsed"
000000000002c7b8	nop
000000000002c7bc	str	x9, [sp]
000000000002c7c0	adr	x2, #0x25fb8 ; literal pool for: "%10s: %7ld.%03ld s\n"
000000000002c7c4	nop
000000000002c7c8	add	x1, sp, #0x40
000000000002c7cc	bl	__mi_fprintf
000000000002c7d0	smulh	x8, x24, x25
000000000002c7d4	asr	x9, x8, #7
000000000002c7d8	add	x8, x9, x8, lsr #63
000000000002c7dc	madd	x9, x8, x26, x24
000000000002c7e0	smulh	x10, x21, x25
000000000002c7e4	asr	x11, x10, #7
000000000002c7e8	add	x10, x11, x10, lsr #63
000000000002c7ec	madd	x11, x10, x26, x21
000000000002c7f0	stp	x11, x22, [sp, #0x20]
000000000002c7f4	stp	x9, x10, [sp, #0x10]
000000000002c7f8	adr	x9, #0x25fdd ; literal pool for: "process"
000000000002c7fc	nop
000000000002c800	stp	x9, x8, [sp]
000000000002c804	adr	x2, #0x25f90 ; literal pool for: "%10s: user: %ld.%03ld s, system: %ld.%03ld s, faults: %lu, rss: "
000000000002c808	nop
000000000002c80c	add	x1, sp, #0x40
000000000002c810	bl	__mi_fprintf
000000000002c814	cmp	x20, #0x0
000000000002c818	cneg	x8, x20, mi
000000000002c81c	cmp	x8, #0x3ff
000000000002c820	b.gt	0x2c83c
000000000002c824	adr	x8, #0x25fc0 ; literal pool for: "b"
000000000002c828	nop
000000000002c82c	stp	x20, x8, [sp]
000000000002c830	adr	x2, #0x25fad ; literal pool for: "%d %s "
000000000002c834	nop
000000000002c838	b	0x2c8c8
000000000002c83c	adr	x9, #0x25fac ; literal pool for: "m"
000000000002c840	nop
000000000002c844	adr	x10, #0x25fa2 ; literal pool for: "k"
000000000002c848	nop
000000000002c84c	cmp	x8, #0x100, lsl #12
000000000002c850	csel	x9, x10, x9, lt
000000000002c854	mov	w10, #0x100000
000000000002c858	mov	w11, #0x400
000000000002c85c	csel	x10, x11, x10, lt
000000000002c860	lsl	x11, x10, #10
000000000002c864	adr	x12, #0x25f86 ; literal pool for: "g"
000000000002c868	nop
000000000002c86c	cmp	x8, x11
000000000002c870	csel	x8, x9, x12, lt
000000000002c874	csel	x9, x10, x11, lt
000000000002c878	mov	w10, #0xcccd
000000000002c87c	movk	w10, #0xcccc, lsl #16
000000000002c880	mul	x9, x9, x10
000000000002c884	lsr	x9, x9, #35
000000000002c888	sdiv	x9, x20, x9
000000000002c88c	mov	x10, #0x6666666666666666
000000000002c890	movk	x10, #0x6667
000000000002c894	smulh	x10, x9, x10
000000000002c898	asr	x11, x10, #2
000000000002c89c	add	x10, x11, x10, lsr #63
000000000002c8a0	mov	x11, #-0xa
000000000002c8a4	madd	x9, x10, x11, x9
000000000002c8a8	cmp	x9, #0x0
000000000002c8ac	cneg	x9, x9, mi
000000000002c8b0	adr	x11, #0x25f34 ; literal pool for: "b"
000000000002c8b4	nop
000000000002c8b8	stp	x8, x11, [sp, #0x10]
000000000002c8bc	stp	x10, x9, [sp]
000000000002c8c0	adr	x2, #0x25f2c ; literal pool for: "%ld.%ld %s%s"
000000000002c8c4	nop
000000000002c8c8	sub	x0, x29, #0xe0
000000000002c8cc	mov	w1, #0x20
000000000002c8d0	bl	0x4de50 ; symbol stub for: _snprintf
000000000002c8d4	sub	x8, x29, #0xe0
000000000002c8d8	str	x8, [sp]
000000000002c8dc	adr	x2, #0x26055 ; literal pool for: "%s"
000000000002c8e0	nop
000000000002c8e4	add	x1, sp, #0x40
000000000002c8e8	bl	__mi_fprintf
000000000002c8ec	cbz	x19, 0x2c9d8
000000000002c8f0	adr	x2, #0x25f09 ; literal pool for: ", commit: "
000000000002c8f4	nop
000000000002c8f8	add	x1, sp, #0x40
000000000002c8fc	bl	__mi_fprintf
000000000002c900	cmp	x19, #0x0
000000000002c904	cneg	x8, x19, mi
000000000002c908	cmp	x8, #0x3ff
000000000002c90c	b.gt	0x2c928
000000000002c910	adr	x8, #0x25ed4 ; literal pool for: "b"
000000000002c914	nop
000000000002c918	stp	x19, x8, [sp]
000000000002c91c	adr	x2, #0x25ec1 ; literal pool for: "%d %s "
000000000002c920	nop
000000000002c924	b	0x2c9b4
000000000002c928	adr	x9, #0x25ec0 ; literal pool for: "m"
000000000002c92c	nop
000000000002c930	adr	x10, #0x25eb6 ; literal pool for: "k"
000000000002c934	nop
000000000002c938	cmp	x8, #0x100, lsl #12
000000000002c93c	csel	x9, x10, x9, lt
000000000002c940	mov	w10, #0x100000
000000000002c944	mov	w11, #0x400
000000000002c948	csel	x10, x11, x10, lt
000000000002c94c	lsl	x11, x10, #10
000000000002c950	adr	x12, #0x25e9a ; literal pool for: "g"
000000000002c954	nop
000000000002c958	cmp	x8, x11
000000000002c95c	csel	x8, x9, x12, lt
000000000002c960	csel	x9, x10, x11, lt
000000000002c964	mov	w10, #0xcccd
000000000002c968	movk	w10, #0xcccc, lsl #16
000000000002c96c	mul	x9, x9, x10
000000000002c970	lsr	x9, x9, #35
000000000002c974	sdiv	x9, x19, x9
000000000002c978	mov	x10, #0x6666666666666666
000000000002c97c	movk	x10, #0x6667
000000000002c980	smulh	x10, x9, x10
000000000002c984	asr	x11, x10, #2
000000000002c988	add	x10, x11, x10, lsr #63
000000000002c98c	mov	x11, #-0xa
000000000002c990	madd	x9, x10, x11, x9
000000000002c994	cmp	x9, #0x0
000000000002c998	cneg	x9, x9, mi
000000000002c99c	adr	x11, #0x25e48 ; literal pool for: "b"
000000000002c9a0	nop
000000000002c9a4	stp	x8, x11, [sp, #0x10]
000000000002c9a8	stp	x10, x9, [sp]
000000000002c9ac	adr	x2, #0x25e40 ; literal pool for: "%ld.%ld %s%s"
000000000002c9b0	nop
000000000002c9b4	sub	x0, x29, #0xe0
000000000002c9b8	mov	w1, #0x20
000000000002c9bc	bl	0x4de50 ; symbol stub for: _snprintf
000000000002c9c0	sub	x8, x29, #0xe0
000000000002c9c4	str	x8, [sp]
000000000002c9c8	adr	x2, #0x25f69 ; literal pool for: "%s"
000000000002c9cc	nop
000000000002c9d0	add	x1, sp, #0x40
000000000002c9d4	bl	__mi_fprintf
000000000002c9d8	adr	x2, #0x262bf ; literal pool for: "\n"
000000000002c9dc	nop
000000000002c9e0	add	x1, sp, #0x40
000000000002c9e4	bl	__mi_fprintf
000000000002c9e8	nop
000000000002c9ec	ldr	x8, #0x3b614
000000000002c9f0	str	x8, [sp]
000000000002c9f4	adr	x0, #0x25c6f ; literal pool for: "process done: 0x%zx\n"
000000000002c9f8	nop
000000000002c9fc	bl	__mi_verbose_message
000000000002ca00	adrp	x8, 86 ; 0x82000
000000000002ca04	strb	wzr, [x8, #0x846]
000000000002ca08	add	sp, sp, #0x230
000000000002ca0c	ldp	x29, x30, [sp, #0x50]
000000000002ca10	ldp	x20, x19, [sp, #0x40]
000000000002ca14	ldp	x22, x21, [sp, #0x30]
000000000002ca18	ldp	x24, x23, [sp, #0x20]
000000000002ca1c	ldp	x26, x25, [sp, #0x10]
000000000002ca20	ldp	x28, x27, [sp], #0x60
000000000002ca24	ret
000000000002ca28	adr	x20, #0x55f08
000000000002ca2c	nop
000000000002ca30	ldar	x19, [x20]
000000000002ca34	cbnz	x19, 0x2c6a0
000000000002ca38	mov	w0, #0xf
000000000002ca3c	bl	_mi_option_get
000000000002ca40	cmp	x0, #0x1
000000000002ca44	csinc	x19, x0, xzr, gt
000000000002ca48	stlr	x19, [x20]
000000000002ca4c	str	x19, [sp]
000000000002ca50	adr	x0, #0x258c0 ; literal pool for: "using %zd numa regions\n"
000000000002ca54	nop
000000000002ca58	bl	__mi_verbose_message
000000000002ca5c	b	0x2c6a0
_mi_process_init:
000000000002ca60	sub	sp, sp, #0xf0
000000000002ca64	stp	x28, x27, [sp, #0x90]
000000000002ca68	stp	x26, x25, [sp, #0xa0]
000000000002ca6c	stp	x24, x23, [sp, #0xb0]
000000000002ca70	stp	x22, x21, [sp, #0xc0]
000000000002ca74	stp	x20, x19, [sp, #0xd0]
000000000002ca78	stp	x29, x30, [sp, #0xe0]
000000000002ca7c	add	x29, sp, #0xe0
000000000002ca80	adrp	x8, 86 ; 0x82000
000000000002ca84	ldrb	w8, [x8, #0x845]
000000000002ca88	tbnz	w8, #0x0, 0x2d82c
000000000002ca8c	adr	x9, #0x55db9
000000000002ca90	nop
000000000002ca94	mov	w8, #0x1
000000000002ca98	strb	w8, [x9]
000000000002ca9c	ldrb	w9, [x9, #0x2]
000000000002caa0	tbnz	w9, #0x0, 0x2caf8
000000000002caa4	adrp	x9, 86 ; 0x82000
000000000002caa8	strb	w8, [x9, #0x847]
000000000002caac	adr	x20, #0x3b9ec
000000000002cab0	nop
000000000002cab4	adr	x1, #0xdd8
000000000002cab8	nop
000000000002cabc	mov	x0, x20
000000000002cac0	bl	0x4dd9c ; symbol stub for: _pthread_key_create
000000000002cac4	adrp	x0, 60 ; 0x68000
000000000002cac8	add	x0, x0, #0xa18
000000000002cacc	ldr	x8, [x0]
000000000002cad0	blr	x8
000000000002cad4	adr	x8, #0x3aa0c
000000000002cad8	nop
000000000002cadc	str	x8, [x0]
000000000002cae0	ldr	x0, [x20]
000000000002cae4	cmn	x0, #0x1
000000000002cae8	b.eq	0x2caf8
000000000002caec	adr	x1, #0x3a9f4
000000000002caf0	nop
000000000002caf4	bl	0x4de08 ; symbol stub for: _pthread_setspecific
000000000002caf8	bl	0x4ddf0 ; symbol stub for: _pthread_self
000000000002cafc	bl	0x4dda8 ; symbol stub for: _pthread_mach_thread_np
000000000002cb00	mov	w8, w0
000000000002cb04	str	x8, [sp]
000000000002cb08	adr	x0, #0x25630 ; literal pool for: "process init: 0x%zx\n"
000000000002cb0c	nop
000000000002cb10	bl	__mi_verbose_message
000000000002cb14	mov	w0, #0x1d
000000000002cb18	bl	0x4debc ; symbol stub for: _sysconf
000000000002cb1c	cmp	x0, #0x1
000000000002cb20	b.lt	0x2cb2c
000000000002cb24	adrp	x8, 60 ; 0x68000
000000000002cb28	str	x0, [x8, #0x4a0]
000000000002cb2c	adrp	x8, 86 ; 0x82000
000000000002cb30	mov	w9, #0x1
000000000002cb34	strb	w9, [x8, #0x848]
000000000002cb38	nop
000000000002cb3c	ldr	x8, #0x3b4cc
000000000002cb40	cbnz	x8, 0x2cbf4
000000000002cb44	bl	0x4ddf0 ; symbol stub for: _pthread_self
000000000002cb48	bl	0x4dda8 ; symbol stub for: _pthread_mach_thread_np
000000000002cb4c	mov	w8, w0
000000000002cb50	adrp	x9, 60 ; 0x68000
000000000002cb54	str	x8, [x9]
000000000002cb58	bl	0x4dbc8 ; symbol stub for: _mach_absolute_time
000000000002cb5c	adr	x8, #-0x904
000000000002cb60	nop
000000000002cb64	adr	x9, #-0x9ec
000000000002cb68	nop
000000000002cb6c	eor	x8, x9, x8
000000000002cb70	eor	x8, x0, x8
000000000002cb74	eor	w9, w8, w8, lsr #17
000000000002cb78	and	x9, x9, #0xf
000000000002cb7c	add	x9, x9, #0x1
000000000002cb80	mov	w10, #0x11
000000000002cb84	mov	x11, #0xe5b9
000000000002cb88	movk	x11, #0x1ce4, lsl #16
000000000002cb8c	movk	x11, #0x476d, lsl #32
000000000002cb90	movk	x11, #0xbf58, lsl #48
000000000002cb94	mov	x12, #0x11eb
000000000002cb98	movk	x12, #0x1331, lsl #16
000000000002cb9c	movk	x12, #0x49bb, lsl #32
000000000002cba0	movk	x12, #0x94d0, lsl #48
000000000002cba4	cmp	x8, #0x0
000000000002cba8	csel	x8, x10, x8, eq
000000000002cbac	eor	x8, x8, x8, lsr #30
000000000002cbb0	mul	x8, x8, x11
000000000002cbb4	eor	x8, x8, x8, lsr #27
000000000002cbb8	mul	x8, x8, x12
000000000002cbbc	eor	x8, x8, x8, lsr #31
000000000002cbc0	subs	x9, x9, #0x1
000000000002cbc4	b.ne	0x2cba4
000000000002cbc8	adr	x20, #0x3a918
000000000002cbcc	nop
000000000002cbd0	str	x8, [x20, #0xb28]
000000000002cbd4	add	x0, x20, #0xb40
000000000002cbd8	bl	__mi_random_init
000000000002cbdc	mov	x0, x20
000000000002cbe0	bl	__mi_heap_random_next
000000000002cbe4	str	x0, [x20, #0xb30]
000000000002cbe8	mov	x0, x20
000000000002cbec	bl	__mi_heap_random_next
000000000002cbf0	str	x0, [x20, #0xb38]
000000000002cbf4	str	xzr, [sp]
000000000002cbf8	adr	x0, #0x25555 ; literal pool for: "secure level: %d\n"
000000000002cbfc	nop
000000000002cc00	bl	__mi_verbose_message
000000000002cc04	bl	_mi_thread_init
000000000002cc08	bl	_mi_thread_init
000000000002cc0c	adrp	x0, 60 ; 0x68000
000000000002cc10	add	x0, x0, #0xa18
000000000002cc14	ldr	x8, [x0]
000000000002cc18	str	x8, [sp, #0x70]
000000000002cc1c	blr	x8
000000000002cc20	ldr	x8, [x0]
000000000002cc24	ldr	x8, [x8]
000000000002cc28	add	x0, x8, #0xb0
000000000002cc2c	adr	x8, #0x56214
000000000002cc30	nop
000000000002cc34	cmp	x0, x8
000000000002cc38	b.eq	0x2cc44
000000000002cc3c	mov	w1, #0x240
000000000002cc40	bl	0x4db14 ; symbol stub for: _bzero
000000000002cc44	adr	x19, #0x55d0c
000000000002cc48	nop
000000000002cc4c	add	x0, x19, #0x4f0
000000000002cc50	mov	w1, #0x240
000000000002cc54	bl	0x4db14 ; symbol stub for: _bzero
000000000002cc58	ldr	x8, [x19]
000000000002cc5c	cbnz	x8, 0x2cd1c
000000000002cc60	adrp	x19, 86 ; 0x82000
000000000002cc64	ldr	x8, [x19, #0x948]
000000000002cc68	cbnz	x8, 0x2ccdc
000000000002cc6c	sub	x0, x29, #0x60
000000000002cc70	mov	x1, #0x0
000000000002cc74	bl	0x4dbbc ; symbol stub for: _gettimeofday
000000000002cc78	ldur	x20, [x29, #-0x60]
000000000002cc7c	ldursw	x8, [x29, #-0x58]
000000000002cc80	mov	x9, #-0x4dd3
000000000002cc84	movk	x9, #0xef9d, lsl #16
000000000002cc88	mul	x8, x8, x9
000000000002cc8c	lsr	x9, x8, #63
000000000002cc90	asr	x8, x8, #38
000000000002cc94	add	w21, w8, w9
000000000002cc98	sub	x0, x29, #0x60
000000000002cc9c	mov	x1, #0x0
000000000002cca0	bl	0x4dbbc ; symbol stub for: _gettimeofday
000000000002cca4	ldur	x8, [x29, #-0x60]
000000000002cca8	ldursw	x9, [x29, #-0x58]
000000000002ccac	mov	w10, #0x4dd3
000000000002ccb0	movk	w10, #0x1062, lsl #16
000000000002ccb4	mul	x9, x9, x10
000000000002ccb8	lsr	x10, x9, #63
000000000002ccbc	asr	x9, x9, #38
000000000002ccc0	add	w9, w9, w10
000000000002ccc4	sub	x8, x8, x20
000000000002ccc8	mov	w10, #0x3e8
000000000002cccc	mul	x8, x8, x10
000000000002ccd0	add	w9, w9, w21
000000000002ccd4	add	x8, x8, w9, sxtw
000000000002ccd8	str	x8, [x19, #0x948]
000000000002ccdc	sub	x0, x29, #0x60
000000000002cce0	mov	x1, #0x0
000000000002cce4	bl	0x4dbbc ; symbol stub for: _gettimeofday
000000000002cce8	ldur	x8, [x29, #-0x60]
000000000002ccec	mov	w9, #0x3e8
000000000002ccf0	mul	x8, x8, x9
000000000002ccf4	ldursw	x9, [x29, #-0x58]
000000000002ccf8	mov	w10, #0x4dd3
000000000002ccfc	movk	w10, #0x1062, lsl #16
000000000002cd00	mul	x9, x9, x10
000000000002cd04	lsr	x10, x9, #63
000000000002cd08	asr	x9, x9, #38
000000000002cd0c	add	w9, w9, w10
000000000002cd10	add	x8, x8, w9, sxtw
000000000002cd14	adrp	x9, 86 ; 0x82000
000000000002cd18	str	x8, [x9, #0x950]
000000000002cd1c	mov	w0, #0x7
000000000002cd20	bl	_mi_option_get
000000000002cd24	cbz	x0, 0x2d638
000000000002cd28	mov	w0, #0x7
000000000002cd2c	bl	_mi_option_get
000000000002cd30	cbz	x0, 0x2d638
000000000002cd34	mov	x25, x0
000000000002cd38	mov	w8, #0x1f4
000000000002cd3c	mul	x19, x0, x8
000000000002cd40	nop
000000000002cd44	ldr	x20, #0x55bec
000000000002cd48	cbz	x20, 0x2d84c
000000000002cd4c	mov	x26, #0x0
000000000002cd50	cmp	x20, #0x0
000000000002cd54	csinc	x9, x20, xzr, ne
000000000002cd58	adr	x28, #0x55be8
000000000002cd5c	nop
000000000002cd60	adr	x21, #0x56158
000000000002cd64	nop
000000000002cd68	adr	x20, #0x56138
000000000002cd6c	nop
000000000002cd70	adr	x22, #0x56128
000000000002cd74	nop
000000000002cd78	adr	x23, #0x56108
000000000002cd7c	nop
000000000002cd80	udiv	x10, x25, x9
000000000002cd84	udiv	x8, x19, x9
000000000002cd88	str	x9, [sp, #0x20]
000000000002cd8c	msub	x9, x10, x9, x25
000000000002cd90	stp	x9, x10, [sp, #0x28]
000000000002cd94	add	x8, x8, #0x32
000000000002cd98	cmp	x19, #0x0
000000000002cd9c	csel	x8, xzr, x8, eq
000000000002cda0	lsl	x9, x8, #1
000000000002cda4	str	x8, [sp, #0x68]
000000000002cda8	add	x8, x8, #0x1
000000000002cdac	stp	x8, x9, [sp, #0x50]
000000000002cdb0	mov	w19, #0x40000000
000000000002cdb4	b	0x2cde8
000000000002cdb8	adr	x9, #0x55a88
000000000002cdbc	nop
000000000002cdc0	add	x8, x9, x8, lsl #3
000000000002cdc4	add	x8, x8, #0x400
000000000002cdc8	stlr	x0, [x8]
000000000002cdcc	ldur	x8, [x29, #-0x68]
000000000002cdd0	subs	x8, x25, x8
000000000002cdd4	csel	x25, xzr, x8, lo
000000000002cdd8	add	x26, x26, #0x1
000000000002cddc	ldr	x8, [sp, #0x20]
000000000002cde0	ccmp	x26, x8, #0x2, hi
000000000002cde4	b.hs	0x2d638
000000000002cde8	ldr	x8, [sp, #0x28]
000000000002cdec	cmp	x26, x8
000000000002cdf0	ldr	x8, [sp, #0x30]
000000000002cdf4	cinc	x8, x8, lo
000000000002cdf8	stur	x8, [x29, #-0x68]
000000000002cdfc	cbz	x8, 0x2cdcc
000000000002ce00	stp	x26, x25, [sp, #0x38]
000000000002ce04	tbnz	w26, #0x1f, 0x2ce24
000000000002ce08	nop
000000000002ce0c	ldr	x24, #0x55b24
000000000002ce10	cbz	x24, 0x2d49c
000000000002ce14	and	x8, x26, #0xffffffff
000000000002ce18	udiv	x9, x8, x24
000000000002ce1c	msub	w8, w9, w24, w8
000000000002ce20	b	0x2ce28
000000000002ce24	mov	w8, #-0x1
000000000002ce28	str	x8, [sp, #0x48]
000000000002ce2c	ldur	x8, [x29, #-0x68]
000000000002ce30	lsl	x24, x8, #30
000000000002ce34	nop
000000000002ce38	ldr	x26, #0x55b08
000000000002ce3c	b	0x2ce50
000000000002ce40	mov	w9, #0x0
000000000002ce44	clrex
000000000002ce48	mov	x26, x8
000000000002ce4c	cbnz	w9, 0x2cea0
000000000002ce50	mov	x25, x26
000000000002ce54	cbnz	x26, 0x2ce7c
000000000002ce58	adrp	x0, 60 ; 0x68000
000000000002ce5c	add	x0, x0, #0xa18
000000000002ce60	ldr	x8, [sp, #0x70]
000000000002ce64	blr	x8
000000000002ce68	ldr	x0, [x0]
000000000002ce6c	bl	__mi_heap_random_next
000000000002ce70	lsr	x8, x0, #17
000000000002ce74	mov	x25, #0x200000000000
000000000002ce78	bfi	x25, x8, #30, #12
000000000002ce7c	add	x9, x25, x24
000000000002ce80	ldaxr	x8, [x28]
000000000002ce84	cmp	x8, x26
000000000002ce88	b.ne	0x2ce40
000000000002ce8c	stlxr	w10, x9, [x28]
000000000002ce90	cbnz	w10, 0x2ce80
000000000002ce94	mov	w9, #0x1
000000000002ce98	mov	x26, x8
000000000002ce9c	cbz	w9, 0x2ce50
000000000002cea0	nop
000000000002cea4	ldr	x8, #0x55aa4
000000000002cea8	cbz	x8, 0x2d0c0
000000000002ceac	sub	x0, x29, #0x60
000000000002ceb0	mov	x1, #0x0
000000000002ceb4	bl	0x4dbbc ; symbol stub for: _gettimeofday
000000000002ceb8	ldr	x8, [sp, #0x68]
000000000002cebc	cmp	x8, #0x0
000000000002cec0	b.le	0x2d14c
000000000002cec4	mov	x24, #0x0
000000000002cec8	ldur	x8, [x29, #-0x60]
000000000002cecc	mov	w9, #0x3e8
000000000002ced0	mul	x8, x8, x9
000000000002ced4	ldursw	x9, [x29, #-0x58]
000000000002ced8	mov	w10, #0x4dd3
000000000002cedc	movk	w10, #0x1062, lsl #16
000000000002cee0	mul	x9, x9, x10
000000000002cee4	lsr	x10, x9, #63
000000000002cee8	asr	x9, x9, #38
000000000002ceec	add	w9, w9, w10
000000000002cef0	add	x8, x8, w9, sxtw
000000000002cef4	str	x8, [sp, #0x60]
000000000002cef8	add	x27, x25, x24, lsl #30
000000000002cefc	mov	w0, #0x11
000000000002cf00	bl	_mi_option_get
000000000002cf04	sub	w8, w0, #0x64
000000000002cf08	adr	x9, #0x55a20
000000000002cf0c	nop
000000000002cf10	ldar	xzr, [x9]
000000000002cf14	mov	w9, #0x20000
000000000002cf18	bfi	w9, w0, #24, #8
000000000002cf1c	cmp	w8, #0x9b
000000000002cf20	mov	w8, #0x64020000
000000000002cf24	csel	w4, w8, w9, hi
000000000002cf28	mov	x0, x27
000000000002cf2c	mov	w1, #0x40000000
000000000002cf30	mov	w2, #0x3
000000000002cf34	mov	w3, #0x1002
000000000002cf38	mov	x5, #0x0
000000000002cf3c	bl	0x4dc1c ; symbol stub for: _mmap
000000000002cf40	cmn	x0, #0x1
000000000002cf44	csel	x26, xzr, x0, eq
000000000002cf48	cmp	x26, x27
000000000002cf4c	b.ne	0x2d2a0
000000000002cf50	adr	x13, #0x55f40
000000000002cf54	nop
000000000002cf58	ldxr	x8, [x21]
000000000002cf5c	add	x9, x8, x19
000000000002cf60	stxr	w10, x9, [x21]
000000000002cf64	cbnz	w10, 0x2cf58
000000000002cf68	add	x8, x8, x19
000000000002cf6c	nop
000000000002cf70	ldr	x10, #0x55f40
000000000002cf74	adr	x12, #0x55f3c
000000000002cf78	nop
000000000002cf7c	b	0x2cf90
000000000002cf80	clrex
000000000002cf84	mov	w11, #0x0
000000000002cf88	mov	x10, x9
000000000002cf8c	cbnz	w11, 0x2cfb8
000000000002cf90	cmp	x10, x8
000000000002cf94	b.ge	0x2cfb8
000000000002cf98	ldxr	x9, [x12]
000000000002cf9c	cmp	x9, x10
000000000002cfa0	b.ne	0x2cf80
000000000002cfa4	stlxr	w10, x8, [x12]
000000000002cfa8	cbnz	w10, 0x2cf84
000000000002cfac	mov	w11, #0x1
000000000002cfb0	mov	x10, x9
000000000002cfb4	cbz	w11, 0x2cf90
000000000002cfb8	ldxr	x8, [x20]
000000000002cfbc	add	x8, x8, x19
000000000002cfc0	stxr	w9, x8, [x20]
000000000002cfc4	cbnz	w9, 0x2cfb8
000000000002cfc8	ldxr	x8, [x22]
000000000002cfcc	add	x9, x8, x19
000000000002cfd0	stxr	w10, x9, [x22]
000000000002cfd4	cbnz	w10, 0x2cfc8
000000000002cfd8	add	x8, x8, x19
000000000002cfdc	nop
000000000002cfe0	ldr	x10, #0x55eb0
000000000002cfe4	b	0x2cff8
000000000002cfe8	clrex
000000000002cfec	mov	w11, #0x0
000000000002cff0	mov	x10, x9
000000000002cff4	cbnz	w11, 0x2d020
000000000002cff8	cmp	x10, x8
000000000002cffc	b.ge	0x2d020
000000000002d000	ldxr	x9, [x13]
000000000002d004	cmp	x9, x10
000000000002d008	b.ne	0x2cfe8
000000000002d00c	stlxr	w10, x8, [x13]
000000000002d010	cbnz	w10, 0x2cfec
000000000002d014	mov	w11, #0x1
000000000002d018	mov	x10, x9
000000000002d01c	cbz	w11, 0x2cff8
000000000002d020	ldxr	x8, [x23]
000000000002d024	add	x8, x8, x19
000000000002d028	stxr	w9, x8, [x23]
000000000002d02c	cbnz	w9, 0x2d020
000000000002d030	sub	x0, x29, #0x60
000000000002d034	mov	x1, #0x0
000000000002d038	bl	0x4dbbc ; symbol stub for: _gettimeofday
000000000002d03c	ldur	x8, [x29, #-0x60]
000000000002d040	mov	w9, #0x3e8
000000000002d044	mul	x8, x8, x9
000000000002d048	ldursw	x9, [x29, #-0x58]
000000000002d04c	mov	w10, #0x4dd3
000000000002d050	movk	w10, #0x1062, lsl #16
000000000002d054	mul	x9, x9, x10
000000000002d058	lsr	x10, x9, #63
000000000002d05c	asr	x9, x9, #38
000000000002d060	add	w9, w9, w10
000000000002d064	nop
000000000002d068	ldr	x10, #0x558e0
000000000002d06c	add	x8, x8, w9, sxtw
000000000002d070	ldr	x9, [sp, #0x60]
000000000002d074	add	x9, x10, x9
000000000002d078	sub	x8, x8, x9
000000000002d07c	cbz	x24, 0x2d0a0
000000000002d080	add	x9, x24, #0x1
000000000002d084	udiv	x9, x8, x9
000000000002d088	ldur	x10, [x29, #-0x68]
000000000002d08c	mul	x9, x9, x10
000000000002d090	ldr	x10, [sp, #0x58]
000000000002d094	cmp	x9, x10
000000000002d098	ldr	x9, [sp, #0x50]
000000000002d09c	csel	x8, x9, x8, gt
000000000002d0a0	ldr	x9, [sp, #0x68]
000000000002d0a4	cmp	x8, x9
000000000002d0a8	b.gt	0x2d3d8
000000000002d0ac	add	x24, x24, #0x1
000000000002d0b0	ldur	x8, [x29, #-0x68]
000000000002d0b4	cmp	x24, x8
000000000002d0b8	b.ne	0x2cef8
000000000002d0bc	b	0x2d298
000000000002d0c0	sub	x0, x29, #0x60
000000000002d0c4	mov	x1, #0x0
000000000002d0c8	bl	0x4dbbc ; symbol stub for: _gettimeofday
000000000002d0cc	ldur	x24, [x29, #-0x60]
000000000002d0d0	ldursw	x8, [x29, #-0x58]
000000000002d0d4	mov	x9, #-0x4dd3
000000000002d0d8	movk	x9, #0xef9d, lsl #16
000000000002d0dc	mul	x8, x8, x9
000000000002d0e0	lsr	x9, x8, #63
000000000002d0e4	asr	x8, x8, #38
000000000002d0e8	add	w26, w8, w9
000000000002d0ec	sub	x0, x29, #0x60
000000000002d0f0	mov	x1, #0x0
000000000002d0f4	bl	0x4dbbc ; symbol stub for: _gettimeofday
000000000002d0f8	ldur	x8, [x29, #-0x60]
000000000002d0fc	ldursw	x9, [x29, #-0x58]
000000000002d100	mov	w10, #0x4dd3
000000000002d104	movk	w10, #0x1062, lsl #16
000000000002d108	mul	x9, x9, x10
000000000002d10c	lsr	x10, x9, #63
000000000002d110	asr	x9, x9, #38
000000000002d114	add	w9, w9, w10
000000000002d118	sub	x8, x8, x24
000000000002d11c	mov	w10, #0x3e8
000000000002d120	mul	x8, x8, x10
000000000002d124	add	w9, w9, w26
000000000002d128	add	x8, x8, w9, sxtw
000000000002d12c	adrp	x9, 85 ; 0x82000
000000000002d130	str	x8, [x9, #0x948]
000000000002d134	sub	x0, x29, #0x60
000000000002d138	mov	x1, #0x0
000000000002d13c	bl	0x4dbbc ; symbol stub for: _gettimeofday
000000000002d140	ldr	x8, [sp, #0x68]
000000000002d144	cmp	x8, #0x0
000000000002d148	b.gt	0x2cec4
000000000002d14c	mov	x24, #0x0
000000000002d150	add	x27, x25, x24, lsl #30
000000000002d154	mov	w0, #0x11
000000000002d158	bl	_mi_option_get
000000000002d15c	sub	w8, w0, #0x64
000000000002d160	adr	x9, #0x557c8
000000000002d164	nop
000000000002d168	ldar	xzr, [x9]
000000000002d16c	mov	w9, #0x20000
000000000002d170	bfi	w9, w0, #24, #8
000000000002d174	cmp	w8, #0x9b
000000000002d178	mov	w8, #0x64020000
000000000002d17c	csel	w4, w8, w9, hi
000000000002d180	mov	x0, x27
000000000002d184	mov	w1, #0x40000000
000000000002d188	mov	w2, #0x3
000000000002d18c	mov	w3, #0x1002
000000000002d190	mov	x5, #0x0
000000000002d194	bl	0x4dc1c ; symbol stub for: _mmap
000000000002d198	cmn	x0, #0x1
000000000002d19c	csel	x26, xzr, x0, eq
000000000002d1a0	cmp	x26, x27
000000000002d1a4	b.ne	0x2d2a0
000000000002d1a8	ldxr	x8, [x21]
000000000002d1ac	add	x9, x8, x19
000000000002d1b0	stxr	w10, x9, [x21]
000000000002d1b4	cbnz	w10, 0x2d1a8
000000000002d1b8	add	x8, x8, x19
000000000002d1bc	nop
000000000002d1c0	ldr	x10, #0x55cf0
000000000002d1c4	adr	x12, #0x55cec
000000000002d1c8	nop
000000000002d1cc	adr	x13, #0x55cc4
000000000002d1d0	nop
000000000002d1d4	b	0x2d1e8
000000000002d1d8	clrex
000000000002d1dc	mov	w11, #0x0
000000000002d1e0	mov	x10, x9
000000000002d1e4	cbnz	w11, 0x2d210
000000000002d1e8	cmp	x10, x8
000000000002d1ec	b.ge	0x2d210
000000000002d1f0	ldxr	x9, [x12]
000000000002d1f4	cmp	x9, x10
000000000002d1f8	b.ne	0x2d1d8
000000000002d1fc	stlxr	w10, x8, [x12]
000000000002d200	cbnz	w10, 0x2d1dc
000000000002d204	mov	w11, #0x1
000000000002d208	mov	x10, x9
000000000002d20c	cbz	w11, 0x2d1e8
000000000002d210	ldxr	x8, [x20]
000000000002d214	add	x8, x8, x19
000000000002d218	stxr	w9, x8, [x20]
000000000002d21c	cbnz	w9, 0x2d210
000000000002d220	ldxr	x8, [x22]
000000000002d224	add	x9, x8, x19
000000000002d228	stxr	w10, x9, [x22]
000000000002d22c	cbnz	w10, 0x2d220
000000000002d230	add	x8, x8, x19
000000000002d234	nop
000000000002d238	ldr	x10, #0x55c58
000000000002d23c	b	0x2d250
000000000002d240	clrex
000000000002d244	mov	w11, #0x0
000000000002d248	mov	x10, x9
000000000002d24c	cbnz	w11, 0x2d278
000000000002d250	cmp	x10, x8
000000000002d254	b.ge	0x2d278
000000000002d258	ldxr	x9, [x13]
000000000002d25c	cmp	x9, x10
000000000002d260	b.ne	0x2d240
000000000002d264	stlxr	w10, x8, [x13]
000000000002d268	cbnz	w10, 0x2d244
000000000002d26c	mov	w11, #0x1
000000000002d270	mov	x10, x9
000000000002d274	cbz	w11, 0x2d250
000000000002d278	ldxr	x8, [x23]
000000000002d27c	add	x8, x8, x19
000000000002d280	stxr	w9, x8, [x23]
000000000002d284	cbnz	w9, 0x2d278
000000000002d288	add	x24, x24, #0x1
000000000002d28c	ldur	x8, [x29, #-0x68]
000000000002d290	cmp	x24, x8
000000000002d294	b.ne	0x2d150
000000000002d298	ldur	x24, [x29, #-0x68]
000000000002d29c	b	0x2d3e4
000000000002d2a0	cbz	x26, 0x2d3e4
000000000002d2a4	stp	x24, x27, [sp]
000000000002d2a8	adr	x0, #0x25015 ; literal pool for: "could not allocate contiguous huge page %zu at %p\n"
000000000002d2ac	nop
000000000002d2b0	bl	__mi_warning_message
000000000002d2b4	mov	x0, x26
000000000002d2b8	mov	w1, #0x40000000
000000000002d2bc	bl	0x4dc34 ; symbol stub for: _munmap
000000000002d2c0	mov	x10, #-0x40000000
000000000002d2c4	ldxr	x8, [x21]
000000000002d2c8	add	x8, x8, x10
000000000002d2cc	stxr	w9, x8, [x21]
000000000002d2d0	cbnz	w9, 0x2d2c4
000000000002d2d4	nop
000000000002d2d8	ldr	x10, #0x55bd8
000000000002d2dc	adr	x12, #0x55bd4
000000000002d2e0	nop
000000000002d2e4	adr	x13, #0x55bac
000000000002d2e8	nop
000000000002d2ec	b	0x2d300
000000000002d2f0	clrex
000000000002d2f4	mov	w11, #0x0
000000000002d2f8	mov	x10, x9
000000000002d2fc	cbnz	w11, 0x2d328
000000000002d300	cmp	x10, x8
000000000002d304	b.ge	0x2d328
000000000002d308	ldxr	x9, [x12]
000000000002d30c	cmp	x9, x10
000000000002d310	b.ne	0x2d2f0
000000000002d314	stlxr	w10, x8, [x12]
000000000002d318	cbnz	w10, 0x2d2f4
000000000002d31c	mov	w11, #0x1
000000000002d320	mov	x10, x9
000000000002d324	cbz	w11, 0x2d300
000000000002d328	adr	x10, #0x55b80
000000000002d32c	nop
000000000002d330	ldxr	x8, [x10]
000000000002d334	add	x8, x8, x19
000000000002d338	stxr	w9, x8, [x10]
000000000002d33c	cbnz	w9, 0x2d330
000000000002d340	mov	x10, #-0x40000000
000000000002d344	ldxr	x8, [x22]
000000000002d348	add	x8, x8, x10
000000000002d34c	stxr	w9, x8, [x22]
000000000002d350	cbnz	w9, 0x2d344
000000000002d354	nop
000000000002d358	ldr	x10, #0x55b38
000000000002d35c	b	0x2d370
000000000002d360	clrex
000000000002d364	mov	w11, #0x0
000000000002d368	mov	x10, x9
000000000002d36c	cbnz	w11, 0x2d398
000000000002d370	cmp	x10, x8
000000000002d374	b.ge	0x2d398
000000000002d378	ldxr	x9, [x13]
000000000002d37c	cmp	x9, x10
000000000002d380	b.ne	0x2d360
000000000002d384	stlxr	w10, x8, [x13]
000000000002d388	cbnz	w10, 0x2d364
000000000002d38c	mov	w11, #0x1
000000000002d390	mov	x10, x9
000000000002d394	cbz	w11, 0x2d370
000000000002d398	adr	x10, #0x55af0
000000000002d39c	nop
000000000002d3a0	ldxr	x8, [x10]
000000000002d3a4	add	x8, x8, x19
000000000002d3a8	stxr	w9, x8, [x10]
000000000002d3ac	cbnz	w9, 0x2d3a0
000000000002d3b0	cmn	w0, #0x1
000000000002d3b4	b.ne	0x2d3e4
000000000002d3b8	bl	0x4dac0 ; symbol stub for: ___error
000000000002d3bc	ldr	w0, [x0]
000000000002d3c0	bl	0x4de68 ; symbol stub for: _strerror
000000000002d3c4	stp	x26, x19, [sp, #0x8]
000000000002d3c8	str	x0, [sp]
000000000002d3cc	adr	x0, #0x24de2 ; literal pool for: "munmap failed: %s, addr 0x%8li, size %lu\n"
000000000002d3d0	nop
000000000002d3d4	b	0x2d3e0
000000000002d3d8	adr	x0, #0x24f18 ; literal pool for: "huge page allocation timed out\n"
000000000002d3dc	nop
000000000002d3e0	bl	__mi_warning_message
000000000002d3e4	cmp	x24, #0x0
000000000002d3e8	csel	x8, xzr, x25, eq
000000000002d3ec	ldr	x26, [sp, #0x48]
000000000002d3f0	str	x8, [sp, #0x60]
000000000002d3f4	cbz	x8, 0x2d4dc
000000000002d3f8	cbz	x24, 0x2d4dc
000000000002d3fc	ldur	x8, [x29, #-0x68]
000000000002d400	stp	x24, x8, [sp, #0x8]
000000000002d404	str	x26, [sp]
000000000002d408	adr	x0, #0x24e71 ; literal pool for: "numa node %i: reserved %zu gb huge pages (of the %zu gb requested)\n"
000000000002d40c	nop
000000000002d410	bl	__mi_verbose_message
000000000002d414	lsl	x27, x24, #6
000000000002d418	and	x25, x27, #0xffffffffc0
000000000002d41c	lsr	x8, x25, #2
000000000002d420	add	x0, x8, #0x40
000000000002d424	bl	__mi_os_alloc
000000000002d428	cbz	x0, 0x2d4f4
000000000002d42c	ubfx	x8, x27, #6, #34
000000000002d430	stp	x25, x8, [x0, #0x8]
000000000002d434	ldr	x9, [sp, #0x60]
000000000002d438	stlr	x9, [x0]
000000000002d43c	str	w26, [x0, #0x18]
000000000002d440	mov	w9, #0x1
000000000002d444	strb	w9, [x0, #0x1e]
000000000002d448	mov	w9, #0x101
000000000002d44c	strh	w9, [x0, #0x1c]
000000000002d450	add	x9, x0, #0x20
000000000002d454	stlr	xzr, [x9]
000000000002d458	add	x8, x0, x8, lsl #3
000000000002d45c	add	x8, x8, #0x38
000000000002d460	stp	x8, xzr, [x0, #0x28]
000000000002d464	adr	x11, #0x5549c
000000000002d468	nop
000000000002d46c	ldaxr	x8, [x11]
000000000002d470	add	x9, x8, #0x1
000000000002d474	stlxr	w10, x9, [x11]
000000000002d478	cbnz	w10, 0x2d46c
000000000002d47c	cmp	x8, #0x40
000000000002d480	ldp	x26, x25, [sp, #0x38]
000000000002d484	b.lo	0x2cdb8
000000000002d488	ldaxr	x8, [x11]
000000000002d48c	sub	x8, x8, #0x1
000000000002d490	stlxr	w9, x8, [x11]
000000000002d494	cbnz	w9, 0x2d488
000000000002d498	b	0x2cdcc
000000000002d49c	adr	x8, #0x55494
000000000002d4a0	nop
000000000002d4a4	ldar	x24, [x8]
000000000002d4a8	cbnz	x24, 0x2ce14
000000000002d4ac	mov	w0, #0xf
000000000002d4b0	bl	_mi_option_get
000000000002d4b4	cmp	x0, #0x1
000000000002d4b8	csinc	x24, x0, xzr, gt
000000000002d4bc	adr	x8, #0x55474
000000000002d4c0	nop
000000000002d4c4	stlr	x24, [x8]
000000000002d4c8	str	x24, [sp]
000000000002d4cc	adr	x0, #0x24e44 ; literal pool for: "using %zd numa regions\n"
000000000002d4d0	nop
000000000002d4d4	bl	__mi_verbose_message
000000000002d4d8	b	0x2ce14
000000000002d4dc	ldur	x8, [x29, #-0x68]
000000000002d4e0	str	x8, [sp]
000000000002d4e4	adr	x0, #0x24d70 ; literal pool for: "failed to reserve %zu gb huge pages\n"
000000000002d4e8	nop
000000000002d4ec	bl	__mi_warning_message
000000000002d4f0	b	0x2d638
000000000002d4f4	lsl	x19, x24, #30
000000000002d4f8	adr	x25, #0x559b8
000000000002d4fc	nop
000000000002d500	adr	x27, #0x55990
000000000002d504	nop
000000000002d508	ldr	x26, [sp, #0x60]
000000000002d50c	cbz	x19, 0x2d638
000000000002d510	mov	w23, #0x40000000
000000000002d514	mov	x24, #-0x40000000
000000000002d518	adr	x20, #0x24c96 ; literal pool for: "munmap failed: %s, addr 0x%8li, size %lu\n"
000000000002d51c	nop
000000000002d520	b	0x2d52c
000000000002d524	adds	x19, x19, x24
000000000002d528	b.eq	0x2d638
000000000002d52c	mov	x0, x26
000000000002d530	mov	w1, #0x40000000
000000000002d534	bl	0x4dc34 ; symbol stub for: _munmap
000000000002d538	ldxr	x8, [x21]
000000000002d53c	add	x8, x8, x24
000000000002d540	stxr	w9, x8, [x21]
000000000002d544	cbnz	w9, 0x2d538
000000000002d548	nop
000000000002d54c	ldr	x10, #0x55964
000000000002d550	b	0x2d564
000000000002d554	clrex
000000000002d558	mov	w11, #0x0
000000000002d55c	mov	x10, x9
000000000002d560	cbnz	w11, 0x2d58c
000000000002d564	cmp	x10, x8
000000000002d568	b.ge	0x2d58c
000000000002d56c	ldxr	x9, [x25]
000000000002d570	cmp	x9, x10
000000000002d574	b.ne	0x2d554
000000000002d578	stlxr	w10, x8, [x25]
000000000002d57c	cbnz	w10, 0x2d558
000000000002d580	mov	w11, #0x1
000000000002d584	mov	x10, x9
000000000002d588	cbz	w11, 0x2d564
000000000002d58c	adr	x10, #0x5591c
000000000002d590	nop
000000000002d594	ldxr	x8, [x10]
000000000002d598	add	x8, x8, x23
000000000002d59c	stxr	w9, x8, [x10]
000000000002d5a0	cbnz	w9, 0x2d594
000000000002d5a4	ldxr	x8, [x22]
000000000002d5a8	add	x8, x8, x24
000000000002d5ac	stxr	w9, x8, [x22]
000000000002d5b0	cbnz	w9, 0x2d5a4
000000000002d5b4	nop
000000000002d5b8	ldr	x10, #0x558d8
000000000002d5bc	b	0x2d5d0
000000000002d5c0	clrex
000000000002d5c4	mov	w11, #0x0
000000000002d5c8	mov	x10, x9
000000000002d5cc	cbnz	w11, 0x2d5f8
000000000002d5d0	cmp	x10, x8
000000000002d5d4	b.ge	0x2d5f8
000000000002d5d8	ldxr	x9, [x27]
000000000002d5dc	cmp	x9, x10
000000000002d5e0	b.ne	0x2d5c0
000000000002d5e4	stlxr	w10, x8, [x27]
000000000002d5e8	cbnz	w10, 0x2d5c4
000000000002d5ec	mov	w11, #0x1
000000000002d5f0	mov	x10, x9
000000000002d5f4	cbz	w11, 0x2d5d0
000000000002d5f8	adr	x10, #0x55890
000000000002d5fc	nop
000000000002d600	ldxr	x8, [x10]
000000000002d604	add	x8, x8, x23
000000000002d608	stxr	w9, x8, [x10]
000000000002d60c	cbnz	w9, 0x2d600
000000000002d610	cmn	w0, #0x1
000000000002d614	b.ne	0x2d524
000000000002d618	bl	0x4dac0 ; symbol stub for: ___error
000000000002d61c	ldr	w0, [x0]
000000000002d620	bl	0x4de68 ; symbol stub for: _strerror
000000000002d624	stp	x26, x23, [sp, #0x8]
000000000002d628	str	x0, [sp]
000000000002d62c	mov	x0, x20
000000000002d630	bl	__mi_warning_message
000000000002d634	b	0x2d524
000000000002d638	mov	w0, #0x8
000000000002d63c	bl	_mi_option_get
000000000002d640	cbz	x0, 0x2d82c
000000000002d644	mov	w0, #0x8
000000000002d648	bl	_mi_option_get
000000000002d64c	cmp	x0, #0x1
000000000002d650	b.lt	0x2d82c
000000000002d654	lsl	x19, x0, #10
000000000002d658	ubfx	x8, x0, #9, #45
000000000002d65c	cbnz	x8, 0x2d66c
000000000002d660	nop
000000000002d664	ldr	x8, #0x3ae3c
000000000002d668	b	0x2d698
000000000002d66c	mov	w8, #0x10000
000000000002d670	mov	w9, #0x40000
000000000002d674	lsr	x10, x19, #25
000000000002d678	cmp	x10, #0x0
000000000002d67c	mov	w10, #0x400000
000000000002d680	mov	w11, #0x100000
000000000002d684	csel	x10, x11, x10, eq
000000000002d688	cmp	x19, #0x800, lsl #12
000000000002d68c	csel	x9, x9, x10, lo
000000000002d690	cmp	x19, #0x200, lsl #12
000000000002d694	csel	x8, x8, x9, lo
000000000002d698	mvn	x9, x8
000000000002d69c	cmp	x19, x9
000000000002d6a0	b.hs	0x2d6cc
000000000002d6a4	add	x9, x19, x8
000000000002d6a8	sub	x9, x9, #0x1
000000000002d6ac	sub	x10, x8, #0x1
000000000002d6b0	tst	x8, x10
000000000002d6b4	b.ne	0x2d6c4
000000000002d6b8	neg	x8, x8
000000000002d6bc	and	x19, x9, x8
000000000002d6c0	b	0x2d6cc
000000000002d6c4	udiv	x9, x9, x8
000000000002d6c8	mul	x19, x9, x8
000000000002d6cc	mov	w8, #0x1
000000000002d6d0	sturb	w8, [x29, #-0x60]
000000000002d6d4	sub	x2, x29, #0x60
000000000002d6d8	mov	x0, x19
000000000002d6dc	mov	w1, #0x1
000000000002d6e0	bl	__mi_os_alloc_aligned
000000000002d6e4	cbz	x0, 0x2d82c
000000000002d6e8	mov	x20, x0
000000000002d6ec	ldurb	w25, [x29, #-0x60]
000000000002d6f0	mov	w8, #0xffffff
000000000002d6f4	add	x22, x19, x8
000000000002d6f8	lsr	x21, x22, #24
000000000002d6fc	add	x23, x21, #0x3f
000000000002d700	lsr	x24, x23, #6
000000000002d704	lsl	x8, x24, #4
000000000002d708	add	x0, x8, #0x40
000000000002d70c	bl	__mi_os_alloc
000000000002d710	cbz	x0, 0x2d7bc
000000000002d714	stp	x21, x24, [x0, #0x8]
000000000002d718	stlr	x20, [x0]
000000000002d71c	mov	w8, #-0x1
000000000002d720	str	w8, [x0, #0x18]
000000000002d724	strb	w25, [x0, #0x1e]
000000000002d728	mov	w8, #0x101
000000000002d72c	strh	w8, [x0, #0x1c]
000000000002d730	add	x9, x0, #0x20
000000000002d734	add	x8, x0, #0x38
000000000002d738	stlr	xzr, [x9]
000000000002d73c	add	x10, x8, x24, lsl #3
000000000002d740	and	x9, x23, #0x1ffffffffc0
000000000002d744	sub	x9, x9, x21
000000000002d748	stp	x10, xzr, [x0, #0x28]
000000000002d74c	cmp	x9, #0x1
000000000002d750	b.lt	0x2d788
000000000002d754	lsr	x10, x22, #27
000000000002d758	and	x10, x10, #0x1ffffffff8
000000000002d75c	mov	x11, #-0x1
000000000002d760	lsl	x11, x11, x9
000000000002d764	mvn	x11, x11
000000000002d768	lsl	x11, x11, x21
000000000002d76c	cmp	x9, #0x3f
000000000002d770	csinv	x9, x11, xzr, ls
000000000002d774	add	x8, x8, x10
000000000002d778	ldaxr	x10, [x8]
000000000002d77c	orr	x10, x10, x9
000000000002d780	stlxr	w11, x10, [x8]
000000000002d784	cbnz	w11, 0x2d778
000000000002d788	adr	x8, #0x55178
000000000002d78c	nop
000000000002d790	ldaxr	x9, [x8]
000000000002d794	add	x10, x9, #0x1
000000000002d798	stlxr	w11, x10, [x8]
000000000002d79c	cbnz	w11, 0x2d790
000000000002d7a0	cmp	x9, #0x40
000000000002d7a4	b.lo	0x2d7e4
000000000002d7a8	ldaxr	x9, [x8]
000000000002d7ac	sub	x9, x9, #0x1
000000000002d7b0	stlxr	w10, x9, [x8]
000000000002d7b4	cbnz	w10, 0x2d7a8
000000000002d7b8	b	0x2d7f8
000000000002d7bc	mov	x0, x20
000000000002d7c0	mov	x1, x19
000000000002d7c4	mov	w2, #0x1
000000000002d7c8	bl	__mi_os_free_ex
000000000002d7cc	add	x8, x19, #0x3ff
000000000002d7d0	lsr	x8, x8, #10
000000000002d7d4	str	x8, [sp]
000000000002d7d8	adr	x0, #0x24987 ; literal pool for: "failed to reserve %zu k memory\n"
000000000002d7dc	nop
000000000002d7e0	b	0x2d828
000000000002d7e4	adr	x8, #0x5505c
000000000002d7e8	nop
000000000002d7ec	add	x8, x8, x9, lsl #3
000000000002d7f0	add	x8, x8, #0x400
000000000002d7f4	stlr	x0, [x8]
000000000002d7f8	add	x8, x19, #0x3ff
000000000002d7fc	lsr	x8, x8, #10
000000000002d800	ldurb	w9, [x29, #-0x60]
000000000002d804	adr	x10, #0x2497b ; literal pool for: " (in large os pages)"
000000000002d808	nop
000000000002d80c	adr	x11, #0x251db ; literal pool for: ""
000000000002d810	nop
000000000002d814	cmp	w9, #0x0
000000000002d818	csel	x9, x11, x10, eq
000000000002d81c	stp	x8, x9, [sp]
000000000002d820	adr	x0, #0x24974 ; literal pool for: "reserved %zu kb memory%s\n"
000000000002d824	nop
000000000002d828	bl	__mi_verbose_message
000000000002d82c	ldp	x29, x30, [sp, #0xe0]
000000000002d830	ldp	x20, x19, [sp, #0xd0]
000000000002d834	ldp	x22, x21, [sp, #0xc0]
000000000002d838	ldp	x24, x23, [sp, #0xb0]
000000000002d83c	ldp	x26, x25, [sp, #0xa0]
000000000002d840	ldp	x28, x27, [sp, #0x90]
000000000002d844	add	sp, sp, #0xf0
000000000002d848	ret
000000000002d84c	adr	x8, #0x550e4
000000000002d850	nop
000000000002d854	ldar	x20, [x8]
000000000002d858	cbnz	x20, 0x2cd4c
000000000002d85c	mov	w0, #0xf
000000000002d860	bl	_mi_option_get
000000000002d864	cmp	x0, #0x1
000000000002d868	csinc	x20, x0, xzr, gt
000000000002d86c	adr	x8, #0x550c4
000000000002d870	nop
000000000002d874	stlr	x20, [x8]
000000000002d878	str	x20, [sp]
000000000002d87c	adr	x0, #0x24a94 ; literal pool for: "using %zd numa regions\n"
000000000002d880	nop
000000000002d884	bl	__mi_verbose_message
000000000002d888	b	0x2cd4c
_mi_pthread_done:
000000000002d88c	stp	x28, x27, [sp, #-0x60]!
000000000002d890	stp	x26, x25, [sp, #0x10]
000000000002d894	stp	x24, x23, [sp, #0x20]
000000000002d898	stp	x22, x21, [sp, #0x30]
000000000002d89c	stp	x20, x19, [sp, #0x40]
000000000002d8a0	stp	x29, x30, [sp, #0x50]
000000000002d8a4	add	x29, sp, #0x50
000000000002d8a8	cbz	x0, 0x2d9dc
000000000002d8ac	mov	x19, x0
000000000002d8b0	adr	x9, #0x556a8
000000000002d8b4	nop
000000000002d8b8	ldxr	x8, [x9]
000000000002d8bc	sub	x8, x8, #0x1
000000000002d8c0	stxr	w10, x8, [x9]
000000000002d8c4	cbnz	w10, 0x2d8b8
000000000002d8c8	nop
000000000002d8cc	ldr	x11, #0x55684
000000000002d8d0	adr	x9, #0x55680
000000000002d8d4	nop
000000000002d8d8	b	0x2d8ec
000000000002d8dc	clrex
000000000002d8e0	mov	w12, #0x0
000000000002d8e4	mov	x11, x10
000000000002d8e8	cbnz	w12, 0x2d914
000000000002d8ec	cmp	x11, x8
000000000002d8f0	b.ge	0x2d914
000000000002d8f4	ldxr	x10, [x9]
000000000002d8f8	cmp	x10, x11
000000000002d8fc	b.ne	0x2d8dc
000000000002d900	stlxr	w11, x8, [x9]
000000000002d904	cbnz	w11, 0x2d8e0
000000000002d908	mov	w12, #0x1
000000000002d90c	mov	x11, x10
000000000002d910	cbz	w12, 0x2d8ec
000000000002d914	adr	x8, #0x55634
000000000002d918	nop
000000000002d91c	ldxr	x9, [x8]
000000000002d920	add	x9, x9, #0x1
000000000002d924	stxr	w10, x9, [x8]
000000000002d928	cbnz	w10, 0x2d91c
000000000002d92c	ldr	x20, [x19, #0xb20]
000000000002d930	bl	0x4ddf0 ; symbol stub for: _pthread_self
000000000002d934	bl	0x4dda8 ; symbol stub for: _pthread_mach_thread_np
000000000002d938	adr	x23, #0x353c8
000000000002d93c	nop
000000000002d940	cmp	x19, x23
000000000002d944	b.eq	0x2d9dc
000000000002d948	mov	w8, w0
000000000002d94c	cmp	x20, x8
000000000002d950	b.ne	0x2d9dc
000000000002d954	nop
000000000002d958	ldr	x20, #0x3a6a8
000000000002d95c	cbz	x20, 0x2d970
000000000002d960	bl	0x4ddf0 ; symbol stub for: _pthread_self
000000000002d964	bl	0x4dda8 ; symbol stub for: _pthread_mach_thread_np
000000000002d968	cmp	x20, w0, uxtw
000000000002d96c	b.ne	0x2d97c
000000000002d970	adr	x1, #0x39b70
000000000002d974	nop
000000000002d978	b	0x2d984
000000000002d97c	adr	x1, #0x35384
000000000002d980	nop
000000000002d984	adrp	x20, 59 ; 0x68000
000000000002d988	add	x20, x20, #0xa18
000000000002d98c	ldr	x24, [x20]
000000000002d990	mov	x0, x20
000000000002d994	blr	x24
000000000002d998	str	x1, [x0]
000000000002d99c	nop
000000000002d9a0	ldr	x0, #0x3aaf8
000000000002d9a4	cmn	x0, #0x1
000000000002d9a8	b.eq	0x2d9b0
000000000002d9ac	bl	0x4de08 ; symbol stub for: _pthread_setspecific
000000000002d9b0	ldr	x8, [x19]
000000000002d9b4	ldr	x19, [x8, #0x10]
000000000002d9b8	cmp	x19, x23
000000000002d9bc	b.eq	0x2d9dc
000000000002d9c0	ldr	x8, [x19]
000000000002d9c4	ldr	x26, [x8, #0x18]
000000000002d9c8	cbz	x26, 0x2de40
000000000002d9cc	mov	w27, #0x18
000000000002d9d0	mov	w21, #0x7
000000000002d9d4	movk	w21, #0x20, lsl #16
000000000002d9d8	b	0x2da04
000000000002d9dc	ldp	x29, x30, [sp, #0x50]
000000000002d9e0	ldp	x20, x19, [sp, #0x40]
000000000002d9e4	ldp	x22, x21, [sp, #0x30]
000000000002d9e8	ldp	x24, x23, [sp, #0x20]
000000000002d9ec	ldp	x26, x25, [sp, #0x10]
000000000002d9f0	ldp	x28, x27, [sp], #0x60
000000000002d9f4	ret
000000000002d9f8	mov	x0, x22
000000000002d9fc	bl	_mi_free
000000000002da00	cbz	x26, 0x2de40
000000000002da04	mov	x22, x26
000000000002da08	ldr	x26, [x26, #0xbe0]
000000000002da0c	cmp	x22, x19
000000000002da10	b.eq	0x2da00
000000000002da14	cbz	x22, 0x2da00
000000000002da18	cmp	x22, x23
000000000002da1c	b.eq	0x2da00
000000000002da20	ldr	x8, [x22]
000000000002da24	ldr	x25, [x8, #0x10]
000000000002da28	cmp	x25, x22
000000000002da2c	b.eq	0x2dda8
000000000002da30	ldr	x8, [x22, #0xbc8]
000000000002da34	cbz	x8, 0x2dd94
000000000002da38	add	x20, x22, #0xb18
000000000002da3c	ldr	x8, [x22, #0xb18]
000000000002da40	b	0x2da50
000000000002da44	clrex
000000000002da48	mov	w9, #0x0
000000000002da4c	cbnz	w9, 0x2da74
000000000002da50	cbz	x8, 0x2da84
000000000002da54	mov	x0, x8
000000000002da58	ldaxr	x8, [x20]
000000000002da5c	cmp	x8, x0
000000000002da60	b.ne	0x2da44
000000000002da64	stlxr	w9, xzr, [x20]
000000000002da68	cbnz	w9, 0x2da48
000000000002da6c	mov	w9, #0x1
000000000002da70	cbz	w9, 0x2da50
000000000002da74	ldr	x28, [x0]
000000000002da78	bl	__mi_free_delayed_block
000000000002da7c	mov	x0, x28
000000000002da80	cbnz	x28, 0x2da74
000000000002da84	mov	x8, #0x0
000000000002da88	add	x9, x25, #0x410
000000000002da8c	add	x10, x25, #0x3f8
000000000002da90	add	x11, x25, #0x8
000000000002da94	add	x12, x25, #0x18
000000000002da98	b	0x2dac8
000000000002da9c	mov	x13, #0x0
000000000002daa0	ldr	x14, [x25, #0xbc8]
000000000002daa4	add	x14, x14, x13
000000000002daa8	str	x14, [x25, #0xbc8]
000000000002daac	ldr	x14, [x22, #0xbc8]
000000000002dab0	sub	x13, x14, x13
000000000002dab4	str	x13, [x22, #0xbc8]
000000000002dab8	add	x8, x8, #0x1
000000000002dabc	add	x10, x10, #0x18
000000000002dac0	cmp	x8, #0x4b
000000000002dac4	b.eq	0x2dd18
000000000002dac8	add	x13, x8, x8, lsl #1
000000000002dacc	lsl	x14, x13, #3
000000000002dad0	add	x16, x22, x14
000000000002dad4	ldr	x15, [x16, #0x410]
000000000002dad8	cbz	x15, 0x2da9c
000000000002dadc	mov	x13, #0x0
000000000002dae0	add	x14, x25, x14
000000000002dae4	add	x14, x14, #0x410
000000000002dae8	add	x16, x16, #0x410
000000000002daec	b	0x2dafc
000000000002daf0	add	x13, x13, #0x1
000000000002daf4	ldr	x15, [x15, #0x30]
000000000002daf8	cbz	x15, 0x2db50
000000000002dafc	add	x17, x15, #0x28
000000000002db00	stlr	x25, [x17]
000000000002db04	add	x17, x15, #0x20
000000000002db08	ldar	x0, [x17]
000000000002db0c	and	w1, w0, #0x3
000000000002db10	cmp	w1, #0x0
000000000002db14	ccmp	w1, #0x3, #0x4, ne
000000000002db18	b.eq	0x2daf0
000000000002db1c	cmp	w1, #0x1
000000000002db20	b.eq	0x2db48
000000000002db24	ldxr	x1, [x17]
000000000002db28	cmp	x1, x0
000000000002db2c	b.ne	0x2db40
000000000002db30	and	x0, x0, #0xfffffffffffffffc
000000000002db34	stlxr	w1, x0, [x17]
000000000002db38	cbnz	w1, 0x2db08
000000000002db3c	b	0x2daf0
000000000002db40	clrex
000000000002db44	b	0x2db08
000000000002db48	wfe
000000000002db4c	b	0x2db08
000000000002db50	madd	x15, x8, x27, x25
000000000002db54	add	x17, x15, #0x418
000000000002db58	ldr	x0, [x15, #0x418]
000000000002db5c	ldr	x15, [x16]
000000000002db60	cbz	x0, 0x2db7c
000000000002db64	str	x15, [x0, #0x30]
000000000002db68	str	x0, [x15, #0x38]
000000000002db6c	madd	x14, x8, x27, x22
000000000002db70	ldr	x14, [x14, #0x418]
000000000002db74	str	x14, [x17]
000000000002db78	b	0x2daa0
000000000002db7c	str	x15, [x14]
000000000002db80	add	x14, x8, x8, lsl #1
000000000002db84	lsl	x14, x14, #3
000000000002db88	add	x16, x22, x14
000000000002db8c	ldr	x16, [x16, #0x418]
000000000002db90	str	x16, [x17]
000000000002db94	add	x14, x25, x14
000000000002db98	ldr	x16, [x14, #0x420]
000000000002db9c	cmp	x16, #0x400
000000000002dba0	b.hi	0x2daa0
000000000002dba4	cmp	x15, #0x0
000000000002dba8	adr	x14, #0x214d8
000000000002dbac	nop
000000000002dbb0	csel	x14, x14, x15, eq
000000000002dbb4	add	x15, x16, #0x7
000000000002dbb8	lsr	x15, x15, #3
000000000002dbbc	add	x17, x25, x15, lsl #3
000000000002dbc0	ldr	x17, [x17, #0x8]
000000000002dbc4	cmp	x17, x14
000000000002dbc8	b.eq	0x2daa0
000000000002dbcc	cmp	x16, #0x9
000000000002dbd0	b.hs	0x2dbdc
000000000002dbd4	mov	x16, #0x0
000000000002dbd8	b	0x2dcc0
000000000002dbdc	sub	x17, x15, #0x1
000000000002dbe0	clz	x0, x17
000000000002dbe4	mov	w1, #0x3f
000000000002dbe8	sub	w0, w1, w0
000000000002dbec	and	w0, w0, #0xff
000000000002dbf0	sub	w1, w0, #0x2
000000000002dbf4	lsr	x17, x17, x1
000000000002dbf8	and	w17, w17, #0x3
000000000002dbfc	bfi	w17, w0, #2, #8
000000000002dc00	sub	w17, w17, #0x3
000000000002dc04	add	w0, w15, #0x1
000000000002dc08	and	w0, w0, #0xfffffffe
000000000002dc0c	cmp	x16, #0x40
000000000002dc10	csel	w16, w17, w0, hi
000000000002dc14	mov	x17, x10
000000000002dc18	ldr	x0, [x17, #0x10]
000000000002dc1c	add	x1, x0, #0x7
000000000002dc20	lsr	x0, x1, #3
000000000002dc24	cmp	x1, #0x10
000000000002dc28	b.hs	0x2dc3c
000000000002dc2c	mov	w1, #0x1
000000000002dc30	cmp	x17, x9
000000000002dc34	b.hi	0x2dca0
000000000002dc38	b	0x2dcb0
000000000002dc3c	cmp	x1, #0x47
000000000002dc40	b.hi	0x2dc58
000000000002dc44	add	w1, w0, #0x1
000000000002dc48	and	w1, w1, #0xfffffffe
000000000002dc4c	cmp	x17, x9
000000000002dc50	b.hi	0x2dca0
000000000002dc54	b	0x2dcb0
000000000002dc58	cmp	x1, x21
000000000002dc5c	b.ls	0x2dc70
000000000002dc60	mov	w1, #0x49
000000000002dc64	cmp	x17, x9
000000000002dc68	b.hi	0x2dca0
000000000002dc6c	b	0x2dcb0
000000000002dc70	sub	x1, x0, #0x1
000000000002dc74	clz	x2, x1
000000000002dc78	mov	w3, #0x3f
000000000002dc7c	sub	w2, w3, w2
000000000002dc80	and	w2, w2, #0xff
000000000002dc84	sub	w3, w2, #0x2
000000000002dc88	lsr	x1, x1, x3
000000000002dc8c	and	w1, w1, #0x3
000000000002dc90	bfi	w1, w2, #2, #8
000000000002dc94	sub	w1, w1, #0x3
000000000002dc98	cmp	x17, x9
000000000002dc9c	b.ls	0x2dcb0
000000000002dca0	sub	x17, x17, #0x18
000000000002dca4	and	w2, w16, #0xff
000000000002dca8	cmp	w2, w1, uxtb
000000000002dcac	b.eq	0x2dc18
000000000002dcb0	cmp	x0, x15
000000000002dcb4	csinc	x16, x15, x0, hs
000000000002dcb8	cmp	x16, x15
000000000002dcbc	b.hi	0x2daa0
000000000002dcc0	sub	x17, x15, x16
000000000002dcc4	add	x17, x17, #0x1
000000000002dcc8	cmp	x17, #0x4
000000000002dccc	b.lo	0x2dcfc
000000000002dcd0	and	x0, x17, #0xfffffffffffffffc
000000000002dcd4	dup.2d	v0, x14
000000000002dcd8	add	x1, x12, x16, lsl #3
000000000002dcdc	mov	x2, x0
000000000002dce0	stp	q0, q0, [x1, #-0x10]
000000000002dce4	add	x1, x1, #0x20
000000000002dce8	subs	x2, x2, #0x4
000000000002dcec	b.ne	0x2dce0
000000000002dcf0	cmp	x17, x0
000000000002dcf4	b.eq	0x2daa0
000000000002dcf8	add	x16, x16, x0
000000000002dcfc	sub	x15, x15, x16
000000000002dd00	add	x15, x15, #0x1
000000000002dd04	add	x16, x11, x16, lsl #3
000000000002dd08	str	x14, [x16], #0x8
000000000002dd0c	subs	x15, x15, #0x1
000000000002dd10	b.ne	0x2dd08
000000000002dd14	b	0x2daa0
000000000002dd18	ldr	x8, [x20]
000000000002dd1c	b	0x2dd2c
000000000002dd20	clrex
000000000002dd24	mov	w9, #0x0
000000000002dd28	cbnz	w9, 0x2dd50
000000000002dd2c	cbz	x8, 0x2dd60
000000000002dd30	mov	x0, x8
000000000002dd34	ldaxr	x8, [x20]
000000000002dd38	cmp	x8, x0
000000000002dd3c	b.ne	0x2dd20
000000000002dd40	stlxr	w9, xzr, [x20]
000000000002dd44	cbnz	w9, 0x2dd24
000000000002dd48	mov	w9, #0x1
000000000002dd4c	cbz	w9, 0x2dd2c
000000000002dd50	ldr	x20, [x0]
000000000002dd54	bl	__mi_free_delayed_block
000000000002dd58	mov	x0, x20
000000000002dd5c	cbnz	x20, 0x2dd50
000000000002dd60	add	x0, x22, #0x8
000000000002dd64	mov	w1, #0x408
000000000002dd68	bl	0x4db14 ; symbol stub for: _bzero
000000000002dd6c	add	x0, x22, #0x410
000000000002dd70	adr	x1, #0x353a0
000000000002dd74	nop
000000000002dd78	mov	w2, #0x708
000000000002dd7c	bl	0x4dbec ; symbol stub for: _memcpy
000000000002dd80	add	x8, x22, #0xb18
000000000002dd84	stlr	xzr, [x8]
000000000002dd88	str	xzr, [x22, #0xbc8]
000000000002dd8c	adrp	x20, 59 ; 0x68000
000000000002dd90	add	x20, x20, #0xa18
000000000002dd94	ldr	x8, [x22]
000000000002dd98	ldr	x1, [x8, #0x10]
000000000002dd9c	cmp	x1, x22
000000000002dda0	b.ne	0x2ddc4
000000000002dda4	b	0x2da00
000000000002dda8	mov	x0, x22
000000000002ddac	mov	w1, #0x2
000000000002ddb0	bl	_mi_heap_collect_ex
000000000002ddb4	ldr	x8, [x22]
000000000002ddb8	ldr	x1, [x8, #0x10]
000000000002ddbc	cmp	x1, x22
000000000002ddc0	b.eq	0x2da00
000000000002ddc4	mov	x0, x20
000000000002ddc8	blr	x24
000000000002ddcc	ldr	x9, [x0]
000000000002ddd0	cmp	x9, x22
000000000002ddd4	b.ne	0x2ddfc
000000000002ddd8	mov	x0, x20
000000000002dddc	blr	x24
000000000002dde0	str	x1, [x0]
000000000002dde4	nop
000000000002dde8	ldr	x0, #0x3a6b0
000000000002ddec	cmn	x0, #0x1
000000000002ddf0	b.eq	0x2ddf8
000000000002ddf4	bl	0x4de08 ; symbol stub for: _pthread_setspecific
000000000002ddf8	ldr	x8, [x22]
000000000002ddfc	mov	x9, #0x0
000000000002de00	add	x8, x8, #0x18
000000000002de04	mov	x11, x8
000000000002de08	mov	x10, x9
000000000002de0c	ldr	x9, [x11]
000000000002de10	add	x11, x9, #0xbe0
000000000002de14	cmp	x9, x22
000000000002de18	ccmp	x9, #0x0, #0x4, ne
000000000002de1c	b.ne	0x2de08
000000000002de20	cmp	x9, x22
000000000002de24	b.ne	0x2d9f8
000000000002de28	ldr	x9, [x22, #0xbe0]
000000000002de2c	add	x11, x10, #0xbe0
000000000002de30	cmp	x10, #0x0
000000000002de34	csel	x8, x8, x11, eq
000000000002de38	str	x9, [x8]
000000000002de3c	b	0x2d9f8
000000000002de40	adr	x8, #0x396a0
000000000002de44	nop
000000000002de48	cmp	x19, x8
000000000002de4c	b.eq	0x2de90
000000000002de50	mov	x0, x19
000000000002de54	mov	w1, #0x2
000000000002de58	bl	_mi_heap_collect_ex
000000000002de5c	ldr	x8, [x19]
000000000002de60	add	x0, x8, #0xb0
000000000002de64	bl	_mi_stats_merge_from
000000000002de68	mov	x0, x19
000000000002de6c	mov	w1, #0xee0
000000000002de70	mov	w2, #0x1
000000000002de74	ldp	x29, x30, [sp, #0x50]
000000000002de78	ldp	x20, x19, [sp, #0x40]
000000000002de7c	ldp	x22, x21, [sp, #0x30]
000000000002de80	ldp	x24, x23, [sp, #0x20]
000000000002de84	ldp	x26, x25, [sp, #0x10]
000000000002de88	ldp	x28, x27, [sp], #0x60
000000000002de8c	b	__mi_os_free_ex
000000000002de90	ldr	x8, [x19]
000000000002de94	add	x0, x8, #0xb0
000000000002de98	ldp	x29, x30, [sp, #0x50]
000000000002de9c	ldp	x20, x19, [sp, #0x40]
000000000002dea0	ldp	x22, x21, [sp, #0x30]
000000000002dea4	ldp	x24, x23, [sp, #0x20]
000000000002dea8	ldp	x26, x25, [sp, #0x10]
000000000002deac	ldp	x28, x27, [sp], #0x60
000000000002deb0	b	_mi_stats_merge_from
__mi_verbose_message:
000000000002deb4	stp	x28, x27, [sp, #-0x40]!
000000000002deb8	stp	x22, x21, [sp, #0x10]
000000000002debc	stp	x20, x19, [sp, #0x20]
000000000002dec0	stp	x29, x30, [sp, #0x30]
000000000002dec4	add	x29, sp, #0x30
000000000002dec8	sub	sp, sp, #0x210
000000000002decc	mov	x20, x0
000000000002ded0	mov	w0, #0x2
000000000002ded4	bl	_mi_option_get
000000000002ded8	cbz	x0, 0x2dfb4
000000000002dedc	add	x8, x29, #0x10
000000000002dee0	str	x8, [sp, #0x8]
000000000002dee4	cbz	x20, 0x2dfb4
000000000002dee8	adrp	x21, 85 ; 0x82000
000000000002deec	ldrb	w8, [x21, #0x846]
000000000002def0	adrp	x19, 59 ; 0x68000
000000000002def4	add	x19, x19, #0xa30
000000000002def8	cmp	w8, #0x1
000000000002defc	b.ne	0x2df24
000000000002df00	ldr	x8, [x19]
000000000002df04	mov	x0, x19
000000000002df08	blr	x8
000000000002df0c	ldrb	w9, [x0]
000000000002df10	tbnz	w9, #0x0, 0x2dfb4
000000000002df14	mov	x0, x19
000000000002df18	blr	x8
000000000002df1c	mov	w8, #0x1
000000000002df20	strb	w8, [x0]
000000000002df24	add	x0, sp, #0x10
000000000002df28	add	x3, x29, #0x10
000000000002df2c	mov	w1, #0x1ff
000000000002df30	mov	x2, x20
000000000002df34	bl	0x4ded4 ; symbol stub for: _vsnprintf
000000000002df38	ldrb	w8, [x21, #0x846]
000000000002df3c	cmp	w8, #0x1
000000000002df40	b.ne	0x2df58
000000000002df44	ldr	x8, [x19]
000000000002df48	mov	x0, x19
000000000002df4c	blr	x8
000000000002df50	mov	w8, #0x1
000000000002df54	strb	w8, [x0]
000000000002df58	adr	x21, #0x548ee
000000000002df5c	nop
000000000002df60	add	x8, x21, #0xca
000000000002df64	ldar	x20, [x8]
000000000002df68	ldur	x8, [x21, #0xd2]
000000000002df6c	adr	x9, #0x1748
000000000002df70	nop
000000000002df74	cmp	x8, #0x0
000000000002df78	csel	x22, x9, x8, eq
000000000002df7c	adr	x0, #0x24578 ; literal pool for: "mimalloc: "
000000000002df80	nop
000000000002df84	mov	x1, x20
000000000002df88	blr	x22
000000000002df8c	add	x0, sp, #0x10
000000000002df90	mov	x1, x20
000000000002df94	blr	x22
000000000002df98	ldrb	w8, [x21]
000000000002df9c	cmp	w8, #0x1
000000000002dfa0	b.ne	0x2dfb4
000000000002dfa4	ldr	x8, [x19]
000000000002dfa8	mov	x0, x19
000000000002dfac	blr	x8
000000000002dfb0	strb	wzr, [x0]
000000000002dfb4	add	sp, sp, #0x210
000000000002dfb8	ldp	x29, x30, [sp, #0x30]
000000000002dfbc	ldp	x20, x19, [sp, #0x20]
000000000002dfc0	ldp	x22, x21, [sp, #0x10]
000000000002dfc4	ldp	x28, x27, [sp], #0x40
000000000002dfc8	ret
_mi_thread_init:
000000000002dfcc	sub	sp, sp, #0x40
000000000002dfd0	stp	x22, x21, [sp, #0x10]
000000000002dfd4	stp	x20, x19, [sp, #0x20]
000000000002dfd8	stp	x29, x30, [sp, #0x30]
000000000002dfdc	add	x29, sp, #0x30
000000000002dfe0	bl	_mi_process_init
000000000002dfe4	adrp	x19, 59 ; 0x68000
000000000002dfe8	add	x19, x19, #0xa18
000000000002dfec	ldr	x21, [x19]
000000000002dff0	mov	x0, x19
000000000002dff4	blr	x21
000000000002dff8	ldr	x8, [x0]
000000000002dffc	adr	x9, #0x34d04
000000000002e000	nop
000000000002e004	cmp	x8, x9
000000000002e008	b.ne	0x2e244
000000000002e00c	adrp	x22, 58 ; 0x68000
000000000002e010	ldr	x20, [x22]
000000000002e014	cbz	x20, 0x2e028
000000000002e018	bl	0x4ddf0 ; symbol stub for: _pthread_self
000000000002e01c	bl	0x4dda8 ; symbol stub for: _pthread_mach_thread_np
000000000002e020	cmp	x20, w0, uxtw
000000000002e024	b.ne	0x2e108
000000000002e028	nop
000000000002e02c	ldr	x8, #0x39fdc
000000000002e030	adr	x20, #0x394b0
000000000002e034	nop
000000000002e038	cbnz	x8, 0x2e0e0
000000000002e03c	bl	0x4ddf0 ; symbol stub for: _pthread_self
000000000002e040	bl	0x4dda8 ; symbol stub for: _pthread_mach_thread_np
000000000002e044	mov	w8, w0
000000000002e048	str	x8, [x22]
000000000002e04c	bl	0x4dbc8 ; symbol stub for: _mach_absolute_time
000000000002e050	adr	x8, #-0x1df8
000000000002e054	nop
000000000002e058	adr	x9, #-0x1ee0
000000000002e05c	nop
000000000002e060	eor	x8, x9, x8
000000000002e064	eor	x8, x0, x8
000000000002e068	eor	w9, w8, w8, lsr #17
000000000002e06c	and	x9, x9, #0xf
000000000002e070	add	x9, x9, #0x1
000000000002e074	mov	w10, #0x11
000000000002e078	mov	x11, #0xe5b9
000000000002e07c	movk	x11, #0x1ce4, lsl #16
000000000002e080	movk	x11, #0x476d, lsl #32
000000000002e084	movk	x11, #0xbf58, lsl #48
000000000002e088	mov	x12, #0x11eb
000000000002e08c	movk	x12, #0x1331, lsl #16
000000000002e090	movk	x12, #0x49bb, lsl #32
000000000002e094	movk	x12, #0x94d0, lsl #48
000000000002e098	cmp	x8, #0x0
000000000002e09c	csel	x8, x10, x8, eq
000000000002e0a0	eor	x8, x8, x8, lsr #30
000000000002e0a4	mul	x8, x8, x11
000000000002e0a8	eor	x8, x8, x8, lsr #27
000000000002e0ac	mul	x8, x8, x12
000000000002e0b0	eor	x8, x8, x8, lsr #31
000000000002e0b4	subs	x9, x9, #0x1
000000000002e0b8	b.ne	0x2e098
000000000002e0bc	str	x8, [x20, #0xb28]
000000000002e0c0	add	x0, x20, #0xb40
000000000002e0c4	bl	__mi_random_init
000000000002e0c8	mov	x0, x20
000000000002e0cc	bl	__mi_heap_random_next
000000000002e0d0	str	x0, [x20, #0xb30]
000000000002e0d4	mov	x0, x20
000000000002e0d8	bl	__mi_heap_random_next
000000000002e0dc	str	x0, [x20, #0xb38]
000000000002e0e0	mov	x0, x19
000000000002e0e4	blr	x21
000000000002e0e8	str	x20, [x0]
000000000002e0ec	nop
000000000002e0f0	ldr	x0, #0x3a3a8
000000000002e0f4	cmn	x0, #0x1
000000000002e0f8	b.eq	0x2e1c8
000000000002e0fc	adr	x1, #0x393e4
000000000002e100	nop
000000000002e104	b	0x2e1c4
000000000002e108	mov	w0, #0xee0
000000000002e10c	bl	__mi_os_alloc
000000000002e110	mov	x20, x0
000000000002e114	cbnz	x0, 0x2e128
000000000002e118	mov	w0, #0xee0
000000000002e11c	bl	__mi_os_alloc
000000000002e120	mov	x20, x0
000000000002e124	cbz	x0, 0x2e258
000000000002e128	add	x22, x20, #0xbf0
000000000002e12c	adr	x1, #0x34bd4
000000000002e130	nop
000000000002e134	mov	x0, x20
000000000002e138	mov	w2, #0xbf0
000000000002e13c	bl	0x4dbec ; symbol stub for: _memcpy
000000000002e140	bl	0x4ddf0 ; symbol stub for: _pthread_self
000000000002e144	bl	0x4dda8 ; symbol stub for: _pthread_mach_thread_np
000000000002e148	mov	w8, w0
000000000002e14c	str	x8, [x20, #0xb20]
000000000002e150	add	x0, x20, #0xb40
000000000002e154	bl	__mi_random_init
000000000002e158	mov	x0, x20
000000000002e15c	bl	__mi_heap_random_next
000000000002e160	orr	x8, x0, #0x1
000000000002e164	str	x8, [x20, #0xb28]
000000000002e168	mov	x0, x20
000000000002e16c	bl	__mi_heap_random_next
000000000002e170	str	x0, [x20, #0xb30]
000000000002e174	mov	x0, x20
000000000002e178	bl	__mi_heap_random_next
000000000002e17c	str	x0, [x20, #0xb38]
000000000002e180	str	x22, [x20]
000000000002e184	str	x20, [x20, #0xc00]
000000000002e188	str	x20, [x20, #0xc08]
000000000002e18c	dup.2d	v0, x20
000000000002e190	nop
000000000002e194	ldr	q1, 0x4e5c0
000000000002e198	add.2d	v0, v0, v1
000000000002e19c	str	q0, [x20, #0xc80]
000000000002e1a0	str	d0, [x20, #0xc98]
000000000002e1a4	mov	x0, x19
000000000002e1a8	blr	x21
000000000002e1ac	str	x20, [x0]
000000000002e1b0	nop
000000000002e1b4	ldr	x0, #0x3a2e4
000000000002e1b8	cmn	x0, #0x1
000000000002e1bc	b.eq	0x2e1c8
000000000002e1c0	mov	x1, x20
000000000002e1c4	bl	0x4de08 ; symbol stub for: _pthread_setspecific
000000000002e1c8	adr	x10, #0x54d90
000000000002e1cc	nop
000000000002e1d0	ldxr	x8, [x10]
000000000002e1d4	add	x9, x8, #0x1
000000000002e1d8	stxr	w11, x9, [x10]
000000000002e1dc	cbnz	w11, 0x2e1d0
000000000002e1e0	nop
000000000002e1e4	ldr	x12, #0x54d6c
000000000002e1e8	adr	x10, #0x54d68
000000000002e1ec	nop
000000000002e1f0	b	0x2e204
000000000002e1f4	clrex
000000000002e1f8	mov	w13, #0x0
000000000002e1fc	mov	x12, x11
000000000002e200	cbnz	w13, 0x2e22c
000000000002e204	cmp	x12, x8
000000000002e208	b.gt	0x2e22c
000000000002e20c	ldxr	x11, [x10]
000000000002e210	cmp	x11, x12
000000000002e214	b.ne	0x2e1f4
000000000002e218	stlxr	w12, x9, [x10]
000000000002e21c	cbnz	w12, 0x2e1f8
000000000002e220	mov	w13, #0x1
000000000002e224	mov	x12, x11
000000000002e228	cbz	w13, 0x2e204
000000000002e22c	adr	x8, #0x54d14
000000000002e230	nop
000000000002e234	ldxr	x9, [x8]
000000000002e238	add	x9, x9, #0x1
000000000002e23c	stxr	w10, x9, [x8]
000000000002e240	cbnz	w10, 0x2e234
000000000002e244	ldp	x29, x30, [sp, #0x30]
000000000002e248	ldp	x20, x19, [sp, #0x20]
000000000002e24c	ldp	x22, x21, [sp, #0x10]
000000000002e250	add	sp, sp, #0x40
000000000002e254	ret
000000000002e258	mov	w8, #0xee0
000000000002e25c	str	x8, [sp]
000000000002e260	adr	x1, #0x24247 ; literal pool for: "unable to allocate thread local heap metadata (%zu bytes)\n"
000000000002e264	nop
000000000002e268	mov	w0, #0xc
000000000002e26c	bl	__mi_error_message
000000000002e270	b	0x2e1c8
_mi_option_get:
000000000002e274	sub	sp, sp, #0x130
000000000002e278	stp	x28, x27, [sp, #0xd0]
000000000002e27c	stp	x26, x25, [sp, #0xe0]
000000000002e280	stp	x24, x23, [sp, #0xf0]
000000000002e284	stp	x22, x21, [sp, #0x100]
000000000002e288	stp	x20, x19, [sp, #0x110]
000000000002e28c	stp	x29, x30, [sp, #0x120]
000000000002e290	add	x29, sp, #0x120
000000000002e294	adr	x25, #0x3a204
000000000002e298	nop
000000000002e29c	mov	w8, #0x18
000000000002e2a0	umaddl	x8, w0, w8, x25
000000000002e2a4	add	x22, x8, #0x388
000000000002e2a8	ldr	w9, [x8, #0x390]
000000000002e2ac	cbz	w9, 0x2e2d4
000000000002e2b0	ldr	x0, [x22]
000000000002e2b4	ldp	x29, x30, [sp, #0x120]
000000000002e2b8	ldp	x20, x19, [sp, #0x110]
000000000002e2bc	ldp	x22, x21, [sp, #0x100]
000000000002e2c0	ldp	x24, x23, [sp, #0xf0]
000000000002e2c4	ldp	x26, x25, [sp, #0xe0]
000000000002e2c8	ldp	x28, x27, [sp, #0xd0]
000000000002e2cc	add	sp, sp, #0x130
000000000002e2d0	ret
000000000002e2d4	mov	w19, w0
000000000002e2d8	add	x8, x8, #0x390
000000000002e2dc	str	x8, [sp, #0x20]
000000000002e2e0	strb	wzr, [sp, #0x87]
000000000002e2e4	adr	x1, #0x24044 ; literal pool for: "mimalloc_"
000000000002e2e8	nop
000000000002e2ec	add	x0, sp, #0x87
000000000002e2f0	mov	w2, #0x40
000000000002e2f4	bl	0x4de8c ; symbol stub for: _strncpy
000000000002e2f8	strb	wzr, [sp, #0xc7]
000000000002e2fc	mov	w8, #0x18
000000000002e300	str	x19, [sp, #0x18]
000000000002e304	madd	x19, x19, x8, x25
000000000002e308	ldr	x1, [x19, #0x398]
000000000002e30c	add	x0, sp, #0x87
000000000002e310	mov	w2, #0x40
000000000002e314	mov	w3, #0x41
000000000002e318	bl	0x4dacc ; symbol stub for: ___strncat_chk
000000000002e31c	strb	wzr, [sp, #0xc7]
000000000002e320	add	x0, sp, #0x87
000000000002e324	bl	0x4de74 ; symbol stub for: _strlen
000000000002e328	cbz	x0, 0x2e3f8
000000000002e32c	mov	x24, x0
000000000002e330	bl	0x4d8d4 ; symbol stub for: __NSGetEnviron
000000000002e334	ldr	x8, [x0]
000000000002e338	str	x8, [sp, #0x30]
000000000002e33c	cbz	x8, 0x2e3f8
000000000002e340	mov	x28, #0x0
000000000002e344	add	x8, x19, #0x398
000000000002e348	str	x8, [sp, #0x10]
000000000002e34c	add	x8, sp, #0x87
000000000002e350	add	x8, x8, #0x1
000000000002e354	str	x8, [sp, #0x28]
000000000002e358	b	0x2e378
000000000002e35c	add	x8, x26, x24
000000000002e360	ldrb	w9, [x8]
000000000002e364	cmp	w9, #0x3d
000000000002e368	b.eq	0x2e414
000000000002e36c	add	x28, x28, #0x1
000000000002e370	cmp	x28, #0x100
000000000002e374	b.eq	0x2e3f8
000000000002e378	ldr	x8, [sp, #0x30]
000000000002e37c	ldr	x26, [x8, x28, lsl #3]
000000000002e380	cbz	x26, 0x2e3f8
000000000002e384	ldrb	w8, [sp, #0x87]
000000000002e388	cbz	w8, 0x2e3dc
000000000002e38c	ldr	x27, [sp, #0x28]
000000000002e390	mov	x19, x24
000000000002e394	mov	x23, x26
000000000002e398	cbz	x19, 0x2e3d4
000000000002e39c	ldrb	w9, [x23]
000000000002e3a0	cbz	w9, 0x2e3d4
000000000002e3a4	sxtb	w20, w9
000000000002e3a8	sxtb	w0, w8
000000000002e3ac	bl	0x4dad8 ; symbol stub for: ___toupper
000000000002e3b0	mov	x21, x0
000000000002e3b4	mov	x0, x20
000000000002e3b8	bl	0x4dad8 ; symbol stub for: ___toupper
000000000002e3bc	cmp	w21, w0
000000000002e3c0	b.ne	0x2e3e4
000000000002e3c4	add	x23, x23, #0x1
000000000002e3c8	sub	x19, x19, #0x1
000000000002e3cc	ldrb	w8, [x27], #0x1
000000000002e3d0	cbnz	w8, 0x2e398
000000000002e3d4	cbnz	x19, 0x2e3e8
000000000002e3d8	b	0x2e35c
000000000002e3dc	mov	x23, x26
000000000002e3e0	b	0x2e3e8
000000000002e3e4	ldurb	w8, [x27, #-0x1]
000000000002e3e8	ldrb	w9, [x23]
000000000002e3ec	cmp	w9, w8, uxtb
000000000002e3f0	b.eq	0x2e35c
000000000002e3f4	b	0x2e36c
000000000002e3f8	adrp	x8, 84 ; 0x82000
000000000002e3fc	ldrb	w8, [x8, #0x846]
000000000002e400	cmp	w8, #0x1
000000000002e404	b.ne	0x2e2b0
000000000002e408	ldr	x9, [sp, #0x20]
000000000002e40c	str	w8, [x9]
000000000002e410	b	0x2e2b0
000000000002e414	add	x1, x8, #0x1
000000000002e418	strb	wzr, [sp, #0x46]
000000000002e41c	mov	w19, #0x40
000000000002e420	add	x0, sp, #0x46
000000000002e424	mov	w2, #0x40
000000000002e428	bl	0x4de8c ; symbol stub for: _strncpy
000000000002e42c	strb	wzr, [sp, #0x86]
000000000002e430	add	x0, sp, #0x46
000000000002e434	bl	0x4de74 ; symbol stub for: _strlen
000000000002e438	cmp	x0, #0x40
000000000002e43c	csel	x19, x0, x19, lo
000000000002e440	cbz	x19, 0x2e464
000000000002e444	add	x20, sp, #0x87
000000000002e448	add	x21, sp, #0x46
000000000002e44c	mov	x23, x19
000000000002e450	ldrsb	w0, [x21], #0x1
000000000002e454	bl	0x4dad8 ; symbol stub for: ___toupper
000000000002e458	strb	w0, [x20], #0x1
000000000002e45c	subs	x23, x23, #0x1
000000000002e460	b.ne	0x2e450
000000000002e464	add	x8, sp, #0x87
000000000002e468	strb	wzr, [x8, x19]
000000000002e46c	ldrb	w8, [sp, #0x87]
000000000002e470	cbz	w8, 0x2e488
000000000002e474	adr	x0, #0x23ebe ; literal pool for: "1;TRUE;YES;ON"
000000000002e478	nop
000000000002e47c	add	x1, sp, #0x87
000000000002e480	bl	0x4dea4 ; symbol stub for: _strstr
000000000002e484	cbz	x0, 0x2e498
000000000002e488	mov	w8, #0x1
000000000002e48c	str	x8, [x22]
000000000002e490	mov	w8, #0x2
000000000002e494	b	0x2e408
000000000002e498	adr	x0, #0x23ea8 ; literal pool for: "0;FALSE;NO;OFF"
000000000002e49c	nop
000000000002e4a0	add	x19, sp, #0x87
000000000002e4a4	add	x1, sp, #0x87
000000000002e4a8	bl	0x4dea4 ; symbol stub for: _strstr
000000000002e4ac	cbz	x0, 0x2e4bc
000000000002e4b0	str	xzr, [x22]
000000000002e4b4	mov	w8, #0x2
000000000002e4b8	b	0x2e408
000000000002e4bc	str	x19, [sp, #0x38]
000000000002e4c0	add	x0, sp, #0x87
000000000002e4c4	add	x1, sp, #0x38
000000000002e4c8	mov	w2, #0xa
000000000002e4cc	bl	0x4deb0 ; symbol stub for: _strtol
000000000002e4d0	mov	w8, #0x18
000000000002e4d4	ldr	x9, [sp, #0x18]
000000000002e4d8	madd	x8, x9, x8, x25
000000000002e4dc	ldr	w9, [x8, #0x394]
000000000002e4e0	ldr	x8, [sp, #0x38]
000000000002e4e4	cmp	w9, #0x8
000000000002e4e8	b.ne	0x2e53c
000000000002e4ec	ldrb	w9, [x8]
000000000002e4f0	cmp	w9, #0x47
000000000002e4f4	b.eq	0x2e514
000000000002e4f8	cmp	w9, #0x4d
000000000002e4fc	b.eq	0x2e51c
000000000002e500	cmp	w9, #0x4b
000000000002e504	b.eq	0x2e520
000000000002e508	add	x10, x0, #0x3ff
000000000002e50c	lsr	x0, x10, #10
000000000002e510	b	0x2e52c
000000000002e514	lsl	x0, x0, #20
000000000002e518	b	0x2e520
000000000002e51c	lsl	x0, x0, #10
000000000002e520	add	x8, x8, #0x1
000000000002e524	str	x8, [sp, #0x38]
000000000002e528	ldrb	w9, [x8]
000000000002e52c	cmp	w9, #0x42
000000000002e530	b.ne	0x2e53c
000000000002e534	add	x8, x8, #0x1
000000000002e538	str	x8, [sp, #0x38]
000000000002e53c	ldrb	w8, [x8]
000000000002e540	cbz	w8, 0x2e568
000000000002e544	ldr	x8, [sp, #0x10]
000000000002e548	ldr	x8, [x8]
000000000002e54c	add	x9, sp, #0x87
000000000002e550	stp	x8, x9, [sp]
000000000002e554	adr	x0, #0x23dfb ; literal pool for: "environment option mimalloc_%s has an invalid value: %s\n"
000000000002e558	nop
000000000002e55c	bl	__mi_warning_message
000000000002e560	mov	w8, #0x1
000000000002e564	b	0x2e408
000000000002e568	str	x0, [x22]
000000000002e56c	mov	w8, #0x2
000000000002e570	b	0x2e408
__mi_os_alloc_aligned:
000000000002e574	sub	sp, sp, #0x90
000000000002e578	stp	x28, x27, [sp, #0x30]
000000000002e57c	stp	x26, x25, [sp, #0x40]
000000000002e580	stp	x24, x23, [sp, #0x50]
000000000002e584	stp	x22, x21, [sp, #0x60]
000000000002e588	stp	x20, x19, [sp, #0x70]
000000000002e58c	stp	x29, x30, [sp, #0x80]
000000000002e590	add	x29, sp, #0x80
000000000002e594	cbz	x0, 0x2e694
000000000002e598	mov	x23, x2
000000000002e59c	mov	x19, x1
000000000002e5a0	lsr	x8, x0, #19
000000000002e5a4	adrp	x28, 58 ; 0x68000
000000000002e5a8	cbnz	x8, 0x2e5b4
000000000002e5ac	ldr	x8, [x28, #0x4a0]
000000000002e5b0	b	0x2e5e8
000000000002e5b4	cmp	x0, #0x200, lsl #12
000000000002e5b8	b.hs	0x2e5c4
000000000002e5bc	mov	w8, #0x10000
000000000002e5c0	b	0x2e5e8
000000000002e5c4	cmp	x0, #0x800, lsl #12
000000000002e5c8	b.hs	0x2e5d4
000000000002e5cc	mov	w8, #0x40000
000000000002e5d0	b	0x2e5e8
000000000002e5d4	lsr	x8, x0, #25
000000000002e5d8	cmp	x8, #0x0
000000000002e5dc	mov	w8, #0x400000
000000000002e5e0	mov	w9, #0x100000
000000000002e5e4	csel	x8, x9, x8, eq
000000000002e5e8	mvn	x9, x8
000000000002e5ec	cmp	x9, x0
000000000002e5f0	b.ls	0x2e61c
000000000002e5f4	add	x9, x0, x8
000000000002e5f8	sub	x9, x9, #0x1
000000000002e5fc	sub	x10, x8, #0x1
000000000002e600	tst	x8, x10
000000000002e604	b.ne	0x2e614
000000000002e608	neg	x8, x8
000000000002e60c	and	x0, x9, x8
000000000002e610	b	0x2e61c
000000000002e614	udiv	x9, x9, x8
000000000002e618	mul	x0, x9, x8
000000000002e61c	ldr	x8, [x28, #0x4a0]
000000000002e620	fmov	d0, x8
000000000002e624	cnt.8b	v0, v0
000000000002e628	uaddlv.8b	h0, v0
000000000002e62c	fmov	w9, s0
000000000002e630	mov	w10, #0x3fffff
000000000002e634	add	x10, x8, x10
000000000002e638	udiv	x11, x10, x8
000000000002e63c	mul	x11, x11, x8
000000000002e640	neg	x12, x8
000000000002e644	and	x10, x10, x12
000000000002e648	cmp	x9, #0x1
000000000002e64c	csel	x21, x11, x10, hi
000000000002e650	strb	wzr, [sp, #0x2f]
000000000002e654	cbz	x23, 0x2e668
000000000002e658	ldrb	w10, [x23]
000000000002e65c	strb	w10, [sp, #0x2f]
000000000002e660	strb	wzr, [x23]
000000000002e664	b	0x2e670
000000000002e668	mov	w10, #0x0
000000000002e66c	add	x23, sp, #0x2f
000000000002e670	cmp	w10, #0x0
000000000002e674	cset	w10, ne
000000000002e678	fmov	d0, x21
000000000002e67c	cnt.8b	v0, v0
000000000002e680	uaddlv.8b	h0, v0
000000000002e684	fmov	w11, s0
000000000002e688	cmp	x8, x21
000000000002e68c	ccmp	x11, #0x1, #0x2, ls
000000000002e690	b.ls	0x2e6bc
000000000002e694	mov	x20, #0x0
000000000002e698	mov	x0, x20
000000000002e69c	ldp	x29, x30, [sp, #0x80]
000000000002e6a0	ldp	x20, x19, [sp, #0x70]
000000000002e6a4	ldp	x22, x21, [sp, #0x60]
000000000002e6a8	ldp	x24, x23, [sp, #0x50]
000000000002e6ac	ldp	x26, x25, [sp, #0x40]
000000000002e6b0	ldp	x28, x27, [sp, #0x30]
000000000002e6b4	add	sp, sp, #0x90
000000000002e6b8	ret
000000000002e6bc	sub	x11, x8, #0x1
000000000002e6c0	add	x11, x11, x0
000000000002e6c4	cmp	x9, #0x1
000000000002e6c8	b.hi	0x2e6dc
000000000002e6cc	neg	x8, x8
000000000002e6d0	and	x22, x11, x8
000000000002e6d4	cbnz	x22, 0x2e6e8
000000000002e6d8	b	0x2e694
000000000002e6dc	udiv	x9, x11, x8
000000000002e6e0	mul	x22, x9, x8
000000000002e6e4	cbz	x22, 0x2e694
000000000002e6e8	and	w26, w10, w19
000000000002e6ec	cmp	w19, #0x0
000000000002e6f0	mov	w8, #0x3
000000000002e6f4	csel	w24, w8, wzr, ne
000000000002e6f8	mov	w0, #0x11
000000000002e6fc	bl	_mi_option_get
000000000002e700	sub	w8, w0, #0x64
000000000002e704	lsl	w9, w0, #24
000000000002e708	cmp	w8, #0x9b
000000000002e70c	mov	w8, #0x64000000
000000000002e710	csel	w25, w8, w9, hi
000000000002e714	adrp	x8, 84 ; 0x82000
000000000002e718	ldrb	w8, [x8, #0x848]
000000000002e71c	cmp	w8, #0x1
000000000002e720	b.ne	0x2e7a8
000000000002e724	mov	w0, #0x6
000000000002e728	bl	_mi_option_get
000000000002e72c	cbz	x0, 0x2e7a8
000000000002e730	orr	w8, w21, w22
000000000002e734	tst	x8, #0x1fffff
000000000002e738	b.ne	0x2e7a8
000000000002e73c	eor	w8, w26, #0x1
000000000002e740	tbnz	w8, #0x0, 0x2e7a8
000000000002e744	adr	x27, #0x541e4
000000000002e748	nop
000000000002e74c	ldar	x8, [x27]
000000000002e750	cbz	x8, 0x2e770
000000000002e754	sub	x9, x8, #0x1
000000000002e758	ldaxr	x10, [x27]
000000000002e75c	cmp	x10, x8
000000000002e760	b.ne	0x2e7a4
000000000002e764	stlxr	w10, x9, [x27]
000000000002e768	cbnz	w10, 0x2e758
000000000002e76c	b	0x2e7a8
000000000002e770	orr	w4, w25, #0x20000
000000000002e774	mov	w8, #0x1
000000000002e778	strb	w8, [x23]
000000000002e77c	mov	x0, x22
000000000002e780	mov	x1, x21
000000000002e784	mov	x2, x24
000000000002e788	mov	w3, #0x1002
000000000002e78c	bl	_mi_unix_mmapx
000000000002e790	mov	x20, x0
000000000002e794	cbnz	x0, 0x2e7cc
000000000002e798	mov	w8, #0xa
000000000002e79c	stlr	x8, [x27]
000000000002e7a0	b	0x2e7a8
000000000002e7a4	clrex
000000000002e7a8	strb	wzr, [x23]
000000000002e7ac	mov	x0, x22
000000000002e7b0	mov	x1, x21
000000000002e7b4	mov	x2, x24
000000000002e7b8	mov	w3, #0x1042
000000000002e7bc	mov	x4, x25
000000000002e7c0	bl	_mi_unix_mmapx
000000000002e7c4	mov	x20, x0
000000000002e7c8	cbz	x0, 0x2e854
000000000002e7cc	adr	x27, #0x546cc
000000000002e7d0	nop
000000000002e7d4	ldxr	x8, [x27]
000000000002e7d8	add	x8, x8, x22
000000000002e7dc	stxr	w9, x8, [x27]
000000000002e7e0	cbnz	w9, 0x2e7d4
000000000002e7e4	adrp	x25, 84 ; 0x82000
000000000002e7e8	ldr	x10, [x25, #0xe90]
000000000002e7ec	adr	x26, #0x546a4
000000000002e7f0	nop
000000000002e7f4	b	0x2e808
000000000002e7f8	clrex
000000000002e7fc	mov	w11, #0x0
000000000002e800	mov	x10, x9
000000000002e804	cbnz	w11, 0x2e830
000000000002e808	cmp	x10, x8
000000000002e80c	b.ge	0x2e830
000000000002e810	ldxr	x9, [x26]
000000000002e814	cmp	x9, x10
000000000002e818	b.ne	0x2e7f8
000000000002e81c	stlxr	w10, x8, [x26]
000000000002e820	cbnz	w10, 0x2e7fc
000000000002e824	mov	w11, #0x1
000000000002e828	mov	x10, x9
000000000002e82c	cbz	w11, 0x2e808
000000000002e830	cmp	x22, #0x1
000000000002e834	b.lt	0x2e878
000000000002e838	adr	x8, #0x54648
000000000002e83c	nop
000000000002e840	ldxr	x9, [x8]
000000000002e844	add	x9, x9, x22
000000000002e848	stxr	w10, x9, [x8]
000000000002e84c	cbnz	w10, 0x2e840
000000000002e850	b	0x2e894
000000000002e854	bl	0x4dac0 ; symbol stub for: ___error
000000000002e858	ldr	w8, [x0]
000000000002e85c	stp	xzr, xzr, [sp, #0x10]
000000000002e860	str	x26, [sp, #0x20]
000000000002e864	stp	x22, x8, [sp]
000000000002e868	adr	x0, #0x23984 ; literal pool for: "unable to allocate OS memory (%zu bytes, error code: %i, address: %p, large only: %d, allow large: %d)\n"
000000000002e86c	nop
000000000002e870	bl	__mi_warning_message
000000000002e874	b	0x2e698
000000000002e878	neg	x8, x22
000000000002e87c	adr	x9, #0x5460c
000000000002e880	nop
000000000002e884	ldxr	x10, [x9]
000000000002e888	add	x10, x10, x8
000000000002e88c	stxr	w11, x10, [x9]
000000000002e890	cbnz	w11, 0x2e884
000000000002e894	cbz	w19, 0x2e93c
000000000002e898	adr	x9, #0x54620
000000000002e89c	nop
000000000002e8a0	ldxr	x8, [x9]
000000000002e8a4	add	x8, x8, x22
000000000002e8a8	stxr	w10, x8, [x9]
000000000002e8ac	cbnz	w10, 0x2e8a0
000000000002e8b0	nop
000000000002e8b4	ldr	x11, #0x545fc
000000000002e8b8	adr	x9, #0x545f8
000000000002e8bc	nop
000000000002e8c0	b	0x2e8d4
000000000002e8c4	clrex
000000000002e8c8	mov	w12, #0x0
000000000002e8cc	mov	x11, x10
000000000002e8d0	cbnz	w12, 0x2e8fc
000000000002e8d4	cmp	x11, x8
000000000002e8d8	b.ge	0x2e8fc
000000000002e8dc	ldxr	x10, [x9]
000000000002e8e0	cmp	x10, x11
000000000002e8e4	b.ne	0x2e8c4
000000000002e8e8	stlxr	w11, x8, [x9]
000000000002e8ec	cbnz	w11, 0x2e8c8
000000000002e8f0	mov	w12, #0x1
000000000002e8f4	mov	x11, x10
000000000002e8f8	cbz	w12, 0x2e8d4
000000000002e8fc	cmp	x22, #0x1
000000000002e900	b.lt	0x2e920
000000000002e904	adr	x8, #0x5459c
000000000002e908	nop
000000000002e90c	ldxr	x9, [x8]
000000000002e910	add	x9, x9, x22
000000000002e914	stxr	w10, x9, [x8]
000000000002e918	cbnz	w10, 0x2e90c
000000000002e91c	b	0x2e93c
000000000002e920	neg	x8, x22
000000000002e924	adr	x9, #0x54584
000000000002e928	nop
000000000002e92c	ldxr	x10, [x9]
000000000002e930	add	x10, x10, x8
000000000002e934	stxr	w11, x10, [x9]
000000000002e938	cbnz	w11, 0x2e92c
000000000002e93c	udiv	x8, x20, x21
000000000002e940	msub	x8, x8, x21, x20
000000000002e944	cbz	x8, 0x2e698
000000000002e948	mov	x0, x20
000000000002e94c	mov	x1, x22
000000000002e950	bl	0x4dc34 ; symbol stub for: _munmap
000000000002e954	neg	x8, x22
000000000002e958	cbz	w19, 0x2e9fc
000000000002e95c	adr	x9, #0x5455c
000000000002e960	nop
000000000002e964	ldxr	x10, [x9]
000000000002e968	add	x11, x10, x8
000000000002e96c	stxr	w12, x11, [x9]
000000000002e970	cbnz	w12, 0x2e964
000000000002e974	sub	x9, x10, x22
000000000002e978	nop
000000000002e97c	ldr	x12, #0x54534
000000000002e980	adr	x10, #0x54530
000000000002e984	nop
000000000002e988	b	0x2e99c
000000000002e98c	clrex
000000000002e990	mov	w13, #0x0
000000000002e994	mov	x12, x11
000000000002e998	cbnz	w13, 0x2e9c4
000000000002e99c	cmp	x12, x9
000000000002e9a0	b.ge	0x2e9c4
000000000002e9a4	ldxr	x11, [x10]
000000000002e9a8	cmp	x11, x12
000000000002e9ac	b.ne	0x2e98c
000000000002e9b0	stlxr	w12, x9, [x10]
000000000002e9b4	cbnz	w12, 0x2e990
000000000002e9b8	mov	w13, #0x1
000000000002e9bc	mov	x12, x11
000000000002e9c0	cbz	w13, 0x2e99c
000000000002e9c4	tbnz	x22, #0x3f, 0x2e9e4
000000000002e9c8	adr	x9, #0x544e0
000000000002e9cc	nop
000000000002e9d0	ldxr	x10, [x9]
000000000002e9d4	add	x10, x10, x22
000000000002e9d8	stxr	w11, x10, [x9]
000000000002e9dc	cbnz	w11, 0x2e9d0
000000000002e9e0	b	0x2e9fc
000000000002e9e4	adr	x9, #0x544bc
000000000002e9e8	nop
000000000002e9ec	ldxr	x10, [x9]
000000000002e9f0	add	x10, x10, x8
000000000002e9f4	stxr	w11, x10, [x9]
000000000002e9f8	cbnz	w11, 0x2e9ec
000000000002e9fc	ldxr	x9, [x27]
000000000002ea00	add	x10, x9, x8
000000000002ea04	stxr	w11, x10, [x27]
000000000002ea08	cbnz	w11, 0x2e9fc
000000000002ea0c	sub	x9, x9, x22
000000000002ea10	ldr	x11, [x25, #0xe90]
000000000002ea14	b	0x2ea28
000000000002ea18	clrex
000000000002ea1c	mov	w12, #0x0
000000000002ea20	mov	x11, x10
000000000002ea24	cbnz	w12, 0x2ea50
000000000002ea28	cmp	x11, x9
000000000002ea2c	b.ge	0x2ea50
000000000002ea30	ldxr	x10, [x26]
000000000002ea34	cmp	x10, x11
000000000002ea38	b.ne	0x2ea18
000000000002ea3c	stlxr	w11, x9, [x26]
000000000002ea40	cbnz	w11, 0x2ea1c
000000000002ea44	mov	w12, #0x1
000000000002ea48	mov	x11, x10
000000000002ea4c	cbz	w12, 0x2ea28
000000000002ea50	tbnz	x22, #0x3f, 0x2ea70
000000000002ea54	adr	x8, #0x54434
000000000002ea58	nop
000000000002ea5c	ldxr	x9, [x8]
000000000002ea60	add	x9, x9, x22
000000000002ea64	stxr	w10, x9, [x8]
000000000002ea68	cbnz	w10, 0x2ea5c
000000000002ea6c	b	0x2ea88
000000000002ea70	adr	x9, #0x54410
000000000002ea74	nop
000000000002ea78	ldxr	x10, [x9]
000000000002ea7c	add	x10, x10, x8
000000000002ea80	stxr	w11, x10, [x9]
000000000002ea84	cbnz	w11, 0x2ea78
000000000002ea88	cmn	w0, #0x1
000000000002ea8c	b.ne	0x2eab0
000000000002ea90	bl	0x4dac0 ; symbol stub for: ___error
000000000002ea94	ldr	w0, [x0]
000000000002ea98	bl	0x4de68 ; symbol stub for: _strerror
000000000002ea9c	stp	x20, x22, [sp, #0x8]
000000000002eaa0	str	x0, [sp]
000000000002eaa4	adr	x0, #0x2370a ; literal pool for: "munmap failed: %s, addr 0x%8li, size %lu\n"
000000000002eaa8	nop
000000000002eaac	bl	__mi_warning_message
000000000002eab0	mvn	x8, x21
000000000002eab4	cmp	x22, x8
000000000002eab8	b.hs	0x2e694
000000000002eabc	adds	x25, x22, x21
000000000002eac0	b.eq	0x2e694
000000000002eac4	mov	w0, #0x11
000000000002eac8	bl	_mi_option_get
000000000002eacc	sub	w8, w0, #0x64
000000000002ead0	lsl	w9, w0, #24
000000000002ead4	cmp	w8, #0x9b
000000000002ead8	mov	w8, #0x64000000
000000000002eadc	csel	w20, w8, w9, hi
000000000002eae0	adrp	x8, 84 ; 0x82000
000000000002eae4	ldrb	w8, [x8, #0x848]
000000000002eae8	cmp	w8, #0x1
000000000002eaec	b.ne	0x2eaf8
000000000002eaf0	mov	w0, #0x6
000000000002eaf4	bl	_mi_option_get
000000000002eaf8	strb	wzr, [x23]
000000000002eafc	mov	x0, x25
000000000002eb00	mov	x1, x21
000000000002eb04	mov	x2, x24
000000000002eb08	mov	w3, #0x1042
000000000002eb0c	mov	x4, x20
000000000002eb10	bl	_mi_unix_mmapx
000000000002eb14	cbz	x0, 0x2eb94
000000000002eb18	mov	x23, x0
000000000002eb1c	ldxr	x8, [x27]
000000000002eb20	add	x8, x8, x25
000000000002eb24	stxr	w9, x8, [x27]
000000000002eb28	cbnz	w9, 0x2eb1c
000000000002eb2c	nop
000000000002eb30	ldr	x10, #0x54360
000000000002eb34	b	0x2eb48
000000000002eb38	clrex
000000000002eb3c	mov	w11, #0x0
000000000002eb40	mov	x10, x9
000000000002eb44	cbnz	w11, 0x2eb70
000000000002eb48	cmp	x10, x8
000000000002eb4c	b.ge	0x2eb70
000000000002eb50	ldxr	x9, [x26]
000000000002eb54	cmp	x9, x10
000000000002eb58	b.ne	0x2eb38
000000000002eb5c	stlxr	w10, x8, [x26]
000000000002eb60	cbnz	w10, 0x2eb3c
000000000002eb64	mov	w11, #0x1
000000000002eb68	mov	x10, x9
000000000002eb6c	cbz	w11, 0x2eb48
000000000002eb70	cmp	x25, #0x1
000000000002eb74	b.lt	0x2ebbc
000000000002eb78	adr	x8, #0x54308
000000000002eb7c	nop
000000000002eb80	ldxr	x9, [x8]
000000000002eb84	add	x9, x9, x25
000000000002eb88	stxr	w10, x9, [x8]
000000000002eb8c	cbnz	w10, 0x2eb80
000000000002eb90	b	0x2ebd8
000000000002eb94	bl	0x4dac0 ; symbol stub for: ___error
000000000002eb98	ldr	w8, [x0]
000000000002eb9c	stp	xzr, xzr, [sp, #0x10]
000000000002eba0	str	xzr, [sp, #0x20]
000000000002eba4	stp	x25, x8, [sp]
000000000002eba8	adr	x0, #0x23644 ; literal pool for: "unable to allocate OS memory (%zu bytes, error code: %i, address: %p, large only: %d, allow large: %d)\n"
000000000002ebac	nop
000000000002ebb0	bl	__mi_warning_message
000000000002ebb4	mov	x20, #0x0
000000000002ebb8	b	0x2e698
000000000002ebbc	neg	x8, x25
000000000002ebc0	adr	x9, #0x542c8
000000000002ebc4	nop
000000000002ebc8	ldxr	x10, [x9]
000000000002ebcc	add	x10, x10, x8
000000000002ebd0	stxr	w11, x10, [x9]
000000000002ebd4	cbnz	w11, 0x2ebc8
000000000002ebd8	cbz	w19, 0x2ec80
000000000002ebdc	adr	x9, #0x542dc
000000000002ebe0	nop
000000000002ebe4	ldxr	x8, [x9]
000000000002ebe8	add	x8, x8, x25
000000000002ebec	stxr	w10, x8, [x9]
000000000002ebf0	cbnz	w10, 0x2ebe4
000000000002ebf4	nop
000000000002ebf8	ldr	x11, #0x542b8
000000000002ebfc	adr	x9, #0x542b4
000000000002ec00	nop
000000000002ec04	b	0x2ec18
000000000002ec08	clrex
000000000002ec0c	mov	w12, #0x0
000000000002ec10	mov	x11, x10
000000000002ec14	cbnz	w12, 0x2ec40
000000000002ec18	cmp	x11, x8
000000000002ec1c	b.ge	0x2ec40
000000000002ec20	ldxr	x10, [x9]
000000000002ec24	cmp	x10, x11
000000000002ec28	b.ne	0x2ec08
000000000002ec2c	stlxr	w11, x8, [x9]
000000000002ec30	cbnz	w11, 0x2ec0c
000000000002ec34	mov	w12, #0x1
000000000002ec38	mov	x11, x10
000000000002ec3c	cbz	w12, 0x2ec18
000000000002ec40	cmp	x25, #0x1
000000000002ec44	b.lt	0x2ec64
000000000002ec48	adr	x8, #0x54258
000000000002ec4c	nop
000000000002ec50	ldxr	x9, [x8]
000000000002ec54	add	x9, x9, x25
000000000002ec58	stxr	w10, x9, [x8]
000000000002ec5c	cbnz	w10, 0x2ec50
000000000002ec60	b	0x2ec80
000000000002ec64	neg	x8, x25
000000000002ec68	adr	x9, #0x54240
000000000002ec6c	nop
000000000002ec70	ldxr	x10, [x9]
000000000002ec74	add	x10, x10, x8
000000000002ec78	stxr	w11, x10, [x9]
000000000002ec7c	cbnz	w11, 0x2ec70
000000000002ec80	add	x8, x21, x23
000000000002ec84	sub	x8, x8, #0x1
000000000002ec88	neg	x9, x21
000000000002ec8c	and	x20, x8, x9
000000000002ec90	ldr	x8, [x28, #0x4a0]
000000000002ec94	add	x9, x22, x8
000000000002ec98	sub	x9, x9, #0x1
000000000002ec9c	sub	x10, x8, #0x1
000000000002eca0	udiv	x11, x9, x8
000000000002eca4	mul	x11, x11, x8
000000000002eca8	neg	x12, x8
000000000002ecac	and	x9, x9, x12
000000000002ecb0	tst	x8, x10
000000000002ecb4	csel	x24, x11, x9, ne
000000000002ecb8	sub	x22, x20, x23
000000000002ecbc	sub	x8, x25, x22
000000000002ecc0	sub	x21, x8, x24
000000000002ecc4	adrp	x25, 84 ; 0x82000
000000000002ecc8	cbz	x22, 0x2ee34
000000000002eccc	mov	x0, x23
000000000002ecd0	mov	x1, x22
000000000002ecd4	bl	0x4dc34 ; symbol stub for: _munmap
000000000002ecd8	neg	x8, x22
000000000002ecdc	cbz	w19, 0x2ed80
000000000002ece0	adr	x9, #0x541d8
000000000002ece4	nop
000000000002ece8	ldxr	x10, [x9]
000000000002ecec	add	x11, x10, x8
000000000002ecf0	stxr	w12, x11, [x9]
000000000002ecf4	cbnz	w12, 0x2ece8
000000000002ecf8	sub	x9, x10, x22
000000000002ecfc	nop
000000000002ed00	ldr	x12, #0x541b0
000000000002ed04	adr	x10, #0x541ac
000000000002ed08	nop
000000000002ed0c	b	0x2ed20
000000000002ed10	clrex
000000000002ed14	mov	w13, #0x0
000000000002ed18	mov	x12, x11
000000000002ed1c	cbnz	w13, 0x2ed48
000000000002ed20	cmp	x12, x9
000000000002ed24	b.ge	0x2ed48
000000000002ed28	ldxr	x11, [x10]
000000000002ed2c	cmp	x11, x12
000000000002ed30	b.ne	0x2ed10
000000000002ed34	stlxr	w12, x9, [x10]
000000000002ed38	cbnz	w12, 0x2ed14
000000000002ed3c	mov	w13, #0x1
000000000002ed40	mov	x12, x11
000000000002ed44	cbz	w13, 0x2ed20
000000000002ed48	tbnz	x22, #0x3f, 0x2ed68
000000000002ed4c	adr	x9, #0x5415c
000000000002ed50	nop
000000000002ed54	ldxr	x10, [x9]
000000000002ed58	add	x10, x10, x22
000000000002ed5c	stxr	w11, x10, [x9]
000000000002ed60	cbnz	w11, 0x2ed54
000000000002ed64	b	0x2ed80
000000000002ed68	adr	x9, #0x54138
000000000002ed6c	nop
000000000002ed70	ldxr	x10, [x9]
000000000002ed74	add	x10, x10, x8
000000000002ed78	stxr	w11, x10, [x9]
000000000002ed7c	cbnz	w11, 0x2ed70
000000000002ed80	ldxr	x9, [x27]
000000000002ed84	add	x10, x9, x8
000000000002ed88	stxr	w11, x10, [x27]
000000000002ed8c	cbnz	w11, 0x2ed80
000000000002ed90	sub	x9, x9, x22
000000000002ed94	ldr	x11, [x25, #0xe90]
000000000002ed98	b	0x2edac
000000000002ed9c	clrex
000000000002eda0	mov	w12, #0x0
000000000002eda4	mov	x11, x10
000000000002eda8	cbnz	w12, 0x2edd4
000000000002edac	cmp	x11, x9
000000000002edb0	b.ge	0x2edd4
000000000002edb4	ldxr	x10, [x26]
000000000002edb8	cmp	x10, x11
000000000002edbc	b.ne	0x2ed9c
000000000002edc0	stlxr	w11, x9, [x26]
000000000002edc4	cbnz	w11, 0x2eda0
000000000002edc8	mov	w12, #0x1
000000000002edcc	mov	x11, x10
000000000002edd0	cbz	w12, 0x2edac
000000000002edd4	tbnz	x22, #0x3f, 0x2edf4
000000000002edd8	adr	x8, #0x540b0
000000000002eddc	nop
000000000002ede0	ldxr	x9, [x8]
000000000002ede4	add	x9, x9, x22
000000000002ede8	stxr	w10, x9, [x8]
000000000002edec	cbnz	w10, 0x2ede0
000000000002edf0	b	0x2ee0c
000000000002edf4	adr	x9, #0x5408c
000000000002edf8	nop
000000000002edfc	ldxr	x10, [x9]
000000000002ee00	add	x10, x10, x8
000000000002ee04	stxr	w11, x10, [x9]
000000000002ee08	cbnz	w11, 0x2edfc
000000000002ee0c	cmn	w0, #0x1
000000000002ee10	b.ne	0x2ee34
000000000002ee14	bl	0x4dac0 ; symbol stub for: ___error
000000000002ee18	ldr	w0, [x0]
000000000002ee1c	bl	0x4de68 ; symbol stub for: _strerror
000000000002ee20	stp	x23, x22, [sp, #0x8]
000000000002ee24	str	x0, [sp]
000000000002ee28	adr	x0, #0x23386 ; literal pool for: "munmap failed: %s, addr 0x%8li, size %lu\n"
000000000002ee2c	nop
000000000002ee30	bl	__mi_warning_message
000000000002ee34	cbz	x21, 0x2e698
000000000002ee38	cbz	x20, 0x2e698
000000000002ee3c	add	x22, x20, x24
000000000002ee40	mov	x0, x22
000000000002ee44	mov	x1, x21
000000000002ee48	bl	0x4dc34 ; symbol stub for: _munmap
000000000002ee4c	neg	x8, x21
000000000002ee50	cbz	w19, 0x2eef4
000000000002ee54	adr	x9, #0x54064
000000000002ee58	nop
000000000002ee5c	ldxr	x10, [x9]
000000000002ee60	add	x11, x10, x8
000000000002ee64	stxr	w12, x11, [x9]
000000000002ee68	cbnz	w12, 0x2ee5c
000000000002ee6c	sub	x9, x10, x21
000000000002ee70	nop
000000000002ee74	ldr	x12, #0x5403c
000000000002ee78	adr	x10, #0x54038
000000000002ee7c	nop
000000000002ee80	b	0x2ee94
000000000002ee84	clrex
000000000002ee88	mov	w13, #0x0
000000000002ee8c	mov	x12, x11
000000000002ee90	cbnz	w13, 0x2eebc
000000000002ee94	cmp	x12, x9
000000000002ee98	b.ge	0x2eebc
000000000002ee9c	ldxr	x11, [x10]
000000000002eea0	cmp	x11, x12
000000000002eea4	b.ne	0x2ee84
000000000002eea8	stlxr	w12, x9, [x10]
000000000002eeac	cbnz	w12, 0x2ee88
000000000002eeb0	mov	w13, #0x1
000000000002eeb4	mov	x12, x11
000000000002eeb8	cbz	w13, 0x2ee94
000000000002eebc	tbnz	x21, #0x3f, 0x2eedc
000000000002eec0	adr	x9, #0x53fe8
000000000002eec4	nop
000000000002eec8	ldxr	x10, [x9]
000000000002eecc	add	x10, x10, x21
000000000002eed0	stxr	w11, x10, [x9]
000000000002eed4	cbnz	w11, 0x2eec8
000000000002eed8	b	0x2eef4
000000000002eedc	adr	x9, #0x53fc4
000000000002eee0	nop
000000000002eee4	ldxr	x10, [x9]
000000000002eee8	add	x10, x10, x8
000000000002eeec	stxr	w11, x10, [x9]
000000000002eef0	cbnz	w11, 0x2eee4
000000000002eef4	ldxr	x9, [x27]
000000000002eef8	add	x10, x9, x8
000000000002eefc	stxr	w11, x10, [x27]
000000000002ef00	cbnz	w11, 0x2eef4
000000000002ef04	sub	x9, x9, x21
000000000002ef08	ldr	x11, [x25, #0xe90]
000000000002ef0c	b	0x2ef20
000000000002ef10	clrex
000000000002ef14	mov	w12, #0x0
000000000002ef18	mov	x11, x10
000000000002ef1c	cbnz	w12, 0x2ef48
000000000002ef20	cmp	x11, x9
000000000002ef24	b.ge	0x2ef48
000000000002ef28	ldxr	x10, [x26]
000000000002ef2c	cmp	x10, x11
000000000002ef30	b.ne	0x2ef10
000000000002ef34	stlxr	w11, x9, [x26]
000000000002ef38	cbnz	w11, 0x2ef14
000000000002ef3c	mov	w12, #0x1
000000000002ef40	mov	x11, x10
000000000002ef44	cbz	w12, 0x2ef20
000000000002ef48	tbnz	x21, #0x3f, 0x2ef68
000000000002ef4c	adr	x8, #0x53f3c
000000000002ef50	nop
000000000002ef54	ldxr	x9, [x8]
000000000002ef58	add	x9, x9, x21
000000000002ef5c	stxr	w10, x9, [x8]
000000000002ef60	cbnz	w10, 0x2ef54
000000000002ef64	b	0x2ef80
000000000002ef68	adr	x9, #0x53f18
000000000002ef6c	nop
000000000002ef70	ldxr	x10, [x9]
000000000002ef74	add	x10, x10, x8
000000000002ef78	stxr	w11, x10, [x9]
000000000002ef7c	cbnz	w11, 0x2ef70
000000000002ef80	cmn	w0, #0x1
000000000002ef84	b.ne	0x2e698
000000000002ef88	bl	0x4dac0 ; symbol stub for: ___error
000000000002ef8c	ldr	w0, [x0]
000000000002ef90	bl	0x4de68 ; symbol stub for: _strerror
000000000002ef94	stp	x22, x21, [sp, #0x8]
000000000002ef98	str	x0, [sp]
000000000002ef9c	adr	x0, #0x23212 ; literal pool for: "munmap failed: %s, addr 0x%8li, size %lu\n"
000000000002efa0	nop
000000000002efa4	b	0x2e870
__mi_os_alloc:
000000000002efa8	sub	sp, sp, #0x50
000000000002efac	stp	x20, x19, [sp, #0x30]
000000000002efb0	stp	x29, x30, [sp, #0x40]
000000000002efb4	add	x29, sp, #0x40
000000000002efb8	mov	x19, x0
000000000002efbc	lsr	x8, x0, #19
000000000002efc0	cbnz	x8, 0x2efd0
000000000002efc4	nop
000000000002efc8	ldr	x8, #0x394d8
000000000002efcc	b	0x2f000
000000000002efd0	cmp	x19, #0x200, lsl #12
000000000002efd4	b.hs	0x2efe0
000000000002efd8	mov	w8, #0x10000
000000000002efdc	b	0x2f000
000000000002efe0	mov	w8, #0x40000
000000000002efe4	lsr	x9, x19, #25
000000000002efe8	cmp	x9, #0x0
000000000002efec	mov	w9, #0x400000
000000000002eff0	mov	w10, #0x100000
000000000002eff4	csel	x9, x10, x9, eq
000000000002eff8	cmp	x19, #0x800, lsl #12
000000000002effc	csel	x8, x8, x9, lo
000000000002f000	mvn	x9, x8
000000000002f004	cmp	x9, x19
000000000002f008	b.ls	0x2f02c
000000000002f00c	add	x9, x19, x8
000000000002f010	sub	x9, x9, #0x1
000000000002f014	sub	x10, x8, #0x1
000000000002f018	tst	x8, x10
000000000002f01c	b.ne	0x2f114
000000000002f020	neg	x8, x8
000000000002f024	and	x19, x9, x8
000000000002f028	cbz	x19, 0x2f120
000000000002f02c	mov	w0, #0x11
000000000002f030	bl	_mi_option_get
000000000002f034	sub	w8, w0, #0x64
000000000002f038	lsl	w9, w0, #24
000000000002f03c	cmp	w8, #0x9b
000000000002f040	mov	w8, #0x64000000
000000000002f044	csel	w20, w8, w9, hi
000000000002f048	adrp	x8, 83 ; 0x82000
000000000002f04c	ldrb	w8, [x8, #0x848]
000000000002f050	cmp	w8, #0x1
000000000002f054	b.ne	0x2f060
000000000002f058	mov	w0, #0x6
000000000002f05c	bl	_mi_option_get
000000000002f060	mov	x0, #0x0
000000000002f064	mov	x1, x19
000000000002f068	mov	w2, #0x3
000000000002f06c	mov	w3, #0x1042
000000000002f070	mov	x4, x20
000000000002f074	mov	x5, #0x0
000000000002f078	bl	0x4dc1c ; symbol stub for: _mmap
000000000002f07c	cmn	x0, #0x1
000000000002f080	csel	x0, xzr, x0, eq
000000000002f084	cbz	x0, 0x2f134
000000000002f088	cbz	x19, 0x2f124
000000000002f08c	adr	x9, #0x53e0c
000000000002f090	nop
000000000002f094	ldxr	x8, [x9]
000000000002f098	add	x8, x8, x19
000000000002f09c	stxr	w10, x8, [x9]
000000000002f0a0	cbnz	w10, 0x2f094
000000000002f0a4	nop
000000000002f0a8	ldr	x11, #0x53de8
000000000002f0ac	adr	x9, #0x53de4
000000000002f0b0	nop
000000000002f0b4	b	0x2f0c8
000000000002f0b8	clrex
000000000002f0bc	mov	w12, #0x0
000000000002f0c0	mov	x11, x10
000000000002f0c4	cbnz	w12, 0x2f0f0
000000000002f0c8	cmp	x11, x8
000000000002f0cc	b.ge	0x2f0f0
000000000002f0d0	ldxr	x10, [x9]
000000000002f0d4	cmp	x10, x11
000000000002f0d8	b.ne	0x2f0b8
000000000002f0dc	stlxr	w11, x8, [x9]
000000000002f0e0	cbnz	w11, 0x2f0bc
000000000002f0e4	mov	w12, #0x1
000000000002f0e8	mov	x11, x10
000000000002f0ec	cbz	w12, 0x2f0c8
000000000002f0f0	cmp	x19, #0x1
000000000002f0f4	b.lt	0x2f168
000000000002f0f8	adr	x8, #0x53d88
000000000002f0fc	nop
000000000002f100	ldxr	x9, [x8]
000000000002f104	add	x9, x9, x19
000000000002f108	stxr	w10, x9, [x8]
000000000002f10c	cbnz	w10, 0x2f100
000000000002f110	b	0x2f184
000000000002f114	udiv	x9, x9, x8
000000000002f118	mul	x19, x9, x8
000000000002f11c	cbnz	x19, 0x2f02c
000000000002f120	mov	x0, #0x0
000000000002f124	ldp	x29, x30, [sp, #0x40]
000000000002f128	ldp	x20, x19, [sp, #0x30]
000000000002f12c	add	sp, sp, #0x50
000000000002f130	ret
000000000002f134	bl	0x4dac0 ; symbol stub for: ___error
000000000002f138	ldr	w8, [x0]
000000000002f13c	stp	xzr, xzr, [sp, #0x10]
000000000002f140	str	xzr, [sp, #0x20]
000000000002f144	stp	x19, x8, [sp]
000000000002f148	adr	x0, #0x230a4 ; literal pool for: "unable to allocate OS memory (%zu bytes, error code: %i, address: %p, large only: %d, allow large: %d)\n"
000000000002f14c	nop
000000000002f150	bl	__mi_warning_message
000000000002f154	mov	x0, #0x0
000000000002f158	ldp	x29, x30, [sp, #0x40]
000000000002f15c	ldp	x20, x19, [sp, #0x30]
000000000002f160	add	sp, sp, #0x50
000000000002f164	ret
000000000002f168	neg	x8, x19
000000000002f16c	adr	x9, #0x53d1c
000000000002f170	nop
000000000002f174	ldxr	x10, [x9]
000000000002f178	add	x10, x10, x8
000000000002f17c	stxr	w11, x10, [x9]
000000000002f180	cbnz	w11, 0x2f174
000000000002f184	adr	x9, #0x53d34
000000000002f188	nop
000000000002f18c	ldxr	x8, [x9]
000000000002f190	add	x8, x8, x19
000000000002f194	stxr	w10, x8, [x9]
000000000002f198	cbnz	w10, 0x2f18c
000000000002f19c	nop
000000000002f1a0	ldr	x11, #0x53d10
000000000002f1a4	adr	x9, #0x53d0c
000000000002f1a8	nop
000000000002f1ac	b	0x2f1c0
000000000002f1b0	clrex
000000000002f1b4	mov	w12, #0x0
000000000002f1b8	mov	x11, x10
000000000002f1bc	cbnz	w12, 0x2f1e8
000000000002f1c0	cmp	x11, x8
000000000002f1c4	b.ge	0x2f1e8
000000000002f1c8	ldxr	x10, [x9]
000000000002f1cc	cmp	x10, x11
000000000002f1d0	b.ne	0x2f1b0
000000000002f1d4	stlxr	w11, x8, [x9]
000000000002f1d8	cbnz	w11, 0x2f1b4
000000000002f1dc	mov	w12, #0x1
000000000002f1e0	mov	x11, x10
000000000002f1e4	cbz	w12, 0x2f1c0
000000000002f1e8	cmp	x19, #0x1
000000000002f1ec	b.lt	0x2f20c
000000000002f1f0	adr	x8, #0x53cb0
000000000002f1f4	nop
000000000002f1f8	ldxr	x9, [x8]
000000000002f1fc	add	x9, x9, x19
000000000002f200	stxr	w10, x9, [x8]
000000000002f204	cbnz	w10, 0x2f1f8
000000000002f208	b	0x2f124
000000000002f20c	neg	x8, x19
000000000002f210	adr	x9, #0x53c98
000000000002f214	nop
000000000002f218	ldxr	x10, [x9]
000000000002f21c	add	x10, x10, x8
000000000002f220	stxr	w11, x10, [x9]
000000000002f224	cbnz	w11, 0x2f218
000000000002f228	b	0x2f124
__mi_os_free_ex:
000000000002f22c	sub	sp, sp, #0x50
000000000002f230	stp	x22, x21, [sp, #0x20]
000000000002f234	stp	x20, x19, [sp, #0x30]
000000000002f238	stp	x29, x30, [sp, #0x40]
000000000002f23c	add	x29, sp, #0x40
000000000002f240	cbz	x0, 0x2f2c4
000000000002f244	mov	x20, x1
000000000002f248	cbz	x1, 0x2f2c4
000000000002f24c	mov	x21, x2
000000000002f250	mov	x19, x0
000000000002f254	lsr	x8, x20, #19
000000000002f258	cbnz	x8, 0x2f268
000000000002f25c	nop
000000000002f260	ldr	x8, #0x39240
000000000002f264	b	0x2f298
000000000002f268	cmp	x20, #0x200, lsl #12
000000000002f26c	b.hs	0x2f278
000000000002f270	mov	w8, #0x10000
000000000002f274	b	0x2f298
000000000002f278	mov	w8, #0x40000
000000000002f27c	lsr	x9, x20, #25
000000000002f280	cmp	x9, #0x0
000000000002f284	mov	w9, #0x400000
000000000002f288	mov	w10, #0x100000
000000000002f28c	csel	x9, x10, x9, eq
000000000002f290	cmp	x20, #0x800, lsl #12
000000000002f294	csel	x8, x8, x9, lo
000000000002f298	mvn	x9, x8
000000000002f29c	cmp	x9, x20
000000000002f2a0	b.ls	0x2f2e4
000000000002f2a4	add	x9, x20, x8
000000000002f2a8	sub	x9, x9, #0x1
000000000002f2ac	sub	x10, x8, #0x1
000000000002f2b0	tst	x8, x10
000000000002f2b4	b.ne	0x2f2d8
000000000002f2b8	neg	x8, x8
000000000002f2bc	and	x20, x9, x8
000000000002f2c0	cbnz	x20, 0x2f2e4
000000000002f2c4	ldp	x29, x30, [sp, #0x40]
000000000002f2c8	ldp	x20, x19, [sp, #0x30]
000000000002f2cc	ldp	x22, x21, [sp, #0x20]
000000000002f2d0	add	sp, sp, #0x50
000000000002f2d4	ret
000000000002f2d8	udiv	x9, x9, x8
000000000002f2dc	mul	x20, x9, x8
000000000002f2e0	cbz	x20, 0x2f2c4
000000000002f2e4	mov	x0, x19
000000000002f2e8	mov	x1, x20
000000000002f2ec	bl	0x4dc34 ; symbol stub for: _munmap
000000000002f2f0	neg	x8, x20
000000000002f2f4	cbz	w21, 0x2f39c
000000000002f2f8	adr	x9, #0x53bc0
000000000002f2fc	nop
000000000002f300	ldxr	x10, [x9]
000000000002f304	add	x11, x10, x8
000000000002f308	stxr	w12, x11, [x9]
000000000002f30c	cbnz	w12, 0x2f300
000000000002f310	sub	x9, x10, x20
000000000002f314	nop
000000000002f318	ldr	x12, #0x53b98
000000000002f31c	adr	x10, #0x53b94
000000000002f320	nop
000000000002f324	b	0x2f338
000000000002f328	clrex
000000000002f32c	mov	w13, #0x0
000000000002f330	mov	x12, x11
000000000002f334	cbnz	w13, 0x2f360
000000000002f338	cmp	x12, x9
000000000002f33c	b.ge	0x2f360
000000000002f340	ldxr	x11, [x10]
000000000002f344	cmp	x11, x12
000000000002f348	b.ne	0x2f328
000000000002f34c	stlxr	w12, x9, [x10]
000000000002f350	cbnz	w12, 0x2f32c
000000000002f354	mov	w13, #0x1
000000000002f358	mov	x12, x11
000000000002f35c	cbz	w13, 0x2f338
000000000002f360	tbnz	x20, #0x3f, 0x2f384
000000000002f364	adr	x9, #0x53b44
000000000002f368	nop
000000000002f36c	ldxr	x10, [x9]
000000000002f370	add	x10, x10, x20
000000000002f374	stxr	w11, x10, [x9]
000000000002f378	cbnz	w11, 0x2f36c
000000000002f37c	cbnz	x20, 0x2f39c
000000000002f380	b	0x2f43c
000000000002f384	adr	x9, #0x53b1c
000000000002f388	nop
000000000002f38c	ldxr	x10, [x9]
000000000002f390	add	x10, x10, x8
000000000002f394	stxr	w11, x10, [x9]
000000000002f398	cbnz	w11, 0x2f38c
000000000002f39c	adr	x9, #0x53afc
000000000002f3a0	nop
000000000002f3a4	ldxr	x10, [x9]
000000000002f3a8	add	x11, x10, x8
000000000002f3ac	stxr	w12, x11, [x9]
000000000002f3b0	cbnz	w12, 0x2f3a4
000000000002f3b4	sub	x9, x10, x20
000000000002f3b8	nop
000000000002f3bc	ldr	x12, #0x53ad4
000000000002f3c0	adr	x10, #0x53ad0
000000000002f3c4	nop
000000000002f3c8	b	0x2f3dc
000000000002f3cc	clrex
000000000002f3d0	mov	w13, #0x0
000000000002f3d4	mov	x12, x11
000000000002f3d8	cbnz	w13, 0x2f404
000000000002f3dc	cmp	x12, x9
000000000002f3e0	b.ge	0x2f404
000000000002f3e4	ldxr	x11, [x10]
000000000002f3e8	cmp	x11, x12
000000000002f3ec	b.ne	0x2f3cc
000000000002f3f0	stlxr	w12, x9, [x10]
000000000002f3f4	cbnz	w12, 0x2f3d0
000000000002f3f8	mov	w13, #0x1
000000000002f3fc	mov	x12, x11
000000000002f400	cbz	w13, 0x2f3dc
000000000002f404	tbnz	x20, #0x3f, 0x2f424
000000000002f408	adr	x8, #0x53a80
000000000002f40c	nop
000000000002f410	ldxr	x9, [x8]
000000000002f414	add	x9, x9, x20
000000000002f418	stxr	w10, x9, [x8]
000000000002f41c	cbnz	w10, 0x2f410
000000000002f420	b	0x2f43c
000000000002f424	adr	x9, #0x53a5c
000000000002f428	nop
000000000002f42c	ldxr	x10, [x9]
000000000002f430	add	x10, x10, x8
000000000002f434	stxr	w11, x10, [x9]
000000000002f438	cbnz	w11, 0x2f42c
000000000002f43c	cmn	w0, #0x1
000000000002f440	b.ne	0x2f2c4
000000000002f444	bl	0x4dac0 ; symbol stub for: ___error
000000000002f448	ldr	w0, [x0]
000000000002f44c	bl	0x4de68 ; symbol stub for: _strerror
000000000002f450	stp	x19, x20, [sp, #0x8]
000000000002f454	str	x0, [sp]
000000000002f458	adr	x0, #0x22d56 ; literal pool for: "munmap failed: %s, addr 0x%8li, size %lu\n"
000000000002f45c	nop
000000000002f460	bl	__mi_warning_message
000000000002f464	ldp	x29, x30, [sp, #0x40]
000000000002f468	ldp	x20, x19, [sp, #0x30]
000000000002f46c	ldp	x22, x21, [sp, #0x20]
000000000002f470	add	sp, sp, #0x50
000000000002f474	ret
__mi_stat_decrease:
000000000002f478	cbz	x1, 0x2f514
000000000002f47c	adr	x8, #0x539c4
000000000002f480	nop
000000000002f484	cmp	x0, x8
000000000002f488	b.lo	0x2f52c
000000000002f48c	adr	x8, #0x53bf4
000000000002f490	nop
000000000002f494	cmp	x0, x8
000000000002f498	b.hs	0x2f52c
000000000002f49c	neg	x8, x1
000000000002f4a0	add	x9, x0, #0x18
000000000002f4a4	ldxr	x10, [x9]
000000000002f4a8	add	x11, x10, x8
000000000002f4ac	stxr	w12, x11, [x9]
000000000002f4b0	cbnz	w12, 0x2f4a4
000000000002f4b4	add	x9, x0, #0x10
000000000002f4b8	sub	x10, x10, x1
000000000002f4bc	ldr	x12, [x0, #0x10]
000000000002f4c0	b	0x2f4d4
000000000002f4c4	clrex
000000000002f4c8	mov	w13, #0x0
000000000002f4cc	mov	x12, x11
000000000002f4d0	cbnz	w13, 0x2f4fc
000000000002f4d4	cmp	x12, x10
000000000002f4d8	b.ge	0x2f4fc
000000000002f4dc	ldxr	x11, [x9]
000000000002f4e0	cmp	x11, x12
000000000002f4e4	b.ne	0x2f4c4
000000000002f4e8	stlxr	w12, x10, [x9]
000000000002f4ec	cbnz	w12, 0x2f4c8
000000000002f4f0	mov	w13, #0x1
000000000002f4f4	mov	x12, x11
000000000002f4f8	cbz	w13, 0x2f4d4
000000000002f4fc	tbnz	x1, #0x3f, 0x2f518
000000000002f500	add	x8, x0, #0x8
000000000002f504	ldxr	x9, [x8]
000000000002f508	add	x9, x9, x1
000000000002f50c	stxr	w10, x9, [x8]
000000000002f510	cbnz	w10, 0x2f504
000000000002f514	ret
000000000002f518	ldxr	x9, [x0]
000000000002f51c	add	x9, x9, x8
000000000002f520	stxr	w10, x9, [x0]
000000000002f524	cbnz	w10, 0x2f518
000000000002f528	b	0x2f514
000000000002f52c	ldp	x9, x8, [x0, #0x10]
000000000002f530	sub	x8, x8, x1
000000000002f534	str	x8, [x0, #0x18]
000000000002f538	cmp	x8, x9
000000000002f53c	b.le	0x2f544
000000000002f540	str	x8, [x0, #0x10]
000000000002f544	tbnz	x1, #0x3f, 0x2f558
000000000002f548	ldr	x8, [x0, #0x8]
000000000002f54c	add	x8, x8, x1
000000000002f550	str	x8, [x0, #0x8]
000000000002f554	ret
000000000002f558	ldr	x8, [x0]
000000000002f55c	sub	x8, x8, x1
000000000002f560	str	x8, [x0]
000000000002f564	ret
__mi_warning_message:
000000000002f568	stp	x28, x27, [sp, #-0x40]!
000000000002f56c	stp	x22, x21, [sp, #0x10]
000000000002f570	stp	x20, x19, [sp, #0x20]
000000000002f574	stp	x29, x30, [sp, #0x30]
000000000002f578	add	x29, sp, #0x30
000000000002f57c	sub	sp, sp, #0x210
000000000002f580	mov	x19, x0
000000000002f584	mov	w0, #0x0
000000000002f588	bl	_mi_option_get
000000000002f58c	cbnz	x0, 0x2f59c
000000000002f590	mov	w0, #0x2
000000000002f594	bl	_mi_option_get
000000000002f598	cbz	x0, 0x2f69c
000000000002f59c	adr	x9, #0x5336c
000000000002f5a0	nop
000000000002f5a4	ldaxr	x8, [x9]
000000000002f5a8	add	x10, x8, #0x1
000000000002f5ac	stlxr	w11, x10, [x9]
000000000002f5b0	cbnz	w11, 0x2f5a4
000000000002f5b4	nop
000000000002f5b8	ldr	x9, #0x38ef0
000000000002f5bc	cmp	x8, x9
000000000002f5c0	b.hi	0x2f69c
000000000002f5c4	add	x8, x29, #0x10
000000000002f5c8	str	x8, [sp, #0x8]
000000000002f5cc	cbz	x19, 0x2f69c
000000000002f5d0	adrp	x21, 83 ; 0x82000
000000000002f5d4	ldrb	w8, [x21, #0x846]
000000000002f5d8	adrp	x20, 57 ; 0x68000
000000000002f5dc	add	x20, x20, #0xa30
000000000002f5e0	cmp	w8, #0x1
000000000002f5e4	b.ne	0x2f60c
000000000002f5e8	ldr	x8, [x20]
000000000002f5ec	mov	x0, x20
000000000002f5f0	blr	x8
000000000002f5f4	ldrb	w9, [x0]
000000000002f5f8	tbnz	w9, #0x0, 0x2f69c
000000000002f5fc	mov	x0, x20
000000000002f600	blr	x8
000000000002f604	mov	w8, #0x1
000000000002f608	strb	w8, [x0]
000000000002f60c	add	x0, sp, #0x10
000000000002f610	add	x3, x29, #0x10
000000000002f614	mov	w1, #0x1ff
000000000002f618	mov	x2, x19
000000000002f61c	bl	0x4ded4 ; symbol stub for: _vsnprintf
000000000002f620	ldrb	w8, [x21, #0x846]
000000000002f624	cmp	w8, #0x1
000000000002f628	b.ne	0x2f640
000000000002f62c	ldr	x8, [x20]
000000000002f630	mov	x0, x20
000000000002f634	blr	x8
000000000002f638	mov	w8, #0x1
000000000002f63c	strb	w8, [x0]
000000000002f640	adr	x21, #0x53206
000000000002f644	nop
000000000002f648	add	x8, x21, #0xca
000000000002f64c	ldar	x19, [x8]
000000000002f650	ldur	x8, [x21, #0xd2]
000000000002f654	adr	x9, #0x60
000000000002f658	nop
000000000002f65c	cmp	x8, #0x0
000000000002f660	csel	x22, x9, x8, eq
000000000002f664	adr	x0, #0x22b74 ; literal pool for: "mimalloc: warning: "
000000000002f668	nop
000000000002f66c	mov	x1, x19
000000000002f670	blr	x22
000000000002f674	add	x0, sp, #0x10
000000000002f678	mov	x1, x19
000000000002f67c	blr	x22
000000000002f680	ldrb	w8, [x21]
000000000002f684	cmp	w8, #0x1
000000000002f688	b.ne	0x2f69c
000000000002f68c	ldr	x8, [x20]
000000000002f690	mov	x0, x20
000000000002f694	blr	x8
000000000002f698	strb	wzr, [x0]
000000000002f69c	add	sp, sp, #0x210
000000000002f6a0	ldp	x29, x30, [sp, #0x30]
000000000002f6a4	ldp	x20, x19, [sp, #0x20]
000000000002f6a8	ldp	x22, x21, [sp, #0x10]
000000000002f6ac	ldp	x28, x27, [sp], #0x40
000000000002f6b0	ret
_mi_out_buf:
000000000002f6b4	stp	x20, x19, [sp, #-0x20]!
000000000002f6b8	stp	x29, x30, [sp, #0x10]
000000000002f6bc	add	x29, sp, #0x10
000000000002f6c0	cbz	x0, 0x2f700
000000000002f6c4	nop
000000000002f6c8	ldr	x8, #0x53258
000000000002f6cc	lsr	x8, x8, #15
000000000002f6d0	cbnz	x8, 0x2f700
000000000002f6d4	mov	x19, x0
000000000002f6d8	bl	0x4de74 ; symbol stub for: _strlen
000000000002f6dc	cbz	x0, 0x2f700
000000000002f6e0	adr	x9, #0x53240
000000000002f6e4	nop
000000000002f6e8	ldaxr	x8, [x9]
000000000002f6ec	add	x10, x8, x0
000000000002f6f0	stlxr	w11, x10, [x9]
000000000002f6f4	cbnz	w11, 0x2f6e8
000000000002f6f8	lsr	x9, x8, #15
000000000002f6fc	cbz	x9, 0x2f70c
000000000002f700	ldp	x29, x30, [sp, #0x10]
000000000002f704	ldp	x20, x19, [sp], #0x20
000000000002f708	ret
000000000002f70c	add	x9, x8, x0
000000000002f710	mov	w10, #0x7fff
000000000002f714	sub	x10, x10, x8
000000000002f718	lsr	x9, x9, #15
000000000002f71c	cmp	x9, #0x0
000000000002f720	csel	x2, x10, x0, ne
000000000002f724	adr	x9, #0x3b0a4
000000000002f728	nop
000000000002f72c	add	x0, x9, x8
000000000002f730	mov	x1, x19
000000000002f734	ldp	x29, x30, [sp, #0x10]
000000000002f738	ldp	x20, x19, [sp], #0x20
000000000002f73c	b	0x4dbec ; symbol stub for: _memcpy
__mi_stat_increase:
000000000002f740	cbz	x1, 0x2f7d4
000000000002f744	adr	x8, #0x536fc
000000000002f748	nop
000000000002f74c	cmp	x0, x8
000000000002f750	b.lo	0x2f7d8
000000000002f754	adr	x8, #0x5392c
000000000002f758	nop
000000000002f75c	cmp	x0, x8
000000000002f760	b.hs	0x2f7d8
000000000002f764	add	x9, x0, #0x18
000000000002f768	ldxr	x8, [x9]
000000000002f76c	add	x8, x8, x1
000000000002f770	stxr	w10, x8, [x9]
000000000002f774	cbnz	w10, 0x2f768
000000000002f778	add	x9, x0, #0x10
000000000002f77c	ldr	x11, [x0, #0x10]
000000000002f780	b	0x2f794
000000000002f784	clrex
000000000002f788	mov	w12, #0x0
000000000002f78c	mov	x11, x10
000000000002f790	cbnz	w12, 0x2f7bc
000000000002f794	cmp	x11, x8
000000000002f798	b.ge	0x2f7bc
000000000002f79c	ldxr	x10, [x9]
000000000002f7a0	cmp	x10, x11
000000000002f7a4	b.ne	0x2f784
000000000002f7a8	stlxr	w11, x8, [x9]
000000000002f7ac	cbnz	w11, 0x2f788
000000000002f7b0	mov	w12, #0x1
000000000002f7b4	mov	x11, x10
000000000002f7b8	cbz	w12, 0x2f794
000000000002f7bc	cmp	x1, #0x1
000000000002f7c0	b.lt	0x2f808
000000000002f7c4	ldxr	x8, [x0]
000000000002f7c8	add	x8, x8, x1
000000000002f7cc	stxr	w9, x8, [x0]
000000000002f7d0	cbnz	w9, 0x2f7c4
000000000002f7d4	ret
000000000002f7d8	ldp	x9, x8, [x0, #0x10]
000000000002f7dc	add	x8, x8, x1
000000000002f7e0	str	x8, [x0, #0x18]
000000000002f7e4	cmp	x8, x9
000000000002f7e8	b.le	0x2f7f0
000000000002f7ec	str	x8, [x0, #0x10]
000000000002f7f0	cmp	x1, #0x1
000000000002f7f4	b.lt	0x2f824
000000000002f7f8	ldr	x8, [x0]
000000000002f7fc	add	x8, x8, x1
000000000002f800	str	x8, [x0]
000000000002f804	ret
000000000002f808	add	x8, x0, #0x8
000000000002f80c	neg	x9, x1
000000000002f810	ldxr	x10, [x8]
000000000002f814	add	x10, x10, x9
000000000002f818	stxr	w11, x10, [x8]
000000000002f81c	cbnz	w11, 0x2f810
000000000002f820	b	0x2f7d4
000000000002f824	ldr	x8, [x0, #0x8]
000000000002f828	sub	x8, x8, x1
000000000002f82c	str	x8, [x0, #0x8]
000000000002f830	ret
_mi_unix_mmapx:
000000000002f834	stp	x26, x25, [sp, #-0x50]!
000000000002f838	stp	x24, x23, [sp, #0x10]
000000000002f83c	stp	x22, x21, [sp, #0x20]
000000000002f840	stp	x20, x19, [sp, #0x30]
000000000002f844	stp	x29, x30, [sp, #0x40]
000000000002f848	add	x29, sp, #0x40
000000000002f84c	mov	x19, x4
000000000002f850	mov	x20, x3
000000000002f854	mov	x21, x2
000000000002f858	mov	x22, x0
000000000002f85c	sub	x8, x1, #0x1
000000000002f860	and	x9, x0, #0x3fffff
000000000002f864	mov	w10, #0x40000000
000000000002f868	cmp	x0, x10
000000000002f86c	ccmp	x9, #0x0, #0x0, ls
000000000002f870	lsr	x8, x8, #22
000000000002f874	ccmp	x8, #0x0, #0x0, eq
000000000002f878	b.ne	0x2f938
000000000002f87c	mov	x23, x1
000000000002f880	adr	x25, #0x42f80
000000000002f884	nop
000000000002f888	ldaxr	x24, [x25]
000000000002f88c	add	x8, x24, x22
000000000002f890	stlxr	w9, x8, [x25]
000000000002f894	cbnz	w9, 0x2f888
000000000002f898	sub	x8, x24, #0x1
000000000002f89c	lsr	x8, x8, #41
000000000002f8a0	cmp	x8, #0xf
000000000002f8a4	b.lo	0x2f900
000000000002f8a8	adrp	x0, 57 ; 0x68000
000000000002f8ac	add	x0, x0, #0xa18
000000000002f8b0	ldr	x8, [x0]
000000000002f8b4	blr	x8
000000000002f8b8	ldr	x0, [x0]
000000000002f8bc	bl	__mi_heap_random_next
000000000002f8c0	lsl	x8, x0, #5
000000000002f8c4	and	x8, x8, #0x3ffffc00000
000000000002f8c8	mov	x9, #0x20000000000
000000000002f8cc	add	x8, x8, x9
000000000002f8d0	add	x9, x24, x22
000000000002f8d4	ldaxr	x10, [x25]
000000000002f8d8	cmp	x10, x9
000000000002f8dc	b.ne	0x2f8ec
000000000002f8e0	stlxr	w10, x8, [x25]
000000000002f8e4	cbnz	w10, 0x2f8d4
000000000002f8e8	b	0x2f8f0
000000000002f8ec	clrex
000000000002f8f0	ldaxr	x24, [x25]
000000000002f8f4	add	x8, x24, x22
000000000002f8f8	stlxr	w9, x8, [x25]
000000000002f8fc	cbnz	w9, 0x2f8f0
000000000002f900	cbz	x24, 0x2f938
000000000002f904	udiv	x8, x24, x23
000000000002f908	msub	x8, x8, x23, x24
000000000002f90c	cbnz	x8, 0x2f938
000000000002f910	mov	x0, x24
000000000002f914	mov	x1, x22
000000000002f918	mov	x2, x21
000000000002f91c	mov	x3, x20
000000000002f920	mov	x4, x19
000000000002f924	mov	x5, #0x0
000000000002f928	bl	0x4dc1c ; symbol stub for: _mmap
000000000002f92c	add	x8, x0, #0x1
000000000002f930	cmp	x8, #0x1
000000000002f934	b.hi	0x2f95c
000000000002f938	mov	x0, #0x0
000000000002f93c	mov	x1, x22
000000000002f940	mov	x2, x21
000000000002f944	mov	x3, x20
000000000002f948	mov	x4, x19
000000000002f94c	mov	x5, #0x0
000000000002f950	bl	0x4dc1c ; symbol stub for: _mmap
000000000002f954	cmn	x0, #0x1
000000000002f958	csel	x0, xzr, x0, eq
000000000002f95c	ldp	x29, x30, [sp, #0x40]
000000000002f960	ldp	x20, x19, [sp, #0x30]
000000000002f964	ldp	x22, x21, [sp, #0x20]
000000000002f968	ldp	x24, x23, [sp, #0x10]
000000000002f96c	ldp	x26, x25, [sp], #0x50
000000000002f970	ret
__mi_error_message:
000000000002f974	stp	x24, x23, [sp, #-0x40]!
000000000002f978	stp	x22, x21, [sp, #0x10]
000000000002f97c	stp	x20, x19, [sp, #0x20]
000000000002f980	stp	x29, x30, [sp, #0x30]
000000000002f984	add	x29, sp, #0x30
000000000002f988	sub	sp, sp, #0x210
000000000002f98c	mov	x20, x1
000000000002f990	mov	x19, x0
000000000002f994	add	x8, x29, #0x10
000000000002f998	str	x8, [sp, #0x8]
000000000002f99c	mov	w0, #0x0
000000000002f9a0	bl	_mi_option_get
000000000002f9a4	cbnz	x0, 0x2f9b4
000000000002f9a8	mov	w0, #0x2
000000000002f9ac	bl	_mi_option_get
000000000002f9b0	cbz	x0, 0x2faac
000000000002f9b4	adr	x9, #0x52fa4
000000000002f9b8	nop
000000000002f9bc	ldaxr	x8, [x9]
000000000002f9c0	add	x10, x8, #0x1
000000000002f9c4	stlxr	w11, x10, [x9]
000000000002f9c8	cbnz	w11, 0x2f9bc
000000000002f9cc	nop
000000000002f9d0	ldr	x9, #0x38ae0
000000000002f9d4	cmp	x8, x9
000000000002f9d8	b.hi	0x2faac
000000000002f9dc	cbz	x20, 0x2faac
000000000002f9e0	adrp	x22, 83 ; 0x82000
000000000002f9e4	ldrb	w8, [x22, #0x846]
000000000002f9e8	adrp	x21, 57 ; 0x68000
000000000002f9ec	add	x21, x21, #0xa30
000000000002f9f0	cmp	w8, #0x1
000000000002f9f4	b.ne	0x2fa1c
000000000002f9f8	ldr	x8, [x21]
000000000002f9fc	mov	x0, x21
000000000002fa00	blr	x8
000000000002fa04	ldrb	w9, [x0]
000000000002fa08	tbnz	w9, #0x0, 0x2faac
000000000002fa0c	mov	x0, x21
000000000002fa10	blr	x8
000000000002fa14	mov	w8, #0x1
000000000002fa18	strb	w8, [x0]
000000000002fa1c	add	x0, sp, #0x10
000000000002fa20	add	x3, x29, #0x10
000000000002fa24	mov	w1, #0x1ff
000000000002fa28	mov	x2, x20
000000000002fa2c	bl	0x4ded4 ; symbol stub for: _vsnprintf
000000000002fa30	ldrb	w8, [x22, #0x846]
000000000002fa34	cmp	w8, #0x1
000000000002fa38	b.ne	0x2fa50
000000000002fa3c	ldr	x8, [x21]
000000000002fa40	mov	x0, x21
000000000002fa44	blr	x8
000000000002fa48	mov	w8, #0x1
000000000002fa4c	strb	w8, [x0]
000000000002fa50	adr	x22, #0x52df6
000000000002fa54	nop
000000000002fa58	add	x8, x22, #0xca
000000000002fa5c	ldar	x20, [x8]
000000000002fa60	ldur	x8, [x22, #0xd2]
000000000002fa64	adr	x9, #-0x3b0
000000000002fa68	nop
000000000002fa6c	cmp	x8, #0x0
000000000002fa70	csel	x23, x9, x8, eq
000000000002fa74	adr	x0, #0x22a6e ; literal pool for: "mimalloc: error: "
000000000002fa78	nop
000000000002fa7c	mov	x1, x20
000000000002fa80	blr	x23
000000000002fa84	add	x0, sp, #0x10
000000000002fa88	mov	x1, x20
000000000002fa8c	blr	x23
000000000002fa90	ldrb	w8, [x22]
000000000002fa94	cmp	w8, #0x1
000000000002fa98	b.ne	0x2faac
000000000002fa9c	ldr	x8, [x21]
000000000002faa0	mov	x0, x21
000000000002faa4	blr	x8
000000000002faa8	strb	wzr, [x0]
000000000002faac	nop
000000000002fab0	ldr	x8, #0x52eb0
000000000002fab4	cbz	x8, 0x2fad0
000000000002fab8	adr	x8, #0x52ea8
000000000002fabc	nop
000000000002fac0	ldr	x9, [x8], #0x8
000000000002fac4	ldar	x1, [x8]
000000000002fac8	mov	x0, x19
000000000002facc	blr	x9
000000000002fad0	add	sp, sp, #0x210
000000000002fad4	ldp	x29, x30, [sp, #0x30]
000000000002fad8	ldp	x20, x19, [sp, #0x20]
000000000002fadc	ldp	x22, x21, [sp, #0x10]
000000000002fae0	ldp	x24, x23, [sp], #0x40
000000000002fae4	ret
_mi_stats_merge_from:
000000000002fae8	adr	x8, #0x53358
000000000002faec	nop
000000000002faf0	cmp	x0, x8
000000000002faf4	b.eq	0x3038c
000000000002faf8	stp	x29, x30, [sp, #-0x10]!
000000000002fafc	mov	x29, sp
000000000002fb00	ldr	x9, [x0]
000000000002fb04	cbnz	x9, 0x2fb10
000000000002fb08	ldr	x10, [x0, #0x8]
000000000002fb0c	cbz	x10, 0x2fb74
000000000002fb10	ldxr	x10, [x8]
000000000002fb14	add	x10, x10, x9
000000000002fb18	stxr	w11, x10, [x8]
000000000002fb1c	cbnz	w11, 0x2fb10
000000000002fb20	ldr	x8, [x0, #0x18]
000000000002fb24	adr	x9, #0x53334
000000000002fb28	nop
000000000002fb2c	ldxr	x10, [x9]
000000000002fb30	add	x10, x10, x8
000000000002fb34	stxr	w11, x10, [x9]
000000000002fb38	cbnz	w11, 0x2fb2c
000000000002fb3c	ldr	x8, [x0, #0x8]
000000000002fb40	adr	x9, #0x53308
000000000002fb44	nop
000000000002fb48	ldxr	x10, [x9]
000000000002fb4c	add	x10, x10, x8
000000000002fb50	stxr	w11, x10, [x9]
000000000002fb54	cbnz	w11, 0x2fb48
000000000002fb58	ldr	x8, [x0, #0x10]
000000000002fb5c	adr	x9, #0x532f4
000000000002fb60	nop
000000000002fb64	ldxr	x10, [x9]
000000000002fb68	add	x10, x10, x8
000000000002fb6c	stxr	w11, x10, [x9]
000000000002fb70	cbnz	w11, 0x2fb64
000000000002fb74	ldr	x8, [x0, #0x20]
000000000002fb78	cbnz	x8, 0x2fb84
000000000002fb7c	ldr	x9, [x0, #0x28]
000000000002fb80	cbz	x9, 0x2fbf0
000000000002fb84	adr	x9, #0x532dc
000000000002fb88	nop
000000000002fb8c	ldxr	x10, [x9]
000000000002fb90	add	x10, x10, x8
000000000002fb94	stxr	w11, x10, [x9]
000000000002fb98	cbnz	w11, 0x2fb8c
000000000002fb9c	ldr	x8, [x0, #0x38]
000000000002fba0	adr	x9, #0x532d8
000000000002fba4	nop
000000000002fba8	ldxr	x10, [x9]
000000000002fbac	add	x10, x10, x8
000000000002fbb0	stxr	w11, x10, [x9]
000000000002fbb4	cbnz	w11, 0x2fba8
000000000002fbb8	ldr	x8, [x0, #0x28]
000000000002fbbc	adr	x9, #0x532ac
000000000002fbc0	nop
000000000002fbc4	ldxr	x10, [x9]
000000000002fbc8	add	x10, x10, x8
000000000002fbcc	stxr	w11, x10, [x9]
000000000002fbd0	cbnz	w11, 0x2fbc4
000000000002fbd4	ldr	x8, [x0, #0x30]
000000000002fbd8	adr	x9, #0x53298
000000000002fbdc	nop
000000000002fbe0	ldxr	x10, [x9]
000000000002fbe4	add	x10, x10, x8
000000000002fbe8	stxr	w11, x10, [x9]
000000000002fbec	cbnz	w11, 0x2fbe0
000000000002fbf0	ldr	x8, [x0, #0x40]
000000000002fbf4	cbnz	x8, 0x2fc00
000000000002fbf8	ldr	x9, [x0, #0x48]
000000000002fbfc	cbz	x9, 0x2fc6c
000000000002fc00	adr	x9, #0x53280
000000000002fc04	nop
000000000002fc08	ldxr	x10, [x9]
000000000002fc0c	add	x10, x10, x8
000000000002fc10	stxr	w11, x10, [x9]
000000000002fc14	cbnz	w11, 0x2fc08
000000000002fc18	ldr	x8, [x0, #0x58]
000000000002fc1c	adr	x9, #0x5327c
000000000002fc20	nop
000000000002fc24	ldxr	x10, [x9]
000000000002fc28	add	x10, x10, x8
000000000002fc2c	stxr	w11, x10, [x9]
000000000002fc30	cbnz	w11, 0x2fc24
000000000002fc34	ldr	x8, [x0, #0x48]
000000000002fc38	adr	x9, #0x53250
000000000002fc3c	nop
000000000002fc40	ldxr	x10, [x9]
000000000002fc44	add	x10, x10, x8
000000000002fc48	stxr	w11, x10, [x9]
000000000002fc4c	cbnz	w11, 0x2fc40
000000000002fc50	ldr	x8, [x0, #0x50]
000000000002fc54	adr	x9, #0x5323c
000000000002fc58	nop
000000000002fc5c	ldxr	x10, [x9]
000000000002fc60	add	x10, x10, x8
000000000002fc64	stxr	w11, x10, [x9]
000000000002fc68	cbnz	w11, 0x2fc5c
000000000002fc6c	ldr	x8, [x0, #0x60]
000000000002fc70	cbnz	x8, 0x2fc7c
000000000002fc74	ldr	x9, [x0, #0x68]
000000000002fc78	cbz	x9, 0x2fce8
000000000002fc7c	adr	x9, #0x53224
000000000002fc80	nop
000000000002fc84	ldxr	x10, [x9]
000000000002fc88	add	x10, x10, x8
000000000002fc8c	stxr	w11, x10, [x9]
000000000002fc90	cbnz	w11, 0x2fc84
000000000002fc94	ldr	x8, [x0, #0x78]
000000000002fc98	adr	x9, #0x53220
000000000002fc9c	nop
000000000002fca0	ldxr	x10, [x9]
000000000002fca4	add	x10, x10, x8
000000000002fca8	stxr	w11, x10, [x9]
000000000002fcac	cbnz	w11, 0x2fca0
000000000002fcb0	ldr	x8, [x0, #0x68]
000000000002fcb4	adr	x9, #0x531f4
000000000002fcb8	nop
000000000002fcbc	ldxr	x10, [x9]
000000000002fcc0	add	x10, x10, x8
000000000002fcc4	stxr	w11, x10, [x9]
000000000002fcc8	cbnz	w11, 0x2fcbc
000000000002fccc	ldr	x8, [x0, #0x70]
000000000002fcd0	adr	x9, #0x531e0
000000000002fcd4	nop
000000000002fcd8	ldxr	x10, [x9]
000000000002fcdc	add	x10, x10, x8
000000000002fce0	stxr	w11, x10, [x9]
000000000002fce4	cbnz	w11, 0x2fcd8
000000000002fce8	ldr	x8, [x0, #0x80]
000000000002fcec	cbnz	x8, 0x2fcf8
000000000002fcf0	ldr	x9, [x0, #0x88]
000000000002fcf4	cbz	x9, 0x2fd64
000000000002fcf8	adr	x9, #0x531c8
000000000002fcfc	nop
000000000002fd00	ldxr	x10, [x9]
000000000002fd04	add	x10, x10, x8
000000000002fd08	stxr	w11, x10, [x9]
000000000002fd0c	cbnz	w11, 0x2fd00
000000000002fd10	ldr	x8, [x0, #0x98]
000000000002fd14	adr	x9, #0x531c4
000000000002fd18	nop
000000000002fd1c	ldxr	x10, [x9]
000000000002fd20	add	x10, x10, x8
000000000002fd24	stxr	w11, x10, [x9]
000000000002fd28	cbnz	w11, 0x2fd1c
000000000002fd2c	ldr	x8, [x0, #0x88]
000000000002fd30	adr	x9, #0x53198
000000000002fd34	nop
000000000002fd38	ldxr	x10, [x9]
000000000002fd3c	add	x10, x10, x8
000000000002fd40	stxr	w11, x10, [x9]
000000000002fd44	cbnz	w11, 0x2fd38
000000000002fd48	ldr	x8, [x0, #0x90]
000000000002fd4c	adr	x9, #0x53184
000000000002fd50	nop
000000000002fd54	ldxr	x10, [x9]
000000000002fd58	add	x10, x10, x8
000000000002fd5c	stxr	w11, x10, [x9]
000000000002fd60	cbnz	w11, 0x2fd54
000000000002fd64	ldr	x8, [x0, #0xa0]
000000000002fd68	cbnz	x8, 0x2fd74
000000000002fd6c	ldr	x9, [x0, #0xa8]
000000000002fd70	cbz	x9, 0x2fde0
000000000002fd74	adr	x9, #0x5316c
000000000002fd78	nop
000000000002fd7c	ldxr	x10, [x9]
000000000002fd80	add	x10, x10, x8
000000000002fd84	stxr	w11, x10, [x9]
000000000002fd88	cbnz	w11, 0x2fd7c
000000000002fd8c	ldr	x8, [x0, #0xb8]
000000000002fd90	adr	x9, #0x53168
000000000002fd94	nop
000000000002fd98	ldxr	x10, [x9]
000000000002fd9c	add	x10, x10, x8
000000000002fda0	stxr	w11, x10, [x9]
000000000002fda4	cbnz	w11, 0x2fd98
000000000002fda8	ldr	x8, [x0, #0xa8]
000000000002fdac	adr	x9, #0x5313c
000000000002fdb0	nop
000000000002fdb4	ldxr	x10, [x9]
000000000002fdb8	add	x10, x10, x8
000000000002fdbc	stxr	w11, x10, [x9]
000000000002fdc0	cbnz	w11, 0x2fdb4
000000000002fdc4	ldr	x8, [x0, #0xb0]
000000000002fdc8	adr	x9, #0x53128
000000000002fdcc	nop
000000000002fdd0	ldxr	x10, [x9]
000000000002fdd4	add	x10, x10, x8
000000000002fdd8	stxr	w11, x10, [x9]
000000000002fddc	cbnz	w11, 0x2fdd0
000000000002fde0	ldr	x8, [x0, #0xe0]
000000000002fde4	cbnz	x8, 0x2fdf0
000000000002fde8	ldr	x9, [x0, #0xe8]
000000000002fdec	cbz	x9, 0x2fe5c
000000000002fdf0	adr	x9, #0x53130
000000000002fdf4	nop
000000000002fdf8	ldxr	x10, [x9]
000000000002fdfc	add	x10, x10, x8
000000000002fe00	stxr	w11, x10, [x9]
000000000002fe04	cbnz	w11, 0x2fdf8
000000000002fe08	ldr	x8, [x0, #0xf8]
000000000002fe0c	adr	x9, #0x5312c
000000000002fe10	nop
000000000002fe14	ldxr	x10, [x9]
000000000002fe18	add	x10, x10, x8
000000000002fe1c	stxr	w11, x10, [x9]
000000000002fe20	cbnz	w11, 0x2fe14
000000000002fe24	ldr	x8, [x0, #0xe8]
000000000002fe28	adr	x9, #0x53100
000000000002fe2c	nop
000000000002fe30	ldxr	x10, [x9]
000000000002fe34	add	x10, x10, x8
000000000002fe38	stxr	w11, x10, [x9]
000000000002fe3c	cbnz	w11, 0x2fe30
000000000002fe40	ldr	x8, [x0, #0xf0]
000000000002fe44	adr	x9, #0x530ec
000000000002fe48	nop
000000000002fe4c	ldxr	x10, [x9]
000000000002fe50	add	x10, x10, x8
000000000002fe54	stxr	w11, x10, [x9]
000000000002fe58	cbnz	w11, 0x2fe4c
000000000002fe5c	ldr	x8, [x0, #0xc0]
000000000002fe60	cbnz	x8, 0x2fe6c
000000000002fe64	ldr	x9, [x0, #0xc8]
000000000002fe68	cbz	x9, 0x2fed8
000000000002fe6c	adr	x9, #0x53094
000000000002fe70	nop
000000000002fe74	ldxr	x10, [x9]
000000000002fe78	add	x10, x10, x8
000000000002fe7c	stxr	w11, x10, [x9]
000000000002fe80	cbnz	w11, 0x2fe74
000000000002fe84	ldr	x8, [x0, #0xd8]
000000000002fe88	adr	x9, #0x53090
000000000002fe8c	nop
000000000002fe90	ldxr	x10, [x9]
000000000002fe94	add	x10, x10, x8
000000000002fe98	stxr	w11, x10, [x9]
000000000002fe9c	cbnz	w11, 0x2fe90
000000000002fea0	ldr	x8, [x0, #0xc8]
000000000002fea4	adr	x9, #0x53064
000000000002fea8	nop
000000000002feac	ldxr	x10, [x9]
000000000002feb0	add	x10, x10, x8
000000000002feb4	stxr	w11, x10, [x9]
000000000002feb8	cbnz	w11, 0x2feac
000000000002febc	ldr	x8, [x0, #0xd0]
000000000002fec0	adr	x9, #0x53050
000000000002fec4	nop
000000000002fec8	ldxr	x10, [x9]
000000000002fecc	add	x10, x10, x8
000000000002fed0	stxr	w11, x10, [x9]
000000000002fed4	cbnz	w11, 0x2fec8
000000000002fed8	ldr	x8, [x0, #0x100]
000000000002fedc	cbnz	x8, 0x2fee8
000000000002fee0	ldr	x9, [x0, #0x108]
000000000002fee4	cbz	x9, 0x2ff54
000000000002fee8	adr	x9, #0x53058
000000000002feec	nop
000000000002fef0	ldxr	x10, [x9]
000000000002fef4	add	x10, x10, x8
000000000002fef8	stxr	w11, x10, [x9]
000000000002fefc	cbnz	w11, 0x2fef0
000000000002ff00	ldr	x8, [x0, #0x118]
000000000002ff04	adr	x9, #0x53054
000000000002ff08	nop
000000000002ff0c	ldxr	x10, [x9]
000000000002ff10	add	x10, x10, x8
000000000002ff14	stxr	w11, x10, [x9]
000000000002ff18	cbnz	w11, 0x2ff0c
000000000002ff1c	ldr	x8, [x0, #0x108]
000000000002ff20	adr	x9, #0x53028
000000000002ff24	nop
000000000002ff28	ldxr	x10, [x9]
000000000002ff2c	add	x10, x10, x8
000000000002ff30	stxr	w11, x10, [x9]
000000000002ff34	cbnz	w11, 0x2ff28
000000000002ff38	ldr	x8, [x0, #0x110]
000000000002ff3c	adr	x9, #0x53014
000000000002ff40	nop
000000000002ff44	ldxr	x10, [x9]
000000000002ff48	add	x10, x10, x8
000000000002ff4c	stxr	w11, x10, [x9]
000000000002ff50	cbnz	w11, 0x2ff44
000000000002ff54	ldr	x8, [x0, #0x180]
000000000002ff58	cbnz	x8, 0x2ff64
000000000002ff5c	ldr	x9, [x0, #0x188]
000000000002ff60	cbz	x9, 0x2ffd0
000000000002ff64	adr	x9, #0x5305c
000000000002ff68	nop
000000000002ff6c	ldxr	x10, [x9]
000000000002ff70	add	x10, x10, x8
000000000002ff74	stxr	w11, x10, [x9]
000000000002ff78	cbnz	w11, 0x2ff6c
000000000002ff7c	ldr	x8, [x0, #0x198]
000000000002ff80	adr	x9, #0x53058
000000000002ff84	nop
000000000002ff88	ldxr	x10, [x9]
000000000002ff8c	add	x10, x10, x8
000000000002ff90	stxr	w11, x10, [x9]
000000000002ff94	cbnz	w11, 0x2ff88
000000000002ff98	ldr	x8, [x0, #0x188]
000000000002ff9c	adr	x9, #0x5302c
000000000002ffa0	nop
000000000002ffa4	ldxr	x10, [x9]
000000000002ffa8	add	x10, x10, x8
000000000002ffac	stxr	w11, x10, [x9]
000000000002ffb0	cbnz	w11, 0x2ffa4
000000000002ffb4	ldr	x8, [x0, #0x190]
000000000002ffb8	adr	x9, #0x53018
000000000002ffbc	nop
000000000002ffc0	ldxr	x10, [x9]
000000000002ffc4	add	x10, x10, x8
000000000002ffc8	stxr	w11, x10, [x9]
000000000002ffcc	cbnz	w11, 0x2ffc0
000000000002ffd0	ldr	x8, [x0, #0x1a0]
000000000002ffd4	cbnz	x8, 0x2ffe0
000000000002ffd8	ldr	x9, [x0, #0x1a8]
000000000002ffdc	cbz	x9, 0x3004c
000000000002ffe0	adr	x9, #0x53000
000000000002ffe4	nop
000000000002ffe8	ldxr	x10, [x9]
000000000002ffec	add	x10, x10, x8
000000000002fff0	stxr	w11, x10, [x9]
000000000002fff4	cbnz	w11, 0x2ffe8
000000000002fff8	ldr	x8, [x0, #0x1b8]
000000000002fffc	adr	x9, #0x52ffc
0000000000030000	nop
0000000000030004	ldxr	x10, [x9]
0000000000030008	add	x10, x10, x8
000000000003000c	stxr	w11, x10, [x9]
0000000000030010	cbnz	w11, 0x30004
0000000000030014	ldr	x8, [x0, #0x1a8]
0000000000030018	adr	x9, #0x52fd0
000000000003001c	nop
0000000000030020	ldxr	x10, [x9]
0000000000030024	add	x10, x10, x8
0000000000030028	stxr	w11, x10, [x9]
000000000003002c	cbnz	w11, 0x30020
0000000000030030	ldr	x8, [x0, #0x1b0]
0000000000030034	adr	x9, #0x52fbc
0000000000030038	nop
000000000003003c	ldxr	x10, [x9]
0000000000030040	add	x10, x10, x8
0000000000030044	stxr	w11, x10, [x9]
0000000000030048	cbnz	w11, 0x3003c
000000000003004c	ldr	x8, [x0, #0x120]
0000000000030050	cbnz	x8, 0x3005c
0000000000030054	ldr	x9, [x0, #0x128]
0000000000030058	cbz	x9, 0x300c8
000000000003005c	adr	x9, #0x52f04
0000000000030060	nop
0000000000030064	ldxr	x10, [x9]
0000000000030068	add	x10, x10, x8
000000000003006c	stxr	w11, x10, [x9]
0000000000030070	cbnz	w11, 0x30064
0000000000030074	ldr	x8, [x0, #0x138]
0000000000030078	adr	x9, #0x52f00
000000000003007c	nop
0000000000030080	ldxr	x10, [x9]
0000000000030084	add	x10, x10, x8
0000000000030088	stxr	w11, x10, [x9]
000000000003008c	cbnz	w11, 0x30080
0000000000030090	ldr	x8, [x0, #0x128]
0000000000030094	adr	x9, #0x52ed4
0000000000030098	nop
000000000003009c	ldxr	x10, [x9]
00000000000300a0	add	x10, x10, x8
00000000000300a4	stxr	w11, x10, [x9]
00000000000300a8	cbnz	w11, 0x3009c
00000000000300ac	ldr	x8, [x0, #0x130]
00000000000300b0	adr	x9, #0x52ec0
00000000000300b4	nop
00000000000300b8	ldxr	x10, [x9]
00000000000300bc	add	x10, x10, x8
00000000000300c0	stxr	w11, x10, [x9]
00000000000300c4	cbnz	w11, 0x300b8
00000000000300c8	ldr	x8, [x0, #0x140]
00000000000300cc	cbnz	x8, 0x300d8
00000000000300d0	ldr	x9, [x0, #0x148]
00000000000300d4	cbz	x9, 0x30144
00000000000300d8	adr	x9, #0x52ea8
00000000000300dc	nop
00000000000300e0	ldxr	x10, [x9]
00000000000300e4	add	x10, x10, x8
00000000000300e8	stxr	w11, x10, [x9]
00000000000300ec	cbnz	w11, 0x300e0
00000000000300f0	ldr	x8, [x0, #0x158]
00000000000300f4	adr	x9, #0x52ea4
00000000000300f8	nop
00000000000300fc	ldxr	x10, [x9]
0000000000030100	add	x10, x10, x8
0000000000030104	stxr	w11, x10, [x9]
0000000000030108	cbnz	w11, 0x300fc
000000000003010c	ldr	x8, [x0, #0x148]
0000000000030110	adr	x9, #0x52e78
0000000000030114	nop
0000000000030118	ldxr	x10, [x9]
000000000003011c	add	x10, x10, x8
0000000000030120	stxr	w11, x10, [x9]
0000000000030124	cbnz	w11, 0x30118
0000000000030128	ldr	x8, [x0, #0x150]
000000000003012c	adr	x9, #0x52e64
0000000000030130	nop
0000000000030134	ldxr	x10, [x9]
0000000000030138	add	x10, x10, x8
000000000003013c	stxr	w11, x10, [x9]
0000000000030140	cbnz	w11, 0x30134
0000000000030144	ldr	x8, [x0, #0x160]
0000000000030148	cbnz	x8, 0x30154
000000000003014c	ldr	x9, [x0, #0x168]
0000000000030150	cbz	x9, 0x301c0
0000000000030154	adr	x9, #0x52e4c
0000000000030158	nop
000000000003015c	ldxr	x10, [x9]
0000000000030160	add	x10, x10, x8
0000000000030164	stxr	w11, x10, [x9]
0000000000030168	cbnz	w11, 0x3015c
000000000003016c	ldr	x8, [x0, #0x178]
0000000000030170	adr	x9, #0x52e48
0000000000030174	nop
0000000000030178	ldxr	x10, [x9]
000000000003017c	add	x10, x10, x8
0000000000030180	stxr	w11, x10, [x9]
0000000000030184	cbnz	w11, 0x30178
0000000000030188	ldr	x8, [x0, #0x168]
000000000003018c	adr	x9, #0x52e1c
0000000000030190	nop
0000000000030194	ldxr	x10, [x9]
0000000000030198	add	x10, x10, x8
000000000003019c	stxr	w11, x10, [x9]
00000000000301a0	cbnz	w11, 0x30194
00000000000301a4	ldr	x8, [x0, #0x170]
00000000000301a8	adr	x9, #0x52e08
00000000000301ac	nop
00000000000301b0	ldxr	x10, [x9]
00000000000301b4	add	x10, x10, x8
00000000000301b8	stxr	w11, x10, [x9]
00000000000301bc	cbnz	w11, 0x301b0
00000000000301c0	ldr	x8, [x0, #0x1c0]
00000000000301c4	adr	x9, #0x52e3c
00000000000301c8	nop
00000000000301cc	ldxr	x10, [x9]
00000000000301d0	add	x10, x10, x8
00000000000301d4	stxr	w11, x10, [x9]
00000000000301d8	cbnz	w11, 0x301cc
00000000000301dc	ldr	x8, [x0, #0x1c8]
00000000000301e0	adr	x9, #0x52e28
00000000000301e4	nop
00000000000301e8	ldxr	x10, [x9]
00000000000301ec	add	x10, x10, x8
00000000000301f0	stxr	w11, x10, [x9]
00000000000301f4	cbnz	w11, 0x301e8
00000000000301f8	ldr	x8, [x0, #0x1d0]
00000000000301fc	adr	x9, #0x52e14
0000000000030200	nop
0000000000030204	ldxr	x10, [x9]
0000000000030208	add	x10, x10, x8
000000000003020c	stxr	w11, x10, [x9]
0000000000030210	cbnz	w11, 0x30204
0000000000030214	ldr	x8, [x0, #0x1d8]
0000000000030218	adr	x9, #0x52e00
000000000003021c	nop
0000000000030220	ldxr	x10, [x9]
0000000000030224	add	x10, x10, x8
0000000000030228	stxr	w11, x10, [x9]
000000000003022c	cbnz	w11, 0x30220
0000000000030230	ldr	x8, [x0, #0x1e0]
0000000000030234	adr	x9, #0x52dec
0000000000030238	nop
000000000003023c	ldxr	x10, [x9]
0000000000030240	add	x10, x10, x8
0000000000030244	stxr	w11, x10, [x9]
0000000000030248	cbnz	w11, 0x3023c
000000000003024c	ldr	x8, [x0, #0x1e8]
0000000000030250	adr	x9, #0x52dd8
0000000000030254	nop
0000000000030258	ldxr	x10, [x9]
000000000003025c	add	x10, x10, x8
0000000000030260	stxr	w11, x10, [x9]
0000000000030264	cbnz	w11, 0x30258
0000000000030268	ldr	x8, [x0, #0x1f0]
000000000003026c	adr	x9, #0x52dc4
0000000000030270	nop
0000000000030274	ldxr	x10, [x9]
0000000000030278	add	x10, x10, x8
000000000003027c	stxr	w11, x10, [x9]
0000000000030280	cbnz	w11, 0x30274
0000000000030284	ldr	x8, [x0, #0x1f8]
0000000000030288	adr	x9, #0x52db0
000000000003028c	nop
0000000000030290	ldxr	x10, [x9]
0000000000030294	add	x10, x10, x8
0000000000030298	stxr	w11, x10, [x9]
000000000003029c	cbnz	w11, 0x30290
00000000000302a0	ldr	x8, [x0, #0x200]
00000000000302a4	adr	x9, #0x52d9c
00000000000302a8	nop
00000000000302ac	ldxr	x10, [x9]
00000000000302b0	add	x10, x10, x8
00000000000302b4	stxr	w11, x10, [x9]
00000000000302b8	cbnz	w11, 0x302ac
00000000000302bc	ldr	x8, [x0, #0x208]
00000000000302c0	adr	x9, #0x52d88
00000000000302c4	nop
00000000000302c8	ldxr	x10, [x9]
00000000000302cc	add	x10, x10, x8
00000000000302d0	stxr	w11, x10, [x9]
00000000000302d4	cbnz	w11, 0x302c8
00000000000302d8	ldr	x8, [x0, #0x210]
00000000000302dc	adr	x9, #0x52d74
00000000000302e0	nop
00000000000302e4	ldxr	x10, [x9]
00000000000302e8	add	x10, x10, x8
00000000000302ec	stxr	w11, x10, [x9]
00000000000302f0	cbnz	w11, 0x302e4
00000000000302f4	ldr	x8, [x0, #0x218]
00000000000302f8	adr	x9, #0x52d60
00000000000302fc	nop
0000000000030300	ldxr	x10, [x9]
0000000000030304	add	x10, x10, x8
0000000000030308	stxr	w11, x10, [x9]
000000000003030c	cbnz	w11, 0x30300
0000000000030310	ldr	x8, [x0, #0x220]
0000000000030314	adr	x9, #0x52d4c
0000000000030318	nop
000000000003031c	ldxr	x10, [x9]
0000000000030320	add	x10, x10, x8
0000000000030324	stxr	w11, x10, [x9]
0000000000030328	cbnz	w11, 0x3031c
000000000003032c	ldr	x8, [x0, #0x228]
0000000000030330	adr	x9, #0x52d38
0000000000030334	nop
0000000000030338	ldxr	x10, [x9]
000000000003033c	add	x10, x10, x8
0000000000030340	stxr	w11, x10, [x9]
0000000000030344	cbnz	w11, 0x30338
0000000000030348	ldr	x8, [x0, #0x230]
000000000003034c	adr	x9, #0x52d24
0000000000030350	nop
0000000000030354	ldxr	x10, [x9]
0000000000030358	add	x10, x10, x8
000000000003035c	stxr	w11, x10, [x9]
0000000000030360	cbnz	w11, 0x30354
0000000000030364	ldr	x8, [x0, #0x238]
0000000000030368	adr	x9, #0x52d10
000000000003036c	nop
0000000000030370	ldxr	x10, [x9]
0000000000030374	add	x10, x10, x8
0000000000030378	stxr	w11, x10, [x9]
000000000003037c	cbnz	w11, 0x30370
0000000000030380	mov	w1, #0x240
0000000000030384	bl	0x4db14 ; symbol stub for: _bzero
0000000000030388	ldp	x29, x30, [sp], #0x10
000000000003038c	ret
_mi_heap_collect_ex:
0000000000030390	sub	sp, sp, #0x70
0000000000030394	stp	x28, x27, [sp, #0x10]
0000000000030398	stp	x26, x25, [sp, #0x20]
000000000003039c	stp	x24, x23, [sp, #0x30]
00000000000303a0	stp	x22, x21, [sp, #0x40]
00000000000303a4	stp	x20, x19, [sp, #0x50]
00000000000303a8	stp	x29, x30, [sp, #0x60]
00000000000303ac	add	x29, sp, #0x60
00000000000303b0	cbz	x0, 0x30fd0
00000000000303b4	mov	x28, x0
00000000000303b8	adr	x8, #0x32948
00000000000303bc	nop
00000000000303c0	cmp	x0, x8
00000000000303c4	b.eq	0x30fd0
00000000000303c8	mov	x20, x1
00000000000303cc	ldr	x8, [x28]
00000000000303d0	ldr	x9, [x8]
00000000000303d4	add	x1, x9, #0x1
00000000000303d8	str	x1, [x8]
00000000000303dc	nop
00000000000303e0	ldr	x9, #0x526a8
00000000000303e4	cbz	x9, 0x303f0
00000000000303e8	ldrb	w9, [x8, #0x8]
00000000000303ec	cbz	w9, 0x3043c
00000000000303f0	adrp	x9, 56 ; 0x68000
00000000000303f4	cmp	w20, #0x2
00000000000303f8	b.eq	0x30470
00000000000303fc	cmp	w20, #0x1
0000000000030400	b.ne	0x30434
0000000000030404	ldr	x19, [x9]
0000000000030408	cbz	x19, 0x30420
000000000003040c	bl	0x4ddf0 ; symbol stub for: _pthread_self
0000000000030410	bl	0x4dda8 ; symbol stub for: _pthread_mach_thread_np
0000000000030414	cmp	x19, w0, uxtw
0000000000030418	b.ne	0x30434
000000000003041c	ldr	x8, [x28]
0000000000030420	ldr	x9, [x8, #0x10]
0000000000030424	cmp	x9, x28
0000000000030428	b.ne	0x30434
000000000003042c	ldrb	w9, [x28, #0xbe8]
0000000000030430	cbz	w9, 0x310b0
0000000000030434	mov	w21, #0x0
0000000000030438	b	0x304f4
000000000003043c	mov	w9, #0x1
0000000000030440	strb	w9, [x8, #0x8]
0000000000030444	adr	x8, #0x52644
0000000000030448	nop
000000000003044c	ldr	x9, [x8], #0x8
0000000000030450	ldr	x2, [x8]
0000000000030454	mov	w0, #0x1
0000000000030458	blr	x9
000000000003045c	ldr	x8, [x28]
0000000000030460	strb	wzr, [x8, #0x8]
0000000000030464	adrp	x9, 56 ; 0x68000
0000000000030468	cmp	w20, #0x2
000000000003046c	b.ne	0x303fc
0000000000030470	ldr	x8, [x28, #0xbc8]
0000000000030474	cbz	x8, 0x304f0
0000000000030478	mov	x8, #0x0
000000000003047c	mov	w9, #0x18
0000000000030480	b	0x30490
0000000000030484	add	x8, x8, #0x1
0000000000030488	cmp	x8, #0x4b
000000000003048c	b.eq	0x304f0
0000000000030490	madd	x10, x8, x9, x28
0000000000030494	ldr	x10, [x10, #0x410]
0000000000030498	cbnz	x10, 0x304a4
000000000003049c	b	0x30484
00000000000304a0	cbz	x10, 0x30484
00000000000304a4	add	x11, x10, #0x20
00000000000304a8	ldr	x10, [x10, #0x30]
00000000000304ac	ldar	x12, [x11]
00000000000304b0	and	w13, w12, #0x3
00000000000304b4	cmp	w13, #0x3
00000000000304b8	b.eq	0x304a0
00000000000304bc	cmp	w13, #0x1
00000000000304c0	b.eq	0x304e8
00000000000304c4	ldxr	x13, [x11]
00000000000304c8	cmp	x13, x12
00000000000304cc	b.ne	0x304e0
00000000000304d0	orr	x12, x12, #0x3
00000000000304d4	stlxr	w13, x12, [x11]
00000000000304d8	cbnz	w13, 0x304ac
00000000000304dc	b	0x304a0
00000000000304e0	clrex
00000000000304e4	b	0x304ac
00000000000304e8	wfe
00000000000304ec	b	0x304ac
00000000000304f0	mov	w21, #0x1
00000000000304f4	add	x8, x28, #0xb18
00000000000304f8	ldr	x9, [x28, #0xb18]
00000000000304fc	b	0x3050c
0000000000030500	clrex
0000000000030504	mov	w10, #0x0
0000000000030508	cbnz	w10, 0x30530
000000000003050c	cbz	x9, 0x30540
0000000000030510	mov	x0, x9
0000000000030514	ldaxr	x9, [x8]
0000000000030518	cmp	x9, x0
000000000003051c	b.ne	0x30500
0000000000030520	stlxr	w10, xzr, [x8]
0000000000030524	cbnz	w10, 0x30504
0000000000030528	mov	w10, #0x1
000000000003052c	cbz	w10, 0x3050c
0000000000030530	ldr	x19, [x0]
0000000000030534	bl	__mi_free_delayed_block
0000000000030538	mov	x0, x19
000000000003053c	cbnz	x19, 0x30530
0000000000030540	ldr	x19, [x28, #0xbd0]
0000000000030544	ldr	x8, [x28, #0xbd8]
0000000000030548	cmp	x19, x8
000000000003054c	b.ls	0x308e8
0000000000030550	mov	w8, #0x4a
0000000000030554	str	x8, [x28, #0xbd0]
0000000000030558	str	xzr, [x28, #0xbd8]
000000000003055c	ldr	x8, [x28, #0xbc8]
0000000000030560	cbz	x8, 0x309a8
0000000000030564	tbz	w21, #0x0, 0x30948
0000000000030568	mov	x23, #0x0
000000000003056c	add	x24, x28, #0x3f8
0000000000030570	adr	x22, #0x528d0
0000000000030574	nop
0000000000030578	adr	x25, #0x52b08
000000000003057c	nop
0000000000030580	str	x28, [sp, #0x8]
0000000000030584	b	0x3059c
0000000000030588	add	x23, x23, #0x1
000000000003058c	add	x24, x24, #0x18
0000000000030590	cmp	x23, #0x4b
0000000000030594	ldr	x28, [sp, #0x8]
0000000000030598	b.eq	0x309a8
000000000003059c	mov	w8, #0x18
00000000000305a0	madd	x8, x23, x8, x28
00000000000305a4	ldr	x26, [x8, #0x410]
00000000000305a8	cbz	x26, 0x30588
00000000000305ac	add	x20, x8, #0x410
00000000000305b0	ldr	x8, [sp, #0x8]
00000000000305b4	mov	w9, #0x18
00000000000305b8	madd	x8, x23, x9, x8
00000000000305bc	add	x19, x8, #0x418
00000000000305c0	add	x27, x8, #0x420
00000000000305c4	b	0x305dc
00000000000305c8	mov	x0, x21
00000000000305cc	mov	x1, x20
00000000000305d0	mov	w2, #0x1
00000000000305d4	bl	__mi_page_free
00000000000305d8	cbz	x26, 0x30588
00000000000305dc	mov	x21, x26
00000000000305e0	mov	x28, x26
00000000000305e4	ldr	x26, [x28, #0x30]!
00000000000305e8	mov	x0, x21
00000000000305ec	mov	w1, #0x1
00000000000305f0	bl	__mi_page_free_collect
00000000000305f4	ldr	w8, [x21, #0x10]
00000000000305f8	cbz	w8, 0x305c8
00000000000305fc	ldr	x8, [x21, #0x28]
0000000000030600	ldr	x8, [x8]
0000000000030604	ldr	x9, [x21, #0x28]
0000000000030608	ldr	x11, [x21, #0x38]
000000000003060c	cbz	x11, 0x30618
0000000000030610	ldr	x10, [x28]
0000000000030614	str	x10, [x11, #0x30]
0000000000030618	ldr	x10, [x28]
000000000003061c	cbz	x10, 0x30624
0000000000030620	str	x11, [x10, #0x38]
0000000000030624	ldr	x11, [x19]
0000000000030628	cmp	x11, x21
000000000003062c	b.eq	0x30640
0000000000030630	ldr	x11, [x20]
0000000000030634	cmp	x11, x21
0000000000030638	b.ne	0x307e8
000000000003063c	b	0x30654
0000000000030640	ldr	x11, [x21, #0x38]
0000000000030644	str	x11, [x19]
0000000000030648	ldr	x11, [x20]
000000000003064c	cmp	x11, x21
0000000000030650	b.ne	0x307e8
0000000000030654	str	x10, [x20]
0000000000030658	ldr	x12, [x27]
000000000003065c	cmp	x12, #0x400
0000000000030660	b.hi	0x307e8
0000000000030664	cmp	x10, #0x0
0000000000030668	adr	x11, #0x1ea18
000000000003066c	nop
0000000000030670	csel	x10, x11, x10, eq
0000000000030674	add	x11, x12, #0x7
0000000000030678	lsr	x11, x11, #3
000000000003067c	add	x13, x9, x11, lsl #3
0000000000030680	ldr	x13, [x13, #0x8]
0000000000030684	cmp	x13, x10
0000000000030688	b.eq	0x307e8
000000000003068c	cmp	x12, #0x9
0000000000030690	b.hs	0x3069c
0000000000030694	mov	x12, #0x0
0000000000030698	b	0x3078c
000000000003069c	sub	x13, x11, #0x1
00000000000306a0	clz	x14, x13
00000000000306a4	mov	w15, #0x3f
00000000000306a8	sub	w14, w15, w14
00000000000306ac	and	w14, w14, #0xff
00000000000306b0	sub	w15, w14, #0x2
00000000000306b4	lsr	x13, x13, x15
00000000000306b8	and	w13, w13, #0x3
00000000000306bc	bfi	w13, w14, #2, #8
00000000000306c0	sub	w13, w13, #0x3
00000000000306c4	add	w14, w11, #0x1
00000000000306c8	and	w14, w14, #0xfffffffe
00000000000306cc	cmp	x12, #0x40
00000000000306d0	csel	w12, w13, w14, hi
00000000000306d4	add	x13, x9, #0x410
00000000000306d8	mov	x14, x24
00000000000306dc	b	0x306fc
00000000000306e0	mov	w16, #0x1
00000000000306e4	cmp	x14, x13
00000000000306e8	b.ls	0x3077c
00000000000306ec	sub	x14, x14, #0x18
00000000000306f0	and	w17, w12, #0xff
00000000000306f4	cmp	w17, w16, uxtb
00000000000306f8	b.ne	0x3077c
00000000000306fc	ldr	x15, [x14, #0x10]
0000000000030700	add	x16, x15, #0x7
0000000000030704	lsr	x15, x16, #3
0000000000030708	cmp	x16, #0x10
000000000003070c	b.lo	0x306e0
0000000000030710	cmp	x16, #0x47
0000000000030714	b.hi	0x3072c
0000000000030718	add	w16, w15, #0x1
000000000003071c	and	w16, w16, #0xfffffffe
0000000000030720	cmp	x14, x13
0000000000030724	b.hi	0x306ec
0000000000030728	b	0x3077c
000000000003072c	mov	w17, #0x7
0000000000030730	movk	w17, #0x20, lsl #16
0000000000030734	cmp	x16, x17
0000000000030738	b.ls	0x3074c
000000000003073c	mov	w16, #0x49
0000000000030740	cmp	x14, x13
0000000000030744	b.hi	0x306ec
0000000000030748	b	0x3077c
000000000003074c	sub	x16, x15, #0x1
0000000000030750	clz	x17, x16
0000000000030754	mov	w0, #0x3f
0000000000030758	sub	w17, w0, w17
000000000003075c	and	w17, w17, #0xff
0000000000030760	sub	w0, w17, #0x2
0000000000030764	lsr	x16, x16, x0
0000000000030768	and	w16, w16, #0x3
000000000003076c	bfi	w16, w17, #2, #8
0000000000030770	sub	w16, w16, #0x3
0000000000030774	cmp	x14, x13
0000000000030778	b.hi	0x306ec
000000000003077c	cmp	x15, x11
0000000000030780	csinc	x12, x11, x15, hs
0000000000030784	cmp	x12, x11
0000000000030788	b.hi	0x307e8
000000000003078c	sub	x13, x11, x12
0000000000030790	add	x13, x13, #0x1
0000000000030794	cmp	x13, #0x4
0000000000030798	b.lo	0x307cc
000000000003079c	and	x14, x13, #0xfffffffffffffffc
00000000000307a0	dup.2d	v0, x10
00000000000307a4	add	x15, x9, x12, lsl #3
00000000000307a8	add	x15, x15, #0x18
00000000000307ac	mov	x16, x14
00000000000307b0	stp	q0, q0, [x15, #-0x10]
00000000000307b4	add	x15, x15, #0x20
00000000000307b8	subs	x16, x16, #0x4
00000000000307bc	b.ne	0x307b0
00000000000307c0	cmp	x13, x14
00000000000307c4	b.eq	0x307e8
00000000000307c8	add	x12, x12, x14
00000000000307cc	sub	x11, x11, x12
00000000000307d0	add	x11, x11, #0x1
00000000000307d4	add	x12, x9, x12, lsl #3
00000000000307d8	add	x12, x12, #0x8
00000000000307dc	str	x10, [x12], #0x8
00000000000307e0	subs	x11, x11, #0x1
00000000000307e4	b.ne	0x307dc
00000000000307e8	ldr	x10, [x9, #0xbc8]
00000000000307ec	sub	x10, x10, #0x1
00000000000307f0	str	x10, [x9, #0xbc8]
00000000000307f4	stp	xzr, xzr, [x28]
00000000000307f8	ldrb	w9, [x21, #0x6]
00000000000307fc	and	w9, w9, #0xfe
0000000000030800	strb	w9, [x21, #0x6]
0000000000030804	add	x9, x21, #0x28
0000000000030808	stlr	xzr, [x9]
000000000003080c	and	x0, x21, #0xffffffffffc00000
0000000000030810	ldr	x9, [x0, #0x28]
0000000000030814	add	x10, x9, #0x1
0000000000030818	str	x10, [x0, #0x28]
000000000003081c	ldr	x13, [x8, #0x90]
0000000000030820	add	x9, x13, #0xe0
0000000000030824	cmp	x9, x22
0000000000030828	ccmp	x9, x25, #0x2, hs
000000000003082c	b.lo	0x30864
0000000000030830	ldp	x14, x12, [x13, #0xf0]
0000000000030834	add	x11, x12, #0x1
0000000000030838	str	x11, [x13, #0xf8]
000000000003083c	cmp	x12, x14
0000000000030840	b.lt	0x30848
0000000000030844	str	x11, [x13, #0xf0]
0000000000030848	ldr	x11, [x9]
000000000003084c	add	x11, x11, #0x1
0000000000030850	str	x11, [x9]
0000000000030854	ldr	x9, [x0, #0x38]
0000000000030858	cmp	x9, x10
000000000003085c	b.ne	0x305d8
0000000000030860	b	0x308dc
0000000000030864	add	x12, x13, #0xf8
0000000000030868	ldxr	x10, [x12]
000000000003086c	add	x11, x10, #0x1
0000000000030870	stxr	w14, x11, [x12]
0000000000030874	cbnz	w14, 0x30868
0000000000030878	add	x12, x13, #0xf0
000000000003087c	ldr	x14, [x13, #0xf0]
0000000000030880	b	0x30894
0000000000030884	clrex
0000000000030888	mov	w15, #0x0
000000000003088c	mov	x14, x13
0000000000030890	cbnz	w15, 0x308bc
0000000000030894	cmp	x14, x10
0000000000030898	b.gt	0x308bc
000000000003089c	ldxr	x13, [x12]
00000000000308a0	cmp	x13, x14
00000000000308a4	b.ne	0x30884
00000000000308a8	stlxr	w14, x11, [x12]
00000000000308ac	cbnz	w14, 0x30888
00000000000308b0	mov	w15, #0x1
00000000000308b4	mov	x14, x13
00000000000308b8	cbz	w15, 0x30894
00000000000308bc	ldxr	x10, [x9]
00000000000308c0	add	x10, x10, #0x1
00000000000308c4	stxr	w11, x10, [x9]
00000000000308c8	cbnz	w11, 0x308bc
00000000000308cc	ldr	x10, [x0, #0x28]
00000000000308d0	ldr	x9, [x0, #0x38]
00000000000308d4	cmp	x9, x10
00000000000308d8	b.ne	0x305d8
00000000000308dc	add	x1, x8, #0x20
00000000000308e0	bl	_mi_segment_abandon
00000000000308e4	b	0x305d8
00000000000308e8	mov	w8, #0x18
00000000000308ec	madd	x8, x19, x8, x28
00000000000308f0	add	x20, x8, #0x410
00000000000308f4	b	0x30920
00000000000308f8	strb	w10, [x8, #0x7]
00000000000308fc	ldr	x0, [x20]
0000000000030900	mov	x1, x20
0000000000030904	mov	w2, #0x1
0000000000030908	bl	__mi_page_free
000000000003090c	add	x19, x19, #0x1
0000000000030910	ldr	x8, [x28, #0xbd8]
0000000000030914	add	x20, x20, #0x18
0000000000030918	cmp	x19, x8
000000000003091c	b.hi	0x30550
0000000000030920	ldr	x8, [x20]
0000000000030924	cbz	x8, 0x3090c
0000000000030928	ldrb	w9, [x8, #0x7]
000000000003092c	subs	w10, w9, #0x2
0000000000030930	b.lo	0x3090c
0000000000030934	ldr	w11, [x8, #0x10]
0000000000030938	cbz	w11, 0x308f8
000000000003093c	and	w9, w9, #0x1
0000000000030940	strb	w9, [x8, #0x7]
0000000000030944	b	0x3090c
0000000000030948	mov	x19, #0x0
000000000003094c	mov	w22, #0x18
0000000000030950	b	0x30960
0000000000030954	add	x19, x19, #0x1
0000000000030958	cmp	x19, #0x4b
000000000003095c	b.eq	0x309a8
0000000000030960	madd	x8, x19, x22, x28
0000000000030964	ldr	x21, [x8, #0x410]
0000000000030968	cbz	x21, 0x30954
000000000003096c	add	x20, x8, #0x410
0000000000030970	b	0x3097c
0000000000030974	mov	x21, x23
0000000000030978	cbz	x23, 0x30954
000000000003097c	ldr	x23, [x21, #0x30]
0000000000030980	mov	x0, x21
0000000000030984	mov	w1, #0x1
0000000000030988	bl	__mi_page_free_collect
000000000003098c	ldr	w8, [x21, #0x10]
0000000000030990	cbnz	w8, 0x30974
0000000000030994	mov	x0, x21
0000000000030998	mov	x1, x20
000000000003099c	mov	w2, #0x1
00000000000309a0	bl	__mi_page_free
00000000000309a4	b	0x30974
00000000000309a8	ldr	x23, [x28]
00000000000309ac	ldr	x20, [x23, #0x88]
00000000000309b0	cbz	x20, 0x30fa4
00000000000309b4	adr	x24, #0x5248c
00000000000309b8	nop
00000000000309bc	mov	w25, #0x1039
00000000000309c0	movi.16b	v16, #0x4
00000000000309c4	movi.16b	v17, #0x2
00000000000309c8	adr	x26, #0x526b8
00000000000309cc	nop
00000000000309d0	b	0x30a00
00000000000309d4	mov	w4, #0x0
00000000000309d8	mov	w19, #0x1
00000000000309dc	ldr	x2, [x20]
00000000000309e0	and	w3, w19, #0x1
00000000000309e4	mov	x0, x20
00000000000309e8	mov	x1, x21
00000000000309ec	bl	__mi_mem_free
00000000000309f0	ldr	x20, [x23, #0x88]
00000000000309f4	movi.16b	v16, #0x4
00000000000309f8	movi.16b	v17, #0x2
00000000000309fc	cbz	x20, 0x30fa4
0000000000030a00	ldr	x8, [x23, #0x78]
0000000000030a04	sub	x8, x8, #0x1
0000000000030a08	str	x8, [x23, #0x78]
0000000000030a0c	ldr	x8, [x20, #0x18]
0000000000030a10	str	x8, [x23, #0x88]
0000000000030a14	str	xzr, [x20, #0x18]
0000000000030a18	ldr	x8, [x23, #0x90]
0000000000030a1c	add	x9, x8, #0x1a0
0000000000030a20	cmp	x9, x24
0000000000030a24	ccmp	x9, x26, #0x2, hs
0000000000030a28	b.lo	0x30a54
0000000000030a2c	ldp	x10, x9, [x8, #0x1b0]
0000000000030a30	sub	x9, x9, #0x1
0000000000030a34	str	x9, [x8, #0x1b8]
0000000000030a38	cmp	x9, x10
0000000000030a3c	b.le	0x30a44
0000000000030a40	str	x9, [x8, #0x1b0]
0000000000030a44	ldr	x9, [x8, #0x1a8]
0000000000030a48	add	x9, x9, #0x1
0000000000030a4c	str	x9, [x8, #0x1a8]
0000000000030a50	b	0x30ac0
0000000000030a54	add	x10, x8, #0x1b8
0000000000030a58	ldxr	x9, [x10]
0000000000030a5c	sub	x9, x9, #0x1
0000000000030a60	stxr	w11, x9, [x10]
0000000000030a64	cbnz	w11, 0x30a58
0000000000030a68	add	x10, x8, #0x1b0
0000000000030a6c	ldr	x12, [x8, #0x1b0]
0000000000030a70	b	0x30a84
0000000000030a74	clrex
0000000000030a78	mov	w13, #0x0
0000000000030a7c	mov	x12, x11
0000000000030a80	cbnz	w13, 0x30aac
0000000000030a84	cmp	x12, x9
0000000000030a88	b.ge	0x30aac
0000000000030a8c	ldxr	x11, [x10]
0000000000030a90	cmp	x11, x12
0000000000030a94	b.ne	0x30a74
0000000000030a98	stlxr	w12, x9, [x10]
0000000000030a9c	cbnz	w12, 0x30a78
0000000000030aa0	mov	w13, #0x1
0000000000030aa4	mov	x12, x11
0000000000030aa8	cbz	w13, 0x30a84
0000000000030aac	add	x8, x8, #0x1a8
0000000000030ab0	ldxr	x9, [x8]
0000000000030ab4	add	x9, x9, #0x1
0000000000030ab8	stxr	w10, x9, [x8]
0000000000030abc	cbnz	w10, 0x30ab0
0000000000030ac0	ldr	x21, [x20, #0x48]
0000000000030ac4	add	x8, x20, #0x68
0000000000030ac8	stlr	xzr, [x8]
0000000000030acc	ldr	x8, [x23, #0x90]
0000000000030ad0	cmp	x8, x24
0000000000030ad4	cset	w9, hs
0000000000030ad8	add	x10, x24, #0x240
0000000000030adc	cmp	x8, x10
0000000000030ae0	cset	w10, lo
0000000000030ae4	and	w9, w9, w10
0000000000030ae8	add	x11, x8, #0x18
0000000000030aec	cmp	x21, #0x0
0000000000030af0	b.le	0x30b7c
0000000000030af4	cbz	w9, 0x30c20
0000000000030af8	ldxr	x9, [x11]
0000000000030afc	sub	x9, x9, #0x1
0000000000030b00	stxr	w10, x9, [x11]
0000000000030b04	cbnz	w10, 0x30af8
0000000000030b08	add	x10, x8, #0x10
0000000000030b0c	ldr	x12, [x8, #0x10]
0000000000030b10	b	0x30b24
0000000000030b14	clrex
0000000000030b18	mov	w13, #0x0
0000000000030b1c	mov	x12, x11
0000000000030b20	cbnz	w13, 0x30b4c
0000000000030b24	cmp	x12, x9
0000000000030b28	b.ge	0x30b4c
0000000000030b2c	ldxr	x11, [x10]
0000000000030b30	cmp	x11, x12
0000000000030b34	b.ne	0x30b14
0000000000030b38	stlxr	w12, x9, [x10]
0000000000030b3c	cbnz	w12, 0x30b18
0000000000030b40	mov	w13, #0x1
0000000000030b44	mov	x12, x11
0000000000030b48	cbz	w13, 0x30b24
0000000000030b4c	add	x8, x8, #0x8
0000000000030b50	ldxr	x9, [x8]
0000000000030b54	add	x9, x9, #0x1
0000000000030b58	stxr	w10, x9, [x8]
0000000000030b5c	cbnz	w10, 0x30b50
0000000000030b60	mov	x9, #-0x1
0000000000030b64	ldp	x8, x10, [x23, #0x58]
0000000000030b68	add	x8, x8, x9
0000000000030b6c	str	x8, [x23, #0x58]
0000000000030b70	cmp	x8, x10
0000000000030b74	b.hi	0x30c80
0000000000030b78	b	0x30bfc
0000000000030b7c	cbz	w9, 0x30c44
0000000000030b80	ldxr	x9, [x11]
0000000000030b84	add	x10, x9, #0x1
0000000000030b88	stxr	w12, x10, [x11]
0000000000030b8c	cbnz	w12, 0x30b80
0000000000030b90	add	x11, x8, #0x10
0000000000030b94	ldr	x13, [x8, #0x10]
0000000000030b98	b	0x30bac
0000000000030b9c	clrex
0000000000030ba0	mov	w14, #0x0
0000000000030ba4	mov	x13, x12
0000000000030ba8	cbnz	w14, 0x30bd4
0000000000030bac	cmp	x13, x9
0000000000030bb0	b.gt	0x30bd4
0000000000030bb4	ldxr	x12, [x11]
0000000000030bb8	cmp	x12, x13
0000000000030bbc	b.ne	0x30b9c
0000000000030bc0	stlxr	w13, x10, [x11]
0000000000030bc4	cbnz	w13, 0x30ba0
0000000000030bc8	mov	w14, #0x1
0000000000030bcc	mov	x13, x12
0000000000030bd0	cbz	w14, 0x30bac
0000000000030bd4	ldxr	x9, [x8]
0000000000030bd8	add	x9, x9, #0x1
0000000000030bdc	stxr	w10, x9, [x8]
0000000000030be0	cbnz	w10, 0x30bd4
0000000000030be4	mov	w9, #0x1
0000000000030be8	ldp	x8, x10, [x23, #0x58]
0000000000030bec	add	x8, x8, x9
0000000000030bf0	str	x8, [x23, #0x58]
0000000000030bf4	cmp	x8, x10
0000000000030bf8	b.hi	0x30c80
0000000000030bfc	ldp	x8, x9, [x23, #0x68]
0000000000030c00	sub	x8, x8, x21
0000000000030c04	str	x8, [x23, #0x68]
0000000000030c08	cmp	x8, x9
0000000000030c0c	b.ls	0x30c98
0000000000030c10	str	x8, [x23, #0x70]
0000000000030c14	ldr	x8, [x20, #0x40]
0000000000030c18	cbnz	x8, 0x30ca0
0000000000030c1c	b	0x309d4
0000000000030c20	ldp	x10, x9, [x8, #0x10]
0000000000030c24	sub	x9, x9, #0x1
0000000000030c28	str	x9, [x8, #0x18]
0000000000030c2c	cmp	x9, x10
0000000000030c30	b.le	0x30c38
0000000000030c34	str	x9, [x8, #0x10]
0000000000030c38	add	x8, x8, #0x8
0000000000030c3c	mov	x9, #-0x1
0000000000030c40	b	0x30c60
0000000000030c44	ldp	x11, x10, [x8, #0x10]
0000000000030c48	add	x9, x10, #0x1
0000000000030c4c	str	x9, [x8, #0x18]
0000000000030c50	cmp	x10, x11
0000000000030c54	b.lt	0x30c5c
0000000000030c58	str	x9, [x8, #0x10]
0000000000030c5c	mov	w9, #0x1
0000000000030c60	ldr	x10, [x8]
0000000000030c64	add	x10, x10, #0x1
0000000000030c68	str	x10, [x8]
0000000000030c6c	ldp	x8, x10, [x23, #0x58]
0000000000030c70	add	x8, x8, x9
0000000000030c74	str	x8, [x23, #0x58]
0000000000030c78	cmp	x8, x10
0000000000030c7c	b.ls	0x30bfc
0000000000030c80	str	x8, [x23, #0x60]
0000000000030c84	ldp	x8, x9, [x23, #0x68]
0000000000030c88	sub	x8, x8, x21
0000000000030c8c	str	x8, [x23, #0x68]
0000000000030c90	cmp	x8, x9
0000000000030c94	b.hi	0x30c10
0000000000030c98	ldr	x8, [x20, #0x40]
0000000000030c9c	cbz	x8, 0x309d4
0000000000030ca0	cmp	x8, #0x1f
0000000000030ca4	b.hi	0x30cb8
0000000000030ca8	mov	w10, #0x0
0000000000030cac	mov	x9, #0x0
0000000000030cb0	mov	w19, #0x1
0000000000030cb4	b	0x30f54
0000000000030cb8	and	x9, x8, #0xffffffffffffffe0
0000000000030cbc	add	x10, x20, x25
0000000000030cc0	movi.16b	v2, #0x1
0000000000030cc4	movi.16b	v0, #0x0
0000000000030cc8	mov	x11, x9
0000000000030ccc	movi.16b	v1, #0x0
0000000000030cd0	movi.16b	v3, #0x1
0000000000030cd4	sub	x12, x10, #0x7c0
0000000000030cd8	prfm	pldl1keep, [x12]
0000000000030cdc	sub	x12, x10, #0x780
0000000000030ce0	prfm	pldl1keep, [x12]
0000000000030ce4	sub	x12, x10, #0xfc0
0000000000030ce8	ldr	b4, [x12]
0000000000030cec	sub	x12, x10, #0x740
0000000000030cf0	prfm	pldl1keep, [x12]
0000000000030cf4	sub	x12, x10, #0xf80
0000000000030cf8	ld1.b	{ v4 }[1], [x12]
0000000000030cfc	sub	x12, x10, #0x700
0000000000030d00	prfm	pldl1keep, [x12]
0000000000030d04	sub	x12, x10, #0xf40
0000000000030d08	ld1.b	{ v4 }[2], [x12]
0000000000030d0c	sub	x12, x10, #0x6c0
0000000000030d10	prfm	pldl1keep, [x12]
0000000000030d14	sub	x12, x10, #0xf00
0000000000030d18	ld1.b	{ v4 }[3], [x12]
0000000000030d1c	sub	x12, x10, #0x680
0000000000030d20	prfm	pldl1keep, [x12]
0000000000030d24	sub	x12, x10, #0xec0
0000000000030d28	ld1.b	{ v4 }[4], [x12]
0000000000030d2c	sub	x12, x10, #0x640
0000000000030d30	prfm	pldl1keep, [x12]
0000000000030d34	sub	x12, x10, #0xe80
0000000000030d38	ld1.b	{ v4 }[5], [x12]
0000000000030d3c	sub	x12, x10, #0x600
0000000000030d40	prfm	pldl1keep, [x12]
0000000000030d44	sub	x12, x10, #0xe40
0000000000030d48	ld1.b	{ v4 }[6], [x12]
0000000000030d4c	sub	x12, x10, #0x5c0
0000000000030d50	prfm	pldl1keep, [x12]
0000000000030d54	sub	x12, x10, #0xe00
0000000000030d58	ld1.b	{ v4 }[7], [x12]
0000000000030d5c	sub	x12, x10, #0x580
0000000000030d60	prfm	pldl1keep, [x12]
0000000000030d64	sub	x12, x10, #0xdc0
0000000000030d68	ld1.b	{ v4 }[8], [x12]
0000000000030d6c	sub	x12, x10, #0x540
0000000000030d70	prfm	pldl1keep, [x12]
0000000000030d74	sub	x12, x10, #0xd80
0000000000030d78	ld1.b	{ v4 }[9], [x12]
0000000000030d7c	sub	x12, x10, #0x500
0000000000030d80	prfm	pldl1keep, [x12]
0000000000030d84	sub	x12, x10, #0xd40
0000000000030d88	ld1.b	{ v4 }[10], [x12]
0000000000030d8c	sub	x12, x10, #0x4c0
0000000000030d90	prfm	pldl1keep, [x12]
0000000000030d94	sub	x12, x10, #0xd00
0000000000030d98	ld1.b	{ v4 }[11], [x12]
0000000000030d9c	sub	x12, x10, #0x480
0000000000030da0	prfm	pldl1keep, [x12]
0000000000030da4	sub	x12, x10, #0xcc0
0000000000030da8	ld1.b	{ v4 }[12], [x12]
0000000000030dac	sub	x12, x10, #0x440
0000000000030db0	prfm	pldl1keep, [x12]
0000000000030db4	sub	x12, x10, #0xc80
0000000000030db8	ld1.b	{ v4 }[13], [x12]
0000000000030dbc	sub	x12, x10, #0x400
0000000000030dc0	prfm	pldl1keep, [x12]
0000000000030dc4	sub	x12, x10, #0xc40
0000000000030dc8	ld1.b	{ v4 }[14], [x12]
0000000000030dcc	sub	x12, x10, #0xc00
0000000000030dd0	ld1.b	{ v4 }[15], [x12]
0000000000030dd4	sub	x12, x10, #0x3c0
0000000000030dd8	prfm	pldl1keep, [x12]
0000000000030ddc	sub	x12, x10, #0x380
0000000000030de0	prfm	pldl1keep, [x12]
0000000000030de4	sub	x12, x10, #0xbc0
0000000000030de8	ldr	b5, [x12]
0000000000030dec	sub	x12, x10, #0x340
0000000000030df0	prfm	pldl1keep, [x12]
0000000000030df4	sub	x12, x10, #0xb80
0000000000030df8	ld1.b	{ v5 }[1], [x12]
0000000000030dfc	sub	x12, x10, #0x300
0000000000030e00	prfm	pldl1keep, [x12]
0000000000030e04	sub	x12, x10, #0xb40
0000000000030e08	ld1.b	{ v5 }[2], [x12]
0000000000030e0c	sub	x12, x10, #0x2c0
0000000000030e10	prfm	pldl1keep, [x12]
0000000000030e14	sub	x12, x10, #0xb00
0000000000030e18	ld1.b	{ v5 }[3], [x12]
0000000000030e1c	sub	x12, x10, #0x280
0000000000030e20	prfm	pldl1keep, [x12]
0000000000030e24	sub	x12, x10, #0xac0
0000000000030e28	ld1.b	{ v5 }[4], [x12]
0000000000030e2c	sub	x12, x10, #0x240
0000000000030e30	prfm	pldl1keep, [x12]
0000000000030e34	sub	x12, x10, #0xa80
0000000000030e38	ld1.b	{ v5 }[5], [x12]
0000000000030e3c	sub	x12, x10, #0x200
0000000000030e40	prfm	pldl1keep, [x12]
0000000000030e44	sub	x12, x10, #0xa40
0000000000030e48	ld1.b	{ v5 }[6], [x12]
0000000000030e4c	sub	x12, x10, #0x1c0
0000000000030e50	prfm	pldl1keep, [x12]
0000000000030e54	sub	x12, x10, #0xa00
0000000000030e58	ld1.b	{ v5 }[7], [x12]
0000000000030e5c	sub	x12, x10, #0x180
0000000000030e60	prfm	pldl1keep, [x12]
0000000000030e64	sub	x12, x10, #0x9c0
0000000000030e68	ld1.b	{ v5 }[8], [x12]
0000000000030e6c	sub	x12, x10, #0x140
0000000000030e70	prfm	pldl1keep, [x12]
0000000000030e74	sub	x12, x10, #0x980
0000000000030e78	ld1.b	{ v5 }[9], [x12]
0000000000030e7c	sub	x12, x10, #0x940
0000000000030e80	prfum	pldl1keep, [x10, #-0x100]
0000000000030e84	ld1.b	{ v5 }[10], [x12]
0000000000030e88	sub	x12, x10, #0x900
0000000000030e8c	prfum	pldl1keep, [x10, #-0xc0]
0000000000030e90	ld1.b	{ v5 }[11], [x12]
0000000000030e94	sub	x12, x10, #0x8c0
0000000000030e98	prfum	pldl1keep, [x10, #-0x80]
0000000000030e9c	ld1.b	{ v5 }[12], [x12]
0000000000030ea0	sub	x12, x10, #0x880
0000000000030ea4	prfum	pldl1keep, [x10, #-0x40]
0000000000030ea8	ld1.b	{ v5 }[13], [x12]
0000000000030eac	sub	x12, x10, #0x840
0000000000030eb0	prfm	pldl1keep, [x10]
0000000000030eb4	ld1.b	{ v5 }[14], [x12]
0000000000030eb8	sub	x12, x10, #0x800
0000000000030ebc	ld1.b	{ v5 }[15], [x12]
0000000000030ec0	and.16b	v6, v4, v16
0000000000030ec4	and.16b	v7, v5, v16
0000000000030ec8	cmeq.16b	v6, v6, #0
0000000000030ecc	cmeq.16b	v7, v7, #0
0000000000030ed0	bic.16b	v2, v2, v6
0000000000030ed4	and.16b	v4, v4, v17
0000000000030ed8	and.16b	v5, v5, v17
0000000000030edc	bic.16b	v3, v3, v7
0000000000030ee0	cmeq.16b	v4, v4, #0
0000000000030ee4	cmeq.16b	v5, v5, #0
0000000000030ee8	orn.16b	v0, v0, v4
0000000000030eec	orn.16b	v1, v1, v5
0000000000030ef0	add	x10, x10, #0x800
0000000000030ef4	subs	x11, x11, #0x20
0000000000030ef8	b.ne	0x30cd4
0000000000030efc	and.16b	v2, v3, v2
0000000000030f00	dup.2d	v3, v2[1]
0000000000030f04	and.16b	v2, v2, v3
0000000000030f08	dup.4s	v3, v2[1]
0000000000030f0c	and.16b	v2, v2, v3
0000000000030f10	dup.8h	v3, v2[1]
0000000000030f14	and.16b	v2, v2, v3
0000000000030f18	dup.16b	v3, v2[1]
0000000000030f1c	and.16b	v2, v2, v3
0000000000030f20	umov.b	w19, v2[0]
0000000000030f24	orr.16b	v0, v1, v0
0000000000030f28	dup.2d	v1, v0[1]
0000000000030f2c	orr.16b	v0, v0, v1
0000000000030f30	dup.4s	v1, v0[1]
0000000000030f34	orr.16b	v0, v0, v1
0000000000030f38	dup.8h	v1, v0[1]
0000000000030f3c	orr.16b	v0, v0, v1
0000000000030f40	dup.16b	v1, v0[1]
0000000000030f44	orr.16b	v0, v0, v1
0000000000030f48	umov.b	w10, v0[0]
0000000000030f4c	cmp	x8, x9
0000000000030f50	b.eq	0x30f7c
0000000000030f54	sub	x8, x8, x9
0000000000030f58	add	x9, x20, x9, lsl #6
0000000000030f5c	add	x9, x9, #0x79
0000000000030f60	ldrb	w11, [x9], #0x40
0000000000030f64	and	w12, w11, #0x4
0000000000030f68	and	w19, w19, w12, lsr #2
0000000000030f6c	and	w11, w11, #0x2
0000000000030f70	orr	w10, w10, w11, lsr #1
0000000000030f74	subs	x8, x8, #0x1
0000000000030f78	b.ne	0x30f60
0000000000030f7c	tbz	w10, #0x0, 0x30f9c
0000000000030f80	mov	w0, #0x5
0000000000030f84	bl	_mi_option_get
0000000000030f88	cmp	x0, #0x0
0000000000030f8c	cset	w8, eq
0000000000030f90	and	w19, w19, w8
0000000000030f94	mov	w4, #0x1
0000000000030f98	b	0x309dc
0000000000030f9c	mov	w4, #0x0
0000000000030fa0	b	0x309dc
0000000000030fa4	nop
0000000000030fa8	ldr	x19, #0x37058
0000000000030fac	cbz	x19, 0x30fc0
0000000000030fb0	bl	0x4ddf0 ; symbol stub for: _pthread_self
0000000000030fb4	bl	0x4dda8 ; symbol stub for: _pthread_mach_thread_np
0000000000030fb8	cmp	x19, w0, uxtw
0000000000030fbc	b.ne	0x30fd0
0000000000030fc0	ldr	x8, [x28]
0000000000030fc4	ldr	x8, [x8, #0x10]
0000000000030fc8	cmp	x8, x28
0000000000030fcc	b.eq	0x30ff0
0000000000030fd0	ldp	x29, x30, [sp, #0x60]
0000000000030fd4	ldp	x20, x19, [sp, #0x50]
0000000000030fd8	ldp	x22, x21, [sp, #0x40]
0000000000030fdc	ldp	x24, x23, [sp, #0x30]
0000000000030fe0	ldp	x26, x25, [sp, #0x20]
0000000000030fe4	ldp	x28, x27, [sp, #0x10]
0000000000030fe8	add	sp, sp, #0x70
0000000000030fec	ret
0000000000030ff0	nop
0000000000030ff4	ldr	x19, #0x5197c
0000000000030ff8	cbz	x19, 0x30fd0
0000000000030ffc	mov	x20, #0x0
0000000000031000	adr	x21, #0x41808
0000000000031004	nop
0000000000031008	mov	x22, #-0x1
000000000003100c	adr	x23, #0x51974
0000000000031010	nop
0000000000031014	b	0x31024
0000000000031018	add	x20, x20, #0x1
000000000003101c	cmp	x20, x19
0000000000031020	b.eq	0x30fd0
0000000000031024	add	x8, x21, x20, lsl #6
0000000000031028	ldr	x9, [x8]
000000000003102c	cbz	x9, 0x31018
0000000000031030	add	x9, x8, #0x10
0000000000031034	ldr	x10, [x8, #0x10]
0000000000031038	b	0x31048
000000000003103c	clrex
0000000000031040	mov	w11, #0x0
0000000000031044	cbnz	w11, 0x31064
0000000000031048	cbnz	x10, 0x31018
000000000003104c	ldxr	x10, [x9]
0000000000031050	cbnz	x10, 0x3103c
0000000000031054	stlxr	w11, x22, [x9]
0000000000031058	cbnz	w11, 0x31040
000000000003105c	mov	w11, #0x1
0000000000031060	cbz	w11, 0x31048
0000000000031064	add	x9, x21, x20, lsl #6
0000000000031068	add	x10, x9, #0x8
000000000003106c	ldar	x0, [x10]
0000000000031070	ldr	x2, [x9, #0x30]
0000000000031074	ldr	x9, [x9, #0x20]
0000000000031078	movi.16b	v0, #0x0
000000000003107c	stp	q0, q0, [x8, #0x20]
0000000000031080	stp	q0, q0, [x8]
0000000000031084	stlr	xzr, [x8]
0000000000031088	cbnz	x0, 0x31094
000000000003108c	b	0x31018
0000000000031090	wfe
0000000000031094	ldar	x8, [x23]
0000000000031098	cbnz	x8, 0x31090
000000000003109c	cmn	x9, #0x1
00000000000310a0	cset	w3, eq
00000000000310a4	mov	w1, #0x10000000
00000000000310a8	bl	__mi_arena_free
00000000000310ac	b	0x31018
00000000000310b0	add	x20, x8, #0x20
00000000000310b4	adrp	x21, 81 ; 0x82000
00000000000310b8	adrp	x22, 81 ; 0x82000
00000000000310bc	adr	x23, #0x51984
00000000000310c0	nop
00000000000310c4	adrp	x24, 81 ; 0x82000
00000000000310c8	adr	x25, #0x518f8
00000000000310cc	nop
00000000000310d0	adr	x26, #0x51930
00000000000310d4	nop
00000000000310d8	adr	x27, #0x519a8
00000000000310dc	nop
00000000000310e0	adr	x19, #0x518a0
00000000000310e4	nop
00000000000310e8	ldr	x8, [x21, #0x9c0]
00000000000310ec	lsr	x8, x8, #22
00000000000310f0	cbnz	x8, 0x311c8
00000000000310f4	ldr	x8, [x22, #0xa40]
00000000000310f8	cbz	x8, 0x30434
00000000000310fc	ldaxr	x8, [x23]
0000000000031100	stlxr	w9, xzr, [x23]
0000000000031104	cbnz	w9, 0x310fc
0000000000031108	cbz	x8, 0x30434
000000000003110c	ldr	x10, [x21, #0x9c0]
0000000000031110	lsr	x9, x10, #22
0000000000031114	cbnz	x9, 0x31144
0000000000031118	ldr	x9, [x24, #0xa80]
000000000003111c	add	w11, w10, #0x1
0000000000031120	and	x11, x11, #0x3fffff
0000000000031124	orr	x11, x11, x8
0000000000031128	ldaxr	x12, [x25]
000000000003112c	cmp	x12, x10
0000000000031130	b.ne	0x31140
0000000000031134	stlxr	w12, x11, [x25]
0000000000031138	cbnz	w12, 0x31128
000000000003113c	b	0x311a8
0000000000031140	clrex
0000000000031144	mov	x9, x8
0000000000031148	mov	x10, x9
000000000003114c	ldr	x9, [x9, #0x10]
0000000000031150	cbnz	x9, 0x31148
0000000000031154	ldr	x12, [x21, #0x9c0]
0000000000031158	b	0x3116c
000000000003115c	clrex
0000000000031160	mov	w13, #0x0
0000000000031164	mov	x12, x11
0000000000031168	cbnz	w13, 0x311a8
000000000003116c	ldr	x9, [x25, #0xc0]
0000000000031170	and	x11, x12, #0xffffffffffc00000
0000000000031174	add	x13, x10, #0x10
0000000000031178	stlr	x11, [x13]
000000000003117c	ldxr	x11, [x25]
0000000000031180	cmp	x11, x12
0000000000031184	b.ne	0x3115c
0000000000031188	add	w12, w12, #0x1
000000000003118c	and	x12, x12, #0x3fffff
0000000000031190	orr	x12, x12, x8
0000000000031194	stlxr	w13, x12, [x25]
0000000000031198	cbnz	w13, 0x31160
000000000003119c	mov	w13, #0x1
00000000000311a0	mov	x12, x11
00000000000311a4	cbz	w13, 0x3116c
00000000000311a8	ldxr	x8, [x26]
00000000000311ac	add	x8, x8, x9
00000000000311b0	stxr	w10, x8, [x26]
00000000000311b4	cbnz	w10, 0x311a8
00000000000311b8	ldxr	x8, [x27]
00000000000311bc	sub	x8, x8, x9
00000000000311c0	stxr	w10, x8, [x27]
00000000000311c4	cbnz	w10, 0x311b8
00000000000311c8	ldxr	x8, [x19]
00000000000311cc	add	x8, x8, #0x1
00000000000311d0	stxr	w9, x8, [x19]
00000000000311d4	cbnz	w9, 0x311c8
00000000000311d8	ldar	x9, [x25]
00000000000311dc	b	0x311f0
00000000000311e0	clrex
00000000000311e4	mov	w10, #0x0
00000000000311e8	mov	x9, x8
00000000000311ec	cbnz	w10, 0x31228
00000000000311f0	ands	x0, x9, #0xffffffffffc00000
00000000000311f4	b.eq	0x31274
00000000000311f8	ldr	x10, [x0, #0x10]
00000000000311fc	ldaxr	x8, [x25]
0000000000031200	cmp	x8, x9
0000000000031204	b.ne	0x311e0
0000000000031208	add	w9, w9, #0x1
000000000003120c	and	x9, x9, #0x3fffff
0000000000031210	orr	x9, x10, x9
0000000000031214	stlxr	w10, x9, [x25]
0000000000031218	cbnz	w10, 0x311e4
000000000003121c	mov	w10, #0x1
0000000000031220	mov	x9, x8
0000000000031224	cbz	w10, 0x311f0
0000000000031228	ldxr	x8, [x19]
000000000003122c	sub	x8, x8, #0x1
0000000000031230	stxr	w9, x8, [x19]
0000000000031234	cbnz	w9, 0x31228
0000000000031238	add	x8, x0, #0x10
000000000003123c	stlr	xzr, [x8]
0000000000031240	ldxr	x8, [x26]
0000000000031244	sub	x8, x8, #0x1
0000000000031248	stxr	w9, x8, [x26]
000000000003124c	cbnz	w9, 0x31240
0000000000031250	mov	x1, x28
0000000000031254	mov	x2, #0x0
0000000000031258	mov	x3, #0x0
000000000003125c	mov	x4, x20
0000000000031260	bl	_mi_segment_reclaim
0000000000031264	ldr	x8, [x21, #0x9c0]
0000000000031268	lsr	x8, x8, #22
000000000003126c	cbz	x8, 0x310f4
0000000000031270	b	0x311c8
0000000000031274	mov	w21, #0x0
0000000000031278	ldxr	x8, [x19]
000000000003127c	sub	x8, x8, #0x1
0000000000031280	stxr	w9, x8, [x19]
0000000000031284	cbnz	w9, 0x31278
0000000000031288	b	0x304f4
__mi_page_free_collect:
000000000003128c	stp	x20, x19, [sp, #-0x20]!
0000000000031290	stp	x29, x30, [sp, #0x10]
0000000000031294	add	x29, sp, #0x10
0000000000031298	mov	x20, x1
000000000003129c	mov	x19, x0
00000000000312a0	tbnz	w1, #0x0, 0x312b0
00000000000312a4	ldr	x8, [x19, #0x20]
00000000000312a8	cmp	x8, #0x4
00000000000312ac	b.lo	0x31330
00000000000312b0	add	x8, x19, #0x20
00000000000312b4	ldr	x9, [x19, #0x20]
00000000000312b8	b	0x312c8
00000000000312bc	clrex
00000000000312c0	mov	w11, #0x0
00000000000312c4	cbnz	w11, 0x312ec
00000000000312c8	mov	x10, x9
00000000000312cc	ldaxr	x9, [x8]
00000000000312d0	cmp	x9, x10
00000000000312d4	b.ne	0x312bc
00000000000312d8	and	x11, x10, #0x3
00000000000312dc	stlxr	w12, x11, [x8]
00000000000312e0	cbnz	w12, 0x312c0
00000000000312e4	mov	w11, #0x1
00000000000312e8	cbz	w11, 0x312c8
00000000000312ec	ands	x8, x10, #0xfffffffffffffffc
00000000000312f0	b.eq	0x31330
00000000000312f4	mov	w9, #0x0
00000000000312f8	ldrh	w10, [x19, #0x2]
00000000000312fc	mov	x12, x8
0000000000031300	mov	x11, x12
0000000000031304	add	w9, w9, #0x1
0000000000031308	ldr	x12, [x12]
000000000003130c	cmp	w9, w10
0000000000031310	ccmp	x12, #0x0, #0x4, ls
0000000000031314	b.ne	0x31300
0000000000031318	cmp	w9, w10
000000000003131c	b.ls	0x31360
0000000000031320	adr	x1, #0x21315 ; literal pool for: "corrupted thread-free list\n"
0000000000031324	nop
0000000000031328	mov	w0, #0xe
000000000003132c	bl	__mi_error_message
0000000000031330	ldr	x8, [x19, #0x18]
0000000000031334	cbz	x8, 0x31354
0000000000031338	ldr	x9, [x19, #0x8]
000000000003133c	cbnz	x9, 0x31384
0000000000031340	str	x8, [x19, #0x8]
0000000000031344	str	xzr, [x19, #0x18]
0000000000031348	ldrb	w8, [x19, #0x7]
000000000003134c	and	w8, w8, #0xfe
0000000000031350	strb	w8, [x19, #0x7]
0000000000031354	ldp	x29, x30, [sp, #0x10]
0000000000031358	ldp	x20, x19, [sp], #0x20
000000000003135c	ret
0000000000031360	ldr	x10, [x19, #0x18]
0000000000031364	str	x10, [x11]
0000000000031368	str	x8, [x19, #0x18]
000000000003136c	ldr	w8, [x19, #0x10]
0000000000031370	sub	w8, w8, w9
0000000000031374	str	w8, [x19, #0x10]
0000000000031378	ldr	x8, [x19, #0x18]
000000000003137c	cbnz	x8, 0x31338
0000000000031380	b	0x31354
0000000000031384	cbz	w20, 0x31354
0000000000031388	mov	x11, x8
000000000003138c	mov	x10, x11
0000000000031390	ldr	x11, [x11]
0000000000031394	cbnz	x11, 0x3138c
0000000000031398	str	x9, [x10]
000000000003139c	b	0x31340
__mi_page_free:
00000000000313a0	mov	x8, x2
00000000000313a4	ldrb	w9, [x0, #0x6]
00000000000313a8	and	w9, w9, #0xfffffffd
00000000000313ac	strb	w9, [x0, #0x6]
00000000000313b0	ldr	x9, [x0, #0x28]
00000000000313b4	ldr	x10, [x9]
00000000000313b8	ldr	x9, [x0, #0x28]
00000000000313bc	ldr	x13, [x0, #0x38]
00000000000313c0	cbz	x13, 0x313cc
00000000000313c4	ldr	x11, [x0, #0x30]
00000000000313c8	str	x11, [x13, #0x30]
00000000000313cc	mov	x11, x0
00000000000313d0	ldr	x12, [x11, #0x30]!
00000000000313d4	cbz	x12, 0x313dc
00000000000313d8	str	x13, [x12, #0x38]
00000000000313dc	ldr	x13, [x1, #0x8]
00000000000313e0	cmp	x13, x0
00000000000313e4	b.eq	0x313f8
00000000000313e8	ldr	x13, [x1]
00000000000313ec	cmp	x13, x0
00000000000313f0	b.ne	0x31584
00000000000313f4	b	0x3140c
00000000000313f8	ldr	x13, [x0, #0x38]
00000000000313fc	str	x13, [x1, #0x8]
0000000000031400	ldr	x13, [x1]
0000000000031404	cmp	x13, x0
0000000000031408	b.ne	0x31584
000000000003140c	str	x12, [x1]
0000000000031410	ldr	x15, [x1, #0x10]
0000000000031414	cmp	x15, #0x400
0000000000031418	b.hi	0x31584
000000000003141c	adr	x13, #0x1dc64
0000000000031420	nop
0000000000031424	cmp	x12, #0x0
0000000000031428	csel	x12, x13, x12, eq
000000000003142c	add	x13, x15, #0x7
0000000000031430	lsr	x13, x13, #3
0000000000031434	add	x14, x9, x13, lsl #3
0000000000031438	ldr	x14, [x14, #0x8]
000000000003143c	cmp	x14, x12
0000000000031440	b.eq	0x31584
0000000000031444	cmp	x15, #0x9
0000000000031448	b.hs	0x31454
000000000003144c	mov	x14, #0x0
0000000000031450	b	0x31528
0000000000031454	sub	x16, x13, #0x1
0000000000031458	clz	x17, x16
000000000003145c	mov	w14, #0x3f
0000000000031460	sub	w17, w14, w17
0000000000031464	and	w17, w17, #0xff
0000000000031468	sub	w2, w17, #0x2
000000000003146c	lsr	x16, x16, x2
0000000000031470	and	w16, w16, #0x3
0000000000031474	bfi	w16, w17, #2, #8
0000000000031478	sub	w16, w16, #0x3
000000000003147c	add	w17, w13, #0x1
0000000000031480	and	w17, w17, #0xfffffffe
0000000000031484	cmp	x15, #0x40
0000000000031488	csel	w17, w16, w17, hi
000000000003148c	add	x15, x9, #0x410
0000000000031490	sub	x16, x1, #0x18
0000000000031494	and	w17, w17, #0xff
0000000000031498	mov	w1, #0x7
000000000003149c	movk	w1, #0x20, lsl #16
00000000000314a0	ldr	x2, [x16, #0x10]
00000000000314a4	add	x3, x2, #0x7
00000000000314a8	lsr	x2, x3, #3
00000000000314ac	cmp	x3, #0x10
00000000000314b0	b.hs	0x314bc
00000000000314b4	mov	w3, #0x1
00000000000314b8	b	0x31504
00000000000314bc	cmp	x3, #0x47
00000000000314c0	b.hi	0x314d0
00000000000314c4	add	w3, w2, #0x1
00000000000314c8	and	w3, w3, #0xfffffffe
00000000000314cc	b	0x31504
00000000000314d0	cmp	x3, x1
00000000000314d4	b.ls	0x314e0
00000000000314d8	mov	w3, #0x49
00000000000314dc	b	0x31504
00000000000314e0	sub	x3, x2, #0x1
00000000000314e4	clz	x4, x3
00000000000314e8	sub	w4, w14, w4
00000000000314ec	and	w4, w4, #0xff
00000000000314f0	sub	w5, w4, #0x2
00000000000314f4	lsr	x3, x3, x5
00000000000314f8	and	w3, w3, #0x3
00000000000314fc	bfi	w3, w4, #2, #8
0000000000031500	sub	w3, w3, #0x3
0000000000031504	cmp	x16, x15
0000000000031508	b.ls	0x31518
000000000003150c	sub	x16, x16, #0x18
0000000000031510	cmp	w17, w3, uxtb
0000000000031514	b.eq	0x314a0
0000000000031518	cmp	x2, x13
000000000003151c	csinc	x14, x13, x2, hs
0000000000031520	cmp	x14, x13
0000000000031524	b.hi	0x31584
0000000000031528	sub	x15, x13, x14
000000000003152c	add	x15, x15, #0x1
0000000000031530	cmp	x15, #0x4
0000000000031534	b.lo	0x31568
0000000000031538	and	x16, x15, #0xfffffffffffffffc
000000000003153c	dup.2d	v0, x12
0000000000031540	add	x17, x9, x14, lsl #3
0000000000031544	add	x17, x17, #0x18
0000000000031548	mov	x1, x16
000000000003154c	stp	q0, q0, [x17, #-0x10]
0000000000031550	add	x17, x17, #0x20
0000000000031554	subs	x1, x1, #0x4
0000000000031558	b.ne	0x3154c
000000000003155c	cmp	x15, x16
0000000000031560	b.eq	0x31584
0000000000031564	add	x14, x14, x16
0000000000031568	sub	x13, x13, x14
000000000003156c	add	x13, x13, #0x1
0000000000031570	add	x14, x9, x14, lsl #3
0000000000031574	add	x14, x14, #0x8
0000000000031578	str	x12, [x14], #0x8
000000000003157c	subs	x13, x13, #0x1
0000000000031580	b.ne	0x31578
0000000000031584	add	x2, x10, #0x20
0000000000031588	ldr	x10, [x9, #0xbc8]
000000000003158c	sub	x10, x10, #0x1
0000000000031590	str	x10, [x9, #0xbc8]
0000000000031594	stp	xzr, xzr, [x11]
0000000000031598	ldrb	w9, [x0, #0x6]
000000000003159c	and	w9, w9, #0xfe
00000000000315a0	strb	w9, [x0, #0x6]
00000000000315a4	add	x9, x0, #0x28
00000000000315a8	stlr	xzr, [x9]
00000000000315ac	mov	x1, x8
00000000000315b0	b	__mi_segment_page_free
__mi_arena_free:
00000000000315b4	sub	sp, sp, #0x60
00000000000315b8	stp	x24, x23, [sp, #0x20]
00000000000315bc	stp	x22, x21, [sp, #0x30]
00000000000315c0	stp	x20, x19, [sp, #0x40]
00000000000315c4	stp	x29, x30, [sp, #0x50]
00000000000315c8	add	x29, sp, #0x50
00000000000315cc	cbz	x0, 0x316b8
00000000000315d0	mov	x20, x1
00000000000315d4	cbz	x1, 0x316b8
00000000000315d8	mov	x19, x0
00000000000315dc	cbz	x2, 0x31668
00000000000315e0	adr	x8, #0x51260
00000000000315e4	nop
00000000000315e8	add	x8, x8, w2, uxtb #3
00000000000315ec	ldr	x23, [x8, #0x3f8]
00000000000315f0	cbz	x23, 0x3168c
00000000000315f4	ldr	x8, [x23, #0x10]
00000000000315f8	cmp	x8, x2, lsr #14
00000000000315fc	b.ls	0x316a0
0000000000031600	lsr	x21, x2, #8
0000000000031604	mov	w8, #0xffffff
0000000000031608	add	x8, x20, x8
000000000003160c	lsr	x22, x8, #24
0000000000031610	ldrb	w9, [x23, #0x1d]
0000000000031614	cbnz	w9, 0x31640
0000000000031618	and	x1, x8, #0xffffffffff000000
000000000003161c	add	x4, sp, #0x1f
0000000000031620	mov	x0, x19
0000000000031624	mov	w2, #0x0
0000000000031628	mov	w3, #0x1
000000000003162c	bl	_mi_os_commitx
0000000000031630	ldr	x0, [x23, #0x30]
0000000000031634	mov	x1, x22
0000000000031638	mov	x2, x21
000000000003163c	bl	__mi_bitmap_unclaim_across
0000000000031640	add	x0, x23, #0x38
0000000000031644	mov	x1, x22
0000000000031648	mov	x2, x21
000000000003164c	bl	__mi_bitmap_unclaim_across
0000000000031650	tbnz	w0, #0x0, 0x316b8
0000000000031654	stp	x19, x20, [sp]
0000000000031658	adr	x1, #0x20f35 ; literal pool for: "trying to free an already freed block: %p, size %zu\n"
000000000003165c	nop
0000000000031660	mov	w0, #0x23
0000000000031664	b	0x316b4
0000000000031668	mov	x0, x19
000000000003166c	mov	x1, x20
0000000000031670	mov	x2, x3
0000000000031674	ldp	x29, x30, [sp, #0x50]
0000000000031678	ldp	x20, x19, [sp, #0x40]
000000000003167c	ldp	x22, x21, [sp, #0x30]
0000000000031680	ldp	x24, x23, [sp, #0x20]
0000000000031684	add	sp, sp, #0x60
0000000000031688	b	__mi_os_free_ex
000000000003168c	stp	x20, x2, [sp, #0x8]
0000000000031690	str	x19, [sp]
0000000000031694	adr	x1, #0x20e6b ; literal pool for: "trying to free from non-existent arena: %p, size %zu, memid: 0x%zx\n"
0000000000031698	nop
000000000003169c	b	0x316b0
00000000000316a0	stp	x20, x2, [sp, #0x8]
00000000000316a4	str	x19, [sp]
00000000000316a8	adr	x1, #0x20e9b ; literal pool for: "trying to free from non-existent arena block: %p, size %zu, memid: 0x%zx\n"
00000000000316ac	nop
00000000000316b0	mov	w0, #0x16
00000000000316b4	bl	__mi_error_message
00000000000316b8	ldp	x29, x30, [sp, #0x50]
00000000000316bc	ldp	x20, x19, [sp, #0x40]
00000000000316c0	ldp	x22, x21, [sp, #0x30]
00000000000316c4	ldp	x24, x23, [sp, #0x20]
00000000000316c8	add	sp, sp, #0x60
00000000000316cc	ret
__mi_bitmap_unclaim_across:
00000000000316d0	lsr	x12, x2, #6
00000000000316d4	ands	x8, x2, #0x3f
00000000000316d8	add	x9, x8, x1
00000000000316dc	mov	w10, #0x40
00000000000316e0	sub	x10, x10, x8
00000000000316e4	neg	x11, x8
00000000000316e8	mov	x13, #-0x1
00000000000316ec	lsl	x11, x13, x11
00000000000316f0	mvn	x11, x11
00000000000316f4	lsl	x11, x11, x8
00000000000316f8	csinv	x11, x11, xzr, ne
00000000000316fc	sub	x10, x1, x10
0000000000031700	lsr	x14, x10, #6
0000000000031704	ands	x10, x10, #0x3f
0000000000031708	lsl	x10, x13, x10
000000000003170c	csel	x13, x13, x13, eq
0000000000031710	csinv	x15, xzr, x10, eq
0000000000031714	mov	x10, #-0x1
0000000000031718	lsl	x16, x10, x1
000000000003171c	mvn	x16, x16
0000000000031720	lsl	x8, x16, x8
0000000000031724	cmp	x1, #0x0
0000000000031728	csel	x16, xzr, xzr, eq
000000000003172c	csel	x8, xzr, x8, eq
0000000000031730	cmp	x1, #0x3f
0000000000031734	csel	x16, xzr, x16, hi
0000000000031738	csel	x8, x10, x8, hi
000000000003173c	cmp	x9, #0x40
0000000000031740	csel	x9, x13, x16, hi
0000000000031744	csel	x10, x11, x8, hi
0000000000031748	csel	x8, x15, x16, hi
000000000003174c	csel	x11, x14, x16, hi
0000000000031750	add	x12, x0, x12, lsl #3
0000000000031754	mvn	x13, x10
0000000000031758	ldaxr	x14, [x12]
000000000003175c	and	x15, x14, x13
0000000000031760	stlxr	w16, x15, [x12]
0000000000031764	cbnz	w16, 0x31758
0000000000031768	bics	xzr, x10, x14
000000000003176c	cset	w0, eq
0000000000031770	add	x10, x12, #0x8
0000000000031774	cbz	x11, 0x317a4
0000000000031778	mvn	x12, x9
000000000003177c	sub	x11, x11, #0x1
0000000000031780	ldaxr	x13, [x10]
0000000000031784	and	x14, x13, x12
0000000000031788	stlxr	w15, x14, [x10]
000000000003178c	cbnz	w15, 0x31780
0000000000031790	bics	xzr, x9, x13
0000000000031794	cset	w13, eq
0000000000031798	and	w0, w0, w13
000000000003179c	add	x10, x10, #0x8
00000000000317a0	cbnz	x11, 0x3177c
00000000000317a4	cbz	x8, 0x317c8
00000000000317a8	mvn	x9, x8
00000000000317ac	ldaxr	x11, [x10]
00000000000317b0	and	x12, x11, x9
00000000000317b4	stlxr	w13, x12, [x10]
00000000000317b8	cbnz	w13, 0x317ac
00000000000317bc	bics	xzr, x8, x11
00000000000317c0	cset	w8, eq
00000000000317c4	and	w0, w0, w8
00000000000317c8	ret
_mi_os_commitx:
00000000000317cc	sub	sp, sp, #0x50
00000000000317d0	stp	x22, x21, [sp, #0x20]
00000000000317d4	stp	x20, x19, [sp, #0x30]
00000000000317d8	stp	x29, x30, [sp, #0x40]
00000000000317dc	add	x29, sp, #0x40
00000000000317e0	cbz	x4, 0x317e8
00000000000317e4	strb	wzr, [x4]
00000000000317e8	mov	w8, #0x1
00000000000317ec	cbz	x0, 0x31840
00000000000317f0	cbz	x1, 0x31840
00000000000317f4	nop
00000000000317f8	ldr	x8, #0x36ca8
00000000000317fc	fmov	d0, x8
0000000000031800	cnt.8b	v0, v0
0000000000031804	uaddlv.8b	h0, v0
0000000000031808	fmov	w9, s0
000000000003180c	cbz	w3, 0x31858
0000000000031810	add	x10, x8, x0
0000000000031814	sub	x10, x10, #0x1
0000000000031818	cmp	x9, #0x2
000000000003181c	b.hs	0x3199c
0000000000031820	neg	x8, x8
0000000000031824	and	x19, x10, x8
0000000000031828	add	x9, x0, x1
000000000003182c	and	x8, x8, x9
0000000000031830	sub	x20, x8, x19
0000000000031834	cmp	x20, #0x1
0000000000031838	b.ge	0x31884
000000000003183c	mov	w8, #0x1
0000000000031840	mov	x0, x8
0000000000031844	ldp	x29, x30, [sp, #0x40]
0000000000031848	ldp	x20, x19, [sp, #0x30]
000000000003184c	ldp	x22, x21, [sp, #0x20]
0000000000031850	add	sp, sp, #0x50
0000000000031854	ret
0000000000031858	cmp	x9, #0x2
000000000003185c	b.hs	0x319c0
0000000000031860	neg	x9, x8
0000000000031864	and	x19, x9, x0
0000000000031868	add	x10, x0, x1
000000000003186c	add	x8, x8, x10
0000000000031870	sub	x8, x8, #0x1
0000000000031874	and	x8, x8, x9
0000000000031878	sub	x20, x8, x19
000000000003187c	cmp	x20, #0x1
0000000000031880	b.lt	0x3183c
0000000000031884	cbz	w2, 0x31910
0000000000031888	adr	x9, #0x51630
000000000003188c	nop
0000000000031890	ldxr	x8, [x9]
0000000000031894	add	x8, x8, x1
0000000000031898	stxr	w10, x8, [x9]
000000000003189c	cbnz	w10, 0x31890
00000000000318a0	nop
00000000000318a4	ldr	x11, #0x5160c
00000000000318a8	adr	x9, #0x51608
00000000000318ac	nop
00000000000318b0	b	0x318c4
00000000000318b4	clrex
00000000000318b8	mov	w12, #0x0
00000000000318bc	mov	x11, x10
00000000000318c0	cbnz	w12, 0x318ec
00000000000318c4	cmp	x11, x8
00000000000318c8	b.ge	0x318ec
00000000000318cc	ldxr	x10, [x9]
00000000000318d0	cmp	x10, x11
00000000000318d4	b.ne	0x318b4
00000000000318d8	stlxr	w11, x8, [x9]
00000000000318dc	cbnz	w11, 0x318b8
00000000000318e0	mov	w12, #0x1
00000000000318e4	mov	x11, x10
00000000000318e8	cbz	w12, 0x318c4
00000000000318ec	cmp	x1, #0x1
00000000000318f0	b.lt	0x319ec
00000000000318f4	adr	x8, #0x515ac
00000000000318f8	nop
00000000000318fc	ldxr	x9, [x8]
0000000000031900	add	x9, x9, x1
0000000000031904	stxr	w10, x9, [x8]
0000000000031908	cbnz	w10, 0x318fc
000000000003190c	b	0x31a08
0000000000031910	neg	x8, x1
0000000000031914	adr	x9, #0x515a4
0000000000031918	nop
000000000003191c	ldxr	x10, [x9]
0000000000031920	add	x11, x10, x8
0000000000031924	stxr	w12, x11, [x9]
0000000000031928	cbnz	w12, 0x3191c
000000000003192c	sub	x9, x10, x1
0000000000031930	nop
0000000000031934	ldr	x12, #0x5157c
0000000000031938	adr	x10, #0x51578
000000000003193c	nop
0000000000031940	b	0x31954
0000000000031944	clrex
0000000000031948	mov	w13, #0x0
000000000003194c	mov	x12, x11
0000000000031950	cbnz	w13, 0x3197c
0000000000031954	cmp	x12, x9
0000000000031958	b.ge	0x3197c
000000000003195c	ldxr	x11, [x10]
0000000000031960	cmp	x11, x12
0000000000031964	b.ne	0x31944
0000000000031968	stlxr	w12, x9, [x10]
000000000003196c	cbnz	w12, 0x31948
0000000000031970	mov	w13, #0x1
0000000000031974	mov	x12, x11
0000000000031978	cbz	w13, 0x31954
000000000003197c	tbnz	x1, #0x3f, 0x31af8
0000000000031980	adr	x8, #0x51528
0000000000031984	nop
0000000000031988	ldxr	x9, [x8]
000000000003198c	add	x9, x9, x1
0000000000031990	stxr	w10, x9, [x8]
0000000000031994	cbnz	w10, 0x31988
0000000000031998	b	0x31b10
000000000003199c	udiv	x9, x10, x8
00000000000319a0	mul	x19, x9, x8
00000000000319a4	add	x9, x0, x1
00000000000319a8	udiv	x9, x9, x8
00000000000319ac	mul	x8, x9, x8
00000000000319b0	sub	x20, x8, x19
00000000000319b4	cmp	x20, #0x1
00000000000319b8	b.ge	0x31884
00000000000319bc	b	0x3183c
00000000000319c0	udiv	x9, x0, x8
00000000000319c4	mul	x19, x9, x8
00000000000319c8	add	x9, x0, x1
00000000000319cc	add	x9, x8, x9
00000000000319d0	sub	x9, x9, #0x1
00000000000319d4	udiv	x9, x9, x8
00000000000319d8	mul	x8, x9, x8
00000000000319dc	sub	x20, x8, x19
00000000000319e0	cmp	x20, #0x1
00000000000319e4	b.ge	0x31884
00000000000319e8	b	0x3183c
00000000000319ec	neg	x8, x1
00000000000319f0	adr	x9, #0x514b8
00000000000319f4	nop
00000000000319f8	ldxr	x10, [x9]
00000000000319fc	add	x10, x10, x8
0000000000031a00	stxr	w11, x10, [x9]
0000000000031a04	cbnz	w11, 0x319f8
0000000000031a08	adr	x8, #0x51438
0000000000031a0c	nop
0000000000031a10	add	x9, x8, #0x1e0
0000000000031a14	cmp	x9, x8
0000000000031a18	b.lo	0x31ac8
0000000000031a1c	adr	x8, #0x5160c
0000000000031a20	nop
0000000000031a24	ldxr	x9, [x8]
0000000000031a28	add	x9, x9, #0x1
0000000000031a2c	stxr	w10, x9, [x8]
0000000000031a30	cbnz	w10, 0x31a24
0000000000031a34	adr	x8, #0x515ec
0000000000031a38	nop
0000000000031a3c	ldxr	x9, [x8]
0000000000031a40	add	x9, x9, #0x1
0000000000031a44	stxr	w10, x9, [x8]
0000000000031a48	cbnz	w10, 0x31a3c
0000000000031a4c	mov	x0, x19
0000000000031a50	mov	x1, x20
0000000000031a54	mov	w2, #0x3
0000000000031a58	bl	0x4dc28 ; symbol stub for: _mprotect
0000000000031a5c	cbz	w0, 0x31a64
0000000000031a60	bl	0x4dac0 ; symbol stub for: ___error
0000000000031a64	mov	x0, x19
0000000000031a68	mov	x1, x20
0000000000031a6c	mov	w2, #0x8
0000000000031a70	bl	0x4dbd4 ; symbol stub for: _madvise
0000000000031a74	cbz	w0, 0x31b78
0000000000031a78	mov	x21, x0
0000000000031a7c	bl	0x4dac0 ; symbol stub for: ___error
0000000000031a80	ldr	w8, [x0]
0000000000031a84	adr	x22, #0x20b47 ; literal pool for: "commit"
0000000000031a88	nop
0000000000031a8c	cmp	w8, #0x23
0000000000031a90	b.ne	0x31b48
0000000000031a94	bl	0x4dac0 ; symbol stub for: ___error
0000000000031a98	str	wzr, [x0]
0000000000031a9c	mov	x0, x19
0000000000031aa0	mov	x1, x20
0000000000031aa4	mov	w2, #0x8
0000000000031aa8	bl	0x4dbd4 ; symbol stub for: _madvise
0000000000031aac	cbz	w0, 0x31b78
0000000000031ab0	mov	x21, x0
0000000000031ab4	bl	0x4dac0 ; symbol stub for: ___error
0000000000031ab8	ldr	w8, [x0]
0000000000031abc	cmp	w8, #0x23
0000000000031ac0	b.eq	0x31a94
0000000000031ac4	b	0x31b48
0000000000031ac8	adr	x8, #0x51558
0000000000031acc	nop
0000000000031ad0	ldp	x10, x9, [x8]
0000000000031ad4	add	x9, x9, #0x1
0000000000031ad8	add	x10, x10, #0x1
0000000000031adc	stp	x10, x9, [x8]
0000000000031ae0	mov	x0, x19
0000000000031ae4	mov	x1, x20
0000000000031ae8	mov	w2, #0x3
0000000000031aec	bl	0x4dc28 ; symbol stub for: _mprotect
0000000000031af0	cbnz	w0, 0x31a60
0000000000031af4	b	0x31a64
0000000000031af8	adr	x9, #0x513a8
0000000000031afc	nop
0000000000031b00	ldxr	x10, [x9]
0000000000031b04	add	x10, x10, x8
0000000000031b08	stxr	w11, x10, [x9]
0000000000031b0c	cbnz	w11, 0x31b00
0000000000031b10	mov	x0, x19
0000000000031b14	mov	x1, x20
0000000000031b18	mov	w2, #0x0
0000000000031b1c	mov	w3, #0x1052
0000000000031b20	mov	w4, #-0x1
0000000000031b24	mov	x5, #0x0
0000000000031b28	bl	0x4dc1c ; symbol stub for: _mmap
0000000000031b2c	cmp	x0, x19
0000000000031b30	b.eq	0x31b78
0000000000031b34	bl	0x4dac0 ; symbol stub for: ___error
0000000000031b38	ldr	w21, [x0]
0000000000031b3c	cbz	w21, 0x31b78
0000000000031b40	adr	x22, #0x20a82 ; literal pool for: "decommit"
0000000000031b44	nop
0000000000031b48	stp	x20, x21, [sp, #0x10]
0000000000031b4c	stp	x22, x19, [sp]
0000000000031b50	adr	x0, #0x20a82 ; literal pool for: "%s error: start: %p, csize: 0x%x, err: %i\n"
0000000000031b54	nop
0000000000031b58	bl	__mi_warning_message
0000000000031b5c	mov	w8, #0x0
0000000000031b60	mov	x0, x8
0000000000031b64	ldp	x29, x30, [sp, #0x40]
0000000000031b68	ldp	x20, x19, [sp, #0x30]
0000000000031b6c	ldp	x22, x21, [sp, #0x20]
0000000000031b70	add	sp, sp, #0x50
0000000000031b74	ret
0000000000031b78	mov	w8, #0x1
0000000000031b7c	mov	x0, x8
0000000000031b80	ldp	x29, x30, [sp, #0x40]
0000000000031b84	ldp	x20, x19, [sp, #0x30]
0000000000031b88	ldp	x22, x21, [sp, #0x20]
0000000000031b8c	add	sp, sp, #0x50
0000000000031b90	ret
__mi_mem_free:
0000000000031b94	stp	x26, x25, [sp, #-0x50]!
0000000000031b98	stp	x24, x23, [sp, #0x10]
0000000000031b9c	stp	x22, x21, [sp, #0x20]
0000000000031ba0	stp	x20, x19, [sp, #0x30]
0000000000031ba4	stp	x29, x30, [sp, #0x40]
0000000000031ba8	add	x29, sp, #0x40
0000000000031bac	cbz	x0, 0x31ce0
0000000000031bb0	cbz	x1, 0x31ce0
0000000000031bb4	mov	x19, x0
0000000000031bb8	nop
0000000000031bbc	ldr	x8, #0x368e4
0000000000031bc0	add	x9, x1, x8
0000000000031bc4	sub	x9, x9, #0x1
0000000000031bc8	sub	x10, x8, #0x1
0000000000031bcc	udiv	x11, x9, x8
0000000000031bd0	mul	x11, x11, x8
0000000000031bd4	neg	x12, x8
0000000000031bd8	and	x9, x9, x12
0000000000031bdc	tst	x8, x10
0000000000031be0	csel	x20, x11, x9, ne
0000000000031be4	tbnz	w2, #0x0, 0x31cf8
0000000000031be8	mov	w8, #0x4000000
0000000000031bec	cmp	x20, x8
0000000000031bf0	b.hi	0x31ce0
0000000000031bf4	lsr	x23, x2, #7
0000000000031bf8	ubfx	x21, x2, #1, #6
0000000000031bfc	mov	w8, #0x3fffff
0000000000031c00	add	x25, x20, x8
0000000000031c04	lsr	x22, x25, #22
0000000000031c08	adr	x24, #0x40c00
0000000000031c0c	nop
0000000000031c10	add	x9, x24, x23, lsl #6
0000000000031c14	ldar	x8, [x9]
0000000000031c18	add	x9, x9, #0x8
0000000000031c1c	ldar	x9, [x9]
0000000000031c20	add	x9, x9, x21, lsl #22
0000000000031c24	add	x10, x22, x21
0000000000031c28	cmp	x10, #0x40
0000000000031c2c	ccmp	x9, x19, #0x0, ls
0000000000031c30	b.ne	0x31ce0
0000000000031c34	and	x9, x20, #0x3fffff
0000000000031c38	cmp	x9, #0x0
0000000000031c3c	ccmp	w3, #0x0, #0x4, eq
0000000000031c40	b.eq	0x31c74
0000000000031c44	add	x9, x24, x23, lsl #6
0000000000031c48	add	x9, x9, #0x20
0000000000031c4c	mov	x10, #-0x1
0000000000031c50	lsl	x10, x10, x22
0000000000031c54	mvn	x10, x10
0000000000031c58	lsl	x10, x10, x21
0000000000031c5c	cmp	x22, #0x0
0000000000031c60	csel	x10, xzr, x10, eq
0000000000031c64	ldaxr	x11, [x9]
0000000000031c68	orr	x11, x11, x10
0000000000031c6c	stlxr	w12, x11, [x9]
0000000000031c70	cbnz	w12, 0x31c64
0000000000031c74	cbz	w4, 0x31ca8
0000000000031c78	add	x9, x24, x23, lsl #6
0000000000031c7c	add	x9, x9, #0x28
0000000000031c80	mov	x10, #-0x1
0000000000031c84	lsl	x10, x10, x22
0000000000031c88	mvn	x10, x10
0000000000031c8c	lsl	x10, x10, x21
0000000000031c90	cmp	x22, #0x0
0000000000031c94	csel	x10, xzr, x10, eq
0000000000031c98	ldaxr	x11, [x9]
0000000000031c9c	orr	x11, x11, x10
0000000000031ca0	stlxr	w12, x11, [x9]
0000000000031ca4	cbnz	w12, 0x31c98
0000000000031ca8	tst	x8, #0x300
0000000000031cac	b.eq	0x31d1c
0000000000031cb0	add	x8, x24, x23, lsl #6
0000000000031cb4	add	x8, x8, #0x10
0000000000031cb8	mov	x9, #-0x1
0000000000031cbc	lsl	x10, x9, x22
0000000000031cc0	mvn	x10, x10
0000000000031cc4	lsl	x10, x10, x21
0000000000031cc8	cmp	x22, #0x0
0000000000031ccc	csinv	x9, x9, x10, eq
0000000000031cd0	ldaxr	x10, [x8]
0000000000031cd4	and	x10, x10, x9
0000000000031cd8	stlxr	w11, x10, [x8]
0000000000031cdc	cbnz	w11, 0x31cd0
0000000000031ce0	ldp	x29, x30, [sp, #0x40]
0000000000031ce4	ldp	x20, x19, [sp, #0x30]
0000000000031ce8	ldp	x22, x21, [sp, #0x20]
0000000000031cec	ldp	x24, x23, [sp, #0x10]
0000000000031cf0	ldp	x26, x25, [sp], #0x50
0000000000031cf4	ret
0000000000031cf8	lsr	x2, x2, #1
0000000000031cfc	mov	x0, x19
0000000000031d00	mov	x1, x20
0000000000031d04	ldp	x29, x30, [sp, #0x40]
0000000000031d08	ldp	x20, x19, [sp, #0x30]
0000000000031d0c	ldp	x22, x21, [sp, #0x20]
0000000000031d10	ldp	x24, x23, [sp, #0x10]
0000000000031d14	ldp	x26, x25, [sp], #0x50
0000000000031d18	b	__mi_arena_free
0000000000031d1c	mov	w0, #0xc
0000000000031d20	bl	_mi_option_get
0000000000031d24	cbz	x0, 0x31cb0
0000000000031d28	mov	w0, #0x3
0000000000031d2c	bl	_mi_option_get
0000000000031d30	cbnz	x0, 0x31d40
0000000000031d34	mov	w0, #0x5
0000000000031d38	bl	_mi_option_get
0000000000031d3c	cbz	x0, 0x31cb0
0000000000031d40	add	x8, x24, x23, lsl #6
0000000000031d44	add	x8, x8, #0x28
0000000000031d48	mov	x9, #-0x1
0000000000031d4c	lsl	x9, x9, x22
0000000000031d50	mvn	x9, x9
0000000000031d54	lsl	x9, x9, x21
0000000000031d58	cmp	x22, #0x0
0000000000031d5c	csel	x9, xzr, x9, eq
0000000000031d60	ldaxr	x10, [x8]
0000000000031d64	orr	x11, x10, x9
0000000000031d68	stlxr	w12, x11, [x8]
0000000000031d6c	cbnz	w12, 0x31d60
0000000000031d70	bics	xzr, x9, x10
0000000000031d74	b.eq	0x31cb0
0000000000031d78	adr	x8, #0x50c08
0000000000031d7c	nop
0000000000031d80	ldar	x9, [x8]
0000000000031d84	cbz	x9, 0x31d94
0000000000031d88	wfe
0000000000031d8c	ldar	x9, [x8]
0000000000031d90	cbnz	x9, 0x31d88
0000000000031d94	and	x1, x25, #0xffffffffffc00000
0000000000031d98	mov	x0, x19
0000000000031d9c	bl	__mi_os_reset
0000000000031da0	add	x8, x24, x23, lsl #6
0000000000031da4	add	x8, x8, #0x10
0000000000031da8	mov	w9, #0xfc00000
0000000000031dac	cmp	x20, x9
0000000000031db0	b.ls	0x31cb8
0000000000031db4	mov	x9, #0x0
0000000000031db8	b	0x31cd0
__mi_os_reset:
0000000000031dbc	sub	sp, sp, #0x50
0000000000031dc0	stp	x22, x21, [sp, #0x20]
0000000000031dc4	stp	x20, x19, [sp, #0x30]
0000000000031dc8	stp	x29, x30, [sp, #0x40]
0000000000031dcc	add	x29, sp, #0x40
0000000000031dd0	mov	x20, x1
0000000000031dd4	mov	x21, x0
0000000000031dd8	mov	w0, #0x5
0000000000031ddc	bl	_mi_option_get
0000000000031de0	cbz	x0, 0x31e10
0000000000031de4	add	x4, sp, #0x1f
0000000000031de8	mov	x0, x21
0000000000031dec	mov	x1, x20
0000000000031df0	mov	w2, #0x0
0000000000031df4	mov	w3, #0x1
0000000000031df8	bl	_mi_os_commitx
0000000000031dfc	ldp	x29, x30, [sp, #0x40]
0000000000031e00	ldp	x20, x19, [sp, #0x30]
0000000000031e04	ldp	x22, x21, [sp, #0x20]
0000000000031e08	add	sp, sp, #0x50
0000000000031e0c	ret
0000000000031e10	cbz	x21, 0x31dfc
0000000000031e14	cbz	x20, 0x31dfc
0000000000031e18	nop
0000000000031e1c	ldr	x8, #0x36684
0000000000031e20	add	x9, x21, x8
0000000000031e24	sub	x9, x9, #0x1
0000000000031e28	sub	x10, x8, #0x1
0000000000031e2c	tst	x8, x10
0000000000031e30	b.ne	0x31e54
0000000000031e34	neg	x8, x8
0000000000031e38	and	x19, x9, x8
0000000000031e3c	add	x9, x21, x20
0000000000031e40	and	x8, x8, x9
0000000000031e44	sub	x20, x8, x19
0000000000031e48	cmp	x20, #0x1
0000000000031e4c	b.ge	0x31e74
0000000000031e50	b	0x31dfc
0000000000031e54	udiv	x9, x9, x8
0000000000031e58	mul	x19, x9, x8
0000000000031e5c	add	x9, x21, x20
0000000000031e60	udiv	x9, x9, x8
0000000000031e64	mul	x8, x9, x8
0000000000031e68	sub	x20, x8, x19
0000000000031e6c	cmp	x20, #0x1
0000000000031e70	b.lt	0x31dfc
0000000000031e74	adr	x9, #0x51064
0000000000031e78	nop
0000000000031e7c	ldxr	x8, [x9]
0000000000031e80	add	x8, x8, x20
0000000000031e84	stxr	w10, x8, [x9]
0000000000031e88	cbnz	w10, 0x31e7c
0000000000031e8c	nop
0000000000031e90	ldr	x11, #0x51040
0000000000031e94	adr	x9, #0x5103c
0000000000031e98	nop
0000000000031e9c	b	0x31eb0
0000000000031ea0	clrex
0000000000031ea4	mov	w12, #0x0
0000000000031ea8	mov	x11, x10
0000000000031eac	cbnz	w12, 0x31ed8
0000000000031eb0	cmp	x11, x8
0000000000031eb4	b.ge	0x31ed8
0000000000031eb8	ldxr	x10, [x9]
0000000000031ebc	cmp	x10, x11
0000000000031ec0	b.ne	0x31ea0
0000000000031ec4	stlxr	w11, x8, [x9]
0000000000031ec8	cbnz	w11, 0x31ea4
0000000000031ecc	mov	w12, #0x1
0000000000031ed0	mov	x11, x10
0000000000031ed4	cbz	w12, 0x31eb0
0000000000031ed8	cmp	x20, #0x1
0000000000031edc	b.lt	0x31efc
0000000000031ee0	adr	x8, #0x50fe0
0000000000031ee4	nop
0000000000031ee8	ldxr	x9, [x8]
0000000000031eec	add	x9, x9, x20
0000000000031ef0	stxr	w10, x9, [x8]
0000000000031ef4	cbnz	w10, 0x31ee8
0000000000031ef8	b	0x31f18
0000000000031efc	neg	x8, x20
0000000000031f00	adr	x9, #0x50fc8
0000000000031f04	nop
0000000000031f08	ldxr	x10, [x9]
0000000000031f0c	add	x10, x10, x8
0000000000031f10	stxr	w11, x10, [x9]
0000000000031f14	cbnz	w11, 0x31f08
0000000000031f18	nop
0000000000031f1c	ldr	x21, #0x3659c
0000000000031f20	mov	x0, x19
0000000000031f24	mov	x1, x20
0000000000031f28	mov	x2, x21
0000000000031f2c	bl	0x4dbd4 ; symbol stub for: _madvise
0000000000031f30	cbz	w0, 0x31dfc
0000000000031f34	bl	0x4dac0 ; symbol stub for: ___error
0000000000031f38	ldr	w22, [x0]
0000000000031f3c	bl	0x4dac0 ; symbol stub for: ___error
0000000000031f40	cmp	w22, #0x23
0000000000031f44	b.ne	0x31f64
0000000000031f48	str	wzr, [x0]
0000000000031f4c	mov	x0, x19
0000000000031f50	mov	x1, x20
0000000000031f54	mov	x2, x21
0000000000031f58	bl	0x4dbd4 ; symbol stub for: _madvise
0000000000031f5c	cbnz	w0, 0x31f34
0000000000031f60	b	0x31dfc
0000000000031f64	cmp	w21, #0x7
0000000000031f68	b.ne	0x31f9c
0000000000031f6c	ldr	w8, [x0]
0000000000031f70	cmp	w8, #0x16
0000000000031f74	b.ne	0x31f9c
0000000000031f78	adr	x8, #0x36540
0000000000031f7c	nop
0000000000031f80	mov	w9, #0x4
0000000000031f84	stlr	x9, [x8]
0000000000031f88	mov	x0, x19
0000000000031f8c	mov	x1, x20
0000000000031f90	mov	w2, #0x4
0000000000031f94	bl	0x4dbd4 ; symbol stub for: _madvise
0000000000031f98	cbz	w0, 0x31dfc
0000000000031f9c	bl	0x4dac0 ; symbol stub for: ___error
0000000000031fa0	ldr	w8, [x0]
0000000000031fa4	stp	x20, x8, [sp, #0x8]
0000000000031fa8	str	x19, [sp]
0000000000031fac	adr	x0, #0x20651 ; literal pool for: "madvise reset error: start: %p, csize: 0x%x, errno: %i\n"
0000000000031fb0	nop
0000000000031fb4	bl	__mi_warning_message
0000000000031fb8	ldp	x29, x30, [sp, #0x40]
0000000000031fbc	ldp	x20, x19, [sp, #0x30]
0000000000031fc0	ldp	x22, x21, [sp, #0x20]
0000000000031fc4	add	sp, sp, #0x50
0000000000031fc8	ret
__mi_segment_page_free:
0000000000031fcc	sub	sp, sp, #0x60
0000000000031fd0	stp	x26, x25, [sp, #0x10]
0000000000031fd4	stp	x24, x23, [sp, #0x20]
0000000000031fd8	stp	x22, x21, [sp, #0x30]
0000000000031fdc	stp	x20, x19, [sp, #0x40]
0000000000031fe0	stp	x29, x30, [sp, #0x50]
0000000000031fe4	add	x29, sp, #0x50
0000000000031fe8	mov	x20, x2
0000000000031fec	mov	x21, x1
0000000000031ff0	mov	x22, x0
0000000000031ff4	and	x19, x0, #0xffffffffffc00000
0000000000031ff8	mov	w0, #0xa
0000000000031ffc	bl	_mi_option_get
0000000000032000	cbz	x0, 0x320e8
0000000000032004	mov	x0, sp
0000000000032008	mov	x1, #0x0
000000000003200c	bl	0x4dbbc ; symbol stub for: _gettimeofday
0000000000032010	ldr	x23, [x20, #0x28]
0000000000032014	cbz	x23, 0x320e4
0000000000032018	ldr	x8, [sp]
000000000003201c	ldr	w9, [sp, #0x8]
0000000000032020	mov	w10, #0x4dd3
0000000000032024	movk	w10, #0x1062, lsl #16
0000000000032028	smull	x9, w9, w10
000000000003202c	lsr	x10, x9, #63
0000000000032030	asr	x9, x9, #38
0000000000032034	add	w9, w9, w10
0000000000032038	mov	w10, #0x3e8
000000000003203c	madd	w24, w8, w10, w9
0000000000032040	mov	w25, #0x1
0000000000032044	b	0x32054
0000000000032048	str	wzr, [x26, #0x10]
000000000003204c	stp	xzr, xzr, [x26, #0x30]
0000000000032050	cbz	x23, 0x320e4
0000000000032054	mov	x26, x23
0000000000032058	ldr	w8, [x23, #0x10]
000000000003205c	cmp	w8, w24
0000000000032060	b.gt	0x32194
0000000000032064	ldr	x23, [x26, #0x38]
0000000000032068	mov	w0, #0xa
000000000003206c	bl	_mi_option_get
0000000000032070	cbz	x0, 0x32048
0000000000032074	and	x9, x26, #0xffffffffffc00000
0000000000032078	ldrb	w8, [x9, #0x8]
000000000003207c	cbnz	w8, 0x32048
0000000000032080	ldrb	w8, [x26, #0x1]
0000000000032084	and	w10, w8, #0x7
0000000000032088	cmp	w10, #0x4
000000000003208c	b.ne	0x32048
0000000000032090	ldr	w10, [x9, #0x70]
0000000000032094	cmp	w10, #0x3
0000000000032098	b.ne	0x320b0
000000000003209c	ldr	x1, [x9, #0x48]
00000000000320a0	ldrb	w10, [x26]
00000000000320a4	madd	x0, x1, x10, x9
00000000000320a8	cbnz	x10, 0x320d0
00000000000320ac	b	0x320c4
00000000000320b0	ldr	x10, [x9, #0x60]
00000000000320b4	lsl	x1, x25, x10
00000000000320b8	ldrb	w10, [x26]
00000000000320bc	madd	x0, x1, x10, x9
00000000000320c0	cbnz	x10, 0x320d0
00000000000320c4	ldr	x9, [x9, #0x50]
00000000000320c8	add	x0, x0, x9
00000000000320cc	sub	x1, x1, x9
00000000000320d0	orr	w8, w8, #0x2
00000000000320d4	strb	w8, [x26, #0x1]
00000000000320d8	cbz	x1, 0x32048
00000000000320dc	bl	__mi_os_reset
00000000000320e0	b	0x32048
00000000000320e4	stp	xzr, xzr, [x20, #0x20]
00000000000320e8	mov	x0, x19
00000000000320ec	mov	x1, x22
00000000000320f0	mov	x2, x20
00000000000320f4	bl	_mi_segment_page_clear
00000000000320f8	ldr	x8, [x19, #0x38]
00000000000320fc	cbz	x8, 0x321b4
0000000000032100	ldr	x9, [x19, #0x28]
0000000000032104	cmp	x8, x9
0000000000032108	b.ne	0x32130
000000000003210c	mov	x0, x19
0000000000032110	mov	x1, x20
0000000000032114	ldp	x29, x30, [sp, #0x50]
0000000000032118	ldp	x20, x19, [sp, #0x40]
000000000003211c	ldp	x22, x21, [sp, #0x30]
0000000000032120	ldp	x24, x23, [sp, #0x20]
0000000000032124	ldp	x26, x25, [sp, #0x10]
0000000000032128	add	sp, sp, #0x60
000000000003212c	b	_mi_segment_abandon
0000000000032130	add	x8, x8, #0x1
0000000000032134	ldr	x9, [x19, #0x40]
0000000000032138	cmp	x8, x9
000000000003213c	b.ne	0x32178
0000000000032140	ldr	w8, [x19, #0x70]
0000000000032144	add	x9, x20, #0x10
0000000000032148	cmp	w8, #0x0
000000000003214c	csel	x10, xzr, x20, ne
0000000000032150	cmp	w8, #0x1
0000000000032154	csel	x8, x9, x10, eq
0000000000032158	str	xzr, [x19, #0x18]
000000000003215c	ldr	x9, [x8, #0x8]
0000000000032160	str	x9, [x19, #0x20]
0000000000032164	add	x10, x9, #0x18
0000000000032168	cmp	x9, #0x0
000000000003216c	csel	x9, x8, x10, eq
0000000000032170	str	x19, [x9]
0000000000032174	str	x19, [x8, #0x8]
0000000000032178	ldp	x29, x30, [sp, #0x50]
000000000003217c	ldp	x20, x19, [sp, #0x40]
0000000000032180	ldp	x22, x21, [sp, #0x30]
0000000000032184	ldp	x24, x23, [sp, #0x20]
0000000000032188	ldp	x26, x25, [sp, #0x10]
000000000003218c	add	sp, sp, #0x60
0000000000032190	ret
0000000000032194	str	x26, [x20, #0x28]
0000000000032198	str	xzr, [x26, #0x30]
000000000003219c	mov	x0, x19
00000000000321a0	mov	x1, x22
00000000000321a4	mov	x2, x20
00000000000321a8	bl	_mi_segment_page_clear
00000000000321ac	ldr	x8, [x19, #0x38]
00000000000321b0	cbnz	x8, 0x32100
00000000000321b4	mov	x0, x19
00000000000321b8	mov	x1, x21
00000000000321bc	mov	x2, x20
00000000000321c0	ldp	x29, x30, [sp, #0x50]
00000000000321c4	ldp	x20, x19, [sp, #0x40]
00000000000321c8	ldp	x22, x21, [sp, #0x30]
00000000000321cc	ldp	x24, x23, [sp, #0x20]
00000000000321d0	ldp	x26, x25, [sp, #0x10]
00000000000321d4	add	sp, sp, #0x60
00000000000321d8	b	_mi_segment_free
_mi_segment_page_clear:
00000000000321dc	sub	sp, sp, #0x40
00000000000321e0	stp	x22, x21, [sp, #0x10]
00000000000321e4	stp	x20, x19, [sp, #0x20]
00000000000321e8	stp	x29, x30, [sp, #0x30]
00000000000321ec	add	x29, sp, #0x30
00000000000321f0	mov	x21, x2
00000000000321f4	mov	x19, x1
00000000000321f8	mov	x20, x0
00000000000321fc	ldrh	w8, [x1, #0x2]
0000000000032200	ldr	w9, [x1, #0x14]
0000000000032204	ubfx	x10, x9, #26, #6
0000000000032208	cbnz	w10, 0x32458
000000000003220c	mov	x10, x9
0000000000032210	mul	x1, x10, x8
0000000000032214	ldr	x8, [x21, #0x70]
0000000000032218	add	x0, x8, #0xa0
000000000003221c	bl	__mi_stat_decrease
0000000000032220	ldr	x8, [x21, #0x70]
0000000000032224	add	x9, x8, #0x20
0000000000032228	adr	x10, #0x50c18
000000000003222c	nop
0000000000032230	cmp	x9, x10
0000000000032234	adr	x10, #0x50e4c
0000000000032238	nop
000000000003223c	ccmp	x9, x10, #0x2, hs
0000000000032240	b.lo	0x3226c
0000000000032244	ldp	x10, x9, [x8, #0x30]
0000000000032248	sub	x9, x9, #0x1
000000000003224c	str	x9, [x8, #0x38]
0000000000032250	cmp	x9, x10
0000000000032254	b.le	0x3225c
0000000000032258	str	x9, [x8, #0x30]
000000000003225c	ldr	x9, [x8, #0x28]
0000000000032260	add	x9, x9, #0x1
0000000000032264	str	x9, [x8, #0x28]
0000000000032268	b	0x322d8
000000000003226c	add	x10, x8, #0x38
0000000000032270	ldxr	x9, [x10]
0000000000032274	sub	x9, x9, #0x1
0000000000032278	stxr	w11, x9, [x10]
000000000003227c	cbnz	w11, 0x32270
0000000000032280	add	x10, x8, #0x30
0000000000032284	ldr	x12, [x8, #0x30]
0000000000032288	b	0x3229c
000000000003228c	clrex
0000000000032290	mov	w13, #0x0
0000000000032294	mov	x12, x11
0000000000032298	cbnz	w13, 0x322c4
000000000003229c	cmp	x12, x9
00000000000322a0	b.ge	0x322c4
00000000000322a4	ldxr	x11, [x10]
00000000000322a8	cmp	x11, x12
00000000000322ac	b.ne	0x3228c
00000000000322b0	stlxr	w12, x9, [x10]
00000000000322b4	cbnz	w12, 0x32290
00000000000322b8	mov	w13, #0x1
00000000000322bc	mov	x12, x11
00000000000322c0	cbz	w13, 0x3229c
00000000000322c4	add	x8, x8, #0x28
00000000000322c8	ldxr	x9, [x8]
00000000000322cc	add	x9, x9, #0x1
00000000000322d0	stxr	w10, x9, [x8]
00000000000322d4	cbnz	w10, 0x322c8
00000000000322d8	ldrb	w8, [x19, #0x1]
00000000000322dc	mov	w9, #0xf6
00000000000322e0	and	w8, w8, w9
00000000000322e4	strb	w8, [x19, #0x1]
00000000000322e8	ldr	w8, [x19, #0x14]
00000000000322ec	movi.16b	v0, #0x0
00000000000322f0	stur	q0, [x19, #0x16]
00000000000322f4	stur	q0, [x19, #0x6]
00000000000322f8	stur	q0, [x19, #0x26]
00000000000322fc	str	q0, [x19, #0x30]
0000000000032300	str	w8, [x19, #0x14]
0000000000032304	ldr	x8, [x20, #0x38]
0000000000032308	sub	x8, x8, #0x1
000000000003230c	str	x8, [x20, #0x38]
0000000000032310	mov	w0, #0xa
0000000000032314	bl	_mi_option_get
0000000000032318	cbz	x0, 0x32324
000000000003231c	ldrb	w8, [x20, #0x8]
0000000000032320	cbz	w8, 0x3233c
0000000000032324	stur	wzr, [x19, #0x2]
0000000000032328	ldp	x29, x30, [sp, #0x30]
000000000003232c	ldp	x20, x19, [sp, #0x20]
0000000000032330	ldp	x22, x21, [sp, #0x10]
0000000000032334	add	sp, sp, #0x40
0000000000032338	ret
000000000003233c	ldrb	w8, [x19, #0x1]
0000000000032340	and	w8, w8, #0x7
0000000000032344	cmp	w8, #0x4
0000000000032348	b.ne	0x32324
000000000003234c	mov	w0, #0xe
0000000000032350	bl	_mi_option_get
0000000000032354	cbz	x0, 0x323d4
0000000000032358	mov	x0, sp
000000000003235c	mov	x1, #0x0
0000000000032360	bl	0x4dbbc ; symbol stub for: _gettimeofday
0000000000032364	mov	w8, #0x3e8
0000000000032368	ldr	w9, [sp]
000000000003236c	ldrsw	x10, [sp, #0x8]
0000000000032370	mov	w11, #0x4dd3
0000000000032374	movk	w11, #0x1062, lsl #16
0000000000032378	mul	x10, x10, x11
000000000003237c	lsr	x11, x10, #32
0000000000032380	lsr	x10, x10, #63
0000000000032384	add	w10, w10, w11, asr #6
0000000000032388	madd	w20, w9, w8, w10
000000000003238c	mov	w0, #0xe
0000000000032390	bl	_mi_option_get
0000000000032394	add	w8, w0, w20
0000000000032398	str	w8, [x19, #0x10]
000000000003239c	ldr	x8, [x21, #0x20]
00000000000323a0	stp	x8, xzr, [x19, #0x30]
00000000000323a4	add	x9, x8, #0x38
00000000000323a8	add	x10, x21, #0x28
00000000000323ac	cmp	x8, #0x0
00000000000323b0	csel	x8, x10, x9, eq
00000000000323b4	str	x19, [x8]
00000000000323b8	str	x19, [x21, #0x20]
00000000000323bc	stur	wzr, [x19, #0x2]
00000000000323c0	ldp	x29, x30, [sp, #0x30]
00000000000323c4	ldp	x20, x19, [sp, #0x20]
00000000000323c8	ldp	x22, x21, [sp, #0x10]
00000000000323cc	add	sp, sp, #0x40
00000000000323d0	ret
00000000000323d4	mov	w0, #0xa
00000000000323d8	bl	_mi_option_get
00000000000323dc	cbz	x0, 0x32324
00000000000323e0	ldrb	w8, [x20, #0x8]
00000000000323e4	cbnz	w8, 0x32324
00000000000323e8	ldrb	w8, [x19, #0x1]
00000000000323ec	and	w9, w8, #0x7
00000000000323f0	cmp	w9, #0x4
00000000000323f4	b.ne	0x32324
00000000000323f8	ldr	w9, [x20, #0x70]
00000000000323fc	cmp	w9, #0x3
0000000000032400	b.ne	0x3240c
0000000000032404	ldr	x1, [x20, #0x48]
0000000000032408	b	0x32418
000000000003240c	ldr	x9, [x20, #0x60]
0000000000032410	mov	w10, #0x1
0000000000032414	lsl	x1, x10, x9
0000000000032418	ldrb	w9, [x19]
000000000003241c	madd	x0, x1, x9, x20
0000000000032420	cbnz	x9, 0x32430
0000000000032424	ldr	x9, [x20, #0x50]
0000000000032428	add	x0, x0, x9
000000000003242c	sub	x1, x1, x9
0000000000032430	orr	w8, w8, #0x2
0000000000032434	strb	w8, [x19, #0x1]
0000000000032438	cbz	x1, 0x32324
000000000003243c	bl	__mi_os_reset
0000000000032440	stur	wzr, [x19, #0x2]
0000000000032444	ldp	x29, x30, [sp, #0x30]
0000000000032448	ldp	x20, x19, [sp, #0x20]
000000000003244c	ldp	x22, x21, [sp, #0x10]
0000000000032450	add	sp, sp, #0x40
0000000000032454	ret
0000000000032458	and	x11, x19, #0xffffffffffc00000
000000000003245c	ldr	w12, [x11, #0x70]
0000000000032460	cmp	w12, #0x3
0000000000032464	b.ne	0x32470
0000000000032468	ldr	x10, [x11, #0x48]
000000000003246c	b	0x3247c
0000000000032470	ldr	x10, [x11, #0x60]
0000000000032474	mov	w13, #0x1
0000000000032478	lsl	x10, x13, x10
000000000003247c	ldrb	w13, [x19]
0000000000032480	cbnz	w13, 0x32210
0000000000032484	ldr	x13, [x11, #0x50]
0000000000032488	sub	x10, x10, x13
000000000003248c	cmp	w12, #0x1
0000000000032490	b.hi	0x32210
0000000000032494	add	x11, x11, x13
0000000000032498	udiv	x12, x11, x9
000000000003249c	neg	x11, x11
00000000000324a0	madd	x11, x12, x9, x11
00000000000324a4	add	x11, x9, x11
00000000000324a8	cmp	x11, x9
00000000000324ac	csel	x9, x11, xzr, lo
00000000000324b0	sub	x10, x10, x9
00000000000324b4	b	0x32210
_mi_segment_free:
00000000000324b8	stp	x28, x27, [sp, #-0x60]!
00000000000324bc	stp	x26, x25, [sp, #0x10]
00000000000324c0	stp	x24, x23, [sp, #0x20]
00000000000324c4	stp	x22, x21, [sp, #0x30]
00000000000324c8	stp	x20, x19, [sp, #0x40]
00000000000324cc	stp	x29, x30, [sp, #0x50]
00000000000324d0	add	x29, sp, #0x50
00000000000324d4	mov	x20, x2
00000000000324d8	mov	x19, x0
00000000000324dc	adr	x24, #0x50964
00000000000324e0	nop
00000000000324e4	cbz	w1, 0x32510
00000000000324e8	mov	w0, #0xb
00000000000324ec	bl	_mi_option_get
00000000000324f0	ldrb	w8, [x19, #0x8]
00000000000324f4	cbz	w8, 0x32530
00000000000324f8	ldr	w8, [x19, #0x70]
00000000000324fc	cbz	w8, 0x32710
0000000000032500	cmp	w8, #0x1
0000000000032504	b.ne	0x32778
0000000000032508	add	x8, x20, #0x10
000000000003250c	b	0x32718
0000000000032510	ldrb	w8, [x19, #0x8]
0000000000032514	cbz	w8, 0x32664
0000000000032518	ldr	w8, [x19, #0x70]
000000000003251c	cbz	w8, 0x3272c
0000000000032520	cmp	w8, #0x1
0000000000032524	b.ne	0x327bc
0000000000032528	add	x8, x20, #0x10
000000000003252c	b	0x32734
0000000000032530	ldr	x8, [x19, #0x40]
0000000000032534	cbz	x8, 0x324f8
0000000000032538	cbz	x0, 0x333a0
000000000003253c	mov	x21, #0x0
0000000000032540	add	x22, x19, #0x78
0000000000032544	mov	w23, #0x1
0000000000032548	b	0x32560
000000000003254c	ldr	x8, [x19, #0x40]
0000000000032550	add	x21, x21, #0x1
0000000000032554	add	x22, x22, #0x40
0000000000032558	cmp	x21, x8
000000000003255c	b.hs	0x324f8
0000000000032560	ldrb	w9, [x22, #0x1]
0000000000032564	and	w9, w9, #0x7
0000000000032568	cmp	w9, #0x4
000000000003256c	b.ne	0x32550
0000000000032570	ldp	x8, x9, [x22, #0x30]
0000000000032574	cbz	x8, 0x32580
0000000000032578	cbnz	x9, 0x32584
000000000003257c	b	0x32590
0000000000032580	cbz	x9, 0x32614
0000000000032584	str	x8, [x9, #0x30]
0000000000032588	ldr	x8, [x22, #0x30]
000000000003258c	cbz	x8, 0x32594
0000000000032590	str	x9, [x8, #0x38]
0000000000032594	ldr	x9, [x20, #0x28]
0000000000032598	cmp	x22, x9
000000000003259c	b.eq	0x325f8
00000000000325a0	ldr	x9, [x20, #0x20]
00000000000325a4	cmp	x22, x9
00000000000325a8	b.eq	0x3260c
00000000000325ac	str	wzr, [x22, #0x10]
00000000000325b0	stp	xzr, xzr, [x22, #0x30]
00000000000325b4	mov	w0, #0xa
00000000000325b8	bl	_mi_option_get
00000000000325bc	cbz	x0, 0x3254c
00000000000325c0	ldrb	w8, [x19, #0x8]
00000000000325c4	cbnz	w8, 0x3254c
00000000000325c8	ldrb	w8, [x22, #0x1]
00000000000325cc	and	w9, w8, #0x7
00000000000325d0	cmp	w9, #0x4
00000000000325d4	b.ne	0x3254c
00000000000325d8	ldr	w9, [x19, #0x70]
00000000000325dc	cmp	w9, #0x3
00000000000325e0	b.ne	0x32630
00000000000325e4	ldr	x1, [x19, #0x48]
00000000000325e8	ldrb	w9, [x22]
00000000000325ec	madd	x0, x1, x9, x19
00000000000325f0	cbnz	x9, 0x32650
00000000000325f4	b	0x32644
00000000000325f8	ldr	x9, [x22, #0x38]
00000000000325fc	str	x9, [x20, #0x28]
0000000000032600	ldr	x9, [x20, #0x20]
0000000000032604	cmp	x22, x9
0000000000032608	b.ne	0x325ac
000000000003260c	str	x8, [x20, #0x20]
0000000000032610	b	0x325ac
0000000000032614	ldr	x9, [x20, #0x20]
0000000000032618	cmp	x22, x9
000000000003261c	b.eq	0x32594
0000000000032620	ldr	x9, [x20, #0x28]
0000000000032624	cmp	x22, x9
0000000000032628	b.ne	0x325b4
000000000003262c	b	0x32594
0000000000032630	ldr	x9, [x19, #0x60]
0000000000032634	lsl	x1, x23, x9
0000000000032638	ldrb	w9, [x22]
000000000003263c	madd	x0, x1, x9, x19
0000000000032640	cbnz	x9, 0x32650
0000000000032644	ldr	x9, [x19, #0x50]
0000000000032648	add	x0, x0, x9
000000000003264c	sub	x1, x1, x9
0000000000032650	orr	w8, w8, #0x2
0000000000032654	strb	w8, [x22, #0x1]
0000000000032658	cbz	x1, 0x3254c
000000000003265c	bl	__mi_os_reset
0000000000032660	b	0x3254c
0000000000032664	ldr	x8, [x19, #0x40]
0000000000032668	cbz	x8, 0x32518
000000000003266c	add	x9, x19, #0x78
0000000000032670	b	0x32688
0000000000032674	str	wzr, [x9, #0x10]
0000000000032678	stp	xzr, xzr, [x9, #0x30]
000000000003267c	add	x9, x9, #0x40
0000000000032680	subs	x8, x8, #0x1
0000000000032684	b.eq	0x32518
0000000000032688	ldrb	w10, [x9, #0x1]
000000000003268c	and	w10, w10, #0x7
0000000000032690	cmp	w10, #0x4
0000000000032694	b.ne	0x3267c
0000000000032698	ldp	x10, x11, [x9, #0x30]
000000000003269c	cbz	x10, 0x326a8
00000000000326a0	cbnz	x11, 0x326ac
00000000000326a4	b	0x326b8
00000000000326a8	cbz	x11, 0x326f4
00000000000326ac	str	x10, [x11, #0x30]
00000000000326b0	ldr	x10, [x9, #0x30]
00000000000326b4	cbz	x10, 0x326bc
00000000000326b8	str	x11, [x10, #0x38]
00000000000326bc	ldr	x11, [x20, #0x28]
00000000000326c0	cmp	x9, x11
00000000000326c4	b.eq	0x326d8
00000000000326c8	ldr	x11, [x20, #0x20]
00000000000326cc	cmp	x9, x11
00000000000326d0	b.ne	0x32674
00000000000326d4	b	0x326ec
00000000000326d8	ldr	x11, [x9, #0x38]
00000000000326dc	str	x11, [x20, #0x28]
00000000000326e0	ldr	x11, [x20, #0x20]
00000000000326e4	cmp	x9, x11
00000000000326e8	b.ne	0x32674
00000000000326ec	str	x10, [x20, #0x20]
00000000000326f0	b	0x32674
00000000000326f4	ldr	x11, [x20, #0x20]
00000000000326f8	cmp	x9, x11
00000000000326fc	b.eq	0x326bc
0000000000032700	ldr	x11, [x20, #0x28]
0000000000032704	cmp	x9, x11
0000000000032708	b.ne	0x3267c
000000000003270c	b	0x326bc
0000000000032710	mov	x8, x20
0000000000032714	cbz	x20, 0x32778
0000000000032718	mov	x9, x19
000000000003271c	ldp	x10, x11, [x9, #0x18]!
0000000000032720	cbz	x10, 0x32748
0000000000032724	cbnz	x11, 0x3274c
0000000000032728	b	0x32758
000000000003272c	mov	x8, x20
0000000000032730	cbz	x20, 0x327bc
0000000000032734	mov	x9, x19
0000000000032738	ldp	x10, x11, [x9, #0x18]!
000000000003273c	cbz	x10, 0x3278c
0000000000032740	cbnz	x11, 0x32790
0000000000032744	b	0x3279c
0000000000032748	cbz	x11, 0x33444
000000000003274c	str	x10, [x11, #0x18]
0000000000032750	ldr	x10, [x9]
0000000000032754	cbz	x10, 0x3275c
0000000000032758	str	x11, [x10, #0x20]
000000000003275c	ldr	x11, [x8]
0000000000032760	cmp	x11, x19
0000000000032764	b.eq	0x332cc
0000000000032768	ldr	x10, [x8, #0x8]
000000000003276c	cmp	x10, x19
0000000000032770	b.eq	0x332dc
0000000000032774	stp	xzr, xzr, [x9]
0000000000032778	ldr	x8, [x20, #0x70]
000000000003277c	add	x0, x8, #0xa0
0000000000032780	ldr	x1, [x19, #0x50]
0000000000032784	bl	__mi_stat_decrease
0000000000032788	b	0x32dd0
000000000003278c	cbz	x11, 0x33454
0000000000032790	str	x10, [x11, #0x18]
0000000000032794	ldr	x10, [x9]
0000000000032798	cbz	x10, 0x327a0
000000000003279c	str	x11, [x10, #0x20]
00000000000327a0	ldr	x11, [x8]
00000000000327a4	cmp	x11, x19
00000000000327a8	b.eq	0x332e8
00000000000327ac	ldr	x10, [x8, #0x8]
00000000000327b0	cmp	x10, x19
00000000000327b4	b.eq	0x332f8
00000000000327b8	stp	xzr, xzr, [x9]
00000000000327bc	ldr	x8, [x20, #0x70]
00000000000327c0	add	x0, x8, #0xa0
00000000000327c4	ldr	x1, [x19, #0x50]
00000000000327c8	bl	__mi_stat_decrease
00000000000327cc	ldr	x8, [x19, #0x48]
00000000000327d0	cmp	x8, #0x400, lsl #12
00000000000327d4	b.ne	0x32dd0
00000000000327d8	mov	w0, #0x9
00000000000327dc	bl	_mi_option_get
00000000000327e0	mov	x21, x0
00000000000327e4	ldr	x8, [x20, #0x58]
00000000000327e8	cmp	x8, x0
00000000000327ec	b.hs	0x327fc
00000000000327f0	ldr	x9, [x20, #0x40]
00000000000327f4	cmp	x8, x9, lsr #3
00000000000327f8	b.ls	0x33304
00000000000327fc	cmp	x8, x21
0000000000032800	b.ls	0x32dd0
0000000000032804	adr	x25, #0x5087c
0000000000032808	nop
000000000003280c	mov	w26, #0x1039
0000000000032810	movi.16b	v16, #0x4
0000000000032814	movi.16b	v17, #0x2
0000000000032818	b	0x3284c
000000000003281c	mov	w4, #0x0
0000000000032820	mov	w27, #0x1
0000000000032824	ldr	x2, [x22]
0000000000032828	and	w3, w27, #0x1
000000000003282c	mov	x0, x22
0000000000032830	mov	x1, x23
0000000000032834	bl	__mi_mem_free
0000000000032838	ldr	x8, [x20, #0x58]
000000000003283c	movi.16b	v16, #0x4
0000000000032840	movi.16b	v17, #0x2
0000000000032844	cmp	x8, x21
0000000000032848	b.ls	0x32dd0
000000000003284c	ldr	x22, [x20, #0x68]
0000000000032850	cbz	x22, 0x32844
0000000000032854	sub	x8, x8, #0x1
0000000000032858	str	x8, [x20, #0x58]
000000000003285c	ldr	x8, [x22, #0x18]
0000000000032860	str	x8, [x20, #0x68]
0000000000032864	str	xzr, [x22, #0x18]
0000000000032868	ldr	x8, [x20, #0x70]
000000000003286c	add	x9, x8, #0x1a0
0000000000032870	cmp	x9, x24
0000000000032874	ccmp	x9, x25, #0x2, hs
0000000000032878	b.lo	0x328a4
000000000003287c	ldp	x10, x9, [x8, #0x1b0]
0000000000032880	sub	x9, x9, #0x1
0000000000032884	str	x9, [x8, #0x1b8]
0000000000032888	cmp	x9, x10
000000000003288c	b.le	0x32894
0000000000032890	str	x9, [x8, #0x1b0]
0000000000032894	ldr	x9, [x8, #0x1a8]
0000000000032898	add	x9, x9, #0x1
000000000003289c	str	x9, [x8, #0x1a8]
00000000000328a0	b	0x32910
00000000000328a4	add	x10, x8, #0x1b8
00000000000328a8	ldxr	x9, [x10]
00000000000328ac	sub	x9, x9, #0x1
00000000000328b0	stxr	w11, x9, [x10]
00000000000328b4	cbnz	w11, 0x328a8
00000000000328b8	add	x10, x8, #0x1b0
00000000000328bc	ldr	x12, [x8, #0x1b0]
00000000000328c0	b	0x328d4
00000000000328c4	clrex
00000000000328c8	mov	w13, #0x0
00000000000328cc	mov	x12, x11
00000000000328d0	cbnz	w13, 0x328fc
00000000000328d4	cmp	x12, x9
00000000000328d8	b.ge	0x328fc
00000000000328dc	ldxr	x11, [x10]
00000000000328e0	cmp	x11, x12
00000000000328e4	b.ne	0x328c4
00000000000328e8	stlxr	w12, x9, [x10]
00000000000328ec	cbnz	w12, 0x328c8
00000000000328f0	mov	w13, #0x1
00000000000328f4	mov	x12, x11
00000000000328f8	cbz	w13, 0x328d4
00000000000328fc	add	x8, x8, #0x1a8
0000000000032900	ldxr	x9, [x8]
0000000000032904	add	x9, x9, #0x1
0000000000032908	stxr	w10, x9, [x8]
000000000003290c	cbnz	w10, 0x32900
0000000000032910	ldr	x23, [x22, #0x48]
0000000000032914	add	x8, x22, #0x68
0000000000032918	stlr	xzr, [x8]
000000000003291c	ldr	x8, [x20, #0x70]
0000000000032920	cmp	x8, x24
0000000000032924	cset	w9, hs
0000000000032928	add	x10, x24, #0x240
000000000003292c	cmp	x8, x10
0000000000032930	cset	w10, lo
0000000000032934	and	w9, w9, w10
0000000000032938	add	x11, x8, #0x18
000000000003293c	cmp	x23, #0x0
0000000000032940	b.le	0x329b8
0000000000032944	cbz	w9, 0x32a28
0000000000032948	ldxr	x9, [x11]
000000000003294c	sub	x9, x9, #0x1
0000000000032950	stxr	w10, x9, [x11]
0000000000032954	cbnz	w10, 0x32948
0000000000032958	add	x10, x8, #0x10
000000000003295c	ldr	x12, [x8, #0x10]
0000000000032960	b	0x32974
0000000000032964	clrex
0000000000032968	mov	w13, #0x0
000000000003296c	mov	x12, x11
0000000000032970	cbnz	w13, 0x3299c
0000000000032974	cmp	x12, x9
0000000000032978	b.ge	0x3299c
000000000003297c	ldxr	x11, [x10]
0000000000032980	cmp	x11, x12
0000000000032984	b.ne	0x32964
0000000000032988	stlxr	w12, x9, [x10]
000000000003298c	cbnz	w12, 0x32968
0000000000032990	mov	w13, #0x1
0000000000032994	mov	x12, x11
0000000000032998	cbz	w13, 0x32974
000000000003299c	add	x8, x8, #0x8
00000000000329a0	ldxr	x9, [x8]
00000000000329a4	add	x9, x9, #0x1
00000000000329a8	stxr	w10, x9, [x8]
00000000000329ac	cbnz	w10, 0x329a0
00000000000329b0	mov	x9, #-0x1
00000000000329b4	b	0x32a74
00000000000329b8	cbz	w9, 0x32a4c
00000000000329bc	ldxr	x9, [x11]
00000000000329c0	add	x10, x9, #0x1
00000000000329c4	stxr	w12, x10, [x11]
00000000000329c8	cbnz	w12, 0x329bc
00000000000329cc	add	x11, x8, #0x10
00000000000329d0	ldr	x13, [x8, #0x10]
00000000000329d4	b	0x329e8
00000000000329d8	clrex
00000000000329dc	mov	w14, #0x0
00000000000329e0	mov	x13, x12
00000000000329e4	cbnz	w14, 0x32a10
00000000000329e8	cmp	x13, x9
00000000000329ec	b.gt	0x32a10
00000000000329f0	ldxr	x12, [x11]
00000000000329f4	cmp	x12, x13
00000000000329f8	b.ne	0x329d8
00000000000329fc	stlxr	w13, x10, [x11]
0000000000032a00	cbnz	w13, 0x329dc
0000000000032a04	mov	w14, #0x1
0000000000032a08	mov	x13, x12
0000000000032a0c	cbz	w14, 0x329e8
0000000000032a10	ldxr	x9, [x8]
0000000000032a14	add	x9, x9, #0x1
0000000000032a18	stxr	w10, x9, [x8]
0000000000032a1c	cbnz	w10, 0x32a10
0000000000032a20	mov	w9, #0x1
0000000000032a24	b	0x32a74
0000000000032a28	ldp	x10, x9, [x8, #0x10]
0000000000032a2c	sub	x9, x9, #0x1
0000000000032a30	str	x9, [x8, #0x18]
0000000000032a34	cmp	x9, x10
0000000000032a38	b.le	0x32a40
0000000000032a3c	str	x9, [x8, #0x10]
0000000000032a40	add	x8, x8, #0x8
0000000000032a44	mov	x9, #-0x1
0000000000032a48	b	0x32a68
0000000000032a4c	ldp	x11, x10, [x8, #0x10]
0000000000032a50	add	x9, x10, #0x1
0000000000032a54	str	x9, [x8, #0x18]
0000000000032a58	cmp	x10, x11
0000000000032a5c	b.lt	0x32a64
0000000000032a60	str	x9, [x8, #0x10]
0000000000032a64	mov	w9, #0x1
0000000000032a68	ldr	x10, [x8]
0000000000032a6c	add	x10, x10, #0x1
0000000000032a70	str	x10, [x8]
0000000000032a74	ldp	x8, x10, [x20, #0x38]
0000000000032a78	add	x8, x8, x9
0000000000032a7c	str	x8, [x20, #0x38]
0000000000032a80	cmp	x8, x10
0000000000032a84	b.hi	0x32aa8
0000000000032a88	ldp	x8, x9, [x20, #0x48]
0000000000032a8c	sub	x8, x8, x23
0000000000032a90	str	x8, [x20, #0x48]
0000000000032a94	cmp	x8, x9
0000000000032a98	b.hi	0x32ac0
0000000000032a9c	ldr	x8, [x22, #0x40]
0000000000032aa0	cbnz	x8, 0x32acc
0000000000032aa4	b	0x3281c
0000000000032aa8	str	x8, [x20, #0x40]
0000000000032aac	ldp	x8, x9, [x20, #0x48]
0000000000032ab0	sub	x8, x8, x23
0000000000032ab4	str	x8, [x20, #0x48]
0000000000032ab8	cmp	x8, x9
0000000000032abc	b.ls	0x32a9c
0000000000032ac0	str	x8, [x20, #0x50]
0000000000032ac4	ldr	x8, [x22, #0x40]
0000000000032ac8	cbz	x8, 0x3281c
0000000000032acc	cmp	x8, #0x1f
0000000000032ad0	b.hi	0x32ae4
0000000000032ad4	mov	w10, #0x0
0000000000032ad8	mov	x9, #0x0
0000000000032adc	mov	w27, #0x1
0000000000032ae0	b	0x32d80
0000000000032ae4	and	x9, x8, #0xffffffffffffffe0
0000000000032ae8	add	x10, x22, x26
0000000000032aec	movi.16b	v2, #0x1
0000000000032af0	movi.16b	v0, #0x0
0000000000032af4	mov	x11, x9
0000000000032af8	movi.16b	v1, #0x0
0000000000032afc	movi.16b	v3, #0x1
0000000000032b00	sub	x12, x10, #0x7c0
0000000000032b04	prfm	pldl1keep, [x12]
0000000000032b08	sub	x12, x10, #0x780
0000000000032b0c	prfm	pldl1keep, [x12]
0000000000032b10	sub	x12, x10, #0xfc0
0000000000032b14	ldr	b4, [x12]
0000000000032b18	sub	x12, x10, #0x740
0000000000032b1c	prfm	pldl1keep, [x12]
0000000000032b20	sub	x12, x10, #0xf80
0000000000032b24	ld1.b	{ v4 }[1], [x12]
0000000000032b28	sub	x12, x10, #0x700
0000000000032b2c	prfm	pldl1keep, [x12]
0000000000032b30	sub	x12, x10, #0xf40
0000000000032b34	ld1.b	{ v4 }[2], [x12]
0000000000032b38	sub	x12, x10, #0x6c0
0000000000032b3c	prfm	pldl1keep, [x12]
0000000000032b40	sub	x12, x10, #0xf00
0000000000032b44	ld1.b	{ v4 }[3], [x12]
0000000000032b48	sub	x12, x10, #0x680
0000000000032b4c	prfm	pldl1keep, [x12]
0000000000032b50	sub	x12, x10, #0xec0
0000000000032b54	ld1.b	{ v4 }[4], [x12]
0000000000032b58	sub	x12, x10, #0x640
0000000000032b5c	prfm	pldl1keep, [x12]
0000000000032b60	sub	x12, x10, #0xe80
0000000000032b64	ld1.b	{ v4 }[5], [x12]
0000000000032b68	sub	x12, x10, #0x600
0000000000032b6c	prfm	pldl1keep, [x12]
0000000000032b70	sub	x12, x10, #0xe40
0000000000032b74	ld1.b	{ v4 }[6], [x12]
0000000000032b78	sub	x12, x10, #0x5c0
0000000000032b7c	prfm	pldl1keep, [x12]
0000000000032b80	sub	x12, x10, #0xe00
0000000000032b84	ld1.b	{ v4 }[7], [x12]
0000000000032b88	sub	x12, x10, #0x580
0000000000032b8c	prfm	pldl1keep, [x12]
0000000000032b90	sub	x12, x10, #0xdc0
0000000000032b94	ld1.b	{ v4 }[8], [x12]
0000000000032b98	sub	x12, x10, #0x540
0000000000032b9c	prfm	pldl1keep, [x12]
0000000000032ba0	sub	x12, x10, #0xd80
0000000000032ba4	ld1.b	{ v4 }[9], [x12]
0000000000032ba8	sub	x12, x10, #0x500
0000000000032bac	prfm	pldl1keep, [x12]
0000000000032bb0	sub	x12, x10, #0xd40
0000000000032bb4	ld1.b	{ v4 }[10], [x12]
0000000000032bb8	sub	x12, x10, #0x4c0
0000000000032bbc	prfm	pldl1keep, [x12]
0000000000032bc0	sub	x12, x10, #0xd00
0000000000032bc4	ld1.b	{ v4 }[11], [x12]
0000000000032bc8	sub	x12, x10, #0x480
0000000000032bcc	prfm	pldl1keep, [x12]
0000000000032bd0	sub	x12, x10, #0xcc0
0000000000032bd4	ld1.b	{ v4 }[12], [x12]
0000000000032bd8	sub	x12, x10, #0x440
0000000000032bdc	prfm	pldl1keep, [x12]
0000000000032be0	sub	x12, x10, #0xc80
0000000000032be4	ld1.b	{ v4 }[13], [x12]
0000000000032be8	sub	x12, x10, #0x400
0000000000032bec	prfm	pldl1keep, [x12]
0000000000032bf0	sub	x12, x10, #0xc40
0000000000032bf4	ld1.b	{ v4 }[14], [x12]
0000000000032bf8	sub	x12, x10, #0xc00
0000000000032bfc	ld1.b	{ v4 }[15], [x12]
0000000000032c00	sub	x12, x10, #0x3c0
0000000000032c04	prfm	pldl1keep, [x12]
0000000000032c08	sub	x12, x10, #0x380
0000000000032c0c	prfm	pldl1keep, [x12]
0000000000032c10	sub	x12, x10, #0xbc0
0000000000032c14	ldr	b5, [x12]
0000000000032c18	sub	x12, x10, #0x340
0000000000032c1c	prfm	pldl1keep, [x12]
0000000000032c20	sub	x12, x10, #0xb80
0000000000032c24	ld1.b	{ v5 }[1], [x12]
0000000000032c28	sub	x12, x10, #0x300
0000000000032c2c	prfm	pldl1keep, [x12]
0000000000032c30	sub	x12, x10, #0xb40
0000000000032c34	ld1.b	{ v5 }[2], [x12]
0000000000032c38	sub	x12, x10, #0x2c0
0000000000032c3c	prfm	pldl1keep, [x12]
0000000000032c40	sub	x12, x10, #0xb00
0000000000032c44	ld1.b	{ v5 }[3], [x12]
0000000000032c48	sub	x12, x10, #0x280
0000000000032c4c	prfm	pldl1keep, [x12]
0000000000032c50	sub	x12, x10, #0xac0
0000000000032c54	ld1.b	{ v5 }[4], [x12]
0000000000032c58	sub	x12, x10, #0x240
0000000000032c5c	prfm	pldl1keep, [x12]
0000000000032c60	sub	x12, x10, #0xa80
0000000000032c64	ld1.b	{ v5 }[5], [x12]
0000000000032c68	sub	x12, x10, #0x200
0000000000032c6c	prfm	pldl1keep, [x12]
0000000000032c70	sub	x12, x10, #0xa40
0000000000032c74	ld1.b	{ v5 }[6], [x12]
0000000000032c78	sub	x12, x10, #0x1c0
0000000000032c7c	prfm	pldl1keep, [x12]
0000000000032c80	sub	x12, x10, #0xa00
0000000000032c84	ld1.b	{ v5 }[7], [x12]
0000000000032c88	sub	x12, x10, #0x180
0000000000032c8c	prfm	pldl1keep, [x12]
0000000000032c90	sub	x12, x10, #0x9c0
0000000000032c94	ld1.b	{ v5 }[8], [x12]
0000000000032c98	sub	x12, x10, #0x140
0000000000032c9c	prfm	pldl1keep, [x12]
0000000000032ca0	sub	x12, x10, #0x980
0000000000032ca4	ld1.b	{ v5 }[9], [x12]
0000000000032ca8	sub	x12, x10, #0x940
0000000000032cac	prfum	pldl1keep, [x10, #-0x100]
0000000000032cb0	ld1.b	{ v5 }[10], [x12]
0000000000032cb4	sub	x12, x10, #0x900
0000000000032cb8	prfum	pldl1keep, [x10, #-0xc0]
0000000000032cbc	ld1.b	{ v5 }[11], [x12]
0000000000032cc0	sub	x12, x10, #0x8c0
0000000000032cc4	prfum	pldl1keep, [x10, #-0x80]
0000000000032cc8	ld1.b	{ v5 }[12], [x12]
0000000000032ccc	sub	x12, x10, #0x880
0000000000032cd0	prfum	pldl1keep, [x10, #-0x40]
0000000000032cd4	ld1.b	{ v5 }[13], [x12]
0000000000032cd8	sub	x12, x10, #0x840
0000000000032cdc	prfm	pldl1keep, [x10]
0000000000032ce0	ld1.b	{ v5 }[14], [x12]
0000000000032ce4	sub	x12, x10, #0x800
0000000000032ce8	ld1.b	{ v5 }[15], [x12]
0000000000032cec	and.16b	v6, v4, v16
0000000000032cf0	and.16b	v7, v5, v16
0000000000032cf4	cmeq.16b	v6, v6, #0
0000000000032cf8	cmeq.16b	v7, v7, #0
0000000000032cfc	bic.16b	v2, v2, v6
0000000000032d00	and.16b	v4, v4, v17
0000000000032d04	and.16b	v5, v5, v17
0000000000032d08	bic.16b	v3, v3, v7
0000000000032d0c	cmeq.16b	v4, v4, #0
0000000000032d10	cmeq.16b	v5, v5, #0
0000000000032d14	orn.16b	v0, v0, v4
0000000000032d18	orn.16b	v1, v1, v5
0000000000032d1c	add	x10, x10, #0x800
0000000000032d20	subs	x11, x11, #0x20
0000000000032d24	b.ne	0x32b00
0000000000032d28	and.16b	v2, v3, v2
0000000000032d2c	dup.2d	v3, v2[1]
0000000000032d30	and.16b	v2, v2, v3
0000000000032d34	dup.4s	v3, v2[1]
0000000000032d38	and.16b	v2, v2, v3
0000000000032d3c	dup.8h	v3, v2[1]
0000000000032d40	and.16b	v2, v2, v3
0000000000032d44	dup.16b	v3, v2[1]
0000000000032d48	and.16b	v2, v2, v3
0000000000032d4c	umov.b	w27, v2[0]
0000000000032d50	orr.16b	v0, v1, v0
0000000000032d54	dup.2d	v1, v0[1]
0000000000032d58	orr.16b	v0, v0, v1
0000000000032d5c	dup.4s	v1, v0[1]
0000000000032d60	orr.16b	v0, v0, v1
0000000000032d64	dup.8h	v1, v0[1]
0000000000032d68	orr.16b	v0, v0, v1
0000000000032d6c	dup.16b	v1, v0[1]
0000000000032d70	orr.16b	v0, v0, v1
0000000000032d74	umov.b	w10, v0[0]
0000000000032d78	cmp	x8, x9
0000000000032d7c	b.eq	0x32da8
0000000000032d80	sub	x8, x8, x9
0000000000032d84	add	x9, x22, x9, lsl #6
0000000000032d88	add	x9, x9, #0x79
0000000000032d8c	ldrb	w11, [x9], #0x40
0000000000032d90	and	w12, w11, #0x4
0000000000032d94	and	w27, w27, w12, lsr #2
0000000000032d98	and	w11, w11, #0x2
0000000000032d9c	orr	w10, w10, w11, lsr #1
0000000000032da0	subs	x8, x8, #0x1
0000000000032da4	b.ne	0x32d8c
0000000000032da8	tbz	w10, #0x0, 0x32dc8
0000000000032dac	mov	w0, #0x5
0000000000032db0	bl	_mi_option_get
0000000000032db4	cmp	x0, #0x0
0000000000032db8	cset	w8, eq
0000000000032dbc	and	w27, w27, w8
0000000000032dc0	mov	w4, #0x1
0000000000032dc4	b	0x32824
0000000000032dc8	mov	w4, #0x0
0000000000032dcc	b	0x32824
0000000000032dd0	ldr	x21, [x19, #0x48]
0000000000032dd4	add	x8, x19, #0x68
0000000000032dd8	stlr	xzr, [x8]
0000000000032ddc	ldr	x8, [x20, #0x70]
0000000000032de0	cmp	x8, x24
0000000000032de4	cset	w9, hs
0000000000032de8	add	x10, x24, #0x240
0000000000032dec	cmp	x8, x10
0000000000032df0	cset	w10, lo
0000000000032df4	and	w9, w9, w10
0000000000032df8	add	x11, x8, #0x18
0000000000032dfc	cmp	x21, #0x0
0000000000032e00	b.le	0x32e78
0000000000032e04	cbz	w9, 0x32ee8
0000000000032e08	ldxr	x9, [x11]
0000000000032e0c	sub	x9, x9, #0x1
0000000000032e10	stxr	w10, x9, [x11]
0000000000032e14	cbnz	w10, 0x32e08
0000000000032e18	add	x10, x8, #0x10
0000000000032e1c	ldr	x12, [x8, #0x10]
0000000000032e20	b	0x32e34
0000000000032e24	clrex
0000000000032e28	mov	w13, #0x0
0000000000032e2c	mov	x12, x11
0000000000032e30	cbnz	w13, 0x32e5c
0000000000032e34	cmp	x12, x9
0000000000032e38	b.ge	0x32e5c
0000000000032e3c	ldxr	x11, [x10]
0000000000032e40	cmp	x11, x12
0000000000032e44	b.ne	0x32e24
0000000000032e48	stlxr	w12, x9, [x10]
0000000000032e4c	cbnz	w12, 0x32e28
0000000000032e50	mov	w13, #0x1
0000000000032e54	mov	x12, x11
0000000000032e58	cbz	w13, 0x32e34
0000000000032e5c	add	x8, x8, #0x8
0000000000032e60	ldxr	x9, [x8]
0000000000032e64	add	x9, x9, #0x1
0000000000032e68	stxr	w10, x9, [x8]
0000000000032e6c	cbnz	w10, 0x32e60
0000000000032e70	mov	x9, #-0x1
0000000000032e74	b	0x32f34
0000000000032e78	cbz	w9, 0x32f0c
0000000000032e7c	ldxr	x9, [x11]
0000000000032e80	add	x10, x9, #0x1
0000000000032e84	stxr	w12, x10, [x11]
0000000000032e88	cbnz	w12, 0x32e7c
0000000000032e8c	add	x11, x8, #0x10
0000000000032e90	ldr	x13, [x8, #0x10]
0000000000032e94	b	0x32ea8
0000000000032e98	clrex
0000000000032e9c	mov	w14, #0x0
0000000000032ea0	mov	x13, x12
0000000000032ea4	cbnz	w14, 0x32ed0
0000000000032ea8	cmp	x13, x9
0000000000032eac	b.gt	0x32ed0
0000000000032eb0	ldxr	x12, [x11]
0000000000032eb4	cmp	x12, x13
0000000000032eb8	b.ne	0x32e98
0000000000032ebc	stlxr	w13, x10, [x11]
0000000000032ec0	cbnz	w13, 0x32e9c
0000000000032ec4	mov	w14, #0x1
0000000000032ec8	mov	x13, x12
0000000000032ecc	cbz	w14, 0x32ea8
0000000000032ed0	mov	w9, #0x1
0000000000032ed4	ldxr	x10, [x8]
0000000000032ed8	add	x10, x10, #0x1
0000000000032edc	stxr	w11, x10, [x8]
0000000000032ee0	cbnz	w11, 0x32ed4
0000000000032ee4	b	0x32f34
0000000000032ee8	ldp	x10, x9, [x8, #0x10]
0000000000032eec	sub	x9, x9, #0x1
0000000000032ef0	str	x9, [x8, #0x18]
0000000000032ef4	cmp	x9, x10
0000000000032ef8	b.le	0x32f00
0000000000032efc	str	x9, [x8, #0x10]
0000000000032f00	add	x8, x8, #0x8
0000000000032f04	mov	x9, #-0x1
0000000000032f08	b	0x32f28
0000000000032f0c	ldp	x11, x10, [x8, #0x10]
0000000000032f10	add	x9, x10, #0x1
0000000000032f14	str	x9, [x8, #0x18]
0000000000032f18	cmp	x10, x11
0000000000032f1c	b.lt	0x32f24
0000000000032f20	str	x9, [x8, #0x10]
0000000000032f24	mov	w9, #0x1
0000000000032f28	ldr	x10, [x8]
0000000000032f2c	add	x10, x10, #0x1
0000000000032f30	str	x10, [x8]
0000000000032f34	ldp	x8, x10, [x20, #0x38]
0000000000032f38	add	x8, x8, x9
0000000000032f3c	str	x8, [x20, #0x38]
0000000000032f40	cmp	x8, x10
0000000000032f44	b.hi	0x32f7c
0000000000032f48	ldp	x8, x9, [x20, #0x48]
0000000000032f4c	sub	x8, x8, x21
0000000000032f50	str	x8, [x20, #0x48]
0000000000032f54	cmp	x8, x9
0000000000032f58	b.hi	0x32f94
0000000000032f5c	ldr	x8, [x19, #0x40]
0000000000032f60	cbz	x8, 0x32fa0
0000000000032f64	cmp	x8, #0x1f
0000000000032f68	b.hi	0x32fac
0000000000032f6c	mov	w10, #0x0
0000000000032f70	mov	x9, #0x0
0000000000032f74	mov	w20, #0x1
0000000000032f78	b	0x33254
0000000000032f7c	str	x8, [x20, #0x40]
0000000000032f80	ldp	x8, x9, [x20, #0x48]
0000000000032f84	sub	x8, x8, x21
0000000000032f88	str	x8, [x20, #0x48]
0000000000032f8c	cmp	x8, x9
0000000000032f90	b.ls	0x32f5c
0000000000032f94	str	x8, [x20, #0x50]
0000000000032f98	ldr	x8, [x19, #0x40]
0000000000032f9c	cbnz	x8, 0x32f64
0000000000032fa0	mov	w4, #0x0
0000000000032fa4	mov	w20, #0x1
0000000000032fa8	b	0x332a0
0000000000032fac	and	x9, x8, #0xffffffffffffffe0
0000000000032fb0	mov	w10, #0x1039
0000000000032fb4	add	x10, x19, x10
0000000000032fb8	movi.16b	v2, #0x1
0000000000032fbc	movi.16b	v0, #0x0
0000000000032fc0	movi.16b	v3, #0x4
0000000000032fc4	movi.16b	v4, #0x2
0000000000032fc8	mov	x11, x9
0000000000032fcc	movi.16b	v1, #0x0
0000000000032fd0	movi.16b	v5, #0x1
0000000000032fd4	sub	x12, x10, #0x7c0
0000000000032fd8	prfm	pldl1keep, [x12]
0000000000032fdc	sub	x12, x10, #0x780
0000000000032fe0	prfm	pldl1keep, [x12]
0000000000032fe4	sub	x12, x10, #0xfc0
0000000000032fe8	ldr	b6, [x12]
0000000000032fec	sub	x12, x10, #0x740
0000000000032ff0	prfm	pldl1keep, [x12]
0000000000032ff4	sub	x12, x10, #0xf80
0000000000032ff8	ld1.b	{ v6 }[1], [x12]
0000000000032ffc	sub	x12, x10, #0x700
0000000000033000	prfm	pldl1keep, [x12]
0000000000033004	sub	x12, x10, #0xf40
0000000000033008	ld1.b	{ v6 }[2], [x12]
000000000003300c	sub	x12, x10, #0x6c0
0000000000033010	prfm	pldl1keep, [x12]
0000000000033014	sub	x12, x10, #0xf00
0000000000033018	ld1.b	{ v6 }[3], [x12]
000000000003301c	sub	x12, x10, #0x680
0000000000033020	prfm	pldl1keep, [x12]
0000000000033024	sub	x12, x10, #0xec0
0000000000033028	ld1.b	{ v6 }[4], [x12]
000000000003302c	sub	x12, x10, #0x640
0000000000033030	prfm	pldl1keep, [x12]
0000000000033034	sub	x12, x10, #0xe80
0000000000033038	ld1.b	{ v6 }[5], [x12]
000000000003303c	sub	x12, x10, #0x600
0000000000033040	prfm	pldl1keep, [x12]
0000000000033044	sub	x12, x10, #0xe40
0000000000033048	ld1.b	{ v6 }[6], [x12]
000000000003304c	sub	x12, x10, #0x5c0
0000000000033050	prfm	pldl1keep, [x12]
0000000000033054	sub	x12, x10, #0xe00
0000000000033058	ld1.b	{ v6 }[7], [x12]
000000000003305c	sub	x12, x10, #0x580
0000000000033060	prfm	pldl1keep, [x12]
0000000000033064	sub	x12, x10, #0xdc0
0000000000033068	ld1.b	{ v6 }[8], [x12]
000000000003306c	sub	x12, x10, #0x540
0000000000033070	prfm	pldl1keep, [x12]
0000000000033074	sub	x12, x10, #0xd80
0000000000033078	ld1.b	{ v6 }[9], [x12]
000000000003307c	sub	x12, x10, #0x500
0000000000033080	prfm	pldl1keep, [x12]
0000000000033084	sub	x12, x10, #0xd40
0000000000033088	ld1.b	{ v6 }[10], [x12]
000000000003308c	sub	x12, x10, #0x4c0
0000000000033090	prfm	pldl1keep, [x12]
0000000000033094	sub	x12, x10, #0xd00
0000000000033098	ld1.b	{ v6 }[11], [x12]
000000000003309c	sub	x12, x10, #0x480
00000000000330a0	prfm	pldl1keep, [x12]
00000000000330a4	sub	x12, x10, #0xcc0
00000000000330a8	ld1.b	{ v6 }[12], [x12]
00000000000330ac	sub	x12, x10, #0x440
00000000000330b0	prfm	pldl1keep, [x12]
00000000000330b4	sub	x12, x10, #0xc80
00000000000330b8	ld1.b	{ v6 }[13], [x12]
00000000000330bc	sub	x12, x10, #0x400
00000000000330c0	prfm	pldl1keep, [x12]
00000000000330c4	sub	x12, x10, #0xc40
00000000000330c8	ld1.b	{ v6 }[14], [x12]
00000000000330cc	sub	x12, x10, #0xc00
00000000000330d0	ld1.b	{ v6 }[15], [x12]
00000000000330d4	sub	x12, x10, #0x3c0
00000000000330d8	prfm	pldl1keep, [x12]
00000000000330dc	sub	x12, x10, #0x380
00000000000330e0	prfm	pldl1keep, [x12]
00000000000330e4	sub	x12, x10, #0xbc0
00000000000330e8	ldr	b7, [x12]
00000000000330ec	sub	x12, x10, #0x340
00000000000330f0	prfm	pldl1keep, [x12]
00000000000330f4	sub	x12, x10, #0xb80
00000000000330f8	ld1.b	{ v7 }[1], [x12]
00000000000330fc	sub	x12, x10, #0x300
0000000000033100	prfm	pldl1keep, [x12]
0000000000033104	sub	x12, x10, #0xb40
0000000000033108	ld1.b	{ v7 }[2], [x12]
000000000003310c	sub	x12, x10, #0x2c0
0000000000033110	prfm	pldl1keep, [x12]
0000000000033114	sub	x12, x10, #0xb00
0000000000033118	ld1.b	{ v7 }[3], [x12]
000000000003311c	sub	x12, x10, #0x280
0000000000033120	prfm	pldl1keep, [x12]
0000000000033124	sub	x12, x10, #0xac0
0000000000033128	ld1.b	{ v7 }[4], [x12]
000000000003312c	sub	x12, x10, #0x240
0000000000033130	prfm	pldl1keep, [x12]
0000000000033134	sub	x12, x10, #0xa80
0000000000033138	ld1.b	{ v7 }[5], [x12]
000000000003313c	sub	x12, x10, #0x200
0000000000033140	prfm	pldl1keep, [x12]
0000000000033144	sub	x12, x10, #0xa40
0000000000033148	ld1.b	{ v7 }[6], [x12]
000000000003314c	sub	x12, x10, #0x1c0
0000000000033150	prfm	pldl1keep, [x12]
0000000000033154	sub	x12, x10, #0xa00
0000000000033158	ld1.b	{ v7 }[7], [x12]
000000000003315c	sub	x12, x10, #0x180
0000000000033160	prfm	pldl1keep, [x12]
0000000000033164	sub	x12, x10, #0x9c0
0000000000033168	ld1.b	{ v7 }[8], [x12]
000000000003316c	sub	x12, x10, #0x140
0000000000033170	prfm	pldl1keep, [x12]
0000000000033174	sub	x12, x10, #0x980
0000000000033178	ld1.b	{ v7 }[9], [x12]
000000000003317c	sub	x12, x10, #0x940
0000000000033180	prfum	pldl1keep, [x10, #-0x100]
0000000000033184	ld1.b	{ v7 }[10], [x12]
0000000000033188	sub	x12, x10, #0x900
000000000003318c	prfum	pldl1keep, [x10, #-0xc0]
0000000000033190	ld1.b	{ v7 }[11], [x12]
0000000000033194	sub	x12, x10, #0x8c0
0000000000033198	prfum	pldl1keep, [x10, #-0x80]
000000000003319c	ld1.b	{ v7 }[12], [x12]
00000000000331a0	sub	x12, x10, #0x880
00000000000331a4	prfum	pldl1keep, [x10, #-0x40]
00000000000331a8	ld1.b	{ v7 }[13], [x12]
00000000000331ac	sub	x12, x10, #0x840
00000000000331b0	prfm	pldl1keep, [x10]
00000000000331b4	ld1.b	{ v7 }[14], [x12]
00000000000331b8	sub	x12, x10, #0x800
00000000000331bc	ld1.b	{ v7 }[15], [x12]
00000000000331c0	and.16b	v16, v6, v3
00000000000331c4	and.16b	v17, v7, v3
00000000000331c8	cmeq.16b	v16, v16, #0
00000000000331cc	cmeq.16b	v17, v17, #0
00000000000331d0	bic.16b	v2, v2, v16
00000000000331d4	and.16b	v6, v6, v4
00000000000331d8	and.16b	v7, v7, v4
00000000000331dc	bic.16b	v5, v5, v17
00000000000331e0	cmeq.16b	v6, v6, #0
00000000000331e4	cmeq.16b	v7, v7, #0
00000000000331e8	orn.16b	v0, v0, v6
00000000000331ec	orn.16b	v1, v1, v7
00000000000331f0	add	x10, x10, #0x800
00000000000331f4	subs	x11, x11, #0x20
00000000000331f8	b.ne	0x32fd4
00000000000331fc	and.16b	v2, v5, v2
0000000000033200	dup.2d	v3, v2[1]
0000000000033204	and.16b	v2, v2, v3
0000000000033208	dup.4s	v3, v2[1]
000000000003320c	and.16b	v2, v2, v3
0000000000033210	dup.8h	v3, v2[1]
0000000000033214	and.16b	v2, v2, v3
0000000000033218	dup.16b	v3, v2[1]
000000000003321c	and.16b	v2, v2, v3
0000000000033220	umov.b	w20, v2[0]
0000000000033224	orr.16b	v0, v1, v0
0000000000033228	dup.2d	v1, v0[1]
000000000003322c	orr.16b	v0, v0, v1
0000000000033230	dup.4s	v1, v0[1]
0000000000033234	orr.16b	v0, v0, v1
0000000000033238	dup.8h	v1, v0[1]
000000000003323c	orr.16b	v0, v0, v1
0000000000033240	dup.16b	v1, v0[1]
0000000000033244	orr.16b	v0, v0, v1
0000000000033248	umov.b	w10, v0[0]
000000000003324c	cmp	x8, x9
0000000000033250	b.eq	0x3327c
0000000000033254	sub	x8, x8, x9
0000000000033258	add	x9, x19, x9, lsl #6
000000000003325c	add	x9, x9, #0x79
0000000000033260	ldrb	w11, [x9], #0x40
0000000000033264	and	w12, w11, #0x4
0000000000033268	and	w20, w20, w12, lsr #2
000000000003326c	and	w11, w11, #0x2
0000000000033270	orr	w10, w10, w11, lsr #1
0000000000033274	subs	x8, x8, #0x1
0000000000033278	b.ne	0x33260
000000000003327c	tbz	w10, #0x0, 0x3329c
0000000000033280	mov	w0, #0x5
0000000000033284	bl	_mi_option_get
0000000000033288	cmp	x0, #0x0
000000000003328c	cset	w8, eq
0000000000033290	and	w20, w20, w8
0000000000033294	mov	w4, #0x1
0000000000033298	b	0x332a0
000000000003329c	mov	w4, #0x0
00000000000332a0	ldr	x2, [x19]
00000000000332a4	and	w3, w20, #0x1
00000000000332a8	mov	x0, x19
00000000000332ac	mov	x1, x21
00000000000332b0	ldp	x29, x30, [sp, #0x50]
00000000000332b4	ldp	x20, x19, [sp, #0x40]
00000000000332b8	ldp	x22, x21, [sp, #0x30]
00000000000332bc	ldp	x24, x23, [sp, #0x20]
00000000000332c0	ldp	x26, x25, [sp, #0x10]
00000000000332c4	ldp	x28, x27, [sp], #0x60
00000000000332c8	b	__mi_mem_free
00000000000332cc	str	x10, [x8]
00000000000332d0	ldr	x10, [x8, #0x8]
00000000000332d4	cmp	x10, x19
00000000000332d8	b.ne	0x32774
00000000000332dc	ldr	x10, [x19, #0x20]
00000000000332e0	str	x10, [x8, #0x8]
00000000000332e4	b	0x32774
00000000000332e8	str	x10, [x8]
00000000000332ec	ldr	x10, [x8, #0x8]
00000000000332f0	cmp	x10, x19
00000000000332f4	b.ne	0x327b8
00000000000332f8	ldr	x10, [x19, #0x20]
00000000000332fc	str	x10, [x8, #0x8]
0000000000033300	b	0x327b8
0000000000033304	ldp	x9, x12, [x20, #0x68]
0000000000033308	str	x9, [x19, #0x18]
000000000003330c	str	x19, [x20, #0x68]
0000000000033310	add	x8, x8, #0x1
0000000000033314	str	x8, [x20, #0x58]
0000000000033318	add	x8, x12, #0x1a0
000000000003331c	cmp	x8, x24
0000000000033320	b.lo	0x33464
0000000000033324	adr	x9, #0x4fd5c
0000000000033328	nop
000000000003332c	cmp	x8, x9
0000000000033330	b.hs	0x33464
0000000000033334	add	x11, x12, #0x1b8
0000000000033338	ldxr	x9, [x11]
000000000003333c	add	x10, x9, #0x1
0000000000033340	stxr	w13, x10, [x11]
0000000000033344	cbnz	w13, 0x33338
0000000000033348	add	x11, x12, #0x1b0
000000000003334c	ldr	x13, [x12, #0x1b0]
0000000000033350	b	0x33364
0000000000033354	clrex
0000000000033358	mov	w14, #0x0
000000000003335c	mov	x13, x12
0000000000033360	cbnz	w14, 0x3338c
0000000000033364	cmp	x13, x9
0000000000033368	b.gt	0x3338c
000000000003336c	ldxr	x12, [x11]
0000000000033370	cmp	x12, x13
0000000000033374	b.ne	0x33354
0000000000033378	stlxr	w13, x10, [x11]
000000000003337c	cbnz	w13, 0x33358
0000000000033380	mov	w14, #0x1
0000000000033384	mov	x13, x12
0000000000033388	cbz	w14, 0x33364
000000000003338c	ldxr	x9, [x8]
0000000000033390	add	x9, x9, #0x1
0000000000033394	stxr	w10, x9, [x8]
0000000000033398	cbnz	w10, 0x3338c
000000000003339c	b	0x33488
00000000000333a0	add	x9, x19, #0x78
00000000000333a4	b	0x333bc
00000000000333a8	str	wzr, [x9, #0x10]
00000000000333ac	stp	xzr, xzr, [x9, #0x30]
00000000000333b0	add	x9, x9, #0x40
00000000000333b4	subs	x8, x8, #0x1
00000000000333b8	b.eq	0x324f8
00000000000333bc	ldrb	w10, [x9, #0x1]
00000000000333c0	and	w10, w10, #0x7
00000000000333c4	cmp	w10, #0x4
00000000000333c8	b.ne	0x333b0
00000000000333cc	ldp	x10, x11, [x9, #0x30]
00000000000333d0	cbz	x10, 0x333dc
00000000000333d4	cbnz	x11, 0x333e0
00000000000333d8	b	0x333ec
00000000000333dc	cbz	x11, 0x33428
00000000000333e0	str	x10, [x11, #0x30]
00000000000333e4	ldr	x10, [x9, #0x30]
00000000000333e8	cbz	x10, 0x333f0
00000000000333ec	str	x11, [x10, #0x38]
00000000000333f0	ldr	x11, [x20, #0x28]
00000000000333f4	cmp	x9, x11
00000000000333f8	b.eq	0x3340c
00000000000333fc	ldr	x11, [x20, #0x20]
0000000000033400	cmp	x9, x11
0000000000033404	b.ne	0x333a8
0000000000033408	b	0x33420
000000000003340c	ldr	x11, [x9, #0x38]
0000000000033410	str	x11, [x20, #0x28]
0000000000033414	ldr	x11, [x20, #0x20]
0000000000033418	cmp	x9, x11
000000000003341c	b.ne	0x333a8
0000000000033420	str	x10, [x20, #0x20]
0000000000033424	b	0x333a8
0000000000033428	ldr	x11, [x20, #0x20]
000000000003342c	cmp	x9, x11
0000000000033430	b.eq	0x333f0
0000000000033434	ldr	x11, [x20, #0x28]
0000000000033438	cmp	x9, x11
000000000003343c	b.ne	0x333b0
0000000000033440	b	0x333f0
0000000000033444	ldr	x11, [x8]
0000000000033448	cmp	x11, x19
000000000003344c	b.ne	0x32778
0000000000033450	b	0x3275c
0000000000033454	ldr	x11, [x8]
0000000000033458	cmp	x11, x19
000000000003345c	b.ne	0x327bc
0000000000033460	b	0x327a0
0000000000033464	ldp	x11, x10, [x12, #0x1b0]
0000000000033468	add	x9, x10, #0x1
000000000003346c	str	x9, [x12, #0x1b8]
0000000000033470	cmp	x10, x11
0000000000033474	b.lt	0x3347c
0000000000033478	str	x9, [x12, #0x1b0]
000000000003347c	ldr	x9, [x8]
0000000000033480	add	x9, x9, #0x1
0000000000033484	str	x9, [x8]
0000000000033488	ldp	x29, x30, [sp, #0x50]
000000000003348c	ldp	x20, x19, [sp, #0x40]
0000000000033490	ldp	x22, x21, [sp, #0x30]
0000000000033494	ldp	x24, x23, [sp, #0x20]
0000000000033498	ldp	x26, x25, [sp, #0x10]
000000000003349c	ldp	x28, x27, [sp], #0x60
00000000000334a0	ret
_mi_segment_abandon:
00000000000334a4	sub	sp, sp, #0x50
00000000000334a8	stp	x24, x23, [sp, #0x10]
00000000000334ac	stp	x22, x21, [sp, #0x20]
00000000000334b0	stp	x20, x19, [sp, #0x30]
00000000000334b4	stp	x29, x30, [sp, #0x40]
00000000000334b8	add	x29, sp, #0x40
00000000000334bc	mov	x20, x1
00000000000334c0	mov	x19, x0
00000000000334c4	mov	w0, #0xa
00000000000334c8	bl	_mi_option_get
00000000000334cc	cbz	x0, 0x335b4
00000000000334d0	mov	x0, sp
00000000000334d4	mov	x1, #0x0
00000000000334d8	bl	0x4dbbc ; symbol stub for: _gettimeofday
00000000000334dc	ldr	x21, [x20, #0x28]
00000000000334e0	cbz	x21, 0x335b0
00000000000334e4	ldr	x8, [sp]
00000000000334e8	ldr	w9, [sp, #0x8]
00000000000334ec	mov	w10, #0x4dd3
00000000000334f0	movk	w10, #0x1062, lsl #16
00000000000334f4	smull	x9, w9, w10
00000000000334f8	lsr	x10, x9, #63
00000000000334fc	asr	x9, x9, #38
0000000000033500	add	w9, w9, w10
0000000000033504	mov	w10, #0x3e8
0000000000033508	madd	w22, w8, w10, w9
000000000003350c	mov	w23, #0x1
0000000000033510	b	0x33520
0000000000033514	str	wzr, [x24, #0x10]
0000000000033518	stp	xzr, xzr, [x24, #0x30]
000000000003351c	cbz	x21, 0x335b0
0000000000033520	mov	x24, x21
0000000000033524	ldr	w8, [x21, #0x10]
0000000000033528	cmp	w8, w22
000000000003352c	b.gt	0x3381c
0000000000033530	ldr	x21, [x24, #0x38]
0000000000033534	mov	w0, #0xa
0000000000033538	bl	_mi_option_get
000000000003353c	cbz	x0, 0x33514
0000000000033540	and	x9, x24, #0xffffffffffc00000
0000000000033544	ldrb	w8, [x9, #0x8]
0000000000033548	cbnz	w8, 0x33514
000000000003354c	ldrb	w8, [x24, #0x1]
0000000000033550	and	w10, w8, #0x7
0000000000033554	cmp	w10, #0x4
0000000000033558	b.ne	0x33514
000000000003355c	ldr	w10, [x9, #0x70]
0000000000033560	cmp	w10, #0x3
0000000000033564	b.ne	0x3357c
0000000000033568	ldr	x1, [x9, #0x48]
000000000003356c	ldrb	w10, [x24]
0000000000033570	madd	x0, x1, x10, x9
0000000000033574	cbnz	x10, 0x3359c
0000000000033578	b	0x33590
000000000003357c	ldr	x10, [x9, #0x60]
0000000000033580	lsl	x1, x23, x10
0000000000033584	ldrb	w10, [x24]
0000000000033588	madd	x0, x1, x10, x9
000000000003358c	cbnz	x10, 0x3359c
0000000000033590	ldr	x9, [x9, #0x50]
0000000000033594	add	x0, x0, x9
0000000000033598	sub	x1, x1, x9
000000000003359c	orr	w8, w8, #0x2
00000000000335a0	strb	w8, [x24, #0x1]
00000000000335a4	cbz	x1, 0x33514
00000000000335a8	bl	__mi_os_reset
00000000000335ac	b	0x33514
00000000000335b0	stp	xzr, xzr, [x20, #0x20]
00000000000335b4	mov	w0, #0xb
00000000000335b8	bl	_mi_option_get
00000000000335bc	ldrb	w8, [x19, #0x8]
00000000000335c0	cbz	w8, 0x33834
00000000000335c4	ldr	w8, [x19, #0x70]
00000000000335c8	cbz	w8, 0x335dc
00000000000335cc	cmp	w8, #0x1
00000000000335d0	b.ne	0x33630
00000000000335d4	add	x8, x20, #0x10
00000000000335d8	b	0x335e4
00000000000335dc	mov	x8, x20
00000000000335e0	cbz	x20, 0x33630
00000000000335e4	mov	x9, x19
00000000000335e8	ldp	x10, x11, [x9, #0x18]!
00000000000335ec	cbz	x10, 0x335f8
00000000000335f0	cbnz	x11, 0x335fc
00000000000335f4	b	0x33608
00000000000335f8	cbz	x11, 0x33b14
00000000000335fc	str	x10, [x11, #0x18]
0000000000033600	ldr	x10, [x9]
0000000000033604	cbz	x10, 0x3360c
0000000000033608	str	x11, [x10, #0x20]
000000000003360c	ldr	x11, [x8]
0000000000033610	cmp	x11, x19
0000000000033614	b.eq	0x33968
0000000000033618	ldr	x10, [x8, #0x8]
000000000003361c	cmp	x10, x19
0000000000033620	b.ne	0x3362c
0000000000033624	ldr	x10, [x19, #0x20]
0000000000033628	str	x10, [x8, #0x8]
000000000003362c	stp	xzr, xzr, [x9]
0000000000033630	ldr	x8, [x20, #0x70]
0000000000033634	add	x9, x8, #0xc0
0000000000033638	adr	x10, #0x4f808
000000000003363c	nop
0000000000033640	cmp	x9, x10
0000000000033644	b.lo	0x336c8
0000000000033648	adr	x11, #0x4fa38
000000000003364c	nop
0000000000033650	cmp	x9, x11
0000000000033654	b.hs	0x336c8
0000000000033658	add	x13, x8, #0xd8
000000000003365c	ldxr	x11, [x13]
0000000000033660	add	x12, x11, #0x1
0000000000033664	stxr	w14, x12, [x13]
0000000000033668	cbnz	w14, 0x3365c
000000000003366c	add	x13, x8, #0xd0
0000000000033670	ldr	x14, [x8, #0xd0]
0000000000033674	b	0x33688
0000000000033678	clrex
000000000003367c	mov	w15, #0x0
0000000000033680	mov	x14, x8
0000000000033684	cbnz	w15, 0x336b0
0000000000033688	cmp	x14, x11
000000000003368c	b.gt	0x336b0
0000000000033690	ldxr	x8, [x13]
0000000000033694	cmp	x8, x14
0000000000033698	b.ne	0x33678
000000000003369c	stlxr	w14, x12, [x13]
00000000000336a0	cbnz	w14, 0x3367c
00000000000336a4	mov	w15, #0x1
00000000000336a8	mov	x14, x8
00000000000336ac	cbz	w15, 0x33688
00000000000336b0	ldxr	x8, [x9]
00000000000336b4	add	x8, x8, #0x1
00000000000336b8	stxr	w11, x8, [x9]
00000000000336bc	cbnz	w11, 0x336b0
00000000000336c0	ldr	x8, [x20, #0x70]
00000000000336c4	b	0x336ec
00000000000336c8	ldp	x13, x12, [x8, #0xd0]
00000000000336cc	add	x11, x12, #0x1
00000000000336d0	str	x11, [x8, #0xd8]
00000000000336d4	cmp	x12, x13
00000000000336d8	b.lt	0x336e0
00000000000336dc	str	x11, [x8, #0xd0]
00000000000336e0	ldr	x11, [x9]
00000000000336e4	add	x11, x11, #0x1
00000000000336e8	str	x11, [x9]
00000000000336ec	ldr	x9, [x19, #0x48]
00000000000336f0	cmp	x8, x10
00000000000336f4	cset	w11, hs
00000000000336f8	add	x10, x10, #0x240
00000000000336fc	cmp	x8, x10
0000000000033700	cset	w10, lo
0000000000033704	and	w10, w11, w10
0000000000033708	add	x12, x8, #0x18
000000000003370c	cmp	x9, #0x0
0000000000033710	b.le	0x33788
0000000000033714	cbz	w10, 0x337f8
0000000000033718	ldxr	x10, [x12]
000000000003371c	sub	x10, x10, #0x1
0000000000033720	stxr	w11, x10, [x12]
0000000000033724	cbnz	w11, 0x33718
0000000000033728	add	x11, x8, #0x10
000000000003372c	ldr	x13, [x8, #0x10]
0000000000033730	b	0x33744
0000000000033734	clrex
0000000000033738	mov	w14, #0x0
000000000003373c	mov	x13, x12
0000000000033740	cbnz	w14, 0x3376c
0000000000033744	cmp	x13, x10
0000000000033748	b.ge	0x3376c
000000000003374c	ldxr	x12, [x11]
0000000000033750	cmp	x12, x13
0000000000033754	b.ne	0x33734
0000000000033758	stlxr	w13, x10, [x11]
000000000003375c	cbnz	w13, 0x33738
0000000000033760	mov	w14, #0x1
0000000000033764	mov	x13, x12
0000000000033768	cbz	w14, 0x33744
000000000003376c	add	x8, x8, #0x8
0000000000033770	ldxr	x10, [x8]
0000000000033774	add	x10, x10, #0x1
0000000000033778	stxr	w11, x10, [x8]
000000000003377c	cbnz	w11, 0x33770
0000000000033780	mov	x10, #-0x1
0000000000033784	b	0x339a4
0000000000033788	cbz	w10, 0x3397c
000000000003378c	ldxr	x10, [x12]
0000000000033790	add	x11, x10, #0x1
0000000000033794	stxr	w13, x11, [x12]
0000000000033798	cbnz	w13, 0x3378c
000000000003379c	add	x12, x8, #0x10
00000000000337a0	ldr	x14, [x8, #0x10]
00000000000337a4	b	0x337b8
00000000000337a8	clrex
00000000000337ac	mov	w15, #0x0
00000000000337b0	mov	x14, x13
00000000000337b4	cbnz	w15, 0x337e0
00000000000337b8	cmp	x14, x10
00000000000337bc	b.gt	0x337e0
00000000000337c0	ldxr	x13, [x12]
00000000000337c4	cmp	x13, x14
00000000000337c8	b.ne	0x337a8
00000000000337cc	stlxr	w14, x11, [x12]
00000000000337d0	cbnz	w14, 0x337ac
00000000000337d4	mov	w15, #0x1
00000000000337d8	mov	x14, x13
00000000000337dc	cbz	w15, 0x337b8
00000000000337e0	mov	w10, #0x1
00000000000337e4	ldxr	x11, [x8]
00000000000337e8	add	x11, x11, #0x1
00000000000337ec	stxr	w12, x11, [x8]
00000000000337f0	cbnz	w12, 0x337e4
00000000000337f4	b	0x339a4
00000000000337f8	ldp	x11, x10, [x8, #0x10]
00000000000337fc	sub	x10, x10, #0x1
0000000000033800	str	x10, [x8, #0x18]
0000000000033804	cmp	x10, x11
0000000000033808	b.le	0x33810
000000000003380c	str	x10, [x8, #0x10]
0000000000033810	add	x8, x8, #0x8
0000000000033814	mov	x10, #-0x1
0000000000033818	b	0x33998
000000000003381c	str	x24, [x20, #0x28]
0000000000033820	str	xzr, [x24, #0x30]
0000000000033824	mov	w0, #0xb
0000000000033828	bl	_mi_option_get
000000000003382c	ldrb	w8, [x19, #0x8]
0000000000033830	cbnz	w8, 0x335c4
0000000000033834	ldr	x8, [x19, #0x40]
0000000000033838	cbz	x8, 0x335c4
000000000003383c	cbz	x0, 0x33a70
0000000000033840	mov	x21, #0x0
0000000000033844	add	x22, x19, #0x78
0000000000033848	mov	w23, #0x1
000000000003384c	b	0x33864
0000000000033850	ldr	x8, [x19, #0x40]
0000000000033854	add	x21, x21, #0x1
0000000000033858	add	x22, x22, #0x40
000000000003385c	cmp	x21, x8
0000000000033860	b.hs	0x335c4
0000000000033864	ldrb	w9, [x22, #0x1]
0000000000033868	and	w9, w9, #0x7
000000000003386c	cmp	w9, #0x4
0000000000033870	b.ne	0x33854
0000000000033874	ldp	x8, x9, [x22, #0x30]
0000000000033878	cbz	x8, 0x33884
000000000003387c	cbnz	x9, 0x33888
0000000000033880	b	0x33894
0000000000033884	cbz	x9, 0x33918
0000000000033888	str	x8, [x9, #0x30]
000000000003388c	ldr	x8, [x22, #0x30]
0000000000033890	cbz	x8, 0x33898
0000000000033894	str	x9, [x8, #0x38]
0000000000033898	ldr	x9, [x20, #0x28]
000000000003389c	cmp	x22, x9
00000000000338a0	b.eq	0x338fc
00000000000338a4	ldr	x9, [x20, #0x20]
00000000000338a8	cmp	x22, x9
00000000000338ac	b.eq	0x33910
00000000000338b0	str	wzr, [x22, #0x10]
00000000000338b4	stp	xzr, xzr, [x22, #0x30]
00000000000338b8	mov	w0, #0xa
00000000000338bc	bl	_mi_option_get
00000000000338c0	cbz	x0, 0x33850
00000000000338c4	ldrb	w8, [x19, #0x8]
00000000000338c8	cbnz	w8, 0x33850
00000000000338cc	ldrb	w8, [x22, #0x1]
00000000000338d0	and	w9, w8, #0x7
00000000000338d4	cmp	w9, #0x4
00000000000338d8	b.ne	0x33850
00000000000338dc	ldr	w9, [x19, #0x70]
00000000000338e0	cmp	w9, #0x3
00000000000338e4	b.ne	0x33934
00000000000338e8	ldr	x1, [x19, #0x48]
00000000000338ec	ldrb	w9, [x22]
00000000000338f0	madd	x0, x1, x9, x19
00000000000338f4	cbnz	x9, 0x33954
00000000000338f8	b	0x33948
00000000000338fc	ldr	x9, [x22, #0x38]
0000000000033900	str	x9, [x20, #0x28]
0000000000033904	ldr	x9, [x20, #0x20]
0000000000033908	cmp	x22, x9
000000000003390c	b.ne	0x338b0
0000000000033910	str	x8, [x20, #0x20]
0000000000033914	b	0x338b0
0000000000033918	ldr	x9, [x20, #0x20]
000000000003391c	cmp	x22, x9
0000000000033920	b.eq	0x33898
0000000000033924	ldr	x9, [x20, #0x28]
0000000000033928	cmp	x22, x9
000000000003392c	b.ne	0x338b8
0000000000033930	b	0x33898
0000000000033934	ldr	x9, [x19, #0x60]
0000000000033938	lsl	x1, x23, x9
000000000003393c	ldrb	w9, [x22]
0000000000033940	madd	x0, x1, x9, x19
0000000000033944	cbnz	x9, 0x33954
0000000000033948	ldr	x9, [x19, #0x50]
000000000003394c	add	x0, x0, x9
0000000000033950	sub	x1, x1, x9
0000000000033954	orr	w8, w8, #0x2
0000000000033958	strb	w8, [x22, #0x1]
000000000003395c	cbz	x1, 0x33850
0000000000033960	bl	__mi_os_reset
0000000000033964	b	0x33850
0000000000033968	str	x10, [x8]
000000000003396c	ldr	x10, [x8, #0x8]
0000000000033970	cmp	x10, x19
0000000000033974	b.ne	0x3362c
0000000000033978	b	0x33624
000000000003397c	ldp	x12, x11, [x8, #0x10]
0000000000033980	add	x10, x11, #0x1
0000000000033984	str	x10, [x8, #0x18]
0000000000033988	cmp	x11, x12
000000000003398c	b.lt	0x33994
0000000000033990	str	x10, [x8, #0x10]
0000000000033994	mov	w10, #0x1
0000000000033998	ldr	x11, [x8]
000000000003399c	add	x11, x11, #0x1
00000000000339a0	str	x11, [x8]
00000000000339a4	ldp	x8, x11, [x20, #0x38]
00000000000339a8	add	x8, x8, x10
00000000000339ac	str	x8, [x20, #0x38]
00000000000339b0	cmp	x8, x11
00000000000339b4	b.ls	0x339bc
00000000000339b8	str	x8, [x20, #0x40]
00000000000339bc	ldp	x8, x10, [x20, #0x48]
00000000000339c0	sub	x8, x8, x9
00000000000339c4	str	x8, [x20, #0x48]
00000000000339c8	cmp	x8, x10
00000000000339cc	b.ls	0x339d4
00000000000339d0	str	x8, [x20, #0x50]
00000000000339d4	add	x8, x19, #0x68
00000000000339d8	stlr	xzr, [x8]
00000000000339dc	str	xzr, [x19, #0x30]
00000000000339e0	add	x8, x19, #0x10
00000000000339e4	stlr	xzr, [x8]
00000000000339e8	nop
00000000000339ec	ldr	x11, #0x4efd4
00000000000339f0	adr	x9, #0x4efd0
00000000000339f4	nop
00000000000339f8	b	0x33a0c
00000000000339fc	clrex
0000000000033a00	mov	w12, #0x0
0000000000033a04	mov	x11, x10
0000000000033a08	cbnz	w12, 0x33a40
0000000000033a0c	and	x10, x11, #0xffffffffffc00000
0000000000033a10	stlr	x10, [x8]
0000000000033a14	ldxr	x10, [x9]
0000000000033a18	cmp	x10, x11
0000000000033a1c	b.ne	0x339fc
0000000000033a20	add	w11, w11, #0x1
0000000000033a24	and	x11, x11, #0x3fffff
0000000000033a28	orr	x11, x11, x19
0000000000033a2c	stlxr	w12, x11, [x9]
0000000000033a30	cbnz	w12, 0x33a00
0000000000033a34	mov	w12, #0x1
0000000000033a38	mov	x11, x10
0000000000033a3c	cbz	w12, 0x33a0c
0000000000033a40	adr	x8, #0x4efc0
0000000000033a44	nop
0000000000033a48	ldxr	x9, [x8]
0000000000033a4c	add	x9, x9, #0x1
0000000000033a50	stxr	w10, x9, [x8]
0000000000033a54	cbnz	w10, 0x33a48
0000000000033a58	ldp	x29, x30, [sp, #0x40]
0000000000033a5c	ldp	x20, x19, [sp, #0x30]
0000000000033a60	ldp	x22, x21, [sp, #0x20]
0000000000033a64	ldp	x24, x23, [sp, #0x10]
0000000000033a68	add	sp, sp, #0x50
0000000000033a6c	ret
0000000000033a70	add	x9, x19, #0x78
0000000000033a74	b	0x33a8c
0000000000033a78	str	wzr, [x9, #0x10]
0000000000033a7c	stp	xzr, xzr, [x9, #0x30]
0000000000033a80	add	x9, x9, #0x40
0000000000033a84	subs	x8, x8, #0x1
0000000000033a88	b.eq	0x335c4
0000000000033a8c	ldrb	w10, [x9, #0x1]
0000000000033a90	and	w10, w10, #0x7
0000000000033a94	cmp	w10, #0x4
0000000000033a98	b.ne	0x33a80
0000000000033a9c	ldp	x10, x11, [x9, #0x30]
0000000000033aa0	cbz	x10, 0x33aac
0000000000033aa4	cbnz	x11, 0x33ab0
0000000000033aa8	b	0x33abc
0000000000033aac	cbz	x11, 0x33af8
0000000000033ab0	str	x10, [x11, #0x30]
0000000000033ab4	ldr	x10, [x9, #0x30]
0000000000033ab8	cbz	x10, 0x33ac0
0000000000033abc	str	x11, [x10, #0x38]
0000000000033ac0	ldr	x11, [x20, #0x28]
0000000000033ac4	cmp	x9, x11
0000000000033ac8	b.eq	0x33adc
0000000000033acc	ldr	x11, [x20, #0x20]
0000000000033ad0	cmp	x9, x11
0000000000033ad4	b.ne	0x33a78
0000000000033ad8	b	0x33af0
0000000000033adc	ldr	x11, [x9, #0x38]
0000000000033ae0	str	x11, [x20, #0x28]
0000000000033ae4	ldr	x11, [x20, #0x20]
0000000000033ae8	cmp	x9, x11
0000000000033aec	b.ne	0x33a78
0000000000033af0	str	x10, [x20, #0x20]
0000000000033af4	b	0x33a78
0000000000033af8	ldr	x11, [x20, #0x20]
0000000000033afc	cmp	x9, x11
0000000000033b00	b.eq	0x33ac0
0000000000033b04	ldr	x11, [x20, #0x28]
0000000000033b08	cmp	x9, x11
0000000000033b0c	b.ne	0x33a80
0000000000033b10	b	0x33ac0
0000000000033b14	ldr	x11, [x8]
0000000000033b18	cmp	x11, x19
0000000000033b1c	b.ne	0x33630
0000000000033b20	b	0x3360c
__mi_free_delayed_block:
0000000000033b24	stp	x22, x21, [sp, #-0x30]!
0000000000033b28	stp	x20, x19, [sp, #0x10]
0000000000033b2c	stp	x29, x30, [sp, #0x20]
0000000000033b30	add	x29, sp, #0x20
0000000000033b34	mov	x20, x0
0000000000033b38	and	x21, x0, #0xffffffffffc00000
0000000000033b3c	and	x8, x0, #0x3fffff
0000000000033b40	ldr	x9, [x21, #0x60]
0000000000033b44	lsr	x22, x8, x9
0000000000033b48	add	x8, x21, x22, lsl #6
0000000000033b4c	add	x19, x8, #0x78
0000000000033b50	add	x8, x8, #0x98
0000000000033b54	ldar	x9, [x8]
0000000000033b58	and	w10, w9, #0x3
0000000000033b5c	cmp	w10, #0x0
0000000000033b60	ccmp	w10, #0x3, #0x4, ne
0000000000033b64	b.eq	0x33b9c
0000000000033b68	cmp	w10, #0x1
0000000000033b6c	b.eq	0x33b94
0000000000033b70	ldxr	x10, [x8]
0000000000033b74	cmp	x10, x9
0000000000033b78	b.ne	0x33b8c
0000000000033b7c	and	x9, x9, #0xfffffffffffffffc
0000000000033b80	stlxr	w10, x9, [x8]
0000000000033b84	cbnz	w10, 0x33b54
0000000000033b88	b	0x33b9c
0000000000033b8c	clrex
0000000000033b90	b	0x33b54
0000000000033b94	wfe
0000000000033b98	b	0x33b54
0000000000033b9c	mov	x0, x19
0000000000033ba0	mov	w1, #0x0
0000000000033ba4	bl	__mi_page_free_collect
0000000000033ba8	add	x8, x21, x22, lsl #6
0000000000033bac	ldr	x9, [x8, #0x90]
0000000000033bb0	str	x9, [x20]
0000000000033bb4	str	x20, [x8, #0x90]
0000000000033bb8	ldr	w9, [x8, #0x88]
0000000000033bbc	subs	w9, w9, #0x1
0000000000033bc0	str	w9, [x8, #0x88]
0000000000033bc4	b.eq	0x33be0
0000000000033bc8	ldrb	w8, [x8, #0x7e]
0000000000033bcc	tbnz	w8, #0x0, 0x33bf4
0000000000033bd0	ldp	x29, x30, [sp, #0x20]
0000000000033bd4	ldp	x20, x19, [sp, #0x10]
0000000000033bd8	ldp	x22, x21, [sp], #0x30
0000000000033bdc	ret
0000000000033be0	mov	x0, x19
0000000000033be4	ldp	x29, x30, [sp, #0x20]
0000000000033be8	ldp	x20, x19, [sp, #0x10]
0000000000033bec	ldp	x22, x21, [sp], #0x30
0000000000033bf0	b	__mi_page_retire
0000000000033bf4	mov	x0, x19
0000000000033bf8	ldp	x29, x30, [sp, #0x20]
0000000000033bfc	ldp	x20, x19, [sp, #0x10]
0000000000033c00	ldp	x22, x21, [sp], #0x30
0000000000033c04	b	__mi_page_unfull
__mi_page_retire:
0000000000033c08	ldrb	w9, [x0, #0x6]
0000000000033c0c	and	w8, w9, #0xfffffffd
0000000000033c10	strb	w8, [x0, #0x6]
0000000000033c14	ldr	w8, [x0, #0x14]
0000000000033c18	tbnz	w9, #0x0, 0x33c2c
0000000000033c1c	cmp	w8, #0x9
0000000000033c20	b.hs	0x33c34
0000000000033c24	mov	w10, #0x1
0000000000033c28	b	0x33c88
0000000000033c2c	mov	w10, #0x4a
0000000000033c30	b	0x33c8c
0000000000033c34	add	x10, x8, #0x7
0000000000033c38	lsr	x10, x10, #3
0000000000033c3c	cmp	w8, #0x40
0000000000033c40	b.hi	0x33c50
0000000000033c44	add	w10, w10, #0x1
0000000000033c48	and	x10, x10, #0xfe
0000000000033c4c	b	0x33c88
0000000000033c50	cmp	w8, #0x200, lsl #12
0000000000033c54	b.ls	0x33c60
0000000000033c58	mov	w10, #0x49
0000000000033c5c	b	0x33c88
0000000000033c60	sub	x10, x10, #0x1
0000000000033c64	clz	x11, x10
0000000000033c68	mov	w12, #0x3f
0000000000033c6c	sub	w11, w12, w11
0000000000033c70	and	w11, w11, #0xff
0000000000033c74	sub	w12, w11, #0x2
0000000000033c78	lsr	x10, x10, x12
0000000000033c7c	and	w10, w10, #0x3
0000000000033c80	bfi	w10, w11, #2, #8
0000000000033c84	add	w10, w10, #0xfd
0000000000033c88	and	x10, x10, #0xff
0000000000033c8c	ldr	x11, [x0, #0x28]
0000000000033c90	mov	w12, #0x18
0000000000033c94	madd	x12, x10, x12, x11
0000000000033c98	add	x1, x12, #0x410
0000000000033c9c	tbnz	w9, #0x0, 0x33cc8
0000000000033ca0	cmp	w8, #0x200, lsl #12
0000000000033ca4	b.hi	0x33cc8
0000000000033ca8	mov	w9, #0x18
0000000000033cac	madd	x9, x10, x9, x11
0000000000033cb0	ldr	x9, [x9, #0x418]
0000000000033cb4	cmp	x9, x0
0000000000033cb8	b.ne	0x33cc8
0000000000033cbc	ldr	x9, [x1]
0000000000033cc0	cmp	x9, x0
0000000000033cc4	b.eq	0x33cd0
0000000000033cc8	mov	w2, #0x0
0000000000033ccc	b	__mi_page_free
0000000000033cd0	cmp	w8, #0x4, lsl #12
0000000000033cd4	mov	w8, #0x4
0000000000033cd8	mov	w9, #0x10
0000000000033cdc	csel	w8, w9, w8, ls
0000000000033ce0	ldrb	w9, [x0, #0x7]
0000000000033ce4	bfxil	w8, w9, #0, #1
0000000000033ce8	strb	w8, [x0, #0x7]
0000000000033cec	ldr	x8, [x0, #0x28]
0000000000033cf0	sub	x9, x1, x8
0000000000033cf4	sub	x9, x9, #0x410
0000000000033cf8	asr	x9, x9, #3
0000000000033cfc	mov	x10, #-0x5555555555555556
0000000000033d00	movk	x10, #0xaaab
0000000000033d04	mul	x9, x9, x10
0000000000033d08	ldr	x10, [x8, #0xbd0]
0000000000033d0c	cmp	x9, x10
0000000000033d10	b.lo	0x33d24
0000000000033d14	ldr	x10, [x8, #0xbd8]
0000000000033d18	cmp	x9, x10
0000000000033d1c	b.hi	0x33d34
0000000000033d20	ret
0000000000033d24	str	x9, [x8, #0xbd0]
0000000000033d28	ldr	x10, [x8, #0xbd8]
0000000000033d2c	cmp	x9, x10
0000000000033d30	b.ls	0x33d20
0000000000033d34	str	x9, [x8, #0xbd8]
0000000000033d38	ret
__mi_page_unfull:
0000000000033d3c	ldrb	w8, [x0, #0x6]
0000000000033d40	tbz	w8, #0x0, 0x341a0
0000000000033d44	ldr	x10, [x0, #0x28]
0000000000033d48	and	w9, w8, #0xfe
0000000000033d4c	strb	w9, [x0, #0x6]
0000000000033d50	ldr	w9, [x0, #0x14]
0000000000033d54	cmp	w9, #0x9
0000000000033d58	b.hs	0x33d78
0000000000033d5c	mov	w11, #0x1
0000000000033d60	orr	w8, w8, #0x1
0000000000033d64	strb	w8, [x0, #0x6]
0000000000033d68	ldr	x9, [x0, #0x28]
0000000000033d6c	ldr	x8, [x0, #0x38]
0000000000033d70	cbnz	x8, 0x33e08
0000000000033d74	b	0x33e10
0000000000033d78	add	x11, x9, #0x7
0000000000033d7c	lsr	x11, x11, #3
0000000000033d80	cmp	w9, #0x40
0000000000033d84	b.hi	0x33da8
0000000000033d88	add	w9, w11, #0x1
0000000000033d8c	and	x11, x9, #0xfe
0000000000033d90	orr	w8, w8, #0x1
0000000000033d94	strb	w8, [x0, #0x6]
0000000000033d98	ldr	x9, [x0, #0x28]
0000000000033d9c	ldr	x8, [x0, #0x38]
0000000000033da0	cbnz	x8, 0x33e08
0000000000033da4	b	0x33e10
0000000000033da8	cmp	w9, #0x200, lsl #12
0000000000033dac	b.ls	0x33dcc
0000000000033db0	mov	w11, #0x49
0000000000033db4	orr	w8, w8, #0x1
0000000000033db8	strb	w8, [x0, #0x6]
0000000000033dbc	ldr	x9, [x0, #0x28]
0000000000033dc0	ldr	x8, [x0, #0x38]
0000000000033dc4	cbnz	x8, 0x33e08
0000000000033dc8	b	0x33e10
0000000000033dcc	sub	x9, x11, #0x1
0000000000033dd0	clz	x11, x9
0000000000033dd4	mov	w12, #0x3f
0000000000033dd8	sub	w11, w12, w11
0000000000033ddc	and	w11, w11, #0xff
0000000000033de0	sub	w12, w11, #0x2
0000000000033de4	lsr	x9, x9, x12
0000000000033de8	and	w9, w9, #0x3
0000000000033dec	bfi	w9, w11, #2, #8
0000000000033df0	add	w11, w9, #0xfd
0000000000033df4	orr	w8, w8, #0x1
0000000000033df8	strb	w8, [x0, #0x6]
0000000000033dfc	ldr	x9, [x0, #0x28]
0000000000033e00	ldr	x8, [x0, #0x38]
0000000000033e04	cbz	x8, 0x33e10
0000000000033e08	ldr	x12, [x0, #0x30]
0000000000033e0c	str	x12, [x8, #0x30]
0000000000033e10	ldr	x12, [x0, #0x30]
0000000000033e14	cbz	x12, 0x33e1c
0000000000033e18	str	x8, [x12, #0x38]
0000000000033e1c	ldr	x8, [x10, #0xb08]
0000000000033e20	cmp	x8, x0
0000000000033e24	b.eq	0x33e44
0000000000033e28	and	x11, x11, #0xff
0000000000033e2c	mov	w8, #0x7
0000000000033e30	movk	w8, #0x20, lsl #16
0000000000033e34	ldr	x13, [x10, #0xb00]
0000000000033e38	cmp	x13, x0
0000000000033e3c	b.ne	0x33fd4
0000000000033e40	b	0x33e64
0000000000033e44	ldr	x8, [x0, #0x38]
0000000000033e48	str	x8, [x10, #0xb08]
0000000000033e4c	and	x11, x11, #0xff
0000000000033e50	mov	w8, #0x7
0000000000033e54	movk	w8, #0x20, lsl #16
0000000000033e58	ldr	x13, [x10, #0xb00]
0000000000033e5c	cmp	x13, x0
0000000000033e60	b.ne	0x33fd4
0000000000033e64	str	x12, [x10, #0xb00]
0000000000033e68	ldr	x15, [x10, #0xb10]
0000000000033e6c	cmp	x15, #0x400
0000000000033e70	b.hi	0x33fd4
0000000000033e74	adr	x13, #0x1b20c
0000000000033e78	nop
0000000000033e7c	cmp	x12, #0x0
0000000000033e80	csel	x12, x13, x12, eq
0000000000033e84	add	x13, x15, #0x7
0000000000033e88	lsr	x13, x13, #3
0000000000033e8c	add	x14, x9, x13, lsl #3
0000000000033e90	ldr	x14, [x14, #0x8]
0000000000033e94	cmp	x14, x12
0000000000033e98	b.eq	0x33fd4
0000000000033e9c	cmp	x15, #0x9
0000000000033ea0	b.hs	0x33eac
0000000000033ea4	mov	x14, #0x0
0000000000033ea8	b	0x33f78
0000000000033eac	sub	x16, x13, #0x1
0000000000033eb0	clz	x17, x16
0000000000033eb4	mov	w14, #0x3f
0000000000033eb8	sub	w17, w14, w17
0000000000033ebc	and	w17, w17, #0xff
0000000000033ec0	sub	w1, w17, #0x2
0000000000033ec4	lsr	x16, x16, x1
0000000000033ec8	and	w16, w16, #0x3
0000000000033ecc	bfi	w16, w17, #2, #8
0000000000033ed0	sub	w16, w16, #0x3
0000000000033ed4	add	w17, w13, #0x1
0000000000033ed8	and	w17, w17, #0xfffffffe
0000000000033edc	cmp	x15, #0x40
0000000000033ee0	csel	w17, w16, w17, hi
0000000000033ee4	add	x15, x9, #0x410
0000000000033ee8	add	x16, x10, #0xae8
0000000000033eec	and	w17, w17, #0xff
0000000000033ef0	ldr	x1, [x16, #0x10]
0000000000033ef4	add	x2, x1, #0x7
0000000000033ef8	lsr	x1, x2, #3
0000000000033efc	cmp	x2, #0x10
0000000000033f00	b.hs	0x33f0c
0000000000033f04	mov	w2, #0x1
0000000000033f08	b	0x33f54
0000000000033f0c	cmp	x2, #0x47
0000000000033f10	b.hi	0x33f20
0000000000033f14	add	w2, w1, #0x1
0000000000033f18	and	w2, w2, #0xfffffffe
0000000000033f1c	b	0x33f54
0000000000033f20	cmp	x2, x8
0000000000033f24	b.ls	0x33f30
0000000000033f28	mov	w2, #0x49
0000000000033f2c	b	0x33f54
0000000000033f30	sub	x2, x1, #0x1
0000000000033f34	clz	x3, x2
0000000000033f38	sub	w3, w14, w3
0000000000033f3c	and	w3, w3, #0xff
0000000000033f40	sub	w4, w3, #0x2
0000000000033f44	lsr	x2, x2, x4
0000000000033f48	and	w2, w2, #0x3
0000000000033f4c	bfi	w2, w3, #2, #8
0000000000033f50	sub	w2, w2, #0x3
0000000000033f54	cmp	x16, x15
0000000000033f58	b.ls	0x33f68
0000000000033f5c	sub	x16, x16, #0x18
0000000000033f60	cmp	w17, w2, uxtb
0000000000033f64	b.eq	0x33ef0
0000000000033f68	cmp	x1, x13
0000000000033f6c	csinc	x14, x13, x1, hs
0000000000033f70	cmp	x14, x13
0000000000033f74	b.hi	0x33fd4
0000000000033f78	sub	x15, x13, x14
0000000000033f7c	add	x15, x15, #0x1
0000000000033f80	cmp	x15, #0x4
0000000000033f84	b.lo	0x33fb8
0000000000033f88	and	x16, x15, #0xfffffffffffffffc
0000000000033f8c	dup.2d	v0, x12
0000000000033f90	add	x17, x9, x14, lsl #3
0000000000033f94	add	x17, x17, #0x18
0000000000033f98	mov	x1, x16
0000000000033f9c	stp	q0, q0, [x17, #-0x10]
0000000000033fa0	add	x17, x17, #0x20
0000000000033fa4	subs	x1, x1, #0x4
0000000000033fa8	b.ne	0x33f9c
0000000000033fac	cmp	x15, x16
0000000000033fb0	b.eq	0x33fd4
0000000000033fb4	add	x14, x14, x16
0000000000033fb8	sub	x13, x13, x14
0000000000033fbc	add	x13, x13, #0x1
0000000000033fc0	add	x14, x9, x14, lsl #3
0000000000033fc4	add	x14, x14, #0x8
0000000000033fc8	str	x12, [x14], #0x8
0000000000033fcc	subs	x13, x13, #0x1
0000000000033fd0	b.ne	0x33fc8
0000000000033fd4	mov	w12, #0x18
0000000000033fd8	madd	x12, x11, x12, x10
0000000000033fdc	ldr	x13, [x12, #0x418]
0000000000033fe0	add	x12, x12, #0x418
0000000000033fe4	stp	xzr, x13, [x0, #0x30]
0000000000033fe8	cbz	x13, 0x34004
0000000000033fec	str	x0, [x13, #0x30]
0000000000033ff0	str	x0, [x12]
0000000000033ff4	mov	w9, #0x18
0000000000033ff8	madd	x9, x11, x9, x10
0000000000033ffc	ldr	x12, [x9, #0x420]
0000000000034000	b	0x34184
0000000000034004	mov	w13, #0x18
0000000000034008	madd	x13, x11, x13, x10
000000000003400c	add	x13, x13, #0x410
0000000000034010	str	x0, [x13]
0000000000034014	str	x0, [x12]
0000000000034018	mov	w12, #0x18
000000000003401c	madd	x12, x11, x12, x10
0000000000034020	ldr	x12, [x12, #0x420]
0000000000034024	cmp	x12, #0x400
0000000000034028	b.hi	0x34184
000000000003402c	add	x13, x12, #0x7
0000000000034030	lsr	x13, x13, #3
0000000000034034	add	x14, x9, x13, lsl #3
0000000000034038	ldr	x14, [x14, #0x8]
000000000003403c	cmp	x14, x0
0000000000034040	b.eq	0x34184
0000000000034044	cmp	x12, #0x9
0000000000034048	b.hs	0x34054
000000000003404c	mov	x10, #0x0
0000000000034050	b	0x34128
0000000000034054	sub	x15, x13, #0x1
0000000000034058	clz	x16, x15
000000000003405c	mov	w14, #0x3f
0000000000034060	sub	w16, w14, w16
0000000000034064	and	w16, w16, #0xff
0000000000034068	sub	w17, w16, #0x2
000000000003406c	lsr	x15, x15, x17
0000000000034070	and	w15, w15, #0x3
0000000000034074	bfi	w15, w16, #2, #8
0000000000034078	sub	w15, w15, #0x3
000000000003407c	add	w16, w13, #0x1
0000000000034080	and	w16, w16, #0xfffffffe
0000000000034084	cmp	x12, #0x40
0000000000034088	csel	w16, w15, w16, hi
000000000003408c	add	x15, x9, #0x410
0000000000034090	mov	w17, #0x18
0000000000034094	madd	x10, x11, x17, x10
0000000000034098	add	x10, x10, #0x3f8
000000000003409c	and	w11, w16, #0xff
00000000000340a0	ldr	x16, [x10, #0x10]
00000000000340a4	add	x17, x16, #0x7
00000000000340a8	lsr	x16, x17, #3
00000000000340ac	cmp	x17, #0x10
00000000000340b0	b.hs	0x340bc
00000000000340b4	mov	w17, #0x1
00000000000340b8	b	0x34104
00000000000340bc	cmp	x17, #0x47
00000000000340c0	b.hi	0x340d0
00000000000340c4	add	w17, w16, #0x1
00000000000340c8	and	w17, w17, #0xfffffffe
00000000000340cc	b	0x34104
00000000000340d0	cmp	x17, x8
00000000000340d4	b.ls	0x340e0
00000000000340d8	mov	w17, #0x49
00000000000340dc	b	0x34104
00000000000340e0	sub	x17, x16, #0x1
00000000000340e4	clz	x1, x17
00000000000340e8	sub	w1, w14, w1
00000000000340ec	and	w1, w1, #0xff
00000000000340f0	sub	w2, w1, #0x2
00000000000340f4	lsr	x17, x17, x2
00000000000340f8	and	w17, w17, #0x3
00000000000340fc	bfi	w17, w1, #2, #8
0000000000034100	sub	w17, w17, #0x3
0000000000034104	cmp	x10, x15
0000000000034108	b.ls	0x34118
000000000003410c	sub	x10, x10, #0x18
0000000000034110	cmp	w11, w17, uxtb
0000000000034114	b.eq	0x340a0
0000000000034118	cmp	x16, x13
000000000003411c	csinc	x10, x13, x16, hs
0000000000034120	cmp	x10, x13
0000000000034124	b.hi	0x34184
0000000000034128	sub	x11, x13, x10
000000000003412c	add	x11, x11, #0x1
0000000000034130	cmp	x11, #0x4
0000000000034134	b.lo	0x34168
0000000000034138	and	x14, x11, #0xfffffffffffffffc
000000000003413c	dup.2d	v0, x0
0000000000034140	add	x15, x9, x10, lsl #3
0000000000034144	add	x15, x15, #0x18
0000000000034148	mov	x16, x14
000000000003414c	stp	q0, q0, [x15, #-0x10]
0000000000034150	add	x15, x15, #0x20
0000000000034154	subs	x16, x16, #0x4
0000000000034158	b.ne	0x3414c
000000000003415c	cmp	x11, x14
0000000000034160	b.eq	0x34184
0000000000034164	add	x10, x10, x14
0000000000034168	sub	x11, x13, x10
000000000003416c	add	x11, x11, #0x1
0000000000034170	add	x9, x9, x10, lsl #3
0000000000034174	add	x9, x9, #0x8
0000000000034178	str	x0, [x9], #0x8
000000000003417c	subs	x11, x11, #0x1
0000000000034180	b.ne	0x34178
0000000000034184	add	x8, x8, #0x9
0000000000034188	cmp	x12, x8
000000000003418c	cset	w8, eq
0000000000034190	ldrb	w9, [x0, #0x6]
0000000000034194	and	w9, w9, #0xfe
0000000000034198	orr	w8, w9, w8
000000000003419c	strb	w8, [x0, #0x6]
00000000000341a0	ret
_mi_segment_reclaim:
00000000000341a4	sub	sp, sp, #0x70
00000000000341a8	stp	x28, x27, [sp, #0x10]
00000000000341ac	stp	x26, x25, [sp, #0x20]
00000000000341b0	stp	x24, x23, [sp, #0x30]
00000000000341b4	stp	x22, x21, [sp, #0x40]
00000000000341b8	stp	x20, x19, [sp, #0x50]
00000000000341bc	stp	x29, x30, [sp, #0x60]
00000000000341c0	add	x29, sp, #0x60
00000000000341c4	mov	x20, x4
00000000000341c8	mov	x23, x3
00000000000341cc	mov	x21, x2
00000000000341d0	mov	x22, x1
00000000000341d4	mov	x19, x0
00000000000341d8	cbz	x3, 0x341e0
00000000000341dc	strb	wzr, [x23]
00000000000341e0	bl	0x4ddf0 ; symbol stub for: _pthread_self
00000000000341e4	bl	0x4dda8 ; symbol stub for: _pthread_mach_thread_np
00000000000341e8	mov	w8, w0
00000000000341ec	add	x9, x19, #0x68
00000000000341f0	stlr	x8, [x9]
00000000000341f4	str	xzr, [x19, #0x30]
00000000000341f8	ldr	x8, [x19, #0x48]
00000000000341fc	ldr	x9, [x20, #0x70]
0000000000034200	adr	x11, #0x4ec40
0000000000034204	nop
0000000000034208	cmp	x9, x11
000000000003420c	cset	w10, hs
0000000000034210	add	x11, x11, #0x240
0000000000034214	cmp	x9, x11
0000000000034218	cset	w11, lo
000000000003421c	and	w10, w10, w11
0000000000034220	add	x12, x9, #0x18
0000000000034224	tbnz	x8, #0x3f, 0x34298
0000000000034228	cbz	w10, 0x3430c
000000000003422c	ldxr	x10, [x12]
0000000000034230	add	x11, x10, #0x1
0000000000034234	stxr	w13, x11, [x12]
0000000000034238	cbnz	w13, 0x3422c
000000000003423c	add	x12, x9, #0x10
0000000000034240	ldr	x14, [x9, #0x10]
0000000000034244	b	0x34258
0000000000034248	clrex
000000000003424c	mov	w15, #0x0
0000000000034250	mov	x14, x13
0000000000034254	cbnz	w15, 0x34280
0000000000034258	cmp	x14, x10
000000000003425c	b.gt	0x34280
0000000000034260	ldxr	x13, [x12]
0000000000034264	cmp	x13, x14
0000000000034268	b.ne	0x34248
000000000003426c	stlxr	w14, x11, [x12]
0000000000034270	cbnz	w14, 0x3424c
0000000000034274	mov	w15, #0x1
0000000000034278	mov	x14, x13
000000000003427c	cbz	w15, 0x34258
0000000000034280	mov	w10, #0x1
0000000000034284	ldxr	x11, [x9]
0000000000034288	add	x11, x11, #0x1
000000000003428c	stxr	w12, x11, [x9]
0000000000034290	cbnz	w12, 0x34284
0000000000034294	b	0x34358
0000000000034298	cbz	w10, 0x3432c
000000000003429c	ldxr	x10, [x12]
00000000000342a0	sub	x10, x10, #0x1
00000000000342a4	stxr	w11, x10, [x12]
00000000000342a8	cbnz	w11, 0x3429c
00000000000342ac	add	x11, x9, #0x10
00000000000342b0	ldr	x13, [x9, #0x10]
00000000000342b4	b	0x342c8
00000000000342b8	clrex
00000000000342bc	mov	w14, #0x0
00000000000342c0	mov	x13, x12
00000000000342c4	cbnz	w14, 0x342f0
00000000000342c8	cmp	x13, x10
00000000000342cc	b.ge	0x342f0
00000000000342d0	ldxr	x12, [x11]
00000000000342d4	cmp	x12, x13
00000000000342d8	b.ne	0x342b8
00000000000342dc	stlxr	w13, x10, [x11]
00000000000342e0	cbnz	w13, 0x342bc
00000000000342e4	mov	w14, #0x1
00000000000342e8	mov	x13, x12
00000000000342ec	cbz	w14, 0x342c8
00000000000342f0	add	x9, x9, #0x8
00000000000342f4	ldxr	x10, [x9]
00000000000342f8	add	x10, x10, #0x1
00000000000342fc	stxr	w11, x10, [x9]
0000000000034300	cbnz	w11, 0x342f4
0000000000034304	mov	x10, #-0x1
0000000000034308	b	0x34358
000000000003430c	ldp	x12, x11, [x9, #0x10]
0000000000034310	add	x10, x11, #0x1
0000000000034314	str	x10, [x9, #0x18]
0000000000034318	cmp	x11, x12
000000000003431c	b.lt	0x34324
0000000000034320	str	x10, [x9, #0x10]
0000000000034324	mov	w10, #0x1
0000000000034328	b	0x3434c
000000000003432c	ldp	x11, x10, [x9, #0x10]
0000000000034330	sub	x10, x10, #0x1
0000000000034334	str	x10, [x9, #0x18]
0000000000034338	cmp	x10, x11
000000000003433c	b.le	0x34344
0000000000034340	str	x10, [x9, #0x10]
0000000000034344	add	x9, x9, #0x8
0000000000034348	mov	x10, #-0x1
000000000003434c	ldr	x11, [x9]
0000000000034350	add	x11, x11, #0x1
0000000000034354	str	x11, [x9]
0000000000034358	ldp	x9, x11, [x20, #0x38]
000000000003435c	add	x9, x9, x10
0000000000034360	str	x9, [x20, #0x38]
0000000000034364	cmp	x9, x11
0000000000034368	b.ls	0x34370
000000000003436c	str	x9, [x20, #0x40]
0000000000034370	ldp	x9, x10, [x20, #0x48]
0000000000034374	add	x8, x9, x8
0000000000034378	str	x8, [x20, #0x48]
000000000003437c	cmp	x8, x10
0000000000034380	b.ls	0x34388
0000000000034384	str	x8, [x20, #0x50]
0000000000034388	ldr	x8, [x20, #0x70]
000000000003438c	add	x9, x8, #0xc0
0000000000034390	adr	x10, #0x4eab0
0000000000034394	nop
0000000000034398	cmp	x9, x10
000000000003439c	adr	x26, #0x4ece4
00000000000343a0	nop
00000000000343a4	ccmp	x9, x26, #0x2, hs
00000000000343a8	b.lo	0x343d4
00000000000343ac	ldp	x10, x9, [x8, #0xd0]
00000000000343b0	sub	x9, x9, #0x1
00000000000343b4	str	x9, [x8, #0xd8]
00000000000343b8	cmp	x9, x10
00000000000343bc	b.le	0x343c4
00000000000343c0	str	x9, [x8, #0xd0]
00000000000343c4	ldr	x9, [x8, #0xc8]
00000000000343c8	add	x9, x9, #0x1
00000000000343cc	str	x9, [x8, #0xc8]
00000000000343d0	b	0x34440
00000000000343d4	add	x10, x8, #0xd8
00000000000343d8	ldxr	x9, [x10]
00000000000343dc	sub	x9, x9, #0x1
00000000000343e0	stxr	w11, x9, [x10]
00000000000343e4	cbnz	w11, 0x343d8
00000000000343e8	add	x10, x8, #0xd0
00000000000343ec	ldr	x12, [x8, #0xd0]
00000000000343f0	b	0x34404
00000000000343f4	clrex
00000000000343f8	mov	w13, #0x0
00000000000343fc	mov	x12, x11
0000000000034400	cbnz	w13, 0x3442c
0000000000034404	cmp	x12, x9
0000000000034408	b.ge	0x3442c
000000000003440c	ldxr	x11, [x10]
0000000000034410	cmp	x11, x12
0000000000034414	b.ne	0x343f4
0000000000034418	stlxr	w12, x9, [x10]
000000000003441c	cbnz	w12, 0x343f8
0000000000034420	mov	w13, #0x1
0000000000034424	mov	x12, x11
0000000000034428	cbz	w13, 0x34404
000000000003442c	add	x8, x8, #0xc8
0000000000034430	ldxr	x9, [x8]
0000000000034434	add	x9, x9, #0x1
0000000000034438	stxr	w10, x9, [x8]
000000000003443c	cbnz	w10, 0x34430
0000000000034440	ldr	x8, [x19, #0x40]
0000000000034444	cbz	x8, 0x3478c
0000000000034448	cbz	x23, 0x345f8
000000000003444c	str	x23, [sp, #0x8]
0000000000034450	mov	x27, #0x0
0000000000034454	b	0x34478
0000000000034458	mov	x0, x19
000000000003445c	mov	x1, x24
0000000000034460	mov	x2, x20
0000000000034464	bl	_mi_segment_page_clear
0000000000034468	add	x27, x27, #0x1
000000000003446c	ldr	x8, [x19, #0x40]
0000000000034470	cmp	x27, x8
0000000000034474	b.hs	0x3478c
0000000000034478	add	x8, x19, x27, lsl #6
000000000003447c	ldrb	w9, [x8, #0x79]
0000000000034480	tbz	w9, #0x0, 0x34468
0000000000034484	ldr	x9, [x19, #0x28]
0000000000034488	sub	x9, x9, #0x1
000000000003448c	str	x9, [x19, #0x28]
0000000000034490	ldr	x9, [x20, #0x70]
0000000000034494	add	x10, x9, #0xe0
0000000000034498	adr	x11, #0x4e9a8
000000000003449c	nop
00000000000344a0	cmp	x10, x11
00000000000344a4	ccmp	x10, x26, #0x2, hs
00000000000344a8	b.lo	0x344d4
00000000000344ac	ldp	x11, x10, [x9, #0xf0]
00000000000344b0	sub	x10, x10, #0x1
00000000000344b4	str	x10, [x9, #0xf8]
00000000000344b8	cmp	x10, x11
00000000000344bc	b.le	0x344c4
00000000000344c0	str	x10, [x9, #0xf0]
00000000000344c4	ldr	x10, [x9, #0xe8]
00000000000344c8	add	x10, x10, #0x1
00000000000344cc	str	x10, [x9, #0xe8]
00000000000344d0	b	0x34540
00000000000344d4	add	x11, x9, #0xf8
00000000000344d8	ldxr	x10, [x11]
00000000000344dc	sub	x10, x10, #0x1
00000000000344e0	stxr	w12, x10, [x11]
00000000000344e4	cbnz	w12, 0x344d8
00000000000344e8	add	x11, x9, #0xf0
00000000000344ec	ldr	x13, [x9, #0xf0]
00000000000344f0	b	0x34504
00000000000344f4	clrex
00000000000344f8	mov	w14, #0x0
00000000000344fc	mov	x13, x12
0000000000034500	cbnz	w14, 0x3452c
0000000000034504	cmp	x13, x10
0000000000034508	b.ge	0x3452c
000000000003450c	ldxr	x12, [x11]
0000000000034510	cmp	x12, x13
0000000000034514	b.ne	0x344f4
0000000000034518	stlxr	w13, x10, [x11]
000000000003451c	cbnz	w13, 0x344f8
0000000000034520	mov	w14, #0x1
0000000000034524	mov	x13, x12
0000000000034528	cbz	w14, 0x34504
000000000003452c	add	x9, x9, #0xe8
0000000000034530	ldxr	x10, [x9]
0000000000034534	add	x10, x10, #0x1
0000000000034538	stxr	w11, x10, [x9]
000000000003453c	cbnz	w11, 0x34530
0000000000034540	add	x24, x8, #0x78
0000000000034544	add	x8, x19, x27, lsl #6
0000000000034548	add	x9, x8, #0xa0
000000000003454c	stlr	x22, [x9]
0000000000034550	add	x28, x8, #0x98
0000000000034554	ldar	x8, [x28]
0000000000034558	ands	w9, w8, #0x3
000000000003455c	b.eq	0x34594
0000000000034560	cmp	w9, #0x1
0000000000034564	b.eq	0x3458c
0000000000034568	ldxr	x9, [x28]
000000000003456c	cmp	x9, x8
0000000000034570	b.ne	0x34584
0000000000034574	and	x8, x8, #0xfffffffffffffffc
0000000000034578	stlxr	w9, x8, [x28]
000000000003457c	cbnz	w9, 0x34554
0000000000034580	b	0x34594
0000000000034584	clrex
0000000000034588	b	0x34554
000000000003458c	wfe
0000000000034590	b	0x34554
0000000000034594	mov	x0, x24
0000000000034598	mov	w1, #0x0
000000000003459c	bl	__mi_page_free_collect
00000000000345a0	add	x25, x19, x27, lsl #6
00000000000345a4	mov	x23, x25
00000000000345a8	ldr	w8, [x23, #0x88]!
00000000000345ac	cbz	w8, 0x34458
00000000000345b0	mov	x0, x22
00000000000345b4	mov	x1, x24
00000000000345b8	bl	__mi_page_reclaim
00000000000345bc	ldr	w8, [x25, #0x8c]
00000000000345c0	cmp	x8, x21
00000000000345c4	b.ne	0x34468
00000000000345c8	ldr	w8, [x23]
00000000000345cc	add	x9, x19, x27, lsl #6
00000000000345d0	ldrh	w9, [x9, #0x7c]
00000000000345d4	cmp	w8, w9
00000000000345d8	b.lo	0x345e8
00000000000345dc	ldr	x8, [x28]
00000000000345e0	cmp	x8, #0x4
00000000000345e4	b.lo	0x34468
00000000000345e8	ldr	x8, [sp, #0x8]
00000000000345ec	mov	w9, #0x1
00000000000345f0	strb	w9, [x8]
00000000000345f4	b	0x34468
00000000000345f8	mov	x24, #0x0
00000000000345fc	b	0x34620
0000000000034600	mov	x0, x19
0000000000034604	mov	x1, x23
0000000000034608	mov	x2, x20
000000000003460c	bl	_mi_segment_page_clear
0000000000034610	add	x24, x24, #0x1
0000000000034614	ldr	x8, [x19, #0x40]
0000000000034618	cmp	x24, x8
000000000003461c	b.hs	0x3478c
0000000000034620	add	x8, x19, x24, lsl #6
0000000000034624	ldrb	w9, [x8, #0x79]
0000000000034628	tbz	w9, #0x0, 0x34610
000000000003462c	ldr	x9, [x19, #0x28]
0000000000034630	sub	x9, x9, #0x1
0000000000034634	str	x9, [x19, #0x28]
0000000000034638	ldr	x9, [x20, #0x70]
000000000003463c	add	x10, x9, #0xe0
0000000000034640	adr	x11, #0x4e800
0000000000034644	nop
0000000000034648	cmp	x10, x11
000000000003464c	ccmp	x10, x26, #0x2, hs
0000000000034650	b.lo	0x3467c
0000000000034654	ldp	x11, x10, [x9, #0xf0]
0000000000034658	sub	x10, x10, #0x1
000000000003465c	str	x10, [x9, #0xf8]
0000000000034660	cmp	x10, x11
0000000000034664	b.le	0x3466c
0000000000034668	str	x10, [x9, #0xf0]
000000000003466c	ldr	x10, [x9, #0xe8]
0000000000034670	add	x10, x10, #0x1
0000000000034674	str	x10, [x9, #0xe8]
0000000000034678	b	0x346e8
000000000003467c	add	x11, x9, #0xf8
0000000000034680	ldxr	x10, [x11]
0000000000034684	sub	x10, x10, #0x1
0000000000034688	stxr	w12, x10, [x11]
000000000003468c	cbnz	w12, 0x34680
0000000000034690	add	x11, x9, #0xf0
0000000000034694	ldr	x13, [x9, #0xf0]
0000000000034698	b	0x346ac
000000000003469c	clrex
00000000000346a0	mov	w14, #0x0
00000000000346a4	mov	x13, x12
00000000000346a8	cbnz	w14, 0x346d4
00000000000346ac	cmp	x13, x10
00000000000346b0	b.ge	0x346d4
00000000000346b4	ldxr	x12, [x11]
00000000000346b8	cmp	x12, x13
00000000000346bc	b.ne	0x3469c
00000000000346c0	stlxr	w13, x10, [x11]
00000000000346c4	cbnz	w13, 0x346a0
00000000000346c8	mov	w14, #0x1
00000000000346cc	mov	x13, x12
00000000000346d0	cbz	w14, 0x346ac
00000000000346d4	add	x9, x9, #0xe8
00000000000346d8	ldxr	x10, [x9]
00000000000346dc	add	x10, x10, #0x1
00000000000346e0	stxr	w11, x10, [x9]
00000000000346e4	cbnz	w11, 0x346d8
00000000000346e8	add	x23, x8, #0x78
00000000000346ec	add	x8, x19, x24, lsl #6
00000000000346f0	add	x9, x8, #0xa0
00000000000346f4	stlr	x22, [x9]
00000000000346f8	add	x27, x8, #0x98
00000000000346fc	ldar	x8, [x27]
0000000000034700	ands	w9, w8, #0x3
0000000000034704	b.eq	0x3473c
0000000000034708	cmp	w9, #0x1
000000000003470c	b.eq	0x34734
0000000000034710	ldxr	x9, [x27]
0000000000034714	cmp	x9, x8
0000000000034718	b.ne	0x3472c
000000000003471c	and	x8, x8, #0xfffffffffffffffc
0000000000034720	stlxr	w9, x8, [x27]
0000000000034724	cbnz	w9, 0x346fc
0000000000034728	b	0x3473c
000000000003472c	clrex
0000000000034730	b	0x346fc
0000000000034734	wfe
0000000000034738	b	0x346fc
000000000003473c	mov	x0, x23
0000000000034740	mov	w1, #0x0
0000000000034744	bl	__mi_page_free_collect
0000000000034748	add	x25, x19, x24, lsl #6
000000000003474c	mov	x28, x25
0000000000034750	ldr	w8, [x28, #0x88]!
0000000000034754	cbz	w8, 0x34600
0000000000034758	mov	x0, x22
000000000003475c	mov	x1, x23
0000000000034760	bl	__mi_page_reclaim
0000000000034764	ldr	w8, [x25, #0x8c]
0000000000034768	cmp	x8, x21
000000000003476c	b.ne	0x34610
0000000000034770	ldr	w8, [x28]
0000000000034774	add	x9, x19, x24, lsl #6
0000000000034778	ldrh	w9, [x9, #0x7c]
000000000003477c	cmp	w8, w9
0000000000034780	b.lo	0x34610
0000000000034784	ldr	xzr, [x27]
0000000000034788	b	0x34610
000000000003478c	ldr	x10, [x19, #0x38]
0000000000034790	cbz	x10, 0x347d8
0000000000034794	ldr	w9, [x19, #0x70]
0000000000034798	cmp	x10, x8
000000000003479c	ccmp	w9, #0x1, #0x2, lo
00000000000347a0	b.hi	0x347ec
00000000000347a4	add	x8, x20, #0x10
00000000000347a8	cmp	w9, #0x0
00000000000347ac	csel	x10, xzr, x20, ne
00000000000347b0	cmp	w9, #0x1
00000000000347b4	csel	x8, x8, x10, eq
00000000000347b8	ldr	x9, [x8, #0x8]
00000000000347bc	stp	xzr, x9, [x19, #0x18]
00000000000347c0	add	x10, x9, #0x18
00000000000347c4	cmp	x9, #0x0
00000000000347c8	csel	x9, x8, x10, eq
00000000000347cc	str	x19, [x9]
00000000000347d0	str	x19, [x8, #0x8]
00000000000347d4	b	0x347ec
00000000000347d8	mov	x0, x19
00000000000347dc	mov	w1, #0x0
00000000000347e0	mov	x2, x20
00000000000347e4	bl	_mi_segment_free
00000000000347e8	mov	x19, #0x0
00000000000347ec	mov	x0, x19
00000000000347f0	ldp	x29, x30, [sp, #0x60]
00000000000347f4	ldp	x20, x19, [sp, #0x50]
00000000000347f8	ldp	x22, x21, [sp, #0x40]
00000000000347fc	ldp	x24, x23, [sp, #0x30]
0000000000034800	ldp	x26, x25, [sp, #0x20]
0000000000034804	ldp	x28, x27, [sp, #0x10]
0000000000034808	add	sp, sp, #0x70
000000000003480c	ret
__mi_page_reclaim:
0000000000034810	ldr	w8, [x1, #0x14]
0000000000034814	ubfx	x9, x8, #26, #6
0000000000034818	cbnz	w9, 0x34a4c
000000000003481c	mov	x10, x8
0000000000034820	mov	w8, #0x7
0000000000034824	movk	w8, #0x20, lsl #16
0000000000034828	add	x10, x10, #0x7
000000000003482c	cmp	x10, #0x10
0000000000034830	b.hs	0x3483c
0000000000034834	mov	w9, #0x1
0000000000034838	b	0x3488c
000000000003483c	lsr	x9, x10, #3
0000000000034840	cmp	x10, #0x47
0000000000034844	b.hi	0x34854
0000000000034848	add	w9, w9, #0x1
000000000003484c	and	x9, x9, #0xfe
0000000000034850	b	0x3488c
0000000000034854	cmp	x10, x8
0000000000034858	b.ls	0x34864
000000000003485c	mov	w9, #0x49
0000000000034860	b	0x3488c
0000000000034864	sub	x9, x9, #0x1
0000000000034868	clz	x10, x9
000000000003486c	mov	w11, #0x3f
0000000000034870	sub	w10, w11, w10
0000000000034874	and	w10, w10, #0xff
0000000000034878	sub	w11, w10, #0x2
000000000003487c	lsr	x9, x9, x11
0000000000034880	and	w9, w9, #0x3
0000000000034884	bfi	w9, w10, #2, #8
0000000000034888	add	w9, w9, #0xfd
000000000003488c	and	x12, x9, #0xff
0000000000034890	mov	w9, #0x18
0000000000034894	madd	x9, x12, x9, x0
0000000000034898	ldr	x10, [x9, #0x420]
000000000003489c	add	x11, x8, #0x9
00000000000348a0	cmp	x10, x11
00000000000348a4	cset	w10, eq
00000000000348a8	ldrb	w11, [x1, #0x6]
00000000000348ac	and	w11, w11, #0xfe
00000000000348b0	orr	w10, w11, w10
00000000000348b4	strb	w10, [x1, #0x6]
00000000000348b8	ldr	x10, [x9, #0x410]
00000000000348bc	stp	x10, xzr, [x1, #0x30]
00000000000348c0	add	x11, x10, #0x38
00000000000348c4	add	x13, x9, #0x418
00000000000348c8	cmp	x10, #0x0
00000000000348cc	csel	x10, x13, x11, eq
00000000000348d0	str	x1, [x10]
00000000000348d4	str	x1, [x9, #0x410]
00000000000348d8	ldr	x11, [x9, #0x420]
00000000000348dc	cmp	x11, #0x400
00000000000348e0	b.hi	0x34a3c
00000000000348e4	add	x9, x11, #0x7
00000000000348e8	lsr	x9, x9, #3
00000000000348ec	add	x10, x0, x9, lsl #3
00000000000348f0	ldr	x10, [x10, #0x8]
00000000000348f4	cmp	x10, x1
00000000000348f8	b.eq	0x34a3c
00000000000348fc	cmp	x11, #0x9
0000000000034900	b.hs	0x3490c
0000000000034904	mov	x8, #0x0
0000000000034908	b	0x349e0
000000000003490c	sub	x13, x9, #0x1
0000000000034910	clz	x14, x13
0000000000034914	mov	w10, #0x3f
0000000000034918	sub	w14, w10, w14
000000000003491c	and	w14, w14, #0xff
0000000000034920	sub	w15, w14, #0x2
0000000000034924	lsr	x13, x13, x15
0000000000034928	and	w13, w13, #0x3
000000000003492c	bfi	w13, w14, #2, #8
0000000000034930	sub	w13, w13, #0x3
0000000000034934	add	w14, w9, #0x1
0000000000034938	and	w14, w14, #0xfffffffe
000000000003493c	cmp	x11, #0x40
0000000000034940	csel	w13, w13, w14, hi
0000000000034944	add	x11, x0, #0x410
0000000000034948	mov	w14, #0x18
000000000003494c	madd	x12, x12, x14, x0
0000000000034950	add	x12, x12, #0x3f8
0000000000034954	and	w13, w13, #0xff
0000000000034958	ldr	x14, [x12, #0x10]
000000000003495c	add	x15, x14, #0x7
0000000000034960	lsr	x14, x15, #3
0000000000034964	cmp	x15, #0x10
0000000000034968	b.hs	0x34974
000000000003496c	mov	w15, #0x1
0000000000034970	b	0x349bc
0000000000034974	cmp	x15, #0x47
0000000000034978	b.hi	0x34988
000000000003497c	add	w15, w14, #0x1
0000000000034980	and	w15, w15, #0xfffffffe
0000000000034984	b	0x349bc
0000000000034988	cmp	x15, x8
000000000003498c	b.ls	0x34998
0000000000034990	mov	w15, #0x49
0000000000034994	b	0x349bc
0000000000034998	sub	x15, x14, #0x1
000000000003499c	clz	x16, x15
00000000000349a0	sub	w16, w10, w16
00000000000349a4	and	w16, w16, #0xff
00000000000349a8	sub	w17, w16, #0x2
00000000000349ac	lsr	x15, x15, x17
00000000000349b0	and	w15, w15, #0x3
00000000000349b4	bfi	w15, w16, #2, #8
00000000000349b8	sub	w15, w15, #0x3
00000000000349bc	cmp	x12, x11
00000000000349c0	b.ls	0x349d0
00000000000349c4	sub	x12, x12, #0x18
00000000000349c8	cmp	w13, w15, uxtb
00000000000349cc	b.eq	0x34958
00000000000349d0	cmp	x14, x9
00000000000349d4	csinc	x8, x9, x14, hs
00000000000349d8	cmp	x8, x9
00000000000349dc	b.hi	0x34a3c
00000000000349e0	sub	x10, x9, x8
00000000000349e4	add	x10, x10, #0x1
00000000000349e8	cmp	x10, #0x4
00000000000349ec	b.lo	0x34a20
00000000000349f0	and	x11, x10, #0xfffffffffffffffc
00000000000349f4	dup.2d	v0, x1
00000000000349f8	add	x12, x0, x8, lsl #3
00000000000349fc	add	x12, x12, #0x18
0000000000034a00	mov	x13, x11
0000000000034a04	stp	q0, q0, [x12, #-0x10]
0000000000034a08	add	x12, x12, #0x20
0000000000034a0c	subs	x13, x13, #0x4
0000000000034a10	b.ne	0x34a04
0000000000034a14	cmp	x10, x11
0000000000034a18	b.eq	0x34a3c
0000000000034a1c	add	x8, x8, x11
0000000000034a20	sub	x9, x9, x8
0000000000034a24	add	x9, x9, #0x1
0000000000034a28	add	x8, x0, x8, lsl #3
0000000000034a2c	add	x8, x8, #0x8
0000000000034a30	str	x1, [x8], #0x8
0000000000034a34	subs	x9, x9, #0x1
0000000000034a38	b.ne	0x34a30
0000000000034a3c	ldr	x8, [x0, #0xbc8]
0000000000034a40	add	x8, x8, #0x1
0000000000034a44	str	x8, [x0, #0xbc8]
0000000000034a48	ret
0000000000034a4c	and	x9, x1, #0xffffffffffc00000
0000000000034a50	ldr	w11, [x9, #0x70]
0000000000034a54	cmp	w11, #0x3
0000000000034a58	b.ne	0x34a64
0000000000034a5c	ldr	x12, [x9, #0x48]
0000000000034a60	b	0x34a70
0000000000034a64	ldr	x10, [x9, #0x60]
0000000000034a68	mov	w12, #0x1
0000000000034a6c	lsl	x12, x12, x10
0000000000034a70	ldrb	w13, [x1]
0000000000034a74	cbz	x13, 0x34a80
0000000000034a78	mov	x10, x12
0000000000034a7c	b	0x34820
0000000000034a80	ldr	x14, [x9, #0x50]
0000000000034a84	sub	x10, x12, x14
0000000000034a88	cmp	w11, #0x1
0000000000034a8c	ccmp	w8, #0x0, #0x4, ls
0000000000034a90	b.eq	0x34820
0000000000034a94	madd	x9, x12, x13, x9
0000000000034a98	add	x9, x9, x14
0000000000034a9c	udiv	x11, x9, x8
0000000000034aa0	neg	x9, x9
0000000000034aa4	madd	x9, x11, x8, x9
0000000000034aa8	add	x9, x8, x9
0000000000034aac	cmp	x9, x8
0000000000034ab0	csel	x8, x9, xzr, lo
0000000000034ab4	sub	x10, x10, x8
0000000000034ab8	b	0x34820
_mi_free:
0000000000034abc	stp	x20, x19, [sp, #-0x20]!
0000000000034ac0	stp	x29, x30, [sp, #0x10]
0000000000034ac4	add	x29, sp, #0x10
0000000000034ac8	ands	x20, x0, #0xffffffffffc00000
0000000000034acc	b.eq	0x34b28
0000000000034ad0	mov	x19, x0
0000000000034ad4	bl	0x4ddf0 ; symbol stub for: _pthread_self
0000000000034ad8	bl	0x4dda8 ; symbol stub for: _pthread_mach_thread_np
0000000000034adc	mov	w8, w0
0000000000034ae0	ldr	x9, [x20, #0x60]
0000000000034ae4	add	x10, x20, #0x68
0000000000034ae8	ldar	x11, [x10]
0000000000034aec	cmp	x11, x8
0000000000034af0	b.ne	0x34b34
0000000000034af4	and	x11, x19, #0x3fffff
0000000000034af8	lsr	x11, x11, x9
0000000000034afc	add	x9, x20, x11, lsl #6
0000000000034b00	ldrb	w12, [x9, #0x7e]
0000000000034b04	cbnz	w12, 0x34b34
0000000000034b08	add	x8, x20, x11, lsl #6
0000000000034b0c	ldr	x10, [x8, #0x90]
0000000000034b10	str	x10, [x19]
0000000000034b14	str	x19, [x8, #0x90]
0000000000034b18	ldr	w10, [x8, #0x88]
0000000000034b1c	subs	w10, w10, #0x1
0000000000034b20	str	w10, [x8, #0x88]
0000000000034b24	b.eq	0x34b54
0000000000034b28	ldp	x29, x30, [sp, #0x10]
0000000000034b2c	ldp	x20, x19, [sp], #0x20
0000000000034b30	ret
0000000000034b34	ldar	x9, [x10]
0000000000034b38	cmp	x9, x8
0000000000034b3c	cset	w1, eq
0000000000034b40	mov	x0, x20
0000000000034b44	mov	x2, x19
0000000000034b48	ldp	x29, x30, [sp, #0x10]
0000000000034b4c	ldp	x20, x19, [sp], #0x20
0000000000034b50	b	_mi_free_generic
0000000000034b54	add	x0, x9, #0x78
0000000000034b58	ldp	x29, x30, [sp, #0x10]
0000000000034b5c	ldp	x20, x19, [sp], #0x20
0000000000034b60	b	__mi_page_retire
_mi_free_generic:
0000000000034b64	mov	x8, x0
0000000000034b68	sub	x9, x2, x0
0000000000034b6c	ldr	x12, [x0, #0x60]
0000000000034b70	lsr	x10, x9, x12
0000000000034b74	add	x11, x0, x10, lsl #6
0000000000034b78	mov	x9, x11
0000000000034b7c	ldrb	w13, [x9, #0x7e]!
0000000000034b80	sub	x0, x9, #0x6
0000000000034b84	tbz	w13, #0x1, 0x34c10
0000000000034b88	ldr	w11, [x11, #0x8c]
0000000000034b8c	ldr	w14, [x8, #0x70]
0000000000034b90	cmp	w14, #0x3
0000000000034b94	b.ne	0x34bac
0000000000034b98	ldr	x12, [x8, #0x48]
0000000000034b9c	ldrb	w13, [x0]
0000000000034ba0	madd	x12, x12, x13, x8
0000000000034ba4	cbnz	x13, 0x34bf0
0000000000034ba8	b	0x34bc0
0000000000034bac	mov	w13, #0x1
0000000000034bb0	lsl	x12, x13, x12
0000000000034bb4	ldrb	w13, [x0]
0000000000034bb8	madd	x12, x12, x13, x8
0000000000034bbc	cbnz	x13, 0x34bf0
0000000000034bc0	ldr	x15, [x8, #0x50]
0000000000034bc4	add	x12, x12, x15
0000000000034bc8	cmp	w14, #0x1
0000000000034bcc	b.hi	0x34bf0
0000000000034bd0	cbz	w11, 0x34bf0
0000000000034bd4	udiv	x14, x12, x11
0000000000034bd8	neg	x15, x12
0000000000034bdc	madd	x14, x14, x11, x15
0000000000034be0	add	x14, x11, x14
0000000000034be4	add	x15, x12, x14
0000000000034be8	cmp	x14, x11
0000000000034bec	csel	x12, x15, x12, lo
0000000000034bf0	ubfx	x14, x11, #26, #6
0000000000034bf4	cbnz	w14, 0x34c50
0000000000034bf8	mov	x15, x11
0000000000034bfc	sub	x11, x2, x12
0000000000034c00	udiv	x12, x11, x15
0000000000034c04	neg	x11, x11
0000000000034c08	madd	x11, x12, x15, x11
0000000000034c0c	add	x2, x2, x11
0000000000034c10	cbz	w1, 0x34c40
0000000000034c14	add	x8, x8, x10, lsl #6
0000000000034c18	ldr	x10, [x8, #0x90]
0000000000034c1c	str	x10, [x2]
0000000000034c20	str	x2, [x8, #0x90]
0000000000034c24	ldr	w10, [x8, #0x88]
0000000000034c28	subs	w10, w10, #0x1
0000000000034c2c	str	w10, [x8, #0x88]
0000000000034c30	b.eq	0x34c48
0000000000034c34	ldrb	w8, [x9]
0000000000034c38	tbnz	w8, #0x0, 0x34c4c
0000000000034c3c	ret
0000000000034c40	mov	x1, x2
0000000000034c44	b	__mi_free_block_mt
0000000000034c48	b	__mi_page_retire
0000000000034c4c	b	__mi_page_unfull
0000000000034c50	and	x14, x0, #0xffffffffffc00000
0000000000034c54	ldr	w16, [x14, #0x70]
0000000000034c58	cmp	w16, #0x3
0000000000034c5c	b.ne	0x34c68
0000000000034c60	ldr	x17, [x14, #0x48]
0000000000034c64	b	0x34c74
0000000000034c68	ldr	x15, [x14, #0x60]
0000000000034c6c	mov	w17, #0x1
0000000000034c70	lsl	x17, x17, x15
0000000000034c74	cbz	w13, 0x34c80
0000000000034c78	mov	x15, x17
0000000000034c7c	b	0x34bfc
0000000000034c80	ldr	x3, [x14, #0x50]
0000000000034c84	sub	x15, x17, x3
0000000000034c88	cmp	w16, #0x1
0000000000034c8c	ccmp	w11, #0x0, #0x4, ls
0000000000034c90	b.eq	0x34bfc
0000000000034c94	madd	x13, x17, x13, x14
0000000000034c98	add	x13, x13, x3
0000000000034c9c	udiv	x14, x13, x11
0000000000034ca0	neg	x13, x13
0000000000034ca4	madd	x13, x14, x11, x13
0000000000034ca8	add	x13, x11, x13
0000000000034cac	cmp	x13, x11
0000000000034cb0	csel	x11, x13, xzr, lo
0000000000034cb4	sub	x15, x15, x11
0000000000034cb8	b	0x34bfc
__mi_free_block_mt:
0000000000034cbc	stp	x22, x21, [sp, #-0x30]!
0000000000034cc0	stp	x20, x19, [sp, #0x10]
0000000000034cc4	stp	x29, x30, [sp, #0x20]
0000000000034cc8	add	x29, sp, #0x20
0000000000034ccc	mov	x20, x1
0000000000034cd0	mov	x19, x0
0000000000034cd4	and	x21, x0, #0xffffffffffc00000
0000000000034cd8	ldr	w8, [x21, #0x70]
0000000000034cdc	cmp	w8, #0x3
0000000000034ce0	b.ne	0x34ddc
0000000000034ce4	bl	_mi_thread_init
0000000000034ce8	adrp	x0, 52 ; 0x68000
0000000000034cec	add	x0, x0, #0xa18
0000000000034cf0	ldr	x8, [x0]
0000000000034cf4	blr	x8
0000000000034cf8	ldr	x8, [x0]
0000000000034cfc	add	x9, x21, #0x68
0000000000034d00	ldr	x10, [x8, #0xb20]
0000000000034d04	ldaxr	x11, [x9]
0000000000034d08	cbnz	x11, 0x34e78
0000000000034d0c	stlxr	w11, x10, [x9]
0000000000034d10	cbnz	w11, 0x34d04
0000000000034d14	ldr	x9, [x19, #0x8]
0000000000034d18	str	x9, [x20]
0000000000034d1c	str	x20, [x19, #0x8]
0000000000034d20	ldr	w9, [x19, #0x10]
0000000000034d24	sub	w9, w9, #0x1
0000000000034d28	str	w9, [x19, #0x10]
0000000000034d2c	ldrb	w9, [x19, #0x7]
0000000000034d30	and	w9, w9, #0xfe
0000000000034d34	strb	w9, [x19, #0x7]
0000000000034d38	ldr	x8, [x8]
0000000000034d3c	ldr	x9, [x21, #0x48]
0000000000034d40	ldr	x10, [x8, #0x90]
0000000000034d44	adr	x11, #0x4e0fc
0000000000034d48	nop
0000000000034d4c	cmp	x10, x11
0000000000034d50	cset	w12, hs
0000000000034d54	add	x11, x11, #0x240
0000000000034d58	cmp	x10, x11
0000000000034d5c	cset	w11, lo
0000000000034d60	and	w11, w12, w11
0000000000034d64	add	x13, x10, #0x18
0000000000034d68	tbnz	x9, #0x3f, 0x34e8c
0000000000034d6c	cbz	w11, 0x34f00
0000000000034d70	ldxr	x11, [x13]
0000000000034d74	add	x12, x11, #0x1
0000000000034d78	stxr	w14, x12, [x13]
0000000000034d7c	cbnz	w14, 0x34d70
0000000000034d80	add	x13, x10, #0x10
0000000000034d84	ldr	x15, [x10, #0x10]
0000000000034d88	b	0x34d9c
0000000000034d8c	clrex
0000000000034d90	mov	w16, #0x0
0000000000034d94	mov	x15, x14
0000000000034d98	cbnz	w16, 0x34dc4
0000000000034d9c	cmp	x15, x11
0000000000034da0	b.gt	0x34dc4
0000000000034da4	ldxr	x14, [x13]
0000000000034da8	cmp	x14, x15
0000000000034dac	b.ne	0x34d8c
0000000000034db0	stlxr	w15, x12, [x13]
0000000000034db4	cbnz	w15, 0x34d90
0000000000034db8	mov	w16, #0x1
0000000000034dbc	mov	x15, x14
0000000000034dc0	cbz	w16, 0x34d9c
0000000000034dc4	mov	w11, #0x1
0000000000034dc8	ldxr	x12, [x10]
0000000000034dcc	add	x12, x12, #0x1
0000000000034dd0	stxr	w13, x12, [x10]
0000000000034dd4	cbnz	w13, 0x34dc8
0000000000034dd8	b	0x34f4c
0000000000034ddc	add	x8, x19, #0x20
0000000000034de0	ldr	x10, [x19, #0x20]
0000000000034de4	b	0x34df8
0000000000034de8	clrex
0000000000034dec	mov	w11, #0x0
0000000000034df0	mov	x10, x9
0000000000034df4	tbnz	w11, #0x0, 0x34e7c
0000000000034df8	and	x11, x10, #0xfffffffffffffffc
0000000000034dfc	ands	x12, x10, #0x3
0000000000034e00	b.eq	0x34e30
0000000000034e04	str	x11, [x20]
0000000000034e08	ldxr	x9, [x8]
0000000000034e0c	cmp	x9, x10
0000000000034e10	b.ne	0x34de8
0000000000034e14	orr	x10, x12, x20
0000000000034e18	stlxr	w11, x10, [x8]
0000000000034e1c	cbnz	w11, 0x34dec
0000000000034e20	mov	w11, #0x1
0000000000034e24	mov	x10, x9
0000000000034e28	tbz	w11, #0x0, 0x34df8
0000000000034e2c	b	0x34e7c
0000000000034e30	ldxr	x9, [x8]
0000000000034e34	cmp	x9, x10
0000000000034e38	b.ne	0x34e50
0000000000034e3c	orr	x10, x11, #0x1
0000000000034e40	stlxr	w11, x10, [x8]
0000000000034e44	cbnz	w11, 0x34e54
0000000000034e48	mov	w11, #0x1
0000000000034e4c	b	0x34e58
0000000000034e50	clrex
0000000000034e54	mov	w11, #0x0
0000000000034e58	mov	x10, x9
0000000000034e5c	tbz	w11, #0x0, 0x34df8
0000000000034e60	add	x9, x19, #0x28
0000000000034e64	ldar	x10, [x9]
0000000000034e68	cbz	x10, 0x34ff8
0000000000034e6c	add	x9, x10, #0xb18
0000000000034e70	ldr	x11, [x10, #0xb18]
0000000000034e74	b	0x34fd4
0000000000034e78	clrex
0000000000034e7c	ldp	x29, x30, [sp, #0x20]
0000000000034e80	ldp	x20, x19, [sp, #0x10]
0000000000034e84	ldp	x22, x21, [sp], #0x30
0000000000034e88	ret
0000000000034e8c	cbz	w11, 0x34f20
0000000000034e90	ldxr	x11, [x13]
0000000000034e94	sub	x11, x11, #0x1
0000000000034e98	stxr	w12, x11, [x13]
0000000000034e9c	cbnz	w12, 0x34e90
0000000000034ea0	add	x12, x10, #0x10
0000000000034ea4	ldr	x14, [x10, #0x10]
0000000000034ea8	b	0x34ebc
0000000000034eac	clrex
0000000000034eb0	mov	w15, #0x0
0000000000034eb4	mov	x14, x13
0000000000034eb8	cbnz	w15, 0x34ee4
0000000000034ebc	cmp	x14, x11
0000000000034ec0	b.ge	0x34ee4
0000000000034ec4	ldxr	x13, [x12]
0000000000034ec8	cmp	x13, x14
0000000000034ecc	b.ne	0x34eac
0000000000034ed0	stlxr	w14, x11, [x12]
0000000000034ed4	cbnz	w14, 0x34eb0
0000000000034ed8	mov	w15, #0x1
0000000000034edc	mov	x14, x13
0000000000034ee0	cbz	w15, 0x34ebc
0000000000034ee4	add	x10, x10, #0x8
0000000000034ee8	ldxr	x11, [x10]
0000000000034eec	add	x11, x11, #0x1
0000000000034ef0	stxr	w12, x11, [x10]
0000000000034ef4	cbnz	w12, 0x34ee8
0000000000034ef8	mov	x11, #-0x1
0000000000034efc	b	0x34f4c
0000000000034f00	ldp	x13, x12, [x10, #0x10]
0000000000034f04	add	x11, x12, #0x1
0000000000034f08	str	x11, [x10, #0x18]
0000000000034f0c	cmp	x12, x13
0000000000034f10	b.lt	0x34f18
0000000000034f14	str	x11, [x10, #0x10]
0000000000034f18	mov	w11, #0x1
0000000000034f1c	b	0x34f40
0000000000034f20	ldp	x12, x11, [x10, #0x10]
0000000000034f24	sub	x11, x11, #0x1
0000000000034f28	str	x11, [x10, #0x18]
0000000000034f2c	cmp	x11, x12
0000000000034f30	b.le	0x34f38
0000000000034f34	str	x11, [x10, #0x10]
0000000000034f38	add	x10, x10, #0x8
0000000000034f3c	mov	x11, #-0x1
0000000000034f40	ldr	x12, [x10]
0000000000034f44	add	x12, x12, #0x1
0000000000034f48	str	x12, [x10]
0000000000034f4c	add	x2, x8, #0x20
0000000000034f50	ldp	x10, x12, [x8, #0x58]
0000000000034f54	add	x10, x10, x11
0000000000034f58	str	x10, [x8, #0x58]
0000000000034f5c	cmp	x10, x12
0000000000034f60	b.hi	0x34f90
0000000000034f64	ldp	x10, x11, [x8, #0x68]
0000000000034f68	add	x9, x10, x9
0000000000034f6c	str	x9, [x8, #0x68]
0000000000034f70	cmp	x9, x11
0000000000034f74	b.hi	0x34fa8
0000000000034f78	mov	x0, x19
0000000000034f7c	mov	w1, #0x1
0000000000034f80	ldp	x29, x30, [sp, #0x20]
0000000000034f84	ldp	x20, x19, [sp, #0x10]
0000000000034f88	ldp	x22, x21, [sp], #0x30
0000000000034f8c	b	__mi_segment_page_free
0000000000034f90	str	x10, [x8, #0x60]
0000000000034f94	ldp	x10, x11, [x8, #0x68]
0000000000034f98	add	x9, x10, x9
0000000000034f9c	str	x9, [x8, #0x68]
0000000000034fa0	cmp	x9, x11
0000000000034fa4	b.ls	0x34f78
0000000000034fa8	str	x9, [x8, #0x70]
0000000000034fac	mov	x0, x19
0000000000034fb0	mov	w1, #0x1
0000000000034fb4	ldp	x29, x30, [sp, #0x20]
0000000000034fb8	ldp	x20, x19, [sp, #0x10]
0000000000034fbc	ldp	x22, x21, [sp], #0x30
0000000000034fc0	b	__mi_segment_page_free
0000000000034fc4	clrex
0000000000034fc8	mov	w12, #0x0
0000000000034fcc	mov	x11, x10
0000000000034fd0	cbnz	w12, 0x34ff8
0000000000034fd4	str	x11, [x20]
0000000000034fd8	ldxr	x10, [x9]
0000000000034fdc	cmp	x10, x11
0000000000034fe0	b.ne	0x34fc4
0000000000034fe4	stlxr	w11, x20, [x9]
0000000000034fe8	cbnz	w11, 0x34fc8
0000000000034fec	mov	w12, #0x1
0000000000034ff0	mov	x11, x10
0000000000034ff4	cbz	w12, 0x34fd4
0000000000034ff8	ldr	x10, [x8]
0000000000034ffc	b	0x35010
0000000000035000	clrex
0000000000035004	mov	w11, #0x0
0000000000035008	mov	x10, x9
000000000003500c	cbnz	w11, 0x34e7c
0000000000035010	ldxr	x9, [x8]
0000000000035014	cmp	x9, x10
0000000000035018	b.ne	0x35000
000000000003501c	and	x10, x10, #0xfffffffffffffffc
0000000000035020	orr	x10, x10, #0x2
0000000000035024	stlxr	w11, x10, [x8]
0000000000035028	cbnz	w11, 0x35004
000000000003502c	mov	w11, #0x1
0000000000035030	mov	x10, x9
0000000000035034	cbz	w11, 0x35010
0000000000035038	b	0x34e7c
_mi_out_buf_stderr:
000000000003503c	stp	x20, x19, [sp, #-0x20]!
0000000000035040	stp	x29, x30, [sp, #0x10]
0000000000035044	add	x29, sp, #0x10
0000000000035048	mov	x19, x0
000000000003504c	nop
0000000000035050	ldr	x8, #0x1efe0 ; literal pool symbol address: ___stderrp
0000000000035054	ldr	x1, [x8]
0000000000035058	bl	0x4db98 ; symbol stub for: _fputs
000000000003505c	cbz	x19, 0x3509c
0000000000035060	nop
0000000000035064	ldr	x8, #0x4d8bc
0000000000035068	lsr	x8, x8, #15
000000000003506c	cbnz	x8, 0x3509c
0000000000035070	mov	x0, x19
0000000000035074	bl	0x4de74 ; symbol stub for: _strlen
0000000000035078	cbz	x0, 0x3509c
000000000003507c	adr	x9, #0x4d8a4
0000000000035080	nop
0000000000035084	ldaxr	x8, [x9]
0000000000035088	add	x10, x8, x0
000000000003508c	stlxr	w11, x10, [x9]
0000000000035090	cbnz	w11, 0x35084
0000000000035094	lsr	x9, x8, #15
0000000000035098	cbz	x9, 0x350a8
000000000003509c	ldp	x29, x30, [sp, #0x10]
00000000000350a0	ldp	x20, x19, [sp], #0x20
00000000000350a4	ret
00000000000350a8	add	x9, x8, x0
00000000000350ac	mov	w10, #0x7fff
00000000000350b0	sub	x10, x10, x8
00000000000350b4	lsr	x9, x9, #15
00000000000350b8	cmp	x9, #0x0
00000000000350bc	csel	x2, x10, x0, ne
00000000000350c0	adr	x9, #0x35708
00000000000350c4	nop
00000000000350c8	add	x0, x9, x8
00000000000350cc	mov	x1, x19
00000000000350d0	ldp	x29, x30, [sp, #0x10]
00000000000350d4	ldp	x20, x19, [sp], #0x20
00000000000350d8	b	0x4dbec ; symbol stub for: _memcpy
_mi_buffered_out:
00000000000350dc	stp	x28, x27, [sp, #-0x60]!
00000000000350e0	stp	x26, x25, [sp, #0x10]
00000000000350e4	stp	x24, x23, [sp, #0x20]
00000000000350e8	stp	x22, x21, [sp, #0x30]
00000000000350ec	stp	x20, x19, [sp, #0x40]
00000000000350f0	stp	x29, x30, [sp, #0x50]
00000000000350f4	add	x29, sp, #0x50
00000000000350f8	cbz	x0, 0x352c8
00000000000350fc	mov	x19, x1
0000000000035100	cbz	x1, 0x352c8
0000000000035104	ldrb	w24, [x0]
0000000000035108	cbz	w24, 0x352c8
000000000003510c	add	x21, x0, #0x1
0000000000035110	adrp	x22, 77 ; 0x82000
0000000000035114	adrp	x20, 51 ; 0x68000
0000000000035118	add	x20, x20, #0xa30
000000000003511c	ldr	x23, [x20]
0000000000035120	adr	x25, #0x4d726
0000000000035124	nop
0000000000035128	adr	x26, #-0x5a74
000000000003512c	nop
0000000000035130	nop
0000000000035134	ldr	x27, #0x1ef04 ; literal pool symbol address: ___stdoutp
0000000000035138	nop
000000000003513c	ldr	x28, #0x1eef4 ; literal pool symbol address: ___stderrp
0000000000035140	b	0x3515c
0000000000035144	ldr	x1, [x19, #0x8]
0000000000035148	mov	x0, x8
000000000003514c	blr	x9
0000000000035150	str	xzr, [x19, #0x18]
0000000000035154	ldrb	w24, [x21], #0x1
0000000000035158	cbz	w24, 0x352c8
000000000003515c	ldp	x8, x9, [x19, #0x18]
0000000000035160	cmp	x8, x9
0000000000035164	b.hs	0x35184
0000000000035168	ldr	x9, [x19, #0x10]
000000000003516c	add	x10, x8, #0x1
0000000000035170	str	x10, [x19, #0x18]
0000000000035174	strb	w24, [x9, x8]
0000000000035178	cmp	w24, #0xa
000000000003517c	b.ne	0x35154
0000000000035180	b	0x3523c
0000000000035184	ldr	x9, [x19, #0x10]
0000000000035188	strb	wzr, [x9, x8]
000000000003518c	ldr	x9, [x19]
0000000000035190	ldr	x8, [x19, #0x10]
0000000000035194	cbz	x9, 0x351ac
0000000000035198	ldr	x10, [x27]
000000000003519c	ldr	x11, [x28]
00000000000351a0	cmp	x10, x9
00000000000351a4	ccmp	x11, x9, #0x4, ne
00000000000351a8	b.ne	0x35210
00000000000351ac	ldrb	w9, [x22, #0x846]
00000000000351b0	cmp	w9, #0x1
00000000000351b4	b.ne	0x351d8
00000000000351b8	mov	x0, x20
00000000000351bc	blr	x23
00000000000351c0	ldrb	w9, [x0]
00000000000351c4	tbnz	w9, #0x0, 0x3521c
00000000000351c8	mov	x0, x20
00000000000351cc	blr	x23
00000000000351d0	mov	w9, #0x1
00000000000351d4	strb	w9, [x0]
00000000000351d8	add	x9, x25, #0xca
00000000000351dc	ldar	x1, [x9]
00000000000351e0	ldur	x9, [x25, #0xd2]
00000000000351e4	cmp	x9, #0x0
00000000000351e8	csel	x9, x26, x9, eq
00000000000351ec	mov	x0, x8
00000000000351f0	blr	x9
00000000000351f4	ldrb	w8, [x25]
00000000000351f8	cmp	w8, #0x1
00000000000351fc	b.ne	0x3521c
0000000000035200	mov	x0, x20
0000000000035204	blr	x23
0000000000035208	strb	wzr, [x0]
000000000003520c	b	0x3521c
0000000000035210	ldr	x1, [x19, #0x8]
0000000000035214	mov	x0, x8
0000000000035218	blr	x9
000000000003521c	mov	x8, #0x0
0000000000035220	str	xzr, [x19, #0x18]
0000000000035224	ldr	x9, [x19, #0x10]
0000000000035228	add	x10, x8, #0x1
000000000003522c	str	x10, [x19, #0x18]
0000000000035230	strb	w24, [x9, x8]
0000000000035234	cmp	w24, #0xa
0000000000035238	b.ne	0x35154
000000000003523c	ldp	x8, x9, [x19, #0x10]
0000000000035240	strb	wzr, [x8, x9]
0000000000035244	ldr	x9, [x19]
0000000000035248	ldr	x8, [x19, #0x10]
000000000003524c	cbz	x9, 0x35264
0000000000035250	ldr	x10, [x27]
0000000000035254	ldr	x11, [x28]
0000000000035258	cmp	x10, x9
000000000003525c	ccmp	x11, x9, #0x4, ne
0000000000035260	b.ne	0x35144
0000000000035264	ldrb	w9, [x22, #0x846]
0000000000035268	cmp	w9, #0x1
000000000003526c	b.ne	0x35290
0000000000035270	mov	x0, x20
0000000000035274	blr	x23
0000000000035278	ldrb	w9, [x0]
000000000003527c	tbnz	w9, #0x0, 0x35150
0000000000035280	mov	x0, x20
0000000000035284	blr	x23
0000000000035288	mov	w9, #0x1
000000000003528c	strb	w9, [x0]
0000000000035290	add	x9, x25, #0xca
0000000000035294	ldar	x1, [x9]
0000000000035298	ldur	x9, [x25, #0xd2]
000000000003529c	cmp	x9, #0x0
00000000000352a0	csel	x9, x26, x9, eq
00000000000352a4	mov	x0, x8
00000000000352a8	blr	x9
00000000000352ac	ldrb	w8, [x25]
00000000000352b0	cmp	w8, #0x1
00000000000352b4	b.ne	0x35150
00000000000352b8	mov	x0, x20
00000000000352bc	blr	x23
00000000000352c0	strb	wzr, [x0]
00000000000352c4	b	0x35150
00000000000352c8	ldp	x29, x30, [sp, #0x50]
00000000000352cc	ldp	x20, x19, [sp, #0x40]
00000000000352d0	ldp	x22, x21, [sp, #0x30]
00000000000352d4	ldp	x24, x23, [sp, #0x20]
00000000000352d8	ldp	x26, x25, [sp, #0x10]
00000000000352dc	ldp	x28, x27, [sp], #0x60
00000000000352e0	ret
__mi_fprintf:
00000000000352e4	stp	x28, x27, [sp, #-0x30]!
00000000000352e8	stp	x20, x19, [sp, #0x10]
00000000000352ec	stp	x29, x30, [sp, #0x20]
00000000000352f0	add	x29, sp, #0x20
00000000000352f4	sub	sp, sp, #0x210
00000000000352f8	add	x8, x29, #0x10
00000000000352fc	str	x8, [sp, #0x8]
0000000000035300	cbz	x2, 0x35440
0000000000035304	mov	x19, x1
0000000000035308	adrp	x20, 77 ; 0x82000
000000000003530c	ldrb	w8, [x20, #0x846]
0000000000035310	cmp	w8, #0x1
0000000000035314	b.ne	0x35344
0000000000035318	adrp	x8, 51 ; 0x68000
000000000003531c	add	x8, x8, #0xa30
0000000000035320	ldr	x9, [x8]
0000000000035324	mov	x0, x8
0000000000035328	blr	x9
000000000003532c	ldrb	w10, [x0]
0000000000035330	tbnz	w10, #0x0, 0x35440
0000000000035334	mov	x0, x8
0000000000035338	blr	x9
000000000003533c	mov	w8, #0x1
0000000000035340	strb	w8, [x0]
0000000000035344	add	x0, sp, #0x10
0000000000035348	add	x3, x29, #0x10
000000000003534c	mov	w1, #0x1ff
0000000000035350	bl	0x4ded4 ; symbol stub for: _vsnprintf
0000000000035354	ldrb	w8, [x20, #0x846]
0000000000035358	cmp	w8, #0x1
000000000003535c	b.ne	0x353c8
0000000000035360	adrp	x8, 51 ; 0x68000
0000000000035364	add	x8, x8, #0xa30
0000000000035368	ldr	x9, [x8]
000000000003536c	mov	x0, x8
0000000000035370	blr	x9
0000000000035374	strb	wzr, [x0]
0000000000035378	nop
000000000003537c	ldr	x10, #0x1ecbc ; literal pool symbol address: ___stdoutp
0000000000035380	adr	x11, #-0x2a4
0000000000035384	nop
0000000000035388	ldr	x10, [x10]
000000000003538c	nop
0000000000035390	ldr	x12, #0x1eca0 ; literal pool symbol address: ___stderrp
0000000000035394	ldr	x12, [x12]
0000000000035398	cmp	x10, x11
000000000003539c	ccmp	x12, x11, #0x4, ne
00000000000353a0	b.ne	0x35454
00000000000353a4	mov	x0, x8
00000000000353a8	blr	x9
00000000000353ac	ldrb	w10, [x0]
00000000000353b0	tbnz	w10, #0x0, 0x35440
00000000000353b4	mov	x0, x8
00000000000353b8	blr	x9
00000000000353bc	mov	w8, #0x1
00000000000353c0	strb	w8, [x0]
00000000000353c4	b	0x353f4
00000000000353c8	nop
00000000000353cc	ldr	x8, #0x1ec6c ; literal pool symbol address: ___stdoutp
00000000000353d0	adr	x9, #-0x2f4
00000000000353d4	nop
00000000000353d8	ldr	x8, [x8]
00000000000353dc	nop
00000000000353e0	ldr	x10, #0x1ec50 ; literal pool symbol address: ___stderrp
00000000000353e4	ldr	x10, [x10]
00000000000353e8	cmp	x8, x9
00000000000353ec	ccmp	x10, x9, #0x4, ne
00000000000353f0	b.ne	0x35454
00000000000353f4	adr	x19, #0x4d452
00000000000353f8	nop
00000000000353fc	add	x8, x19, #0xca
0000000000035400	ldar	x1, [x8]
0000000000035404	ldur	x8, [x19, #0xd2]
0000000000035408	adr	x9, #-0x5d54
000000000003540c	nop
0000000000035410	cmp	x8, #0x0
0000000000035414	csel	x8, x9, x8, eq
0000000000035418	add	x0, sp, #0x10
000000000003541c	blr	x8
0000000000035420	ldrb	w8, [x19]
0000000000035424	cmp	w8, #0x1
0000000000035428	b.ne	0x35440
000000000003542c	adrp	x0, 51 ; 0x68000
0000000000035430	add	x0, x0, #0xa30
0000000000035434	ldr	x8, [x0]
0000000000035438	blr	x8
000000000003543c	strb	wzr, [x0]
0000000000035440	add	sp, sp, #0x210
0000000000035444	ldp	x29, x30, [sp, #0x20]
0000000000035448	ldp	x20, x19, [sp, #0x10]
000000000003544c	ldp	x28, x27, [sp], #0x30
0000000000035450	ret
0000000000035454	add	x0, sp, #0x10
0000000000035458	mov	x1, x19
000000000003545c	bl	_mi_buffered_out
0000000000035460	add	sp, sp, #0x210
0000000000035464	ldp	x29, x30, [sp, #0x20]
0000000000035468	ldp	x20, x19, [sp, #0x10]
000000000003546c	ldp	x28, x27, [sp], #0x30
0000000000035470	ret
_mi_stat_print:
0000000000035474	sub	sp, sp, #0x90
0000000000035478	stp	x26, x25, [sp, #0x40]
000000000003547c	stp	x24, x23, [sp, #0x50]
0000000000035480	stp	x22, x21, [sp, #0x60]
0000000000035484	stp	x20, x19, [sp, #0x70]
0000000000035488	stp	x29, x30, [sp, #0x80]
000000000003548c	add	x29, sp, #0x80
0000000000035490	mov	x19, x3
0000000000035494	mov	x21, x2
0000000000035498	mov	x20, x0
000000000003549c	str	x1, [sp]
00000000000354a0	adr	x2, #0x1d364 ; literal pool for: "%10s:"
00000000000354a4	nop
00000000000354a8	mov	x1, x3
00000000000354ac	bl	__mi_fprintf
00000000000354b0	cmp	x21, #0x1
00000000000354b4	b.lt	0x354e4
00000000000354b8	ldr	x8, [x20, #0x10]
00000000000354bc	cmp	x8, #0x0
00000000000354c0	cneg	x9, x8, mi
00000000000354c4	cmp	x9, #0x3ff
00000000000354c8	b.gt	0x3552c
00000000000354cc	adr	x9, #0x1d318 ; literal pool for: "b"
00000000000354d0	nop
00000000000354d4	stp	x8, x9, [sp]
00000000000354d8	adr	x2, #0x1d305 ; literal pool for: "%d %s "
00000000000354dc	nop
00000000000354e0	b	0x355b8
00000000000354e4	ldr	x8, [x20, #0x10]
00000000000354e8	cmp	x8, #0x0
00000000000354ec	cneg	x9, x8, mi
00000000000354f0	tbnz	x21, #0x3f, 0x358e0
00000000000354f4	adr	x24, #0x1d2f4 ; literal pool for: "m"
00000000000354f8	nop
00000000000354fc	adr	x25, #0x1d2ea ; literal pool for: "k"
0000000000035500	nop
0000000000035504	adr	x23, #0x1d2e6 ; literal pool for: "g"
0000000000035508	nop
000000000003550c	adr	x22, #0x1d2d8 ; literal pool for: "b"
0000000000035510	nop
0000000000035514	cmp	x9, #0x3ff
0000000000035518	b.gt	0x35900
000000000003551c	stp	x8, x22, [sp]
0000000000035520	adr	x2, #0x1d2bd ; literal pool for: "%d %s "
0000000000035524	nop
0000000000035528	b	0x3596c
000000000003552c	adr	x10, #0x1d2bc ; literal pool for: "m"
0000000000035530	nop
0000000000035534	adr	x11, #0x1d2b2 ; literal pool for: "k"
0000000000035538	nop
000000000003553c	cmp	x9, #0x100, lsl #12
0000000000035540	csel	x10, x11, x10, lt
0000000000035544	mov	w11, #0x100000
0000000000035548	mov	w12, #0x400
000000000003554c	csel	x11, x12, x11, lt
0000000000035550	lsl	x12, x11, #10
0000000000035554	adr	x13, #0x1d296 ; literal pool for: "g"
0000000000035558	nop
000000000003555c	cmp	x9, x12
0000000000035560	csel	x9, x10, x13, lt
0000000000035564	csel	x10, x11, x12, lt
0000000000035568	mov	w11, #0xcccd
000000000003556c	movk	w11, #0xcccc, lsl #16
0000000000035570	mul	x10, x10, x11
0000000000035574	lsr	x10, x10, #35
0000000000035578	sdiv	x8, x8, x10
000000000003557c	mov	x10, #0x6666666666666666
0000000000035580	movk	x10, #0x6667
0000000000035584	smulh	x10, x8, x10
0000000000035588	asr	x11, x10, #2
000000000003558c	add	x10, x11, x10, lsr #63
0000000000035590	mov	x11, #-0xa
0000000000035594	madd	x8, x10, x11, x8
0000000000035598	cmp	x8, #0x0
000000000003559c	cneg	x8, x8, mi
00000000000355a0	adr	x11, #0x1d244 ; literal pool for: "b"
00000000000355a4	nop
00000000000355a8	stp	x9, x11, [sp, #0x10]
00000000000355ac	stp	x10, x8, [sp]
00000000000355b0	adr	x2, #0x1d23c ; literal pool for: "%ld.%ld %s%s"
00000000000355b4	nop
00000000000355b8	add	x0, sp, #0x20
00000000000355bc	mov	w1, #0x20
00000000000355c0	bl	0x4de50 ; symbol stub for: _snprintf
00000000000355c4	add	x8, sp, #0x20
00000000000355c8	str	x8, [sp]
00000000000355cc	adr	x2, #0x1d240 ; literal pool for: "%11s"
00000000000355d0	nop
00000000000355d4	mov	x1, x19
00000000000355d8	bl	__mi_fprintf
00000000000355dc	ldr	x8, [x20]
00000000000355e0	cmp	x8, #0x0
00000000000355e4	cneg	x9, x8, mi
00000000000355e8	cmp	x9, #0x3ff
00000000000355ec	b.gt	0x35608
00000000000355f0	adr	x9, #0x1d1f4 ; literal pool for: "b"
00000000000355f4	nop
00000000000355f8	stp	x8, x9, [sp]
00000000000355fc	adr	x2, #0x1d1e1 ; literal pool for: "%d %s "
0000000000035600	nop
0000000000035604	b	0x35694
0000000000035608	adr	x10, #0x1d1e0 ; literal pool for: "m"
000000000003560c	nop
0000000000035610	adr	x11, #0x1d1d6 ; literal pool for: "k"
0000000000035614	nop
0000000000035618	cmp	x9, #0x100, lsl #12
000000000003561c	csel	x10, x11, x10, lt
0000000000035620	mov	w11, #0x100000
0000000000035624	mov	w12, #0x400
0000000000035628	csel	x11, x12, x11, lt
000000000003562c	lsl	x12, x11, #10
0000000000035630	adr	x13, #0x1d1ba ; literal pool for: "g"
0000000000035634	nop
0000000000035638	cmp	x9, x12
000000000003563c	csel	x9, x10, x13, lt
0000000000035640	csel	x10, x11, x12, lt
0000000000035644	mov	w11, #0xcccd
0000000000035648	movk	w11, #0xcccc, lsl #16
000000000003564c	mul	x10, x10, x11
0000000000035650	lsr	x10, x10, #35
0000000000035654	sdiv	x8, x8, x10
0000000000035658	mov	x10, #0x6666666666666666
000000000003565c	movk	x10, #0x6667
0000000000035660	smulh	x10, x8, x10
0000000000035664	asr	x11, x10, #2
0000000000035668	add	x10, x11, x10, lsr #63
000000000003566c	mov	x11, #-0xa
0000000000035670	madd	x8, x10, x11, x8
0000000000035674	cmp	x8, #0x0
0000000000035678	cneg	x8, x8, mi
000000000003567c	adr	x11, #0x1d168 ; literal pool for: "b"
0000000000035680	nop
0000000000035684	stp	x9, x11, [sp, #0x10]
0000000000035688	stp	x10, x8, [sp]
000000000003568c	adr	x2, #0x1d160 ; literal pool for: "%ld.%ld %s%s"
0000000000035690	nop
0000000000035694	add	x0, sp, #0x20
0000000000035698	mov	w1, #0x20
000000000003569c	bl	0x4de50 ; symbol stub for: _snprintf
00000000000356a0	add	x8, sp, #0x20
00000000000356a4	str	x8, [sp]
00000000000356a8	adr	x2, #0x1d164 ; literal pool for: "%11s"
00000000000356ac	nop
00000000000356b0	mov	x1, x19
00000000000356b4	bl	__mi_fprintf
00000000000356b8	ldr	x8, [x20, #0x8]
00000000000356bc	cmp	x8, #0x0
00000000000356c0	cneg	x9, x8, mi
00000000000356c4	cmp	x9, #0x3ff
00000000000356c8	b.gt	0x356e4
00000000000356cc	adr	x9, #0x1d118 ; literal pool for: "b"
00000000000356d0	nop
00000000000356d4	stp	x8, x9, [sp]
00000000000356d8	adr	x2, #0x1d105 ; literal pool for: "%d %s "
00000000000356dc	nop
00000000000356e0	b	0x35770
00000000000356e4	adr	x10, #0x1d104 ; literal pool for: "m"
00000000000356e8	nop
00000000000356ec	adr	x11, #0x1d0fa ; literal pool for: "k"
00000000000356f0	nop
00000000000356f4	cmp	x9, #0x100, lsl #12
00000000000356f8	csel	x10, x11, x10, lt
00000000000356fc	mov	w11, #0x100000
0000000000035700	mov	w12, #0x400
0000000000035704	csel	x11, x12, x11, lt
0000000000035708	lsl	x12, x11, #10
000000000003570c	adr	x13, #0x1d0de ; literal pool for: "g"
0000000000035710	nop
0000000000035714	cmp	x9, x12
0000000000035718	csel	x9, x10, x13, lt
000000000003571c	csel	x10, x11, x12, lt
0000000000035720	mov	w11, #0xcccd
0000000000035724	movk	w11, #0xcccc, lsl #16
0000000000035728	mul	x10, x10, x11
000000000003572c	lsr	x10, x10, #35
0000000000035730	sdiv	x8, x8, x10
0000000000035734	mov	x10, #0x6666666666666666
0000000000035738	movk	x10, #0x6667
000000000003573c	smulh	x10, x8, x10
0000000000035740	asr	x11, x10, #2
0000000000035744	add	x10, x11, x10, lsr #63
0000000000035748	mov	x11, #-0xa
000000000003574c	madd	x8, x10, x11, x8
0000000000035750	cmp	x8, #0x0
0000000000035754	cneg	x8, x8, mi
0000000000035758	adr	x11, #0x1d08c ; literal pool for: "b"
000000000003575c	nop
0000000000035760	stp	x9, x11, [sp, #0x10]
0000000000035764	stp	x10, x8, [sp]
0000000000035768	adr	x2, #0x1d084 ; literal pool for: "%ld.%ld %s%s"
000000000003576c	nop
0000000000035770	add	x0, sp, #0x20
0000000000035774	mov	w1, #0x20
0000000000035778	bl	0x4de50 ; symbol stub for: _snprintf
000000000003577c	add	x8, sp, #0x20
0000000000035780	str	x8, [sp]
0000000000035784	adr	x2, #0x1d088 ; literal pool for: "%11s"
0000000000035788	nop
000000000003578c	mov	x1, x19
0000000000035790	bl	__mi_fprintf
0000000000035794	ldr	x8, [x20, #0x18]
0000000000035798	cmp	x8, #0x0
000000000003579c	cneg	x9, x8, mi
00000000000357a0	cmp	x9, #0x3ff
00000000000357a4	b.gt	0x357c0
00000000000357a8	adr	x9, #0x1d03c ; literal pool for: "b"
00000000000357ac	nop
00000000000357b0	stp	x8, x9, [sp]
00000000000357b4	adr	x2, #0x1d029 ; literal pool for: "%d %s "
00000000000357b8	nop
00000000000357bc	b	0x3584c
00000000000357c0	adr	x10, #0x1d028 ; literal pool for: "m"
00000000000357c4	nop
00000000000357c8	adr	x11, #0x1d01e ; literal pool for: "k"
00000000000357cc	nop
00000000000357d0	cmp	x9, #0x100, lsl #12
00000000000357d4	csel	x10, x11, x10, lt
00000000000357d8	mov	w11, #0x100000
00000000000357dc	mov	w12, #0x400
00000000000357e0	csel	x11, x12, x11, lt
00000000000357e4	lsl	x12, x11, #10
00000000000357e8	adr	x13, #0x1d002 ; literal pool for: "g"
00000000000357ec	nop
00000000000357f0	cmp	x9, x12
00000000000357f4	csel	x9, x10, x13, lt
00000000000357f8	csel	x10, x11, x12, lt
00000000000357fc	mov	w11, #0xcccd
0000000000035800	movk	w11, #0xcccc, lsl #16
0000000000035804	mul	x10, x10, x11
0000000000035808	lsr	x10, x10, #35
000000000003580c	sdiv	x8, x8, x10
0000000000035810	mov	x10, #0x6666666666666666
0000000000035814	movk	x10, #0x6667
0000000000035818	smulh	x10, x8, x10
000000000003581c	asr	x11, x10, #2
0000000000035820	add	x10, x11, x10, lsr #63
0000000000035824	mov	x11, #-0xa
0000000000035828	madd	x8, x10, x11, x8
000000000003582c	cmp	x8, #0x0
0000000000035830	cneg	x8, x8, mi
0000000000035834	adr	x11, #0x1cfb0 ; literal pool for: "b"
0000000000035838	nop
000000000003583c	stp	x9, x11, [sp, #0x10]
0000000000035840	stp	x10, x8, [sp]
0000000000035844	adr	x2, #0x1cfa8 ; literal pool for: "%ld.%ld %s%s"
0000000000035848	nop
000000000003584c	add	x0, sp, #0x20
0000000000035850	mov	w1, #0x20
0000000000035854	bl	0x4de50 ; symbol stub for: _snprintf
0000000000035858	add	x22, sp, #0x20
000000000003585c	str	x22, [sp]
0000000000035860	adr	x21, #0x1cfac ; literal pool for: "%11s"
0000000000035864	nop
0000000000035868	mov	x1, x19
000000000003586c	mov	x2, x21
0000000000035870	bl	__mi_fprintf
0000000000035874	adr	x8, #0x1cf70 ; literal pool for: "b"
0000000000035878	nop
000000000003587c	mov	w9, #0x1
0000000000035880	stp	x9, x8, [sp]
0000000000035884	adr	x2, #0x1cf59 ; literal pool for: "%d %s "
0000000000035888	nop
000000000003588c	add	x0, sp, #0x20
0000000000035890	mov	w1, #0x20
0000000000035894	bl	0x4de50 ; symbol stub for: _snprintf
0000000000035898	str	x22, [sp]
000000000003589c	mov	x1, x19
00000000000358a0	mov	x2, x21
00000000000358a4	bl	__mi_fprintf
00000000000358a8	adr	x8, #0x1cf62 ; literal pool for: " "
00000000000358ac	nop
00000000000358b0	str	x8, [sp]
00000000000358b4	mov	x1, x19
00000000000358b8	mov	x2, x21
00000000000358bc	bl	__mi_fprintf
00000000000358c0	ldp	x8, x9, [x20]
00000000000358c4	adr	x10, #0x1cf5f ; literal pool for: "  ok\n"
00000000000358c8	nop
00000000000358cc	adr	x11, #0x1cf45 ; literal pool for: "  not all freed!\n"
00000000000358d0	nop
00000000000358d4	cmp	x8, x9
00000000000358d8	csel	x2, x11, x10, gt
00000000000358dc	b	0x35b1c
00000000000358e0	cmp	x9, #0x3ff
00000000000358e4	b.gt	0x35b40
00000000000358e8	adr	x9, #0x1cf22 ; literal pool for: " "
00000000000358ec	nop
00000000000358f0	stp	x8, x9, [sp]
00000000000358f4	adr	x2, #0x1cee9 ; literal pool for: "%d %s "
00000000000358f8	nop
00000000000358fc	b	0x35bcc
0000000000035900	cmp	x9, #0x100, lsl #12
0000000000035904	csel	x10, x25, x24, lt
0000000000035908	mov	w11, #0x100000
000000000003590c	mov	w12, #0x400
0000000000035910	csel	x11, x12, x11, lt
0000000000035914	lsl	x12, x11, #10
0000000000035918	cmp	x9, x12
000000000003591c	csel	x9, x10, x23, lt
0000000000035920	csel	x10, x11, x12, lt
0000000000035924	mov	w11, #0xcccd
0000000000035928	movk	w11, #0xcccc, lsl #16
000000000003592c	mul	x10, x10, x11
0000000000035930	lsr	x10, x10, #35
0000000000035934	sdiv	x8, x8, x10
0000000000035938	mov	x10, #0x6666666666666666
000000000003593c	movk	x10, #0x6667
0000000000035940	smulh	x10, x8, x10
0000000000035944	asr	x11, x10, #2
0000000000035948	add	x10, x11, x10, lsr #63
000000000003594c	mov	x11, #-0xa
0000000000035950	madd	x8, x10, x11, x8
0000000000035954	cmp	x8, #0x0
0000000000035958	cneg	x8, x8, mi
000000000003595c	stp	x9, x22, [sp, #0x10]
0000000000035960	stp	x10, x8, [sp]
0000000000035964	adr	x2, #0x1ce88 ; literal pool for: "%ld.%ld %s%s"
0000000000035968	nop
000000000003596c	add	x0, sp, #0x20
0000000000035970	mov	w1, #0x20
0000000000035974	bl	0x4de50 ; symbol stub for: _snprintf
0000000000035978	add	x8, sp, #0x20
000000000003597c	str	x8, [sp]
0000000000035980	adr	x2, #0x1ce8c ; literal pool for: "%11s"
0000000000035984	nop
0000000000035988	mov	x1, x19
000000000003598c	bl	__mi_fprintf
0000000000035990	ldr	x8, [x20]
0000000000035994	cmp	x8, #0x0
0000000000035998	cneg	x9, x8, mi
000000000003599c	cmp	x9, #0x3ff
00000000000359a0	b.gt	0x359b4
00000000000359a4	stp	x8, x22, [sp]
00000000000359a8	adr	x2, #0x1ce35 ; literal pool for: "%d %s "
00000000000359ac	nop
00000000000359b0	b	0x35a20
00000000000359b4	cmp	x9, #0x100, lsl #12
00000000000359b8	csel	x10, x25, x24, lt
00000000000359bc	mov	w11, #0x100000
00000000000359c0	mov	w12, #0x400
00000000000359c4	csel	x11, x12, x11, lt
00000000000359c8	lsl	x12, x11, #10
00000000000359cc	cmp	x9, x12
00000000000359d0	csel	x9, x10, x23, lt
00000000000359d4	csel	x10, x11, x12, lt
00000000000359d8	mov	w11, #0xcccd
00000000000359dc	movk	w11, #0xcccc, lsl #16
00000000000359e0	mul	x10, x10, x11
00000000000359e4	lsr	x10, x10, #35
00000000000359e8	sdiv	x8, x8, x10
00000000000359ec	mov	x10, #0x6666666666666666
00000000000359f0	movk	x10, #0x6667
00000000000359f4	smulh	x10, x8, x10
00000000000359f8	asr	x11, x10, #2
00000000000359fc	add	x10, x11, x10, lsr #63
0000000000035a00	mov	x11, #-0xa
0000000000035a04	madd	x8, x10, x11, x8
0000000000035a08	cmp	x8, #0x0
0000000000035a0c	cneg	x8, x8, mi
0000000000035a10	stp	x9, x22, [sp, #0x10]
0000000000035a14	stp	x10, x8, [sp]
0000000000035a18	adr	x2, #0x1cdd4 ; literal pool for: "%ld.%ld %s%s"
0000000000035a1c	nop
0000000000035a20	add	x0, sp, #0x20
0000000000035a24	mov	w1, #0x20
0000000000035a28	bl	0x4de50 ; symbol stub for: _snprintf
0000000000035a2c	add	x8, sp, #0x20
0000000000035a30	str	x8, [sp]
0000000000035a34	adr	x21, #0x1cdd8 ; literal pool for: "%11s"
0000000000035a38	nop
0000000000035a3c	mov	x1, x19
0000000000035a40	mov	x2, x21
0000000000035a44	bl	__mi_fprintf
0000000000035a48	adr	x8, #0x1cdc2 ; literal pool for: " "
0000000000035a4c	nop
0000000000035a50	str	x8, [sp]
0000000000035a54	mov	x1, x19
0000000000035a58	mov	x2, x21
0000000000035a5c	bl	__mi_fprintf
0000000000035a60	ldr	x8, [x20, #0x18]
0000000000035a64	cmp	x8, #0x0
0000000000035a68	cneg	x9, x8, mi
0000000000035a6c	cmp	x9, #0x3ff
0000000000035a70	b.gt	0x35a84
0000000000035a74	stp	x8, x22, [sp]
0000000000035a78	adr	x2, #0x1cd65 ; literal pool for: "%d %s "
0000000000035a7c	nop
0000000000035a80	b	0x35af0
0000000000035a84	cmp	x9, #0x100, lsl #12
0000000000035a88	csel	x10, x25, x24, lt
0000000000035a8c	mov	w11, #0x100000
0000000000035a90	mov	w12, #0x400
0000000000035a94	csel	x11, x12, x11, lt
0000000000035a98	lsl	x12, x11, #10
0000000000035a9c	cmp	x9, x12
0000000000035aa0	csel	x9, x10, x23, lt
0000000000035aa4	csel	x10, x11, x12, lt
0000000000035aa8	mov	w11, #0xcccd
0000000000035aac	movk	w11, #0xcccc, lsl #16
0000000000035ab0	mul	x10, x10, x11
0000000000035ab4	lsr	x10, x10, #35
0000000000035ab8	sdiv	x8, x8, x10
0000000000035abc	mov	x10, #0x6666666666666666
0000000000035ac0	movk	x10, #0x6667
0000000000035ac4	smulh	x10, x8, x10
0000000000035ac8	asr	x11, x10, #2
0000000000035acc	add	x10, x11, x10, lsr #63
0000000000035ad0	mov	x11, #-0xa
0000000000035ad4	madd	x8, x10, x11, x8
0000000000035ad8	cmp	x8, #0x0
0000000000035adc	cneg	x8, x8, mi
0000000000035ae0	stp	x9, x22, [sp, #0x10]
0000000000035ae4	stp	x10, x8, [sp]
0000000000035ae8	adr	x2, #0x1cd04 ; literal pool for: "%ld.%ld %s%s"
0000000000035aec	nop
0000000000035af0	add	x0, sp, #0x20
0000000000035af4	mov	w1, #0x20
0000000000035af8	bl	0x4de50 ; symbol stub for: _snprintf
0000000000035afc	add	x8, sp, #0x20
0000000000035b00	str	x8, [sp]
0000000000035b04	adr	x2, #0x1cd08 ; literal pool for: "%11s"
0000000000035b08	nop
0000000000035b0c	mov	x1, x19
0000000000035b10	bl	__mi_fprintf
0000000000035b14	adr	x2, #0x1d183 ; literal pool for: "\n"
0000000000035b18	nop
0000000000035b1c	mov	x1, x19
0000000000035b20	bl	__mi_fprintf
0000000000035b24	ldp	x29, x30, [sp, #0x80]
0000000000035b28	ldp	x20, x19, [sp, #0x70]
0000000000035b2c	ldp	x22, x21, [sp, #0x60]
0000000000035b30	ldp	x24, x23, [sp, #0x50]
0000000000035b34	ldp	x26, x25, [sp, #0x40]
0000000000035b38	add	sp, sp, #0x90
0000000000035b3c	ret
0000000000035b40	adr	x10, #0x1cca8 ; literal pool for: "m"
0000000000035b44	nop
0000000000035b48	adr	x11, #0x1cc9e ; literal pool for: "k"
0000000000035b4c	nop
0000000000035b50	cmp	x9, #0x100, lsl #12
0000000000035b54	csel	x10, x11, x10, lt
0000000000035b58	mov	w11, #0x100000
0000000000035b5c	mov	w12, #0x400
0000000000035b60	csel	x11, x12, x11, lt
0000000000035b64	lsl	x12, x11, #10
0000000000035b68	adr	x13, #0x1cc82 ; literal pool for: "g"
0000000000035b6c	nop
0000000000035b70	cmp	x9, x12
0000000000035b74	csel	x9, x10, x13, lt
0000000000035b78	csel	x10, x11, x12, lt
0000000000035b7c	mov	w11, #0xcccd
0000000000035b80	movk	w11, #0xcccc, lsl #16
0000000000035b84	mul	x10, x10, x11
0000000000035b88	lsr	x10, x10, #35
0000000000035b8c	sdiv	x8, x8, x10
0000000000035b90	mov	x10, #0x6666666666666666
0000000000035b94	movk	x10, #0x6667
0000000000035b98	smulh	x10, x8, x10
0000000000035b9c	asr	x11, x10, #2
0000000000035ba0	add	x10, x11, x10, lsr #63
0000000000035ba4	mov	x11, #-0xa
0000000000035ba8	madd	x8, x10, x11, x8
0000000000035bac	cmp	x8, #0x0
0000000000035bb0	cneg	x8, x8, mi
0000000000035bb4	adr	x11, #0x1cc56 ; literal pool for: " "
0000000000035bb8	nop
0000000000035bbc	stp	x9, x11, [sp, #0x10]
0000000000035bc0	stp	x10, x8, [sp]
0000000000035bc4	adr	x2, #0x1cc28 ; literal pool for: "%ld.%ld %s%s"
0000000000035bc8	nop
0000000000035bcc	add	x0, sp, #0x20
0000000000035bd0	mov	w1, #0x20
0000000000035bd4	bl	0x4de50 ; symbol stub for: _snprintf
0000000000035bd8	add	x8, sp, #0x20
0000000000035bdc	str	x8, [sp]
0000000000035be0	adr	x2, #0x1cc2c ; literal pool for: "%11s"
0000000000035be4	nop
0000000000035be8	mov	x1, x19
0000000000035bec	bl	__mi_fprintf
0000000000035bf0	ldr	x8, [x20]
0000000000035bf4	cmp	x8, #0x0
0000000000035bf8	cneg	x9, x8, mi
0000000000035bfc	cmp	x9, #0x3ff
0000000000035c00	b.gt	0x35c1c
0000000000035c04	adr	x9, #0x1cc06 ; literal pool for: " "
0000000000035c08	nop
0000000000035c0c	stp	x8, x9, [sp]
0000000000035c10	adr	x2, #0x1cbcd ; literal pool for: "%d %s "
0000000000035c14	nop
0000000000035c18	b	0x35ca8
0000000000035c1c	adr	x10, #0x1cbcc ; literal pool for: "m"
0000000000035c20	nop
0000000000035c24	adr	x11, #0x1cbc2 ; literal pool for: "k"
0000000000035c28	nop
0000000000035c2c	cmp	x9, #0x100, lsl #12
0000000000035c30	csel	x10, x11, x10, lt
0000000000035c34	mov	w11, #0x100000
0000000000035c38	mov	w12, #0x400
0000000000035c3c	csel	x11, x12, x11, lt
0000000000035c40	lsl	x12, x11, #10
0000000000035c44	adr	x13, #0x1cba6 ; literal pool for: "g"
0000000000035c48	nop
0000000000035c4c	cmp	x9, x12
0000000000035c50	csel	x9, x10, x13, lt
0000000000035c54	csel	x10, x11, x12, lt
0000000000035c58	mov	w11, #0xcccd
0000000000035c5c	movk	w11, #0xcccc, lsl #16
0000000000035c60	mul	x10, x10, x11
0000000000035c64	lsr	x10, x10, #35
0000000000035c68	sdiv	x8, x8, x10
0000000000035c6c	mov	x10, #0x6666666666666666
0000000000035c70	movk	x10, #0x6667
0000000000035c74	smulh	x10, x8, x10
0000000000035c78	asr	x11, x10, #2
0000000000035c7c	add	x10, x11, x10, lsr #63
0000000000035c80	mov	x11, #-0xa
0000000000035c84	madd	x8, x10, x11, x8
0000000000035c88	cmp	x8, #0x0
0000000000035c8c	cneg	x8, x8, mi
0000000000035c90	adr	x11, #0x1cb7a ; literal pool for: " "
0000000000035c94	nop
0000000000035c98	stp	x9, x11, [sp, #0x10]
0000000000035c9c	stp	x10, x8, [sp]
0000000000035ca0	adr	x2, #0x1cb4c ; literal pool for: "%ld.%ld %s%s"
0000000000035ca4	nop
0000000000035ca8	add	x0, sp, #0x20
0000000000035cac	mov	w1, #0x20
0000000000035cb0	bl	0x4de50 ; symbol stub for: _snprintf
0000000000035cb4	add	x8, sp, #0x20
0000000000035cb8	str	x8, [sp]
0000000000035cbc	adr	x2, #0x1cb50 ; literal pool for: "%11s"
0000000000035cc0	nop
0000000000035cc4	mov	x1, x19
0000000000035cc8	bl	__mi_fprintf
0000000000035ccc	ldr	x8, [x20, #0x8]
0000000000035cd0	cmp	x8, #0x0
0000000000035cd4	cneg	x9, x8, mi
0000000000035cd8	cmp	x9, #0x3ff
0000000000035cdc	b.gt	0x35cf8
0000000000035ce0	adr	x9, #0x1cb2a ; literal pool for: " "
0000000000035ce4	nop
0000000000035ce8	stp	x8, x9, [sp]
0000000000035cec	adr	x2, #0x1caf1 ; literal pool for: "%d %s "
0000000000035cf0	nop
0000000000035cf4	b	0x35d84
0000000000035cf8	adr	x10, #0x1caf0 ; literal pool for: "m"
0000000000035cfc	nop
0000000000035d00	adr	x11, #0x1cae6 ; literal pool for: "k"
0000000000035d04	nop
0000000000035d08	cmp	x9, #0x100, lsl #12
0000000000035d0c	csel	x10, x11, x10, lt
0000000000035d10	mov	w11, #0x100000
0000000000035d14	mov	w12, #0x400
0000000000035d18	csel	x11, x12, x11, lt
0000000000035d1c	lsl	x12, x11, #10
0000000000035d20	adr	x13, #0x1caca ; literal pool for: "g"
0000000000035d24	nop
0000000000035d28	cmp	x9, x12
0000000000035d2c	csel	x9, x10, x13, lt
0000000000035d30	csel	x10, x11, x12, lt
0000000000035d34	mov	w11, #0xcccd
0000000000035d38	movk	w11, #0xcccc, lsl #16
0000000000035d3c	mul	x10, x10, x11
0000000000035d40	lsr	x10, x10, #35
0000000000035d44	sdiv	x8, x8, x10
0000000000035d48	mov	x10, #0x6666666666666666
0000000000035d4c	movk	x10, #0x6667
0000000000035d50	smulh	x10, x8, x10
0000000000035d54	asr	x11, x10, #2
0000000000035d58	add	x10, x11, x10, lsr #63
0000000000035d5c	mov	x11, #-0xa
0000000000035d60	madd	x8, x10, x11, x8
0000000000035d64	cmp	x8, #0x0
0000000000035d68	cneg	x8, x8, mi
0000000000035d6c	adr	x11, #0x1ca9e ; literal pool for: " "
0000000000035d70	nop
0000000000035d74	stp	x9, x11, [sp, #0x10]
0000000000035d78	stp	x10, x8, [sp]
0000000000035d7c	adr	x2, #0x1ca70 ; literal pool for: "%ld.%ld %s%s"
0000000000035d80	nop
0000000000035d84	add	x0, sp, #0x20
0000000000035d88	mov	w1, #0x20
0000000000035d8c	bl	0x4de50 ; symbol stub for: _snprintf
0000000000035d90	add	x8, sp, #0x20
0000000000035d94	str	x8, [sp]
0000000000035d98	adr	x2, #0x1ca74 ; literal pool for: "%11s"
0000000000035d9c	nop
0000000000035da0	mov	x1, x19
0000000000035da4	bl	__mi_fprintf
0000000000035da8	ldr	x8, [x20, #0x18]
0000000000035dac	cmp	x8, #0x0
0000000000035db0	cneg	x9, x8, mi
0000000000035db4	cmp	x9, #0x3ff
0000000000035db8	b.gt	0x35dd4
0000000000035dbc	adr	x9, #0x1ca4e ; literal pool for: " "
0000000000035dc0	nop
0000000000035dc4	stp	x8, x9, [sp]
0000000000035dc8	adr	x2, #0x1ca15 ; literal pool for: "%d %s "
0000000000035dcc	nop
0000000000035dd0	b	0x35e60
0000000000035dd4	adr	x10, #0x1ca14 ; literal pool for: "m"
0000000000035dd8	nop
0000000000035ddc	adr	x11, #0x1ca0a ; literal pool for: "k"
0000000000035de0	nop
0000000000035de4	cmp	x9, #0x100, lsl #12
0000000000035de8	csel	x10, x11, x10, lt
0000000000035dec	mov	w11, #0x100000
0000000000035df0	mov	w12, #0x400
0000000000035df4	csel	x11, x12, x11, lt
0000000000035df8	lsl	x12, x11, #10
0000000000035dfc	adr	x13, #0x1c9ee ; literal pool for: "g"
0000000000035e00	nop
0000000000035e04	cmp	x9, x12
0000000000035e08	csel	x9, x10, x13, lt
0000000000035e0c	csel	x10, x11, x12, lt
0000000000035e10	mov	w11, #0xcccd
0000000000035e14	movk	w11, #0xcccc, lsl #16
0000000000035e18	mul	x10, x10, x11
0000000000035e1c	lsr	x10, x10, #35
0000000000035e20	sdiv	x8, x8, x10
0000000000035e24	mov	x10, #0x6666666666666666
0000000000035e28	movk	x10, #0x6667
0000000000035e2c	smulh	x10, x8, x10
0000000000035e30	asr	x11, x10, #2
0000000000035e34	add	x10, x11, x10, lsr #63
0000000000035e38	mov	x11, #-0xa
0000000000035e3c	madd	x8, x10, x11, x8
0000000000035e40	cmp	x8, #0x0
0000000000035e44	cneg	x8, x8, mi
0000000000035e48	adr	x11, #0x1c9c2 ; literal pool for: " "
0000000000035e4c	nop
0000000000035e50	stp	x9, x11, [sp, #0x10]
0000000000035e54	stp	x10, x8, [sp]
0000000000035e58	adr	x2, #0x1c994 ; literal pool for: "%ld.%ld %s%s"
0000000000035e5c	nop
0000000000035e60	add	x0, sp, #0x20
0000000000035e64	mov	w1, #0x20
0000000000035e68	bl	0x4de50 ; symbol stub for: _snprintf
0000000000035e6c	add	x8, sp, #0x20
0000000000035e70	str	x8, [sp]
0000000000035e74	adr	x2, #0x1c998 ; literal pool for: "%11s"
0000000000035e78	nop
0000000000035e7c	mov	x1, x19
0000000000035e80	bl	__mi_fprintf
0000000000035e84	adr	x8, #0x1cb63 ; literal pool for: ""
0000000000035e88	nop
0000000000035e8c	str	x8, [sp]
0000000000035e90	adr	x2, #0x1c999 ; literal pool for: "%22s"
0000000000035e94	nop
0000000000035e98	mov	x1, x19
0000000000035e9c	b	0x358bc
_mi_stat_counter_print:
0000000000035ea0	sub	sp, sp, #0x60
0000000000035ea4	stp	x20, x19, [sp, #0x40]
0000000000035ea8	stp	x29, x30, [sp, #0x50]
0000000000035eac	add	x29, sp, #0x50
0000000000035eb0	mov	x19, x2
0000000000035eb4	mov	x20, x0
0000000000035eb8	str	x1, [sp]
0000000000035ebc	adr	x2, #0x1c948 ; literal pool for: "%10s:"
0000000000035ec0	nop
0000000000035ec4	mov	x1, x19
0000000000035ec8	bl	__mi_fprintf
0000000000035ecc	ldr	x8, [x20]
0000000000035ed0	cmp	x8, #0x0
0000000000035ed4	cneg	x9, x8, mi
0000000000035ed8	cmp	x9, #0x3ff
0000000000035edc	b.gt	0x35ef8
0000000000035ee0	adr	x9, #0x1c92a ; literal pool for: " "
0000000000035ee4	nop
0000000000035ee8	stp	x8, x9, [sp]
0000000000035eec	adr	x2, #0x1c8f1 ; literal pool for: "%d %s "
0000000000035ef0	nop
0000000000035ef4	b	0x35f84
0000000000035ef8	adr	x10, #0x1c8f0 ; literal pool for: "m"
0000000000035efc	nop
0000000000035f00	adr	x11, #0x1c8e6 ; literal pool for: "k"
0000000000035f04	nop
0000000000035f08	cmp	x9, #0x100, lsl #12
0000000000035f0c	csel	x10, x11, x10, lt
0000000000035f10	mov	w11, #0x100000
0000000000035f14	mov	w12, #0x400
0000000000035f18	csel	x11, x12, x11, lt
0000000000035f1c	lsl	x12, x11, #10
0000000000035f20	adr	x13, #0x1c8ca ; literal pool for: "g"
0000000000035f24	nop
0000000000035f28	cmp	x9, x12
0000000000035f2c	csel	x9, x10, x13, lt
0000000000035f30	csel	x10, x11, x12, lt
0000000000035f34	mov	w11, #0xcccd
0000000000035f38	movk	w11, #0xcccc, lsl #16
0000000000035f3c	mul	x10, x10, x11
0000000000035f40	lsr	x10, x10, #35
0000000000035f44	sdiv	x8, x8, x10
0000000000035f48	mov	x10, #0x6666666666666666
0000000000035f4c	movk	x10, #0x6667
0000000000035f50	smulh	x10, x8, x10
0000000000035f54	asr	x11, x10, #2
0000000000035f58	add	x10, x11, x10, lsr #63
0000000000035f5c	mov	x11, #-0xa
0000000000035f60	madd	x8, x10, x11, x8
0000000000035f64	cmp	x8, #0x0
0000000000035f68	cneg	x8, x8, mi
0000000000035f6c	adr	x11, #0x1c89e ; literal pool for: " "
0000000000035f70	nop
0000000000035f74	stp	x9, x11, [sp, #0x10]
0000000000035f78	stp	x10, x8, [sp]
0000000000035f7c	adr	x2, #0x1c870 ; literal pool for: "%ld.%ld %s%s"
0000000000035f80	nop
0000000000035f84	add	x0, sp, #0x20
0000000000035f88	mov	w1, #0x20
0000000000035f8c	bl	0x4de50 ; symbol stub for: _snprintf
0000000000035f90	add	x8, sp, #0x20
0000000000035f94	str	x8, [sp]
0000000000035f98	adr	x2, #0x1c874 ; literal pool for: "%11s"
0000000000035f9c	nop
0000000000035fa0	mov	x1, x19
0000000000035fa4	bl	__mi_fprintf
0000000000035fa8	adr	x2, #0x1ccef ; literal pool for: "\n"
0000000000035fac	nop
0000000000035fb0	mov	x1, x19
0000000000035fb4	bl	__mi_fprintf
0000000000035fb8	ldp	x29, x30, [sp, #0x50]
0000000000035fbc	ldp	x20, x19, [sp, #0x40]
0000000000035fc0	add	sp, sp, #0x60
0000000000035fc4	ret
_chacha_block:
0000000000035fc8	stp	x20, x19, [sp, #-0x10]!
0000000000035fcc	ldp	w15, w16, [x0]
0000000000035fd0	ldp	w17, w2, [x0, #0x8]
0000000000035fd4	ldp	w7, w12, [x0, #0x10]
0000000000035fd8	ldp	w13, w14, [x0, #0x18]
0000000000035fdc	ldp	w5, w6, [x0, #0x20]
0000000000035fe0	ldp	w9, w10, [x0, #0x28]
0000000000035fe4	ldp	w1, w3, [x0, #0x30]
0000000000035fe8	mov	x11, #-0x2
0000000000035fec	ldp	w4, w8, [x0, #0x38]
0000000000035ff0	add	w15, w15, w7
0000000000035ff4	eor	w1, w1, w15
0000000000035ff8	ror	w1, w1, #0x10
0000000000035ffc	add	w5, w1, w5
0000000000036000	eor	w7, w5, w7
0000000000036004	ror	w7, w7, #0x14
0000000000036008	add	w15, w7, w15
000000000003600c	eor	w1, w15, w1
0000000000036010	ror	w1, w1, #0x18
0000000000036014	add	w5, w1, w5
0000000000036018	eor	w7, w5, w7
000000000003601c	ror	w7, w7, #0x19
0000000000036020	add	w16, w16, w12
0000000000036024	eor	w3, w3, w16
0000000000036028	ror	w3, w3, #0x10
000000000003602c	add	w6, w3, w6
0000000000036030	eor	w12, w6, w12
0000000000036034	ror	w12, w12, #0x14
0000000000036038	add	w16, w12, w16
000000000003603c	eor	w3, w16, w3
0000000000036040	ror	w3, w3, #0x18
0000000000036044	add	w6, w3, w6
0000000000036048	eor	w12, w6, w12
000000000003604c	ror	w12, w12, #0x19
0000000000036050	add	w17, w17, w13
0000000000036054	eor	w4, w4, w17
0000000000036058	ror	w4, w4, #0x10
000000000003605c	add	w9, w4, w9
0000000000036060	eor	w13, w9, w13
0000000000036064	ror	w13, w13, #0x14
0000000000036068	add	w17, w13, w17
000000000003606c	eor	w4, w17, w4
0000000000036070	ror	w4, w4, #0x18
0000000000036074	add	w9, w4, w9
0000000000036078	eor	w13, w9, w13
000000000003607c	ror	w13, w13, #0x19
0000000000036080	add	w2, w2, w14
0000000000036084	eor	w8, w8, w2
0000000000036088	ror	w8, w8, #0x10
000000000003608c	add	w10, w8, w10
0000000000036090	eor	w14, w10, w14
0000000000036094	ror	w14, w14, #0x14
0000000000036098	add	w2, w14, w2
000000000003609c	eor	w8, w2, w8
00000000000360a0	ror	w8, w8, #0x18
00000000000360a4	add	w10, w8, w10
00000000000360a8	eor	w14, w10, w14
00000000000360ac	ror	w14, w14, #0x19
00000000000360b0	add	w15, w12, w15
00000000000360b4	eor	w8, w8, w15
00000000000360b8	ror	w8, w8, #0x10
00000000000360bc	add	w9, w8, w9
00000000000360c0	eor	w12, w9, w12
00000000000360c4	ror	w12, w12, #0x14
00000000000360c8	add	w15, w12, w15
00000000000360cc	eor	w8, w15, w8
00000000000360d0	ror	w8, w8, #0x18
00000000000360d4	add	w9, w8, w9
00000000000360d8	eor	w12, w9, w12
00000000000360dc	ror	w12, w12, #0x19
00000000000360e0	add	w16, w13, w16
00000000000360e4	eor	w1, w16, w1
00000000000360e8	ror	w1, w1, #0x10
00000000000360ec	add	w10, w10, w1
00000000000360f0	eor	w13, w10, w13
00000000000360f4	ror	w13, w13, #0x14
00000000000360f8	add	w16, w13, w16
00000000000360fc	eor	w1, w16, w1
0000000000036100	ror	w1, w1, #0x18
0000000000036104	add	w10, w1, w10
0000000000036108	eor	w13, w10, w13
000000000003610c	ror	w13, w13, #0x19
0000000000036110	add	w17, w14, w17
0000000000036114	eor	w3, w17, w3
0000000000036118	ror	w3, w3, #0x10
000000000003611c	add	w5, w3, w5
0000000000036120	eor	w14, w5, w14
0000000000036124	ror	w14, w14, #0x14
0000000000036128	add	w17, w14, w17
000000000003612c	eor	w3, w17, w3
0000000000036130	ror	w3, w3, #0x18
0000000000036134	add	w5, w3, w5
0000000000036138	eor	w14, w5, w14
000000000003613c	ror	w14, w14, #0x19
0000000000036140	add	w2, w2, w7
0000000000036144	eor	w4, w2, w4
0000000000036148	ror	w4, w4, #0x10
000000000003614c	add	w6, w4, w6
0000000000036150	eor	w7, w6, w7
0000000000036154	ror	w7, w7, #0x14
0000000000036158	add	w2, w7, w2
000000000003615c	eor	w4, w2, w4
0000000000036160	ror	w4, w4, #0x18
0000000000036164	add	w6, w4, w6
0000000000036168	eor	w7, w6, w7
000000000003616c	ror	w7, w7, #0x19
0000000000036170	add	x11, x11, #0x2
0000000000036174	cmp	x11, #0x12
0000000000036178	b.lo	0x35ff0
000000000003617c	ldp	w11, w19, [x0]
0000000000036180	add	w11, w11, w15
0000000000036184	add	w15, w19, w16
0000000000036188	stp	w11, w15, [x0, #0x40]
000000000003618c	ldp	w11, w15, [x0, #0x8]
0000000000036190	add	w11, w11, w17
0000000000036194	add	w15, w15, w2
0000000000036198	stp	w11, w15, [x0, #0x48]
000000000003619c	ldp	w11, w15, [x0, #0x10]
00000000000361a0	add	w11, w11, w7
00000000000361a4	add	w12, w15, w12
00000000000361a8	stp	w11, w12, [x0, #0x50]
00000000000361ac	ldp	w11, w12, [x0, #0x18]
00000000000361b0	add	w11, w11, w13
00000000000361b4	add	w12, w12, w14
00000000000361b8	stp	w11, w12, [x0, #0x58]
00000000000361bc	ldp	w11, w12, [x0, #0x20]
00000000000361c0	add	w11, w11, w5
00000000000361c4	add	w12, w12, w6
00000000000361c8	stp	w11, w12, [x0, #0x60]
00000000000361cc	ldp	w11, w12, [x0, #0x28]
00000000000361d0	add	w9, w11, w9
00000000000361d4	add	w10, w12, w10
00000000000361d8	stp	w9, w10, [x0, #0x68]
00000000000361dc	ldp	w11, w10, [x0, #0x30]
00000000000361e0	add	w9, w11, w1
00000000000361e4	add	w12, w10, w3
00000000000361e8	stp	w9, w12, [x0, #0x70]
00000000000361ec	ldp	w9, w12, [x0, #0x38]
00000000000361f0	add	w13, w9, w4
00000000000361f4	add	w8, w12, w8
00000000000361f8	stp	w13, w8, [x0, #0x78]
00000000000361fc	mov	w8, #0x10
0000000000036200	str	w8, [x0, #0x80]
0000000000036204	adds	w8, w11, #0x1
0000000000036208	str	w8, [x0, #0x30]
000000000003620c	b.lo	0x36224
0000000000036210	adds	w8, w10, #0x1
0000000000036214	str	w8, [x0, #0x34]
0000000000036218	b.lo	0x36224
000000000003621c	add	w8, w9, #0x1
0000000000036220	str	w8, [x0, #0x38]
0000000000036224	ldp	x20, x19, [sp], #0x10
0000000000036228	ret
__mi_malloc_generic:
000000000003622c	sub	sp, sp, #0x70
0000000000036230	stp	x28, x27, [sp, #0x10]
0000000000036234	stp	x26, x25, [sp, #0x20]
0000000000036238	stp	x24, x23, [sp, #0x30]
000000000003623c	stp	x22, x21, [sp, #0x40]
0000000000036240	stp	x20, x19, [sp, #0x50]
0000000000036244	stp	x29, x30, [sp, #0x60]
0000000000036248	add	x29, sp, #0x60
000000000003624c	mov	x19, x1
0000000000036250	mov	x21, x0
0000000000036254	adr	x22, #0x2caac
0000000000036258	nop
000000000003625c	adrp	x20, 50 ; 0x68000
0000000000036260	add	x20, x20, #0xa18
0000000000036264	ldr	x23, [x20]
0000000000036268	adrp	x24, 76 ; 0x82000
000000000003626c	mov	w25, #0x1
0000000000036270	adr	x26, #0x4c818
0000000000036274	nop
0000000000036278	cmp	x21, x22
000000000003627c	b.eq	0x36328
0000000000036280	ldr	x8, [x21]
0000000000036284	ldr	x9, [x8]
0000000000036288	add	x1, x9, #0x1
000000000003628c	str	x1, [x8]
0000000000036290	ldr	x9, [x24, #0xa88]
0000000000036294	cbz	x9, 0x362c0
0000000000036298	ldrb	w9, [x8, #0x8]
000000000003629c	cbnz	w9, 0x362c0
00000000000362a0	strb	w25, [x8, #0x8]
00000000000362a4	mov	x8, x26
00000000000362a8	ldr	x9, [x8], #0x8
00000000000362ac	ldr	x2, [x8]
00000000000362b0	mov	w0, #0x0
00000000000362b4	blr	x9
00000000000362b8	ldr	x8, [x21]
00000000000362bc	strb	wzr, [x8, #0x8]
00000000000362c0	add	x8, x21, #0xb18
00000000000362c4	ldr	x9, [x21, #0xb18]
00000000000362c8	b	0x362d8
00000000000362cc	clrex
00000000000362d0	mov	w10, #0x0
00000000000362d4	cbnz	w10, 0x362fc
00000000000362d8	cbz	x9, 0x3630c
00000000000362dc	mov	x0, x9
00000000000362e0	ldaxr	x9, [x8]
00000000000362e4	cmp	x9, x0
00000000000362e8	b.ne	0x362cc
00000000000362ec	stlxr	w10, xzr, [x8]
00000000000362f0	cbnz	w10, 0x362d0
00000000000362f4	mov	w10, #0x1
00000000000362f8	cbz	w10, 0x362d8
00000000000362fc	ldr	x27, [x0]
0000000000036300	bl	__mi_free_delayed_block
0000000000036304	mov	x0, x27
0000000000036308	cbnz	x27, 0x362fc
000000000003630c	mov	x0, x21
0000000000036310	mov	x1, x19
0000000000036314	bl	_mi_find_page
0000000000036318	cbz	x0, 0x36344
000000000003631c	ldr	x8, [x0, #0x8]
0000000000036320	cbnz	x8, 0x3637c
0000000000036324	b	0x36278
0000000000036328	bl	_mi_thread_init
000000000003632c	mov	x0, x20
0000000000036330	blr	x23
0000000000036334	ldr	x21, [x0]
0000000000036338	cmp	x21, x22
000000000003633c	b.ne	0x36280
0000000000036340	b	0x363b4
0000000000036344	mov	x0, x21
0000000000036348	mov	w1, #0x1
000000000003634c	bl	_mi_heap_collect_ex
0000000000036350	mov	x0, x21
0000000000036354	mov	x1, x19
0000000000036358	bl	_mi_find_page
000000000003635c	cbnz	x0, 0x3631c
0000000000036360	str	x19, [sp]
0000000000036364	adr	x1, #0x1c4ca ; literal pool for: "unable to allocate memory (%zu bytes)\n"
0000000000036368	nop
000000000003636c	mov	w0, #0xc
0000000000036370	bl	__mi_error_message
0000000000036374	mov	x8, #0x0
0000000000036378	b	0x36390
000000000003637c	ldr	w9, [x0, #0x10]
0000000000036380	add	w9, w9, #0x1
0000000000036384	str	w9, [x0, #0x10]
0000000000036388	ldr	x9, [x8]
000000000003638c	str	x9, [x0, #0x8]
0000000000036390	mov	x0, x8
0000000000036394	ldp	x29, x30, [sp, #0x60]
0000000000036398	ldp	x20, x19, [sp, #0x50]
000000000003639c	ldp	x22, x21, [sp, #0x40]
00000000000363a0	ldp	x24, x23, [sp, #0x30]
00000000000363a4	ldp	x26, x25, [sp, #0x20]
00000000000363a8	ldp	x28, x27, [sp, #0x10]
00000000000363ac	add	sp, sp, #0x70
00000000000363b0	ret
00000000000363b4	mov	x8, #0x0
00000000000363b8	b	0x36390
_mi_find_page:
00000000000363bc	sub	sp, sp, #0x40
00000000000363c0	stp	x22, x21, [sp, #0x10]
00000000000363c4	stp	x20, x19, [sp, #0x20]
00000000000363c8	stp	x29, x30, [sp, #0x30]
00000000000363cc	add	x29, sp, #0x30
00000000000363d0	mov	x20, x0
00000000000363d4	cmp	x1, #0x200, lsl #12
00000000000363d8	b.hi	0x3658c
00000000000363dc	cmp	x1, #0x9
00000000000363e0	b.hs	0x36400
00000000000363e4	mov	w8, #0x1
00000000000363e8	and	x8, x8, #0xff
00000000000363ec	mov	w9, #0x18
00000000000363f0	madd	x21, x8, x9, x20
00000000000363f4	ldr	x19, [x21, #0x410]
00000000000363f8	cbnz	x19, 0x3646c
00000000000363fc	b	0x3656c
0000000000036400	add	x8, x1, #0x7
0000000000036404	lsr	x8, x8, #3
0000000000036408	cmp	x1, #0x40
000000000003640c	b.hi	0x36430
0000000000036410	add	w8, w8, #0x1
0000000000036414	and	x8, x8, #0xfe
0000000000036418	and	x8, x8, #0xff
000000000003641c	mov	w9, #0x18
0000000000036420	madd	x21, x8, x9, x20
0000000000036424	ldr	x19, [x21, #0x410]
0000000000036428	cbnz	x19, 0x3646c
000000000003642c	b	0x3656c
0000000000036430	sub	x8, x8, #0x1
0000000000036434	clz	x9, x8
0000000000036438	mov	w10, #0x3f
000000000003643c	sub	w9, w10, w9
0000000000036440	and	w9, w9, #0xff
0000000000036444	sub	w10, w9, #0x2
0000000000036448	lsr	x8, x8, x10
000000000003644c	and	w8, w8, #0x3
0000000000036450	bfi	w8, w9, #2, #8
0000000000036454	add	w8, w8, #0xfd
0000000000036458	and	x8, x8, #0xff
000000000003645c	mov	w9, #0x18
0000000000036460	madd	x21, x8, x9, x20
0000000000036464	ldr	x19, [x21, #0x410]
0000000000036468	cbz	x19, 0x3656c
000000000003646c	ldr	x8, [x19, #0x20]
0000000000036470	cmp	x8, #0x4
0000000000036474	b.lo	0x364f8
0000000000036478	add	x8, x19, #0x20
000000000003647c	ldr	x9, [x8]
0000000000036480	b	0x36490
0000000000036484	clrex
0000000000036488	mov	w11, #0x0
000000000003648c	cbnz	w11, 0x364b4
0000000000036490	mov	x10, x9
0000000000036494	ldaxr	x9, [x8]
0000000000036498	cmp	x9, x10
000000000003649c	b.ne	0x36484
00000000000364a0	and	x11, x10, #0x3
00000000000364a4	stlxr	w12, x11, [x8]
00000000000364a8	cbnz	w12, 0x36488
00000000000364ac	mov	w11, #0x1
00000000000364b0	cbz	w11, 0x36490
00000000000364b4	ands	x8, x10, #0xfffffffffffffffc
00000000000364b8	b.eq	0x364f8
00000000000364bc	mov	w9, #0x0
00000000000364c0	ldrh	w10, [x19, #0x2]
00000000000364c4	mov	x12, x8
00000000000364c8	mov	x11, x12
00000000000364cc	add	w9, w9, #0x1
00000000000364d0	ldr	x12, [x12]
00000000000364d4	cmp	w9, w10
00000000000364d8	ccmp	x12, #0x0, #0x4, ls
00000000000364dc	b.ne	0x364c8
00000000000364e0	cmp	w9, w10
00000000000364e4	b.ls	0x36520
00000000000364e8	adr	x1, #0x1c14d ; literal pool for: "corrupted thread-free list\n"
00000000000364ec	nop
00000000000364f0	mov	w0, #0xe
00000000000364f4	bl	__mi_error_message
00000000000364f8	ldr	x8, [x19, #0x18]
00000000000364fc	ldr	x9, [x19, #0x8]
0000000000036500	cbz	x8, 0x36544
0000000000036504	cbnz	x9, 0x36548
0000000000036508	str	x8, [x19, #0x8]
000000000003650c	str	xzr, [x19, #0x18]
0000000000036510	ldrb	w8, [x19, #0x7]
0000000000036514	and	w8, w8, #0xfe
0000000000036518	strb	w8, [x19, #0x7]
000000000003651c	b	0x36548
0000000000036520	ldr	x10, [x19, #0x18]
0000000000036524	str	x10, [x11]
0000000000036528	str	x8, [x19, #0x18]
000000000003652c	ldr	w8, [x19, #0x10]
0000000000036530	sub	w8, w8, w9
0000000000036534	str	w8, [x19, #0x10]
0000000000036538	ldr	x8, [x19, #0x18]
000000000003653c	ldr	x9, [x19, #0x8]
0000000000036540	cbnz	x8, 0x36504
0000000000036544	cbz	x9, 0x3656c
0000000000036548	ldrb	w8, [x19, #0x7]
000000000003654c	and	w8, w8, #0x1
0000000000036550	strb	w8, [x19, #0x7]
0000000000036554	mov	x0, x19
0000000000036558	ldp	x29, x30, [sp, #0x30]
000000000003655c	ldp	x20, x19, [sp, #0x20]
0000000000036560	ldp	x22, x21, [sp, #0x10]
0000000000036564	add	sp, sp, #0x40
0000000000036568	ret
000000000003656c	add	x1, x21, #0x410
0000000000036570	mov	x0, x20
0000000000036574	mov	w2, #0x1
0000000000036578	ldp	x29, x30, [sp, #0x30]
000000000003657c	ldp	x20, x19, [sp, #0x20]
0000000000036580	ldp	x22, x21, [sp, #0x10]
0000000000036584	add	sp, sp, #0x40
0000000000036588	b	_mi_page_queue_find_free_ex
000000000003658c	tbnz	x1, #0x3f, 0x366ec
0000000000036590	lsr	x8, x1, #25
0000000000036594	cmp	x8, #0x0
0000000000036598	mov	w8, #0x400000
000000000003659c	mov	w9, #0x100000
00000000000365a0	csel	x8, x9, x8, eq
00000000000365a4	cmp	x1, #0x800, lsl #12
00000000000365a8	mov	w9, #0x40000
00000000000365ac	csel	x8, x9, x8, lo
00000000000365b0	mvn	x9, x8
00000000000365b4	add	x10, x1, x8
00000000000365b8	sub	x10, x10, #0x1
00000000000365bc	neg	x8, x8
00000000000365c0	and	x8, x10, x8
00000000000365c4	cmp	x9, x1
00000000000365c8	csel	x2, x8, x1, hi
00000000000365cc	mov	x0, x20
00000000000365d0	mov	x1, #0x0
00000000000365d4	bl	_mi_page_fresh_alloc
00000000000365d8	mov	x19, x0
00000000000365dc	cbz	x0, 0x36554
00000000000365e0	ldr	w8, [x19, #0x14]
00000000000365e4	ubfx	x9, x8, #26, #6
00000000000365e8	cbnz	w9, 0x3671c
00000000000365ec	mov	x1, x8
00000000000365f0	add	x8, x19, #0x28
00000000000365f4	stlr	xzr, [x8]
00000000000365f8	ldr	x8, [x20]
00000000000365fc	mov	w9, #0x1
0000000000036600	movk	w9, #0x400, lsl #16
0000000000036604	cmp	x1, x9
0000000000036608	b.lo	0x36664
000000000003660c	add	x0, x8, #0x210
0000000000036610	bl	__mi_stat_increase
0000000000036614	ldr	x9, [x20]
0000000000036618	add	x8, x9, #0x2e0
000000000003661c	adr	x10, #0x4c824
0000000000036620	nop
0000000000036624	add	x9, x9, #0x2e8
0000000000036628	cmp	x8, x10
000000000003662c	b.lo	0x366bc
0000000000036630	adr	x10, #0x4ca50
0000000000036634	nop
0000000000036638	cmp	x8, x10
000000000003663c	b.hs	0x366bc
0000000000036640	ldxr	x10, [x9]
0000000000036644	add	x10, x10, #0x1
0000000000036648	stxr	w11, x10, [x9]
000000000003664c	cbnz	w11, 0x36640
0000000000036650	ldxr	x9, [x8]
0000000000036654	add	x9, x9, #0x1
0000000000036658	stxr	w10, x9, [x8]
000000000003665c	cbnz	w10, 0x36650
0000000000036660	b	0x36554
0000000000036664	add	x0, x8, #0x1f0
0000000000036668	bl	__mi_stat_increase
000000000003666c	ldr	x9, [x20]
0000000000036670	add	x8, x9, #0x2d0
0000000000036674	adr	x10, #0x4c7cc
0000000000036678	nop
000000000003667c	add	x9, x9, #0x2d8
0000000000036680	cmp	x8, x10
0000000000036684	b.lo	0x366bc
0000000000036688	adr	x10, #0x4c9f8
000000000003668c	nop
0000000000036690	cmp	x8, x10
0000000000036694	b.hs	0x366bc
0000000000036698	ldxr	x10, [x9]
000000000003669c	add	x10, x10, #0x1
00000000000366a0	stxr	w11, x10, [x9]
00000000000366a4	cbnz	w11, 0x36698
00000000000366a8	ldxr	x9, [x8]
00000000000366ac	add	x9, x9, #0x1
00000000000366b0	stxr	w10, x9, [x8]
00000000000366b4	cbnz	w10, 0x366a8
00000000000366b8	b	0x36554
00000000000366bc	ldr	x10, [x9]
00000000000366c0	add	x10, x10, #0x1
00000000000366c4	str	x10, [x9]
00000000000366c8	ldr	x9, [x8]
00000000000366cc	add	x9, x9, #0x1
00000000000366d0	str	x9, [x8]
00000000000366d4	mov	x0, x19
00000000000366d8	ldp	x29, x30, [sp, #0x30]
00000000000366dc	ldp	x20, x19, [sp, #0x20]
00000000000366e0	ldp	x22, x21, [sp, #0x10]
00000000000366e4	add	sp, sp, #0x40
00000000000366e8	ret
00000000000366ec	str	x1, [sp]
00000000000366f0	adr	x1, #0x1c165 ; literal pool for: "allocation request is too large (%zu bytes)\n"
00000000000366f4	nop
00000000000366f8	mov	w0, #0x54
00000000000366fc	bl	__mi_error_message
0000000000036700	mov	x19, #0x0
0000000000036704	mov	x0, x19
0000000000036708	ldp	x29, x30, [sp, #0x30]
000000000003670c	ldp	x20, x19, [sp, #0x20]
0000000000036710	ldp	x22, x21, [sp, #0x10]
0000000000036714	add	sp, sp, #0x40
0000000000036718	ret
000000000003671c	and	x9, x19, #0xffffffffffc00000
0000000000036720	ldr	w10, [x9, #0x70]
0000000000036724	cmp	w10, #0x3
0000000000036728	b.ne	0x36734
000000000003672c	ldr	x11, [x9, #0x48]
0000000000036730	b	0x36740
0000000000036734	ldr	x11, [x9, #0x60]
0000000000036738	mov	w12, #0x1
000000000003673c	lsl	x11, x12, x11
0000000000036740	ldrb	w12, [x19]
0000000000036744	cbz	x12, 0x36750
0000000000036748	mov	x1, x11
000000000003674c	b	0x365f0
0000000000036750	ldr	x13, [x9, #0x50]
0000000000036754	sub	x1, x11, x13
0000000000036758	cmp	w10, #0x1
000000000003675c	ccmp	w8, #0x0, #0x4, ls
0000000000036760	b.eq	0x365f0
0000000000036764	madd	x9, x11, x12, x9
0000000000036768	add	x9, x9, x13
000000000003676c	udiv	x10, x9, x8
0000000000036770	neg	x9, x9
0000000000036774	madd	x9, x10, x8, x9
0000000000036778	add	x9, x8, x9
000000000003677c	cmp	x9, x8
0000000000036780	csel	x8, x9, xzr, lo
0000000000036784	sub	x1, x1, x8
0000000000036788	b	0x365f0
_mi_page_fresh_alloc:
000000000003678c	sub	sp, sp, #0x70
0000000000036790	stp	x28, x27, [sp, #0x10]
0000000000036794	stp	x26, x25, [sp, #0x20]
0000000000036798	stp	x24, x23, [sp, #0x30]
000000000003679c	stp	x22, x21, [sp, #0x40]
00000000000367a0	stp	x20, x19, [sp, #0x50]
00000000000367a4	stp	x29, x30, [sp, #0x60]
00000000000367a8	add	x29, sp, #0x60
00000000000367ac	mov	x22, x2
00000000000367b0	mov	x20, x1
00000000000367b4	mov	x19, x0
00000000000367b8	ldr	x23, [x0]
00000000000367bc	add	x21, x23, #0x20
00000000000367c0	add	x5, x23, #0xa0
00000000000367c4	cmp	x2, #0x4, lsl #12
00000000000367c8	b.hi	0x367f8
00000000000367cc	ldr	x0, [x21]
00000000000367d0	cbnz	x0, 0x36a2c
00000000000367d4	mov	x0, x19
00000000000367d8	mov	x1, x22
00000000000367dc	mov	w2, #0x0
00000000000367e0	mov	w3, #0x10
00000000000367e4	mov	x4, x21
00000000000367e8	bl	_mi_segment_reclaim_or_alloc
00000000000367ec	cbz	x0, 0x368d8
00000000000367f0	ldr	x0, [x21]
00000000000367f4	b	0x36a2c
00000000000367f8	cmp	x22, #0x20, lsl #12
00000000000367fc	b.hi	0x3682c
0000000000036800	ldr	x0, [x23, #0x30]
0000000000036804	cbnz	x0, 0x36a2c
0000000000036808	mov	x0, x19
000000000003680c	mov	x1, x22
0000000000036810	mov	w2, #0x1
0000000000036814	mov	w3, #0x13
0000000000036818	mov	x4, x21
000000000003681c	bl	_mi_segment_reclaim_or_alloc
0000000000036820	cbz	x0, 0x368d8
0000000000036824	ldr	x0, [x23, #0x30]
0000000000036828	b	0x36a2c
000000000003682c	mov	w8, #0x1
0000000000036830	movk	w8, #0x2, lsl #16
0000000000036834	add	x8, x8, #0x1e0, lsl #12
0000000000036838	cmp	x22, x8
000000000003683c	b.hs	0x36860
0000000000036840	mov	x0, x19
0000000000036844	mov	x1, x22
0000000000036848	mov	w2, #0x2
000000000003684c	mov	w3, #0x16
0000000000036850	mov	x4, x21
0000000000036854	bl	_mi_segment_reclaim_or_alloc
0000000000036858	cbnz	x0, 0x36a2c
000000000003685c	b	0x368d8
0000000000036860	mov	x0, #0x0
0000000000036864	mov	x1, x22
0000000000036868	mov	w2, #0x3
000000000003686c	mov	w3, #0x16
0000000000036870	mov	x4, x21
0000000000036874	bl	_mi_segment_init
0000000000036878	cbz	x0, 0x368d8
000000000003687c	add	x8, x0, #0x68
0000000000036880	stlr	xzr, [x8]
0000000000036884	ldr	x8, [x0, #0x48]
0000000000036888	ldr	x9, [x23, #0x90]
000000000003688c	adr	x10, #0x4c5b4
0000000000036890	nop
0000000000036894	cmp	x9, x10
0000000000036898	cset	w11, hs
000000000003689c	add	x10, x10, #0x240
00000000000368a0	cmp	x9, x10
00000000000368a4	cset	w10, lo
00000000000368a8	and	w10, w11, w10
00000000000368ac	add	x12, x9, #0x18
00000000000368b0	cmp	x8, #0x0
00000000000368b4	b.le	0x36940
00000000000368b8	cbz	w10, 0x369b0
00000000000368bc	ldxr	x10, [x12]
00000000000368c0	sub	x10, x10, #0x1
00000000000368c4	stxr	w11, x10, [x12]
00000000000368c8	cbnz	w11, 0x368bc
00000000000368cc	add	x11, x9, #0x10
00000000000368d0	ldr	x13, [x9, #0x10]
00000000000368d4	b	0x368fc
00000000000368d8	mov	x21, #0x0
00000000000368dc	mov	w0, #0xa
00000000000368e0	bl	_mi_option_get
00000000000368e4	cbnz	x0, 0x36a44
00000000000368e8	b	0x36b28
00000000000368ec	clrex
00000000000368f0	mov	w14, #0x0
00000000000368f4	mov	x13, x12
00000000000368f8	cbnz	w14, 0x36924
00000000000368fc	cmp	x13, x10
0000000000036900	b.ge	0x36924
0000000000036904	ldxr	x12, [x11]
0000000000036908	cmp	x12, x13
000000000003690c	b.ne	0x368ec
0000000000036910	stlxr	w13, x10, [x11]
0000000000036914	cbnz	w13, 0x368f0
0000000000036918	mov	w14, #0x1
000000000003691c	mov	x13, x12
0000000000036920	cbz	w14, 0x368fc
0000000000036924	add	x9, x9, #0x8
0000000000036928	ldxr	x10, [x9]
000000000003692c	add	x10, x10, #0x1
0000000000036930	stxr	w11, x10, [x9]
0000000000036934	cbnz	w11, 0x36928
0000000000036938	mov	x10, #-0x1
000000000003693c	b	0x369fc
0000000000036940	cbz	w10, 0x369d4
0000000000036944	ldxr	x10, [x12]
0000000000036948	add	x11, x10, #0x1
000000000003694c	stxr	w13, x11, [x12]
0000000000036950	cbnz	w13, 0x36944
0000000000036954	add	x12, x9, #0x10
0000000000036958	ldr	x14, [x9, #0x10]
000000000003695c	b	0x36970
0000000000036960	clrex
0000000000036964	mov	w15, #0x0
0000000000036968	mov	x14, x13
000000000003696c	cbnz	w15, 0x36998
0000000000036970	cmp	x14, x10
0000000000036974	b.gt	0x36998
0000000000036978	ldxr	x13, [x12]
000000000003697c	cmp	x13, x14
0000000000036980	b.ne	0x36960
0000000000036984	stlxr	w14, x11, [x12]
0000000000036988	cbnz	w14, 0x36964
000000000003698c	mov	w15, #0x1
0000000000036990	mov	x14, x13
0000000000036994	cbz	w15, 0x36970
0000000000036998	mov	w10, #0x1
000000000003699c	ldxr	x11, [x9]
00000000000369a0	add	x11, x11, #0x1
00000000000369a4	stxr	w12, x11, [x9]
00000000000369a8	cbnz	w12, 0x3699c
00000000000369ac	b	0x369fc
00000000000369b0	ldp	x11, x10, [x9, #0x10]
00000000000369b4	sub	x10, x10, #0x1
00000000000369b8	str	x10, [x9, #0x18]
00000000000369bc	cmp	x10, x11
00000000000369c0	b.le	0x369c8
00000000000369c4	str	x10, [x9, #0x10]
00000000000369c8	add	x9, x9, #0x8
00000000000369cc	mov	x10, #-0x1
00000000000369d0	b	0x369f0
00000000000369d4	ldp	x12, x11, [x9, #0x10]
00000000000369d8	add	x10, x11, #0x1
00000000000369dc	str	x10, [x9, #0x18]
00000000000369e0	cmp	x11, x12
00000000000369e4	b.lt	0x369ec
00000000000369e8	str	x10, [x9, #0x10]
00000000000369ec	mov	w10, #0x1
00000000000369f0	ldr	x11, [x9]
00000000000369f4	add	x11, x11, #0x1
00000000000369f8	str	x11, [x9]
00000000000369fc	ldp	x9, x11, [x23, #0x58]
0000000000036a00	add	x9, x9, x10
0000000000036a04	str	x9, [x23, #0x58]
0000000000036a08	cmp	x9, x11
0000000000036a0c	b.ls	0x36a14
0000000000036a10	str	x9, [x23, #0x60]
0000000000036a14	ldp	x9, x10, [x23, #0x68]
0000000000036a18	sub	x8, x9, x8
0000000000036a1c	str	x8, [x23, #0x68]
0000000000036a20	cmp	x8, x10
0000000000036a24	b.ls	0x36a2c
0000000000036a28	str	x8, [x23, #0x70]
0000000000036a2c	mov	x1, x21
0000000000036a30	bl	_mi_segment_find_free
0000000000036a34	mov	x21, x0
0000000000036a38	mov	w0, #0xa
0000000000036a3c	bl	_mi_option_get
0000000000036a40	cbz	x0, 0x36b28
0000000000036a44	mov	x0, sp
0000000000036a48	mov	x1, #0x0
0000000000036a4c	bl	0x4dbbc ; symbol stub for: _gettimeofday
0000000000036a50	ldr	x24, [x23, #0x48]
0000000000036a54	cbz	x24, 0x36b24
0000000000036a58	ldr	x8, [sp]
0000000000036a5c	ldr	w9, [sp, #0x8]
0000000000036a60	mov	w10, #0x4dd3
0000000000036a64	movk	w10, #0x1062, lsl #16
0000000000036a68	smull	x9, w9, w10
0000000000036a6c	lsr	x10, x9, #63
0000000000036a70	asr	x9, x9, #38
0000000000036a74	add	w9, w9, w10
0000000000036a78	mov	w10, #0x3e8
0000000000036a7c	madd	w25, w8, w10, w9
0000000000036a80	mov	w26, #0x1
0000000000036a84	b	0x36a94
0000000000036a88	str	wzr, [x27, #0x10]
0000000000036a8c	stp	xzr, xzr, [x27, #0x30]
0000000000036a90	cbz	x24, 0x36b24
0000000000036a94	mov	x27, x24
0000000000036a98	ldr	w8, [x24, #0x10]
0000000000036a9c	cmp	w8, w25
0000000000036aa0	b.gt	0x36c00
0000000000036aa4	ldr	x24, [x27, #0x38]
0000000000036aa8	mov	w0, #0xa
0000000000036aac	bl	_mi_option_get
0000000000036ab0	cbz	x0, 0x36a88
0000000000036ab4	and	x9, x27, #0xffffffffffc00000
0000000000036ab8	ldrb	w8, [x9, #0x8]
0000000000036abc	cbnz	w8, 0x36a88
0000000000036ac0	ldrb	w8, [x27, #0x1]
0000000000036ac4	and	w10, w8, #0x7
0000000000036ac8	cmp	w10, #0x4
0000000000036acc	b.ne	0x36a88
0000000000036ad0	ldr	w10, [x9, #0x70]
0000000000036ad4	cmp	w10, #0x3
0000000000036ad8	b.ne	0x36af0
0000000000036adc	ldr	x1, [x9, #0x48]
0000000000036ae0	ldrb	w10, [x27]
0000000000036ae4	madd	x0, x1, x10, x9
0000000000036ae8	cbnz	x10, 0x36b10
0000000000036aec	b	0x36b04
0000000000036af0	ldr	x10, [x9, #0x60]
0000000000036af4	lsl	x1, x26, x10
0000000000036af8	ldrb	w10, [x27]
0000000000036afc	madd	x0, x1, x10, x9
0000000000036b00	cbnz	x10, 0x36b10
0000000000036b04	ldr	x9, [x9, #0x50]
0000000000036b08	add	x0, x0, x9
0000000000036b0c	sub	x1, x1, x9
0000000000036b10	orr	w8, w8, #0x2
0000000000036b14	strb	w8, [x27, #0x1]
0000000000036b18	cbz	x1, 0x36a88
0000000000036b1c	bl	__mi_os_reset
0000000000036b20	b	0x36a88
0000000000036b24	stp	xzr, xzr, [x23, #0x40]
0000000000036b28	cbz	x21, 0x36f28
0000000000036b2c	and	x8, x21, #0xffffffffffc00000
0000000000036b30	add	x9, x21, #0x28
0000000000036b34	stlr	x19, [x9]
0000000000036b38	ldr	w10, [x8, #0x70]
0000000000036b3c	cmp	w10, #0x3
0000000000036b40	b.ne	0x36b58
0000000000036b44	ldr	x12, [x8, #0x48]
0000000000036b48	ldrb	w9, [x21]
0000000000036b4c	cbz	x9, 0x36b6c
0000000000036b50	mov	x11, x12
0000000000036b54	b	0x36ba4
0000000000036b58	ldr	x9, [x8, #0x60]
0000000000036b5c	mov	w11, #0x1
0000000000036b60	lsl	x12, x11, x9
0000000000036b64	ldrb	w9, [x21]
0000000000036b68	cbnz	x9, 0x36b50
0000000000036b6c	ldr	x13, [x8, #0x50]
0000000000036b70	sub	x11, x12, x13
0000000000036b74	cmp	w10, #0x1
0000000000036b78	b.hi	0x36ba4
0000000000036b7c	cbz	x22, 0x36ba4
0000000000036b80	madd	x10, x12, x9, x8
0000000000036b84	add	x10, x10, x13
0000000000036b88	udiv	x12, x10, x22
0000000000036b8c	neg	x10, x10
0000000000036b90	madd	x10, x12, x22, x10
0000000000036b94	add	x10, x22, x10
0000000000036b98	cmp	x10, x22
0000000000036b9c	csel	x10, x10, xzr, lo
0000000000036ba0	sub	x11, x11, x10
0000000000036ba4	lsr	x10, x22, #26
0000000000036ba8	cmp	x10, #0x0
0000000000036bac	mov	w10, #0x4000000
0000000000036bb0	csel	x10, x22, x10, eq
0000000000036bb4	str	w10, [x21, #0x14]
0000000000036bb8	udiv	x11, x11, x22
0000000000036bbc	strh	w11, [x21, #0x4]
0000000000036bc0	ldrb	w12, [x21, #0x1]
0000000000036bc4	ldrb	w13, [x21, #0x7]
0000000000036bc8	bfxil	w13, w12, #3, #1
0000000000036bcc	strb	w13, [x21, #0x7]
0000000000036bd0	ldr	x12, [x21, #0x8]
0000000000036bd4	cbnz	x12, 0x36cb8
0000000000036bd8	ldrh	w12, [x21, #0x2]
0000000000036bdc	cmp	w12, w11, uxth
0000000000036be0	b.hs	0x36cb8
0000000000036be4	ldr	w15, [x8, #0x70]
0000000000036be8	cmp	w15, #0x3
0000000000036bec	b.ne	0x36c10
0000000000036bf0	ldr	x14, [x8, #0x48]
0000000000036bf4	cbz	w9, 0x36c20
0000000000036bf8	mov	x13, x14
0000000000036bfc	b	0x36c58
0000000000036c00	str	x27, [x23, #0x48]
0000000000036c04	str	xzr, [x27, #0x30]
0000000000036c08	cbnz	x21, 0x36b2c
0000000000036c0c	b	0x36f28
0000000000036c10	ldr	x13, [x8, #0x60]
0000000000036c14	mov	w14, #0x1
0000000000036c18	lsl	x14, x14, x13
0000000000036c1c	cbnz	w9, 0x36bf8
0000000000036c20	ldr	x16, [x8, #0x50]
0000000000036c24	sub	x13, x14, x16
0000000000036c28	cmp	w15, #0x1
0000000000036c2c	b.hi	0x36c58
0000000000036c30	cbz	x10, 0x36c58
0000000000036c34	madd	x8, x14, x9, x8
0000000000036c38	add	x8, x8, x16
0000000000036c3c	udiv	x9, x8, x10
0000000000036c40	neg	x8, x8
0000000000036c44	madd	x8, x9, x10, x8
0000000000036c48	add	x8, x10, x8
0000000000036c4c	cmp	x8, x10
0000000000036c50	csel	x8, x8, xzr, lo
0000000000036c54	sub	x13, x13, x8
0000000000036c58	lsr	w8, w10, #26
0000000000036c5c	cmp	w8, #0x0
0000000000036c60	csel	x1, x10, x13, eq
0000000000036c64	and	x8, x11, #0xffff
0000000000036c68	sub	x8, x8, x12
0000000000036c6c	mov	w9, #0x1
0000000000036c70	cmp	x1, #0xfff
0000000000036c74	and	w10, w1, #0xffff
0000000000036c78	mov	w11, #0x1000
0000000000036c7c	udiv	w10, w11, w10
0000000000036c80	csel	x9, x9, x10, hi
0000000000036c84	cmp	x8, x9
0000000000036c88	csel	x22, x9, x8, hi
0000000000036c8c	mov	x0, x21
0000000000036c90	mov	x2, x22
0000000000036c94	bl	_mi_page_free_list_extend
0000000000036c98	ldrh	w8, [x21, #0x2]
0000000000036c9c	add	w8, w8, w22
0000000000036ca0	strh	w8, [x21, #0x2]
0000000000036ca4	ldrb	w8, [x21, #0x1]
0000000000036ca8	tbnz	w8, #0x3, 0x36cb8
0000000000036cac	ldrb	w8, [x21, #0x7]
0000000000036cb0	and	w8, w8, #0xfe
0000000000036cb4	strb	w8, [x21, #0x7]
0000000000036cb8	ldr	x12, [x19]
0000000000036cbc	add	x8, x12, #0xd0
0000000000036cc0	adr	x9, #0x4c180
0000000000036cc4	nop
0000000000036cc8	cmp	x8, x9
0000000000036ccc	b.lo	0x36d50
0000000000036cd0	adr	x9, #0x4c3b0
0000000000036cd4	nop
0000000000036cd8	cmp	x8, x9
0000000000036cdc	b.hs	0x36d50
0000000000036ce0	add	x11, x12, #0xe8
0000000000036ce4	ldxr	x9, [x11]
0000000000036ce8	add	x10, x9, #0x1
0000000000036cec	stxr	w13, x10, [x11]
0000000000036cf0	cbnz	w13, 0x36ce4
0000000000036cf4	add	x11, x12, #0xe0
0000000000036cf8	ldr	x13, [x12, #0xe0]
0000000000036cfc	b	0x36d10
0000000000036d00	clrex
0000000000036d04	mov	w14, #0x0
0000000000036d08	mov	x13, x12
0000000000036d0c	cbnz	w14, 0x36d38
0000000000036d10	cmp	x13, x9
0000000000036d14	b.gt	0x36d38
0000000000036d18	ldxr	x12, [x11]
0000000000036d1c	cmp	x12, x13
0000000000036d20	b.ne	0x36d00
0000000000036d24	stlxr	w13, x10, [x11]
0000000000036d28	cbnz	w13, 0x36d04
0000000000036d2c	mov	w14, #0x1
0000000000036d30	mov	x13, x12
0000000000036d34	cbz	w14, 0x36d10
0000000000036d38	ldxr	x9, [x8]
0000000000036d3c	add	x9, x9, #0x1
0000000000036d40	stxr	w10, x9, [x8]
0000000000036d44	cbnz	w10, 0x36d38
0000000000036d48	cbnz	x20, 0x36d78
0000000000036d4c	b	0x36f28
0000000000036d50	ldp	x11, x10, [x12, #0xe0]
0000000000036d54	add	x9, x10, #0x1
0000000000036d58	str	x9, [x12, #0xe8]
0000000000036d5c	cmp	x10, x11
0000000000036d60	b.lt	0x36d68
0000000000036d64	str	x9, [x12, #0xe0]
0000000000036d68	ldr	x9, [x8]
0000000000036d6c	add	x9, x9, #0x1
0000000000036d70	str	x9, [x8]
0000000000036d74	cbz	x20, 0x36f28
0000000000036d78	mov	w9, #0x7
0000000000036d7c	movk	w9, #0x20, lsl #16
0000000000036d80	ldr	x8, [x20, #0x10]
0000000000036d84	add	x10, x9, #0x9
0000000000036d88	cmp	x8, x10
0000000000036d8c	cset	w8, eq
0000000000036d90	ldrb	w10, [x21, #0x6]
0000000000036d94	and	w10, w10, #0xfe
0000000000036d98	orr	w8, w10, w8
0000000000036d9c	strb	w8, [x21, #0x6]
0000000000036da0	ldr	x8, [x20]
0000000000036da4	stp	x8, xzr, [x21, #0x30]
0000000000036da8	add	x10, x8, #0x38
0000000000036dac	add	x11, x20, #0x8
0000000000036db0	cmp	x8, #0x0
0000000000036db4	csel	x8, x11, x10, eq
0000000000036db8	str	x21, [x8]
0000000000036dbc	str	x21, [x20]
0000000000036dc0	ldr	x11, [x20, #0x10]
0000000000036dc4	cmp	x11, #0x400
0000000000036dc8	b.hi	0x36f1c
0000000000036dcc	add	x8, x11, #0x7
0000000000036dd0	lsr	x8, x8, #3
0000000000036dd4	add	x10, x19, x8, lsl #3
0000000000036dd8	ldr	x10, [x10, #0x8]
0000000000036ddc	cmp	x10, x21
0000000000036de0	b.eq	0x36f1c
0000000000036de4	cmp	x11, #0x9
0000000000036de8	b.hs	0x36df4
0000000000036dec	mov	x9, #0x0
0000000000036df0	b	0x36ec0
0000000000036df4	sub	x12, x8, #0x1
0000000000036df8	clz	x13, x12
0000000000036dfc	mov	w10, #0x3f
0000000000036e00	sub	w13, w10, w13
0000000000036e04	and	w13, w13, #0xff
0000000000036e08	sub	w14, w13, #0x2
0000000000036e0c	lsr	x12, x12, x14
0000000000036e10	and	w12, w12, #0x3
0000000000036e14	bfi	w12, w13, #2, #8
0000000000036e18	sub	w12, w12, #0x3
0000000000036e1c	add	w13, w8, #0x1
0000000000036e20	and	w13, w13, #0xfffffffe
0000000000036e24	cmp	x11, #0x40
0000000000036e28	csel	w13, w12, w13, hi
0000000000036e2c	add	x11, x19, #0x410
0000000000036e30	sub	x12, x20, #0x18
0000000000036e34	and	w13, w13, #0xff
0000000000036e38	ldr	x14, [x12, #0x10]
0000000000036e3c	add	x15, x14, #0x7
0000000000036e40	lsr	x14, x15, #3
0000000000036e44	cmp	x15, #0x10
0000000000036e48	b.hs	0x36e54
0000000000036e4c	mov	w15, #0x1
0000000000036e50	b	0x36e9c
0000000000036e54	cmp	x15, #0x47
0000000000036e58	b.hi	0x36e68
0000000000036e5c	add	w15, w14, #0x1
0000000000036e60	and	w15, w15, #0xfffffffe
0000000000036e64	b	0x36e9c
0000000000036e68	cmp	x15, x9
0000000000036e6c	b.ls	0x36e78
0000000000036e70	mov	w15, #0x49
0000000000036e74	b	0x36e9c
0000000000036e78	sub	x15, x14, #0x1
0000000000036e7c	clz	x16, x15
0000000000036e80	sub	w16, w10, w16
0000000000036e84	and	w16, w16, #0xff
0000000000036e88	sub	w17, w16, #0x2
0000000000036e8c	lsr	x15, x15, x17
0000000000036e90	and	w15, w15, #0x3
0000000000036e94	bfi	w15, w16, #2, #8
0000000000036e98	sub	w15, w15, #0x3
0000000000036e9c	cmp	x12, x11
0000000000036ea0	b.ls	0x36eb0
0000000000036ea4	sub	x12, x12, #0x18
0000000000036ea8	cmp	w13, w15, uxtb
0000000000036eac	b.eq	0x36e38
0000000000036eb0	cmp	x14, x8
0000000000036eb4	csinc	x9, x8, x14, hs
0000000000036eb8	cmp	x9, x8
0000000000036ebc	b.hi	0x36f1c
0000000000036ec0	sub	x10, x8, x9
0000000000036ec4	add	x10, x10, #0x1
0000000000036ec8	cmp	x10, #0x4
0000000000036ecc	b.lo	0x36f00
0000000000036ed0	and	x11, x10, #0xfffffffffffffffc
0000000000036ed4	dup.2d	v0, x21
0000000000036ed8	add	x12, x19, x9, lsl #3
0000000000036edc	add	x12, x12, #0x18
0000000000036ee0	mov	x13, x11
0000000000036ee4	stp	q0, q0, [x12, #-0x10]
0000000000036ee8	add	x12, x12, #0x20
0000000000036eec	subs	x13, x13, #0x4
0000000000036ef0	b.ne	0x36ee4
0000000000036ef4	cmp	x10, x11
0000000000036ef8	b.eq	0x36f1c
0000000000036efc	add	x9, x9, x11
0000000000036f00	sub	x8, x8, x9
0000000000036f04	add	x8, x8, #0x1
0000000000036f08	add	x9, x19, x9, lsl #3
0000000000036f0c	add	x9, x9, #0x8
0000000000036f10	str	x21, [x9], #0x8
0000000000036f14	subs	x8, x8, #0x1
0000000000036f18	b.ne	0x36f10
0000000000036f1c	ldr	x8, [x19, #0xbc8]
0000000000036f20	add	x8, x8, #0x1
0000000000036f24	str	x8, [x19, #0xbc8]
0000000000036f28	mov	x0, x21
0000000000036f2c	ldp	x29, x30, [sp, #0x60]
0000000000036f30	ldp	x20, x19, [sp, #0x50]
0000000000036f34	ldp	x22, x21, [sp, #0x40]
0000000000036f38	ldp	x24, x23, [sp, #0x30]
0000000000036f3c	ldp	x26, x25, [sp, #0x20]
0000000000036f40	ldp	x28, x27, [sp, #0x10]
0000000000036f44	add	sp, sp, #0x70
0000000000036f48	ret
_mi_page_queue_find_free_ex:
0000000000036f4c	sub	sp, sp, #0x70
0000000000036f50	stp	x28, x27, [sp, #0x10]
0000000000036f54	stp	x26, x25, [sp, #0x20]
0000000000036f58	stp	x24, x23, [sp, #0x30]
0000000000036f5c	stp	x22, x21, [sp, #0x40]
0000000000036f60	stp	x20, x19, [sp, #0x50]
0000000000036f64	stp	x29, x30, [sp, #0x60]
0000000000036f68	add	x29, sp, #0x60
0000000000036f6c	mov	x19, x1
0000000000036f70	mov	x20, x0
0000000000036f74	mov	w23, #0x7
0000000000036f78	movk	w23, #0x20, lsl #16
0000000000036f7c	eor	w24, w2, #0x1
0000000000036f80	sub	x9, x1, #0x18
0000000000036f84	add	x8, x0, #0x410
0000000000036f88	stp	x9, x8, [sp]
0000000000036f8c	mov	w27, #0x3f
0000000000036f90	adr	x21, #0x1b6a5 ; literal pool for: "corrupted thread-free list\n"
0000000000036f94	nop
0000000000036f98	ldr	x28, [x19]
0000000000036f9c	cbnz	x28, 0x36fec
0000000000036fa0	ldr	x28, [x20, #0xbd0]
0000000000036fa4	ldr	x8, [x20, #0xbd8]
0000000000036fa8	cmp	x28, x8
0000000000036fac	b.ls	0x3753c
0000000000036fb0	mov	x25, #0x0
0000000000036fb4	mov	w26, #0x4a
0000000000036fb8	str	x26, [x20, #0xbd0]
0000000000036fbc	str	x25, [x20, #0xbd8]
0000000000036fc0	ldr	x2, [x19, #0x10]
0000000000036fc4	mov	x0, x20
0000000000036fc8	mov	x1, x19
0000000000036fcc	bl	_mi_page_fresh_alloc
0000000000036fd0	cmp	x0, #0x0
0000000000036fd4	cset	w8, ne
0000000000036fd8	orr	w8, w8, w24
0000000000036fdc	mov	w24, #0x1
0000000000036fe0	tbz	w8, #0x0, 0x36f98
0000000000036fe4	b	0x376c4
0000000000036fe8	cbz	x28, 0x36fa0
0000000000036fec	mov	x22, x28
0000000000036ff0	ldr	x28, [x28, #0x30]
0000000000036ff4	add	x25, x22, #0x20
0000000000036ff8	ldr	x8, [x22, #0x20]
0000000000036ffc	cmp	x8, #0x4
0000000000037000	b.lo	0x3707c
0000000000037004	ldr	x8, [x25]
0000000000037008	b	0x37018
000000000003700c	clrex
0000000000037010	mov	w10, #0x0
0000000000037014	cbnz	w10, 0x3703c
0000000000037018	mov	x9, x8
000000000003701c	ldaxr	x8, [x25]
0000000000037020	cmp	x8, x9
0000000000037024	b.ne	0x3700c
0000000000037028	and	x10, x9, #0x3
000000000003702c	stlxr	w11, x10, [x25]
0000000000037030	cbnz	w11, 0x37010
0000000000037034	mov	w10, #0x1
0000000000037038	cbz	w10, 0x37018
000000000003703c	ands	x8, x9, #0xfffffffffffffffc
0000000000037040	b.eq	0x3707c
0000000000037044	mov	w9, #0x0
0000000000037048	ldrh	w10, [x22, #0x2]
000000000003704c	mov	x12, x8
0000000000037050	mov	x11, x12
0000000000037054	add	w9, w9, #0x1
0000000000037058	ldr	x12, [x12]
000000000003705c	cmp	w9, w10
0000000000037060	ccmp	x12, #0x0, #0x4, ls
0000000000037064	b.ne	0x37050
0000000000037068	cmp	w9, w10
000000000003706c	b.ls	0x3715c
0000000000037070	mov	w0, #0xe
0000000000037074	mov	x1, x21
0000000000037078	bl	__mi_error_message
000000000003707c	ldr	x8, [x22, #0x18]
0000000000037080	cbz	x8, 0x370a0
0000000000037084	ldr	x9, [x22, #0x8]
0000000000037088	cbnz	x9, 0x370a0
000000000003708c	str	x8, [x22, #0x8]
0000000000037090	str	xzr, [x22, #0x18]
0000000000037094	ldrb	w8, [x22, #0x7]
0000000000037098	and	w8, w8, #0xfe
000000000003709c	strb	w8, [x22, #0x7]
00000000000370a0	ldr	x8, [x22, #0x8]
00000000000370a4	cbnz	x8, 0x37694
00000000000370a8	ldrh	w8, [x22, #0x2]
00000000000370ac	ldrh	w9, [x22, #0x4]
00000000000370b0	cmp	w8, w9
00000000000370b4	b.lo	0x375c0
00000000000370b8	ldrb	w8, [x22, #0x6]
00000000000370bc	tbnz	w8, #0x0, 0x36fe8
00000000000370c0	ldr	x9, [x22, #0x28]
00000000000370c4	ldr	x8, [x22, #0x28]
00000000000370c8	ldr	x11, [x22, #0x38]
00000000000370cc	cbz	x11, 0x370d8
00000000000370d0	ldr	x10, [x22, #0x30]
00000000000370d4	str	x10, [x11, #0x30]
00000000000370d8	ldr	x10, [x22, #0x30]
00000000000370dc	cbz	x10, 0x370e4
00000000000370e0	str	x11, [x10, #0x38]
00000000000370e4	ldr	x11, [x19, #0x8]
00000000000370e8	cmp	x11, x22
00000000000370ec	b.eq	0x37100
00000000000370f0	ldr	x11, [x19]
00000000000370f4	cmp	x11, x22
00000000000370f8	b.ne	0x372c0
00000000000370fc	b	0x37114
0000000000037100	ldr	x11, [x22, #0x38]
0000000000037104	str	x11, [x19, #0x8]
0000000000037108	ldr	x11, [x19]
000000000003710c	cmp	x11, x22
0000000000037110	b.ne	0x372c0
0000000000037114	str	x10, [x19]
0000000000037118	ldr	x12, [x19, #0x10]
000000000003711c	cmp	x12, #0x400
0000000000037120	b.hi	0x372c0
0000000000037124	cmp	x10, #0x0
0000000000037128	adr	x11, #0x17f58
000000000003712c	nop
0000000000037130	csel	x10, x11, x10, eq
0000000000037134	add	x11, x12, #0x7
0000000000037138	lsr	x11, x11, #3
000000000003713c	add	x13, x8, x11, lsl #3
0000000000037140	ldr	x13, [x13, #0x8]
0000000000037144	cmp	x13, x10
0000000000037148	b.eq	0x372c0
000000000003714c	cmp	x12, #0x9
0000000000037150	b.hs	0x37180
0000000000037154	mov	x12, #0x0
0000000000037158	b	0x37264
000000000003715c	ldr	x10, [x22, #0x18]
0000000000037160	str	x10, [x11]
0000000000037164	str	x8, [x22, #0x18]
0000000000037168	ldr	w8, [x22, #0x10]
000000000003716c	sub	w8, w8, w9
0000000000037170	str	w8, [x22, #0x10]
0000000000037174	ldr	x8, [x22, #0x18]
0000000000037178	cbnz	x8, 0x37084
000000000003717c	b	0x370a0
0000000000037180	cmp	x12, #0x40
0000000000037184	b.hi	0x37194
0000000000037188	add	w12, w11, #0x1
000000000003718c	and	w12, w12, #0xfffffffe
0000000000037190	b	0x371b8
0000000000037194	sub	x12, x11, #0x1
0000000000037198	clz	x13, x12
000000000003719c	sub	w13, w27, w13
00000000000371a0	and	w13, w13, #0xff
00000000000371a4	sub	w14, w13, #0x2
00000000000371a8	lsr	x12, x12, x14
00000000000371ac	and	w12, w12, #0x3
00000000000371b0	bfi	w12, w13, #2, #8
00000000000371b4	sub	w12, w12, #0x3
00000000000371b8	add	x13, x8, #0x410
00000000000371bc	ldr	x14, [sp]
00000000000371c0	ldr	x15, [x14, #0x10]
00000000000371c4	add	x16, x15, #0x7
00000000000371c8	lsr	x15, x16, #3
00000000000371cc	cmp	x16, #0x10
00000000000371d0	b.hs	0x371e4
00000000000371d4	mov	w16, #0x1
00000000000371d8	cmp	x14, x13
00000000000371dc	b.hi	0x37244
00000000000371e0	b	0x37254
00000000000371e4	cmp	x16, #0x47
00000000000371e8	b.hi	0x37200
00000000000371ec	add	w16, w15, #0x1
00000000000371f0	and	w16, w16, #0xfffffffe
00000000000371f4	cmp	x14, x13
00000000000371f8	b.hi	0x37244
00000000000371fc	b	0x37254
0000000000037200	cmp	x16, x23
0000000000037204	b.ls	0x37218
0000000000037208	mov	w16, #0x49
000000000003720c	cmp	x14, x13
0000000000037210	b.hi	0x37244
0000000000037214	b	0x37254
0000000000037218	sub	x16, x15, #0x1
000000000003721c	clz	x17, x16
0000000000037220	sub	w17, w27, w17
0000000000037224	and	w17, w17, #0xff
0000000000037228	sub	w0, w17, #0x2
000000000003722c	lsr	x16, x16, x0
0000000000037230	and	w16, w16, #0x3
0000000000037234	bfi	w16, w17, #2, #8
0000000000037238	sub	w16, w16, #0x3
000000000003723c	cmp	x14, x13
0000000000037240	b.ls	0x37254
0000000000037244	sub	x14, x14, #0x18
0000000000037248	and	w17, w12, #0xff
000000000003724c	cmp	w17, w16, uxtb
0000000000037250	b.eq	0x371c0
0000000000037254	cmp	x15, x11
0000000000037258	csinc	x12, x11, x15, hs
000000000003725c	cmp	x12, x11
0000000000037260	b.hi	0x372c0
0000000000037264	sub	x13, x11, x12
0000000000037268	add	x13, x13, #0x1
000000000003726c	cmp	x13, #0x4
0000000000037270	b.lo	0x372a4
0000000000037274	and	x14, x13, #0xfffffffffffffffc
0000000000037278	dup.2d	v0, x10
000000000003727c	add	x15, x8, x12, lsl #3
0000000000037280	add	x15, x15, #0x18
0000000000037284	mov	x16, x14
0000000000037288	stp	q0, q0, [x15, #-0x10]
000000000003728c	add	x15, x15, #0x20
0000000000037290	subs	x16, x16, #0x4
0000000000037294	b.ne	0x37288
0000000000037298	cmp	x13, x14
000000000003729c	b.eq	0x372c0
00000000000372a0	add	x12, x12, x14
00000000000372a4	sub	x11, x11, x12
00000000000372a8	add	x11, x11, #0x1
00000000000372ac	add	x12, x8, x12, lsl #3
00000000000372b0	add	x12, x12, #0x8
00000000000372b4	str	x10, [x12], #0x8
00000000000372b8	subs	x11, x11, #0x1
00000000000372bc	b.ne	0x372b4
00000000000372c0	ldr	x10, [x9, #0xb08]
00000000000372c4	stp	xzr, x10, [x22, #0x30]
00000000000372c8	cbz	x10, 0x372dc
00000000000372cc	str	x22, [x10, #0x30]
00000000000372d0	str	x22, [x9, #0xb08]
00000000000372d4	ldr	x10, [x9, #0xb10]
00000000000372d8	b	0x37454
00000000000372dc	str	x22, [x9, #0xb00]
00000000000372e0	str	x22, [x9, #0xb08]
00000000000372e4	ldr	x10, [x9, #0xb10]
00000000000372e8	cmp	x10, #0x400
00000000000372ec	b.hi	0x37454
00000000000372f0	add	x11, x10, #0x7
00000000000372f4	lsr	x11, x11, #3
00000000000372f8	add	x12, x8, x11, lsl #3
00000000000372fc	ldr	x12, [x12, #0x8]
0000000000037300	cmp	x12, x22
0000000000037304	b.eq	0x37454
0000000000037308	cmp	x10, #0x9
000000000003730c	b.hs	0x37318
0000000000037310	mov	x9, #0x0
0000000000037314	b	0x373f8
0000000000037318	sub	x12, x11, #0x1
000000000003731c	clz	x13, x12
0000000000037320	sub	w13, w27, w13
0000000000037324	and	w13, w13, #0xff
0000000000037328	sub	w14, w13, #0x2
000000000003732c	lsr	x12, x12, x14
0000000000037330	and	w12, w12, #0x3
0000000000037334	bfi	w12, w13, #2, #8
0000000000037338	sub	w12, w12, #0x3
000000000003733c	add	w13, w11, #0x1
0000000000037340	and	w13, w13, #0xfffffffe
0000000000037344	cmp	x10, #0x40
0000000000037348	csel	w12, w12, w13, hi
000000000003734c	add	x13, x8, #0x410
0000000000037350	add	x9, x9, #0xae8
0000000000037354	ldr	x14, [x9, #0x10]
0000000000037358	add	x15, x14, #0x7
000000000003735c	lsr	x14, x15, #3
0000000000037360	cmp	x15, #0x10
0000000000037364	b.hs	0x37378
0000000000037368	mov	w15, #0x1
000000000003736c	cmp	x9, x13
0000000000037370	b.hi	0x373d8
0000000000037374	b	0x373e8
0000000000037378	cmp	x15, #0x47
000000000003737c	b.hi	0x37394
0000000000037380	add	w15, w14, #0x1
0000000000037384	and	w15, w15, #0xfffffffe
0000000000037388	cmp	x9, x13
000000000003738c	b.hi	0x373d8
0000000000037390	b	0x373e8
0000000000037394	cmp	x15, x23
0000000000037398	b.ls	0x373ac
000000000003739c	mov	w15, #0x49
00000000000373a0	cmp	x9, x13
00000000000373a4	b.hi	0x373d8
00000000000373a8	b	0x373e8
00000000000373ac	sub	x15, x14, #0x1
00000000000373b0	clz	x16, x15
00000000000373b4	sub	w16, w27, w16
00000000000373b8	and	w16, w16, #0xff
00000000000373bc	sub	w17, w16, #0x2
00000000000373c0	lsr	x15, x15, x17
00000000000373c4	and	w15, w15, #0x3
00000000000373c8	bfi	w15, w16, #2, #8
00000000000373cc	sub	w15, w15, #0x3
00000000000373d0	cmp	x9, x13
00000000000373d4	b.ls	0x373e8
00000000000373d8	sub	x9, x9, #0x18
00000000000373dc	and	w16, w12, #0xff
00000000000373e0	cmp	w16, w15, uxtb
00000000000373e4	b.eq	0x37354
00000000000373e8	cmp	x14, x11
00000000000373ec	csinc	x9, x11, x14, hs
00000000000373f0	cmp	x9, x11
00000000000373f4	b.hi	0x37454
00000000000373f8	sub	x12, x11, x9
00000000000373fc	add	x12, x12, #0x1
0000000000037400	cmp	x12, #0x4
0000000000037404	b.lo	0x37438
0000000000037408	and	x13, x12, #0xfffffffffffffffc
000000000003740c	dup.2d	v0, x22
0000000000037410	add	x14, x8, x9, lsl #3
0000000000037414	add	x14, x14, #0x18
0000000000037418	mov	x15, x13
000000000003741c	stp	q0, q0, [x14, #-0x10]
0000000000037420	add	x14, x14, #0x20
0000000000037424	subs	x15, x15, #0x4
0000000000037428	b.ne	0x3741c
000000000003742c	cmp	x12, x13
0000000000037430	b.eq	0x37454
0000000000037434	add	x9, x9, x13
0000000000037438	sub	x11, x11, x9
000000000003743c	add	x11, x11, #0x1
0000000000037440	add	x8, x8, x9, lsl #3
0000000000037444	add	x8, x8, #0x8
0000000000037448	str	x22, [x8], #0x8
000000000003744c	subs	x11, x11, #0x1
0000000000037450	b.ne	0x37448
0000000000037454	add	x8, x23, #0x9
0000000000037458	cmp	x10, x8
000000000003745c	cset	w8, eq
0000000000037460	ldrb	w9, [x22, #0x6]
0000000000037464	and	w9, w9, #0xfe
0000000000037468	orr	w8, w9, w8
000000000003746c	strb	w8, [x22, #0x6]
0000000000037470	ldr	x8, [x22, #0x20]
0000000000037474	cmp	x8, #0x4
0000000000037478	b.lo	0x374f4
000000000003747c	ldr	x8, [x25]
0000000000037480	b	0x37490
0000000000037484	clrex
0000000000037488	mov	w10, #0x0
000000000003748c	cbnz	w10, 0x374b4
0000000000037490	mov	x9, x8
0000000000037494	ldaxr	x8, [x25]
0000000000037498	cmp	x8, x9
000000000003749c	b.ne	0x37484
00000000000374a0	and	x10, x9, #0x3
00000000000374a4	stlxr	w11, x10, [x25]
00000000000374a8	cbnz	w11, 0x37488
00000000000374ac	mov	w10, #0x1
00000000000374b0	cbz	w10, 0x37490
00000000000374b4	ands	x8, x9, #0xfffffffffffffffc
00000000000374b8	b.eq	0x374f4
00000000000374bc	mov	w9, #0x0
00000000000374c0	ldrh	w11, [x22, #0x2]
00000000000374c4	mov	x12, x8
00000000000374c8	mov	x10, x12
00000000000374cc	add	w9, w9, #0x1
00000000000374d0	ldr	x12, [x12]
00000000000374d4	cmp	w9, w11
00000000000374d8	ccmp	x12, #0x0, #0x4, ls
00000000000374dc	b.ne	0x374c8
00000000000374e0	cmp	w9, w11
00000000000374e4	b.ls	0x3751c
00000000000374e8	mov	w0, #0xe
00000000000374ec	mov	x1, x21
00000000000374f0	bl	__mi_error_message
00000000000374f4	ldr	x8, [x22, #0x18]
00000000000374f8	cbz	x8, 0x36fe8
00000000000374fc	ldr	x9, [x22, #0x8]
0000000000037500	cbnz	x9, 0x36fe8
0000000000037504	str	x8, [x22, #0x8]
0000000000037508	str	xzr, [x22, #0x18]
000000000003750c	ldrb	w8, [x22, #0x7]
0000000000037510	and	w8, w8, #0xfe
0000000000037514	strb	w8, [x22, #0x7]
0000000000037518	b	0x36fe8
000000000003751c	ldr	x11, [x22, #0x18]
0000000000037520	str	x11, [x10]
0000000000037524	str	x8, [x22, #0x18]
0000000000037528	ldr	w10, [x22, #0x10]
000000000003752c	sub	w9, w10, w9
0000000000037530	str	w9, [x22, #0x10]
0000000000037534	cbnz	x8, 0x374fc
0000000000037538	b	0x36fe8
000000000003753c	mov	x25, #0x0
0000000000037540	ldr	x8, [sp, #0x8]
0000000000037544	mov	w9, #0x18
0000000000037548	madd	x22, x28, x9, x8
000000000003754c	mov	w26, #0x4a
0000000000037550	b	0x37570
0000000000037554	and	w9, w9, #0x1
0000000000037558	strb	w9, [x8, #0x7]
000000000003755c	add	x28, x28, #0x1
0000000000037560	ldr	x8, [x20, #0xbd8]
0000000000037564	add	x22, x22, #0x18
0000000000037568	cmp	x28, x8
000000000003756c	b.hi	0x36fb8
0000000000037570	ldr	x8, [x22]
0000000000037574	cbz	x8, 0x3755c
0000000000037578	ldrb	w9, [x8, #0x7]
000000000003757c	subs	w10, w9, #0x2
0000000000037580	b.lo	0x3755c
0000000000037584	ldr	w11, [x8, #0x10]
0000000000037588	cbnz	w11, 0x37554
000000000003758c	strb	w10, [x8, #0x7]
0000000000037590	cmp	w10, #0x1
0000000000037594	b.hi	0x375ac
0000000000037598	ldr	x0, [x22]
000000000003759c	mov	x1, x22
00000000000375a0	mov	w2, #0x0
00000000000375a4	bl	__mi_page_free
00000000000375a8	b	0x3755c
00000000000375ac	cmp	x28, x26
00000000000375b0	csel	x26, x28, x26, lo
00000000000375b4	cmp	x28, x25
00000000000375b8	csel	x25, x28, x25, hi
00000000000375bc	b	0x3755c
00000000000375c0	and	x11, x22, #0xffffffffffc00000
00000000000375c4	ldr	w10, [x22, #0x14]
00000000000375c8	ldr	w14, [x11, #0x70]
00000000000375cc	cmp	w14, #0x3
00000000000375d0	b.ne	0x375e8
00000000000375d4	ldr	x13, [x11, #0x48]
00000000000375d8	ldrb	w15, [x22]
00000000000375dc	cbz	x15, 0x375fc
00000000000375e0	mov	x12, x13
00000000000375e4	b	0x37634
00000000000375e8	ldr	x12, [x11, #0x60]
00000000000375ec	mov	w13, #0x1
00000000000375f0	lsl	x13, x13, x12
00000000000375f4	ldrb	w15, [x22]
00000000000375f8	cbnz	x15, 0x375e0
00000000000375fc	ldr	x16, [x11, #0x50]
0000000000037600	sub	x12, x13, x16
0000000000037604	cmp	w14, #0x1
0000000000037608	b.hi	0x37634
000000000003760c	cbz	w10, 0x37634
0000000000037610	madd	x11, x13, x15, x11
0000000000037614	add	x11, x11, x16
0000000000037618	udiv	x13, x11, x10
000000000003761c	neg	x11, x11
0000000000037620	madd	x11, x13, x10, x11
0000000000037624	add	x11, x10, x11
0000000000037628	cmp	x11, x10
000000000003762c	csel	x11, x11, xzr, lo
0000000000037630	sub	x12, x12, x11
0000000000037634	ubfx	x11, x10, #26, #6
0000000000037638	cmp	w11, #0x0
000000000003763c	csel	x1, x10, x12, eq
0000000000037640	sub	x8, x9, x8
0000000000037644	cmp	x1, #0xfff
0000000000037648	b.ls	0x37654
000000000003764c	mov	w9, #0x1
0000000000037650	b	0x37660
0000000000037654	and	w9, w1, #0xffff
0000000000037658	mov	w10, #0x1000
000000000003765c	udiv	w9, w10, w9
0000000000037660	cmp	x8, x9
0000000000037664	csel	x19, x9, x8, hi
0000000000037668	mov	x0, x22
000000000003766c	mov	x2, x19
0000000000037670	bl	_mi_page_free_list_extend
0000000000037674	ldrh	w8, [x22, #0x2]
0000000000037678	add	w8, w8, w19
000000000003767c	strh	w8, [x22, #0x2]
0000000000037680	ldrb	w8, [x22, #0x1]
0000000000037684	tbnz	w8, #0x3, 0x37694
0000000000037688	ldrb	w8, [x22, #0x7]
000000000003768c	and	w8, w8, #0xfe
0000000000037690	strb	w8, [x22, #0x7]
0000000000037694	ldrb	w8, [x22, #0x7]
0000000000037698	and	w8, w8, #0x1
000000000003769c	strb	w8, [x22, #0x7]
00000000000376a0	mov	x0, x22
00000000000376a4	ldp	x29, x30, [sp, #0x60]
00000000000376a8	ldp	x20, x19, [sp, #0x50]
00000000000376ac	ldp	x22, x21, [sp, #0x40]
00000000000376b0	ldp	x24, x23, [sp, #0x30]
00000000000376b4	ldp	x26, x25, [sp, #0x20]
00000000000376b8	ldp	x28, x27, [sp, #0x10]
00000000000376bc	add	sp, sp, #0x70
00000000000376c0	ret
00000000000376c4	mov	x22, x0
00000000000376c8	b	0x376a0
_mi_page_free_list_extend:
00000000000376cc	and	x10, x0, #0xffffffffffc00000
00000000000376d0	ldr	w9, [x10, #0x70]
00000000000376d4	cmp	w9, #0x3
00000000000376d8	b.ne	0x376f0
00000000000376dc	ldr	x8, [x10, #0x48]
00000000000376e0	ldrb	w11, [x0]
00000000000376e4	madd	x8, x8, x11, x10
00000000000376e8	cbnz	x11, 0x3773c
00000000000376ec	b	0x37708
00000000000376f0	ldr	x8, [x10, #0x60]
00000000000376f4	mov	w11, #0x1
00000000000376f8	lsl	x8, x11, x8
00000000000376fc	ldrb	w11, [x0]
0000000000037700	madd	x8, x8, x11, x10
0000000000037704	cbnz	x11, 0x3773c
0000000000037708	ldr	w11, [x0, #0x14]
000000000003770c	ldr	x10, [x10, #0x50]
0000000000037710	add	x8, x8, x10
0000000000037714	cmp	w9, #0x1
0000000000037718	ccmp	w11, #0x0, #0x4, ls
000000000003771c	b.eq	0x3773c
0000000000037720	udiv	x9, x8, x11
0000000000037724	neg	x10, x8
0000000000037728	madd	x9, x9, x11, x10
000000000003772c	add	x9, x11, x9
0000000000037730	add	x10, x8, x9
0000000000037734	cmp	x9, x11
0000000000037738	csel	x8, x10, x8, lo
000000000003773c	ldrh	w12, [x0, #0x2]
0000000000037740	mul	x11, x12, x1
0000000000037744	add	x9, x8, x11
0000000000037748	add	x10, x2, x12
000000000003774c	sub	x10, x10, #0x1
0000000000037750	mul	x13, x10, x1
0000000000037754	add	x10, x8, x13
0000000000037758	cmp	x11, x13
000000000003775c	b.gt	0x37784
0000000000037760	mov	x11, #0x0
0000000000037764	add	x12, x12, #0x1
0000000000037768	madd	x8, x1, x12, x8
000000000003776c	add	x12, x8, x11
0000000000037770	str	x12, [x9, x11]
0000000000037774	add	x11, x11, x1
0000000000037778	add	x12, x9, x11
000000000003777c	cmp	x12, x10
0000000000037780	b.ls	0x3776c
0000000000037784	ldr	x8, [x0, #0x8]
0000000000037788	str	x8, [x10]
000000000003778c	str	x9, [x0, #0x8]
0000000000037790	ret
_mi_segment_reclaim_or_alloc:
0000000000037794	sub	sp, sp, #0xb0
0000000000037798	stp	x28, x27, [sp, #0x50]
000000000003779c	stp	x26, x25, [sp, #0x60]
00000000000377a0	stp	x24, x23, [sp, #0x70]
00000000000377a4	stp	x22, x21, [sp, #0x80]
00000000000377a8	stp	x20, x19, [sp, #0x90]
00000000000377ac	stp	x29, x30, [sp, #0xa0]
00000000000377b0	add	x29, sp, #0xa0
00000000000377b4	mov	x20, x5
00000000000377b8	mov	x22, x4
00000000000377bc	mov	x23, x3
00000000000377c0	mov	x24, x2
00000000000377c4	ldr	x25, [x4, #0x68]
00000000000377c8	cbz	x25, 0x37830
00000000000377cc	ldr	x8, [x22, #0x58]
00000000000377d0	sub	x8, x8, #0x1
00000000000377d4	str	x8, [x22, #0x58]
00000000000377d8	ldr	x8, [x25, #0x18]
00000000000377dc	str	x8, [x22, #0x68]
00000000000377e0	str	xzr, [x25, #0x18]
00000000000377e4	ldr	x8, [x22, #0x70]
00000000000377e8	add	x9, x8, #0x1a0
00000000000377ec	adr	x10, #0x4b654
00000000000377f0	nop
00000000000377f4	cmp	x9, x10
00000000000377f8	adr	x10, #0x4b888
00000000000377fc	nop
0000000000037800	ccmp	x9, x10, #0x2, hs
0000000000037804	b.lo	0x37ba0
0000000000037808	ldp	x10, x9, [x8, #0x1b0]
000000000003780c	sub	x9, x9, #0x1
0000000000037810	str	x9, [x8, #0x1b8]
0000000000037814	cmp	x9, x10
0000000000037818	b.le	0x37820
000000000003781c	str	x9, [x8, #0x1b0]
0000000000037820	ldr	x9, [x8, #0x1a8]
0000000000037824	add	x9, x9, #0x1
0000000000037828	str	x9, [x8, #0x1a8]
000000000003782c	b	0x37c0c
0000000000037830	str	x0, [sp, #0x28]
0000000000037834	str	x1, [sp, #0x38]
0000000000037838	mov	w8, #0x7
000000000003783c	adrp	x13, 75 ; 0x82000
0000000000037840	strb	wzr, [sp, #0x4f]
0000000000037844	adrp	x9, 75 ; 0x82000
0000000000037848	adr	x28, #0x4b1f8
000000000003784c	nop
0000000000037850	adr	x26, #0x4b170
0000000000037854	nop
0000000000037858	adr	x19, #0x4b1a8
000000000003785c	nop
0000000000037860	adr	x15, #0x4b220
0000000000037864	nop
0000000000037868	adr	x27, #0x4b118
000000000003786c	nop
0000000000037870	mov	x14, x8
0000000000037874	ldr	x8, [x13, #0x9c0]
0000000000037878	lsr	x8, x8, #22
000000000003787c	cbnz	x8, 0x37958
0000000000037880	ldr	x8, [x9, #0xa40]
0000000000037884	cbz	x8, 0x37b8c
0000000000037888	ldaxr	x8, [x28]
000000000003788c	stlxr	w9, xzr, [x28]
0000000000037890	cbnz	w9, 0x37888
0000000000037894	cbz	x8, 0x37b8c
0000000000037898	ldr	x10, [x13, #0x9c0]
000000000003789c	lsr	x9, x10, #22
00000000000378a0	cbnz	x9, 0x378d4
00000000000378a4	nop
00000000000378a8	ldr	x9, #0x4b1d8
00000000000378ac	add	w11, w10, #0x1
00000000000378b0	and	x11, x11, #0x3fffff
00000000000378b4	orr	x11, x11, x8
00000000000378b8	ldaxr	x12, [x26]
00000000000378bc	cmp	x12, x10
00000000000378c0	b.ne	0x378d0
00000000000378c4	stlxr	w12, x11, [x26]
00000000000378c8	cbnz	w12, 0x378b8
00000000000378cc	b	0x37938
00000000000378d0	clrex
00000000000378d4	mov	x9, x8
00000000000378d8	mov	x10, x9
00000000000378dc	ldr	x9, [x9, #0x10]
00000000000378e0	cbnz	x9, 0x378d8
00000000000378e4	ldr	x12, [x13, #0x9c0]
00000000000378e8	b	0x378fc
00000000000378ec	clrex
00000000000378f0	mov	w13, #0x0
00000000000378f4	mov	x12, x11
00000000000378f8	cbnz	w13, 0x37938
00000000000378fc	ldr	x9, [x26, #0xc0]
0000000000037900	and	x11, x12, #0xffffffffffc00000
0000000000037904	add	x13, x10, #0x10
0000000000037908	stlr	x11, [x13]
000000000003790c	ldxr	x11, [x26]
0000000000037910	cmp	x11, x12
0000000000037914	b.ne	0x378ec
0000000000037918	add	w12, w12, #0x1
000000000003791c	and	x12, x12, #0x3fffff
0000000000037920	orr	x12, x12, x8
0000000000037924	stlxr	w13, x12, [x26]
0000000000037928	cbnz	w13, 0x378f0
000000000003792c	mov	w13, #0x1
0000000000037930	mov	x12, x11
0000000000037934	cbz	w13, 0x378fc
0000000000037938	ldxr	x8, [x19]
000000000003793c	add	x8, x8, x9
0000000000037940	stxr	w10, x8, [x19]
0000000000037944	cbnz	w10, 0x37938
0000000000037948	ldxr	x8, [x15]
000000000003794c	sub	x8, x8, x9
0000000000037950	stxr	w10, x8, [x15]
0000000000037954	cbnz	w10, 0x37948
0000000000037958	str	w14, [sp, #0x34]
000000000003795c	ldxr	x8, [x27]
0000000000037960	add	x8, x8, #0x1
0000000000037964	stxr	w9, x8, [x27]
0000000000037968	cbnz	w9, 0x3795c
000000000003796c	ldar	x9, [x26]
0000000000037970	b	0x37984
0000000000037974	clrex
0000000000037978	mov	w10, #0x0
000000000003797c	mov	x9, x8
0000000000037980	cbnz	w10, 0x379bc
0000000000037984	ands	x25, x9, #0xffffffffffc00000
0000000000037988	b.eq	0x37b7c
000000000003798c	ldr	x10, [x25, #0x10]
0000000000037990	ldaxr	x8, [x26]
0000000000037994	cmp	x8, x9
0000000000037998	b.ne	0x37974
000000000003799c	add	w9, w9, #0x1
00000000000379a0	and	x9, x9, #0x3fffff
00000000000379a4	orr	x9, x10, x9
00000000000379a8	stlxr	w10, x9, [x26]
00000000000379ac	cbnz	w10, 0x37978
00000000000379b0	mov	w10, #0x1
00000000000379b4	mov	x9, x8
00000000000379b8	cbz	w10, 0x37984
00000000000379bc	ldxr	x8, [x27]
00000000000379c0	sub	x8, x8, #0x1
00000000000379c4	stxr	w9, x8, [x27]
00000000000379c8	cbnz	w9, 0x379bc
00000000000379cc	add	x8, x25, #0x10
00000000000379d0	stlr	xzr, [x8]
00000000000379d4	ldxr	x8, [x19]
00000000000379d8	sub	x8, x8, #0x1
00000000000379dc	stxr	w9, x8, [x19]
00000000000379e0	cbnz	w9, 0x379d4
00000000000379e4	ldr	x8, [x25, #0x30]
00000000000379e8	add	x8, x8, #0x1
00000000000379ec	str	x8, [x25, #0x30]
00000000000379f0	ldr	x8, [x25, #0x40]
00000000000379f4	cbz	x8, 0x37ae4
00000000000379f8	str	w24, [sp, #0xc]
00000000000379fc	stp	x23, x22, [sp, #0x10]
0000000000037a00	str	x20, [sp, #0x20]
0000000000037a04	mov	x22, #0x0
0000000000037a08	mov	w9, #0x0
0000000000037a0c	mov	x20, #0x0
0000000000037a10	str	xzr, [sp, #0x40]
0000000000037a14	mov	x21, #0x0
0000000000037a18	b	0x37a40
0000000000037a1c	ldr	x8, [sp, #0x40]
0000000000037a20	add	x8, x8, #0x1
0000000000037a24	str	x8, [sp, #0x40]
0000000000037a28	mov	w9, #0x1
0000000000037a2c	add	x20, x20, #0x1
0000000000037a30	ldr	x8, [x25, #0x40]
0000000000037a34	add	x22, x22, #0x40
0000000000037a38	cmp	x20, x8
0000000000037a3c	b.hs	0x37ab0
0000000000037a40	add	x24, x25, x22
0000000000037a44	ldrb	w8, [x24, #0x79]
0000000000037a48	tbz	w8, #0x0, 0x37a28
0000000000037a4c	mov	x23, x9
0000000000037a50	add	x0, x24, #0x78
0000000000037a54	add	x21, x21, #0x1
0000000000037a58	mov	w1, #0x0
0000000000037a5c	bl	__mi_page_free_collect
0000000000037a60	ldr	w8, [x24, #0x88]
0000000000037a64	cbz	w8, 0x37a1c
0000000000037a68	add	x9, x25, x22
0000000000037a6c	ldr	w10, [x9, #0x8c]
0000000000037a70	ldr	x11, [sp, #0x38]
0000000000037a74	cmp	x10, x11
0000000000037a78	b.ne	0x37a98
0000000000037a7c	ldrh	w9, [x9, #0x7c]
0000000000037a80	cmp	w8, w9
0000000000037a84	b.lo	0x37a28
0000000000037a88	add	x8, x25, x22
0000000000037a8c	ldr	x8, [x8, #0x98]
0000000000037a90	cmp	x8, #0x4
0000000000037a94	b.hs	0x37a28
0000000000037a98	mov	x9, x23
0000000000037a9c	add	x20, x20, #0x1
0000000000037aa0	ldr	x8, [x25, #0x40]
0000000000037aa4	add	x22, x22, #0x40
0000000000037aa8	cmp	x20, x8
0000000000037aac	b.lo	0x37a40
0000000000037ab0	ldr	x8, [sp, #0x40]
0000000000037ab4	cmp	x21, x8
0000000000037ab8	ldp	x22, x20, [sp, #0x18]
0000000000037abc	ldr	x23, [sp, #0x10]
0000000000037ac0	ldr	w24, [sp, #0xc]
0000000000037ac4	b.eq	0x37ae4
0000000000037ac8	tbz	w9, #0x0, 0x37ad8
0000000000037acc	ldr	w8, [x25, #0x70]
0000000000037ad0	cmp	w8, w24
0000000000037ad4	b.eq	0x37c4c
0000000000037ad8	ldr	x8, [x25, #0x30]
0000000000037adc	cmp	x8, #0x2
0000000000037ae0	b.ls	0x37b1c
0000000000037ae4	mov	x0, x25
0000000000037ae8	ldr	x1, [sp, #0x28]
0000000000037aec	mov	x2, #0x0
0000000000037af0	mov	x3, #0x0
0000000000037af4	mov	x4, x22
0000000000037af8	bl	_mi_segment_reclaim
0000000000037afc	adr	x15, #0x4af84
0000000000037b00	nop
0000000000037b04	ldr	w10, [sp, #0x34]
0000000000037b08	sub	w8, w10, #0x1
0000000000037b0c	adrp	x13, 75 ; 0x82000
0000000000037b10	adrp	x9, 75 ; 0x82000
0000000000037b14	cbnz	w10, 0x37870
0000000000037b18	b	0x37b8c
0000000000037b1c	nop
0000000000037b20	ldr	x9, #0x4af20
0000000000037b24	b	0x37b38
0000000000037b28	clrex
0000000000037b2c	mov	w10, #0x0
0000000000037b30	mov	x9, x8
0000000000037b34	cbnz	w10, 0x37b60
0000000000037b38	add	x8, x25, #0x10
0000000000037b3c	stlr	x9, [x8]
0000000000037b40	ldxr	x8, [x28]
0000000000037b44	cmp	x8, x9
0000000000037b48	b.ne	0x37b28
0000000000037b4c	stlxr	w9, x25, [x28]
0000000000037b50	cbnz	w9, 0x37b2c
0000000000037b54	mov	w10, #0x1
0000000000037b58	mov	x9, x8
0000000000037b5c	cbz	w10, 0x37b38
0000000000037b60	adr	x15, #0x4af20
0000000000037b64	nop
0000000000037b68	ldxr	x8, [x15]
0000000000037b6c	add	x8, x8, #0x1
0000000000037b70	stxr	w9, x8, [x15]
0000000000037b74	cbnz	w9, 0x37b68
0000000000037b78	b	0x37b04
0000000000037b7c	ldxr	x8, [x27]
0000000000037b80	sub	x8, x8, #0x1
0000000000037b84	stxr	w9, x8, [x27]
0000000000037b88	cbnz	w9, 0x37b7c
0000000000037b8c	mov	x25, #0x0
0000000000037b90	ldrb	w8, [sp, #0x4f]
0000000000037b94	cbz	w8, 0x37c70
0000000000037b98	mov	x25, #0x0
0000000000037b9c	b	0x37c28
0000000000037ba0	add	x10, x8, #0x1b8
0000000000037ba4	ldxr	x9, [x10]
0000000000037ba8	sub	x9, x9, #0x1
0000000000037bac	stxr	w11, x9, [x10]
0000000000037bb0	cbnz	w11, 0x37ba4
0000000000037bb4	add	x10, x8, #0x1b0
0000000000037bb8	ldr	x12, [x8, #0x1b0]
0000000000037bbc	b	0x37bd0
0000000000037bc0	clrex
0000000000037bc4	mov	w13, #0x0
0000000000037bc8	mov	x12, x11
0000000000037bcc	cbnz	w13, 0x37bf8
0000000000037bd0	cmp	x12, x9
0000000000037bd4	b.ge	0x37bf8
0000000000037bd8	ldxr	x11, [x10]
0000000000037bdc	cmp	x11, x12
0000000000037be0	b.ne	0x37bc0
0000000000037be4	stlxr	w12, x9, [x10]
0000000000037be8	cbnz	w12, 0x37bc4
0000000000037bec	mov	w13, #0x1
0000000000037bf0	mov	x12, x11
0000000000037bf4	cbz	w13, 0x37bd0
0000000000037bf8	add	x8, x8, #0x1a8
0000000000037bfc	ldxr	x9, [x8]
0000000000037c00	add	x9, x9, #0x1
0000000000037c04	stxr	w10, x9, [x8]
0000000000037c08	cbnz	w10, 0x37bfc
0000000000037c0c	mov	x0, x25
0000000000037c10	mov	x1, #0x0
0000000000037c14	mov	x2, x24
0000000000037c18	mov	x3, x23
0000000000037c1c	mov	x4, x22
0000000000037c20	mov	x5, x20
0000000000037c24	bl	_mi_segment_init
0000000000037c28	mov	x0, x25
0000000000037c2c	ldp	x29, x30, [sp, #0xa0]
0000000000037c30	ldp	x20, x19, [sp, #0x90]
0000000000037c34	ldp	x22, x21, [sp, #0x80]
0000000000037c38	ldp	x24, x23, [sp, #0x70]
0000000000037c3c	ldp	x26, x25, [sp, #0x60]
0000000000037c40	ldp	x28, x27, [sp, #0x50]
0000000000037c44	add	sp, sp, #0xb0
0000000000037c48	ret
0000000000037c4c	add	x3, sp, #0x4f
0000000000037c50	mov	x0, x25
0000000000037c54	ldr	x1, [sp, #0x28]
0000000000037c58	ldr	x2, [sp, #0x38]
0000000000037c5c	mov	x4, x22
0000000000037c60	bl	_mi_segment_reclaim
0000000000037c64	mov	x25, x0
0000000000037c68	ldrb	w8, [sp, #0x4f]
0000000000037c6c	cbnz	w8, 0x37b98
0000000000037c70	cbnz	x25, 0x37c28
0000000000037c74	mov	x0, #0x0
0000000000037c78	mov	x1, #0x0
0000000000037c7c	mov	x2, x24
0000000000037c80	mov	x3, x23
0000000000037c84	mov	x4, x22
0000000000037c88	mov	x5, x20
0000000000037c8c	bl	_mi_segment_init
0000000000037c90	mov	x25, x0
0000000000037c94	b	0x37c28
_mi_segment_find_free:
0000000000037c98	sub	sp, sp, #0x50
0000000000037c9c	stp	x24, x23, [sp, #0x10]
0000000000037ca0	stp	x22, x21, [sp, #0x20]
0000000000037ca4	stp	x20, x19, [sp, #0x30]
0000000000037ca8	stp	x29, x30, [sp, #0x40]
0000000000037cac	add	x29, sp, #0x40
0000000000037cb0	ldr	x8, [x0, #0x40]
0000000000037cb4	cbz	x8, 0x37ea4
0000000000037cb8	mov	x20, x1
0000000000037cbc	mov	x21, x0
0000000000037cc0	mov	x22, #0x0
0000000000037cc4	add	x19, x0, #0x78
0000000000037cc8	mov	w23, #0x1
0000000000037ccc	b	0x37d08
0000000000037cd0	ldrb	w8, [x19, #0x1]
0000000000037cd4	orr	w8, w8, #0x8
0000000000037cd8	strb	w8, [x19, #0x1]
0000000000037cdc	tbnz	w0, #0x0, 0x37eac
0000000000037ce0	and	w8, w8, #0xfe
0000000000037ce4	strb	w8, [x19, #0x1]
0000000000037ce8	ldr	x8, [x21, #0x38]
0000000000037cec	sub	x8, x8, #0x1
0000000000037cf0	str	x8, [x21, #0x38]
0000000000037cf4	add	x22, x22, #0x1
0000000000037cf8	ldr	x8, [x21, #0x40]
0000000000037cfc	add	x19, x19, #0x40
0000000000037d00	cmp	x22, x8
0000000000037d04	b.hs	0x37ea4
0000000000037d08	ldrb	w9, [x19, #0x1]
0000000000037d0c	tbnz	w9, #0x0, 0x37cf4
0000000000037d10	ldp	x8, x10, [x19, #0x30]
0000000000037d14	cbz	x8, 0x37d20
0000000000037d18	cbnz	x10, 0x37d24
0000000000037d1c	b	0x37d30
0000000000037d20	cbz	x10, 0x37e88
0000000000037d24	str	x8, [x10, #0x30]
0000000000037d28	ldr	x8, [x19, #0x30]
0000000000037d2c	cbz	x8, 0x37d34
0000000000037d30	str	x10, [x8, #0x38]
0000000000037d34	ldr	x9, [x20, #0x28]
0000000000037d38	cmp	x19, x9
0000000000037d3c	b.eq	0x37d7c
0000000000037d40	ldr	x9, [x20, #0x20]
0000000000037d44	cmp	x19, x9
0000000000037d48	b.eq	0x37d90
0000000000037d4c	str	wzr, [x19, #0x10]
0000000000037d50	stp	xzr, xzr, [x19, #0x30]
0000000000037d54	ldrb	w9, [x19, #0x1]
0000000000037d58	tbnz	w9, #0x2, 0x37dec
0000000000037d5c	ldr	w8, [x21, #0x70]
0000000000037d60	cmp	w8, #0x3
0000000000037d64	b.ne	0x37d98
0000000000037d68	ldr	x1, [x21, #0x48]
0000000000037d6c	ldrb	w8, [x19]
0000000000037d70	madd	x0, x1, x8, x21
0000000000037d74	cbnz	x8, 0x37db8
0000000000037d78	b	0x37dac
0000000000037d7c	ldr	x9, [x19, #0x38]
0000000000037d80	str	x9, [x20, #0x28]
0000000000037d84	ldr	x9, [x20, #0x20]
0000000000037d88	cmp	x19, x9
0000000000037d8c	b.ne	0x37d4c
0000000000037d90	str	x8, [x20, #0x20]
0000000000037d94	b	0x37d4c
0000000000037d98	ldr	x8, [x21, #0x60]
0000000000037d9c	lsl	x1, x23, x8
0000000000037da0	ldrb	w8, [x19]
0000000000037da4	madd	x0, x1, x8, x21
0000000000037da8	cbnz	x8, 0x37db8
0000000000037dac	ldr	x8, [x21, #0x50]
0000000000037db0	add	x0, x0, x8
0000000000037db4	sub	x1, x1, x8
0000000000037db8	strb	wzr, [sp, #0xe]
0000000000037dbc	add	x4, sp, #0xe
0000000000037dc0	mov	w2, #0x1
0000000000037dc4	mov	w3, #0x0
0000000000037dc8	bl	_mi_os_commitx
0000000000037dcc	cbz	w0, 0x37cf4
0000000000037dd0	ldrb	w9, [sp, #0xe]
0000000000037dd4	ldrb	w8, [x19, #0x1]
0000000000037dd8	cbz	w9, 0x37de4
0000000000037ddc	orr	w8, w8, #0x8
0000000000037de0	strb	w8, [x19, #0x1]
0000000000037de4	orr	w9, w8, #0x4
0000000000037de8	strb	w9, [x19, #0x1]
0000000000037dec	orr	w8, w9, #0x1
0000000000037df0	strb	w8, [x19, #0x1]
0000000000037df4	ldr	x8, [x21, #0x38]
0000000000037df8	add	x8, x8, #0x1
0000000000037dfc	str	x8, [x21, #0x38]
0000000000037e00	ldrb	w8, [x19, #0x1]
0000000000037e04	tbz	w8, #0x1, 0x37eac
0000000000037e08	mvn	w9, w8
0000000000037e0c	tst	w9, #0x6
0000000000037e10	b.ne	0x37eac
0000000000037e14	ldrb	w9, [x21, #0x8]
0000000000037e18	cbnz	w9, 0x37eac
0000000000037e1c	and	w8, w8, #0xfffffffd
0000000000037e20	strb	w8, [x19, #0x1]
0000000000037e24	ldr	w8, [x21, #0x70]
0000000000037e28	cmp	w8, #0x3
0000000000037e2c	b.ne	0x37e44
0000000000037e30	ldr	x1, [x21, #0x48]
0000000000037e34	ldrb	w8, [x19]
0000000000037e38	madd	x0, x1, x8, x21
0000000000037e3c	cbnz	x8, 0x37e64
0000000000037e40	b	0x37e58
0000000000037e44	ldr	x8, [x21, #0x60]
0000000000037e48	lsl	x1, x23, x8
0000000000037e4c	ldrb	w8, [x19]
0000000000037e50	madd	x0, x1, x8, x21
0000000000037e54	cbnz	x8, 0x37e64
0000000000037e58	ldr	x8, [x21, #0x50]
0000000000037e5c	add	x0, x0, x8
0000000000037e60	sub	x1, x1, x8
0000000000037e64	strb	wzr, [sp, #0xf]
0000000000037e68	cbz	x1, 0x37eac
0000000000037e6c	add	x2, sp, #0xf
0000000000037e70	bl	__mi_os_unreset
0000000000037e74	ldrb	w8, [sp, #0xf]
0000000000037e78	cbnz	w8, 0x37cd0
0000000000037e7c	tbnz	w0, #0x0, 0x37eac
0000000000037e80	ldrb	w8, [x19, #0x1]
0000000000037e84	b	0x37ce0
0000000000037e88	ldr	x10, [x20, #0x20]
0000000000037e8c	cmp	x19, x10
0000000000037e90	b.eq	0x37d34
0000000000037e94	ldr	x10, [x20, #0x28]
0000000000037e98	cmp	x19, x10
0000000000037e9c	b.ne	0x37d58
0000000000037ea0	b	0x37d34
0000000000037ea4	mov	x19, #0x0
0000000000037ea8	b	0x37f24
0000000000037eac	ldp	x8, x9, [x21, #0x38]
0000000000037eb0	cmp	x8, x9
0000000000037eb4	b.ne	0x37f24
0000000000037eb8	ldr	w8, [x21, #0x70]
0000000000037ebc	cmp	w8, #0x1
0000000000037ec0	b.hi	0x37f24
0000000000037ec4	cbz	w8, 0x37ed4
0000000000037ec8	cmp	w8, #0x1
0000000000037ecc	b.ne	0x37f24
0000000000037ed0	add	x20, x20, #0x10
0000000000037ed4	mov	x8, x21
0000000000037ed8	ldp	x9, x10, [x8, #0x18]!
0000000000037edc	cbz	x9, 0x37ee8
0000000000037ee0	cbnz	x10, 0x37eec
0000000000037ee4	b	0x37ef8
0000000000037ee8	cbz	x10, 0x37f40
0000000000037eec	str	x9, [x10, #0x18]
0000000000037ef0	ldr	x9, [x8]
0000000000037ef4	cbz	x9, 0x37efc
0000000000037ef8	str	x10, [x9, #0x20]
0000000000037efc	ldr	x10, [x20]
0000000000037f00	cmp	x10, x21
0000000000037f04	b.ne	0x37f0c
0000000000037f08	str	x9, [x20]
0000000000037f0c	ldr	x9, [x20, #0x8]
0000000000037f10	cmp	x9, x21
0000000000037f14	b.ne	0x37f20
0000000000037f18	ldr	x9, [x21, #0x20]
0000000000037f1c	str	x9, [x20, #0x8]
0000000000037f20	stp	xzr, xzr, [x8]
0000000000037f24	mov	x0, x19
0000000000037f28	ldp	x29, x30, [sp, #0x40]
0000000000037f2c	ldp	x20, x19, [sp, #0x30]
0000000000037f30	ldp	x22, x21, [sp, #0x20]
0000000000037f34	ldp	x24, x23, [sp, #0x10]
0000000000037f38	add	sp, sp, #0x50
0000000000037f3c	ret
0000000000037f40	ldr	x10, [x20]
0000000000037f44	cmp	x10, x21
0000000000037f48	b.ne	0x37f24
0000000000037f4c	b	0x37efc
_mi_segment_init:
0000000000037f50	sub	sp, sp, #0xc0
0000000000037f54	stp	x28, x27, [sp, #0x60]
0000000000037f58	stp	x26, x25, [sp, #0x70]
0000000000037f5c	stp	x24, x23, [sp, #0x80]
0000000000037f60	stp	x22, x21, [sp, #0x90]
0000000000037f64	stp	x20, x19, [sp, #0xa0]
0000000000037f68	stp	x29, x30, [sp, #0xb0]
0000000000037f6c	add	x29, sp, #0xb0
0000000000037f70	mov	x26, x5
0000000000037f74	mov	x28, x4
0000000000037f78	mov	x21, x3
0000000000037f7c	mov	x20, x2
0000000000037f80	mov	x23, x0
0000000000037f84	mov	w8, #0x400000
0000000000037f88	lsr	x9, x8, x3
0000000000037f8c	cmp	w2, #0x3
0000000000037f90	csinc	x27, x9, xzr, ne
0000000000037f94	lsl	w9, w27, #6
0000000000037f98	add	w9, w9, #0x187
0000000000037f9c	and	x22, x9, #0x3fffff00
0000000000037fa0	add	x9, x1, x22
0000000000037fa4	mov	w10, #0x3ffff
0000000000037fa8	add	x9, x9, x10
0000000000037fac	and	x9, x9, #0xfffffffffffc0000
0000000000037fb0	cmp	x1, #0x0
0000000000037fb4	csel	x25, x8, x9, eq
0000000000037fb8	cmp	w2, #0x1
0000000000037fbc	b.hi	0x38088
0000000000037fc0	ldr	x19, [x28, #0x38]
0000000000037fc4	mov	w0, #0xd
0000000000037fc8	bl	_mi_option_get
0000000000037fcc	cmp	x19, x0
0000000000037fd0	b.hs	0x38088
0000000000037fd4	mov	w8, #0x0
0000000000037fd8	mov	w24, #0x0
0000000000037fdc	strb	w24, [sp, #0x47]
0000000000037fe0	strb	wzr, [sp, #0x46]
0000000000037fe4	cbnz	x23, 0x380a8
0000000000037fe8	strb	w8, [sp, #0x45]
0000000000037fec	strb	wzr, [sp, #0x46]
0000000000037ff0	strb	wzr, [sp, #0x44]
0000000000037ff4	cbz	x25, 0x38988
0000000000037ff8	nop
0000000000037ffc	ldr	x8, #0x304a4
0000000000038000	add	x9, x25, x8
0000000000038004	sub	x9, x9, #0x1
0000000000038008	sub	x10, x8, #0x1
000000000003800c	udiv	x11, x9, x8
0000000000038010	mul	x11, x11, x8
0000000000038014	neg	x12, x8
0000000000038018	and	x9, x9, x12
000000000003801c	tst	x8, x10
0000000000038020	csel	x23, x11, x9, ne
0000000000038024	mov	w8, #0x3fffff
0000000000038028	add	x8, x23, x8
000000000003802c	lsr	x9, x8, #22
0000000000038030	cmp	x9, #0x10
0000000000038034	b.hi	0x387b0
0000000000038038	str	x8, [sp, #0x10]
000000000003803c	str	x21, [sp, #0x28]
0000000000038040	adrp	x8, 74 ; 0x82000
0000000000038044	ldr	x19, [x8, #0x930]
0000000000038048	str	x9, [sp, #0x38]
000000000003804c	cbz	x19, 0x38ad8
0000000000038050	adrp	x21, 74 ; 0x82000
0000000000038054	cmp	x19, #0x2
0000000000038058	str	x28, [sp, #0x30]
000000000003805c	stp	x23, x25, [sp, #0x18]
0000000000038060	b.hs	0x382ac
0000000000038064	ldrb	w9, [sp, #0x45]
0000000000038068	ldr	x23, [x21, #0x970]
000000000003806c	cbz	x23, 0x38350
0000000000038070	ldr	x8, [x26]
0000000000038074	adr	x19, #0x3a794
0000000000038078	nop
000000000003807c	mov	x25, x23
0000000000038080	cbnz	w9, 0x381e4
0000000000038084	b	0x38270
0000000000038088	mov	w0, #0x3
000000000003808c	bl	_mi_option_get
0000000000038090	cmp	x0, #0x0
0000000000038094	cset	w24, ne
0000000000038098	mov	w8, #0x1
000000000003809c	strb	w24, [sp, #0x47]
00000000000380a0	strb	wzr, [sp, #0x46]
00000000000380a4	cbz	x23, 0x37fe8
00000000000380a8	cmp	w20, #0x1
00000000000380ac	b.hi	0x380ec
00000000000380b0	ldr	w8, [x23, #0x70]
00000000000380b4	cmp	w8, w20
00000000000380b8	b.ne	0x380ec
00000000000380bc	ldr	x8, [x23, #0x48]
00000000000380c0	cmp	x8, x25
00000000000380c4	b.ne	0x380ec
00000000000380c8	add	x8, x23, #0x10
00000000000380cc	stlr	xzr, [x8]
00000000000380d0	movi.16b	v0, #0x0
00000000000380d4	mov	x24, x23
00000000000380d8	str	q0, [x24, #0x18]!
00000000000380dc	stp	q0, q0, [x24, #0x40]
00000000000380e0	stp	q0, q0, [x24, #0x20]
00000000000380e4	str	q0, [x24, #0x10]
00000000000380e8	b	0x38a40
00000000000380ec	ldr	x8, [x23, #0x40]
00000000000380f0	cbz	x8, 0x38228
00000000000380f4	str	w20, [sp, #0x38]
00000000000380f8	mov	x20, x28
00000000000380fc	mov	x28, x22
0000000000038100	mov	x22, x25
0000000000038104	mov	x19, x21
0000000000038108	mov	x25, #0x0
000000000003810c	add	x26, x23, #0x79
0000000000038110	mov	w21, #0x1
0000000000038114	b	0x38134
0000000000038118	ldrb	w8, [x23, #0x8]
000000000003811c	cbz	w8, 0x3815c
0000000000038120	add	x25, x25, #0x1
0000000000038124	ldr	x8, [x23, #0x40]
0000000000038128	add	x26, x26, #0x40
000000000003812c	cmp	x25, x8
0000000000038130	b.hs	0x38214
0000000000038134	ldrb	w8, [x26]
0000000000038138	tbz	w8, #0x1, 0x38120
000000000003813c	tbnz	w24, #0x0, 0x38118
0000000000038140	mov	w0, #0x5
0000000000038144	bl	_mi_option_get
0000000000038148	cbz	x0, 0x38118
000000000003814c	ldrb	w8, [x26]
0000000000038150	and	w8, w8, #0xfffffffd
0000000000038154	strb	w8, [x26]
0000000000038158	b	0x38120
000000000003815c	ldrb	w8, [x26]
0000000000038160	mvn	w9, w8
0000000000038164	tst	w9, #0x6
0000000000038168	b.ne	0x38120
000000000003816c	and	w8, w8, #0xfffffffd
0000000000038170	strb	w8, [x26]
0000000000038174	ldr	w8, [x23, #0x70]
0000000000038178	cmp	w8, #0x3
000000000003817c	b.ne	0x38194
0000000000038180	ldr	x1, [x23, #0x48]
0000000000038184	ldurb	w8, [x26, #-0x1]
0000000000038188	madd	x0, x1, x8, x23
000000000003818c	cbnz	x8, 0x381b4
0000000000038190	b	0x381a8
0000000000038194	ldr	x8, [x23, #0x60]
0000000000038198	lsl	x1, x21, x8
000000000003819c	ldurb	w8, [x26, #-0x1]
00000000000381a0	madd	x0, x1, x8, x23
00000000000381a4	cbnz	x8, 0x381b4
00000000000381a8	ldr	x8, [x23, #0x50]
00000000000381ac	add	x0, x0, x8
00000000000381b0	sub	x1, x1, x8
00000000000381b4	strb	wzr, [sp, #0x50]
00000000000381b8	cbz	x1, 0x38120
00000000000381bc	add	x2, sp, #0x50
00000000000381c0	bl	__mi_os_unreset
00000000000381c4	ldrb	w8, [sp, #0x50]
00000000000381c8	cbz	w8, 0x38120
00000000000381cc	ldrb	w8, [x26]
00000000000381d0	orr	w8, w8, #0x8
00000000000381d4	b	0x38154
00000000000381d8	add	x8, x21, #0x1
00000000000381dc	subs	x25, x25, #0x1
00000000000381e0	b.eq	0x38350
00000000000381e4	cmp	x8, x23
00000000000381e8	csel	x21, x8, xzr, lo
00000000000381ec	add	x24, x19, x21, lsl #6
00000000000381f0	ldr	x8, [x24]
00000000000381f4	cbz	x8, 0x381d8
00000000000381f8	add	x0, x24, #0x10
00000000000381fc	add	x2, sp, #0x48
0000000000038200	ldr	x1, [sp, #0x38]
0000000000038204	bl	__mi_bitmap_try_find_claim_field
0000000000038208	ldr	x14, [sp, #0x38]
000000000003820c	tbz	w0, #0x0, 0x381d8
0000000000038210	b	0x38340
0000000000038214	mov	x21, x19
0000000000038218	mov	x25, x22
000000000003821c	mov	x22, x28
0000000000038220	mov	x28, x20
0000000000038224	ldr	w20, [sp, #0x38]
0000000000038228	cmp	x8, x27
000000000003822c	b.hs	0x389ec
0000000000038230	strb	wzr, [sp, #0x50]
0000000000038234	mov	w19, #0x1
0000000000038238	add	x4, sp, #0x50
000000000003823c	mov	x0, x23
0000000000038240	mov	x1, x22
0000000000038244	mov	w2, #0x1
0000000000038248	mov	w3, #0x0
000000000003824c	bl	_mi_os_commitx
0000000000038250	ldrb	w8, [sp, #0x50]
0000000000038254	cbz	w8, 0x3825c
0000000000038258	strb	w19, [sp, #0x46]
000000000003825c	tbnz	w0, #0x0, 0x389ec
0000000000038260	b	0x38988
0000000000038264	add	x8, x21, #0x1
0000000000038268	subs	x25, x25, #0x1
000000000003826c	b.eq	0x38350
0000000000038270	cmp	x8, x23
0000000000038274	csel	x21, x8, xzr, lo
0000000000038278	add	x24, x19, x21, lsl #6
000000000003827c	ldr	x8, [x24]
0000000000038280	and	x9, x8, #0x100
0000000000038284	cmp	x8, #0x0
0000000000038288	ccmp	x9, #0x0, #0x0, ne
000000000003828c	b.ne	0x38264
0000000000038290	add	x0, x24, #0x10
0000000000038294	add	x2, sp, #0x48
0000000000038298	ldr	x1, [sp, #0x38]
000000000003829c	bl	__mi_bitmap_try_find_claim_field
00000000000382a0	ldr	x14, [sp, #0x38]
00000000000382a4	tbz	w0, #0x0, 0x38264
00000000000382a8	b	0x38340
00000000000382ac	ldr	x8, [x8, #0x930]
00000000000382b0	cmp	x8, #0x1
00000000000382b4	b.ne	0x38b18
00000000000382b8	ldrb	w23, [sp, #0x45]
00000000000382bc	ldr	x25, [x21, #0x970]
00000000000382c0	cbz	x25, 0x38350
00000000000382c4	ldr	x8, [x26]
00000000000382c8	adr	x19, #0x3a540
00000000000382cc	nop
00000000000382d0	mov	x28, x25
00000000000382d4	b	0x382e4
00000000000382d8	add	x8, x21, #0x1
00000000000382dc	subs	x28, x28, #0x1
00000000000382e0	b.eq	0x38350
00000000000382e4	cmp	x8, x25
00000000000382e8	csel	x21, x8, xzr, lo
00000000000382ec	add	x24, x19, x21, lsl #6
00000000000382f0	ldr	x8, [x24]
00000000000382f4	cbz	x8, 0x382d8
00000000000382f8	cmp	w23, #0x0
00000000000382fc	cset	w10, eq
0000000000038300	ubfx	x11, x8, #8, #1
0000000000038304	cmp	w8, #0x0
0000000000038308	cset	w9, lt
000000000003830c	cmp	w8, #0x10, lsl #12
0000000000038310	cset	w8, lo
0000000000038314	and	w10, w10, w11
0000000000038318	tbnz	w10, #0x0, 0x382d8
000000000003831c	orr	w8, w9, w8
0000000000038320	cbz	w8, 0x382d8
0000000000038324	add	x8, x19, x21, lsl #6
0000000000038328	add	x0, x8, #0x10
000000000003832c	add	x2, sp, #0x48
0000000000038330	ldr	x1, [sp, #0x38]
0000000000038334	bl	__mi_bitmap_try_find_claim_field
0000000000038338	ldr	x14, [sp, #0x38]
000000000003833c	tbz	w0, #0x0, 0x382d8
0000000000038340	ldr	x25, [sp, #0x20]
0000000000038344	str	x21, [x26]
0000000000038348	ldr	x28, [sp, #0x30]
000000000003834c	b	0x384f8
0000000000038350	ldrb	w19, [sp, #0x47]
0000000000038354	ldrb	w21, [sp, #0x45]
0000000000038358	nop
000000000003835c	ldr	x8, #0x4a614
0000000000038360	cmp	x8, #0x3fe
0000000000038364	ldr	x28, [sp, #0x30]
0000000000038368	ldr	x25, [sp, #0x20]
000000000003836c	b.hi	0x38798
0000000000038370	cbz	w19, 0x38388
0000000000038374	mov	w0, #0x4
0000000000038378	bl	_mi_option_get
000000000003837c	cmp	x0, #0x0
0000000000038380	cset	w8, ne
0000000000038384	b	0x3838c
0000000000038388	mov	w8, #0x0
000000000003838c	cmp	w21, #0x0
0000000000038390	cset	w9, ne
0000000000038394	cmp	w19, #0x0
0000000000038398	sturb	w8, [x29, #-0x51]
000000000003839c	cset	w8, ne
00000000000383a0	and	w8, w8, w9
00000000000383a4	sturb	w8, [x29, #-0x52]
00000000000383a8	sturh	wzr, [x29, #-0x54]
00000000000383ac	str	xzr, [sp, #0x50]
00000000000383b0	sub	x1, x29, #0x51
00000000000383b4	sub	x2, x29, #0x52
00000000000383b8	sub	x3, x29, #0x54
00000000000383bc	sub	x4, x29, #0x53
00000000000383c0	add	x5, sp, #0x50
00000000000383c4	mov	w0, #0x10000000
00000000000383c8	bl	__mi_arena_alloc_aligned
00000000000383cc	cbz	x0, 0x3842c
00000000000383d0	adr	x9, #0x4a5a0
00000000000383d4	nop
00000000000383d8	ldr	x14, [sp, #0x38]
00000000000383dc	ldaxr	x8, [x9]
00000000000383e0	add	x10, x8, #0x1
00000000000383e4	stlxr	w11, x10, [x9]
00000000000383e8	cbnz	w11, 0x383dc
00000000000383ec	cmp	x8, #0x400
00000000000383f0	ldr	x13, [sp, #0x10]
00000000000383f4	b.lo	0x3843c
00000000000383f8	ldaxr	x8, [x9]
00000000000383fc	sub	x8, x8, #0x1
0000000000038400	stlxr	w10, x8, [x9]
0000000000038404	cbnz	w10, 0x383f8
0000000000038408	ldr	x2, [sp, #0x50]
000000000003840c	ldurb	w3, [x29, #-0x51]
0000000000038410	mov	w1, #0x10000000
0000000000038414	bl	__mi_arena_free
0000000000038418	mov	w8, #0x100
000000000003841c	str	x8, [sp]
0000000000038420	adr	x0, #0x1a462 ; literal pool for: "maximum regions used: %zu GiB (perhaps recompile with a larger setting for MI_HEAP_REGION_MAX_SIZE)"
0000000000038424	nop
0000000000038428	bl	__mi_warning_message
000000000003842c	mov	w8, #0x0
0000000000038430	ldr	x14, [sp, #0x38]
0000000000038434	cbnz	w8, 0x384f8
0000000000038438	b	0x38798
000000000003843c	adr	x9, #0x3a3cc
0000000000038440	nop
0000000000038444	add	x24, x9, x8, lsl #6
0000000000038448	ldr	x10, [sp, #0x50]
000000000003844c	add	x11, x24, #0x30
0000000000038450	stlr	x10, [x11]
0000000000038454	add	x10, x24, #0x10
0000000000038458	stlr	xzr, [x10]
000000000003845c	add	x11, x24, #0x18
0000000000038460	ldurb	w12, [x29, #-0x53]
0000000000038464	sub	x12, x12, #0x1
0000000000038468	stlr	x12, [x11]
000000000003846c	add	x11, x24, #0x20
0000000000038470	ldurb	w12, [x29, #-0x51]
0000000000038474	sbfx	w12, w12, #0, #1
0000000000038478	sxtw	x12, w12
000000000003847c	stlr	x12, [x11]
0000000000038480	add	x11, x24, #0x28
0000000000038484	stlr	xzr, [x11]
0000000000038488	str	xzr, [sp, #0x48]
000000000003848c	mov	x11, #-0x1
0000000000038490	lsr	x12, x13, #28
0000000000038494	lsl	x13, x11, x14
0000000000038498	cmp	x14, #0x0
000000000003849c	csinv	x13, xzr, x13, eq
00000000000384a0	cmp	x12, #0x0
00000000000384a4	csel	x11, x11, x13, ne
00000000000384a8	ldaxr	x12, [x10]
00000000000384ac	orr	x12, x12, x11
00000000000384b0	stlxr	w13, x12, [x10]
00000000000384b4	cbnz	w13, 0x384a8
00000000000384b8	add	x8, x9, x8, lsl #6
00000000000384bc	add	x8, x8, #0x8
00000000000384c0	stlr	x0, [x8]
00000000000384c4	ldurb	w8, [x29, #-0x52]
00000000000384c8	ldurb	w9, [x29, #-0x54]
00000000000384cc	orr	w19, w8, w9, lsl #1
00000000000384d0	adrp	x9, 74 ; 0x82000
00000000000384d4	ldr	x8, [x9, #0x930]
00000000000384d8	cmp	x8, #0x1
00000000000384dc	b.ne	0x38b5c
00000000000384e0	and	x9, x19, #0xff
00000000000384e4	mov	w8, #0x1
00000000000384e8	mov	w10, #0x1
00000000000384ec	bfi	x10, x9, #8, #8
00000000000384f0	stlr	x10, [x24]
00000000000384f4	cbz	w8, 0x38798
00000000000384f8	ldar	x8, [x24]
00000000000384fc	add	x9, x24, #0x8
0000000000038500	ldar	x15, [x9]
0000000000038504	add	x10, x24, #0x18
0000000000038508	ldr	x9, [sp, #0x48]
000000000003850c	lsr	x11, x9, #6
0000000000038510	and	x9, x9, #0x3f
0000000000038514	mov	x12, #-0x1
0000000000038518	ldr	x19, [sp, #0x10]
000000000003851c	lsr	x16, x19, #28
0000000000038520	lsl	x13, x12, x14
0000000000038524	mvn	x13, x13
0000000000038528	lsl	x9, x13, x9
000000000003852c	cmp	x14, #0x0
0000000000038530	csel	x9, xzr, x9, eq
0000000000038534	cmp	x16, #0x0
0000000000038538	csel	x9, x12, x9, ne
000000000003853c	add	x10, x10, x11, lsl #3
0000000000038540	ldaxr	x11, [x10]
0000000000038544	orr	x12, x11, x9
0000000000038548	stlxr	w13, x12, [x10]
000000000003854c	cbnz	w13, 0x38540
0000000000038550	tst	x11, x9
0000000000038554	cset	w9, eq
0000000000038558	strb	w9, [sp, #0x46]
000000000003855c	ubfx	w9, w8, #8, #1
0000000000038560	strb	w9, [sp, #0x45]
0000000000038564	ubfx	w8, w8, #9, #1
0000000000038568	strb	w8, [sp, #0x44]
000000000003856c	ldr	x21, [sp, #0x48]
0000000000038570	lsl	w8, w21, #22
0000000000038574	and	x8, x8, #0xfc00000
0000000000038578	add	x23, x15, x8
000000000003857c	ldrb	w9, [sp, #0x47]
0000000000038580	add	x8, x24, #0x20
0000000000038584	cbz	w9, 0x38614
0000000000038588	lsr	x10, x21, #6
000000000003858c	and	x9, x21, #0x3f
0000000000038590	mov	x11, #-0x1
0000000000038594	lsl	x12, x11, x14
0000000000038598	mvn	x12, x12
000000000003859c	lsl	x9, x12, x9
00000000000385a0	cmp	x14, #0x0
00000000000385a4	csel	x9, xzr, x9, eq
00000000000385a8	cmp	x16, #0x0
00000000000385ac	csel	x9, x11, x9, ne
00000000000385b0	add	x8, x8, x10, lsl #3
00000000000385b4	ldaxr	x10, [x8]
00000000000385b8	orr	x11, x10, x9
00000000000385bc	stlxr	w12, x11, [x8]
00000000000385c0	cbnz	w12, 0x385b4
00000000000385c4	bics	xzr, x9, x10
00000000000385c8	b.eq	0x38650
00000000000385cc	mov	x26, x16
00000000000385d0	str	x15, [sp, #0x8]
00000000000385d4	strb	wzr, [sp, #0x50]
00000000000385d8	and	x1, x19, #0xffffffffffc00000
00000000000385dc	add	x4, sp, #0x50
00000000000385e0	mov	x0, x23
00000000000385e4	mov	w2, #0x1
00000000000385e8	mov	w3, #0x0
00000000000385ec	bl	_mi_os_commitx
00000000000385f0	tbz	w0, #0x0, 0x3874c
00000000000385f4	ldrb	w8, [sp, #0x50]
00000000000385f8	ldr	x14, [sp, #0x38]
00000000000385fc	mov	x16, x26
0000000000038600	cbz	w8, 0x3860c
0000000000038604	mov	w8, #0x1
0000000000038608	strb	w8, [sp, #0x46]
000000000003860c	ldr	x15, [sp, #0x8]
0000000000038610	b	0x38650
0000000000038614	and	x9, x21, #0x3f
0000000000038618	mov	x10, #-0x1
000000000003861c	lsl	x11, x10, x14
0000000000038620	mvn	x11, x11
0000000000038624	lsl	x9, x11, x9
0000000000038628	cmp	x14, #0x0
000000000003862c	csel	x9, xzr, x9, eq
0000000000038630	cmp	x16, #0x0
0000000000038634	csel	x9, x10, x9, ne
0000000000038638	lsr	x10, x21, #3
000000000003863c	and	x10, x10, #0x1ffffffffffffff8
0000000000038640	ldr	x8, [x8, x10]
0000000000038644	bics	xzr, x9, x8
0000000000038648	cset	w8, eq
000000000003864c	strb	w8, [sp, #0x47]
0000000000038650	adr	x8, #0x3a1b8
0000000000038654	nop
0000000000038658	sub	x8, x24, x8
000000000003865c	add	x8, x8, x21
0000000000038660	lsl	x26, x8, #1
0000000000038664	add	x8, x24, #0x28
0000000000038668	ldr	x10, [sp, #0x48]
000000000003866c	cbz	x16, 0x38690
0000000000038670	lsr	x9, x10, #3
0000000000038674	and	x9, x9, #0x1ffffffffffffff8
0000000000038678	add	x8, x8, x9
000000000003867c	ldr	x9, [x8]
0000000000038680	ldr	x21, [sp, #0x28]
0000000000038684	cbz	x9, 0x38744
0000000000038688	mov	x9, #0x0
000000000003868c	b	0x386e8
0000000000038690	and	x9, x10, #0x3f
0000000000038694	mov	x11, #-0x1
0000000000038698	lsl	x11, x11, x14
000000000003869c	mvn	x11, x11
00000000000386a0	lsl	x11, x11, x9
00000000000386a4	cmp	x14, #0x0
00000000000386a8	csel	x11, xzr, x11, eq
00000000000386ac	lsr	x10, x10, #3
00000000000386b0	and	x10, x10, #0x1ffffffffffffff8
00000000000386b4	add	x8, x8, x10
00000000000386b8	ldr	x10, [x8]
00000000000386bc	tst	x10, x11
00000000000386c0	ldr	x21, [sp, #0x28]
00000000000386c4	b.eq	0x38744
00000000000386c8	mov	x10, #-0x1
00000000000386cc	lsl	x11, x10, x14
00000000000386d0	mvn	x11, x11
00000000000386d4	lsl	x9, x11, x9
00000000000386d8	cmp	x14, #0x0
00000000000386dc	csinv	x9, x10, x9, eq
00000000000386e0	cmp	x16, #0x0
00000000000386e4	csel	x9, xzr, x9, ne
00000000000386e8	ldaxr	x10, [x8]
00000000000386ec	and	x10, x10, x9
00000000000386f0	stlxr	w11, x10, [x8]
00000000000386f4	cbnz	w11, 0x386e8
00000000000386f8	ldrb	w8, [sp, #0x47]
00000000000386fc	cbz	w8, 0x38730
0000000000038700	mov	x24, x15
0000000000038704	strb	wzr, [sp, #0x50]
0000000000038708	and	x1, x19, #0xffffffffffc00000
000000000003870c	add	x2, sp, #0x50
0000000000038710	mov	x0, x23
0000000000038714	bl	__mi_os_unreset
0000000000038718	ldrb	w8, [sp, #0x50]
000000000003871c	cbz	w8, 0x38728
0000000000038720	mov	w8, #0x1
0000000000038724	strb	w8, [sp, #0x46]
0000000000038728	mov	x15, x24
000000000003872c	b	0x38744
0000000000038730	mov	w0, #0x5
0000000000038734	mov	x24, x15
0000000000038738	bl	_mi_option_get
000000000003873c	mov	x15, x24
0000000000038740	cbz	x0, 0x38700
0000000000038744	cbnz	x15, 0x387dc
0000000000038748	b	0x3879c
000000000003874c	add	x9, x24, #0x10
0000000000038750	ldr	x10, [sp, #0x48]
0000000000038754	and	x8, x10, #0x3f
0000000000038758	mov	x11, #-0x1
000000000003875c	ldr	x13, [sp, #0x38]
0000000000038760	lsl	x12, x11, x13
0000000000038764	mvn	x12, x12
0000000000038768	lsl	x8, x12, x8
000000000003876c	cmp	x13, #0x0
0000000000038770	csinv	x8, x11, x8, eq
0000000000038774	cmp	x26, #0x0
0000000000038778	csel	x8, xzr, x8, ne
000000000003877c	lsr	x10, x10, #3
0000000000038780	and	x10, x10, #0x1ffffffffffffff8
0000000000038784	add	x9, x9, x10
0000000000038788	ldaxr	x10, [x9]
000000000003878c	and	x10, x10, x8
0000000000038790	stlxr	w11, x10, [x9]
0000000000038794	cbnz	w11, 0x38788
0000000000038798	ldr	x21, [sp, #0x28]
000000000003879c	ldr	x23, [sp, #0x18]
00000000000387a0	str	x23, [sp]
00000000000387a4	adr	x0, #0x1a142 ; literal pool for: "unable to allocate from region: size %zu\n"
00000000000387a8	nop
00000000000387ac	bl	__mi_warning_message
00000000000387b0	add	x1, sp, #0x47
00000000000387b4	add	x2, sp, #0x45
00000000000387b8	add	x3, sp, #0x44
00000000000387bc	add	x4, sp, #0x46
00000000000387c0	add	x5, sp, #0x50
00000000000387c4	mov	x0, x23
00000000000387c8	bl	__mi_arena_alloc_aligned
00000000000387cc	mov	x23, x0
00000000000387d0	ldr	x8, [sp, #0x50]
00000000000387d4	mov	w26, #0x1
00000000000387d8	bfi	x26, x8, #1, #63
00000000000387dc	cbz	x23, 0x38988
00000000000387e0	ldrb	w8, [sp, #0x47]
00000000000387e4	cbz	w8, 0x387f0
00000000000387e8	mov	w8, #0x1
00000000000387ec	b	0x38824
00000000000387f0	strb	wzr, [sp, #0x50]
00000000000387f4	mov	w19, #0x1
00000000000387f8	add	x4, sp, #0x50
00000000000387fc	mov	x0, x23
0000000000038800	mov	x1, x22
0000000000038804	mov	w2, #0x1
0000000000038808	mov	w3, #0x0
000000000003880c	bl	_mi_os_commitx
0000000000038810	ldrb	w8, [sp, #0x50]
0000000000038814	cbz	w8, 0x3881c
0000000000038818	strb	w19, [sp, #0x46]
000000000003881c	tbz	w0, #0x0, 0x38970
0000000000038820	mov	w8, #0x0
0000000000038824	str	x26, [x23]
0000000000038828	ldrb	w9, [sp, #0x45]
000000000003882c	ldrb	w10, [sp, #0x44]
0000000000038830	and	w10, w10, #0x1
0000000000038834	orr	w9, w10, w9
0000000000038838	strb	w9, [x23, #0x8]
000000000003883c	strb	w8, [x23, #0x9]
0000000000038840	ldr	x8, [x28, #0x70]
0000000000038844	adr	x9, #0x4a5fc
0000000000038848	nop
000000000003884c	cmp	x8, x9
0000000000038850	cset	w10, hs
0000000000038854	add	x9, x9, #0x240
0000000000038858	cmp	x8, x9
000000000003885c	cset	w9, lo
0000000000038860	and	w9, w10, w9
0000000000038864	add	x11, x8, #0x18
0000000000038868	tbnz	x25, #0x3f, 0x388dc
000000000003886c	cbz	w9, 0x38950
0000000000038870	ldxr	x9, [x11]
0000000000038874	add	x10, x9, #0x1
0000000000038878	stxr	w12, x10, [x11]
000000000003887c	cbnz	w12, 0x38870
0000000000038880	add	x11, x8, #0x10
0000000000038884	ldr	x13, [x8, #0x10]
0000000000038888	b	0x3889c
000000000003888c	clrex
0000000000038890	mov	w14, #0x0
0000000000038894	mov	x13, x12
0000000000038898	cbnz	w14, 0x388c4
000000000003889c	cmp	x13, x9
00000000000388a0	b.gt	0x388c4
00000000000388a4	ldxr	x12, [x11]
00000000000388a8	cmp	x12, x13
00000000000388ac	b.ne	0x3888c
00000000000388b0	stlxr	w13, x10, [x11]
00000000000388b4	cbnz	w13, 0x38890
00000000000388b8	mov	w14, #0x1
00000000000388bc	mov	x13, x12
00000000000388c0	cbz	w14, 0x3889c
00000000000388c4	mov	w9, #0x1
00000000000388c8	ldxr	x10, [x8]
00000000000388cc	add	x10, x10, #0x1
00000000000388d0	stxr	w11, x10, [x8]
00000000000388d4	cbnz	w11, 0x388c8
00000000000388d8	b	0x389bc
00000000000388dc	cbz	w9, 0x38990
00000000000388e0	ldxr	x9, [x11]
00000000000388e4	sub	x9, x9, #0x1
00000000000388e8	stxr	w10, x9, [x11]
00000000000388ec	cbnz	w10, 0x388e0
00000000000388f0	add	x10, x8, #0x10
00000000000388f4	ldr	x12, [x8, #0x10]
00000000000388f8	b	0x3890c
00000000000388fc	clrex
0000000000038900	mov	w13, #0x0
0000000000038904	mov	x12, x11
0000000000038908	cbnz	w13, 0x38934
000000000003890c	cmp	x12, x9
0000000000038910	b.ge	0x38934
0000000000038914	ldxr	x11, [x10]
0000000000038918	cmp	x11, x12
000000000003891c	b.ne	0x388fc
0000000000038920	stlxr	w12, x9, [x10]
0000000000038924	cbnz	w12, 0x38900
0000000000038928	mov	w13, #0x1
000000000003892c	mov	x12, x11
0000000000038930	cbz	w13, 0x3890c
0000000000038934	add	x8, x8, #0x8
0000000000038938	ldxr	x9, [x8]
000000000003893c	add	x9, x9, #0x1
0000000000038940	stxr	w10, x9, [x8]
0000000000038944	cbnz	w10, 0x38938
0000000000038948	mov	x9, #-0x1
000000000003894c	b	0x389bc
0000000000038950	ldp	x11, x10, [x8, #0x10]
0000000000038954	add	x9, x10, #0x1
0000000000038958	str	x9, [x8, #0x18]
000000000003895c	cmp	x10, x11
0000000000038960	b.lt	0x38968
0000000000038964	str	x9, [x8, #0x10]
0000000000038968	mov	w9, #0x1
000000000003896c	b	0x389b0
0000000000038970	mov	x0, x23
0000000000038974	mov	w1, #0x400000
0000000000038978	mov	x2, x26
000000000003897c	mov	w3, #0x0
0000000000038980	mov	w4, #0x0
0000000000038984	bl	__mi_mem_free
0000000000038988	mov	x23, #0x0
000000000003898c	b	0x38ab4
0000000000038990	ldp	x10, x9, [x8, #0x10]
0000000000038994	sub	x9, x9, #0x1
0000000000038998	str	x9, [x8, #0x18]
000000000003899c	cmp	x9, x10
00000000000389a0	b.le	0x389a8
00000000000389a4	str	x9, [x8, #0x10]
00000000000389a8	add	x8, x8, #0x8
00000000000389ac	mov	x9, #-0x1
00000000000389b0	ldr	x10, [x8]
00000000000389b4	add	x10, x10, #0x1
00000000000389b8	str	x10, [x8]
00000000000389bc	ldp	x8, x10, [x28, #0x38]
00000000000389c0	add	x8, x8, x9
00000000000389c4	str	x8, [x28, #0x38]
00000000000389c8	cmp	x8, x10
00000000000389cc	b.ls	0x389d4
00000000000389d0	str	x8, [x28, #0x40]
00000000000389d4	ldp	x8, x9, [x28, #0x48]
00000000000389d8	add	x8, x8, x25
00000000000389dc	str	x8, [x28, #0x48]
00000000000389e0	cmp	x8, x9
00000000000389e4	b.ls	0x389ec
00000000000389e8	str	x8, [x28, #0x50]
00000000000389ec	add	x8, x23, #0x10
00000000000389f0	stlr	xzr, [x8]
00000000000389f4	add	x24, x23, #0x18
00000000000389f8	sub	x1, x22, #0x18
00000000000389fc	mov	x0, x24
0000000000038a00	bl	0x4db14 ; symbol stub for: _bzero
0000000000038a04	mov	x8, #0x0
0000000000038a08	add	x9, x23, x8, lsl #6
0000000000038a0c	strb	w8, [x9, #0x78]
0000000000038a10	ldrb	w10, [x9, #0x79]
0000000000038a14	ldrb	w11, [sp, #0x47]
0000000000038a18	and	w10, w10, #0xfffffff1
0000000000038a1c	orr	w10, w10, w11, lsl #2
0000000000038a20	ldrb	w11, [sp, #0x46]
0000000000038a24	and	w10, w10, #0xfffffff7
0000000000038a28	orr	w10, w10, w11, lsl #3
0000000000038a2c	strb	w10, [x9, #0x79]
0000000000038a30	add	w8, w8, #0x1
0000000000038a34	and	x8, x8, #0xff
0000000000038a38	cmp	x27, x8
0000000000038a3c	b.hi	0x38a08
0000000000038a40	str	w20, [x23, #0x70]
0000000000038a44	str	x21, [x23, #0x60]
0000000000038a48	stp	x27, x25, [x23, #0x40]
0000000000038a4c	str	x22, [x23, #0x50]
0000000000038a50	bl	0x4ddf0 ; symbol stub for: _pthread_self
0000000000038a54	bl	0x4dda8 ; symbol stub for: _pthread_mach_thread_np
0000000000038a58	mov	w8, w0
0000000000038a5c	add	x9, x23, #0x68
0000000000038a60	stlr	x8, [x9]
0000000000038a64	nop
0000000000038a68	ldr	x8, #0x2f5a0
0000000000038a6c	eor	x8, x8, x23
0000000000038a70	str	x8, [x23, #0x58]
0000000000038a74	cmp	w20, #0x1
0000000000038a78	b.hi	0x38ab4
0000000000038a7c	ldr	w8, [x23, #0x70]
0000000000038a80	add	x9, x28, #0x10
0000000000038a84	cmp	w8, #0x0
0000000000038a88	csel	x10, xzr, x28, ne
0000000000038a8c	cmp	w8, #0x1
0000000000038a90	csel	x8, x9, x10, eq
0000000000038a94	str	xzr, [x24]
0000000000038a98	ldr	x9, [x8, #0x8]
0000000000038a9c	str	x9, [x23, #0x20]
0000000000038aa0	add	x10, x9, #0x18
0000000000038aa4	cmp	x9, #0x0
0000000000038aa8	csel	x9, x8, x10, eq
0000000000038aac	str	x23, [x9]
0000000000038ab0	str	x23, [x8, #0x8]
0000000000038ab4	mov	x0, x23
0000000000038ab8	ldp	x29, x30, [sp, #0xb0]
0000000000038abc	ldp	x20, x19, [sp, #0xa0]
0000000000038ac0	ldp	x22, x21, [sp, #0x90]
0000000000038ac4	ldp	x24, x23, [sp, #0x80]
0000000000038ac8	ldp	x26, x25, [sp, #0x70]
0000000000038acc	ldp	x28, x27, [sp, #0x60]
0000000000038ad0	add	sp, sp, #0xc0
0000000000038ad4	ret
0000000000038ad8	adr	x21, #0x49e58
0000000000038adc	nop
0000000000038ae0	ldar	x19, [x21]
0000000000038ae4	cbnz	x19, 0x38050
0000000000038ae8	mov	w0, #0xf
0000000000038aec	mov	x24, x8
0000000000038af0	bl	_mi_option_get
0000000000038af4	cmp	x0, #0x1
0000000000038af8	csinc	x19, x0, xzr, gt
0000000000038afc	stlr	x19, [x21]
0000000000038b00	str	x19, [sp]
0000000000038b04	adr	x0, #0x1980c ; literal pool for: "using %zd numa regions\n"
0000000000038b08	nop
0000000000038b0c	bl	__mi_verbose_message
0000000000038b10	mov	x8, x24
0000000000038b14	b	0x38050
0000000000038b18	nop
0000000000038b1c	ldr	x8, #0x49e14
0000000000038b20	cbnz	x8, 0x382b8
0000000000038b24	adr	x19, #0x49e0c
0000000000038b28	nop
0000000000038b2c	ldar	x8, [x19]
0000000000038b30	cbnz	x8, 0x382b8
0000000000038b34	mov	w0, #0xf
0000000000038b38	bl	_mi_option_get
0000000000038b3c	cmp	x0, #0x1
0000000000038b40	csinc	x8, x0, xzr, gt
0000000000038b44	stlr	x8, [x19]
0000000000038b48	str	x8, [sp]
0000000000038b4c	adr	x0, #0x197c4 ; literal pool for: "using %zd numa regions\n"
0000000000038b50	nop
0000000000038b54	bl	__mi_verbose_message
0000000000038b58	b	0x382b8
0000000000038b5c	ldr	x8, [x9, #0x930]
0000000000038b60	cbnz	x8, 0x384e0
0000000000038b64	adr	x21, #0x49dcc
0000000000038b68	nop
0000000000038b6c	ldar	x8, [x21]
0000000000038b70	cbnz	x8, 0x384e0
0000000000038b74	mov	w0, #0xf
0000000000038b78	bl	_mi_option_get
0000000000038b7c	cmp	x0, #0x1
0000000000038b80	csinc	x8, x0, xzr, gt
0000000000038b84	stlr	x8, [x21]
0000000000038b88	str	x8, [sp]
0000000000038b8c	adr	x0, #0x19784 ; literal pool for: "using %zd numa regions\n"
0000000000038b90	nop
0000000000038b94	bl	__mi_verbose_message
0000000000038b98	ldr	x14, [sp, #0x38]
0000000000038b9c	b	0x384e0
__mi_bitmap_try_find_claim_field:
0000000000038ba0	ldr	x11, [x0]
0000000000038ba4	cmn	x11, #0x1
0000000000038ba8	b.eq	0x38be0
0000000000038bac	mov	x8, #-0x1
0000000000038bb0	lsl	x9, x8, x1
0000000000038bb4	cmp	x1, #0x0
0000000000038bb8	csinv	x9, xzr, x9, eq
0000000000038bbc	cmp	x1, #0x3f
0000000000038bc0	csel	x10, x8, x9, hi
0000000000038bc4	mov	w8, #0x40
0000000000038bc8	sub	x8, x8, x1
0000000000038bcc	mvn	x9, x11
0000000000038bd0	rbit	x9, x9
0000000000038bd4	clz	x9, x9
0000000000038bd8	cmp	x9, x8
0000000000038bdc	b.ls	0x38be8
0000000000038be0	mov	w0, #0x0
0000000000038be4	ret
0000000000038be8	lsl	x10, x10, x9
0000000000038bec	cmp	x1, #0x1
0000000000038bf0	b.ne	0x38c6c
0000000000038bf4	b	0x38c08
0000000000038bf8	add	x9, x9, #0x1
0000000000038bfc	lsl	x10, x10, #1
0000000000038c00	cmp	x9, x8
0000000000038c04	b.hi	0x38be0
0000000000038c08	tst	x11, x10
0000000000038c0c	b.ne	0x38bf8
0000000000038c10	ldaxr	x12, [x0]
0000000000038c14	cmp	x12, x11
0000000000038c18	b.ne	0x38c38
0000000000038c1c	orr	x11, x11, x10
0000000000038c20	stlxr	w13, x11, [x0]
0000000000038c24	cbnz	w13, 0x38c3c
0000000000038c28	mov	w13, #0x1
0000000000038c2c	mov	x11, x12
0000000000038c30	tbz	w13, #0x0, 0x38c00
0000000000038c34	b	0x38cac
0000000000038c38	clrex
0000000000038c3c	mov	w13, #0x0
0000000000038c40	mov	x11, x12
0000000000038c44	tbz	w13, #0x0, 0x38c00
0000000000038c48	b	0x38cac
0000000000038c4c	clz	x12, x12
0000000000038c50	eor	x12, x12, #0x3f
0000000000038c54	sub	x9, x12, x9
0000000000038c58	add	x13, x9, #0x1
0000000000038c5c	add	x9, x12, #0x1
0000000000038c60	lsl	x10, x10, x13
0000000000038c64	cmp	x9, x8
0000000000038c68	b.hi	0x38be0
0000000000038c6c	ands	x12, x11, x10
0000000000038c70	b.ne	0x38c4c
0000000000038c74	ldaxr	x12, [x0]
0000000000038c78	cmp	x12, x11
0000000000038c7c	b.ne	0x38c9c
0000000000038c80	orr	x11, x11, x10
0000000000038c84	stlxr	w13, x11, [x0]
0000000000038c88	cbnz	w13, 0x38ca0
0000000000038c8c	mov	w13, #0x1
0000000000038c90	mov	x11, x12
0000000000038c94	cbz	w13, 0x38c64
0000000000038c98	b	0x38cac
0000000000038c9c	clrex
0000000000038ca0	mov	w13, #0x0
0000000000038ca4	mov	x11, x12
0000000000038ca8	cbz	w13, 0x38c64
0000000000038cac	str	x9, [x2]
0000000000038cb0	mov	w0, #0x1
0000000000038cb4	ret
__mi_arena_alloc_aligned:
0000000000038cb8	sub	sp, sp, #0x70
0000000000038cbc	stp	x28, x27, [sp, #0x10]
0000000000038cc0	stp	x26, x25, [sp, #0x20]
0000000000038cc4	stp	x24, x23, [sp, #0x30]
0000000000038cc8	stp	x22, x21, [sp, #0x40]
0000000000038ccc	stp	x20, x19, [sp, #0x50]
0000000000038cd0	stp	x29, x30, [sp, #0x60]
0000000000038cd4	add	x29, sp, #0x60
0000000000038cd8	mov	x21, x5
0000000000038cdc	mov	x24, x4
0000000000038ce0	mov	x19, x3
0000000000038ce4	mov	x20, x2
0000000000038ce8	mov	x23, x1
0000000000038cec	mov	x22, x0
0000000000038cf0	str	xzr, [x5]
0000000000038cf4	strb	wzr, [x4]
0000000000038cf8	strb	wzr, [x3]
0000000000038cfc	cmp	x0, #0x800, lsl #12
0000000000038d00	b.lo	0x38dfc
0000000000038d04	nop
0000000000038d08	ldr	x8, #0x49bf8
0000000000038d0c	cbz	x8, 0x38dfc
0000000000038d10	mov	w8, #0xffffff
0000000000038d14	add	x8, x22, x8
0000000000038d18	lsr	x25, x8, #24
0000000000038d1c	adrp	x8, 74 ; 0x82000
0000000000038d20	ldr	x9, [x8, #0x930]
0000000000038d24	cmp	x9, #0x1
0000000000038d28	b.ne	0x38e68
0000000000038d2c	mov	x26, #0x0
0000000000038d30	adr	x27, #0x49b10
0000000000038d34	nop
0000000000038d38	b	0x38d6c
0000000000038d3c	mov	x1, x26
0000000000038d40	mov	x2, x25
0000000000038d44	mov	x3, x23
0000000000038d48	mov	x4, x20
0000000000038d4c	mov	x5, x19
0000000000038d50	mov	x6, x24
0000000000038d54	mov	x7, x21
0000000000038d58	bl	_mi_arena_alloc_from
0000000000038d5c	cbnz	x0, 0x38e48
0000000000038d60	add	x26, x26, #0x1
0000000000038d64	cmp	x26, #0x40
0000000000038d68	b.eq	0x38d98
0000000000038d6c	add	x8, x27, x26, lsl #3
0000000000038d70	ldr	x0, [x8, #0x400]
0000000000038d74	cbz	x0, 0x38d98
0000000000038d78	ldr	w8, [x0, #0x18]
0000000000038d7c	cmp	w8, #0x0
0000000000038d80	b.gt	0x38d60
0000000000038d84	ldrb	w8, [x20]
0000000000038d88	cbnz	w8, 0x38d3c
0000000000038d8c	ldrb	w8, [x0, #0x1e]
0000000000038d90	cbnz	w8, 0x38d60
0000000000038d94	b	0x38d3c
0000000000038d98	mov	x26, #0x0
0000000000038d9c	b	0x38dd0
0000000000038da0	mov	x1, x26
0000000000038da4	mov	x2, x25
0000000000038da8	mov	x3, x23
0000000000038dac	mov	x4, x20
0000000000038db0	mov	x5, x19
0000000000038db4	mov	x6, x24
0000000000038db8	mov	x7, x21
0000000000038dbc	bl	_mi_arena_alloc_from
0000000000038dc0	cbnz	x0, 0x38e48
0000000000038dc4	add	x26, x26, #0x1
0000000000038dc8	cmp	x26, #0x40
0000000000038dcc	b.eq	0x38dfc
0000000000038dd0	add	x8, x27, x26, lsl #3
0000000000038dd4	ldr	x0, [x8, #0x400]
0000000000038dd8	cbz	x0, 0x38dfc
0000000000038ddc	ldr	w8, [x0, #0x18]
0000000000038de0	cmp	w8, #0x1
0000000000038de4	b.lt	0x38dc4
0000000000038de8	ldrb	w8, [x20]
0000000000038dec	cbnz	w8, 0x38da0
0000000000038df0	ldrb	w8, [x0, #0x1e]
0000000000038df4	cbnz	w8, 0x38dc4
0000000000038df8	b	0x38da0
0000000000038dfc	mov	w0, #0x10
0000000000038e00	bl	_mi_option_get
0000000000038e04	cbz	x0, 0x38e20
0000000000038e08	bl	0x4dac0 ; symbol stub for: ___error
0000000000038e0c	mov	x8, x0
0000000000038e10	mov	x0, #0x0
0000000000038e14	mov	w9, #0xc
0000000000038e18	str	w9, [x8]
0000000000038e1c	b	0x38e48
0000000000038e20	mov	w8, #0x1
0000000000038e24	strb	w8, [x24]
0000000000038e28	str	xzr, [x21]
0000000000038e2c	ldrb	w1, [x23]
0000000000038e30	mov	x0, x22
0000000000038e34	mov	x2, x20
0000000000038e38	bl	__mi_os_alloc_aligned
0000000000038e3c	cbz	x0, 0x38e48
0000000000038e40	ldrb	w8, [x20]
0000000000038e44	strb	w8, [x19]
0000000000038e48	ldp	x29, x30, [sp, #0x60]
0000000000038e4c	ldp	x20, x19, [sp, #0x50]
0000000000038e50	ldp	x22, x21, [sp, #0x40]
0000000000038e54	ldp	x24, x23, [sp, #0x30]
0000000000038e58	ldp	x26, x25, [sp, #0x20]
0000000000038e5c	ldp	x28, x27, [sp, #0x10]
0000000000038e60	add	sp, sp, #0x70
0000000000038e64	ret
0000000000038e68	ldr	x8, [x8, #0x930]
0000000000038e6c	cbnz	x8, 0x38d2c
0000000000038e70	adr	x26, #0x49ac0
0000000000038e74	nop
0000000000038e78	ldar	x8, [x26]
0000000000038e7c	cbnz	x8, 0x38d2c
0000000000038e80	mov	w0, #0xf
0000000000038e84	bl	_mi_option_get
0000000000038e88	cmp	x0, #0x1
0000000000038e8c	csinc	x8, x0, xzr, gt
0000000000038e90	stlr	x8, [x26]
0000000000038e94	str	x8, [sp]
0000000000038e98	adr	x0, #0x19478 ; literal pool for: "using %zd numa regions\n"
0000000000038e9c	nop
0000000000038ea0	bl	__mi_verbose_message
0000000000038ea4	b	0x38d2c
__mi_os_unreset:
0000000000038ea8	stp	x22, x21, [sp, #-0x30]!
0000000000038eac	stp	x20, x19, [sp, #0x10]
0000000000038eb0	stp	x29, x30, [sp, #0x20]
0000000000038eb4	add	x29, sp, #0x20
0000000000038eb8	mov	x21, x2
0000000000038ebc	mov	x19, x1
0000000000038ec0	mov	x20, x0
0000000000038ec4	mov	w0, #0x5
0000000000038ec8	bl	_mi_option_get
0000000000038ecc	cbz	x0, 0x38ef4
0000000000038ed0	mov	x0, x20
0000000000038ed4	mov	x1, x19
0000000000038ed8	mov	w2, #0x1
0000000000038edc	mov	w3, #0x1
0000000000038ee0	mov	x4, x21
0000000000038ee4	ldp	x29, x30, [sp, #0x20]
0000000000038ee8	ldp	x20, x19, [sp, #0x10]
0000000000038eec	ldp	x22, x21, [sp], #0x30
0000000000038ef0	b	_mi_os_commitx
0000000000038ef4	strb	wzr, [x21]
0000000000038ef8	cbz	x20, 0x39000
0000000000038efc	cbz	x19, 0x39000
0000000000038f00	nop
0000000000038f04	ldr	x9, #0x2f59c
0000000000038f08	add	x8, x20, x9
0000000000038f0c	sub	x8, x8, #0x1
0000000000038f10	sub	x10, x9, #0x1
0000000000038f14	tst	x9, x10
0000000000038f18	b.ne	0x38f3c
0000000000038f1c	neg	x9, x9
0000000000038f20	and	x8, x8, x9
0000000000038f24	add	x10, x20, x19
0000000000038f28	and	x9, x9, x10
0000000000038f2c	sub	x8, x9, x8
0000000000038f30	cmp	x8, #0x1
0000000000038f34	b.ge	0x38f5c
0000000000038f38	b	0x39000
0000000000038f3c	udiv	x8, x8, x9
0000000000038f40	mul	x8, x8, x9
0000000000038f44	add	x10, x20, x19
0000000000038f48	udiv	x10, x10, x9
0000000000038f4c	mul	x9, x10, x9
0000000000038f50	sub	x8, x9, x8
0000000000038f54	cmp	x8, #0x1
0000000000038f58	b.lt	0x39000
0000000000038f5c	neg	x9, x8
0000000000038f60	adr	x10, #0x49f78
0000000000038f64	nop
0000000000038f68	ldxr	x11, [x10]
0000000000038f6c	add	x12, x11, x9
0000000000038f70	stxr	w13, x12, [x10]
0000000000038f74	cbnz	w13, 0x38f68
0000000000038f78	sub	x10, x11, x8
0000000000038f7c	nop
0000000000038f80	ldr	x13, #0x49f50
0000000000038f84	adr	x11, #0x49f4c
0000000000038f88	nop
0000000000038f8c	b	0x38fa0
0000000000038f90	clrex
0000000000038f94	mov	w14, #0x0
0000000000038f98	mov	x13, x12
0000000000038f9c	cbnz	w14, 0x38fc8
0000000000038fa0	cmp	x13, x10
0000000000038fa4	b.ge	0x38fc8
0000000000038fa8	ldxr	x12, [x11]
0000000000038fac	cmp	x12, x13
0000000000038fb0	b.ne	0x38f90
0000000000038fb4	stlxr	w13, x10, [x11]
0000000000038fb8	cbnz	w13, 0x38f94
0000000000038fbc	mov	w14, #0x1
0000000000038fc0	mov	x13, x12
0000000000038fc4	cbz	w14, 0x38fa0
0000000000038fc8	tbnz	x8, #0x3f, 0x38fe8
0000000000038fcc	adr	x9, #0x49efc
0000000000038fd0	nop
0000000000038fd4	ldxr	x10, [x9]
0000000000038fd8	add	x10, x10, x8
0000000000038fdc	stxr	w11, x10, [x9]
0000000000038fe0	cbnz	w11, 0x38fd4
0000000000038fe4	b	0x39000
0000000000038fe8	adr	x8, #0x49ed8
0000000000038fec	nop
0000000000038ff0	ldxr	x10, [x8]
0000000000038ff4	add	x10, x10, x9
0000000000038ff8	stxr	w11, x10, [x8]
0000000000038ffc	cbnz	w11, 0x38ff0
0000000000039000	mov	w0, #0x1
0000000000039004	ldp	x29, x30, [sp, #0x20]
0000000000039008	ldp	x20, x19, [sp, #0x10]
000000000003900c	ldp	x22, x21, [sp], #0x30
0000000000039010	ret
_mi_arena_alloc_from:
0000000000039014	sub	sp, sp, #0x70
0000000000039018	stp	x28, x27, [sp, #0x10]
000000000003901c	stp	x26, x25, [sp, #0x20]
0000000000039020	stp	x24, x23, [sp, #0x30]
0000000000039024	stp	x22, x21, [sp, #0x40]
0000000000039028	stp	x20, x19, [sp, #0x50]
000000000003902c	stp	x29, x30, [sp, #0x60]
0000000000039030	add	x29, sp, #0x60
0000000000039034	mov	x21, x6
0000000000039038	mov	x23, x5
000000000003903c	mov	x24, x4
0000000000039040	mov	x20, x2
0000000000039044	mov	x22, x0
0000000000039048	add	x8, x0, #0x20
000000000003904c	ldar	x8, [x8]
0000000000039050	ldr	x9, [x0, #0x10]
0000000000039054	cmp	x2, #0x1
0000000000039058	b.ne	0x39184
000000000003905c	cbz	x9, 0x3955c
0000000000039060	mov	x11, #0x0
0000000000039064	mov	w12, #0x1
0000000000039068	mov	x10, x8
000000000003906c	b	0x39080
0000000000039070	add	x11, x11, #0x1
0000000000039074	add	x10, x10, #0x1
0000000000039078	cmp	x11, x9
000000000003907c	b.eq	0x3955c
0000000000039080	cmp	x10, x9
0000000000039084	csel	x10, x10, xzr, lo
0000000000039088	add	x13, x22, x10, lsl #3
000000000003908c	ldr	x15, [x13, #0x38]
0000000000039090	cmn	x15, #0x1
0000000000039094	b.eq	0x39070
0000000000039098	mvn	x14, x15
000000000003909c	rbit	x14, x14
00000000000390a0	clz	x2, x14
00000000000390a4	cmp	x2, #0x3f
00000000000390a8	b.hi	0x39070
00000000000390ac	add	x13, x13, #0x38
00000000000390b0	lsl	x14, x12, x2
00000000000390b4	b	0x390c8
00000000000390b8	add	x2, x2, #0x1
00000000000390bc	lsl	x14, x14, #1
00000000000390c0	cmp	x2, #0x40
00000000000390c4	b.hs	0x39070
00000000000390c8	tst	x14, x15
00000000000390cc	b.ne	0x390b8
00000000000390d0	ldaxr	x16, [x13]
00000000000390d4	cmp	x16, x15
00000000000390d8	b.ne	0x390f8
00000000000390dc	orr	x15, x14, x15
00000000000390e0	stlxr	w17, x15, [x13]
00000000000390e4	cbz	w17, 0x3910c
00000000000390e8	mov	w17, #0x0
00000000000390ec	mov	x15, x16
00000000000390f0	tbz	w17, #0x0, 0x390c0
00000000000390f4	b	0x39118
00000000000390f8	clrex
00000000000390fc	mov	w17, #0x0
0000000000039100	mov	x15, x16
0000000000039104	tbz	w17, #0x0, 0x390c0
0000000000039108	b	0x39118
000000000003910c	mov	w17, #0x1
0000000000039110	mov	x15, x16
0000000000039114	tbz	w17, #0x0, 0x390c0
0000000000039118	str	x3, [sp]
000000000003911c	add	x26, x2, x10, lsl #6
0000000000039120	add	x9, x22, #0x20
0000000000039124	stlr	x8, [x9]
0000000000039128	ldar	x8, [x22]
000000000003912c	add	x25, x8, x26, lsl #24
0000000000039130	add	w8, w1, #0x1
0000000000039134	bfi	x8, x26, #8, #56
0000000000039138	str	x8, [x7]
000000000003913c	ldr	x0, [x22, #0x28]
0000000000039140	mov	x1, x20
0000000000039144	mov	x2, x26
0000000000039148	mov	x3, #0x0
000000000003914c	bl	__mi_bitmap_claim_across
0000000000039150	strb	w0, [x21]
0000000000039154	ldrb	w8, [x22, #0x1e]
0000000000039158	strb	w8, [x24]
000000000003915c	ldrb	w8, [x22, #0x1e]
0000000000039160	cbz	w8, 0x391c0
0000000000039164	mov	w8, #0x1
0000000000039168	ldr	x14, [sp]
000000000003916c	strb	w8, [x23]
0000000000039170	ldrb	w8, [x22, #0x1d]
0000000000039174	cbz	w8, 0x391dc
0000000000039178	mov	w8, #0x1
000000000003917c	strb	w8, [x14]
0000000000039180	b	0x39560
0000000000039184	cbz	x9, 0x3955c
0000000000039188	str	x3, [sp]
000000000003918c	mov	x11, #0x0
0000000000039190	mov	x12, #-0x1
0000000000039194	lsl	x10, x12, x20
0000000000039198	mov	w13, #0x40
000000000003919c	sub	x14, x13, x20
00000000000391a0	add	x15, x20, #0x3f
00000000000391a4	cmp	x20, #0x0
00000000000391a8	csinv	x10, xzr, x10, eq
00000000000391ac	cmp	x20, #0x3f
00000000000391b0	csinv	x16, x10, xzr, ls
00000000000391b4	add	x17, x22, #0x30
00000000000391b8	mov	x10, x8
00000000000391bc	b	0x39258
00000000000391c0	ldrb	w8, [x22, #0x1d]
00000000000391c4	cmp	w8, #0x0
00000000000391c8	cset	w8, ne
00000000000391cc	ldr	x14, [sp]
00000000000391d0	strb	w8, [x23]
00000000000391d4	ldrb	w8, [x22, #0x1d]
00000000000391d8	cbnz	w8, 0x39178
00000000000391dc	ldrb	w8, [x14]
00000000000391e0	cbz	w8, 0x39584
00000000000391e4	ldr	x0, [x22, #0x30]
00000000000391e8	add	x3, sp, #0xf
00000000000391ec	mov	x1, x20
00000000000391f0	mov	x2, x26
00000000000391f4	bl	__mi_bitmap_claim_across
00000000000391f8	ldrb	w8, [sp, #0xf]
00000000000391fc	cbz	w8, 0x39560
0000000000039200	lsl	x1, x20, #24
0000000000039204	mov	w19, #0x1
0000000000039208	add	x4, sp, #0xe
000000000003920c	mov	x0, x25
0000000000039210	mov	w2, #0x1
0000000000039214	mov	w3, #0x0
0000000000039218	bl	_mi_os_commitx
000000000003921c	ldrb	w8, [sp, #0xe]
0000000000039220	cbz	w8, 0x39560
0000000000039224	strb	w19, [x21]
0000000000039228	b	0x39560
000000000003922c	ldr	x4, [x0]
0000000000039230	cmn	x4, #0x1
0000000000039234	mvn	x2, x4
0000000000039238	rbit	x2, x2
000000000003923c	clz	x2, x2
0000000000039240	ccmp	x2, x14, #0x2, ne
0000000000039244	b.ls	0x394e0
0000000000039248	add	x11, x11, #0x1
000000000003924c	add	x10, x10, #0x1
0000000000039250	cmp	x11, x9
0000000000039254	b.eq	0x3955c
0000000000039258	cmp	x10, x9
000000000003925c	csel	x10, x10, xzr, lo
0000000000039260	cmp	x20, #0x40
0000000000039264	b.hi	0x39288
0000000000039268	add	x0, x22, x10, lsl #3
000000000003926c	ldr	x4, [x0, #0x38]
0000000000039270	cmn	x4, #0x1
0000000000039274	mvn	x2, x4
0000000000039278	rbit	x2, x2
000000000003927c	clz	x2, x2
0000000000039280	ccmp	x2, x14, #0x2, ne
0000000000039284	b.ls	0x39460
0000000000039288	add	x0, x22, x10, lsl #3
000000000003928c	ldr	x6, [x0, #0x38]
0000000000039290	clz	x27, x6
0000000000039294	cbz	x27, 0x39248
0000000000039298	mov	x3, #0x0
000000000003929c	add	x0, x0, #0x38
00000000000392a0	sub	x4, x9, x10
00000000000392a4	add	x5, x17, x10, lsl #3
00000000000392a8	cmp	x27, x20
00000000000392ac	b.hs	0x3922c
00000000000392b0	sub	x2, x15, x27
00000000000392b4	cmp	x4, x2, lsr #6
00000000000392b8	b.ls	0x39248
00000000000392bc	mov	x26, x5
00000000000392c0	mov	x2, x27
00000000000392c4	ldr	x30, [x26, #0x10]
00000000000392c8	add	x25, x2, #0x40
00000000000392cc	sub	x28, x20, x2
00000000000392d0	cmp	x25, x20
00000000000392d4	csel	x28, x28, x13, hi
00000000000392d8	lsl	x25, x12, x28
00000000000392dc	cmp	x28, #0x0
00000000000392e0	csinv	x25, xzr, x25, eq
00000000000392e4	cmp	x28, #0x3f
00000000000392e8	csel	x25, x12, x25, hi
00000000000392ec	tst	x25, x30
00000000000392f0	b.ne	0x39248
00000000000392f4	add	x2, x28, x2
00000000000392f8	add	x26, x26, #0x8
00000000000392fc	cmp	x2, x20
0000000000039300	b.lo	0x392c4
0000000000039304	sub	x2, x13, x27
0000000000039308	lsl	x28, x12, x27
000000000003930c	mvn	x28, x28
0000000000039310	neg	x27, x27
0000000000039314	lsl	x27, x28, x27
0000000000039318	cmp	x6, #0x0
000000000003931c	csinv	x6, x27, xzr, ne
0000000000039320	ldr	x27, [x0]
0000000000039324	b	0x39338
0000000000039328	mov	w30, #0x0
000000000003932c	clrex
0000000000039330	mov	x27, x28
0000000000039334	cbnz	w30, 0x39364
0000000000039338	tst	x27, x6
000000000003933c	b.ne	0x3938c
0000000000039340	orr	x30, x27, x6
0000000000039344	ldaxr	x28, [x0]
0000000000039348	cmp	x28, x27
000000000003934c	b.ne	0x39328
0000000000039350	stlxr	w19, x30, [x0]
0000000000039354	cbnz	w19, 0x39344
0000000000039358	mov	w30, #0x1
000000000003935c	mov	x27, x28
0000000000039360	cbz	w30, 0x39338
0000000000039364	mov	x27, x0
0000000000039368	mov	x19, x27
000000000003936c	add	x27, x27, #0x8
0000000000039370	cmp	x19, x26
0000000000039374	b.hs	0x39418
0000000000039378	ldaxr	x19, [x27]
000000000003937c	cbnz	x19, 0x39398
0000000000039380	stlxr	w19, x12, [x27]
0000000000039384	cbnz	w19, 0x39378
0000000000039388	b	0x39368
000000000003938c	mov	x27, x0
0000000000039390	sub	x2, x0, #0x8
0000000000039394	b	0x393ac
0000000000039398	clrex
000000000003939c	sub	x2, x27, #0x8
00000000000393a0	b	0x393ac
00000000000393a4	stlr	xzr, [x2]
00000000000393a8	sub	x2, x2, #0x8
00000000000393ac	cmp	x2, x0
00000000000393b0	b.hi	0x393a4
00000000000393b4	cmp	x2, x0
00000000000393b8	b.ne	0x393fc
00000000000393bc	ldr	x25, [x0]
00000000000393c0	mvn	x2, x6
00000000000393c4	b	0x393d8
00000000000393c8	mov	w26, #0x0
00000000000393cc	clrex
00000000000393d0	mov	x25, x6
00000000000393d4	cbnz	w26, 0x393fc
00000000000393d8	and	x26, x25, x2
00000000000393dc	ldaxr	x6, [x0]
00000000000393e0	cmp	x6, x25
00000000000393e4	b.ne	0x393c8
00000000000393e8	stlxr	w19, x26, [x0]
00000000000393ec	cbnz	w19, 0x393dc
00000000000393f0	mov	w26, #0x1
00000000000393f4	mov	x25, x6
00000000000393f8	cbz	w26, 0x393d8
00000000000393fc	cmp	x3, #0x4
0000000000039400	b.eq	0x39248
0000000000039404	add	x3, x3, #0x1
0000000000039408	ldr	x6, [x0]
000000000003940c	clz	x27, x6
0000000000039410	cbnz	x27, 0x392a8
0000000000039414	b	0x39248
0000000000039418	ldr	x28, [x27]
000000000003941c	b	0x39430
0000000000039420	mov	w30, #0x0
0000000000039424	clrex
0000000000039428	mov	x28, x26
000000000003942c	tbnz	w30, #0x0, 0x3911c
0000000000039430	tst	x28, x25
0000000000039434	b.ne	0x3939c
0000000000039438	orr	x30, x28, x25
000000000003943c	ldaxr	x26, [x27]
0000000000039440	cmp	x26, x28
0000000000039444	b.ne	0x39420
0000000000039448	stlxr	w19, x30, [x27]
000000000003944c	cbnz	w19, 0x3943c
0000000000039450	mov	w30, #0x1
0000000000039454	mov	x28, x26
0000000000039458	tbz	w30, #0x0, 0x39430
000000000003945c	b	0x3911c
0000000000039460	add	x0, x0, #0x38
0000000000039464	lsl	x3, x16, x2
0000000000039468	b	0x3948c
000000000003946c	clz	x5, x5
0000000000039470	eor	x5, x5, #0x3f
0000000000039474	sub	x2, x5, x2
0000000000039478	add	x6, x2, #0x1
000000000003947c	add	x2, x5, #0x1
0000000000039480	lsl	x3, x3, x6
0000000000039484	cmp	x2, x14
0000000000039488	b.hi	0x39288
000000000003948c	ands	x5, x3, x4
0000000000039490	b.ne	0x3946c
0000000000039494	ldaxr	x5, [x0]
0000000000039498	cmp	x5, x4
000000000003949c	b.ne	0x394bc
00000000000394a0	orr	x4, x3, x4
00000000000394a4	stlxr	w6, x4, [x0]
00000000000394a8	cbz	w6, 0x394d0
00000000000394ac	mov	w6, #0x0
00000000000394b0	mov	x4, x5
00000000000394b4	tbz	w6, #0x0, 0x39484
00000000000394b8	b	0x3911c
00000000000394bc	clrex
00000000000394c0	mov	w6, #0x0
00000000000394c4	mov	x4, x5
00000000000394c8	tbz	w6, #0x0, 0x39484
00000000000394cc	b	0x3911c
00000000000394d0	mov	w6, #0x1
00000000000394d4	mov	x4, x5
00000000000394d8	tbz	w6, #0x0, 0x39484
00000000000394dc	b	0x3911c
00000000000394e0	lsl	x3, x16, x2
00000000000394e4	b	0x39508
00000000000394e8	clz	x5, x5
00000000000394ec	eor	x5, x5, #0x3f
00000000000394f0	sub	x2, x5, x2
00000000000394f4	add	x6, x2, #0x1
00000000000394f8	add	x2, x5, #0x1
00000000000394fc	lsl	x3, x3, x6
0000000000039500	cmp	x2, x14
0000000000039504	b.hi	0x39248
0000000000039508	ands	x5, x3, x4
000000000003950c	b.ne	0x394e8
0000000000039510	ldaxr	x5, [x0]
0000000000039514	cmp	x5, x4
0000000000039518	b.ne	0x39538
000000000003951c	orr	x4, x3, x4
0000000000039520	stlxr	w6, x4, [x0]
0000000000039524	cbz	w6, 0x3954c
0000000000039528	mov	w6, #0x0
000000000003952c	mov	x4, x5
0000000000039530	tbz	w6, #0x0, 0x39500
0000000000039534	b	0x3911c
0000000000039538	clrex
000000000003953c	mov	w6, #0x0
0000000000039540	mov	x4, x5
0000000000039544	tbz	w6, #0x0, 0x39500
0000000000039548	b	0x3911c
000000000003954c	mov	w6, #0x1
0000000000039550	mov	x4, x5
0000000000039554	tbz	w6, #0x0, 0x39500
0000000000039558	b	0x3911c
000000000003955c	mov	x25, #0x0
0000000000039560	mov	x0, x25
0000000000039564	ldp	x29, x30, [sp, #0x60]
0000000000039568	ldp	x20, x19, [sp, #0x50]
000000000003956c	ldp	x22, x21, [sp, #0x40]
0000000000039570	ldp	x24, x23, [sp, #0x30]
0000000000039574	ldp	x26, x25, [sp, #0x20]
0000000000039578	ldp	x28, x27, [sp, #0x10]
000000000003957c	add	sp, sp, #0x70
0000000000039580	ret
0000000000039584	ldr	x8, [x22, #0x30]
0000000000039588	lsr	x11, x26, #6
000000000003958c	and	x9, x26, #0x3f
0000000000039590	add	x10, x9, x20
0000000000039594	cmp	x10, #0x40
0000000000039598	b.hi	0x395cc
000000000003959c	mov	x10, #-0x1
00000000000395a0	lsl	x12, x10, x20
00000000000395a4	mvn	x12, x12
00000000000395a8	lsl	x9, x12, x9
00000000000395ac	cmp	x20, #0x0
00000000000395b0	csel	x9, xzr, x9, eq
00000000000395b4	cmp	x20, #0x3f
00000000000395b8	csel	x9, x10, x9, hi
00000000000395bc	ldr	x8, [x8, x11, lsl #3]
00000000000395c0	bics	xzr, x9, x8
00000000000395c4	cset	w8, eq
00000000000395c8	b	0x3917c
00000000000395cc	mov	w10, #0x40
00000000000395d0	sub	x10, x10, x9
00000000000395d4	neg	x12, x9
00000000000395d8	mov	x13, #-0x1
00000000000395dc	lsl	x12, x13, x12
00000000000395e0	mvn	x12, x12
00000000000395e4	lsl	x12, x12, x9
00000000000395e8	cmp	x9, #0x0
00000000000395ec	csinv	x12, x12, xzr, ne
00000000000395f0	sub	x9, x20, x10
00000000000395f4	lsr	x10, x9, #6
00000000000395f8	lsl	x13, x13, x9
00000000000395fc	tst	x9, #0x3f
0000000000039600	csinv	x9, xzr, x13, eq
0000000000039604	add	x11, x8, x11, lsl #3
0000000000039608	ldr	x8, [x11], #0x8
000000000003960c	bics	xzr, x12, x8
0000000000039610	cset	w8, eq
0000000000039614	cbz	x10, 0x39630
0000000000039618	ldr	x12, [x11], #0x8
000000000003961c	cmn	x12, #0x1
0000000000039620	cset	w12, eq
0000000000039624	and	w8, w8, w12
0000000000039628	sub	x10, x10, #0x1
000000000003962c	cbnz	x10, 0x39618
0000000000039630	cbz	x9, 0x3917c
0000000000039634	ldr	x10, [x11]
0000000000039638	bics	xzr, x9, x10
000000000003963c	cset	w9, eq
0000000000039640	and	w8, w8, w9
0000000000039644	b	0x3917c
__mi_bitmap_claim_across:
0000000000039648	lsr	x11, x2, #6
000000000003964c	ands	x8, x2, #0x3f
0000000000039650	add	x9, x8, x1
0000000000039654	mov	w10, #0x40
0000000000039658	sub	x10, x10, x8
000000000003965c	neg	x12, x8
0000000000039660	mov	x13, #-0x1
0000000000039664	lsl	x12, x13, x12
0000000000039668	mvn	x12, x12
000000000003966c	lsl	x12, x12, x8
0000000000039670	csinv	x12, x12, xzr, ne
0000000000039674	sub	x10, x1, x10
0000000000039678	lsr	x14, x10, #6
000000000003967c	ands	x10, x10, #0x3f
0000000000039680	lsl	x10, x13, x10
0000000000039684	csel	x13, x13, x13, eq
0000000000039688	csinv	x15, xzr, x10, eq
000000000003968c	mov	x10, #-0x1
0000000000039690	lsl	x16, x10, x1
0000000000039694	mvn	x16, x16
0000000000039698	lsl	x8, x16, x8
000000000003969c	cmp	x1, #0x0
00000000000396a0	csel	x16, xzr, xzr, eq
00000000000396a4	csel	x8, xzr, x8, eq
00000000000396a8	cmp	x1, #0x3f
00000000000396ac	csel	x16, xzr, x16, hi
00000000000396b0	csel	x8, x10, x8, hi
00000000000396b4	cmp	x9, #0x40
00000000000396b8	csel	x10, x13, x16, hi
00000000000396bc	csel	x8, x12, x8, hi
00000000000396c0	csel	x9, x15, x16, hi
00000000000396c4	csel	x12, x14, x16, hi
00000000000396c8	add	x11, x0, x11, lsl #3
00000000000396cc	ldaxr	x13, [x11]
00000000000396d0	orr	x14, x13, x8
00000000000396d4	stlxr	w15, x14, [x11]
00000000000396d8	cbnz	w15, 0x396cc
00000000000396dc	ands	x13, x13, x8
00000000000396e0	cset	w0, eq
00000000000396e4	cmp	x13, x8
00000000000396e8	cset	w8, ne
00000000000396ec	add	x11, x11, #0x8
00000000000396f0	cbz	x12, 0x39728
00000000000396f4	sub	x12, x12, #0x1
00000000000396f8	ldaxr	x13, [x11]
00000000000396fc	orr	x14, x13, x10
0000000000039700	stlxr	w15, x14, [x11]
0000000000039704	cbnz	w15, 0x396f8
0000000000039708	ands	x13, x13, x10
000000000003970c	cset	w14, eq
0000000000039710	and	w0, w0, w14
0000000000039714	cmp	x13, x10
0000000000039718	cset	w13, ne
000000000003971c	orr	w8, w8, w13
0000000000039720	add	x11, x11, #0x8
0000000000039724	cbnz	x12, 0x396f4
0000000000039728	cbz	x9, 0x39754
000000000003972c	ldaxr	x10, [x11]
0000000000039730	orr	x12, x10, x9
0000000000039734	stlxr	w13, x12, [x11]
0000000000039738	cbnz	w13, 0x3972c
000000000003973c	ands	x10, x10, x9
0000000000039740	cset	w11, eq
0000000000039744	and	w0, w0, w11
0000000000039748	cmp	x10, x9
000000000003974c	cset	w9, ne
0000000000039750	orr	w8, w8, w9
0000000000039754	cbz	x3, 0x39760
0000000000039758	and	w8, w8, #0x1
000000000003975c	strb	w8, [x3]
0000000000039760	ret
__mi_usable_size:
0000000000039764	ands	x12, x0, #0xffffffffffc00000
0000000000039768	b.eq	0x3979c
000000000003976c	and	x8, x0, #0x3fffff
0000000000039770	ldr	x10, [x12, #0x60]
0000000000039774	lsr	x8, x8, x10
0000000000039778	add	x8, x12, x8, lsl #6
000000000003977c	add	x9, x8, #0x78
0000000000039780	ldrb	w11, [x8, #0x7e]
0000000000039784	ldr	w8, [x8, #0x8c]
0000000000039788	tbnz	w11, #0x1, 0x397a4
000000000003978c	ubfx	x10, x8, #26, #6
0000000000039790	cbnz	w10, 0x397b8
0000000000039794	mov	x0, x8
0000000000039798	ret
000000000003979c	mov	x0, #0x0
00000000000397a0	ret
00000000000397a4	ldr	w13, [x12, #0x70]
00000000000397a8	cmp	w13, #0x3
00000000000397ac	b.ne	0x397d0
00000000000397b0	ldr	x11, [x12, #0x48]
00000000000397b4	b	0x397d8
00000000000397b8	and	x10, x9, #0xffffffffffc00000
00000000000397bc	ldr	w11, [x10, #0x70]
00000000000397c0	cmp	w11, #0x3
00000000000397c4	b.ne	0x39830
00000000000397c8	ldr	x12, [x10, #0x48]
00000000000397cc	b	0x3983c
00000000000397d0	mov	w11, #0x1
00000000000397d4	lsl	x11, x11, x10
00000000000397d8	ldrb	w10, [x9]
00000000000397dc	madd	x11, x11, x10, x12
00000000000397e0	cbnz	x10, 0x39814
00000000000397e4	ldr	x12, [x12, #0x50]
00000000000397e8	add	x11, x11, x12
00000000000397ec	cmp	w13, #0x1
00000000000397f0	b.hi	0x39814
00000000000397f4	cbz	w8, 0x39814
00000000000397f8	udiv	x12, x11, x8
00000000000397fc	neg	x13, x11
0000000000039800	madd	x12, x12, x8, x13
0000000000039804	add	x12, x8, x12
0000000000039808	add	x13, x11, x12
000000000003980c	cmp	x12, x8
0000000000039810	csel	x11, x13, x11, lo
0000000000039814	ubfx	x12, x8, #26, #6
0000000000039818	cbnz	w12, 0x39888
000000000003981c	sub	x9, x0, x11
0000000000039820	udiv	x10, x9, x8
0000000000039824	msub	x11, x10, x8, x9
0000000000039828	sub	x0, x8, x11
000000000003982c	ret
0000000000039830	ldr	x12, [x10, #0x60]
0000000000039834	mov	w13, #0x1
0000000000039838	lsl	x12, x13, x12
000000000003983c	ldrb	w9, [x9]
0000000000039840	cbz	x9, 0x3984c
0000000000039844	mov	x0, x12
0000000000039848	ret
000000000003984c	ldr	x13, [x10, #0x50]
0000000000039850	sub	x0, x12, x13
0000000000039854	cmp	w11, #0x1
0000000000039858	ccmp	w8, #0x0, #0x4, ls
000000000003985c	b.eq	0x39884
0000000000039860	madd	x9, x12, x9, x10
0000000000039864	add	x9, x9, x13
0000000000039868	udiv	x10, x9, x8
000000000003986c	neg	x9, x9
0000000000039870	madd	x9, x10, x8, x9
0000000000039874	add	x9, x8, x9
0000000000039878	cmp	x9, x8
000000000003987c	csel	x8, x9, xzr, lo
0000000000039880	sub	x0, x0, x8
0000000000039884	ret
0000000000039888	and	x12, x9, #0xffffffffffc00000
000000000003988c	ldr	w14, [x12, #0x70]
0000000000039890	cmp	w14, #0x3
0000000000039894	b.ne	0x398a0
0000000000039898	ldr	x15, [x12, #0x48]
000000000003989c	b	0x398ac
00000000000398a0	ldr	x13, [x12, #0x60]
00000000000398a4	mov	w15, #0x1
00000000000398a8	lsl	x15, x15, x13
00000000000398ac	cbz	w10, 0x398b8
00000000000398b0	mov	x13, x15
00000000000398b4	b	0x398f0
00000000000398b8	ldr	x16, [x12, #0x50]
00000000000398bc	sub	x13, x15, x16
00000000000398c0	cmp	w14, #0x1
00000000000398c4	ccmp	w8, #0x0, #0x4, ls
00000000000398c8	b.eq	0x398f0
00000000000398cc	madd	x12, x15, x10, x12
00000000000398d0	add	x12, x12, x16
00000000000398d4	udiv	x14, x12, x8
00000000000398d8	neg	x12, x12
00000000000398dc	madd	x12, x14, x8, x12
00000000000398e0	add	x12, x8, x12
00000000000398e4	cmp	x12, x8
00000000000398e8	csel	x12, x12, xzr, lo
00000000000398ec	sub	x13, x13, x12
00000000000398f0	sub	x11, x0, x11
00000000000398f4	udiv	x12, x11, x13
00000000000398f8	msub	x11, x12, x13, x11
00000000000398fc	and	x12, x9, #0xffffffffffc00000
0000000000039900	ldr	w9, [x12, #0x70]
0000000000039904	cmp	w9, #0x3
0000000000039908	b.ne	0x39914
000000000003990c	ldr	x13, [x12, #0x48]
0000000000039910	b	0x39920
0000000000039914	ldr	x13, [x12, #0x60]
0000000000039918	mov	w14, #0x1
000000000003991c	lsl	x13, x14, x13
0000000000039920	cbz	w10, 0x3992c
0000000000039924	sub	x0, x13, x11
0000000000039928	ret
000000000003992c	ldr	x14, [x12, #0x50]
0000000000039930	sub	x15, x13, x14
0000000000039934	madd	x10, x13, x10, x12
0000000000039938	add	x10, x10, x14
000000000003993c	udiv	x12, x10, x8
0000000000039940	neg	x10, x10
0000000000039944	madd	x10, x12, x8, x10
0000000000039948	add	x10, x8, x10
000000000003994c	cmp	x10, x8
0000000000039950	csel	x10, x10, xzr, lo
0000000000039954	sub	x10, x15, x10
0000000000039958	cmp	w9, #0x1
000000000003995c	ccmp	w8, #0x0, #0x4, ls
0000000000039960	csel	x8, x15, x10, eq
0000000000039964	sub	x0, x8, x11
0000000000039968	ret
__mi_heap_malloc_zero:
000000000003996c	stp	x20, x19, [sp, #-0x20]!
0000000000039970	stp	x29, x30, [sp, #0x10]
0000000000039974	add	x29, sp, #0x10
0000000000039978	mov	x20, x1
000000000003997c	cmp	x1, #0x400
0000000000039980	b.hi	0x39a10
0000000000039984	add	x8, x20, #0x7
0000000000039988	and	x8, x8, #0xfffffffffffffff8
000000000003998c	add	x8, x0, x8
0000000000039990	ldr	x8, [x8, #0x8]
0000000000039994	ldr	x19, [x8, #0x8]
0000000000039998	cbz	x19, 0x39a10
000000000003999c	ldr	w9, [x8, #0x10]
00000000000399a0	add	w9, w9, #0x1
00000000000399a4	str	w9, [x8, #0x10]
00000000000399a8	ldr	x9, [x19]
00000000000399ac	str	x9, [x8, #0x8]
00000000000399b0	cbz	x19, 0x399dc
00000000000399b4	cmp	x20, #0x9
00000000000399b8	b.lo	0x399ec
00000000000399bc	and	x8, x19, #0xffffffffffc00000
00000000000399c0	and	x9, x19, #0x3fffff
00000000000399c4	ldr	x10, [x8, #0x60]
00000000000399c8	lsr	x9, x9, x10
00000000000399cc	add	x8, x8, x9, lsl #6
00000000000399d0	ldrb	w8, [x8, #0x7f]
00000000000399d4	tbz	w8, #0x0, 0x399ec
00000000000399d8	str	xzr, [x19]
00000000000399dc	mov	x0, x19
00000000000399e0	ldp	x29, x30, [sp, #0x10]
00000000000399e4	ldp	x20, x19, [sp], #0x20
00000000000399e8	ret
00000000000399ec	mov	x0, x19
00000000000399f0	bl	__mi_usable_size
00000000000399f4	mov	x1, x0
00000000000399f8	mov	x0, x19
00000000000399fc	bl	0x4db14 ; symbol stub for: _bzero
0000000000039a00	mov	x0, x19
0000000000039a04	ldp	x29, x30, [sp, #0x10]
0000000000039a08	ldp	x20, x19, [sp], #0x20
0000000000039a0c	ret
0000000000039a10	mov	x1, x20
0000000000039a14	bl	__mi_malloc_generic
0000000000039a18	mov	x19, x0
0000000000039a1c	cbnz	x19, 0x399b4
0000000000039a20	b	0x399dc
-[NSError(NSErrorKotlinException) kotlinException]:
0000000000039a24	stp	x29, x30, [sp, #-0x10]!
0000000000039a28	mov	x29, sp
0000000000039a2c	nop
0000000000039a30	ldr	x1, #0x2cc60 ; Objc selector ref: userInfo
0000000000039a34	bl	0x4dcb8 ; Objc message: -[x0 userInfo]
0000000000039a38	cbz	x0, 0x39a54
0000000000039a3c	nop
0000000000039a40	ldr	x1, #0x2cbb0 ; Objc selector ref: objectForKeyedSubscript:
0000000000039a44	adr	x2, #0x29f2c ; Objc cfstring ref: @"bad cfstring ref"
0000000000039a48	nop
0000000000039a4c	ldp	x29, x30, [sp], #0x10
0000000000039a50	b	0x4dcb8 ; Objc message: -[x0 objectForKeyedSubscript:]
0000000000039a54	ldp	x29, x30, [sp], #0x10
0000000000039a58	ret
_Kotlin_NSArrayAsKList_get:
0000000000039a5c	stp	x20, x19, [sp, #-0x20]!
0000000000039a60	stp	x29, x30, [sp, #0x10]
0000000000039a64	add	x29, sp, #0x10
0000000000039a68	mov	x19, x2
0000000000039a6c	ldar	x8, [x0]
0000000000039a70	and	x8, x8, #0xfffffffffffffffc
0000000000039a74	ldr	x9, [x8]
0000000000039a78	cmp	x8, #0x0
0000000000039a7c	ccmp	x9, x8, #0x4, ne
0000000000039a80	b.ne	0x39a8c
0000000000039a84	mov	x0, #0x0
0000000000039a88	b	0x39a94
0000000000039a8c	add	x8, x8, #0x10
0000000000039a90	ldar	x0, [x8]
0000000000039a94	sxtw	x2, w1
0000000000039a98	nop
0000000000039a9c	ldr	x1, #0x2cb3c ; Objc selector ref: objectAtIndex:
0000000000039aa0	bl	0x4dcb8 ; Objc message: -[x0 objectAtIndex:]
0000000000039aa4	mov	x20, x0
0000000000039aa8	nop
0000000000039aac	ldr	x0, #0x2cc74 ; Objc class ref: _OBJC_CLASS_$_NSNull
0000000000039ab0	nop
0000000000039ab4	ldr	x1, #0x2cb0c ; Objc selector ref: null
0000000000039ab8	bl	0x4dcb8 ; Objc message: +[NSNull null]
0000000000039abc	cmp	x20, x0
0000000000039ac0	b.eq	0x39ae4
0000000000039ac4	cbz	x20, 0x39ae4
0000000000039ac8	nop
0000000000039acc	ldr	x1, #0x48fcc
0000000000039ad0	mov	x0, x20
0000000000039ad4	mov	x2, x19
0000000000039ad8	ldp	x29, x30, [sp, #0x10]
0000000000039adc	ldp	x20, x19, [sp], #0x20
0000000000039ae0	b	0x4dcb8 ; Objc message: -[x0 null]
0000000000039ae4	str	xzr, [x19]
0000000000039ae8	mov	x0, #0x0
0000000000039aec	ldp	x29, x30, [sp, #0x10]
0000000000039af0	ldp	x20, x19, [sp], #0x20
0000000000039af4	ret
_Kotlin_NSMutableArrayAsKMutableList_add:
0000000000039af8	stp	x20, x19, [sp, #-0x20]!
0000000000039afc	stp	x29, x30, [sp, #0x10]
0000000000039b00	add	x29, sp, #0x10
0000000000039b04	mov	x19, x1
0000000000039b08	ldar	x8, [x0]
0000000000039b0c	and	x8, x8, #0xfffffffffffffffc
0000000000039b10	ldr	x9, [x8]
0000000000039b14	cmp	x8, #0x0
0000000000039b18	ccmp	x9, x8, #0x4, ne
0000000000039b1c	b.ne	0x39b34
0000000000039b20	mov	x20, #0x0
0000000000039b24	cbz	x2, 0x39b40
0000000000039b28	mov	x0, x2
0000000000039b2c	bl	_Kotlin_ObjCExport_refToObjC
0000000000039b30	b	0x39b54
0000000000039b34	add	x8, x8, #0x10
0000000000039b38	ldar	x20, [x8]
0000000000039b3c	cbnz	x2, 0x39b28
0000000000039b40	nop
0000000000039b44	ldr	x0, #0x2cbdc ; Objc class ref: _OBJC_CLASS_$_NSNull
0000000000039b48	nop
0000000000039b4c	ldr	x1, #0x2ca74 ; Objc selector ref: null
0000000000039b50	bl	0x4dcb8 ; Objc message: +[NSNull null]
0000000000039b54	mov	x2, x0
0000000000039b58	sxtw	x3, w19
0000000000039b5c	nop
0000000000039b60	ldr	x1, #0x2ca00 ; Objc selector ref: insertObject:atIndex:
0000000000039b64	mov	x0, x20
0000000000039b68	ldp	x29, x30, [sp, #0x10]
0000000000039b6c	ldp	x20, x19, [sp], #0x20
0000000000039b70	b	0x4dcb8 ; Objc message: -[x0 insertObject:atIndex:]
_Kotlin_NSMutableArrayAsKMutableList_removeAt:
0000000000039b74	stp	x22, x21, [sp, #-0x30]!
0000000000039b78	stp	x20, x19, [sp, #0x10]
0000000000039b7c	stp	x29, x30, [sp, #0x20]
0000000000039b80	add	x29, sp, #0x20
0000000000039b84	mov	x20, x2
0000000000039b88	ldar	x8, [x0]
0000000000039b8c	and	x8, x8, #0xfffffffffffffffc
0000000000039b90	ldr	x9, [x8]
0000000000039b94	cmp	x8, #0x0
0000000000039b98	ccmp	x9, x8, #0x4, ne
0000000000039b9c	b.ne	0x39ba8
0000000000039ba0	mov	x19, #0x0
0000000000039ba4	b	0x39bb0
0000000000039ba8	add	x8, x8, #0x10
0000000000039bac	ldar	x19, [x8]
0000000000039bb0	sxtw	x21, w1
0000000000039bb4	nop
0000000000039bb8	ldr	x1, #0x2ca20 ; Objc selector ref: objectAtIndex:
0000000000039bbc	mov	x0, x19
0000000000039bc0	mov	x2, x21
0000000000039bc4	bl	0x4dcb8 ; Objc message: -[x0 objectAtIndex:]
0000000000039bc8	mov	x22, x0
0000000000039bcc	nop
0000000000039bd0	ldr	x0, #0x2cb50 ; Objc class ref: _OBJC_CLASS_$_NSNull
0000000000039bd4	nop
0000000000039bd8	ldr	x1, #0x2c9e8 ; Objc selector ref: null
0000000000039bdc	bl	0x4dcb8 ; Objc message: +[NSNull null]
0000000000039be0	cmp	x22, x0
0000000000039be4	b.eq	0x39c08
0000000000039be8	cbz	x22, 0x39c0c
0000000000039bec	nop
0000000000039bf0	ldr	x1, #0x48ea8
0000000000039bf4	mov	x0, x22
0000000000039bf8	mov	x2, x20
0000000000039bfc	bl	0x4dcb8 ; Objc message: -[x0 null]
0000000000039c00	mov	x22, x0
0000000000039c04	b	0x39c10
0000000000039c08	mov	x22, #0x0
0000000000039c0c	str	xzr, [x20]
0000000000039c10	nop
0000000000039c14	ldr	x1, #0x2ca0c ; Objc selector ref: removeObjectAtIndex:
0000000000039c18	mov	x0, x19
0000000000039c1c	mov	x2, x21
0000000000039c20	bl	0x4dcb8 ; Objc message: -[x0 removeObjectAtIndex:]
0000000000039c24	mov	x0, x22
0000000000039c28	ldp	x29, x30, [sp, #0x20]
0000000000039c2c	ldp	x20, x19, [sp, #0x10]
0000000000039c30	ldp	x22, x21, [sp], #0x30
0000000000039c34	ret
_Kotlin_NSMutableArrayAsKMutableList_set:
0000000000039c38	stp	x26, x25, [sp, #-0x50]!
0000000000039c3c	stp	x24, x23, [sp, #0x10]
0000000000039c40	stp	x22, x21, [sp, #0x20]
0000000000039c44	stp	x20, x19, [sp, #0x30]
0000000000039c48	stp	x29, x30, [sp, #0x40]
0000000000039c4c	add	x29, sp, #0x40
0000000000039c50	mov	x22, x3
0000000000039c54	mov	x21, x2
0000000000039c58	ldar	x8, [x0]
0000000000039c5c	and	x8, x8, #0xfffffffffffffffc
0000000000039c60	ldr	x9, [x8]
0000000000039c64	cmp	x8, #0x0
0000000000039c68	ccmp	x9, x8, #0x4, ne
0000000000039c6c	b.ne	0x39c78
0000000000039c70	mov	x19, #0x0
0000000000039c74	b	0x39c80
0000000000039c78	add	x8, x8, #0x10
0000000000039c7c	ldar	x19, [x8]
0000000000039c80	sxtw	x20, w1
0000000000039c84	nop
0000000000039c88	ldr	x1, #0x2c950 ; Objc selector ref: objectAtIndex:
0000000000039c8c	mov	x0, x19
0000000000039c90	mov	x2, x20
0000000000039c94	bl	0x4dcb8 ; Objc message: -[x0 objectAtIndex:]
0000000000039c98	mov	x23, x0
0000000000039c9c	adrp	x25, 45 ; 0x66000
0000000000039ca0	ldr	x0, [x25, #0x720] ; Objc class ref: _OBJC_CLASS_$_NSNull
0000000000039ca4	nop
0000000000039ca8	ldr	x24, #0x2c918 ; Objc selector ref: null
0000000000039cac	mov	x1, x24
0000000000039cb0	bl	0x4dcb8 ; Objc message: +[NSNull null]
0000000000039cb4	cmp	x23, x0
0000000000039cb8	b.eq	0x39ce0
0000000000039cbc	cbz	x23, 0x39cf8
0000000000039cc0	nop
0000000000039cc4	ldr	x1, #0x48dd4
0000000000039cc8	mov	x0, x23
0000000000039ccc	mov	x2, x22
0000000000039cd0	bl	0x4dcb8 ; Objc message: -[x0 null]
0000000000039cd4	mov	x23, x0
0000000000039cd8	cbnz	x21, 0x39cec
0000000000039cdc	b	0x39d00
0000000000039ce0	mov	x23, #0x0
0000000000039ce4	str	xzr, [x22]
0000000000039ce8	cbz	x21, 0x39d00
0000000000039cec	mov	x0, x21
0000000000039cf0	bl	_Kotlin_ObjCExport_refToObjC
0000000000039cf4	b	0x39d0c
0000000000039cf8	str	xzr, [x22]
0000000000039cfc	cbnz	x21, 0x39cec
0000000000039d00	ldr	x0, [x25, #0x720]
0000000000039d04	mov	x1, x24
0000000000039d08	bl	0x4dcb8 ; Objc message: -[x0 null]
0000000000039d0c	mov	x3, x0
0000000000039d10	nop
0000000000039d14	ldr	x1, #0x2c91c ; Objc selector ref: replaceObjectAtIndex:withObject:
0000000000039d18	mov	x0, x19
0000000000039d1c	mov	x2, x20
0000000000039d20	bl	0x4dcb8 ; Objc message: -[x0 replaceObjectAtIndex:withObject:]
0000000000039d24	mov	x0, x23
0000000000039d28	ldp	x29, x30, [sp, #0x40]
0000000000039d2c	ldp	x20, x19, [sp, #0x30]
0000000000039d30	ldp	x22, x21, [sp, #0x20]
0000000000039d34	ldp	x24, x23, [sp, #0x10]
0000000000039d38	ldp	x26, x25, [sp], #0x50
0000000000039d3c	ret
_Kotlin_NSEnumeratorAsKIterator_computeNext:
0000000000039d40	sub	sp, sp, #0xd0
0000000000039d44	stp	x28, x27, [sp, #0x70]
0000000000039d48	stp	x26, x25, [sp, #0x80]
0000000000039d4c	stp	x24, x23, [sp, #0x90]
0000000000039d50	stp	x22, x21, [sp, #0xa0]
0000000000039d54	stp	x20, x19, [sp, #0xb0]
0000000000039d58	stp	x29, x30, [sp, #0xc0]
0000000000039d5c	add	x29, sp, #0xc0
0000000000039d60	mov	x19, x0
0000000000039d64	ldar	x8, [x0]
0000000000039d68	and	x8, x8, #0xfffffffffffffffc
0000000000039d6c	ldr	x9, [x8]
0000000000039d70	cmp	x8, #0x0
0000000000039d74	ccmp	x9, x8, #0x4, ne
0000000000039d78	b.ne	0x39dfc
0000000000039d7c	mov	x0, #0x0
0000000000039d80	nop
0000000000039d84	ldr	x1, #0x2c834 ; Objc selector ref: nextObject
0000000000039d88	bl	0x4dcb8 ; Objc message: -[x0 nextObject]
0000000000039d8c	cbz	x0, 0x39e14
0000000000039d90	mov	x21, x0
0000000000039d94	add	x22, sp, #0x8
0000000000039d98	str	xzr, [sp, #0x20]
0000000000039d9c	adrp	x20, 47 ; 0x68000
0000000000039da0	add	x20, x20, #0xa00
0000000000039da4	ldr	x24, [x20]
0000000000039da8	mov	x0, x20
0000000000039dac	blr	x24
0000000000039db0	ldr	x8, [x0]
0000000000039db4	ldr	x9, [x8, #0x110]
0000000000039db8	str	x22, [x8, #0x110]
0000000000039dbc	mov	x8, #0x400000000
0000000000039dc0	stp	x9, x8, [sp, #0x10]
0000000000039dc4	nop
0000000000039dc8	ldr	x0, #0x2c958 ; Objc class ref: _OBJC_CLASS_$_NSNull
0000000000039dcc	nop
0000000000039dd0	ldr	x1, #0x2c7f0 ; Objc selector ref: null
0000000000039dd4	bl	0x4dcb8 ; Objc message: +[NSNull null]
0000000000039dd8	cmp	x21, x0
0000000000039ddc	b.eq	0x39f7c
0000000000039de0	add	x2, x22, #0x18
0000000000039de4	nop
0000000000039de8	ldr	x1, #0x48cb0
0000000000039dec	mov	x0, x21
0000000000039df0	bl	0x4dcb8 ; Objc message: -[x0 null]
0000000000039df4	mov	x21, x0
0000000000039df8	b	0x39f84
0000000000039dfc	add	x8, x8, #0x10
0000000000039e00	ldar	x0, [x8]
0000000000039e04	nop
0000000000039e08	ldr	x1, #0x2c7b0 ; Objc selector ref: nextObject
0000000000039e0c	bl	0x4dcb8 ; Objc message: -[x0 nextObject]
0000000000039e10	cbnz	x0, 0x39d90
0000000000039e14	str	xzr, [sp, #0x28]
0000000000039e18	adrp	x20, 47 ; 0x68000
0000000000039e1c	add	x20, x20, #0xa00
0000000000039e20	ldr	x24, [x20]
0000000000039e24	mov	x0, x20
0000000000039e28	blr	x24
0000000000039e2c	ldr	x8, [x0]
0000000000039e30	ldr	x9, [x8, #0x110]
0000000000039e34	add	x10, sp, #0x28
0000000000039e38	str	x10, [x8, #0x110]
0000000000039e3c	mov	x8, #0x300000000
0000000000039e40	stp	x9, x8, [sp, #0x30]
0000000000039e44	adr	x23, #0x489ff
0000000000039e48	nop
0000000000039e4c	ldarb	w8, [x23]
0000000000039e50	tbz	w8, #0x0, 0x39e58
0000000000039e54	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000039e58	movi.16b	v0, #0x0
0000000000039e5c	stp	q0, q0, [sp, #0x40]
0000000000039e60	str	xzr, [sp, #0x60]
0000000000039e64	mov	x0, x20
0000000000039e68	blr	x24
0000000000039e6c	ldr	x8, [x0]
0000000000039e70	ldr	x9, [x8, #0x110]
0000000000039e74	add	x10, sp, #0x40
0000000000039e78	str	x10, [x8, #0x110]
0000000000039e7c	mov	x8, #0x500000000
0000000000039e80	stp	x9, x8, [sp, #0x48]
0000000000039e84	adr	x25, #0x48a3c
0000000000039e88	nop
0000000000039e8c	ldar	x21, [x25]
0000000000039e90	cmp	x21, #0x2
0000000000039e94	b.hs	0x3a2e0
0000000000039e98	mov	x0, x20
0000000000039e9c	blr	x24
0000000000039ea0	ldr	x26, [x0]
0000000000039ea4	ldp	x8, x9, [x26, #0x120]
0000000000039ea8	cmp	x8, x9
0000000000039eac	b.eq	0x39ecc
0000000000039eb0	mov	x10, x9
0000000000039eb4	ldr	x11, [x10, #-0x10]!
0000000000039eb8	cmp	x11, x25
0000000000039ebc	b.eq	0x3a100
0000000000039ec0	mov	x9, x10
0000000000039ec4	cmp	x10, x8
0000000000039ec8	b.ne	0x39eb4
0000000000039ecc	add	x22, x26, #0x120
0000000000039ed0	add	x0, x26, #0x138
0000000000039ed4	mov	w9, #0x1
0000000000039ed8	ldaxr	w8, [x0]
0000000000039edc	stlxr	w10, w9, [x0]
0000000000039ee0	cbnz	w10, 0x39ed8
0000000000039ee4	b	0x39ef4
0000000000039ee8	mov	w27, #0x1
0000000000039eec	stlxr	w9, x27, [x25]
0000000000039ef0	cbz	w9, 0x39f04
0000000000039ef4	ldaxr	x21, [x25]
0000000000039ef8	cbz	x21, 0x39ee8
0000000000039efc	mov	w27, #0x0
0000000000039f00	clrex
0000000000039f04	cmp	x21, #0x1
0000000000039f08	b.eq	0x39ef4
0000000000039f0c	cbz	x26, 0x39f34
0000000000039f10	ldaxr	w9, [x0]
0000000000039f14	stlxr	w10, w8, [x0]
0000000000039f18	cbnz	w10, 0x39f10
0000000000039f1c	cbnz	w8, 0x39f34
0000000000039f20	cmp	w9, #0x1
0000000000039f24	b.ne	0x39f34
0000000000039f28	ldarb	w8, [x23]
0000000000039f2c	tbz	w8, #0x0, 0x39f34
0000000000039f30	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000039f34	tbz	w27, #0x0, 0x3a0f8
0000000000039f38	ldr	x8, [x26, #0x118]
0000000000039f3c	add	x0, x8, #0x70
0000000000039f40	mov	w1, #0x20
0000000000039f44	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000039f48	mov	x21, x0
0000000000039f4c	adr	x8, #0x1e6d4
0000000000039f50	nop
0000000000039f54	str	x8, [x21, #0x10]!
0000000000039f58	stur	xzr, [x21, #-0x8]
0000000000039f5c	str	x21, [sp, #0x58]
0000000000039f60	ldp	x9, x8, [x26, #0x128]
0000000000039f64	cmp	x9, x8
0000000000039f68	b.hs	0x3a20c
0000000000039f6c	stp	x25, x21, [x9]
0000000000039f70	add	x8, x9, #0x10
0000000000039f74	str	x8, [x26, #0x128]
0000000000039f78	b	0x3a294
0000000000039f7c	mov	x21, #0x0
0000000000039f80	str	xzr, [sp, #0x20]
0000000000039f84	str	xzr, [sp, #0x28]
0000000000039f88	mov	x0, x20
0000000000039f8c	blr	x24
0000000000039f90	ldr	x8, [x0]
0000000000039f94	ldr	x9, [x8, #0x110]
0000000000039f98	add	x10, sp, #0x28
0000000000039f9c	str	x10, [x8, #0x110]
0000000000039fa0	mov	x8, #0x300000000
0000000000039fa4	stp	x9, x8, [sp, #0x30]
0000000000039fa8	adr	x23, #0x4889b
0000000000039fac	nop
0000000000039fb0	ldarb	w8, [x23]
0000000000039fb4	tbz	w8, #0x0, 0x39fbc
0000000000039fb8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000039fbc	movi.16b	v0, #0x0
0000000000039fc0	stp	q0, q0, [sp, #0x40]
0000000000039fc4	str	xzr, [sp, #0x60]
0000000000039fc8	mov	x0, x20
0000000000039fcc	blr	x24
0000000000039fd0	ldr	x8, [x0]
0000000000039fd4	ldr	x9, [x8, #0x110]
0000000000039fd8	add	x10, sp, #0x40
0000000000039fdc	str	x10, [x8, #0x110]
0000000000039fe0	mov	x8, #0x500000000
0000000000039fe4	stp	x9, x8, [sp, #0x48]
0000000000039fe8	str	x21, [x19, #0x10]
0000000000039fec	adr	x25, #0x488d4
0000000000039ff0	nop
0000000000039ff4	ldar	x21, [x25]
0000000000039ff8	cmp	x21, #0x2
0000000000039ffc	b.hs	0x3a1e0
000000000003a000	mov	x0, x20
000000000003a004	blr	x24
000000000003a008	ldr	x26, [x0]
000000000003a00c	ldp	x8, x9, [x26, #0x120]
000000000003a010	cmp	x8, x9
000000000003a014	b.eq	0x3a034
000000000003a018	mov	x10, x9
000000000003a01c	ldr	x11, [x10, #-0x10]!
000000000003a020	cmp	x11, x25
000000000003a024	b.eq	0x3a0ec
000000000003a028	mov	x9, x10
000000000003a02c	cmp	x10, x8
000000000003a030	b.ne	0x3a01c
000000000003a034	add	x22, x26, #0x120
000000000003a038	add	x0, x26, #0x138
000000000003a03c	mov	w9, #0x1
000000000003a040	ldaxr	w8, [x0]
000000000003a044	stlxr	w10, w9, [x0]
000000000003a048	cbnz	w10, 0x3a040
000000000003a04c	b	0x3a05c
000000000003a050	mov	w27, #0x1
000000000003a054	stlxr	w9, x27, [x25]
000000000003a058	cbz	w9, 0x3a06c
000000000003a05c	ldaxr	x21, [x25]
000000000003a060	cbz	x21, 0x3a050
000000000003a064	mov	w27, #0x0
000000000003a068	clrex
000000000003a06c	cmp	x21, #0x1
000000000003a070	b.eq	0x3a05c
000000000003a074	cbz	x26, 0x3a09c
000000000003a078	ldaxr	w9, [x0]
000000000003a07c	stlxr	w10, w8, [x0]
000000000003a080	cbnz	w10, 0x3a078
000000000003a084	cbnz	w8, 0x3a09c
000000000003a088	cmp	w9, #0x1
000000000003a08c	b.ne	0x3a09c
000000000003a090	ldarb	w8, [x23]
000000000003a094	tbz	w8, #0x0, 0x3a09c
000000000003a098	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000003a09c	tbz	w27, #0x0, 0x3a0e4
000000000003a0a0	ldr	x8, [x26, #0x118]
000000000003a0a4	add	x0, x8, #0x70
000000000003a0a8	mov	w1, #0x20
000000000003a0ac	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000003a0b0	mov	x21, x0
000000000003a0b4	adr	x8, #0x1e56c
000000000003a0b8	nop
000000000003a0bc	str	x8, [x21, #0x10]!
000000000003a0c0	stur	xzr, [x21, #-0x8]
000000000003a0c4	str	x21, [sp, #0x58]
000000000003a0c8	ldp	x9, x8, [x26, #0x128]
000000000003a0cc	cmp	x9, x8
000000000003a0d0	b.hs	0x3a10c
000000000003a0d4	stp	x25, x21, [x9]
000000000003a0d8	add	x8, x9, #0x10
000000000003a0dc	str	x8, [x26, #0x128]
000000000003a0e0	b	0x3a194
000000000003a0e4	str	x21, [sp, #0x58]
000000000003a0e8	b	0x3a1e0
000000000003a0ec	ldur	x21, [x9, #-0x8]
000000000003a0f0	str	x21, [sp, #0x58]
000000000003a0f4	b	0x3a1e0
000000000003a0f8	str	x21, [sp, #0x58]
000000000003a0fc	b	0x3a2e0
000000000003a100	ldur	x21, [x9, #-0x8]
000000000003a104	str	x21, [sp, #0x58]
000000000003a108	b	0x3a2e0
000000000003a10c	ldr	x10, [x22]
000000000003a110	sub	x9, x9, x10
000000000003a114	asr	x27, x9, #4
000000000003a118	add	x9, x27, #0x1
000000000003a11c	lsr	x11, x9, #60
000000000003a120	cbnz	x11, 0x3a338
000000000003a124	sub	x8, x8, x10
000000000003a128	asr	x10, x8, #3
000000000003a12c	cmp	x10, x9
000000000003a130	csel	x9, x9, x10, lo
000000000003a134	mov	x10, #0x7ffffffffffffff
000000000003a138	cmp	x10, x8, asr #4
000000000003a13c	mov	x8, #0xfffffffffffffff
000000000003a140	csel	x23, x9, x8, hi
000000000003a144	mov	x0, x23
000000000003a148	mov	w1, #0x10
000000000003a14c	bl	0x4db20 ; symbol stub for: _calloc
000000000003a150	add	x8, x0, x27, lsl #4
000000000003a154	add	x27, x0, x23, lsl #4
000000000003a158	stp	x25, x21, [x8]
000000000003a15c	add	x28, x8, #0x10
000000000003a160	ldp	x1, x9, [x26, #0x120]
000000000003a164	sub	x2, x9, x1
000000000003a168	sub	x23, x8, x2
000000000003a16c	cmp	x2, #0x1
000000000003a170	b.lt	0x3a180
000000000003a174	mov	x0, x23
000000000003a178	bl	0x4dbec ; symbol stub for: _memcpy
000000000003a17c	ldr	x1, [x22]
000000000003a180	stp	x23, x28, [x26, #0x120]
000000000003a184	str	x27, [x26, #0x130]
000000000003a188	cbz	x1, 0x3a194
000000000003a18c	mov	x0, x1
000000000003a190	bl	0x4dba4 ; symbol stub for: _free
000000000003a194	mov	x0, x21
000000000003a198	bl	"_kfun:kotlin.collections.State.$OBJECT.<init>#internal"
000000000003a19c	mov	w0, #0x1
000000000003a1a0	mov	w1, #0x28
000000000003a1a4	bl	0x4db20 ; symbol stub for: _calloc
000000000003a1a8	ldr	x8, [x26, #0x18]!
000000000003a1ac	sub	x9, x26, #0x8
000000000003a1b0	stp	x25, x9, [x0, #0x10]
000000000003a1b4	stp	x8, x26, [x0]
000000000003a1b8	str	x0, [x8, #0x8]
000000000003a1bc	str	x0, [x26]
000000000003a1c0	ldr	x8, [x26, #0x10]
000000000003a1c4	add	x8, x8, #0x1
000000000003a1c8	str	x8, [x26, #0x10]
000000000003a1cc	str	x0, [x0, #0x20]
000000000003a1d0	stlr	x21, [x25]
000000000003a1d4	ldr	x8, [x26, #0x110]
000000000003a1d8	sub	x8, x8, #0x10
000000000003a1dc	str	x8, [x26, #0x110]
000000000003a1e0	ldr	x8, [x21, #0x8]
000000000003a1e4	ldr	w9, [x8, #0x8]
000000000003a1e8	cmp	w9, #0x3
000000000003a1ec	b.ls	0x3a328
000000000003a1f0	ldr	x8, [x8, #0x28]
000000000003a1f4	str	x8, [x19, #0x8]
000000000003a1f8	mov	x0, x20
000000000003a1fc	blr	x24
000000000003a200	ldr	x8, [x0]
000000000003a204	ldr	x9, [sp, #0x10]
000000000003a208	b	0x3a304
000000000003a20c	ldr	x10, [x22]
000000000003a210	sub	x9, x9, x10
000000000003a214	asr	x27, x9, #4
000000000003a218	add	x9, x27, #0x1
000000000003a21c	lsr	x11, x9, #60
000000000003a220	cbnz	x11, 0x3a344
000000000003a224	sub	x8, x8, x10
000000000003a228	asr	x10, x8, #3
000000000003a22c	cmp	x10, x9
000000000003a230	csel	x9, x9, x10, lo
000000000003a234	mov	x10, #0x7ffffffffffffff
000000000003a238	cmp	x10, x8, asr #4
000000000003a23c	mov	x8, #0xfffffffffffffff
000000000003a240	csel	x23, x9, x8, hi
000000000003a244	mov	x0, x23
000000000003a248	mov	w1, #0x10
000000000003a24c	bl	0x4db20 ; symbol stub for: _calloc
000000000003a250	add	x8, x0, x27, lsl #4
000000000003a254	add	x27, x0, x23, lsl #4
000000000003a258	stp	x25, x21, [x8]
000000000003a25c	add	x28, x8, #0x10
000000000003a260	ldp	x1, x9, [x26, #0x120]
000000000003a264	sub	x2, x9, x1
000000000003a268	sub	x23, x8, x2
000000000003a26c	cmp	x2, #0x1
000000000003a270	b.lt	0x3a280
000000000003a274	mov	x0, x23
000000000003a278	bl	0x4dbec ; symbol stub for: _memcpy
000000000003a27c	ldr	x1, [x22]
000000000003a280	stp	x23, x28, [x26, #0x120]
000000000003a284	str	x27, [x26, #0x130]
000000000003a288	cbz	x1, 0x3a294
000000000003a28c	mov	x0, x1
000000000003a290	bl	0x4dba4 ; symbol stub for: _free
000000000003a294	mov	x0, x21
000000000003a298	bl	"_kfun:kotlin.collections.State.$OBJECT.<init>#internal"
000000000003a29c	mov	w0, #0x1
000000000003a2a0	mov	w1, #0x28
000000000003a2a4	bl	0x4db20 ; symbol stub for: _calloc
000000000003a2a8	ldr	x8, [x26, #0x18]!
000000000003a2ac	sub	x9, x26, #0x8
000000000003a2b0	stp	x25, x9, [x0, #0x10]
000000000003a2b4	stp	x8, x26, [x0]
000000000003a2b8	str	x0, [x8, #0x8]
000000000003a2bc	str	x0, [x26]
000000000003a2c0	ldr	x8, [x26, #0x10]
000000000003a2c4	add	x8, x8, #0x1
000000000003a2c8	str	x8, [x26, #0x10]
000000000003a2cc	str	x0, [x0, #0x20]
000000000003a2d0	stlr	x21, [x25]
000000000003a2d4	ldr	x8, [x26, #0x110]
000000000003a2d8	sub	x8, x8, #0x10
000000000003a2dc	str	x8, [x26, #0x110]
000000000003a2e0	ldr	x8, [x21, #0x8]
000000000003a2e4	ldr	w9, [x8, #0x8]
000000000003a2e8	cbz	w9, 0x3a330
000000000003a2ec	ldr	x8, [x8, #0x10]
000000000003a2f0	str	x8, [x19, #0x8]
000000000003a2f4	mov	x0, x20
000000000003a2f8	blr	x24
000000000003a2fc	ldr	x8, [x0]
000000000003a300	ldr	x9, [sp, #0x30]
000000000003a304	str	x9, [x8, #0x110]
000000000003a308	ldp	x29, x30, [sp, #0xc0]
000000000003a30c	ldp	x20, x19, [sp, #0xb0]
000000000003a310	ldp	x22, x21, [sp, #0xa0]
000000000003a314	ldp	x24, x23, [sp, #0x90]
000000000003a318	ldp	x26, x25, [sp, #0x80]
000000000003a31c	ldp	x28, x27, [sp, #0x70]
000000000003a320	add	sp, sp, #0xd0
000000000003a324	ret
000000000003a328	bl	_ThrowArrayIndexOutOfBoundsException
000000000003a32c	b	0x3a398
000000000003a330	bl	_ThrowArrayIndexOutOfBoundsException
000000000003a334	b	0x3a398
000000000003a338	mov	x0, x22
000000000003a33c	bl	0x4d8ec ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
000000000003a340	b	0x3a398
000000000003a344	mov	x0, x22
000000000003a348	bl	0x4d8ec ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
000000000003a34c	b	0x3a398
000000000003a350	bl	0x4da78 ; symbol stub for: ___cxa_begin_catch
000000000003a354	str	xzr, [sp, #0x58]
000000000003a358	stlr	xzr, [x25]
000000000003a35c	ldr	x8, [x26, #0x128]
000000000003a360	sub	x8, x8, #0x10
000000000003a364	str	x8, [x26, #0x128]
000000000003a368	bl	0x4daa8 ; symbol stub for: ___cxa_rethrow
000000000003a36c	b	0x3a398
000000000003a370	mov	x19, x0
000000000003a374	bl	0x4da84 ; symbol stub for: ___cxa_end_catch
000000000003a378	b	0x3a3ac
000000000003a37c	bl	0x4da78 ; symbol stub for: ___cxa_begin_catch
000000000003a380	str	xzr, [sp, #0x58]
000000000003a384	stlr	xzr, [x25]
000000000003a388	ldr	x8, [x26, #0x128]
000000000003a38c	sub	x8, x8, #0x10
000000000003a390	str	x8, [x26, #0x128]
000000000003a394	bl	0x4daa8 ; symbol stub for: ___cxa_rethrow
000000000003a398	brk	#0x1
000000000003a39c	mov	x19, x0
000000000003a3a0	bl	0x4da84 ; symbol stub for: ___cxa_end_catch
000000000003a3a4	b	0x3a3c4
000000000003a3a8	mov	x19, x0
000000000003a3ac	mov	x0, x20
000000000003a3b0	blr	x24
000000000003a3b4	ldr	x8, [x0]
000000000003a3b8	ldr	x9, [sp, #0x30]
000000000003a3bc	b	0x3a3f0
000000000003a3c0	mov	x19, x0
000000000003a3c4	mov	x0, x20
000000000003a3c8	blr	x24
000000000003a3cc	ldr	x8, [x0]
000000000003a3d0	ldr	x9, [sp, #0x30]
000000000003a3d4	str	x9, [x8, #0x110]
000000000003a3d8	b	0x3a3ec
000000000003a3dc	mov	x19, x0
000000000003a3e0	mov	x0, x20
000000000003a3e4	blr	x24
000000000003a3e8	ldr	x8, [x0]
000000000003a3ec	ldr	x9, [sp, #0x10]
000000000003a3f0	str	x9, [x8, #0x110]
000000000003a3f4	mov	x0, x19
000000000003a3f8	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
_Kotlin_NSSetAsKSet_iterator:
000000000003a3fc	stp	x20, x19, [sp, #-0x20]!
000000000003a400	stp	x29, x30, [sp, #0x10]
000000000003a404	add	x29, sp, #0x10
000000000003a408	mov	x19, x1
000000000003a40c	ldar	x8, [x0]
000000000003a410	and	x8, x8, #0xfffffffffffffffc
000000000003a414	ldr	x9, [x8]
000000000003a418	cmp	x8, #0x0
000000000003a41c	ccmp	x9, x8, #0x4, ne
000000000003a420	b.ne	0x3a42c
000000000003a424	mov	x0, #0x0
000000000003a428	b	0x3a434
000000000003a42c	add	x8, x8, #0x10
000000000003a430	ldar	x0, [x8]
000000000003a434	nop
000000000003a438	ldr	x1, #0x2c1a8 ; Objc selector ref: objectEnumerator
000000000003a43c	bl	0x4dcb8 ; Objc message: -[x0 objectEnumerator]
000000000003a440	bl	0x4dce8 ; symbol stub for: _objc_retain
000000000003a444	mov	x20, x0
000000000003a448	bl	_Kotlin_initRuntimeIfNeeded
000000000003a44c	mov	x0, x19
000000000003a450	bl	_Kotlin_NSEnumeratorAsKIterator_create
000000000003a454	mov	x19, x0
000000000003a458	ldar	x8, [x0]
000000000003a45c	and	x8, x8, #0xfffffffffffffffc
000000000003a460	ldr	x9, [x8]
000000000003a464	cmp	x9, x8
000000000003a468	csel	x0, xzr, x8, eq
000000000003a46c	cbz	x0, 0x3a488
000000000003a470	add	x8, x0, #0x10
000000000003a474	stlr	x20, [x8]
000000000003a478	mov	x0, x19
000000000003a47c	ldp	x29, x30, [sp, #0x10]
000000000003a480	ldp	x20, x19, [sp], #0x20
000000000003a484	ret
000000000003a488	mov	x0, x19
000000000003a48c	bl	__ZN6kotlin2mm15ExtraObjectData7InstallEP9ObjHeader
000000000003a490	add	x8, x0, #0x10
000000000003a494	stlr	x20, [x8]
000000000003a498	mov	x0, x19
000000000003a49c	ldp	x29, x30, [sp, #0x10]
000000000003a4a0	ldp	x20, x19, [sp], #0x20
000000000003a4a4	ret
_Kotlin_NSDictionaryAsKMap_keyIterator:
000000000003a4a8	stp	x20, x19, [sp, #-0x20]!
000000000003a4ac	stp	x29, x30, [sp, #0x10]
000000000003a4b0	add	x29, sp, #0x10
000000000003a4b4	mov	x19, x1
000000000003a4b8	ldar	x8, [x0]
000000000003a4bc	and	x8, x8, #0xfffffffffffffffc
000000000003a4c0	ldr	x9, [x8]
000000000003a4c4	cmp	x8, #0x0
000000000003a4c8	ccmp	x9, x8, #0x4, ne
000000000003a4cc	b.ne	0x3a4d8
000000000003a4d0	mov	x0, #0x0
000000000003a4d4	b	0x3a4e0
000000000003a4d8	add	x8, x8, #0x10
000000000003a4dc	ldar	x0, [x8]
000000000003a4e0	nop
000000000003a4e4	ldr	x1, #0x2c09c ; Objc selector ref: keyEnumerator
000000000003a4e8	bl	0x4dcb8 ; Objc message: -[x0 keyEnumerator]
000000000003a4ec	bl	0x4dce8 ; symbol stub for: _objc_retain
000000000003a4f0	mov	x20, x0
000000000003a4f4	bl	_Kotlin_initRuntimeIfNeeded
000000000003a4f8	mov	x0, x19
000000000003a4fc	bl	_Kotlin_NSEnumeratorAsKIterator_create
000000000003a500	mov	x19, x0
000000000003a504	ldar	x8, [x0]
000000000003a508	and	x8, x8, #0xfffffffffffffffc
000000000003a50c	ldr	x9, [x8]
000000000003a510	cmp	x9, x8
000000000003a514	csel	x0, xzr, x8, eq
000000000003a518	cbz	x0, 0x3a534
000000000003a51c	add	x8, x0, #0x10
000000000003a520	stlr	x20, [x8]
000000000003a524	mov	x0, x19
000000000003a528	ldp	x29, x30, [sp, #0x10]
000000000003a52c	ldp	x20, x19, [sp], #0x20
000000000003a530	ret
000000000003a534	mov	x0, x19
000000000003a538	bl	__ZN6kotlin2mm15ExtraObjectData7InstallEP9ObjHeader
000000000003a53c	add	x8, x0, #0x10
000000000003a540	stlr	x20, [x8]
000000000003a544	mov	x0, x19
000000000003a548	ldp	x29, x30, [sp, #0x10]
000000000003a54c	ldp	x20, x19, [sp], #0x20
000000000003a550	ret
_Kotlin_NSDictionaryAsKMap_valueIterator:
000000000003a554	stp	x20, x19, [sp, #-0x20]!
000000000003a558	stp	x29, x30, [sp, #0x10]
000000000003a55c	add	x29, sp, #0x10
000000000003a560	mov	x19, x1
000000000003a564	ldar	x8, [x0]
000000000003a568	and	x8, x8, #0xfffffffffffffffc
000000000003a56c	ldr	x9, [x8]
000000000003a570	cmp	x8, #0x0
000000000003a574	ccmp	x9, x8, #0x4, ne
000000000003a578	b.ne	0x3a584
000000000003a57c	mov	x0, #0x0
000000000003a580	b	0x3a58c
000000000003a584	add	x8, x8, #0x10
000000000003a588	ldar	x0, [x8]
000000000003a58c	nop
000000000003a590	ldr	x1, #0x2c050 ; Objc selector ref: objectEnumerator
000000000003a594	bl	0x4dcb8 ; Objc message: -[x0 objectEnumerator]
000000000003a598	bl	0x4dce8 ; symbol stub for: _objc_retain
000000000003a59c	mov	x20, x0
000000000003a5a0	bl	_Kotlin_initRuntimeIfNeeded
000000000003a5a4	mov	x0, x19
000000000003a5a8	bl	_Kotlin_NSEnumeratorAsKIterator_create
000000000003a5ac	mov	x19, x0
000000000003a5b0	ldar	x8, [x0]
000000000003a5b4	and	x8, x8, #0xfffffffffffffffc
000000000003a5b8	ldr	x9, [x8]
000000000003a5bc	cmp	x9, x8
000000000003a5c0	csel	x0, xzr, x8, eq
000000000003a5c4	cbz	x0, 0x3a5e0
000000000003a5c8	add	x8, x0, #0x10
000000000003a5cc	stlr	x20, [x8]
000000000003a5d0	mov	x0, x19
000000000003a5d4	ldp	x29, x30, [sp, #0x10]
000000000003a5d8	ldp	x20, x19, [sp], #0x20
000000000003a5dc	ret
000000000003a5e0	mov	x0, x19
000000000003a5e4	bl	__ZN6kotlin2mm15ExtraObjectData7InstallEP9ObjHeader
000000000003a5e8	add	x8, x0, #0x10
000000000003a5ec	stlr	x20, [x8]
000000000003a5f0	mov	x0, x19
000000000003a5f4	ldp	x29, x30, [sp, #0x10]
000000000003a5f8	ldp	x20, x19, [sp], #0x20
000000000003a5fc	ret
__ZN5konan13consolePrintfEPKcz:
000000000003a600	stp	x28, x27, [sp, #-0x20]!
000000000003a604	stp	x29, x30, [sp, #0x10]
000000000003a608	add	x29, sp, #0x10
000000000003a60c	sub	sp, sp, #0x410
000000000003a610	mov	x2, x0
000000000003a614	add	x8, x29, #0x10
000000000003a618	str	x8, [sp, #0x8]
000000000003a61c	add	x0, sp, #0x10
000000000003a620	add	x3, x29, #0x10
000000000003a624	mov	w1, #0x400
000000000003a628	bl	0x4ded4 ; symbol stub for: _vsnprintf
000000000003a62c	tbnz	w0, #0x1f, 0x3a648
000000000003a630	cmp	w0, #0x3ff
000000000003a634	mov	w8, #0x3ff
000000000003a638	csel	w2, w0, w8, lo
000000000003a63c	add	x1, sp, #0x10
000000000003a640	mov	w0, #0x1
000000000003a644	bl	0x4dee0 ; symbol stub for: _write
000000000003a648	add	sp, sp, #0x410
000000000003a64c	ldp	x29, x30, [sp, #0x10]
000000000003a650	ldp	x28, x27, [sp], #0x20
000000000003a654	ret
__ZN5konan13consoleErrorfEPKcz:
000000000003a658	stp	x28, x27, [sp, #-0x20]!
000000000003a65c	stp	x29, x30, [sp, #0x10]
000000000003a660	add	x29, sp, #0x10
000000000003a664	sub	sp, sp, #0x410
000000000003a668	mov	x2, x0
000000000003a66c	add	x8, x29, #0x10
000000000003a670	str	x8, [sp, #0x8]
000000000003a674	add	x0, sp, #0x10
000000000003a678	add	x3, x29, #0x10
000000000003a67c	mov	w1, #0x400
000000000003a680	bl	0x4ded4 ; symbol stub for: _vsnprintf
000000000003a684	tbnz	w0, #0x1f, 0x3a6a0
000000000003a688	cmp	w0, #0x3ff
000000000003a68c	mov	w8, #0x3ff
000000000003a690	csel	w2, w0, w8, lo
000000000003a694	add	x1, sp, #0x10
000000000003a698	mov	w0, #0x2
000000000003a69c	bl	0x4dee0 ; symbol stub for: _write
000000000003a6a0	add	sp, sp, #0x410
000000000003a6a4	ldp	x29, x30, [sp, #0x10]
000000000003a6a8	ldp	x28, x27, [sp], #0x20
000000000003a6ac	ret
__ZN5konan15currentThreadIdEv:
000000000003a6b0	sub	sp, sp, #0x20
000000000003a6b4	stp	x29, x30, [sp, #0x10]
000000000003a6b8	add	x29, sp, #0x10
000000000003a6bc	bl	0x4ddf0 ; symbol stub for: _pthread_self
000000000003a6c0	add	x1, sp, #0x8
000000000003a6c4	bl	0x4de14 ; symbol stub for: _pthread_threadid_np
000000000003a6c8	cbnz	w0, 0x3a6e4
000000000003a6cc	ldr	w8, [sp, #0xc]
000000000003a6d0	cbnz	w8, 0x3a6f4
000000000003a6d4	ldr	w0, [sp, #0x8]
000000000003a6d8	ldp	x29, x30, [sp, #0x10]
000000000003a6dc	add	sp, sp, #0x20
000000000003a6e0	ret
000000000003a6e4	adr	x2, #0x1827d ; literal pool for: "Error getting thread id"
000000000003a6e8	nop
000000000003a6ec	mov	w0, #0x0
000000000003a6f0	bl	__ZN6kotlin8internal24RuntimeAssertFailedPanicEbPKcS2_z
000000000003a6f4	adr	x2, #0x18285 ; literal pool for: "Thread id is not a uint32"
000000000003a6f8	nop
000000000003a6fc	mov	w0, #0x0
000000000003a700	bl	__ZN6kotlin8internal24RuntimeAssertFailedPanicEbPKcS2_z
__ZN6kotlin8internal24RuntimeAssertFailedPanicEbPKcS2_z:
000000000003a704	sub	sp, sp, #0x20
000000000003a708	stp	x29, x30, [sp, #0x10]
000000000003a70c	add	x29, sp, #0x10
000000000003a710	mov	x0, x2
000000000003a714	add	x8, x29, #0x10
000000000003a718	str	x8, [sp, #0x8]
000000000003a71c	add	x1, x29, #0x10
000000000003a720	bl	__ZN12_GLOBAL__N_111PrintAssertEbPKcS1_Pc
000000000003a724	bl	__ZN5konan5abortEv
__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN6kotlin11std_support9allocatorIcEEE6appendEPKcm:
000000000003a728	stp	x28, x27, [sp, #-0x60]!
000000000003a72c	stp	x26, x25, [sp, #0x10]
000000000003a730	stp	x24, x23, [sp, #0x20]
000000000003a734	stp	x22, x21, [sp, #0x30]
000000000003a738	stp	x20, x19, [sp, #0x40]
000000000003a73c	stp	x29, x30, [sp, #0x50]
000000000003a740	add	x29, sp, #0x50
000000000003a744	mov	x20, x2
000000000003a748	mov	x21, x1
000000000003a74c	mov	x19, x0
000000000003a750	ldrsb	w9, [x0, #0x17]
000000000003a754	and	x8, x9, #0xff
000000000003a758	tbnz	w9, #0x1f, 0x3a7d8
000000000003a75c	mov	w26, #0x16
000000000003a760	mov	x22, x8
000000000003a764	sub	x9, x26, x22
000000000003a768	cmp	x9, x20
000000000003a76c	b.hs	0x3a7f0
000000000003a770	add	x27, x22, x20
000000000003a774	sub	x9, x27, x26
000000000003a778	mov	x10, #-0x12
000000000003a77c	sub	x10, x10, x26
000000000003a780	cmp	x10, x9
000000000003a784	b.lo	0x3a8c4
000000000003a788	tbnz	w8, #0x7, 0x3a800
000000000003a78c	mov	x23, x19
000000000003a790	mov	x8, #-0x1a
000000000003a794	movk	x8, #0x7fff, lsl #48
000000000003a798	cmp	x26, x8
000000000003a79c	b.hi	0x3a814
000000000003a7a0	lsl	x8, x26, #1
000000000003a7a4	cmp	x27, x8
000000000003a7a8	csel	x8, x8, x27, lo
000000000003a7ac	add	x9, x8, #0x10
000000000003a7b0	and	x9, x9, #0xfffffffffffffff0
000000000003a7b4	cmp	x8, #0x17
000000000003a7b8	mov	w8, #0x17
000000000003a7bc	csel	x24, x8, x9, lo
000000000003a7c0	mov	x0, x24
000000000003a7c4	mov	w1, #0x1
000000000003a7c8	bl	0x4db20 ; symbol stub for: _calloc
000000000003a7cc	mov	x25, x0
000000000003a7d0	cbnz	x22, 0x3a82c
000000000003a7d4	b	0x3a83c
000000000003a7d8	ldp	x22, x9, [x19, #0x8]
000000000003a7dc	and	x9, x9, #0x7fffffffffffffff
000000000003a7e0	sub	x26, x9, #0x1
000000000003a7e4	sub	x9, x26, x22
000000000003a7e8	cmp	x9, x20
000000000003a7ec	b.lo	0x3a770
000000000003a7f0	cbz	x20, 0x3a8a4
000000000003a7f4	tbnz	w8, #0x7, 0x3a870
000000000003a7f8	mov	x23, x19
000000000003a7fc	b	0x3a874
000000000003a800	ldr	x23, [x19]
000000000003a804	mov	x8, #-0x1a
000000000003a808	movk	x8, #0x7fff, lsl #48
000000000003a80c	cmp	x26, x8
000000000003a810	b.ls	0x3a7a0
000000000003a814	mov	x24, #-0x11
000000000003a818	mov	x0, x24
000000000003a81c	mov	w1, #0x1
000000000003a820	bl	0x4db20 ; symbol stub for: _calloc
000000000003a824	mov	x25, x0
000000000003a828	cbz	x22, 0x3a83c
000000000003a82c	mov	x0, x25
000000000003a830	mov	x1, x23
000000000003a834	mov	x2, x22
000000000003a838	bl	0x4dbec ; symbol stub for: _memcpy
000000000003a83c	add	x0, x25, x22
000000000003a840	mov	x1, x21
000000000003a844	mov	x2, x20
000000000003a848	bl	0x4dbec ; symbol stub for: _memcpy
000000000003a84c	cmp	x26, #0x16
000000000003a850	b.eq	0x3a85c
000000000003a854	mov	x0, x23
000000000003a858	bl	0x4dba4 ; symbol stub for: _free
000000000003a85c	orr	x8, x24, #0x8000000000000000
000000000003a860	stp	x27, x8, [x19, #0x8]
000000000003a864	str	x25, [x19]
000000000003a868	add	x8, x25, x27
000000000003a86c	b	0x3a8a0
000000000003a870	ldr	x23, [x19]
000000000003a874	add	x0, x23, x22
000000000003a878	mov	x1, x21
000000000003a87c	mov	x2, x20
000000000003a880	bl	0x4dbec ; symbol stub for: _memcpy
000000000003a884	add	x8, x22, x20
000000000003a888	ldrsb	w9, [x19, #0x17]
000000000003a88c	tbnz	w9, #0x1f, 0x3a898
000000000003a890	strb	w8, [x19, #0x17]
000000000003a894	b	0x3a89c
000000000003a898	str	x8, [x19, #0x8]
000000000003a89c	add	x8, x23, x8
000000000003a8a0	strb	wzr, [x8]
000000000003a8a4	mov	x0, x19
000000000003a8a8	ldp	x29, x30, [sp, #0x50]
000000000003a8ac	ldp	x20, x19, [sp, #0x40]
000000000003a8b0	ldp	x22, x21, [sp, #0x30]
000000000003a8b4	ldp	x24, x23, [sp, #0x20]
000000000003a8b8	ldp	x26, x25, [sp, #0x10]
000000000003a8bc	ldp	x28, x27, [sp], #0x60
000000000003a8c0	ret
000000000003a8c4	mov	x0, x19
000000000003a8c8	bl	0x4d8f8 ; symbol stub for: __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv
__ZN12_GLOBAL__N_111PrintAssertEbPKcS1_Pc:
000000000003a8cc	stp	x24, x23, [sp, #-0x40]!
000000000003a8d0	stp	x22, x21, [sp, #0x10]
000000000003a8d4	stp	x20, x19, [sp, #0x20]
000000000003a8d8	stp	x29, x30, [sp, #0x30]
000000000003a8dc	add	x29, sp, #0x30
000000000003a8e0	sub	sp, sp, #0x400
000000000003a8e4	mov	x20, x1
000000000003a8e8	mov	x21, x0
000000000003a8ec	adr	x2, #0x18034 ; literal pool for: "runtime assert: "
000000000003a8f0	nop
000000000003a8f4	mov	w22, #0x400
000000000003a8f8	mov	x0, sp
000000000003a8fc	mov	w1, #0x400
000000000003a900	bl	__ZN6kotlin12FormatToSpanENS_11std_support4spanIcLm18446744073709551615EEEPKcz
000000000003a904	mov	x19, x1
000000000003a908	cbz	x1, 0x3a944
000000000003a90c	subs	x23, x19, #0x1
000000000003a910	b.ne	0x3a91c
000000000003a914	strb	wzr, [x0]
000000000003a918	b	0x3a944
000000000003a91c	mov	x1, x19
000000000003a920	mov	x2, x21
000000000003a924	mov	x3, x20
000000000003a928	bl	0x4ded4 ; symbol stub for: _vsnprintf
000000000003a92c	mov	w8, w0
000000000003a930	cmp	x23, x8
000000000003a934	csel	x8, x23, x8, lo
000000000003a938	sub	x8, x19, x8
000000000003a93c	tst	w0, #0x80000000
000000000003a940	csel	x19, x19, x8, ne
000000000003a944	sub	w2, w22, w19
000000000003a948	mov	x1, sp
000000000003a94c	mov	w0, #0x2
000000000003a950	bl	0x4dee0 ; symbol stub for: _write
000000000003a954	adr	x0, #0x18343 ; literal pool for: "\n"
000000000003a958	nop
000000000003a95c	bl	__ZN5konan13consoleErrorfEPKcz
000000000003a960	add	sp, sp, #0x400
000000000003a964	ldp	x29, x30, [sp, #0x30]
000000000003a968	ldp	x20, x19, [sp, #0x20]
000000000003a96c	ldp	x22, x21, [sp, #0x10]
000000000003a970	ldp	x24, x23, [sp], #0x40
000000000003a974	ret
000000000003a978	bl	___clang_call_terminate
__ZN5konan5abortEv:
000000000003a97c	stp	x29, x30, [sp, #-0x10]!
000000000003a980	mov	x29, sp
000000000003a984	bl	0x4dae4 ; symbol stub for: _abort
__ZN6kotlin12FormatToSpanENS_11std_support4spanIcLm18446744073709551615EEEPKcz:
000000000003a988	sub	sp, sp, #0x40
000000000003a98c	stp	x22, x21, [sp, #0x10]
000000000003a990	stp	x20, x19, [sp, #0x20]
000000000003a994	stp	x29, x30, [sp, #0x30]
000000000003a998	add	x29, sp, #0x30
000000000003a99c	mov	x20, x1
000000000003a9a0	mov	x19, x0
000000000003a9a4	add	x8, x29, #0x10
000000000003a9a8	str	x8, [sp, #0x8]
000000000003a9ac	cbz	x1, 0x3a9e8
000000000003a9b0	subs	x21, x20, #0x1
000000000003a9b4	b.ne	0x3a9c0
000000000003a9b8	strb	wzr, [x19]
000000000003a9bc	b	0x3a9e8
000000000003a9c0	ldr	x3, [sp, #0x8]
000000000003a9c4	mov	x0, x19
000000000003a9c8	mov	x1, x20
000000000003a9cc	bl	0x4ded4 ; symbol stub for: _vsnprintf
000000000003a9d0	tbnz	w0, #0x1f, 0x3a9e8
000000000003a9d4	mov	w8, w0
000000000003a9d8	cmp	x21, x8
000000000003a9dc	csel	x8, x21, x8, lo
000000000003a9e0	add	x19, x19, x8
000000000003a9e4	sub	x20, x20, x8
000000000003a9e8	mov	x0, x19
000000000003a9ec	mov	x1, x20
000000000003a9f0	ldp	x29, x30, [sp, #0x30]
000000000003a9f4	ldp	x20, x19, [sp, #0x20]
000000000003a9f8	ldp	x22, x21, [sp, #0x10]
000000000003a9fc	add	sp, sp, #0x40
000000000003aa00	ret
__ZN6kotlin10StackTraceILm18446744073709551615EE7currentEm:
000000000003aa04	sub	sp, sp, #0x60
000000000003aa08	stp	x24, x23, [sp, #0x20]
000000000003aa0c	stp	x22, x21, [sp, #0x30]
000000000003aa10	stp	x20, x19, [sp, #0x40]
000000000003aa14	stp	x29, x30, [sp, #0x50]
000000000003aa18	add	x29, sp, #0x50
000000000003aa1c	mov	x19, x0
000000000003aa20	add	x0, sp, #0x8
000000000003aa24	bl	__ZN6kotlin8internal20GetCurrentStackTraceEm
000000000003aa28	stp	xzr, xzr, [x19]
000000000003aa2c	str	xzr, [x19, #0x10]
000000000003aa30	ldp	x20, x8, [sp, #0x8]
000000000003aa34	subs	x21, x8, x20
000000000003aa38	b.eq	0x3aa84
000000000003aa3c	asr	x23, x21, #3
000000000003aa40	lsr	x8, x23, #61
000000000003aa44	cbnz	x8, 0x3aac0
000000000003aa48	mov	x0, x23
000000000003aa4c	mov	w1, #0x8
000000000003aa50	bl	0x4db20 ; symbol stub for: _calloc
000000000003aa54	mov	x22, x0
000000000003aa58	stp	x0, x0, [x19]
000000000003aa5c	add	x8, x0, x23, lsl #3
000000000003aa60	str	x8, [x19, #0x10]
000000000003aa64	cmp	x21, #0x1
000000000003aa68	b.lt	0x3aa80
000000000003aa6c	mov	x0, x22
000000000003aa70	mov	x1, x20
000000000003aa74	mov	x2, x21
000000000003aa78	bl	0x4dbec ; symbol stub for: _memcpy
000000000003aa7c	add	x22, x22, x21
000000000003aa80	str	x22, [x19, #0x8]
000000000003aa84	cbz	x20, 0x3aaa8
000000000003aa88	str	x20, [sp, #0x10]
000000000003aa8c	mov	x0, x20
000000000003aa90	ldp	x29, x30, [sp, #0x50]
000000000003aa94	ldp	x20, x19, [sp, #0x40]
000000000003aa98	ldp	x22, x21, [sp, #0x30]
000000000003aa9c	ldp	x24, x23, [sp, #0x20]
000000000003aaa0	add	sp, sp, #0x60
000000000003aaa4	b	0x4dba4 ; symbol stub for: _free
000000000003aaa8	ldp	x29, x30, [sp, #0x50]
000000000003aaac	ldp	x20, x19, [sp, #0x40]
000000000003aab0	ldp	x22, x21, [sp, #0x30]
000000000003aab4	ldp	x24, x23, [sp, #0x20]
000000000003aab8	add	sp, sp, #0x60
000000000003aabc	ret
000000000003aac0	mov	x0, x19
000000000003aac4	bl	0x4d8ec ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
000000000003aac8	brk	#0x1
000000000003aacc	mov	x20, x0
000000000003aad0	ldr	x0, [x19]
000000000003aad4	cbz	x0, 0x3aae0
000000000003aad8	str	x0, [x19, #0x8]
000000000003aadc	bl	0x4dba4 ; symbol stub for: _free
000000000003aae0	mov	x0, x20
000000000003aae4	bl	___clang_call_terminate
__ZL18snprintf_with_addrPcmmPKvbPKcz:
000000000003aae8	stp	x28, x27, [sp, #-0x60]!
000000000003aaec	stp	x26, x25, [sp, #0x10]
000000000003aaf0	stp	x24, x23, [sp, #0x20]
000000000003aaf4	stp	x22, x21, [sp, #0x30]
000000000003aaf8	stp	x20, x19, [sp, #0x40]
000000000003aafc	stp	x29, x30, [sp, #0x50]
000000000003ab00	add	x29, sp, #0x50
000000000003ab04	sub	sp, sp, #0x290
000000000003ab08	mov	x19, x5
000000000003ab0c	mov	x20, x4
000000000003ab10	mov	x23, x3
000000000003ab14	mov	x22, x2
000000000003ab18	mov	x21, x0
000000000003ab1c	mov	w8, #0x7830
000000000003ab20	movk	w8, #0x30, lsl #16
000000000003ab24	str	w8, [sp, #0x5c]
000000000003ab28	movi.16b	v0, #0x0
000000000003ab2c	stp	q0, q0, [sp, #0x30]
000000000003ab30	add	x1, sp, #0x30
000000000003ab34	mov	x0, x3
000000000003ab38	bl	0x4db8c ; symbol stub for: _dladdr
000000000003ab3c	ldr	x24, [sp, #0x30]
000000000003ab40	cbz	x24, 0x3ab60
000000000003ab44	mov	x0, x24
000000000003ab48	mov	w1, #0x2f
000000000003ab4c	bl	0x4de98 ; symbol stub for: _strrchr
000000000003ab50	cmp	x0, #0x0
000000000003ab54	csinc	x25, x24, x0, eq
000000000003ab58	cbnz	x23, 0x3ab6c
000000000003ab5c	b	0x3abe8
000000000003ab60	adr	x25, #0x17dd4 ; literal pool for: "???"
000000000003ab64	nop
000000000003ab68	cbz	x23, 0x3abe8
000000000003ab6c	sub	x1, x29, #0x70
000000000003ab70	mov	x0, x23
000000000003ab74	bl	0x4db8c ; symbol stub for: _dladdr
000000000003ab78	cbz	w0, 0x3abe8
000000000003ab7c	ldur	x24, [x29, #-0x60]
000000000003ab80	cbz	x24, 0x3ab90
000000000003ab84	sub	x8, x29, #0x70
000000000003ab88	add	x8, x8, #0x18
000000000003ab8c	b	0x3aba0
000000000003ab90	ldur	x24, [x29, #-0x70]
000000000003ab94	cbz	x24, 0x3abc0
000000000003ab98	sub	x8, x29, #0x70
000000000003ab9c	add	x8, x8, #0x8
000000000003aba0	ldr	x8, [x8]
000000000003aba4	sub	x26, x23, x8
000000000003aba8	add	x0, sp, #0x5c
000000000003abac	mov	x1, x24
000000000003abb0	mov	w2, #0x200
000000000003abb4	bl	0x4de8c ; symbol stub for: _strncpy
000000000003abb8	strb	wzr, [sp, #0x25b]
000000000003abbc	b	0x3abec
000000000003abc0	sub	x24, x29, #0x84
000000000003abc4	ldur	x8, [x29, #-0x58]
000000000003abc8	str	x8, [sp]
000000000003abcc	adr	x2, #0x17d92 ; literal pool for: "%p"
000000000003abd0	nop
000000000003abd4	sub	x0, x29, #0x84
000000000003abd8	mov	w1, #0x14
000000000003abdc	bl	__ZN5konan8snprintfEPcmPKcz
000000000003abe0	cmp	w0, #0x1
000000000003abe4	b.ge	0x3ab84
000000000003abe8	mov	x26, x23
000000000003abec	add	x8, sp, #0x5c
000000000003abf0	stp	x8, x26, [sp, #0x18]
000000000003abf4	stp	x25, x23, [sp, #0x8]
000000000003abf8	str	x22, [sp]
000000000003abfc	adr	x2, #0x17d3c ; literal pool for: "%-4zd%-35s %-18p %s + %td "
000000000003ac00	nop
000000000003ac04	mov	x0, x21
000000000003ac08	mov	w1, #0x3ff
000000000003ac0c	bl	__ZN6kotlin12FormatToSpanENS_11std_support4spanIcLm18446744073709551615EEEPKcz
000000000003ac10	cbz	w20, 0x3ac20
000000000003ac14	adr	x2, #0x17d3f ; literal pool for: "[inlined] "
000000000003ac18	nop
000000000003ac1c	bl	__ZN6kotlin12FormatToSpanENS_11std_support4spanIcLm18446744073709551615EEEPKcz
000000000003ac20	add	x8, x29, #0x10
000000000003ac24	stur	x8, [x29, #-0x70]
000000000003ac28	cbz	x1, 0x3ac48
000000000003ac2c	cmp	x1, #0x1
000000000003ac30	b.ne	0x3ac3c
000000000003ac34	strb	wzr, [x0]
000000000003ac38	b	0x3ac48
000000000003ac3c	ldur	x3, [x29, #-0x70]
000000000003ac40	mov	x2, x19
000000000003ac44	bl	0x4ded4 ; symbol stub for: _vsnprintf
000000000003ac48	add	sp, sp, #0x290
000000000003ac4c	ldp	x29, x30, [sp, #0x50]
000000000003ac50	ldp	x20, x19, [sp, #0x40]
000000000003ac54	ldp	x22, x21, [sp, #0x30]
000000000003ac58	ldp	x24, x23, [sp, #0x20]
000000000003ac5c	ldp	x26, x25, [sp, #0x10]
000000000003ac60	ldp	x28, x27, [sp], #0x60
000000000003ac64	ret
__ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEEN6kotlin11std_support9allocatorIcEEEENS6_IS8_EEED1Ev:
000000000003ac68	stp	x22, x21, [sp, #-0x30]!
000000000003ac6c	stp	x20, x19, [sp, #0x10]
000000000003ac70	stp	x29, x30, [sp, #0x20]
000000000003ac74	add	x29, sp, #0x20
000000000003ac78	mov	x19, x0
000000000003ac7c	ldr	x20, [x0]
000000000003ac80	cbz	x20, 0x3acc8
000000000003ac84	ldr	x8, [x19, #0x8]
000000000003ac88	cmp	x8, x20
000000000003ac8c	b.ne	0x3aca4
000000000003ac90	mov	x0, x20
000000000003ac94	b	0x3acc0
000000000003ac98	mov	x8, x21
000000000003ac9c	cmp	x21, x20
000000000003aca0	b.eq	0x3acbc
000000000003aca4	sub	x21, x8, #0x18
000000000003aca8	ldursb	w9, [x8, #-0x1]
000000000003acac	tbz	w9, #0x1f, 0x3ac98
000000000003acb0	ldur	x0, [x8, #-0x18]
000000000003acb4	bl	0x4dba4 ; symbol stub for: _free
000000000003acb8	b	0x3ac98
000000000003acbc	ldr	x0, [x19]
000000000003acc0	str	x20, [x19, #0x8]
000000000003acc4	bl	0x4dba4 ; symbol stub for: _free
000000000003acc8	mov	x0, x19
000000000003accc	ldp	x29, x30, [sp, #0x20]
000000000003acd0	ldp	x20, x19, [sp, #0x10]
000000000003acd4	ldp	x22, x21, [sp], #0x30
000000000003acd8	ret
__ZN6kotlin31NativeOrUnregisteredThreadGuardD1Ev:
000000000003acdc	stp	x20, x19, [sp, #-0x20]!
000000000003ace0	stp	x29, x30, [sp, #0x10]
000000000003ace4	add	x29, sp, #0x10
000000000003ace8	mov	x19, x0
000000000003acec	ldr	x9, [x0, #0x8]
000000000003acf0	cbz	x9, 0x3ad28
000000000003acf4	ldr	w8, [x19, #0x10]
000000000003acf8	add	x0, x9, #0x138
000000000003acfc	ldaxr	w9, [x0]
000000000003ad00	stlxr	w10, w8, [x0]
000000000003ad04	cbnz	w10, 0x3acfc
000000000003ad08	cbnz	w8, 0x3ad28
000000000003ad0c	cmp	w9, #0x1
000000000003ad10	b.ne	0x3ad28
000000000003ad14	adr	x8, #0x47b2f
000000000003ad18	nop
000000000003ad1c	ldarb	w8, [x8]
000000000003ad20	tbz	w8, #0x0, 0x3ad28
000000000003ad24	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000003ad28	mov	x0, x19
000000000003ad2c	ldp	x29, x30, [sp, #0x10]
000000000003ad30	ldp	x20, x19, [sp], #0x20
000000000003ad34	ret
__ZN5konan8snprintfEPcmPKcz:
000000000003ad38	sub	sp, sp, #0x20
000000000003ad3c	stp	x29, x30, [sp, #0x10]
000000000003ad40	add	x29, sp, #0x10
000000000003ad44	add	x8, x29, #0x10
000000000003ad48	str	x8, [sp, #0x8]
000000000003ad4c	add	x3, x29, #0x10
000000000003ad50	bl	0x4ded4 ; symbol stub for: _vsnprintf
000000000003ad54	ldp	x29, x30, [sp, #0x10]
000000000003ad58	add	sp, sp, #0x20
000000000003ad5c	ret
__ZN6kotlin8internal20GetCurrentStackTraceEm:
000000000003ad60	sub	sp, sp, #0x60
000000000003ad64	stp	x22, x21, [sp, #0x30]
000000000003ad68	stp	x20, x19, [sp, #0x40]
000000000003ad6c	stp	x29, x30, [sp, #0x50]
000000000003ad70	add	x29, sp, #0x50
000000000003ad74	mov	x19, x0
000000000003ad78	str	xzr, [sp, #0x20]
000000000003ad7c	mov	w8, #0x1
000000000003ad80	str	w8, [sp, #0x28]
000000000003ad84	strb	wzr, [sp, #0x2c]
000000000003ad88	adrp	x0, 46 ; 0x68000
000000000003ad8c	add	x0, x0, #0xa00
000000000003ad90	ldr	x8, [x0]
000000000003ad94	blr	x8
000000000003ad98	ldr	x8, [x0]
000000000003ad9c	cbz	x8, 0x3adc4
000000000003ada0	add	x9, x8, #0x138
000000000003ada4	mov	w11, #0x1
000000000003ada8	ldaxr	w10, [x9]
000000000003adac	stlxr	w12, w11, [x9]
000000000003adb0	cbnz	w12, 0x3ada8
000000000003adb4	str	x8, [sp, #0x20]
000000000003adb8	str	w10, [sp, #0x28]
000000000003adbc	mov	w8, #0x1
000000000003adc0	strb	w8, [sp, #0x2c]
000000000003adc4	stp	xzr, xzr, [sp]
000000000003adc8	str	xzr, [sp, #0x10]
000000000003adcc	mov	x0, sp
000000000003add0	mov	w1, #0x82
000000000003add4	bl	__ZNSt3__16vectorIPvN6kotlin11std_support9allocatorIS1_EEE8__appendEm
000000000003add8	ldp	x0, x8, [sp]
000000000003addc	sub	x8, x8, x0
000000000003ade0	lsr	x1, x8, #3
000000000003ade4	bl	0x4db08 ; symbol stub for: _backtrace
000000000003ade8	cmp	w0, #0x4
000000000003adec	b.ls	0x3ae34
000000000003adf0	sxtw	x9, w0
000000000003adf4	ldp	x0, x8, [sp]
000000000003adf8	sub	x10, x8, x0
000000000003adfc	asr	x10, x10, #3
000000000003ae00	cmp	x10, x9
000000000003ae04	b.hs	0x3ae50
000000000003ae08	sub	x1, x9, x10
000000000003ae0c	mov	x0, sp
000000000003ae10	bl	__ZNSt3__16vectorIPvN6kotlin11std_support9allocatorIS1_EEE8__appendEm
000000000003ae14	ldp	x21, x8, [sp]
000000000003ae18	mov	x0, x21
000000000003ae1c	sub	x9, x21, x0
000000000003ae20	add	x9, x9, x21
000000000003ae24	add	x1, x9, #0x20
000000000003ae28	subs	x20, x8, x1
000000000003ae2c	b.ne	0x3ae74
000000000003ae30	b	0x3ae80
000000000003ae34	stp	xzr, xzr, [x19]
000000000003ae38	str	xzr, [x19, #0x10]
000000000003ae3c	ldr	x0, [sp]
000000000003ae40	cbz	x0, 0x3ae98
000000000003ae44	str	x0, [sp, #0x8]
000000000003ae48	bl	0x4dba4 ; symbol stub for: _free
000000000003ae4c	b	0x3ae98
000000000003ae50	b.ls	0x3ae5c
000000000003ae54	add	x8, x0, x9, lsl #3
000000000003ae58	str	x8, [sp, #0x8]
000000000003ae5c	mov	x21, x0
000000000003ae60	sub	x9, x21, x0
000000000003ae64	add	x9, x9, x21
000000000003ae68	add	x1, x9, #0x20
000000000003ae6c	subs	x20, x8, x1
000000000003ae70	b.eq	0x3ae80
000000000003ae74	mov	x2, x20
000000000003ae78	bl	0x4dbf8 ; symbol stub for: _memmove
000000000003ae7c	ldr	x0, [sp]
000000000003ae80	add	x8, x21, x20
000000000003ae84	stp	x0, x8, [x19]
000000000003ae88	ldr	x8, [sp, #0x10]
000000000003ae8c	str	x8, [x19, #0x10]
000000000003ae90	stp	xzr, xzr, [sp]
000000000003ae94	str	xzr, [sp, #0x10]
000000000003ae98	ldr	x9, [sp, #0x20]
000000000003ae9c	cbz	x9, 0x3aed4
000000000003aea0	ldr	w8, [sp, #0x28]
000000000003aea4	add	x0, x9, #0x138
000000000003aea8	ldaxr	w9, [x0]
000000000003aeac	stlxr	w10, w8, [x0]
000000000003aeb0	cbnz	w10, 0x3aea8
000000000003aeb4	cbnz	w8, 0x3aed4
000000000003aeb8	cmp	w9, #0x1
000000000003aebc	b.ne	0x3aed4
000000000003aec0	adr	x8, #0x47983
000000000003aec4	nop
000000000003aec8	ldarb	w8, [x8]
000000000003aecc	tbz	w8, #0x0, 0x3aed4
000000000003aed0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000003aed4	ldp	x29, x30, [sp, #0x50]
000000000003aed8	ldp	x20, x19, [sp, #0x40]
000000000003aedc	ldp	x22, x21, [sp, #0x30]
000000000003aee0	add	sp, sp, #0x60
000000000003aee4	ret
000000000003aee8	b	0x3aeec
000000000003aeec	mov	x19, x0
000000000003aef0	mov	x0, sp
000000000003aef4	bl	__ZNSt3__16vectorIPvN6kotlin11std_support9allocatorIS1_EEED1Ev
000000000003aef8	add	x0, sp, #0x18
000000000003aefc	bl	__ZN6kotlin31NativeOrUnregisteredThreadGuardD1Ev
000000000003af00	mov	x0, x19
000000000003af04	bl	___clang_call_terminate
__ZNSt3__16vectorIPvN6kotlin11std_support9allocatorIS1_EEE8__appendEm:
000000000003af08	stp	x26, x25, [sp, #-0x50]!
000000000003af0c	stp	x24, x23, [sp, #0x10]
000000000003af10	stp	x22, x21, [sp, #0x20]
000000000003af14	stp	x20, x19, [sp, #0x30]
000000000003af18	stp	x29, x30, [sp, #0x40]
000000000003af1c	add	x29, sp, #0x40
000000000003af20	mov	x22, x1
000000000003af24	mov	x19, x0
000000000003af28	ldp	x0, x8, [x0, #0x8]
000000000003af2c	sub	x9, x8, x0
000000000003af30	cmp	x1, x9, asr #3
000000000003af34	b.ls	0x3af88
000000000003af38	ldr	x20, [x19]
000000000003af3c	sub	x21, x0, x20
000000000003af40	asr	x25, x21, #3
000000000003af44	add	x9, x25, x22
000000000003af48	lsr	x10, x9, #61
000000000003af4c	cbnz	x10, 0x3b01c
000000000003af50	sub	x8, x8, x20
000000000003af54	asr	x10, x8, #2
000000000003af58	cmp	x10, x9
000000000003af5c	csel	x9, x9, x10, lo
000000000003af60	mov	x10, #0xfffffffffffffff
000000000003af64	cmp	x10, x8, asr #3
000000000003af68	mov	x8, #0x1fffffffffffffff
000000000003af6c	csel	x24, x9, x8, hi
000000000003af70	cbz	x24, 0x3afa4
000000000003af74	mov	x0, x24
000000000003af78	mov	w1, #0x8
000000000003af7c	bl	0x4db20 ; symbol stub for: _calloc
000000000003af80	mov	x23, x0
000000000003af84	b	0x3afa8
000000000003af88	cbz	x22, 0x3af9c
000000000003af8c	lsl	x1, x22, #3
000000000003af90	add	x20, x0, x1
000000000003af94	bl	0x4db14 ; symbol stub for: _bzero
000000000003af98	mov	x0, x20
000000000003af9c	str	x0, [x19, #0x8]
000000000003afa0	b	0x3b004
000000000003afa4	mov	x23, #0x0
000000000003afa8	add	x25, x23, x25, lsl #3
000000000003afac	lsl	x22, x22, #3
000000000003afb0	add	x24, x23, x24, lsl #3
000000000003afb4	mov	x0, x25
000000000003afb8	mov	x1, x22
000000000003afbc	bl	0x4db14 ; symbol stub for: _bzero
000000000003afc0	add	x22, x25, x22
000000000003afc4	cmp	x21, #0x1
000000000003afc8	b.lt	0x3afdc
000000000003afcc	mov	x0, x23
000000000003afd0	mov	x1, x20
000000000003afd4	mov	x2, x21
000000000003afd8	bl	0x4dbec ; symbol stub for: _memcpy
000000000003afdc	stp	x23, x22, [x19]
000000000003afe0	str	x24, [x19, #0x10]
000000000003afe4	cbz	x20, 0x3b004
000000000003afe8	mov	x0, x20
000000000003afec	ldp	x29, x30, [sp, #0x40]
000000000003aff0	ldp	x20, x19, [sp, #0x30]
000000000003aff4	ldp	x22, x21, [sp, #0x20]
000000000003aff8	ldp	x24, x23, [sp, #0x10]
000000000003affc	ldp	x26, x25, [sp], #0x50
000000000003b000	b	0x4dba4 ; symbol stub for: _free
000000000003b004	ldp	x29, x30, [sp, #0x40]
000000000003b008	ldp	x20, x19, [sp, #0x30]
000000000003b00c	ldp	x22, x21, [sp, #0x20]
000000000003b010	ldp	x24, x23, [sp, #0x10]
000000000003b014	ldp	x26, x25, [sp], #0x50
000000000003b018	ret
000000000003b01c	mov	x0, x19
000000000003b020	bl	0x4d8ec ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
__ZNSt3__16vectorIPvN6kotlin11std_support9allocatorIS1_EEED1Ev:
000000000003b024	stp	x20, x19, [sp, #-0x20]!
000000000003b028	stp	x29, x30, [sp, #0x10]
000000000003b02c	add	x29, sp, #0x10
000000000003b030	mov	x19, x0
000000000003b034	ldr	x0, [x0]
000000000003b038	cbz	x0, 0x3b044
000000000003b03c	str	x0, [x19, #0x8]
000000000003b040	bl	0x4dba4 ; symbol stub for: _free
000000000003b044	mov	x0, x19
000000000003b048	ldp	x29, x30, [sp, #0x10]
000000000003b04c	ldp	x20, x19, [sp], #0x20
000000000003b050	ret
_Kotlin_initRuntimeIfNeeded:
000000000003b054	sub	sp, sp, #0xc0
000000000003b058	stp	x28, x27, [sp, #0x60]
000000000003b05c	stp	x26, x25, [sp, #0x70]
000000000003b060	stp	x24, x23, [sp, #0x80]
000000000003b064	stp	x22, x21, [sp, #0x90]
000000000003b068	stp	x20, x19, [sp, #0xa0]
000000000003b06c	stp	x29, x30, [sp, #0xb0]
000000000003b070	add	x29, sp, #0xb0
000000000003b074	adrp	x22, 45 ; 0x68000
000000000003b078	add	x22, x22, #0xa48
000000000003b07c	ldr	x23, [x22]
000000000003b080	mov	x0, x22
000000000003b084	blr	x23
000000000003b088	ldr	x8, [x0]
000000000003b08c	cbnz	x8, 0x3b920
000000000003b090	adr	x8, #0x47a38
000000000003b094	nop
000000000003b098	ldarb	w8, [x8]
000000000003b09c	tbz	w8, #0x0, 0x3b960
000000000003b0a0	adr	x8, #0x47840
000000000003b0a4	nop
000000000003b0a8	ldar	x8, [x8]
000000000003b0ac	cmn	x8, #0x1
000000000003b0b0	b.eq	0x3b0dc
000000000003b0b4	add	x8, sp, #0x38
000000000003b0b8	str	x8, [sp, #0x48]
000000000003b0bc	add	x8, sp, #0x48
000000000003b0c0	str	x8, [sp, #0x40]
000000000003b0c4	adr	x0, #0x4781c
000000000003b0c8	nop
000000000003b0cc	adr	x2, #-0xf448
000000000003b0d0	nop
000000000003b0d4	add	x1, sp, #0x40
000000000003b0d8	bl	0x4d91c ; symbol stub for: __ZNSt3__111__call_onceERVmPvPFvS2_E
000000000003b0dc	bl	_mi_thread_init
000000000003b0e0	mov	w0, #0x1
000000000003b0e4	mov	w1, #0x18
000000000003b0e8	bl	0x4db20 ; symbol stub for: _calloc
000000000003b0ec	cbz	x0, 0x3b8c8
000000000003b0f0	mov	x25, x0
000000000003b0f4	stp	xzr, xzr, [x0]
000000000003b0f8	str	xzr, [x0, #0x10]
000000000003b0fc	mov	x0, x22
000000000003b100	blr	x23
000000000003b104	ldr	x8, [x0]
000000000003b108	cbnz	x8, 0x3b990
000000000003b10c	mov	x0, x22
000000000003b110	blr	x23
000000000003b114	str	x25, [x0]
000000000003b118	adr	x8, #0x47748
000000000003b11c	nop
000000000003b120	ldaxr	w9, [x8]
000000000003b124	add	w9, w9, #0x1
000000000003b128	stlxr	w10, w9, [x8]
000000000003b12c	cbnz	w10, 0x3b120
000000000003b130	adr	x8, #0x4772c
000000000003b134	nop
000000000003b138	ldaxr	w9, [x8]
000000000003b13c	cbnz	w9, 0x3b150
000000000003b140	mov	w28, #0x1
000000000003b144	stlxr	w9, w28, [x8]
000000000003b148	cbnz	w9, 0x3b138
000000000003b14c	b	0x3b158
000000000003b150	mov	w28, #0x0
000000000003b154	clrex
000000000003b158	str	x23, [sp, #0x28]
000000000003b15c	bl	__ZN5konan15currentThreadIdEv
000000000003b160	mov	x21, x0
000000000003b164	mov	w19, #0x1
000000000003b168	mov	w0, #0x1
000000000003b16c	mov	w1, #0x160
000000000003b170	bl	0x4db20 ; symbol stub for: _calloc
000000000003b174	mov	x20, x0
000000000003b178	mov	x23, x0
000000000003b17c	str	w21, [x23, #0x8]!
000000000003b180	adr	x21, #0x479c0
000000000003b184	nop
000000000003b188	add	x8, x21, #0x50
000000000003b18c	add	x9, x0, #0x18
000000000003b190	stp	x8, x9, [x0, #0x10]
000000000003b194	str	x9, [x0, #0x20]
000000000003b198	add	x8, x0, #0x30
000000000003b19c	stp	x8, x8, [x0, #0x30]
000000000003b1a0	movi.16b	v0, #0x0
000000000003b1a4	stp	q0, q0, [x0, #0x40]
000000000003b1a8	stp	q0, q0, [x0, #0x60]
000000000003b1ac	mov	w8, #0x3f800000
000000000003b1b0	str	w8, [x0, #0x80]
000000000003b1b4	stp	xzr, xzr, [x0, #0x88]
000000000003b1b8	add	x8, x21, #0x88
000000000003b1bc	stp	xzr, x8, [x0, #0x98]
000000000003b1c0	add	x8, x0, #0xa8
000000000003b1c4	stp	x8, x8, [x0, #0xa8]
000000000003b1c8	add	x8, x0, #0xc0
000000000003b1cc	stp	x8, x8, [x0, #0xc0]
000000000003b1d0	add	x8, x21, #0xc0
000000000003b1d4	add	x9, x0, #0xe0
000000000003b1d8	stp	x8, x9, [x0, #0xd8]
000000000003b1dc	str	x9, [x0, #0xe8]
000000000003b1e0	add	x8, x0, #0xf8
000000000003b1e4	stp	x8, x8, [x0, #0xf8]
000000000003b1e8	add	x0, x0, #0x118
000000000003b1ec	stp	xzr, xzr, [x20, #0x108]
000000000003b1f0	add	x1, x21, #0xf8
000000000003b1f4	mov	x2, x23
000000000003b1f8	bl	__ZN6kotlin2gc2GC10ThreadDataC1ERS1_RNS_2mm10ThreadDataE
000000000003b1fc	stp	xzr, xzr, [x20, #0x120]
000000000003b200	str	xzr, [x20, #0x130]
000000000003b204	str	w19, [x20, #0x138]
000000000003b208	str	x23, [x20, #0x140]
000000000003b20c	strb	wzr, [x20, #0x148]
000000000003b210	stp	xzr, xzr, [x20, #0x150]
000000000003b214	mov	x0, x21
000000000003b218	bl	0x4d94c ; symbol stub for: __ZNSt3__115recursive_mutex4lockEv
000000000003b21c	adr	x8, #0x47914
000000000003b220	nop
000000000003b224	ldr	x9, [x8]
000000000003b228	add	x10, x9, #0x158
000000000003b22c	add	x11, x8, #0x8
000000000003b230	cmp	x9, #0x0
000000000003b234	csel	x10, x11, x10, eq
000000000003b238	csel	x9, xzr, x9, eq
000000000003b23c	str	x20, [x10]
000000000003b240	str	xzr, [x8]
000000000003b244	ldr	x21, [x20, #0x150]
000000000003b248	str	x9, [x20, #0x150]
000000000003b24c	cbz	x21, 0x3b284
000000000003b250	mov	x0, x21
000000000003b254	bl	__ZNSt3__116allocator_traitsIN6kotlin11std_support9allocatorINS1_14SingleLockListINS1_2mm10ThreadDataENS_15recursive_mutexENS3_IS6_EEE4NodeEEEE9__destroyISA_EEvNS_17integral_constantIbLb0EEERSB_PT_
000000000003b258	mov	x0, x21
000000000003b25c	bl	0x4dba4 ; symbol stub for: _free
000000000003b260	adrp	x8, 71 ; 0x82000
000000000003b264	ldr	x21, [x8, #0xb30]
000000000003b268	str	x20, [x8, #0xb30]
000000000003b26c	cbz	x21, 0x3b28c
000000000003b270	mov	x0, x21
000000000003b274	bl	__ZNSt3__116allocator_traitsIN6kotlin11std_support9allocatorINS1_14SingleLockListINS1_2mm10ThreadDataENS_15recursive_mutexENS3_IS6_EEE4NodeEEEE9__destroyISA_EEvNS_17integral_constantIbLb0EEERSB_PT_
000000000003b278	mov	x0, x21
000000000003b27c	bl	0x4dba4 ; symbol stub for: _free
000000000003b280	b	0x3b28c
000000000003b284	adrp	x8, 71 ; 0x82000
000000000003b288	str	x20, [x8, #0xb30]
000000000003b28c	add	x21, x20, #0x138
000000000003b290	adr	x0, #0x478b0
000000000003b294	nop
000000000003b298	bl	0x4d958 ; symbol stub for: __ZNSt3__115recursive_mutex6unlockEv
000000000003b29c	adrp	x26, 45 ; 0x68000
000000000003b2a0	add	x26, x26, #0xa00
000000000003b2a4	ldr	x23, [x26]
000000000003b2a8	mov	x0, x26
000000000003b2ac	blr	x23
000000000003b2b0	str	x20, [x0]
000000000003b2b4	str	x20, [x25]
000000000003b2b8	ldaxr	w19, [x21]
000000000003b2bc	stlxr	w8, wzr, [x21]
000000000003b2c0	cbnz	w8, 0x3b2b8
000000000003b2c4	cmp	w19, #0x1
000000000003b2c8	b.ne	0x3b2e4
000000000003b2cc	adr	x8, #0x47577
000000000003b2d0	nop
000000000003b2d4	ldarb	w8, [x8]
000000000003b2d8	tbz	w8, #0x0, 0x3b2e4
000000000003b2dc	mov	x0, x21
000000000003b2e0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000003b2e4	ldr	x22, [x25]
000000000003b2e8	adrp	x0, 45 ; 0x68000
000000000003b2ec	add	x0, x0, #0xa60
000000000003b2f0	ldr	x8, [x0]
000000000003b2f4	blr	x8
000000000003b2f8	ldr	x24, [x0]
000000000003b2fc	str	x25, [sp, #0x30]
000000000003b300	cbnz	x24, 0x3b6d8
000000000003b304	str	x8, [sp, #0x18]
000000000003b308	bl	__ZN12_GLOBAL__N_18theStateEv
000000000003b30c	str	x22, [sp, #0x10]
000000000003b310	str	x0, [sp, #0x20]
000000000003b314	str	x0, [sp, #0x48]
000000000003b318	mov	w8, #0x1
000000000003b31c	strb	w8, [sp, #0x50]
000000000003b320	str	xzr, [sp, #0x58]
000000000003b324	mov	x0, x26
000000000003b328	blr	x23
000000000003b32c	ldr	x27, [x0]
000000000003b330	add	x24, x27, #0x138
000000000003b334	ldaxr	w25, [x24]
000000000003b338	stlxr	w9, w8, [x24]
000000000003b33c	cbnz	w9, 0x3b334
000000000003b340	ldr	x0, [sp, #0x20]
000000000003b344	bl	0x4ddcc ; symbol stub for: _pthread_mutex_lock
000000000003b348	cbz	x27, 0x3b37c
000000000003b34c	ldaxr	w8, [x24]
000000000003b350	stlxr	w9, w25, [x24]
000000000003b354	cbnz	w9, 0x3b34c
000000000003b358	cbnz	w25, 0x3b37c
000000000003b35c	cmp	w8, #0x1
000000000003b360	b.ne	0x3b37c
000000000003b364	adr	x8, #0x474df
000000000003b368	nop
000000000003b36c	ldarb	w8, [x8]
000000000003b370	tbz	w8, #0x0, 0x3b37c
000000000003b374	mov	x0, x24
000000000003b378	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000003b37c	mov	w22, #0x1
000000000003b380	mov	w0, #0x1
000000000003b384	mov	w1, #0xe0
000000000003b388	bl	0x4db20 ; symbol stub for: _calloc
000000000003b38c	mov	x24, x0
000000000003b390	cbz	x0, 0x3b6b4
000000000003b394	ldr	x10, [sp, #0x20]
000000000003b398	ldr	w8, [x10, #0xe8]
000000000003b39c	add	w9, w8, #0x1
000000000003b3a0	str	w9, [x10, #0xe8]
000000000003b3a4	stp	w8, w22, [x24]
000000000003b3a8	movi.16b	v0, #0x0
000000000003b3ac	mov	x27, x24
000000000003b3b0	str	q0, [x27, #0x8]!
000000000003b3b4	stur	q0, [x24, #0x18]
000000000003b3b8	stur	q0, [x24, #0x28]
000000000003b3bc	str	xzr, [x24, #0x48]
000000000003b3c0	mov	x8, x24
000000000003b3c4	str	xzr, [x8, #0x40]!
000000000003b3c8	str	x8, [x24, #0x38]
000000000003b3cc	stp	xzr, xzr, [x24, #0xd0]
000000000003b3d0	mov	x0, x26
000000000003b3d4	blr	x23
000000000003b3d8	ldr	x25, [x0]
000000000003b3dc	add	x26, x25, #0x138
000000000003b3e0	ldaxr	w23, [x26]
000000000003b3e4	stlxr	w8, w22, [x26]
000000000003b3e8	cbnz	w8, 0x3b3e0
000000000003b3ec	add	x0, x24, #0x58
000000000003b3f0	mov	x1, #0x0
000000000003b3f4	bl	0x4ddc0 ; symbol stub for: _pthread_mutex_init
000000000003b3f8	add	x0, x24, #0x98
000000000003b3fc	mov	x1, #0x0
000000000003b400	bl	0x4dd60 ; symbol stub for: _pthread_cond_init
000000000003b404	cbz	x25, 0x3b438
000000000003b408	ldaxr	w8, [x26]
000000000003b40c	stlxr	w9, w23, [x26]
000000000003b410	cbnz	w9, 0x3b408
000000000003b414	cbnz	w23, 0x3b438
000000000003b418	cmp	w8, #0x1
000000000003b41c	b.ne	0x3b438
000000000003b420	adr	x8, #0x47423
000000000003b424	nop
000000000003b428	ldarb	w8, [x8]
000000000003b42c	tbz	w8, #0x0, 0x3b438
000000000003b430	mov	x0, x26
000000000003b434	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000003b438	ldr	w25, [x24]
000000000003b43c	ldr	x8, [sp, #0x20]
000000000003b440	add	x10, x8, #0x98
000000000003b444	sxtw	x22, w25
000000000003b448	ldr	x26, [x8, #0xa0]
000000000003b44c	str	x10, [sp, #0x8]
000000000003b450	cbz	x26, 0x3b478
000000000003b454	fmov	d0, x26
000000000003b458	cnt.8b	v0, v0
000000000003b45c	uaddlv.8b	h0, v0
000000000003b460	fmov	w8, s0
000000000003b464	cmp	x8, #0x1
000000000003b468	b.hi	0x3b47c
000000000003b46c	sub	x9, x26, #0x1
000000000003b470	and	x23, x9, x22
000000000003b474	b	0x3b490
000000000003b478	b	0x3b4ec
000000000003b47c	mov	x23, x22
000000000003b480	cmp	x26, x22
000000000003b484	b.hi	0x3b490
000000000003b488	udiv	x9, x22, x26
000000000003b48c	msub	x23, x9, x26, x22
000000000003b490	ldr	x9, [x10]
000000000003b494	ldr	x27, [x9, x23, lsl #3]
000000000003b498	cbz	x27, 0x3b4ec
000000000003b49c	sub	x9, x26, #0x1
000000000003b4a0	b	0x3b4bc
000000000003b4a4	and	x10, x10, x9
000000000003b4a8	cmp	x10, x23
000000000003b4ac	b.ne	0x3b4ec
000000000003b4b0	ldr	w10, [x27, #0x10]
000000000003b4b4	cmp	w10, w25
000000000003b4b8	b.eq	0x3b6b0
000000000003b4bc	ldr	x27, [x27]
000000000003b4c0	cbz	x27, 0x3b4ec
000000000003b4c4	ldr	x10, [x27, #0x8]
000000000003b4c8	cmp	x10, x22
000000000003b4cc	b.eq	0x3b4b0
000000000003b4d0	cmp	x8, #0x1
000000000003b4d4	b.ls	0x3b4a4
000000000003b4d8	cmp	x10, x26
000000000003b4dc	b.lo	0x3b4a8
000000000003b4e0	udiv	x11, x10, x26
000000000003b4e4	msub	x10, x11, x26, x10
000000000003b4e8	b	0x3b4a8
000000000003b4ec	mov	w0, #0x1
000000000003b4f0	mov	w1, #0x20
000000000003b4f4	bl	0x4db20 ; symbol stub for: _calloc
000000000003b4f8	mov	x27, x0
000000000003b4fc	str	w25, [x0, #0x10]
000000000003b500	str	x22, [x0, #0x8]
000000000003b504	ldr	x25, [sp, #0x20]
000000000003b508	ldr	x8, [x25, #0xb0]
000000000003b50c	add	x8, x8, #0x1
000000000003b510	ucvtf	s0, x8
000000000003b514	ldr	s1, [x25, #0xb8]
000000000003b518	cbz	x26, 0x3b52c
000000000003b51c	ucvtf	s2, x26
000000000003b520	fmul	s2, s1, s2
000000000003b524	fcmp	s2, s0
000000000003b528	b.pl	0x3b634
000000000003b52c	cmp	x26, #0x3
000000000003b530	cset	w8, lo
000000000003b534	sub	x9, x26, #0x1
000000000003b538	tst	x26, x9
000000000003b53c	cset	w9, ne
000000000003b540	orr	w8, w8, w9
000000000003b544	bfi	x8, x26, #1, #63
000000000003b548	fdiv	s0, s0, s1
000000000003b54c	fcvtpu	x9, s0
000000000003b550	cmp	x8, x9
000000000003b554	csel	x26, x9, x8, lo
000000000003b558	subs	x8, x26, #0x1
000000000003b55c	b.ne	0x3b568
000000000003b560	mov	w26, #0x2
000000000003b564	b	0x3b57c
000000000003b568	tst	x26, x8
000000000003b56c	b.eq	0x3b57c
000000000003b570	mov	x0, x26
000000000003b574	bl	0x4d928 ; symbol stub for: __ZNSt3__112__next_primeEm
000000000003b578	mov	x26, x0
000000000003b57c	ldr	x23, [x25, #0xa0]
000000000003b580	cmp	x26, x23
000000000003b584	b.ls	0x3b598
000000000003b588	ldr	x0, [sp, #0x8]
000000000003b58c	mov	x1, x26
000000000003b590	bl	__ZNSt3__112__hash_tableINS_17__hash_value_typeIiP6WorkerEENS_22__unordered_map_hasherIiS4_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS4_NS_8equal_toIiEELb1EEEN6kotlin11std_support9allocatorIS4_EEE8__rehashEm
000000000003b594	b	0x3b604
000000000003b598	b.hs	0x3b604
000000000003b59c	ldr	x8, [x25, #0xb0]
000000000003b5a0	ucvtf	s0, x8
000000000003b5a4	ldr	s1, [x25, #0xb8]
000000000003b5a8	fdiv	s0, s0, s1
000000000003b5ac	fcvtpu	x0, s0
000000000003b5b0	cmp	x23, #0x3
000000000003b5b4	b.lo	0x3b5f0
000000000003b5b8	fmov	d0, x23
000000000003b5bc	cnt.8b	v0, v0
000000000003b5c0	uaddlv.8b	h0, v0
000000000003b5c4	fmov	w8, s0
000000000003b5c8	cmp	x8, #0x1
000000000003b5cc	b.hi	0x3b5f0
000000000003b5d0	sub	x8, x0, #0x1
000000000003b5d4	clz	x8, x8
000000000003b5d8	neg	x8, x8
000000000003b5dc	mov	w9, #0x1
000000000003b5e0	lsl	x8, x9, x8
000000000003b5e4	cmp	x0, #0x2
000000000003b5e8	csel	x0, x0, x8, lo
000000000003b5ec	b	0x3b5f4
000000000003b5f0	bl	0x4d928 ; symbol stub for: __ZNSt3__112__next_primeEm
000000000003b5f4	cmp	x26, x0
000000000003b5f8	csel	x26, x0, x26, lo
000000000003b5fc	cmp	x26, x23
000000000003b600	b.lo	0x3b588
000000000003b604	ldr	x26, [x25, #0xa0]
000000000003b608	sub	x8, x26, #0x1
000000000003b60c	tst	x26, x8
000000000003b610	b.ne	0x3b61c
000000000003b614	and	x23, x8, x22
000000000003b618	b	0x3b634
000000000003b61c	cmp	x26, x22
000000000003b620	b.ls	0x3b62c
000000000003b624	mov	x23, x22
000000000003b628	b	0x3b634
000000000003b62c	udiv	x8, x22, x26
000000000003b630	msub	x23, x8, x26, x22
000000000003b634	ldr	x10, [sp, #0x8]
000000000003b638	ldr	x8, [x10]
000000000003b63c	ldr	x8, [x8, x23, lsl #3]
000000000003b640	cbz	x8, 0x3b650
000000000003b644	ldr	x9, [x8]
000000000003b648	str	x9, [x27]
000000000003b64c	b	0x3b6a0
000000000003b650	mov	x8, x25
000000000003b654	ldr	x9, [x8, #0xa8]!
000000000003b658	str	x9, [x27]
000000000003b65c	str	x27, [x8]
000000000003b660	ldur	x9, [x8, #-0x10]
000000000003b664	str	x8, [x9, x23, lsl #3]
000000000003b668	ldr	x8, [x27]
000000000003b66c	cbz	x8, 0x3b6a4
000000000003b670	ldr	x8, [x8, #0x8]
000000000003b674	sub	x9, x26, #0x1
000000000003b678	tst	x26, x9
000000000003b67c	b.ne	0x3b688
000000000003b680	and	x8, x8, x9
000000000003b684	b	0x3b698
000000000003b688	cmp	x8, x26
000000000003b68c	b.lo	0x3b698
000000000003b690	udiv	x9, x8, x26
000000000003b694	msub	x8, x9, x26, x8
000000000003b698	ldr	x9, [x10]
000000000003b69c	add	x8, x9, x8, lsl #3
000000000003b6a0	str	x27, [x8]
000000000003b6a4	ldr	x8, [x25, #0xb0]
000000000003b6a8	add	x8, x8, #0x1
000000000003b6ac	str	x8, [x25, #0xb0]
000000000003b6b0	str	x24, [x27, #0x18]
000000000003b6b4	add	x0, sp, #0x48
000000000003b6b8	bl	__ZN12_GLOBAL__N_16LockerD1Ev
000000000003b6bc	adrp	x0, 45 ; 0x68000
000000000003b6c0	add	x0, x0, #0xa60
000000000003b6c4	ldr	x8, [sp, #0x18]
000000000003b6c8	blr	x8
000000000003b6cc	str	x24, [x0]
000000000003b6d0	ldr	x25, [sp, #0x30]
000000000003b6d4	ldr	x22, [sp, #0x10]
000000000003b6d8	bl	0x4ddf0 ; symbol stub for: _pthread_self
000000000003b6dc	stp	x0, x22, [x24, #0xd0]
000000000003b6e0	str	x24, [x25, #0x8]
000000000003b6e4	ldr	x23, [x25]
000000000003b6e8	adrp	x26, 71 ; 0x82000
000000000003b6ec	ldr	x22, [x26, #0xab0]
000000000003b6f0	cbz	x22, 0x3b710
000000000003b6f4	ldr	x8, [x22]
000000000003b6f8	mov	w0, #0x0
000000000003b6fc	mov	x1, x23
000000000003b700	blr	x8
000000000003b704	ldr	x22, [x22, #0x8]
000000000003b708	cbnz	x22, 0x3b6f4
000000000003b70c	ldr	x23, [x25]
000000000003b710	mov	x24, x23
000000000003b714	ldr	x8, [x24, #0x48]!
000000000003b718	ldrsw	x22, [x24, #0x44]
000000000003b71c	ldr	x0, [x24, #0x8]
000000000003b720	sub	x9, x0, x8
000000000003b724	asr	x27, x9, #3
000000000003b728	cmp	x27, x22
000000000003b72c	b.hs	0x3b788
000000000003b730	sub	x25, x22, x27
000000000003b734	ldr	x9, [x23, #0x58]
000000000003b738	sub	x10, x9, x0
000000000003b73c	cmp	x25, x10, asr #3
000000000003b740	b.ls	0x3b79c
000000000003b744	tbnz	w22, #0x1f, 0x3b9a4
000000000003b748	sub	x8, x9, x8
000000000003b74c	asr	x9, x8, #2
000000000003b750	cmp	x9, x22
000000000003b754	csel	x9, x22, x9, lo
000000000003b758	mov	x10, #0xfffffffffffffff
000000000003b75c	cmp	x10, x8, asr #3
000000000003b760	mov	x8, #0x1fffffffffffffff
000000000003b764	csel	x8, x9, x8, hi
000000000003b768	cbz	x8, 0x3b7bc
000000000003b76c	str	x8, [sp, #0x20]
000000000003b770	mov	x0, x8
000000000003b774	mov	w1, #0x8
000000000003b778	bl	0x4db20 ; symbol stub for: _calloc
000000000003b77c	mov	x26, x0
000000000003b780	ldr	x8, [sp, #0x20]
000000000003b784	b	0x3b7c0
000000000003b788	ldr	x24, [sp, #0x30]
000000000003b78c	b.ls	0x3b81c
000000000003b790	add	x8, x8, x22, lsl #3
000000000003b794	str	x8, [x23, #0x50]
000000000003b798	b	0x3b81c
000000000003b79c	cbz	x25, 0x3b7b0
000000000003b7a0	lsl	x1, x25, #3
000000000003b7a4	add	x22, x0, x1
000000000003b7a8	bl	0x4db14 ; symbol stub for: _bzero
000000000003b7ac	mov	x0, x22
000000000003b7b0	ldr	x24, [sp, #0x30]
000000000003b7b4	str	x0, [x23, #0x50]
000000000003b7b8	b	0x3b81c
000000000003b7bc	mov	x26, #0x0
000000000003b7c0	add	x27, x26, x27, lsl #3
000000000003b7c4	lsl	x1, x25, #3
000000000003b7c8	add	x8, x26, x8, lsl #3
000000000003b7cc	str	x8, [sp, #0x20]
000000000003b7d0	mov	x0, x27
000000000003b7d4	bl	0x4db14 ; symbol stub for: _bzero
000000000003b7d8	add	x22, x26, x22, lsl #3
000000000003b7dc	ldp	x1, x8, [x23, #0x48]
000000000003b7e0	sub	x2, x8, x1
000000000003b7e4	sub	x25, x27, x2
000000000003b7e8	cmp	x2, #0x1
000000000003b7ec	b.lt	0x3b7fc
000000000003b7f0	mov	x0, x25
000000000003b7f4	bl	0x4dbec ; symbol stub for: _memcpy
000000000003b7f8	ldr	x1, [x24]
000000000003b7fc	ldr	x24, [sp, #0x30]
000000000003b800	adrp	x26, 71 ; 0x82000
000000000003b804	stp	x25, x22, [x23, #0x48]
000000000003b808	ldr	x8, [sp, #0x20]
000000000003b80c	str	x8, [x23, #0x58]
000000000003b810	cbz	x1, 0x3b81c
000000000003b814	mov	x0, x1
000000000003b818	bl	0x4dba4 ; symbol stub for: _free
000000000003b81c	mov	w8, #0x1
000000000003b820	str	w8, [x23, #0x88]
000000000003b824	cbz	w28, 0x3b85c
000000000003b828	nop
000000000003b82c	ldr	x8, #0x47294
000000000003b830	cmn	x8, #0x1
000000000003b834	b.ne	0x3b940
000000000003b838	ldr	x22, [x26, #0xab0]
000000000003b83c	cbz	x22, 0x3b880
000000000003b840	ldr	x23, [x24]
000000000003b844	ldr	x8, [x22]
000000000003b848	mov	w0, #0x1
000000000003b84c	mov	x1, x23
000000000003b850	blr	x8
000000000003b854	ldr	x22, [x22, #0x8]
000000000003b858	cbnz	x22, 0x3b844
000000000003b85c	ldr	x22, [x26, #0xab0]
000000000003b860	cbz	x22, 0x3b880
000000000003b864	ldr	x23, [x24]
000000000003b868	ldr	x8, [x22]
000000000003b86c	mov	w0, #0x2
000000000003b870	mov	x1, x23
000000000003b874	blr	x8
000000000003b878	ldr	x22, [x22, #0x8]
000000000003b87c	cbnz	x22, 0x3b868
000000000003b880	mov	w8, #0x1
000000000003b884	str	w8, [x24, #0x10]
000000000003b888	adrp	x22, 45 ; 0x68000
000000000003b88c	add	x22, x22, #0xa48
000000000003b890	ldr	x23, [sp, #0x28]
000000000003b894	cbz	x20, 0x3b8c8
000000000003b898	ldaxr	w8, [x21]
000000000003b89c	stlxr	w9, w19, [x21]
000000000003b8a0	cbnz	w9, 0x3b898
000000000003b8a4	cbnz	w19, 0x3b8c8
000000000003b8a8	cmp	w8, #0x1
000000000003b8ac	b.ne	0x3b8c8
000000000003b8b0	adr	x8, #0x46f93
000000000003b8b4	nop
000000000003b8b8	ldarb	w8, [x8]
000000000003b8bc	tbz	w8, #0x0, 0x3b8c8
000000000003b8c0	mov	x0, x21
000000000003b8c4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000003b8c8	mov	x0, x22
000000000003b8cc	blr	x23
000000000003b8d0	ldr	x20, [x0]
000000000003b8d4	adr	x0, #0x2caec
000000000003b8d8	nop
000000000003b8dc	adr	x1, #0xae8
000000000003b8e0	nop
000000000003b8e4	bl	0x4dde4 ; symbol stub for: _pthread_once
000000000003b8e8	mov	w0, #0x1
000000000003b8ec	mov	w1, #0x18
000000000003b8f0	bl	0x4db20 ; symbol stub for: _calloc
000000000003b8f4	mov	x19, x0
000000000003b8f8	adr	x8, #0x1e8
000000000003b8fc	nop
000000000003b900	stp	x8, x20, [x0, #0x8]
000000000003b904	adrp	x20, 71 ; 0x82000
000000000003b908	ldr	x0, [x20, #0xaa8]
000000000003b90c	bl	0x4dd90 ; symbol stub for: _pthread_getspecific
000000000003b910	str	x0, [x19]
000000000003b914	ldr	x0, [x20, #0xaa8]
000000000003b918	mov	x1, x19
000000000003b91c	bl	0x4de08 ; symbol stub for: _pthread_setspecific
000000000003b920	ldp	x29, x30, [sp, #0xb0]
000000000003b924	ldp	x20, x19, [sp, #0xa0]
000000000003b928	ldp	x22, x21, [sp, #0x90]
000000000003b92c	ldp	x24, x23, [sp, #0x80]
000000000003b930	ldp	x26, x25, [sp, #0x70]
000000000003b934	ldp	x28, x27, [sp, #0x60]
000000000003b938	add	sp, sp, #0xc0
000000000003b93c	ret
000000000003b940	adr	x0, #0x47180
000000000003b944	nop
000000000003b948	adr	x1, #0x27fa8
000000000003b94c	nop
000000000003b950	bl	0x4db80 ; symbol stub for: _dispatch_once
000000000003b954	ldr	x22, [x26, #0xab0]
000000000003b958	cbnz	x22, 0x3b840
000000000003b95c	b	0x3b880
000000000003b960	adr	x20, #0x47168
000000000003b964	nop
000000000003b968	mov	x0, x20
000000000003b96c	bl	0x4da90 ; symbol stub for: ___cxa_guard_acquire
000000000003b970	cbz	w0, 0x3b0a0
000000000003b974	adr	x0, #0x45e8
000000000003b978	nop
000000000003b97c	bl	0x4da24 ; symbol stub for: __ZSt13set_terminatePFvvE
000000000003b980	str	x0, [x20, #0x8]
000000000003b984	mov	x0, x20
000000000003b988	bl	0x4da9c ; symbol stub for: ___cxa_guard_release
000000000003b98c	b	0x3b0a0
000000000003b990	adr	x2, #0x17003 ; literal pool for: "No active runtimes allowed"
000000000003b994	nop
000000000003b998	mov	w0, #0x0
000000000003b99c	bl	__ZN6kotlin8internal24RuntimeAssertFailedPanicEbPKcS2_z
000000000003b9a0	b	0x3b9ac
000000000003b9a4	mov	x0, x24
000000000003b9a8	bl	0x4d8ec ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
000000000003b9ac	brk	#0x1
000000000003b9b0	mov	x22, x0
000000000003b9b4	cbz	x27, 0x3ba50
000000000003b9b8	mov	x0, x27
000000000003b9bc	b	0x3ba4c
000000000003b9c0	bl	___clang_call_terminate
000000000003b9c4	mov	x22, x0
000000000003b9c8	cbz	x27, 0x3baa0
000000000003b9cc	ldaxr	w8, [x24]
000000000003b9d0	stlxr	w9, w25, [x24]
000000000003b9d4	cbnz	w9, 0x3b9cc
000000000003b9d8	cbnz	w25, 0x3baa0
000000000003b9dc	cmp	w8, #0x1
000000000003b9e0	b.ne	0x3baa0
000000000003b9e4	adr	x8, #0x46e5f
000000000003b9e8	nop
000000000003b9ec	ldarb	w8, [x8]
000000000003b9f0	tbz	w8, #0x0, 0x3baa0
000000000003b9f4	mov	x0, x24
000000000003b9f8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000003b9fc	b	0x3baa0
000000000003ba00	mov	x22, x0
000000000003ba04	cbz	x25, 0x3ba38
000000000003ba08	ldaxr	w8, [x26]
000000000003ba0c	stlxr	w9, w23, [x26]
000000000003ba10	cbnz	w9, 0x3ba08
000000000003ba14	cbnz	w23, 0x3ba38
000000000003ba18	cmp	w8, #0x1
000000000003ba1c	b.ne	0x3ba38
000000000003ba20	adr	x8, #0x46e23
000000000003ba24	nop
000000000003ba28	ldarb	w8, [x8]
000000000003ba2c	tbz	w8, #0x0, 0x3ba38
000000000003ba30	mov	x0, x26
000000000003ba34	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000003ba38	ldr	x0, [x24, #0x40]
000000000003ba3c	bl	__ZNSt3__16__treeIN12_GLOBAL__N_13JobENS1_10JobCompareEN6kotlin11std_support9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE
000000000003ba40	mov	x0, x27
000000000003ba44	bl	__ZNSt3__15dequeIN12_GLOBAL__N_13JobEN6kotlin11std_support9allocatorIS2_EEED1Ev
000000000003ba48	mov	x0, x24
000000000003ba4c	bl	0x4dba4 ; symbol stub for: _free
000000000003ba50	add	x0, sp, #0x48
000000000003ba54	bl	__ZN12_GLOBAL__N_16LockerD1Ev
000000000003ba58	b	0x3ba9c
000000000003ba5c	mov	x19, x0
000000000003ba60	cbz	x20, 0x3ba74
000000000003ba64	mov	x0, x20
000000000003ba68	bl	__ZNSt3__116allocator_traitsIN6kotlin11std_support9allocatorINS1_14SingleLockListINS1_2mm10ThreadDataENS_15recursive_mutexENS3_IS6_EEE4NodeEEEE9__destroyISA_EEvNS_17integral_constantIbLb0EEERSB_PT_
000000000003ba6c	mov	x0, x20
000000000003ba70	bl	0x4dba4 ; symbol stub for: _free
000000000003ba74	mov	x0, x19
000000000003ba78	bl	___clang_call_terminate
000000000003ba7c	bl	___clang_call_terminate
000000000003ba80	bl	___clang_call_terminate
000000000003ba84	b	0x3ba98
000000000003ba88	mov	x22, x0
000000000003ba8c	b	0x3bac8
000000000003ba90	b	0x3ba98
000000000003ba94	b	0x3ba98
000000000003ba98	mov	x22, x0
000000000003ba9c	cbz	x20, 0x3bac8
000000000003baa0	ldaxr	w8, [x21]
000000000003baa4	stlxr	w9, w19, [x21]
000000000003baa8	cbnz	w9, 0x3baa0
000000000003baac	cbnz	w19, 0x3bac8
000000000003bab0	cmp	w8, #0x1
000000000003bab4	b.ne	0x3bac8
000000000003bab8	adr	x8, #0x46d8b
000000000003babc	nop
000000000003bac0	ldarb	w8, [x8]
000000000003bac4	tbnz	w8, #0x0, 0x3bad0
000000000003bac8	mov	x0, x22
000000000003bacc	bl	___clang_call_terminate
000000000003bad0	mov	x0, x21
000000000003bad4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000003bad8	mov	x0, x22
000000000003badc	bl	___clang_call_terminate
__ZN12_GLOBAL__N_128Kotlin_deinitRuntimeCallbackEPv:
000000000003bae0	sub	sp, sp, #0x80
000000000003bae4	stp	x28, x27, [sp, #0x20]
000000000003bae8	stp	x26, x25, [sp, #0x30]
000000000003baec	stp	x24, x23, [sp, #0x40]
000000000003baf0	stp	x22, x21, [sp, #0x50]
000000000003baf4	stp	x20, x19, [sp, #0x60]
000000000003baf8	stp	x29, x30, [sp, #0x70]
000000000003bafc	add	x29, sp, #0x70
000000000003bb00	mov	x20, x0
000000000003bb04	ldr	x8, [x0]
000000000003bb08	add	x0, x8, #0x138
000000000003bb0c	ldaxr	w8, [x0]
000000000003bb10	stlxr	w9, wzr, [x0]
000000000003bb14	cbnz	w9, 0x3bb0c
000000000003bb18	cmp	w8, #0x1
000000000003bb1c	b.ne	0x3bb34
000000000003bb20	adr	x8, #0x46d23
000000000003bb24	nop
000000000003bb28	ldarb	w8, [x8]
000000000003bb2c	tbz	w8, #0x0, 0x3bb34
000000000003bb30	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000003bb34	mov	w8, #0x2
000000000003bb38	str	w8, [x20, #0x10]
000000000003bb3c	adrp	x19, 45 ; 0x68000
000000000003bb40	add	x19, x19, #0xa48
000000000003bb44	ldr	x24, [x19]
000000000003bb48	mov	x0, x19
000000000003bb4c	blr	x24
000000000003bb50	str	x20, [x0]
000000000003bb54	adr	x8, #0x46d0c
000000000003bb58	nop
000000000003bb5c	ldaxr	w9, [x8]
000000000003bb60	sub	w9, w9, #0x1
000000000003bb64	stlxr	w10, w9, [x8]
000000000003bb68	cbnz	w10, 0x3bb5c
000000000003bb6c	ldr	x8, [x20]
000000000003bb70	ldr	x9, [x8, #0x48]
000000000003bb74	str	x9, [x8, #0x50]
000000000003bb78	mov	w9, #0x2
000000000003bb7c	str	w9, [x8, #0x88]
000000000003bb80	ldr	x21, [x20, #0x8]
000000000003bb84	ldrsw	x25, [x21]
000000000003bb88	adrp	x0, 45 ; 0x68000
000000000003bb8c	add	x0, x0, #0xa60
000000000003bb90	ldr	x8, [x0]
000000000003bb94	blr	x8
000000000003bb98	str	xzr, [x0]
000000000003bb9c	bl	__ZN12_GLOBAL__N_18theStateEv
000000000003bba0	mov	x22, x0
000000000003bba4	ldr	x27, [x21, #0xd8]
000000000003bba8	str	x0, [sp, #0x8]
000000000003bbac	mov	w8, #0x1
000000000003bbb0	strb	w8, [sp, #0x10]
000000000003bbb4	str	x27, [sp, #0x18]
000000000003bbb8	add	x23, x27, #0x138
000000000003bbbc	ldaxr	w26, [x23]
000000000003bbc0	stlxr	w9, w8, [x23]
000000000003bbc4	cbnz	w9, 0x3bbbc
000000000003bbc8	mov	x0, x22
000000000003bbcc	bl	0x4ddcc ; symbol stub for: _pthread_mutex_lock
000000000003bbd0	cbz	x27, 0x3bc04
000000000003bbd4	ldaxr	w8, [x23]
000000000003bbd8	stlxr	w9, w26, [x23]
000000000003bbdc	cbnz	w9, 0x3bbd4
000000000003bbe0	cbnz	w26, 0x3bc04
000000000003bbe4	cmp	w8, #0x1
000000000003bbe8	b.ne	0x3bc04
000000000003bbec	adr	x8, #0x46c57
000000000003bbf0	nop
000000000003bbf4	ldarb	w8, [x8]
000000000003bbf8	tbz	w8, #0x0, 0x3bc04
000000000003bbfc	mov	x0, x23
000000000003bc00	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000003bc04	ldr	x9, [x22, #0xa0]
000000000003bc08	cbz	x9, 0x3bcac
000000000003bc0c	ldrsw	x8, [x21]
000000000003bc10	fmov	d0, x9
000000000003bc14	cnt.8b	v0, v0
000000000003bc18	uaddlv.8b	h0, v0
000000000003bc1c	fmov	w10, s0
000000000003bc20	cmp	x10, #0x1
000000000003bc24	b.hi	0x3bc34
000000000003bc28	sub	x11, x9, #0x1
000000000003bc2c	and	x13, x11, x8
000000000003bc30	b	0x3bc48
000000000003bc34	mov	x13, x8
000000000003bc38	cmp	x9, x8
000000000003bc3c	b.hi	0x3bc48
000000000003bc40	udiv	x11, x8, x9
000000000003bc44	msub	x13, x11, x9, x8
000000000003bc48	ldr	x11, [x22, #0x98]
000000000003bc4c	ldr	x12, [x11, x13, lsl #3]
000000000003bc50	cbz	x12, 0x3bcac
000000000003bc54	ldr	x0, [x12]
000000000003bc58	cbz	x0, 0x3bcac
000000000003bc5c	sub	x12, x9, #0x1
000000000003bc60	b	0x3bc78
000000000003bc64	ldr	w14, [x0, #0x10]
000000000003bc68	cmp	w14, w8
000000000003bc6c	b.eq	0x3bdac
000000000003bc70	ldr	x0, [x0]
000000000003bc74	cbz	x0, 0x3bcac
000000000003bc78	ldr	x14, [x0, #0x8]
000000000003bc7c	cmp	x14, x8
000000000003bc80	b.eq	0x3bc64
000000000003bc84	cmp	x10, #0x1
000000000003bc88	b.hi	0x3bc94
000000000003bc8c	and	x14, x14, x12
000000000003bc90	b	0x3bca4
000000000003bc94	cmp	x14, x9
000000000003bc98	b.lo	0x3bca4
000000000003bc9c	udiv	x15, x14, x9
000000000003bca0	msub	x14, x15, x9, x14
000000000003bca4	cmp	x14, x13
000000000003bca8	b.eq	0x3bc70
000000000003bcac	add	x0, sp, #0x8
000000000003bcb0	bl	__ZN12_GLOBAL__N_16LockerD1Ev
000000000003bcb4	ldp	x8, x9, [x21, #0x10]
000000000003bcb8	cmp	x9, x8
000000000003bcbc	b.eq	0x3bebc
000000000003bcc0	mov	x10, #0xa0a1
000000000003bcc4	movk	x10, #0xa0a0, lsl #16
000000000003bcc8	movk	x10, #0xa0a0, lsl #32
000000000003bccc	movk	x10, #0xa0a0, lsl #48
000000000003bcd0	ldp	x11, x12, [x21, #0x28]
000000000003bcd4	umulh	x9, x11, x10
000000000003bcd8	lsr	x9, x9, #6
000000000003bcdc	ldr	x13, [x8, x9, lsl #3]
000000000003bce0	mov	x14, #-0x66
000000000003bce4	madd	x15, x9, x14, x11
000000000003bce8	mov	w16, #0x28
000000000003bcec	madd	x23, x15, x16, x13
000000000003bcf0	add	x11, x12, x11
000000000003bcf4	umulh	x10, x11, x10
000000000003bcf8	lsr	x10, x10, #6
000000000003bcfc	ldr	x12, [x8, x10, lsl #3]
000000000003bd00	madd	x10, x10, x14, x11
000000000003bd04	madd	x26, x10, x16, x12
000000000003bd08	cmp	x26, x23
000000000003bd0c	b.eq	0x3bebc
000000000003bd10	add	x27, x8, x9, lsl #3
000000000003bd14	adr	x28, #0x12938
000000000003bd18	nop
000000000003bd1c	b	0x3bd28
000000000003bd20	cmp	x26, x23
000000000003bd24	b.eq	0x3bebc
000000000003bd28	ldr	w9, [x23]
000000000003bd2c	cmp	w9, #0x3
000000000003bd30	b.hi	0x3bd90
000000000003bd34	ldr	x8, [x23, #0x8]
000000000003bd38	adr	x10, #0x10
000000000003bd3c	ldrh	w11, [x28, x9, lsl #1]
000000000003bd40	add	x10, x10, x11, lsl #2
000000000003bd44	br	x10
000000000003bd48	ldr	x1, [x21, #0xd8]
000000000003bd4c	mov	x0, x8
000000000003bd50	bl	__ZN12_GLOBAL__N_16Future14cancelUnlockedEP11MemoryState
000000000003bd54	b	0x3bd90
000000000003bd58	ldp	x1, x22, [x23, #0x10]
000000000003bd5c	cbz	x1, 0x3bd6c
000000000003bd60	ldr	x8, [x21, #0xd8]
000000000003bd64	add	x0, x8, #0x8
000000000003bd68	bl	__ZN6kotlin2mm17StableRefRegistry19UnregisterStableRefEPNS0_10ThreadDataEPNS_16MultiSourceQueueIP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS6_EEE4NodeE
000000000003bd6c	ldr	x1, [x21, #0xd8]
000000000003bd70	mov	x0, x22
000000000003bd74	bl	__ZN12_GLOBAL__N_16Future14cancelUnlockedEP11MemoryState
000000000003bd78	b	0x3bd90
000000000003bd7c	cbz	x8, 0x3bd90
000000000003bd80	ldr	x9, [x21, #0xd8]
000000000003bd84	add	x0, x9, #0x8
000000000003bd88	mov	x1, x8
000000000003bd8c	bl	__ZN6kotlin2mm17StableRefRegistry19UnregisterStableRefEPNS0_10ThreadDataEPNS_16MultiSourceQueueIP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS6_EEE4NodeE
000000000003bd90	add	x23, x23, #0x28
000000000003bd94	ldr	x8, [x27]
000000000003bd98	sub	x8, x23, x8
000000000003bd9c	cmp	x8, #0xff0
000000000003bda0	b.ne	0x3bd20
000000000003bda4	ldr	x23, [x27, #0x8]!
000000000003bda8	b	0x3bd20
000000000003bdac	cmp	x10, #0x1
000000000003bdb0	b.hi	0x3bdbc
000000000003bdb4	and	x8, x12, x8
000000000003bdb8	b	0x3bdcc
000000000003bdbc	cmp	x9, x8
000000000003bdc0	b.hi	0x3bdcc
000000000003bdc4	udiv	x13, x8, x9
000000000003bdc8	msub	x8, x13, x9, x8
000000000003bdcc	ldr	x14, [x11, x8, lsl #3]
000000000003bdd0	mov	x13, x14
000000000003bdd4	ldr	x14, [x14]
000000000003bdd8	cmp	x14, x0
000000000003bddc	b.ne	0x3bdd0
000000000003bde0	add	x14, x22, #0xa8
000000000003bde4	cmp	x13, x14
000000000003bde8	b.eq	0x3be18
000000000003bdec	ldr	x14, [x13, #0x8]
000000000003bdf0	cmp	x10, #0x1
000000000003bdf4	b.hi	0x3be00
000000000003bdf8	and	x14, x14, x12
000000000003bdfc	b	0x3be10
000000000003be00	cmp	x14, x9
000000000003be04	b.lo	0x3be10
000000000003be08	udiv	x15, x14, x9
000000000003be0c	msub	x14, x15, x9, x14
000000000003be10	cmp	x14, x8
000000000003be14	b.eq	0x3be50
000000000003be18	ldr	x14, [x0]
000000000003be1c	cbz	x14, 0x3be4c
000000000003be20	ldr	x14, [x14, #0x8]
000000000003be24	cmp	x10, #0x1
000000000003be28	b.hi	0x3be34
000000000003be2c	and	x14, x14, x12
000000000003be30	b	0x3be44
000000000003be34	cmp	x14, x9
000000000003be38	b.lo	0x3be44
000000000003be3c	udiv	x15, x14, x9
000000000003be40	msub	x14, x15, x9, x14
000000000003be44	cmp	x14, x8
000000000003be48	b.eq	0x3be50
000000000003be4c	str	xzr, [x11, x8, lsl #3]
000000000003be50	ldr	x11, [x0]
000000000003be54	cbz	x11, 0x3be90
000000000003be58	ldr	x14, [x11, #0x8]
000000000003be5c	cmp	x10, #0x1
000000000003be60	b.hi	0x3be6c
000000000003be64	and	x14, x14, x12
000000000003be68	b	0x3be7c
000000000003be6c	cmp	x14, x9
000000000003be70	b.lo	0x3be7c
000000000003be74	udiv	x10, x14, x9
000000000003be78	msub	x14, x10, x9, x14
000000000003be7c	cmp	x14, x8
000000000003be80	b.eq	0x3be90
000000000003be84	ldr	x8, [x22, #0x98]
000000000003be88	str	x13, [x8, x14, lsl #3]
000000000003be8c	ldr	x11, [x0]
000000000003be90	str	x11, [x13]
000000000003be94	str	xzr, [x0]
000000000003be98	ldr	x8, [x22, #0xb0]
000000000003be9c	sub	x8, x8, #0x1
000000000003bea0	str	x8, [x22, #0xb0]
000000000003bea4	bl	0x4dba4 ; symbol stub for: _free
000000000003bea8	add	x0, sp, #0x8
000000000003beac	bl	__ZN12_GLOBAL__N_16LockerD1Ev
000000000003beb0	ldp	x8, x9, [x21, #0x10]
000000000003beb4	cmp	x9, x8
000000000003beb8	b.ne	0x3bcc0
000000000003bebc	ldr	x23, [x21, #0x38]
000000000003bec0	add	x22, x21, #0x40
000000000003bec4	b	0x3becc
000000000003bec8	mov	x23, x9
000000000003becc	cmp	x23, x22
000000000003bed0	b.eq	0x3bf30
000000000003bed4	ldr	x1, [x23, #0x28]
000000000003bed8	cbz	x1, 0x3bee8
000000000003bedc	ldr	x8, [x21, #0xd8]
000000000003bee0	add	x0, x8, #0x8
000000000003bee4	bl	__ZN6kotlin2mm17StableRefRegistry19UnregisterStableRefEPNS0_10ThreadDataEPNS_16MultiSourceQueueIP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS6_EEE4NodeE
000000000003bee8	ldr	x8, [x23, #0x8]
000000000003beec	cbz	x8, 0x3bf00
000000000003bef0	mov	x23, x8
000000000003bef4	ldr	x8, [x8]
000000000003bef8	cbnz	x8, 0x3bef0
000000000003befc	b	0x3becc
000000000003bf00	mov	x8, x23
000000000003bf04	ldr	x9, [x8, #0x10]!
000000000003bf08	ldr	x10, [x9]
000000000003bf0c	cmp	x10, x23
000000000003bf10	b.eq	0x3bec8
000000000003bf14	ldr	x9, [x8]
000000000003bf18	mov	x8, x9
000000000003bf1c	ldr	x23, [x8, #0x10]!
000000000003bf20	ldr	x10, [x23]
000000000003bf24	cmp	x10, x9
000000000003bf28	b.ne	0x3bf14
000000000003bf2c	b	0x3becc
000000000003bf30	ldr	x1, [x21, #0x50]
000000000003bf34	cbz	x1, 0x3bf44
000000000003bf38	ldr	x8, [x21, #0xd8]
000000000003bf3c	add	x0, x8, #0x8
000000000003bf40	bl	__ZN6kotlin2mm17StableRefRegistry19UnregisterStableRefEPNS0_10ThreadDataEPNS_16MultiSourceQueueIP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS6_EEE4NodeE
000000000003bf44	ldr	x26, [x21, #0xd8]
000000000003bf48	add	x22, x26, #0x138
000000000003bf4c	mov	w8, #0x1
000000000003bf50	ldaxr	w23, [x22]
000000000003bf54	stlxr	w9, w8, [x22]
000000000003bf58	cbnz	w9, 0x3bf50
000000000003bf5c	add	x0, x21, #0x58
000000000003bf60	bl	0x4ddb4 ; symbol stub for: _pthread_mutex_destroy
000000000003bf64	add	x0, x21, #0x98
000000000003bf68	bl	0x4dd54 ; symbol stub for: _pthread_cond_destroy
000000000003bf6c	cbz	x26, 0x3bfa0
000000000003bf70	ldaxr	w8, [x22]
000000000003bf74	stlxr	w9, w23, [x22]
000000000003bf78	cbnz	w9, 0x3bf70
000000000003bf7c	cbnz	w23, 0x3bfa0
000000000003bf80	cmp	w8, #0x1
000000000003bf84	b.ne	0x3bfa0
000000000003bf88	adr	x8, #0x468bb
000000000003bf8c	nop
000000000003bf90	ldarb	w8, [x8]
000000000003bf94	tbz	w8, #0x0, 0x3bfa0
000000000003bf98	mov	x0, x22
000000000003bf9c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000003bfa0	add	x22, x21, #0x8
000000000003bfa4	ldr	x0, [x21, #0x40]
000000000003bfa8	bl	__ZNSt3__16__treeIN12_GLOBAL__N_13JobENS1_10JobCompareEN6kotlin11std_support9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE
000000000003bfac	mov	x0, x22
000000000003bfb0	bl	__ZNSt3__15dequeIN12_GLOBAL__N_13JobEN6kotlin11std_support9allocatorIS2_EEED1Ev
000000000003bfb4	mov	x0, x21
000000000003bfb8	bl	0x4dba4 ; symbol stub for: _free
000000000003bfbc	ldr	x8, [x20]
000000000003bfc0	add	x8, x8, #0x138
000000000003bfc4	mov	w9, #0x1
000000000003bfc8	ldaxr	wzr, [x8]
000000000003bfcc	stlxr	w10, w9, [x8]
000000000003bfd0	cbnz	w10, 0x3bfc8
000000000003bfd4	ldr	x21, [x20]
000000000003bfd8	nop
000000000003bfdc	ldr	x0, #0x46acc
000000000003bfe0	cbz	x0, 0x3bfec
000000000003bfe4	bl	0x4dd90 ; symbol stub for: _pthread_getspecific
000000000003bfe8	cbz	x0, 0x3c000
000000000003bfec	adrp	x0, 45 ; 0x68000
000000000003bff0	add	x0, x0, #0xa00
000000000003bff4	ldr	x8, [x0]
000000000003bff8	blr	x8
000000000003bffc	str	xzr, [x0]
000000000003c000	adr	x0, #0x46b40
000000000003c004	nop
000000000003c008	bl	0x4d94c ; symbol stub for: __ZNSt3__115recursive_mutex4lockEv
000000000003c00c	adr	x9, #0x46b24
000000000003c010	nop
000000000003c014	ldp	x8, x9, [x9]
000000000003c018	cmp	x9, x21
000000000003c01c	b.eq	0x3c07c
000000000003c020	cmp	x8, x21
000000000003c024	b.eq	0x3c090
000000000003c028	ldr	x23, [x21, #0x158]
000000000003c02c	ldr	x22, [x23, #0x150]
000000000003c030	str	xzr, [x23, #0x150]
000000000003c034	ldr	x8, [x21, #0x150]
000000000003c038	str	xzr, [x21, #0x150]
000000000003c03c	ldr	x21, [x23, #0x150]
000000000003c040	str	x8, [x23, #0x150]
000000000003c044	cbz	x21, 0x3c05c
000000000003c048	mov	x0, x21
000000000003c04c	bl	__ZNSt3__116allocator_traitsIN6kotlin11std_support9allocatorINS1_14SingleLockListINS1_2mm10ThreadDataENS_15recursive_mutexENS3_IS6_EEE4NodeEEEE9__destroyISA_EEvNS_17integral_constantIbLb0EEERSB_PT_
000000000003c050	mov	x0, x21
000000000003c054	bl	0x4dba4 ; symbol stub for: _free
000000000003c058	ldr	x8, [x23, #0x150]
000000000003c05c	cbz	x8, 0x3c064
000000000003c060	str	x23, [x8, #0x158]
000000000003c064	cbz	x22, 0x3c0c0
000000000003c068	mov	x0, x22
000000000003c06c	bl	__ZNSt3__116allocator_traitsIN6kotlin11std_support9allocatorINS1_14SingleLockListINS1_2mm10ThreadDataENS_15recursive_mutexENS3_IS6_EEE4NodeEEEE9__destroyISA_EEvNS_17integral_constantIbLb0EEERSB_PT_
000000000003c070	mov	x0, x22
000000000003c074	bl	0x4dba4 ; symbol stub for: _free
000000000003c078	b	0x3c0c0
000000000003c07c	ldr	x9, [x21, #0x158]
000000000003c080	adrp	x10, 70 ; 0x82000
000000000003c084	str	x9, [x10, #0xb38]
000000000003c088	cmp	x8, x21
000000000003c08c	b.ne	0x3c028
000000000003c090	ldr	x9, [x21, #0x150]
000000000003c094	str	xzr, [x21, #0x150]
000000000003c098	adrp	x22, 70 ; 0x82000
000000000003c09c	str	x9, [x22, #0xb30]
000000000003c0a0	cbz	x8, 0x3c0b8
000000000003c0a4	mov	x0, x21
000000000003c0a8	bl	__ZNSt3__116allocator_traitsIN6kotlin11std_support9allocatorINS1_14SingleLockListINS1_2mm10ThreadDataENS_15recursive_mutexENS3_IS6_EEE4NodeEEEE9__destroyISA_EEvNS_17integral_constantIbLb0EEERSB_PT_
000000000003c0ac	mov	x0, x21
000000000003c0b0	bl	0x4dba4 ; symbol stub for: _free
000000000003c0b4	ldr	x9, [x22, #0xb30]
000000000003c0b8	cbz	x9, 0x3c0c0
000000000003c0bc	str	xzr, [x9, #0x158]
000000000003c0c0	adr	x0, #0x46a80
000000000003c0c4	nop
000000000003c0c8	bl	0x4d958 ; symbol stub for: __ZNSt3__115recursive_mutex6unlockEv
000000000003c0cc	mov	x0, x20
000000000003c0d0	bl	0x4dba4 ; symbol stub for: _free
000000000003c0d4	bl	__ZN12_GLOBAL__N_18theStateEv
000000000003c0d8	mov	x20, x0
000000000003c0dc	str	x0, [sp, #0x8]
000000000003c0e0	strb	wzr, [sp, #0x10]
000000000003c0e4	str	xzr, [sp, #0x18]
000000000003c0e8	bl	0x4ddcc ; symbol stub for: _pthread_mutex_lock
000000000003c0ec	ldr	x8, [x20, #0xc8]
000000000003c0f0	cbz	x8, 0x3c2c8
000000000003c0f4	fmov	d0, x8
000000000003c0f8	cnt.8b	v0, v0
000000000003c0fc	uaddlv.8b	h0, v0
000000000003c100	fmov	w9, s0
000000000003c104	cmp	x9, #0x1
000000000003c108	b.hi	0x3c118
000000000003c10c	sub	x10, x8, #0x1
000000000003c110	and	x10, x10, x25
000000000003c114	b	0x3c12c
000000000003c118	mov	x10, x25
000000000003c11c	cmp	x8, x25
000000000003c120	b.hi	0x3c12c
000000000003c124	udiv	x10, x25, x8
000000000003c128	msub	x10, x10, x8, x25
000000000003c12c	ldr	x11, [x20, #0xc0]
000000000003c130	ldr	x11, [x11, x10, lsl #3]
000000000003c134	cbz	x11, 0x3c2c8
000000000003c138	ldr	x21, [x11]
000000000003c13c	cbz	x21, 0x3c2c8
000000000003c140	sub	x11, x8, #0x1
000000000003c144	b	0x3c15c
000000000003c148	ldr	w12, [x21, #0x10]
000000000003c14c	cmp	w12, w25
000000000003c150	b.eq	0x3c194
000000000003c154	ldr	x21, [x21]
000000000003c158	cbz	x21, 0x3c2c8
000000000003c15c	ldr	x12, [x21, #0x8]
000000000003c160	cmp	x12, x25
000000000003c164	b.eq	0x3c148
000000000003c168	cmp	x9, #0x1
000000000003c16c	b.hi	0x3c178
000000000003c170	and	x12, x12, x11
000000000003c174	b	0x3c188
000000000003c178	cmp	x12, x8
000000000003c17c	b.lo	0x3c188
000000000003c180	udiv	x13, x12, x8
000000000003c184	msub	x12, x13, x8, x12
000000000003c188	cmp	x12, x10
000000000003c18c	b.eq	0x3c154
000000000003c190	b	0x3c2c8
000000000003c194	ldr	x0, [x21, #0x18]
000000000003c198	bl	0x4dd84 ; symbol stub for: _pthread_detach
000000000003c19c	ldr	x9, [x20, #0xc8]
000000000003c1a0	ldr	x8, [x21, #0x8]
000000000003c1a4	fmov	d0, x9
000000000003c1a8	cnt.8b	v0, v0
000000000003c1ac	uaddlv.8b	h0, v0
000000000003c1b0	fmov	w11, s0
000000000003c1b4	cmp	x11, #0x1
000000000003c1b8	b.hi	0x3c1c8
000000000003c1bc	sub	x10, x9, #0x1
000000000003c1c0	and	x8, x10, x8
000000000003c1c4	b	0x3c1d8
000000000003c1c8	cmp	x8, x9
000000000003c1cc	b.lo	0x3c1d8
000000000003c1d0	udiv	x10, x8, x9
000000000003c1d4	msub	x8, x10, x9, x8
000000000003c1d8	ldr	x12, [x20, #0xc0]
000000000003c1dc	ldr	x13, [x12, x8, lsl #3]
000000000003c1e0	mov	x10, x13
000000000003c1e4	ldr	x13, [x13]
000000000003c1e8	cmp	x13, x21
000000000003c1ec	b.ne	0x3c1e0
000000000003c1f0	add	x13, x20, #0xd0
000000000003c1f4	cmp	x10, x13
000000000003c1f8	b.eq	0x3c22c
000000000003c1fc	ldr	x13, [x10, #0x8]
000000000003c200	cmp	x11, #0x1
000000000003c204	b.hi	0x3c214
000000000003c208	sub	x14, x9, #0x1
000000000003c20c	and	x13, x13, x14
000000000003c210	b	0x3c224
000000000003c214	cmp	x13, x9
000000000003c218	b.lo	0x3c224
000000000003c21c	udiv	x14, x13, x9
000000000003c220	msub	x13, x14, x9, x13
000000000003c224	cmp	x13, x8
000000000003c228	b.eq	0x3c268
000000000003c22c	ldr	x13, [x21]
000000000003c230	cbz	x13, 0x3c264
000000000003c234	ldr	x13, [x13, #0x8]
000000000003c238	cmp	x11, #0x1
000000000003c23c	b.hi	0x3c24c
000000000003c240	sub	x14, x9, #0x1
000000000003c244	and	x13, x13, x14
000000000003c248	b	0x3c25c
000000000003c24c	cmp	x13, x9
000000000003c250	b.lo	0x3c25c
000000000003c254	udiv	x14, x13, x9
000000000003c258	msub	x13, x14, x9, x13
000000000003c25c	cmp	x13, x8
000000000003c260	b.eq	0x3c268
000000000003c264	str	xzr, [x12, x8, lsl #3]
000000000003c268	ldr	x12, [x21]
000000000003c26c	cbz	x12, 0x3c2ac
000000000003c270	ldr	x13, [x12, #0x8]
000000000003c274	cmp	x11, #0x1
000000000003c278	b.hi	0x3c288
000000000003c27c	sub	x9, x9, #0x1
000000000003c280	and	x13, x13, x9
000000000003c284	b	0x3c298
000000000003c288	cmp	x13, x9
000000000003c28c	b.lo	0x3c298
000000000003c290	udiv	x11, x13, x9
000000000003c294	msub	x13, x11, x9, x13
000000000003c298	cmp	x13, x8
000000000003c29c	b.eq	0x3c2ac
000000000003c2a0	ldr	x8, [x20, #0xc0]
000000000003c2a4	str	x10, [x8, x13, lsl #3]
000000000003c2a8	ldr	x12, [x21]
000000000003c2ac	str	x12, [x10]
000000000003c2b0	str	xzr, [x21]
000000000003c2b4	ldr	x8, [x20, #0xd8]
000000000003c2b8	sub	x8, x8, #0x1
000000000003c2bc	str	x8, [x20, #0xd8]
000000000003c2c0	mov	x0, x21
000000000003c2c4	bl	0x4dba4 ; symbol stub for: _free
000000000003c2c8	add	x0, sp, #0x8
000000000003c2cc	bl	__ZN12_GLOBAL__N_16LockerD1Ev
000000000003c2d0	mov	x0, x19
000000000003c2d4	blr	x24
000000000003c2d8	str	xzr, [x0]
000000000003c2dc	ldp	x29, x30, [sp, #0x70]
000000000003c2e0	ldp	x20, x19, [sp, #0x60]
000000000003c2e4	ldp	x22, x21, [sp, #0x50]
000000000003c2e8	ldp	x24, x23, [sp, #0x40]
000000000003c2ec	ldp	x26, x25, [sp, #0x30]
000000000003c2f0	ldp	x28, x27, [sp, #0x20]
000000000003c2f4	add	sp, sp, #0x80
000000000003c2f8	ret
000000000003c2fc	adr	x2, #0x166b2 ; literal pool for: "Cannot be in queue"
000000000003c300	nop
000000000003c304	mov	w0, #0x0
000000000003c308	bl	__ZN6kotlin8internal24RuntimeAssertFailedPanicEbPKcS2_z
000000000003c30c	brk	#0x1
000000000003c310	mov	x19, x0
000000000003c314	add	x0, sp, #0x8
000000000003c318	bl	__ZN12_GLOBAL__N_16LockerD1Ev
000000000003c31c	mov	x0, x19
000000000003c320	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
000000000003c324	bl	___clang_call_terminate
000000000003c328	mov	x19, x0
000000000003c32c	cbz	x27, 0x3c360
000000000003c330	ldaxr	w8, [x23]
000000000003c334	stlxr	w9, w26, [x23]
000000000003c338	cbnz	w9, 0x3c330
000000000003c33c	cbnz	w26, 0x3c360
000000000003c340	cmp	w8, #0x1
000000000003c344	b.ne	0x3c360
000000000003c348	adr	x8, #0x464fb
000000000003c34c	nop
000000000003c350	ldarb	w8, [x8]
000000000003c354	tbz	w8, #0x0, 0x3c360
000000000003c358	mov	x0, x23
000000000003c35c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000003c360	mov	x0, x19
000000000003c364	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
000000000003c368	mov	x19, x0
000000000003c36c	cbz	x26, 0x3c3ac
000000000003c370	ldaxr	w8, [x22]
000000000003c374	stlxr	w9, w23, [x22]
000000000003c378	cbnz	w9, 0x3c370
000000000003c37c	cbnz	w23, 0x3c3ac
000000000003c380	cmp	w8, #0x1
000000000003c384	b.ne	0x3c3ac
000000000003c388	adr	x8, #0x464bb
000000000003c38c	nop
000000000003c390	ldarb	w8, [x8]
000000000003c394	tbz	w8, #0x0, 0x3c3ac
000000000003c398	mov	x0, x22
000000000003c39c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000003c3a0	b	0x3c3ac
000000000003c3a4	b	0x3c3a8
000000000003c3a8	mov	x19, x0
000000000003c3ac	add	x0, x21, #0x38
000000000003c3b0	bl	__ZNSt3__18multisetIN12_GLOBAL__N_13JobENS1_10JobCompareEN6kotlin11std_support9allocatorIS2_EEED1Ev
000000000003c3b4	add	x0, x21, #0x8
000000000003c3b8	bl	__ZNSt3__15dequeIN12_GLOBAL__N_13JobEN6kotlin11std_support9allocatorIS2_EEED1Ev
000000000003c3bc	mov	x0, x19
000000000003c3c0	bl	___clang_call_terminate
__ZN5konanL16onThreadExitInitEv:
000000000003c3c4	adr	x0, #0x466e4
000000000003c3c8	nop
000000000003c3cc	adr	x1, #0xc
000000000003c3d0	nop
000000000003c3d4	b	0x4dd9c ; symbol stub for: _pthread_key_create
__ZN5konanL20onThreadExitCallbackEPv:
000000000003c3d8	stp	x20, x19, [sp, #-0x20]!
000000000003c3dc	stp	x29, x30, [sp, #0x10]
000000000003c3e0	add	x29, sp, #0x10
000000000003c3e4	mov	x19, x0
000000000003c3e8	nop
000000000003c3ec	ldr	x0, #0x466bc
000000000003c3f0	mov	x1, #0x0
000000000003c3f4	bl	0x4de08 ; symbol stub for: _pthread_setspecific
000000000003c3f8	cbz	x19, 0x3c418
000000000003c3fc	ldp	x8, x0, [x19, #0x8]
000000000003c400	blr	x8
000000000003c404	ldr	x20, [x19]
000000000003c408	mov	x0, x19
000000000003c40c	bl	0x4dba4 ; symbol stub for: _free
000000000003c410	mov	x19, x20
000000000003c414	cbnz	x20, 0x3c3fc
000000000003c418	ldp	x29, x30, [sp, #0x10]
000000000003c41c	ldp	x20, x19, [sp], #0x20
000000000003c420	ret
__ZN12_GLOBAL__N_18theStateEv:
000000000003c424	sub	sp, sp, #0x70
000000000003c428	stp	x28, x27, [sp, #0x10]
000000000003c42c	stp	x26, x25, [sp, #0x20]
000000000003c430	stp	x24, x23, [sp, #0x30]
000000000003c434	stp	x22, x21, [sp, #0x40]
000000000003c438	stp	x20, x19, [sp, #0x50]
000000000003c43c	stp	x29, x30, [sp, #0x60]
000000000003c440	add	x29, sp, #0x60
000000000003c444	adrp	x25, 70 ; 0x82000
000000000003c448	ldr	x20, [x25, #0xab8]
000000000003c44c	cbnz	x20, 0x3c64c
000000000003c450	mov	w0, #0x1
000000000003c454	mov	w1, #0xf8
000000000003c458	bl	0x4db20 ; symbol stub for: _calloc
000000000003c45c	mov	x19, x0
000000000003c460	adrp	x21, 44 ; 0x68000
000000000003c464	add	x21, x21, #0xa00
000000000003c468	cbz	x0, 0x3c51c
000000000003c46c	movi.16b	v0, #0x0
000000000003c470	mov	x22, x19
000000000003c474	stp	q0, q0, [x22, #0x70]!
000000000003c478	mov	w8, #0x3f800000
000000000003c47c	str	w8, [x22, #0x20]
000000000003c480	mov	x23, x22
000000000003c484	str	q0, [x23, #0x28]!
000000000003c488	stur	q0, [x22, #0x38]
000000000003c48c	str	w8, [x22, #0x48]
000000000003c490	mov	x24, x22
000000000003c494	str	q0, [x24, #0x50]!
000000000003c498	str	q0, [x22, #0x60]
000000000003c49c	str	w8, [x22, #0x70]
000000000003c4a0	ldr	x8, [x21]
000000000003c4a4	mov	x0, x21
000000000003c4a8	blr	x8
000000000003c4ac	ldr	x27, [x0]
000000000003c4b0	add	x20, x27, #0x138
000000000003c4b4	mov	w8, #0x1
000000000003c4b8	ldaxr	w26, [x20]
000000000003c4bc	stlxr	w9, w8, [x20]
000000000003c4c0	cbnz	w9, 0x3c4b8
000000000003c4c4	mov	x0, x19
000000000003c4c8	mov	x1, #0x0
000000000003c4cc	bl	0x4ddc0 ; symbol stub for: _pthread_mutex_init
000000000003c4d0	add	x0, x19, #0x40
000000000003c4d4	mov	x1, #0x0
000000000003c4d8	bl	0x4dd60 ; symbol stub for: _pthread_cond_init
000000000003c4dc	movi.2s	v0, #0x1
000000000003c4e0	str	d0, [x19, #0xe8]
000000000003c4e4	str	wzr, [x19, #0xf0]
000000000003c4e8	cbz	x27, 0x3c51c
000000000003c4ec	ldaxr	w8, [x20]
000000000003c4f0	stlxr	w9, w26, [x20]
000000000003c4f4	cbnz	w9, 0x3c4ec
000000000003c4f8	cbnz	w26, 0x3c51c
000000000003c4fc	cmp	w8, #0x1
000000000003c500	b.ne	0x3c51c
000000000003c504	adr	x8, #0x4633f
000000000003c508	nop
000000000003c50c	ldarb	w8, [x8]
000000000003c510	tbz	w8, #0x0, 0x3c51c
000000000003c514	mov	x0, x20
000000000003c518	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000003c51c	adr	x8, #0x4659c
000000000003c520	nop
000000000003c524	ldaxr	x20, [x8]
000000000003c528	cbnz	x20, 0x3c63c
000000000003c52c	stlxr	w9, x19, [x8]
000000000003c530	cbnz	w9, 0x3c524
000000000003c534	mov	w8, #0x1
000000000003c538	tbnz	w8, #0x0, 0x3c648
000000000003c53c	ldr	x8, [x21]
000000000003c540	mov	x0, x21
000000000003c544	blr	x8
000000000003c548	ldr	x8, [x0]
000000000003c54c	str	x8, [sp]
000000000003c550	strb	wzr, [sp, #0xc]
000000000003c554	add	x8, x8, #0x138
000000000003c558	mov	w9, #0x1
000000000003c55c	ldaxr	w10, [x8]
000000000003c560	stlxr	w11, w9, [x8]
000000000003c564	cbnz	w11, 0x3c55c
000000000003c568	str	w10, [sp, #0x8]
000000000003c56c	mov	x0, x19
000000000003c570	bl	0x4ddb4 ; symbol stub for: _pthread_mutex_destroy
000000000003c574	add	x0, x19, #0x40
000000000003c578	bl	0x4dd54 ; symbol stub for: _pthread_cond_destroy
000000000003c57c	ldr	x9, [sp]
000000000003c580	cbz	x9, 0x3c5b8
000000000003c584	ldr	w8, [sp, #0x8]
000000000003c588	add	x0, x9, #0x138
000000000003c58c	ldaxr	w9, [x0]
000000000003c590	stlxr	w10, w8, [x0]
000000000003c594	cbnz	w10, 0x3c58c
000000000003c598	cbnz	w8, 0x3c5b8
000000000003c59c	cmp	w9, #0x1
000000000003c5a0	b.ne	0x3c5b8
000000000003c5a4	adr	x8, #0x4629f
000000000003c5a8	nop
000000000003c5ac	ldarb	w8, [x8]
000000000003c5b0	tbz	w8, #0x0, 0x3c5b8
000000000003c5b4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000003c5b8	ldr	x0, [x19, #0xd0]
000000000003c5bc	cbz	x0, 0x3c5d0
000000000003c5c0	ldr	x21, [x0]
000000000003c5c4	bl	0x4dba4 ; symbol stub for: _free
000000000003c5c8	mov	x0, x21
000000000003c5cc	cbnz	x21, 0x3c5c0
000000000003c5d0	ldr	x0, [x19, #0xc0]
000000000003c5d4	str	xzr, [x19, #0xc0]
000000000003c5d8	cbz	x0, 0x3c5e0
000000000003c5dc	bl	0x4dba4 ; symbol stub for: _free
000000000003c5e0	ldr	x0, [x19, #0xa8]
000000000003c5e4	cbz	x0, 0x3c5f8
000000000003c5e8	ldr	x21, [x0]
000000000003c5ec	bl	0x4dba4 ; symbol stub for: _free
000000000003c5f0	mov	x0, x21
000000000003c5f4	cbnz	x21, 0x3c5e8
000000000003c5f8	ldr	x0, [x19, #0x98]
000000000003c5fc	str	xzr, [x19, #0x98]
000000000003c600	cbz	x0, 0x3c608
000000000003c604	bl	0x4dba4 ; symbol stub for: _free
000000000003c608	ldr	x0, [x19, #0x80]
000000000003c60c	cbz	x0, 0x3c620
000000000003c610	ldr	x21, [x0]
000000000003c614	bl	0x4dba4 ; symbol stub for: _free
000000000003c618	mov	x0, x21
000000000003c61c	cbnz	x21, 0x3c610
000000000003c620	ldr	x0, [x19, #0x70]
000000000003c624	str	xzr, [x19, #0x70]
000000000003c628	cbz	x0, 0x3c630
000000000003c62c	bl	0x4dba4 ; symbol stub for: _free
000000000003c630	mov	x0, x19
000000000003c634	bl	0x4dba4 ; symbol stub for: _free
000000000003c638	b	0x3c64c
000000000003c63c	mov	w8, #0x0
000000000003c640	clrex
000000000003c644	tbz	w8, #0x0, 0x3c53c
000000000003c648	ldr	x20, [x25, #0xab8]
000000000003c64c	mov	x0, x20
000000000003c650	ldp	x29, x30, [sp, #0x60]
000000000003c654	ldp	x20, x19, [sp, #0x50]
000000000003c658	ldp	x22, x21, [sp, #0x40]
000000000003c65c	ldp	x24, x23, [sp, #0x30]
000000000003c660	ldp	x26, x25, [sp, #0x20]
000000000003c664	ldp	x28, x27, [sp, #0x10]
000000000003c668	add	sp, sp, #0x70
000000000003c66c	ret
000000000003c670	mov	x20, x0
000000000003c674	mov	x0, sp
000000000003c678	bl	__ZN6kotlin16ThreadStateGuardD1Ev
000000000003c67c	add	x0, x19, #0xc0
000000000003c680	bl	__ZNSt3__113unordered_mapIiP17_opaque_pthread_tNS_4hashIiEENS_8equal_toIiEEN6kotlin11std_support9allocatorINS_4pairIKiS2_EEEEED1Ev
000000000003c684	add	x0, x19, #0x98
000000000003c688	bl	__ZNSt3__113unordered_mapIiP6WorkerNS_4hashIiEENS_8equal_toIiEEN6kotlin11std_support9allocatorINS_4pairIKiS2_EEEEED1Ev
000000000003c68c	add	x0, x19, #0x70
000000000003c690	bl	__ZNSt3__113unordered_mapIiPN12_GLOBAL__N_16FutureENS_4hashIiEENS_8equal_toIiEEN6kotlin11std_support9allocatorINS_4pairIKiS3_EEEEED1Ev
000000000003c694	mov	x0, x20
000000000003c698	bl	___clang_call_terminate
000000000003c69c	mov	x21, x0
000000000003c6a0	cbz	x27, 0x3c6d4
000000000003c6a4	ldaxr	w8, [x20]
000000000003c6a8	stlxr	w9, w26, [x20]
000000000003c6ac	cbnz	w9, 0x3c6a4
000000000003c6b0	cbnz	w26, 0x3c6d4
000000000003c6b4	cmp	w8, #0x1
000000000003c6b8	b.ne	0x3c6d4
000000000003c6bc	adr	x8, #0x46187
000000000003c6c0	nop
000000000003c6c4	ldarb	w8, [x8]
000000000003c6c8	tbz	w8, #0x0, 0x3c6d4
000000000003c6cc	mov	x0, x20
000000000003c6d0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000003c6d4	mov	x0, x19
000000000003c6d8	mov	x1, x24
000000000003c6dc	mov	x2, x23
000000000003c6e0	mov	x3, x22
000000000003c6e4	bl	__ZN12_GLOBAL__N_18theStateEv.cold.1
000000000003c6e8	mov	x0, x19
000000000003c6ec	bl	0x4dba4 ; symbol stub for: _free
000000000003c6f0	mov	x0, x21
000000000003c6f4	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
__ZN12_GLOBAL__N_16LockerD1Ev:
000000000003c6f8	stp	x22, x21, [sp, #-0x30]!
000000000003c6fc	stp	x20, x19, [sp, #0x10]
000000000003c700	stp	x29, x30, [sp, #0x20]
000000000003c704	add	x29, sp, #0x20
000000000003c708	mov	x19, x0
000000000003c70c	ldrb	w8, [x0, #0x8]
000000000003c710	cbz	w8, 0x3c734
000000000003c714	ldr	x20, [x19, #0x10]
000000000003c718	cbz	x20, 0x3c740
000000000003c71c	add	x8, x20, #0x138
000000000003c720	mov	w9, #0x1
000000000003c724	ldaxr	w21, [x8]
000000000003c728	stlxr	w10, w9, [x8]
000000000003c72c	cbnz	w10, 0x3c724
000000000003c730	b	0x3c768
000000000003c734	mov	x20, #0x0
000000000003c738	mov	w21, #0x1
000000000003c73c	b	0x3c768
000000000003c740	adrp	x0, 44 ; 0x68000
000000000003c744	add	x0, x0, #0xa00
000000000003c748	ldr	x8, [x0]
000000000003c74c	blr	x8
000000000003c750	ldr	x20, [x0]
000000000003c754	add	x8, x20, #0x138
000000000003c758	mov	w9, #0x1
000000000003c75c	ldaxr	w21, [x8]
000000000003c760	stlxr	w10, w9, [x8]
000000000003c764	cbnz	w10, 0x3c75c
000000000003c768	ldr	x0, [x19]
000000000003c76c	bl	0x4ddd8 ; symbol stub for: _pthread_mutex_unlock
000000000003c770	cbz	x20, 0x3c7a4
000000000003c774	add	x0, x20, #0x138
000000000003c778	ldaxr	w8, [x0]
000000000003c77c	stlxr	w9, w21, [x0]
000000000003c780	cbnz	w9, 0x3c778
000000000003c784	cbnz	w21, 0x3c7a4
000000000003c788	cmp	w8, #0x1
000000000003c78c	b.ne	0x3c7a4
000000000003c790	adr	x8, #0x460b3
000000000003c794	nop
000000000003c798	ldarb	w8, [x8]
000000000003c79c	tbz	w8, #0x0, 0x3c7a4
000000000003c7a0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000003c7a4	mov	x0, x19
000000000003c7a8	ldp	x29, x30, [sp, #0x20]
000000000003c7ac	ldp	x20, x19, [sp, #0x10]
000000000003c7b0	ldp	x22, x21, [sp], #0x30
000000000003c7b4	ret
000000000003c7b8	mov	x19, x0
000000000003c7bc	cbz	x20, 0x3c7f0
000000000003c7c0	add	x0, x20, #0x138
000000000003c7c4	ldaxr	w8, [x0]
000000000003c7c8	stlxr	w9, w21, [x0]
000000000003c7cc	cbnz	w9, 0x3c7c4
000000000003c7d0	cbnz	w21, 0x3c7f0
000000000003c7d4	cmp	w8, #0x1
000000000003c7d8	b.ne	0x3c7f0
000000000003c7dc	adr	x8, #0x46067
000000000003c7e0	nop
000000000003c7e4	ldarb	w8, [x8]
000000000003c7e8	tbz	w8, #0x0, 0x3c7f0
000000000003c7ec	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000003c7f0	mov	x0, x19
000000000003c7f4	bl	___clang_call_terminate
__ZNSt3__113unordered_mapIiP17_opaque_pthread_tNS_4hashIiEENS_8equal_toIiEEN6kotlin11std_support9allocatorINS_4pairIKiS2_EEEEED1Ev:
000000000003c7f8	stp	x20, x19, [sp, #-0x20]!
000000000003c7fc	stp	x29, x30, [sp, #0x10]
000000000003c800	add	x29, sp, #0x10
000000000003c804	mov	x19, x0
000000000003c808	ldr	x0, [x0, #0x10]
000000000003c80c	cbz	x0, 0x3c820
000000000003c810	ldr	x20, [x0]
000000000003c814	bl	0x4dba4 ; symbol stub for: _free
000000000003c818	mov	x0, x20
000000000003c81c	cbnz	x20, 0x3c810
000000000003c820	ldr	x0, [x19]
000000000003c824	str	xzr, [x19]
000000000003c828	cbz	x0, 0x3c830
000000000003c82c	bl	0x4dba4 ; symbol stub for: _free
000000000003c830	mov	x0, x19
000000000003c834	ldp	x29, x30, [sp, #0x10]
000000000003c838	ldp	x20, x19, [sp], #0x20
000000000003c83c	ret
__ZNSt3__113unordered_mapIiP6WorkerNS_4hashIiEENS_8equal_toIiEEN6kotlin11std_support9allocatorINS_4pairIKiS2_EEEEED1Ev:
000000000003c840	stp	x20, x19, [sp, #-0x20]!
000000000003c844	stp	x29, x30, [sp, #0x10]
000000000003c848	add	x29, sp, #0x10
000000000003c84c	mov	x19, x0
000000000003c850	ldr	x0, [x0, #0x10]
000000000003c854	cbz	x0, 0x3c868
000000000003c858	ldr	x20, [x0]
000000000003c85c	bl	0x4dba4 ; symbol stub for: _free
000000000003c860	mov	x0, x20
000000000003c864	cbnz	x20, 0x3c858
000000000003c868	ldr	x0, [x19]
000000000003c86c	str	xzr, [x19]
000000000003c870	cbz	x0, 0x3c878
000000000003c874	bl	0x4dba4 ; symbol stub for: _free
000000000003c878	mov	x0, x19
000000000003c87c	ldp	x29, x30, [sp, #0x10]
000000000003c880	ldp	x20, x19, [sp], #0x20
000000000003c884	ret
__ZNSt3__113unordered_mapIiPN12_GLOBAL__N_16FutureENS_4hashIiEENS_8equal_toIiEEN6kotlin11std_support9allocatorINS_4pairIKiS3_EEEEED1Ev:
000000000003c888	stp	x20, x19, [sp, #-0x20]!
000000000003c88c	stp	x29, x30, [sp, #0x10]
000000000003c890	add	x29, sp, #0x10
000000000003c894	mov	x19, x0
000000000003c898	ldr	x0, [x0, #0x10]
000000000003c89c	cbz	x0, 0x3c8b0
000000000003c8a0	ldr	x20, [x0]
000000000003c8a4	bl	0x4dba4 ; symbol stub for: _free
000000000003c8a8	mov	x0, x20
000000000003c8ac	cbnz	x20, 0x3c8a0
000000000003c8b0	ldr	x0, [x19]
000000000003c8b4	str	xzr, [x19]
000000000003c8b8	cbz	x0, 0x3c8c0
000000000003c8bc	bl	0x4dba4 ; symbol stub for: _free
000000000003c8c0	mov	x0, x19
000000000003c8c4	ldp	x29, x30, [sp, #0x10]
000000000003c8c8	ldp	x20, x19, [sp], #0x20
000000000003c8cc	ret
__ZN12_GLOBAL__N_16Future14cancelUnlockedEP11MemoryState:
000000000003c8d0	sub	sp, sp, #0x60
000000000003c8d4	stp	x24, x23, [sp, #0x20]
000000000003c8d8	stp	x22, x21, [sp, #0x30]
000000000003c8dc	stp	x20, x19, [sp, #0x40]
000000000003c8e0	stp	x29, x30, [sp, #0x50]
000000000003c8e4	add	x29, sp, #0x50
000000000003c8e8	mov	x20, x1
000000000003c8ec	mov	x21, x0
000000000003c8f0	add	x19, x1, #0x138
000000000003c8f4	mov	w8, #0x1
000000000003c8f8	ldaxr	w22, [x19]
000000000003c8fc	stlxr	w9, w8, [x19]
000000000003c900	cbnz	w9, 0x3c8f8
000000000003c904	add	x0, x21, #0x10
000000000003c908	str	x0, [sp, #0x8]
000000000003c90c	mov	w8, #0x1
000000000003c910	strb	w8, [sp, #0x10]
000000000003c914	str	x20, [sp, #0x18]
000000000003c918	ldaxr	w23, [x19]
000000000003c91c	stlxr	w9, w8, [x19]
000000000003c920	cbnz	w9, 0x3c918
000000000003c924	bl	0x4ddcc ; symbol stub for: _pthread_mutex_lock
000000000003c928	cbz	x20, 0x3c95c
000000000003c92c	ldaxr	w8, [x19]
000000000003c930	stlxr	w9, w23, [x19]
000000000003c934	cbnz	w9, 0x3c92c
000000000003c938	cbnz	w23, 0x3c95c
000000000003c93c	cmp	w8, #0x1
000000000003c940	b.ne	0x3c95c
000000000003c944	adr	x8, #0x45eff
000000000003c948	nop
000000000003c94c	ldarb	w8, [x8]
000000000003c950	tbz	w8, #0x0, 0x3c95c
000000000003c954	mov	x0, x19
000000000003c958	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000003c95c	mov	w8, #0x3
000000000003c960	str	w8, [x21]
000000000003c964	str	xzr, [x21, #0x8]
000000000003c968	add	x0, x21, #0x50
000000000003c96c	bl	0x4dd48 ; symbol stub for: _pthread_cond_broadcast
000000000003c970	add	x0, sp, #0x8
000000000003c974	bl	__ZN12_GLOBAL__N_16LockerD1Ev
000000000003c978	bl	__ZN12_GLOBAL__N_18theStateEv
000000000003c97c	mov	x21, x0
000000000003c980	str	x0, [sp, #0x8]
000000000003c984	mov	w8, #0x1
000000000003c988	strb	w8, [sp, #0x10]
000000000003c98c	str	x20, [sp, #0x18]
000000000003c990	ldaxr	w23, [x19]
000000000003c994	stlxr	w9, w8, [x19]
000000000003c998	cbnz	w9, 0x3c990
000000000003c99c	mov	x0, x21
000000000003c9a0	bl	0x4ddcc ; symbol stub for: _pthread_mutex_lock
000000000003c9a4	cbz	x20, 0x3c9d8
000000000003c9a8	ldaxr	w8, [x19]
000000000003c9ac	stlxr	w9, w23, [x19]
000000000003c9b0	cbnz	w9, 0x3c9a8
000000000003c9b4	cbnz	w23, 0x3c9d8
000000000003c9b8	cmp	w8, #0x1
000000000003c9bc	b.ne	0x3c9d8
000000000003c9c0	adr	x8, #0x45e83
000000000003c9c4	nop
000000000003c9c8	ldarb	w8, [x8]
000000000003c9cc	tbz	w8, #0x0, 0x3c9d8
000000000003c9d0	mov	x0, x19
000000000003c9d4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000003c9d8	ldr	w8, [x21, #0xf0]
000000000003c9dc	add	w8, w8, #0x1
000000000003c9e0	str	w8, [x21, #0xf0]
000000000003c9e4	add	x0, sp, #0x8
000000000003c9e8	bl	__ZN12_GLOBAL__N_16LockerD1Ev
000000000003c9ec	add	x0, x21, #0x40
000000000003c9f0	bl	0x4dd48 ; symbol stub for: _pthread_cond_broadcast
000000000003c9f4	cbz	x20, 0x3ca28
000000000003c9f8	ldaxr	w8, [x19]
000000000003c9fc	stlxr	w9, w22, [x19]
000000000003ca00	cbnz	w9, 0x3c9f8
000000000003ca04	cbnz	w22, 0x3ca28
000000000003ca08	cmp	w8, #0x1
000000000003ca0c	b.ne	0x3ca28
000000000003ca10	adr	x8, #0x45e33
000000000003ca14	nop
000000000003ca18	ldarb	w8, [x8]
000000000003ca1c	tbz	w8, #0x0, 0x3ca28
000000000003ca20	mov	x0, x19
000000000003ca24	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000003ca28	ldp	x29, x30, [sp, #0x50]
000000000003ca2c	ldp	x20, x19, [sp, #0x40]
000000000003ca30	ldp	x22, x21, [sp, #0x30]
000000000003ca34	ldp	x24, x23, [sp, #0x20]
000000000003ca38	add	sp, sp, #0x60
000000000003ca3c	ret
000000000003ca40	mov	x21, x0
000000000003ca44	cbz	x20, 0x3caa8
000000000003ca48	ldaxr	w8, [x19]
000000000003ca4c	stlxr	w9, w23, [x19]
000000000003ca50	cbnz	w9, 0x3ca48
000000000003ca54	b	0x3ca7c
000000000003ca58	mov	x21, x0
000000000003ca5c	add	x0, sp, #0x8
000000000003ca60	bl	__ZN12_GLOBAL__N_16LockerD1Ev
000000000003ca64	b	0x3caa8
000000000003ca68	mov	x21, x0
000000000003ca6c	cbz	x20, 0x3caa8
000000000003ca70	ldaxr	w8, [x19]
000000000003ca74	stlxr	w9, w23, [x19]
000000000003ca78	cbnz	w9, 0x3ca70
000000000003ca7c	cbnz	w23, 0x3caa8
000000000003ca80	cmp	w8, #0x1
000000000003ca84	b.ne	0x3caa8
000000000003ca88	adr	x8, #0x45dbb
000000000003ca8c	nop
000000000003ca90	ldarb	w8, [x8]
000000000003ca94	tbz	w8, #0x0, 0x3caa8
000000000003ca98	mov	x0, x19
000000000003ca9c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000003caa0	b	0x3caa8
000000000003caa4	mov	x21, x0
000000000003caa8	cbnz	x20, 0x3cab4
000000000003caac	mov	x0, x21
000000000003cab0	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
000000000003cab4	ldaxr	w8, [x19]
000000000003cab8	stlxr	w9, w22, [x19]
000000000003cabc	cbnz	w9, 0x3cab4
000000000003cac0	cbnz	w22, 0x3caac
000000000003cac4	cmp	w8, #0x1
000000000003cac8	b.ne	0x3caac
000000000003cacc	adr	x8, #0x45d77
000000000003cad0	nop
000000000003cad4	ldarb	w8, [x8]
000000000003cad8	tbz	w8, #0x0, 0x3caac
000000000003cadc	mov	x0, x19
000000000003cae0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000003cae4	mov	x0, x21
000000000003cae8	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
__ZNSt3__16__treeIN12_GLOBAL__N_13JobENS1_10JobCompareEN6kotlin11std_support9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE:
000000000003caec	cbz	x0, 0x3cb20
000000000003caf0	stp	x20, x19, [sp, #-0x20]!
000000000003caf4	stp	x29, x30, [sp, #0x10]
000000000003caf8	add	x29, sp, #0x10
000000000003cafc	mov	x19, x0
000000000003cb00	ldr	x0, [x0]
000000000003cb04	bl	__ZNSt3__16__treeIN12_GLOBAL__N_13JobENS1_10JobCompareEN6kotlin11std_support9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE
000000000003cb08	ldr	x0, [x19, #0x8]
000000000003cb0c	bl	__ZNSt3__16__treeIN12_GLOBAL__N_13JobENS1_10JobCompareEN6kotlin11std_support9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE
000000000003cb10	mov	x0, x19
000000000003cb14	ldp	x29, x30, [sp, #0x10]
000000000003cb18	ldp	x20, x19, [sp], #0x20
000000000003cb1c	b	0x4dba4 ; symbol stub for: _free
000000000003cb20	ret
__ZNSt3__15dequeIN12_GLOBAL__N_13JobEN6kotlin11std_support9allocatorIS2_EEED1Ev:
000000000003cb24	stp	x22, x21, [sp, #-0x30]!
000000000003cb28	stp	x20, x19, [sp, #0x10]
000000000003cb2c	stp	x29, x30, [sp, #0x20]
000000000003cb30	add	x29, sp, #0x20
000000000003cb34	mov	x19, x0
000000000003cb38	ldp	x20, x21, [x0, #0x8]
000000000003cb3c	subs	x8, x21, x20
000000000003cb40	b.eq	0x3cbc8
000000000003cb44	ldr	x11, [x19, #0x20]
000000000003cb48	mov	x13, #0xa0a1
000000000003cb4c	movk	x13, #0xa0a0, lsl #16
000000000003cb50	movk	x13, #0xa0a0, lsl #32
000000000003cb54	movk	x13, #0xa0a0, lsl #48
000000000003cb58	umulh	x9, x11, x13
000000000003cb5c	lsr	x12, x9, #6
000000000003cb60	ldr	x9, [x20, x12, lsl #3]
000000000003cb64	mov	x14, #-0x66
000000000003cb68	madd	x10, x12, x14, x11
000000000003cb6c	mov	w15, #0x28
000000000003cb70	madd	x10, x10, x15, x9
000000000003cb74	mov	x9, x19
000000000003cb78	ldr	x16, [x9, #0x28]!
000000000003cb7c	add	x11, x16, x11
000000000003cb80	umulh	x13, x11, x13
000000000003cb84	lsr	x13, x13, #6
000000000003cb88	ldr	x16, [x20, x13, lsl #3]
000000000003cb8c	madd	x11, x13, x14, x11
000000000003cb90	madd	x11, x11, x15, x16
000000000003cb94	cmp	x11, x10
000000000003cb98	b.eq	0x3cbcc
000000000003cb9c	add	x12, x20, x12, lsl #3
000000000003cba0	b	0x3cbac
000000000003cba4	cmp	x11, x10
000000000003cba8	b.eq	0x3cbcc
000000000003cbac	add	x10, x10, #0x28
000000000003cbb0	ldr	x13, [x12]
000000000003cbb4	sub	x13, x10, x13
000000000003cbb8	cmp	x13, #0xff0
000000000003cbbc	b.ne	0x3cba4
000000000003cbc0	ldr	x10, [x12, #0x8]!
000000000003cbc4	b	0x3cba4
000000000003cbc8	add	x9, x19, #0x28
000000000003cbcc	str	xzr, [x9]
000000000003cbd0	asr	x8, x8, #3
000000000003cbd4	cmp	x8, #0x3
000000000003cbd8	b.lo	0x3cc00
000000000003cbdc	ldr	x0, [x20]
000000000003cbe0	bl	0x4dba4 ; symbol stub for: _free
000000000003cbe4	ldp	x8, x21, [x19, #0x8]
000000000003cbe8	add	x20, x8, #0x8
000000000003cbec	str	x20, [x19, #0x8]
000000000003cbf0	sub	x8, x21, x20
000000000003cbf4	asr	x8, x8, #3
000000000003cbf8	cmp	x8, #0x2
000000000003cbfc	b.hi	0x3cbdc
000000000003cc00	cmp	x8, #0x1
000000000003cc04	b.eq	0x3cc18
000000000003cc08	cmp	x8, #0x2
000000000003cc0c	b.ne	0x3cc20
000000000003cc10	mov	w8, #0x66
000000000003cc14	b	0x3cc1c
000000000003cc18	mov	w8, #0x33
000000000003cc1c	str	x8, [x19, #0x20]
000000000003cc20	cmp	x20, x21
000000000003cc24	b.eq	0x3cc58
000000000003cc28	ldr	x0, [x20], #0x8
000000000003cc2c	bl	0x4dba4 ; symbol stub for: _free
000000000003cc30	cmp	x20, x21
000000000003cc34	b.ne	0x3cc28
000000000003cc38	ldp	x9, x8, [x19, #0x8]
000000000003cc3c	subs	x9, x8, x9
000000000003cc40	b.eq	0x3cc58
000000000003cc44	sub	x9, x9, #0x8
000000000003cc48	mov	x10, #-0x1
000000000003cc4c	eor	x9, x10, x9, lsr #3
000000000003cc50	add	x8, x8, x9, lsl #3
000000000003cc54	str	x8, [x19, #0x10]
000000000003cc58	ldr	x0, [x19]
000000000003cc5c	cbz	x0, 0x3cc64
000000000003cc60	bl	0x4dba4 ; symbol stub for: _free
000000000003cc64	mov	x0, x19
000000000003cc68	ldp	x29, x30, [sp, #0x20]
000000000003cc6c	ldp	x20, x19, [sp, #0x10]
000000000003cc70	ldp	x22, x21, [sp], #0x30
000000000003cc74	ret
__ZNSt3__18multisetIN12_GLOBAL__N_13JobENS1_10JobCompareEN6kotlin11std_support9allocatorIS2_EEED1Ev:
000000000003cc78	stp	x20, x19, [sp, #-0x20]!
000000000003cc7c	stp	x29, x30, [sp, #0x10]
000000000003cc80	add	x29, sp, #0x10
000000000003cc84	mov	x19, x0
000000000003cc88	ldr	x0, [x0, #0x8]
000000000003cc8c	bl	__ZNSt3__16__treeIN12_GLOBAL__N_13JobENS1_10JobCompareEN6kotlin11std_support9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE
000000000003cc90	mov	x0, x19
000000000003cc94	ldp	x29, x30, [sp, #0x10]
000000000003cc98	ldp	x20, x19, [sp], #0x20
000000000003cc9c	ret
___Kotlin_ObjCExport_initialize_block_invoke:
000000000003cca0	stp	x26, x25, [sp, #-0x50]!
000000000003cca4	stp	x24, x23, [sp, #0x10]
000000000003cca8	stp	x22, x21, [sp, #0x20]
000000000003ccac	stp	x20, x19, [sp, #0x30]
000000000003ccb0	stp	x29, x30, [sp, #0x40]
000000000003ccb4	add	x29, sp, #0x40
000000000003ccb8	adrp	x8, 70 ; 0x82000
000000000003ccbc	ldr	x19, [x8, #0xa98]
000000000003ccc0	cbz	x19, 0x3ce78
000000000003ccc4	adrp	x20, 70 ; 0x82000
000000000003ccc8	ldr	x9, [x20, #0xaa0]
000000000003cccc	cbz	x9, 0x3ce78
000000000003ccd0	adrp	x0, 44 ; 0x68000
000000000003ccd4	add	x0, x0, #0xa00
000000000003ccd8	ldr	x9, [x0]
000000000003ccdc	blr	x9
000000000003cce0	ldr	x25, [x0]
000000000003cce4	cbz	x25, 0x3cd04
000000000003cce8	add	x9, x25, #0x138
000000000003ccec	mov	w10, #0x1
000000000003ccf0	ldaxr	w24, [x9]
000000000003ccf4	stlxr	w11, w10, [x9]
000000000003ccf8	cbnz	w11, 0x3ccf0
000000000003ccfc	ldr	x19, [x8, #0xa98]
000000000003cd00	b	0x3cd08
000000000003cd04	mov	w24, #0x1
000000000003cd08	adrp	x23, 42 ; 0x66000
000000000003cd0c	ldr	x0, [x23, #0x710] ; Objc class ref: _OBJC_CLASS_$_NSObject
000000000003cd10	nop
000000000003cd14	ldr	x22, #0x2971c ; Objc selector ref: class
000000000003cd18	mov	x1, x22
000000000003cd1c	bl	0x4dcb8 ; Objc message: +[NSObject class]
000000000003cd20	mov	x1, x19
000000000003cd24	bl	0x4db5c ; symbol stub for: _class_getClassMethod
000000000003cd28	bl	0x4dc10 ; symbol stub for: _method_getTypeEncoding
000000000003cd2c	mov	x21, x0
000000000003cd30	ldr	x20, [x20, #0xaa0]
000000000003cd34	ldr	x0, [x23, #0x710]
000000000003cd38	mov	x1, x22
000000000003cd3c	bl	0x4dcb8 ; Objc message: -[x0 class]
000000000003cd40	mov	x1, x20
000000000003cd44	bl	0x4db5c ; symbol stub for: _class_getClassMethod
000000000003cd48	bl	0x4dc10 ; symbol stub for: _method_getTypeEncoding
000000000003cd4c	mov	x22, x0
000000000003cd50	adr	x0, #0x15c98 ; literal pool for: "NSBlock"
000000000003cd54	nop
000000000003cd58	bl	0x4dc94 ; symbol stub for: _objc_getClass
000000000003cd5c	adr	x2, #0x188
000000000003cd60	nop
000000000003cd64	mov	x1, x19
000000000003cd68	mov	x3, x21
000000000003cd6c	bl	0x4db2c ; symbol stub for: _class_addMethod
000000000003cd70	adr	x0, #0x15c80 ; literal pool for: "__NSCFBoolean"
000000000003cd74	nop
000000000003cd78	bl	0x4dc94 ; symbol stub for: _objc_getClass
000000000003cd7c	adr	x2, #0x494
000000000003cd80	nop
000000000003cd84	mov	x1, x19
000000000003cd88	mov	x3, x21
000000000003cd8c	bl	0x4db2c ; symbol stub for: _class_addMethod
000000000003cd90	adr	x0, #0x15c6e ; literal pool for: "SwiftObject"
000000000003cd94	nop
000000000003cd98	bl	0x4dc94 ; symbol stub for: _objc_getClass
000000000003cd9c	mov	x23, x0
000000000003cda0	cbz	x0, 0x3cdd4
000000000003cda4	adr	x2, #0x518
000000000003cda8	nop
000000000003cdac	mov	x0, x23
000000000003cdb0	mov	x1, x19
000000000003cdb4	mov	x3, x21
000000000003cdb8	bl	0x4db2c ; symbol stub for: _class_addMethod
000000000003cdbc	adr	x2, #0x5a8
000000000003cdc0	nop
000000000003cdc4	mov	x0, x23
000000000003cdc8	mov	x1, x20
000000000003cdcc	mov	x3, x22
000000000003cdd0	bl	0x4db2c ; symbol stub for: _class_addMethod
000000000003cdd4	adr	x0, #0x15c36 ; literal pool for: "_TtCs12_SwiftObject"
000000000003cdd8	nop
000000000003cddc	bl	0x4dc94 ; symbol stub for: _objc_getClass
000000000003cde0	mov	x23, x0
000000000003cde4	cbz	x0, 0x3ce18
000000000003cde8	adr	x2, #0x4d4
000000000003cdec	nop
000000000003cdf0	mov	x0, x23
000000000003cdf4	mov	x1, x19
000000000003cdf8	mov	x3, x21
000000000003cdfc	bl	0x4db2c ; symbol stub for: _class_addMethod
000000000003ce00	adr	x2, #0x564
000000000003ce04	nop
000000000003ce08	mov	x0, x23
000000000003ce0c	mov	x1, x20
000000000003ce10	mov	x3, x22
000000000003ce14	bl	0x4db2c ; symbol stub for: _class_addMethod
000000000003ce18	cbz	x25, 0x3ce48
000000000003ce1c	add	x0, x25, #0x138
000000000003ce20	ldaxr	w8, [x0]
000000000003ce24	stlxr	w9, w24, [x0]
000000000003ce28	cbnz	w9, 0x3ce20
000000000003ce2c	cbnz	w24, 0x3ce48
000000000003ce30	cmp	w8, #0x1
000000000003ce34	b.ne	0x3ce48
000000000003ce38	adr	x8, #0x45a0b
000000000003ce3c	nop
000000000003ce40	ldarb	w8, [x8]
000000000003ce44	tbnz	w8, #0x0, 0x3ce60
000000000003ce48	ldp	x29, x30, [sp, #0x40]
000000000003ce4c	ldp	x20, x19, [sp, #0x30]
000000000003ce50	ldp	x22, x21, [sp, #0x20]
000000000003ce54	ldp	x24, x23, [sp, #0x10]
000000000003ce58	ldp	x26, x25, [sp], #0x50
000000000003ce5c	ret
000000000003ce60	ldp	x29, x30, [sp, #0x40]
000000000003ce64	ldp	x20, x19, [sp, #0x30]
000000000003ce68	ldp	x22, x21, [sp, #0x20]
000000000003ce6c	ldp	x24, x23, [sp, #0x10]
000000000003ce70	ldp	x26, x25, [sp], #0x50
000000000003ce74	b	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000003ce78	adr	x2, #0x15b4f ; literal pool for: "unexpected initialization order"
000000000003ce7c	nop
000000000003ce80	mov	w0, #0x0
000000000003ce84	bl	__ZN6kotlin8internal24RuntimeAssertFailedPanicEbPKcS2_z
000000000003ce88	b	0x3cea4
000000000003ce8c	b	0x3cea4
000000000003ce90	b	0x3cea4
000000000003ce94	b	0x3cea4
000000000003ce98	b	0x3cea4
000000000003ce9c	b	0x3cea4
000000000003cea0	b	0x3cea4
000000000003cea4	mov	x19, x0
000000000003cea8	cbz	x25, 0x3cedc
000000000003ceac	add	x0, x25, #0x138
000000000003ceb0	ldaxr	w8, [x0]
000000000003ceb4	stlxr	w9, w24, [x0]
000000000003ceb8	cbnz	w9, 0x3ceb0
000000000003cebc	cbnz	w24, 0x3cedc
000000000003cec0	cmp	w8, #0x1
000000000003cec4	b.ne	0x3cedc
000000000003cec8	adr	x8, #0x4597b
000000000003cecc	nop
000000000003ced0	ldarb	w8, [x8]
000000000003ced4	tbz	w8, #0x0, 0x3cedc
000000000003ced8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000003cedc	mov	x0, x19
000000000003cee0	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
__ZL16blockToKotlinImpP11objc_objectP13objc_selectorPP9ObjHeader:
000000000003cee4	sub	sp, sp, #0x90
000000000003cee8	stp	x28, x27, [sp, #0x30]
000000000003ceec	stp	x26, x25, [sp, #0x40]
000000000003cef0	stp	x24, x23, [sp, #0x50]
000000000003cef4	stp	x22, x21, [sp, #0x60]
000000000003cef8	stp	x20, x19, [sp, #0x70]
000000000003cefc	stp	x29, x30, [sp, #0x80]
000000000003cf00	add	x29, sp, #0x80
000000000003cf04	stp	x0, x2, [sp, #0x18]
000000000003cf08	ldr	w8, [x0, #0x8]
000000000003cf0c	ldr	x9, [x0, #0x18]
000000000003cf10	tst	w8, #0x2000000
000000000003cf14	mov	w8, #0x20
000000000003cf18	mov	w10, #0x10
000000000003cf1c	csel	x8, x10, x8, eq
000000000003cf20	ldr	x2, [x9, x8]
000000000003cf24	nop
000000000003cf28	ldr	x0, #0x297f0 ; Objc class ref: _OBJC_CLASS_$_NSMethodSignature
000000000003cf2c	nop
000000000003cf30	ldr	x1, #0x29720 ; Objc selector ref: signatureWithObjCTypes:
000000000003cf34	bl	0x4dcb8 ; Objc message: +[NSMethodSignature signatureWithObjCTypes:]
000000000003cf38	mov	x23, x0
000000000003cf3c	nop
000000000003cf40	ldr	x1, #0x29688 ; Objc selector ref: numberOfArguments
000000000003cf44	bl	0x4dcb8 ; Objc message: -[x0 numberOfArguments]
000000000003cf48	sub	w8, w0, #0x1
000000000003cf4c	str	w8, [sp, #0x14]
000000000003cf50	cmp	w8, #0x1
000000000003cf54	b.lt	0x3d038
000000000003cf58	nop
000000000003cf5c	ldr	x24, #0x2955c ; Objc selector ref: getArgumentTypeAtIndex:
000000000003cf60	nop
000000000003cf64	ldr	x8, #0x170a4 ; literal pool symbol address: _NSGenericException
000000000003cf68	ldr	x8, [x8]
000000000003cf6c	str	x8, [sp, #0x28]
000000000003cf70	nop
000000000003cf74	ldr	x26, #0x2968c ; Objc selector ref: raise:format:
000000000003cf78	and	x19, x0, #0xffffffff
000000000003cf7c	mov	w21, #0x1
000000000003cf80	adrp	x8, 44 ; 0x68000
000000000003cf84	add	x8, x8, #0xa00
000000000003cf88	ldr	x20, [x8]
000000000003cf8c	mov	w28, #0x1
000000000003cf90	b	0x3cfa0
000000000003cf94	add	x28, x28, #0x1
000000000003cf98	cmp	x28, x19
000000000003cf9c	b.eq	0x3d038
000000000003cfa0	mov	x0, x23
000000000003cfa4	mov	x1, x24
000000000003cfa8	mov	x2, x28
000000000003cfac	bl	0x4dcb8 ; Objc message: -[x0 raise:format:]
000000000003cfb0	ldrb	w9, [x0]
000000000003cfb4	cmp	w9, #0x40
000000000003cfb8	b.eq	0x3cf94
000000000003cfbc	mov	x8, x0
000000000003cfc0	adrp	x0, 44 ; 0x68000
000000000003cfc4	add	x0, x0, #0xa00
000000000003cfc8	blr	x20
000000000003cfcc	ldr	x25, [x0]
000000000003cfd0	add	x22, x25, #0x138
000000000003cfd4	ldaxr	w27, [x22]
000000000003cfd8	stlxr	w9, w21, [x22]
000000000003cfdc	cbnz	w9, 0x3cfd4
000000000003cfe0	nop
000000000003cfe4	ldr	x0, #0x2971c ; Objc class ref: _OBJC_CLASS_$_NSException
000000000003cfe8	str	x8, [sp]
000000000003cfec	mov	x1, x26
000000000003cff0	ldr	x2, [sp, #0x28]
000000000003cff4	adr	x3, #0x26a1c ; Objc cfstring ref: @"bad cfstring ref"
000000000003cff8	nop
000000000003cffc	bl	0x4dcb8 ; Objc message: +[NSException raise:format:]
000000000003d000	cbz	x25, 0x3cf94
000000000003d004	ldaxr	w8, [x22]
000000000003d008	stlxr	w9, w27, [x22]
000000000003d00c	cbnz	w9, 0x3d004
000000000003d010	cbnz	w27, 0x3cf94
000000000003d014	cmp	w8, #0x1
000000000003d018	b.ne	0x3cf94
000000000003d01c	adr	x8, #0x45827
000000000003d020	nop
000000000003d024	ldarb	w8, [x8]
000000000003d028	tbz	w8, #0x0, 0x3cf94
000000000003d02c	mov	x0, x22
000000000003d030	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000003d034	b	0x3cf94
000000000003d038	nop
000000000003d03c	ldr	x1, #0x29564 ; Objc selector ref: methodReturnType
000000000003d040	mov	x0, x23
000000000003d044	bl	0x4dcb8 ; Objc message: -[x0 methodReturnType]
000000000003d048	ldrb	w9, [x0]
000000000003d04c	cmp	w9, #0x40
000000000003d050	b.eq	0x3d0e0
000000000003d054	mov	x8, x0
000000000003d058	adrp	x0, 43 ; 0x68000
000000000003d05c	add	x0, x0, #0xa00
000000000003d060	ldr	x9, [x0]
000000000003d064	blr	x9
000000000003d068	ldr	x21, [x0]
000000000003d06c	add	x22, x21, #0x138
000000000003d070	mov	w9, #0x1
000000000003d074	ldaxr	w20, [x22]
000000000003d078	stlxr	w10, w9, [x22]
000000000003d07c	cbnz	w10, 0x3d074
000000000003d080	nop
000000000003d084	ldr	x0, #0x2967c ; Objc class ref: _OBJC_CLASS_$_NSException
000000000003d088	nop
000000000003d08c	ldr	x9, #0x16f7c ; literal pool symbol address: _NSGenericException
000000000003d090	ldr	x2, [x9]
000000000003d094	nop
000000000003d098	ldr	x1, #0x29568 ; Objc selector ref: raise:format:
000000000003d09c	str	x8, [sp]
000000000003d0a0	adr	x3, #0x26990 ; Objc cfstring ref: @"bad cfstring ref"
000000000003d0a4	nop
000000000003d0a8	bl	0x4dcb8 ; Objc message: +[NSException raise:format:]
000000000003d0ac	cbz	x21, 0x3d0e0
000000000003d0b0	ldaxr	w8, [x22]
000000000003d0b4	stlxr	w9, w20, [x22]
000000000003d0b8	cbnz	w9, 0x3d0b0
000000000003d0bc	cbnz	w20, 0x3d0e0
000000000003d0c0	cmp	w8, #0x1
000000000003d0c4	b.ne	0x3d0e0
000000000003d0c8	adr	x8, #0x4577b
000000000003d0cc	nop
000000000003d0d0	ldarb	w8, [x8]
000000000003d0d4	tbz	w8, #0x0, 0x3d0e0
000000000003d0d8	mov	x0, x22
000000000003d0dc	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000003d0e0	ldr	w9, [sp, #0x14]
000000000003d0e4	cmp	w9, #0x3
000000000003d0e8	b.gt	0x3d11c
000000000003d0ec	adr	x8, #0x24fe4
000000000003d0f0	nop
000000000003d0f4	ldr	x2, [x8, w9, sxtw #3]
000000000003d0f8	ldp	x0, x1, [sp, #0x18]
000000000003d0fc	ldp	x29, x30, [sp, #0x80]
000000000003d100	ldp	x20, x19, [sp, #0x70]
000000000003d104	ldp	x22, x21, [sp, #0x60]
000000000003d108	ldp	x24, x23, [sp, #0x50]
000000000003d10c	ldp	x26, x25, [sp, #0x40]
000000000003d110	ldp	x28, x27, [sp, #0x30]
000000000003d114	add	sp, sp, #0x90
000000000003d118	br	x2
000000000003d11c	ldr	x0, [sp, #0x18]
000000000003d120	bl	0x4dd00 ; symbol stub for: _objc_retainBlock
000000000003d124	mov	x20, x0
000000000003d128	adrp	x0, 43 ; 0x68000
000000000003d12c	add	x0, x0, #0xa00
000000000003d130	ldr	x8, [x0]
000000000003d134	blr	x8
000000000003d138	ldr	x8, [x0]
000000000003d13c	ldr	x8, [x8, #0x118]
000000000003d140	add	x0, x8, #0x70
000000000003d144	mov	w1, #0x10
000000000003d148	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000003d14c	mov	x21, x0
000000000003d150	adr	x8, #0x192b0
000000000003d154	nop
000000000003d158	str	x8, [x21, #0x10]!
000000000003d15c	stur	xzr, [x21, #-0x8]
000000000003d160	ldr	x8, [sp, #0x20]
000000000003d164	str	x21, [x8]
000000000003d168	ldar	x8, [x21]
000000000003d16c	and	x8, x8, #0xfffffffffffffffc
000000000003d170	ldr	x9, [x8]
000000000003d174	cmp	x9, x8
000000000003d178	csel	x0, xzr, x8, eq
000000000003d17c	cbnz	x0, 0x3d188
000000000003d180	mov	x0, x21
000000000003d184	bl	__ZN6kotlin2mm15ExtraObjectData7InstallEP9ObjHeader
000000000003d188	add	x8, x0, #0x10
000000000003d18c	stlr	x20, [x8]
000000000003d190	mov	x0, x21
000000000003d194	ldp	x29, x30, [sp, #0x80]
000000000003d198	ldp	x20, x19, [sp, #0x70]
000000000003d19c	ldp	x22, x21, [sp, #0x60]
000000000003d1a0	ldp	x24, x23, [sp, #0x50]
000000000003d1a4	ldp	x26, x25, [sp, #0x40]
000000000003d1a8	ldp	x28, x27, [sp, #0x30]
000000000003d1ac	add	sp, sp, #0x90
000000000003d1b0	ret
000000000003d1b4	mov	x19, x0
000000000003d1b8	cbz	x21, 0x3d208
000000000003d1bc	ldaxr	w8, [x22]
000000000003d1c0	stlxr	w9, w20, [x22]
000000000003d1c4	cbnz	w9, 0x3d1bc
000000000003d1c8	cbz	w20, 0x3d1e8
000000000003d1cc	b	0x3d208
000000000003d1d0	mov	x19, x0
000000000003d1d4	cbz	x25, 0x3d208
000000000003d1d8	ldaxr	w8, [x22]
000000000003d1dc	stlxr	w9, w27, [x22]
000000000003d1e0	cbnz	w9, 0x3d1d8
000000000003d1e4	cbnz	w27, 0x3d208
000000000003d1e8	cmp	w8, #0x1
000000000003d1ec	b.ne	0x3d208
000000000003d1f0	adr	x8, #0x45653
000000000003d1f4	nop
000000000003d1f8	ldarb	w8, [x8]
000000000003d1fc	tbz	w8, #0x0, 0x3d208
000000000003d200	mov	x0, x22
000000000003d204	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000003d208	mov	x0, x19
000000000003d20c	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
__ZL23boxedBooleanToKotlinImpP8NSNumberP13objc_selectorPP9ObjHeader:
000000000003d210	sub	sp, sp, #0x50
000000000003d214	stp	x22, x21, [sp, #0x20]
000000000003d218	stp	x20, x19, [sp, #0x30]
000000000003d21c	stp	x29, x30, [sp, #0x40]
000000000003d220	add	x29, sp, #0x40
000000000003d224	mov	x19, x2
000000000003d228	nop
000000000003d22c	ldr	x1, #0x291f4 ; Objc selector ref: boolValue
000000000003d230	bl	0x4dcb8 ; Objc message: -[x0 boolValue]
000000000003d234	mov	x21, x0
000000000003d238	str	xzr, [sp, #0x8]
000000000003d23c	adrp	x20, 43 ; 0x68000
000000000003d240	add	x20, x20, #0xa00
000000000003d244	ldr	x22, [x20]
000000000003d248	mov	x0, x20
000000000003d24c	blr	x22
000000000003d250	ldr	x8, [x0]
000000000003d254	ldr	x9, [x8, #0x110]
000000000003d258	add	x10, sp, #0x8
000000000003d25c	str	x10, [x8, #0x110]
000000000003d260	mov	x8, #0x300000000
000000000003d264	stp	x9, x8, [sp, #0x10]
000000000003d268	adr	x8, #0x455db
000000000003d26c	nop
000000000003d270	ldarb	w8, [x8]
000000000003d274	tbz	w8, #0x0, 0x3d27c
000000000003d278	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000003d27c	mov	x0, x21
000000000003d280	mov	x1, x19
000000000003d284	bl	"_kfun:kotlin#<Boolean-box>(kotlin.Boolean){}kotlin.Any"
000000000003d288	mov	x8, x0
000000000003d28c	str	x0, [x19]
000000000003d290	mov	x0, x20
000000000003d294	blr	x22
000000000003d298	ldr	x9, [x0]
000000000003d29c	ldr	x10, [sp, #0x10]
000000000003d2a0	str	x10, [x9, #0x110]
000000000003d2a4	mov	x0, x8
000000000003d2a8	ldp	x29, x30, [sp, #0x40]
000000000003d2ac	ldp	x20, x19, [sp, #0x30]
000000000003d2b0	ldp	x22, x21, [sp, #0x20]
000000000003d2b4	add	sp, sp, #0x50
000000000003d2b8	ret
__ZL23SwiftObject_toKotlinImpP11objc_objectP13objc_selectorPP9ObjHeader:
000000000003d2bc	stp	x22, x21, [sp, #-0x30]!
000000000003d2c0	stp	x20, x19, [sp, #0x10]
000000000003d2c4	stp	x29, x30, [sp, #0x20]
000000000003d2c8	add	x29, sp, #0x20
000000000003d2cc	mov	x21, x2
000000000003d2d0	mov	x19, x0
000000000003d2d4	bl	0x4dd24 ; symbol stub for: _object_getClass
000000000003d2d8	bl	__ZL19getOrCreateTypeInfoP10objc_class
000000000003d2dc	mov	x22, x0
000000000003d2e0	mov	x0, x19
000000000003d2e4	bl	0x4dce8 ; symbol stub for: _objc_retain
000000000003d2e8	mov	x19, x0
000000000003d2ec	adrp	x0, 43 ; 0x68000
000000000003d2f0	add	x0, x0, #0xa00
000000000003d2f4	ldr	x8, [x0]
000000000003d2f8	blr	x8
000000000003d2fc	ldr	x8, [x0]
000000000003d300	ldr	x8, [x8, #0x118]
000000000003d304	ldrsw	x9, [x22, #0x14]
000000000003d308	add	x9, x9, #0xf
000000000003d30c	and	x1, x9, #0xfffffffffffffff8
000000000003d310	add	x0, x8, #0x70
000000000003d314	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000003d318	mov	x20, x0
000000000003d31c	str	x22, [x20, #0x10]!
000000000003d320	stur	xzr, [x20, #-0x8]
000000000003d324	str	x20, [x21]
000000000003d328	ldar	x8, [x20]
000000000003d32c	and	x8, x8, #0xfffffffffffffffc
000000000003d330	ldr	x9, [x8]
000000000003d334	cmp	x9, x8
000000000003d338	csel	x0, xzr, x8, eq
000000000003d33c	cbnz	x0, 0x3d348
000000000003d340	mov	x0, x20
000000000003d344	bl	__ZN6kotlin2mm15ExtraObjectData7InstallEP9ObjHeader
000000000003d348	add	x8, x0, #0x10
000000000003d34c	stlr	x19, [x8]
000000000003d350	mov	x0, x20
000000000003d354	ldp	x29, x30, [sp, #0x20]
000000000003d358	ldp	x20, x19, [sp, #0x10]
000000000003d35c	ldp	x22, x21, [sp], #0x30
000000000003d360	ret
__ZL40SwiftObject_releaseAsAssociatedObjectImpP11objc_objectP13objc_selector11ReleaseMode:
000000000003d364	cmp	w2, #0x1
000000000003d368	b.hi	0x3d370
000000000003d36c	b	0x4dcdc ; symbol stub for: _objc_release
000000000003d370	ret
__ZL19getOrCreateTypeInfoP10objc_class:
000000000003d374	sub	sp, sp, #0x1c0
000000000003d378	stp	x28, x27, [sp, #0x160]
000000000003d37c	stp	x26, x25, [sp, #0x170]
000000000003d380	stp	x24, x23, [sp, #0x180]
000000000003d384	stp	x22, x21, [sp, #0x190]
000000000003d388	stp	x20, x19, [sp, #0x1a0]
000000000003d38c	stp	x29, x30, [sp, #0x1b0]
000000000003d390	add	x29, sp, #0x1b0
000000000003d394	mov	x19, x0
000000000003d398	adr	x23, #0x454b2
000000000003d39c	nop
000000000003d3a0	mov	x1, x23
000000000003d3a4	bl	0x4dc88 ; symbol stub for: _objc_getAssociatedObject
000000000003d3a8	nop
000000000003d3ac	ldr	x20, #0x2924c ; Objc selector ref: pointerValue
000000000003d3b0	mov	x1, x20
000000000003d3b4	bl	0x4dcb8 ; Objc message: -[x0 pointerValue]
000000000003d3b8	mov	x22, x0
000000000003d3bc	cbnz	x0, 0x3d410
000000000003d3c0	mov	x0, x19
000000000003d3c4	bl	0x4db74 ; symbol stub for: _class_getSuperclass
000000000003d3c8	cbz	x0, 0x3d3d8
000000000003d3cc	bl	__ZL19getOrCreateTypeInfoP10objc_class
000000000003d3d0	mov	x26, x0
000000000003d3d4	b	0x3d3e0
000000000003d3d8	adr	x26, #0x170e8
000000000003d3dc	nop
000000000003d3e0	add	x0, x23, #0x1
000000000003d3e4	bl	__ZN6kotlin8SpinLockILNS_24MutexThreadStateHandlingE1EE4lockEv
000000000003d3e8	mov	x0, x19
000000000003d3ec	mov	x1, x23
000000000003d3f0	bl	0x4dc88 ; symbol stub for: _objc_getAssociatedObject
000000000003d3f4	mov	x1, x20
000000000003d3f8	bl	0x4dcb8 ; Objc message: -[x0 pointerValue]
000000000003d3fc	mov	x22, x0
000000000003d400	cbz	x0, 0x3d434
000000000003d404	adr	x8, #0x45447
000000000003d408	nop
000000000003d40c	stlrb	wzr, [x8]
000000000003d410	mov	x0, x22
000000000003d414	ldp	x29, x30, [sp, #0x1b0]
000000000003d418	ldp	x20, x19, [sp, #0x1a0]
000000000003d41c	ldp	x22, x21, [sp, #0x190]
000000000003d420	ldp	x24, x23, [sp, #0x180]
000000000003d424	ldp	x26, x25, [sp, #0x170]
000000000003d428	ldp	x28, x27, [sp, #0x160]
000000000003d42c	add	sp, sp, #0x1c0
000000000003d430	ret
000000000003d434	adrp	x0, 43 ; 0x68000
000000000003d438	add	x0, x0, #0xa00
000000000003d43c	ldr	x20, [x0]
000000000003d440	blr	x20
000000000003d444	ldr	x8, [x0]
000000000003d448	cbz	x8, 0x3d46c
000000000003d44c	str	x8, [sp, #0x28]
000000000003d450	add	x8, x8, #0x138
000000000003d454	mov	w9, #0x1
000000000003d458	ldaxr	w11, [x8]
000000000003d45c	stlxr	w10, w9, [x8]
000000000003d460	cbnz	w10, 0x3d458
000000000003d464	str	x11, [sp, #0x18]
000000000003d468	b	0x3d478
000000000003d46c	str	xzr, [sp, #0x28]
000000000003d470	mov	w8, #0x1
000000000003d474	str	x8, [sp, #0x18]
000000000003d478	movi.16b	v0, #0x0
000000000003d47c	stp	q0, q0, [sp, #0xb0]
000000000003d480	mov	w8, #0x3f800000
000000000003d484	str	w8, [sp, #0xd0]
000000000003d488	sub	x1, x29, #0xd0
000000000003d48c	mov	x0, x19
000000000003d490	bl	0x4db44 ; symbol stub for: _class_copyMethodList
000000000003d494	mov	x22, x0
000000000003d498	str	x20, [sp, #0x20]
000000000003d49c	str	x19, [sp, #0x48]
000000000003d4a0	mov	x21, #0x2d69
000000000003d4a4	movk	x21, #0xeb38, lsl #16
000000000003d4a8	movk	x21, #0xea08, lsl #32
000000000003d4ac	movk	x21, #0x9ddf, lsl #48
000000000003d4b0	ldur	w8, [x29, #-0xd0]
000000000003d4b4	cbz	w8, 0x3d790
000000000003d4b8	mov	x19, #0x0
000000000003d4bc	add	x8, sp, #0xb0
000000000003d4c0	add	x20, x8, #0x10
000000000003d4c4	mov	w27, #0x1
000000000003d4c8	b	0x3d514
000000000003d4cc	and	x28, x8, x21
000000000003d4d0	ldr	x9, [sp, #0xb0]
000000000003d4d4	ldr	x8, [x9, x28, lsl #3]
000000000003d4d8	cbz	x8, 0x3d628
000000000003d4dc	ldr	x9, [x8]
000000000003d4e0	str	x9, [x23]
000000000003d4e4	str	x23, [x8]
000000000003d4e8	ldr	x8, [sp, #0xc8]
000000000003d4ec	add	x8, x8, #0x1
000000000003d4f0	str	x8, [sp, #0xc8]
000000000003d4f4	add	x19, x19, #0x1
000000000003d4f8	ldur	w8, [x29, #-0xd0]
000000000003d4fc	cmp	x19, x8
000000000003d500	mov	x21, #0x2d69
000000000003d504	movk	x21, #0xeb38, lsl #16
000000000003d508	movk	x21, #0xea08, lsl #32
000000000003d50c	movk	x21, #0x9ddf, lsl #48
000000000003d510	b.hs	0x3d794
000000000003d514	ldr	x0, [x22, x19, lsl #3]
000000000003d518	bl	0x4dc04 ; symbol stub for: _method_getName
000000000003d51c	mov	x24, x0
000000000003d520	lsr	x8, x0, #32
000000000003d524	lsl	w9, w24, #3
000000000003d528	add	x9, x9, #0x8
000000000003d52c	eor	x9, x9, x8
000000000003d530	mul	x9, x9, x21
000000000003d534	eor	x8, x9, x8
000000000003d538	eor	x8, x8, x9, lsr #47
000000000003d53c	mul	x8, x8, x21
000000000003d540	eor	x8, x8, x8, lsr #47
000000000003d544	mul	x21, x8, x21
000000000003d548	ldr	x25, [sp, #0xb8]
000000000003d54c	cbz	x25, 0x3d5e4
000000000003d550	fmov	d0, x25
000000000003d554	cnt.8b	v0, v0
000000000003d558	uaddlv.8b	h0, v0
000000000003d55c	fmov	w8, s0
000000000003d560	cmp	x8, #0x1
000000000003d564	b.hi	0x3d574
000000000003d568	sub	x9, x25, #0x1
000000000003d56c	and	x28, x21, x9
000000000003d570	b	0x3d588
000000000003d574	mov	x28, x21
000000000003d578	cmp	x21, x25
000000000003d57c	b.lo	0x3d588
000000000003d580	udiv	x9, x21, x25
000000000003d584	msub	x28, x9, x25, x21
000000000003d588	ldr	x9, [sp, #0xb0]
000000000003d58c	ldr	x9, [x9, x28, lsl #3]
000000000003d590	cbz	x9, 0x3d5e4
000000000003d594	sub	x10, x25, #0x1
000000000003d598	b	0x3d5b4
000000000003d59c	and	x11, x11, x10
000000000003d5a0	cmp	x11, x28
000000000003d5a4	b.ne	0x3d5e4
000000000003d5a8	ldr	x11, [x9, #0x10]
000000000003d5ac	cmp	x11, x24
000000000003d5b0	b.eq	0x3d4f4
000000000003d5b4	ldr	x9, [x9]
000000000003d5b8	cbz	x9, 0x3d5e4
000000000003d5bc	ldr	x11, [x9, #0x8]
000000000003d5c0	cmp	x11, x21
000000000003d5c4	b.eq	0x3d5a8
000000000003d5c8	cmp	x8, #0x1
000000000003d5cc	b.ls	0x3d59c
000000000003d5d0	cmp	x11, x25
000000000003d5d4	b.lo	0x3d5a0
000000000003d5d8	udiv	x12, x11, x25
000000000003d5dc	msub	x11, x12, x25, x11
000000000003d5e0	b	0x3d5a0
000000000003d5e4	mov	w0, #0x1
000000000003d5e8	mov	w1, #0x18
000000000003d5ec	bl	0x4db20 ; symbol stub for: _calloc
000000000003d5f0	mov	x23, x0
000000000003d5f4	stp	x21, x24, [x0, #0x8]
000000000003d5f8	ldr	x8, [sp, #0xc8]
000000000003d5fc	add	x8, x8, #0x1
000000000003d600	ucvtf	s0, x8
000000000003d604	ldr	s1, [sp, #0xd0]
000000000003d608	cbz	x25, 0x3d658
000000000003d60c	ucvtf	s2, x25
000000000003d610	fmul	s2, s1, s2
000000000003d614	fcmp	s2, s0
000000000003d618	b.mi	0x3d658
000000000003d61c	ldr	x9, [sp, #0xb0]
000000000003d620	ldr	x8, [x9, x28, lsl #3]
000000000003d624	cbnz	x8, 0x3d4dc
000000000003d628	ldr	x8, [sp, #0xc0]
000000000003d62c	str	x8, [x23]
000000000003d630	str	x23, [sp, #0xc0]
000000000003d634	str	x20, [x9, x28, lsl #3]
000000000003d638	ldr	x8, [x23]
000000000003d63c	cbz	x8, 0x3d4e8
000000000003d640	ldr	x8, [x8, #0x8]
000000000003d644	sub	x9, x25, #0x1
000000000003d648	tst	x25, x9
000000000003d64c	b.ne	0x3d718
000000000003d650	and	x8, x8, x9
000000000003d654	b	0x3d728
000000000003d658	cmp	x25, #0x3
000000000003d65c	cset	w8, lo
000000000003d660	sub	x9, x25, #0x1
000000000003d664	tst	x25, x9
000000000003d668	cset	w9, ne
000000000003d66c	orr	w8, w8, w9
000000000003d670	bfi	x8, x25, #1, #63
000000000003d674	fdiv	s0, s0, s1
000000000003d678	fcvtpu	x9, s0
000000000003d67c	cmp	x8, x9
000000000003d680	csel	x24, x9, x8, lo
000000000003d684	subs	x8, x24, #0x1
000000000003d688	b.ne	0x3d694
000000000003d68c	mov	w24, #0x2
000000000003d690	b	0x3d6ac
000000000003d694	tst	x24, x8
000000000003d698	b.eq	0x3d6ac
000000000003d69c	mov	x0, x24
000000000003d6a0	bl	0x4d928 ; symbol stub for: __ZNSt3__112__next_primeEm
000000000003d6a4	mov	x24, x0
000000000003d6a8	ldr	x25, [sp, #0xb8]
000000000003d6ac	cmp	x24, x25
000000000003d6b0	b.ls	0x3d6c4
000000000003d6b4	add	x0, sp, #0xb0
000000000003d6b8	mov	x1, x24
000000000003d6bc	bl	__ZNSt3__112__hash_tableIP13objc_selectorNS_4hashIS2_EENS_8equal_toIS2_EEN6kotlin11std_support9allocatorIS2_EEE8__rehashEm
000000000003d6c0	b	0x3d748
000000000003d6c4	b.hs	0x3d748
000000000003d6c8	ldr	x8, [sp, #0xc8]
000000000003d6cc	ucvtf	s0, x8
000000000003d6d0	ldr	s1, [sp, #0xd0]
000000000003d6d4	fdiv	s0, s0, s1
000000000003d6d8	fcvtpu	x0, s0
000000000003d6dc	cmp	x25, #0x3
000000000003d6e0	b.lo	0x3d734
000000000003d6e4	fmov	d0, x25
000000000003d6e8	cnt.8b	v0, v0
000000000003d6ec	uaddlv.8b	h0, v0
000000000003d6f0	fmov	w8, s0
000000000003d6f4	cmp	x8, #0x1
000000000003d6f8	b.hi	0x3d734
000000000003d6fc	sub	x8, x0, #0x1
000000000003d700	clz	x8, x8
000000000003d704	neg	x8, x8
000000000003d708	lsl	x8, x27, x8
000000000003d70c	cmp	x0, #0x2
000000000003d710	csel	x0, x0, x8, lo
000000000003d714	b	0x3d738
000000000003d718	cmp	x8, x25
000000000003d71c	b.lo	0x3d728
000000000003d720	udiv	x9, x8, x25
000000000003d724	msub	x8, x9, x25, x8
000000000003d728	ldr	x9, [sp, #0xb0]
000000000003d72c	add	x8, x9, x8, lsl #3
000000000003d730	b	0x3d4e4
000000000003d734	bl	0x4d928 ; symbol stub for: __ZNSt3__112__next_primeEm
000000000003d738	cmp	x24, x0
000000000003d73c	csel	x24, x0, x24, lo
000000000003d740	cmp	x24, x25
000000000003d744	b.lo	0x3d6b4
000000000003d748	ldr	x25, [sp, #0xb8]
000000000003d74c	sub	x8, x25, #0x1
000000000003d750	tst	x25, x8
000000000003d754	b.eq	0x3d4cc
000000000003d758	cmp	x21, x25
000000000003d75c	b.hs	0x3d774
000000000003d760	mov	x28, x21
000000000003d764	ldr	x9, [sp, #0xb0]
000000000003d768	ldr	x8, [x9, x28, lsl #3]
000000000003d76c	cbnz	x8, 0x3d4dc
000000000003d770	b	0x3d628
000000000003d774	udiv	x8, x21, x25
000000000003d778	mul	x8, x8, x25
000000000003d77c	sub	x28, x21, x8
000000000003d780	ldr	x9, [sp, #0xb0]
000000000003d784	ldr	x8, [x9, x28, lsl #3]
000000000003d788	cbnz	x8, 0x3d4dc
000000000003d78c	b	0x3d628
000000000003d790	cbz	x22, 0x3d79c
000000000003d794	mov	x0, x22
000000000003d798	bl	0x4dba4 ; symbol stub for: _free
000000000003d79c	ldr	x8, [x26, #0x60]
000000000003d7a0	ldr	x9, [x8, #0x10]
000000000003d7a4	cbz	x26, 0x3d850
000000000003d7a8	mov	x10, x9
000000000003d7ac	cbnz	x9, 0x3d7c8
000000000003d7b0	mov	x8, x26
000000000003d7b4	ldr	x8, [x8, #0x18]
000000000003d7b8	cbz	x8, 0x3d850
000000000003d7bc	ldr	x10, [x8, #0x60]
000000000003d7c0	ldr	x10, [x10, #0x10]
000000000003d7c4	cbz	x10, 0x3d7b4
000000000003d7c8	ldr	w8, [x10, #0x10]
000000000003d7cc	cbz	x9, 0x3d858
000000000003d7d0	ldr	x22, [x9, #0x8]
000000000003d7d4	ldr	x25, [x9, #0x18]
000000000003d7d8	ldr	w9, [x9, #0x20]
000000000003d7dc	str	w9, [sp, #0x34]
000000000003d7e0	cbz	x22, 0x3d860
000000000003d7e4	stp	xzr, xzr, [sp, #0x98]
000000000003d7e8	str	xzr, [sp, #0xa8]
000000000003d7ec	cbz	w8, 0x3d870
000000000003d7f0	tbnz	w8, #0x1f, 0x3ec48
000000000003d7f4	sxtw	x23, w8
000000000003d7f8	sbfiz	x24, x8, #3, #32
000000000003d7fc	mov	x0, x23
000000000003d800	mov	w1, #0x8
000000000003d804	bl	0x4db20 ; symbol stub for: _calloc
000000000003d808	stp	x0, x0, [sp, #0x98]
000000000003d80c	add	x19, x0, x23, lsl #3
000000000003d810	str	x19, [sp, #0xa8]
000000000003d814	mov	x1, x22
000000000003d818	mov	x2, x24
000000000003d81c	bl	0x4dbec ; symbol stub for: _memcpy
000000000003d820	str	x19, [sp, #0xa0]
000000000003d824	cbnz	x25, 0x3d874
000000000003d828	ldr	x25, [x26, #0x40]
000000000003d82c	ldr	w8, [x26, #0x3c]
000000000003d830	str	w8, [sp, #0x34]
000000000003d834	str	x26, [sp, #0x38]
000000000003d838	add	x8, sp, #0x80
000000000003d83c	stp	xzr, xzr, [sp, #0x88]
000000000003d840	add	x26, x8, #0x8
000000000003d844	str	x26, [sp, #0x80]
000000000003d848	cbnz	x25, 0x3d88c
000000000003d84c	b	0x3da28
000000000003d850	mov	w8, #-0x1
000000000003d854	cbnz	x9, 0x3d7d0
000000000003d858	mov	x25, #0x0
000000000003d85c	str	wzr, [sp, #0x34]
000000000003d860	add	x22, x26, #0x70
000000000003d864	stp	xzr, xzr, [sp, #0x98]
000000000003d868	str	xzr, [sp, #0xa8]
000000000003d86c	cbnz	w8, 0x3d7f0
000000000003d870	cbz	x25, 0x3d828
000000000003d874	str	x26, [sp, #0x38]
000000000003d878	add	x8, sp, #0x80
000000000003d87c	stp	xzr, xzr, [sp, #0x88]
000000000003d880	add	x26, x8, #0x8
000000000003d884	str	x26, [sp, #0x80]
000000000003d888	cbz	x25, 0x3da28
000000000003d88c	ldr	w9, [sp, #0x34]
000000000003d890	neg	w8, w9
000000000003d894	cmp	w9, #0x0
000000000003d898	csinc	w19, w8, w9, lt
000000000003d89c	cmp	w19, #0x1
000000000003d8a0	b.lt	0x3da28
000000000003d8a4	mov	x20, #0x0
000000000003d8a8	b	0x3d8b8
000000000003d8ac	add	x20, x20, #0x1
000000000003d8b0	cmp	x20, x19
000000000003d8b4	b.eq	0x3da28
000000000003d8b8	lsl	x8, x20, #4
000000000003d8bc	ldr	w21, [x25, x8]
000000000003d8c0	cbz	w21, 0x3d8ac
000000000003d8c4	add	x8, x25, x20, lsl #4
000000000003d8c8	ldrsw	x23, [x8, #0x4]
000000000003d8cc	stp	xzr, xzr, [x29, #-0xd0]
000000000003d8d0	stur	xzr, [x29, #-0xc0]
000000000003d8d4	cbz	w23, 0x3d948
000000000003d8d8	tbnz	w23, #0x1f, 0x3ec3c
000000000003d8dc	mov	x0, x23
000000000003d8e0	mov	w1, #0x8
000000000003d8e4	bl	0x4db20 ; symbol stub for: _calloc
000000000003d8e8	mov	x22, x0
000000000003d8ec	lsl	x1, x23, #3
000000000003d8f0	add	x24, x0, x1
000000000003d8f4	stur	x0, [x29, #-0xd0]
000000000003d8f8	stur	x24, [x29, #-0xc0]
000000000003d8fc	bl	0x4db14 ; symbol stub for: _bzero
000000000003d900	mov	x8, #0x0
000000000003d904	stur	x24, [x29, #-0xc8]
000000000003d908	add	x9, x25, x20, lsl #4
000000000003d90c	and	x10, x23, #0xffffffff
000000000003d910	lsl	x10, x10, #3
000000000003d914	sub	x10, x10, #0x8
000000000003d918	ldr	x11, [x9, #0x8]!
000000000003d91c	ldr	x11, [x11, x8]
000000000003d920	str	x11, [x22, x8]
000000000003d924	cmp	x10, x8
000000000003d928	b.eq	0x3d948
000000000003d92c	ldur	x22, [x29, #-0xd0]
000000000003d930	add	x8, x8, #0x8
000000000003d934	ldr	x11, [x9]
000000000003d938	ldr	x11, [x11, x8]
000000000003d93c	str	x11, [x22, x8]
000000000003d940	cmp	x10, x8
000000000003d944	b.ne	0x3d92c
000000000003d948	ldr	x23, [sp, #0x88]
000000000003d94c	cbz	x23, 0x3d990
000000000003d950	mov	x22, x26
000000000003d954	ldr	w8, [x23, #0x20]
000000000003d958	cmp	w21, w8
000000000003d95c	b.ge	0x3d974
000000000003d960	ldr	x8, [x23]
000000000003d964	cbz	x8, 0x3d9ec
000000000003d968	mov	x22, x23
000000000003d96c	mov	x23, x8
000000000003d970	b	0x3d954
000000000003d974	cmp	w8, w21
000000000003d978	b.ge	0x3d998
000000000003d97c	mov	x22, x23
000000000003d980	ldr	x8, [x22, #0x8]!
000000000003d984	cbz	x8, 0x3d998
000000000003d988	mov	x23, x8
000000000003d98c	b	0x3d954
000000000003d990	mov	x23, x26
000000000003d994	mov	x22, x26
000000000003d998	ldr	x8, [x22]
000000000003d99c	cbnz	x8, 0x3da14
000000000003d9a0	mov	w0, #0x1
000000000003d9a4	mov	w1, #0x40
000000000003d9a8	bl	0x4db20 ; symbol stub for: _calloc
000000000003d9ac	str	w21, [x0, #0x20]
000000000003d9b0	ldur	q0, [x29, #-0xd0]
000000000003d9b4	stur	q0, [x0, #0x28]
000000000003d9b8	ldur	x8, [x29, #-0xc0]
000000000003d9bc	str	x8, [x0, #0x38]
000000000003d9c0	stp	xzr, xzr, [x29, #-0xd0]
000000000003d9c4	stur	xzr, [x29, #-0xc0]
000000000003d9c8	stp	xzr, xzr, [x0]
000000000003d9cc	str	x23, [x0, #0x10]
000000000003d9d0	str	x0, [x22]
000000000003d9d4	ldr	x8, [sp, #0x80]
000000000003d9d8	ldr	x8, [x8]
000000000003d9dc	cbz	x8, 0x3d9fc
000000000003d9e0	str	x8, [sp, #0x80]
000000000003d9e4	ldr	x1, [x22]
000000000003d9e8	b	0x3da00
000000000003d9ec	mov	x22, x23
000000000003d9f0	ldr	x8, [x22]
000000000003d9f4	cbnz	x8, 0x3da14
000000000003d9f8	b	0x3d9a0
000000000003d9fc	mov	x1, x0
000000000003da00	ldr	x0, [sp, #0x88]
000000000003da04	bl	__ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_
000000000003da08	ldr	x8, [sp, #0x90]
000000000003da0c	add	x8, x8, #0x1
000000000003da10	str	x8, [sp, #0x90]
000000000003da14	ldur	x0, [x29, #-0xd0]
000000000003da18	cbz	x0, 0x3d8ac
000000000003da1c	stur	x0, [x29, #-0xc8]
000000000003da20	bl	0x4dba4 ; symbol stub for: _free
000000000003da24	b	0x3d8ac
000000000003da28	sub	x8, x29, #0xd0
000000000003da2c	movi.16b	v0, #0x0
000000000003da30	str	q0, [x8, #0x10]
000000000003da34	stur	q0, [x29, #-0xd0]
000000000003da38	mov	w8, #0x3f800000
000000000003da3c	stur	w8, [x29, #-0xb0]
000000000003da40	stp	xzr, xzr, [x29, #-0x90]
000000000003da44	stur	xzr, [x29, #-0x80]
000000000003da48	sub	x1, x29, #0xa8
000000000003da4c	ldr	x0, [sp, #0x48]
000000000003da50	bl	0x4db50 ; symbol stub for: _class_copyProtocolList
000000000003da54	mov	x22, x0
000000000003da58	str	x25, [sp, #0x58]
000000000003da5c	cbz	x0, 0x3dda4
000000000003da60	ldur	w8, [x29, #-0xa8]
000000000003da64	add	x3, x22, x8, lsl #3
000000000003da68	sub	x0, x29, #0x90
000000000003da6c	mov	x1, #0x0
000000000003da70	mov	x2, x22
000000000003da74	bl	__ZNSt3__16vectorIP8ProtocolN6kotlin11std_support9allocatorIS2_EEE6insertIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISB_E9referenceEEE5valueENS_11__wrap_iterIS9_EEE4typeENSF_IPKS2_EESB_SB_
000000000003da78	mov	x0, x22
000000000003da7c	bl	0x4dba4 ; symbol stub for: _free
000000000003da80	ldp	x8, x0, [x29, #-0x90]
000000000003da84	cmp	x8, x0
000000000003da88	b.eq	0x3dd94
000000000003da8c	sub	x9, x29, #0xd0
000000000003da90	add	x25, x9, #0x10
000000000003da94	mov	w27, #0x1
000000000003da98	b	0x3dab0
000000000003da9c	mov	x0, x22
000000000003daa0	bl	0x4dba4 ; symbol stub for: _free
000000000003daa4	ldp	x8, x0, [x29, #-0x90]
000000000003daa8	cmp	x8, x0
000000000003daac	b.eq	0x3dd98
000000000003dab0	ldr	x22, [x0, #-0x8]!
000000000003dab4	stur	x0, [x29, #-0x88]
000000000003dab8	lsr	x9, x22, #32
000000000003dabc	lsl	w10, w22, #3
000000000003dac0	add	x10, x10, #0x8
000000000003dac4	eor	x10, x10, x9
000000000003dac8	mov	x11, #0x2d69
000000000003dacc	movk	x11, #0xeb38, lsl #16
000000000003dad0	movk	x11, #0xea08, lsl #32
000000000003dad4	movk	x11, #0x9ddf, lsl #48
000000000003dad8	mul	x10, x10, x11
000000000003dadc	eor	x9, x10, x9
000000000003dae0	eor	x9, x9, x10, lsr #47
000000000003dae4	mul	x9, x9, x11
000000000003dae8	eor	x9, x9, x9, lsr #47
000000000003daec	mul	x20, x9, x11
000000000003daf0	ldur	x19, [x29, #-0xc8]
000000000003daf4	cbz	x19, 0x3db8c
000000000003daf8	fmov	d0, x19
000000000003dafc	cnt.8b	v0, v0
000000000003db00	uaddlv.8b	h0, v0
000000000003db04	fmov	w9, s0
000000000003db08	cmp	x9, #0x1
000000000003db0c	b.hi	0x3db1c
000000000003db10	sub	x10, x19, #0x1
000000000003db14	and	x21, x20, x10
000000000003db18	b	0x3db30
000000000003db1c	mov	x21, x20
000000000003db20	cmp	x20, x19
000000000003db24	b.lo	0x3db30
000000000003db28	udiv	x10, x20, x19
000000000003db2c	msub	x21, x10, x19, x20
000000000003db30	ldur	x10, [x29, #-0xd0]
000000000003db34	ldr	x10, [x10, x21, lsl #3]
000000000003db38	cbz	x10, 0x3db8c
000000000003db3c	sub	x11, x19, #0x1
000000000003db40	b	0x3db5c
000000000003db44	and	x12, x12, x11
000000000003db48	cmp	x12, x21
000000000003db4c	b.ne	0x3db8c
000000000003db50	ldr	x12, [x10, #0x10]
000000000003db54	cmp	x12, x22
000000000003db58	b.eq	0x3daa8
000000000003db5c	ldr	x10, [x10]
000000000003db60	cbz	x10, 0x3db8c
000000000003db64	ldr	x12, [x10, #0x8]
000000000003db68	cmp	x12, x20
000000000003db6c	b.eq	0x3db50
000000000003db70	cmp	x9, #0x1
000000000003db74	b.ls	0x3db44
000000000003db78	cmp	x12, x19
000000000003db7c	b.lo	0x3db48
000000000003db80	udiv	x13, x12, x19
000000000003db84	msub	x12, x13, x19, x12
000000000003db88	b	0x3db48
000000000003db8c	mov	w0, #0x1
000000000003db90	mov	w1, #0x18
000000000003db94	bl	0x4db20 ; symbol stub for: _calloc
000000000003db98	mov	x23, x0
000000000003db9c	stp	x20, x22, [x0, #0x8]
000000000003dba0	ldur	x8, [x29, #-0xb8]
000000000003dba4	add	x8, x8, #0x1
000000000003dba8	ucvtf	s0, x8
000000000003dbac	ldur	s1, [x29, #-0xb0]
000000000003dbb0	cbz	x19, 0x3dbdc
000000000003dbb4	ucvtf	s2, x19
000000000003dbb8	fmul	s2, s1, s2
000000000003dbbc	fcmp	s2, s0
000000000003dbc0	b.mi	0x3dbdc
000000000003dbc4	ldur	x9, [x29, #-0xd0]
000000000003dbc8	ldr	x8, [x9, x21, lsl #3]
000000000003dbcc	cbz	x8, 0x3dcd0
000000000003dbd0	ldr	x9, [x8]
000000000003dbd4	str	x9, [x23]
000000000003dbd8	b	0x3dd4c
000000000003dbdc	cmp	x19, #0x3
000000000003dbe0	cset	w8, lo
000000000003dbe4	sub	x9, x19, #0x1
000000000003dbe8	tst	x19, x9
000000000003dbec	cset	w9, ne
000000000003dbf0	orr	w8, w8, w9
000000000003dbf4	bfi	x8, x19, #1, #63
000000000003dbf8	fdiv	s0, s0, s1
000000000003dbfc	fcvtpu	x9, s0
000000000003dc00	cmp	x8, x9
000000000003dc04	csel	x24, x9, x8, lo
000000000003dc08	subs	x8, x24, #0x1
000000000003dc0c	b.ne	0x3dc18
000000000003dc10	mov	w24, #0x2
000000000003dc14	b	0x3dc30
000000000003dc18	tst	x24, x8
000000000003dc1c	b.eq	0x3dc30
000000000003dc20	mov	x0, x24
000000000003dc24	bl	0x4d928 ; symbol stub for: __ZNSt3__112__next_primeEm
000000000003dc28	mov	x24, x0
000000000003dc2c	ldur	x19, [x29, #-0xc8]
000000000003dc30	cmp	x24, x19
000000000003dc34	b.ls	0x3dc48
000000000003dc38	sub	x0, x29, #0xd0
000000000003dc3c	mov	x1, x24
000000000003dc40	bl	__ZNSt3__112__hash_tableIP8ProtocolNS_4hashIS2_EENS_8equal_toIS2_EEN6kotlin11std_support9allocatorIS2_EEE8__rehashEm
000000000003dc44	b	0x3dcb0
000000000003dc48	b.hs	0x3dcb0
000000000003dc4c	ldur	x8, [x29, #-0xb8]
000000000003dc50	ucvtf	s0, x8
000000000003dc54	ldur	s1, [x29, #-0xb0]
000000000003dc58	fdiv	s0, s0, s1
000000000003dc5c	fcvtpu	x0, s0
000000000003dc60	cmp	x19, #0x3
000000000003dc64	b.lo	0x3dc9c
000000000003dc68	fmov	d0, x19
000000000003dc6c	cnt.8b	v0, v0
000000000003dc70	uaddlv.8b	h0, v0
000000000003dc74	fmov	w8, s0
000000000003dc78	cmp	x8, #0x1
000000000003dc7c	b.hi	0x3dc9c
000000000003dc80	sub	x8, x0, #0x1
000000000003dc84	clz	x8, x8
000000000003dc88	neg	x8, x8
000000000003dc8c	lsl	x8, x27, x8
000000000003dc90	cmp	x0, #0x2
000000000003dc94	csel	x0, x0, x8, lo
000000000003dc98	b	0x3dca0
000000000003dc9c	bl	0x4d928 ; symbol stub for: __ZNSt3__112__next_primeEm
000000000003dca0	cmp	x24, x0
000000000003dca4	csel	x24, x0, x24, lo
000000000003dca8	cmp	x24, x19
000000000003dcac	b.lo	0x3dc38
000000000003dcb0	ldur	x19, [x29, #-0xc8]
000000000003dcb4	sub	x8, x19, #0x1
000000000003dcb8	tst	x19, x8
000000000003dcbc	b.ne	0x3dd00
000000000003dcc0	and	x21, x8, x20
000000000003dcc4	ldur	x9, [x29, #-0xd0]
000000000003dcc8	ldr	x8, [x9, x21, lsl #3]
000000000003dccc	cbnz	x8, 0x3dbd0
000000000003dcd0	ldur	x8, [x29, #-0xc0]
000000000003dcd4	str	x8, [x23]
000000000003dcd8	stur	x23, [x29, #-0xc0]
000000000003dcdc	str	x25, [x9, x21, lsl #3]
000000000003dce0	ldr	x8, [x23]
000000000003dce4	cbz	x8, 0x3dd50
000000000003dce8	ldr	x8, [x8, #0x8]
000000000003dcec	sub	x9, x19, #0x1
000000000003dcf0	tst	x19, x9
000000000003dcf4	b.ne	0x3dd34
000000000003dcf8	and	x8, x8, x9
000000000003dcfc	b	0x3dd44
000000000003dd00	cmp	x20, x19
000000000003dd04	b.hs	0x3dd1c
000000000003dd08	mov	x21, x20
000000000003dd0c	ldur	x9, [x29, #-0xd0]
000000000003dd10	ldr	x8, [x9, x21, lsl #3]
000000000003dd14	cbnz	x8, 0x3dbd0
000000000003dd18	b	0x3dcd0
000000000003dd1c	udiv	x8, x20, x19
000000000003dd20	msub	x21, x8, x19, x20
000000000003dd24	ldur	x9, [x29, #-0xd0]
000000000003dd28	ldr	x8, [x9, x21, lsl #3]
000000000003dd2c	cbnz	x8, 0x3dbd0
000000000003dd30	b	0x3dcd0
000000000003dd34	cmp	x8, x19
000000000003dd38	b.lo	0x3dd44
000000000003dd3c	udiv	x9, x8, x19
000000000003dd40	msub	x8, x9, x19, x8
000000000003dd44	ldur	x9, [x29, #-0xd0]
000000000003dd48	add	x8, x9, x8, lsl #3
000000000003dd4c	str	x23, [x8]
000000000003dd50	ldur	x8, [x29, #-0xb8]
000000000003dd54	add	x8, x8, #0x1
000000000003dd58	stur	x8, [x29, #-0xb8]
000000000003dd5c	mov	x0, x22
000000000003dd60	bl	0x4dd3c ; symbol stub for: _protocol_getName
000000000003dd64	sub	x1, x29, #0xa8
000000000003dd68	mov	x0, x22
000000000003dd6c	bl	0x4dd30 ; symbol stub for: _protocol_copyProtocolList
000000000003dd70	mov	x22, x0
000000000003dd74	cbz	x0, 0x3daa4
000000000003dd78	ldur	x1, [x29, #-0x88]
000000000003dd7c	ldur	w8, [x29, #-0xa8]
000000000003dd80	add	x3, x22, x8, lsl #3
000000000003dd84	sub	x0, x29, #0x90
000000000003dd88	mov	x2, x22
000000000003dd8c	bl	__ZNSt3__16vectorIP8ProtocolN6kotlin11std_support9allocatorIS2_EEE6insertIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISB_E9referenceEEE5valueENS_11__wrap_iterIS9_EEE4typeENSF_IPKS2_EESB_SB_
000000000003dd90	b	0x3da9c
000000000003dd94	mov	x0, x8
000000000003dd98	cbz	x0, 0x3dda4
000000000003dd9c	stur	x0, [x29, #-0x88]
000000000003dda0	bl	0x4dba4 ; symbol stub for: _free
000000000003dda4	ldur	x0, [x29, #-0xc0]
000000000003dda8	cbz	x0, 0x3ddbc
000000000003ddac	ldr	x19, [x0]
000000000003ddb0	bl	0x4dba4 ; symbol stub for: _free
000000000003ddb4	mov	x0, x19
000000000003ddb8	cbnz	x19, 0x3ddac
000000000003ddbc	ldur	x0, [x29, #-0xd0]
000000000003ddc0	stur	xzr, [x29, #-0xd0]
000000000003ddc4	cbz	x0, 0x3ddcc
000000000003ddc8	bl	0x4dba4 ; symbol stub for: _free
000000000003ddcc	ldr	x8, [sp, #0x38]
000000000003ddd0	ldr	x22, [x8, #0x30]
000000000003ddd4	ldrsw	x23, [x8, #0x38]
000000000003ddd8	stp	xzr, xzr, [sp, #0x70]
000000000003dddc	str	xzr, [sp, #0x68]
000000000003dde0	cbz	w23, 0x3de18
000000000003dde4	tbnz	w23, #0x1f, 0x3ec54
000000000003dde8	lsl	x24, x23, #3
000000000003ddec	mov	x0, x23
000000000003ddf0	mov	w1, #0x8
000000000003ddf4	bl	0x4db20 ; symbol stub for: _calloc
000000000003ddf8	stp	x0, x0, [sp, #0x68]
000000000003ddfc	add	x25, x0, x23, lsl #3
000000000003de00	str	x25, [sp, #0x78]
000000000003de04	mov	x1, x22
000000000003de08	mov	x2, x24
000000000003de0c	bl	0x4dbec ; symbol stub for: _memcpy
000000000003de10	str	x25, [sp, #0x70]
000000000003de14	b	0x3de1c
000000000003de18	mov	x25, #0x0
000000000003de1c	mov	x19, #0xfffffffffffffff
000000000003de20	mov	x20, #0x1fffffffffffffff
000000000003de24	mov	x8, x25
000000000003de28	mov	x21, x25
000000000003de2c	ldr	x28, [sp, #0x38]
000000000003de30	cmp	x21, x8
000000000003de34	b.eq	0x3de50
000000000003de38	str	x28, [x21], #0x8
000000000003de3c	str	x21, [sp, #0x70]
000000000003de40	mov	x25, x21
000000000003de44	ldr	x28, [x28, #0x18]
000000000003de48	cbnz	x28, 0x3df0c
000000000003de4c	b	0x3df1c
000000000003de50	ldr	x22, [sp, #0x68]
000000000003de54	sub	x8, x8, x22
000000000003de58	asr	x21, x8, #3
000000000003de5c	add	x9, x21, #0x1
000000000003de60	lsr	x10, x9, #61
000000000003de64	cbnz	x10, 0x3ec30
000000000003de68	asr	x8, x8, #2
000000000003de6c	cmp	x8, x9
000000000003de70	csel	x8, x9, x8, lo
000000000003de74	cmp	x21, x19
000000000003de78	csel	x23, x8, x20, lo
000000000003de7c	cbz	x23, 0x3dee0
000000000003de80	mov	x0, x23
000000000003de84	mov	w1, #0x8
000000000003de88	bl	0x4db20 ; symbol stub for: _calloc
000000000003de8c	mov	x24, x0
000000000003de90	add	x21, x24, x21, lsl #3
000000000003de94	sub	x2, x25, x22
000000000003de98	sub	x25, x21, x2
000000000003de9c	str	x28, [x21], #0x8
000000000003dea0	cmp	x2, #0x1
000000000003dea4	b.lt	0x3deb4
000000000003dea8	mov	x0, x25
000000000003deac	mov	x1, x22
000000000003deb0	bl	0x4dbec ; symbol stub for: _memcpy
000000000003deb4	add	x8, x24, x23, lsl #3
000000000003deb8	stp	x25, x21, [sp, #0x68]
000000000003debc	str	x8, [sp, #0x78]
000000000003dec0	cbz	x22, 0x3df00
000000000003dec4	mov	x0, x22
000000000003dec8	bl	0x4dba4 ; symbol stub for: _free
000000000003decc	ldr	x25, [sp, #0x70]
000000000003ded0	mov	x21, x25
000000000003ded4	ldr	x28, [x28, #0x18]
000000000003ded8	cbnz	x28, 0x3df0c
000000000003dedc	b	0x3df1c
000000000003dee0	mov	x24, #0x0
000000000003dee4	add	x21, x24, x21, lsl #3
000000000003dee8	sub	x2, x25, x22
000000000003deec	sub	x25, x21, x2
000000000003def0	str	x28, [x21], #0x8
000000000003def4	cmp	x2, #0x1
000000000003def8	b.ge	0x3dea8
000000000003defc	b	0x3deb4
000000000003df00	mov	x25, x21
000000000003df04	ldr	x28, [x28, #0x18]
000000000003df08	cbz	x28, 0x3df1c
000000000003df0c	ldr	x8, [sp, #0x78]
000000000003df10	cmp	x21, x8
000000000003df14	b.ne	0x3de38
000000000003df18	b	0x3de50
000000000003df1c	ldr	x23, [sp, #0x68]
000000000003df20	cmp	x23, x21
000000000003df24	str	x26, [sp, #0x60]
000000000003df28	b.eq	0x3e1a0
000000000003df2c	nop
000000000003df30	ldr	x8, #0x160d8 ; literal pool symbol address: _NSGenericException
000000000003df34	mov	w25, #0x1
000000000003df38	ldr	x8, [x8]
000000000003df3c	str	x8, [sp, #0x40]
000000000003df40	mov	x19, #0x2d69
000000000003df44	movk	x19, #0xeb38, lsl #16
000000000003df48	movk	x19, #0xea08, lsl #32
000000000003df4c	movk	x19, #0x9ddf, lsl #48
000000000003df50	b	0x3df60
000000000003df54	add	x23, x23, #0x8
000000000003df58	cmp	x23, x21
000000000003df5c	b.eq	0x3e1a4
000000000003df60	ldr	x8, [x23]
000000000003df64	ldr	x8, [x8, #0x60]
000000000003df68	ldr	x20, [x8, #0x10]
000000000003df6c	cbz	x20, 0x3df54
000000000003df70	ldr	w8, [x20, #0x68]
000000000003df74	cmp	w8, #0x1
000000000003df78	b.lt	0x3df54
000000000003df7c	mov	x22, #0x0
000000000003df80	nop
000000000003df84	ldr	x8, #0x2867c ; Objc selector ref: raise:format:
000000000003df88	str	x8, [sp, #0x50]
000000000003df8c	b	0x3dfb8
000000000003df90	mov	x9, x26
000000000003df94	mov	w25, #0x0
000000000003df98	sxtw	x8, w8
000000000003df9c	ldr	x10, [x27]
000000000003dfa0	ldr	x9, [x9, #0x28]
000000000003dfa4	str	x10, [x9, x8, lsl #3]
000000000003dfa8	add	x22, x22, #0x1
000000000003dfac	ldrsw	x8, [x20, #0x68]
000000000003dfb0	cmp	x22, x8
000000000003dfb4	b.ge	0x3df54
000000000003dfb8	ldr	x28, [x20, #0x60]
000000000003dfbc	add	x24, x28, x22, lsl #5
000000000003dfc0	ldr	x0, [x24]
000000000003dfc4	bl	0x4de38 ; symbol stub for: _sel_registerName
000000000003dfc8	ldr	x8, [sp, #0xb8]
000000000003dfcc	cbz	x8, 0x3dfa8
000000000003dfd0	lsr	x9, x0, #32
000000000003dfd4	lsl	w10, w0, #3
000000000003dfd8	add	x10, x10, #0x8
000000000003dfdc	eor	x10, x10, x9
000000000003dfe0	mul	x10, x10, x19
000000000003dfe4	eor	x9, x10, x9
000000000003dfe8	eor	x9, x9, x10, lsr #47
000000000003dfec	mul	x9, x9, x19
000000000003dff0	eor	x9, x9, x9, lsr #47
000000000003dff4	mul	x9, x9, x19
000000000003dff8	fmov	d0, x8
000000000003dffc	cnt.8b	v0, v0
000000000003e000	uaddlv.8b	h0, v0
000000000003e004	fmov	w10, s0
000000000003e008	cmp	x10, #0x1
000000000003e00c	b.hi	0x3e01c
000000000003e010	sub	x11, x8, #0x1
000000000003e014	and	x11, x11, x9
000000000003e018	b	0x3e030
000000000003e01c	mov	x11, x9
000000000003e020	cmp	x9, x8
000000000003e024	b.lo	0x3e030
000000000003e028	udiv	x11, x9, x8
000000000003e02c	msub	x11, x11, x8, x9
000000000003e030	ldr	x12, [sp, #0xb0]
000000000003e034	ldr	x12, [x12, x11, lsl #3]
000000000003e038	cbz	x12, 0x3dfa8
000000000003e03c	ldr	x12, [x12]
000000000003e040	cbz	x12, 0x3dfa8
000000000003e044	sub	x13, x8, #0x1
000000000003e048	b	0x3e060
000000000003e04c	ldr	x14, [x12, #0x10]
000000000003e050	cmp	x14, x0
000000000003e054	b.eq	0x3e098
000000000003e058	ldr	x12, [x12]
000000000003e05c	cbz	x12, 0x3dfa8
000000000003e060	ldr	x14, [x12, #0x8]
000000000003e064	cmp	x14, x9
000000000003e068	b.eq	0x3e04c
000000000003e06c	cmp	x10, #0x1
000000000003e070	b.hi	0x3e07c
000000000003e074	and	x14, x14, x13
000000000003e078	b	0x3e08c
000000000003e07c	cmp	x14, x8
000000000003e080	b.lo	0x3e08c
000000000003e084	udiv	x15, x14, x8
000000000003e088	msub	x14, x15, x8, x14
000000000003e08c	cmp	x14, x11
000000000003e090	b.eq	0x3e058
000000000003e094	b	0x3dfa8
000000000003e098	add	x19, x28, x22, lsl #5
000000000003e09c	mov	x27, x19
000000000003e0a0	ldr	x8, [x27, #0x18]!
000000000003e0a4	cbnz	x8, 0x3e108
000000000003e0a8	ldr	w8, [x19, #0x14]
000000000003e0ac	cmn	w8, #0x2
000000000003e0b0	adr	x9, #0x258e0 ; Objc cfstring ref: @"bad cfstring ref"
000000000003e0b4	nop
000000000003e0b8	adr	x10, #0x258f8 ; Objc cfstring ref: @"bad cfstring ref"
000000000003e0bc	nop
000000000003e0c0	csel	x9, x10, x9, eq
000000000003e0c4	cmn	w8, #0x1
000000000003e0c8	adr	x8, #0x25908 ; Objc cfstring ref: @"bad cfstring ref"
000000000003e0cc	nop
000000000003e0d0	csel	x26, x8, x9, eq
000000000003e0d4	nop
000000000003e0d8	ldr	x25, #0x28628 ; Objc class ref: _OBJC_CLASS_$_NSException
000000000003e0dc	ldr	x0, [sp, #0x48]
000000000003e0e0	bl	0x4db68 ; symbol stub for: _class_getName
000000000003e0e4	ldr	x8, [x24]
000000000003e0e8	stp	x8, x26, [sp, #0x8]
000000000003e0ec	str	x0, [sp]
000000000003e0f0	mov	x0, x25
000000000003e0f4	ldr	x1, [sp, #0x50]
000000000003e0f8	ldr	x2, [sp, #0x40]
000000000003e0fc	adr	x3, #0x258f4 ; Objc cfstring ref: @"bad cfstring ref"
000000000003e100	nop
000000000003e104	bl	0x4dcb8 ; Objc message: +[NSException raise:format:]
000000000003e108	ldrsw	x8, [x19, #0x14]
000000000003e10c	cmn	w8, #0x1
000000000003e110	b.eq	0x3e120
000000000003e114	ldr	x9, [x27]
000000000003e118	ldr	x10, [sp, #0x98]
000000000003e11c	str	x9, [x10, x8, lsl #3]
000000000003e120	mov	w25, #0x0
000000000003e124	ldp	x8, x26, [sp, #0x58]
000000000003e128	mov	x19, #0x2d69
000000000003e12c	movk	x19, #0xeb38, lsl #16
000000000003e130	movk	x19, #0xea08, lsl #32
000000000003e134	movk	x19, #0x9ddf, lsl #48
000000000003e138	cbz	x8, 0x3dfa8
000000000003e13c	add	x8, x28, x22, lsl #5
000000000003e140	ldr	w8, [x8, #0x10]
000000000003e144	cmn	w8, #0x1
000000000003e148	b.eq	0x3dfa8
000000000003e14c	ldr	x14, [sp, #0x88]
000000000003e150	cbz	x14, 0x3df90
000000000003e154	add	x9, x28, x22, lsl #5
000000000003e158	ldr	w10, [x9, #0x8]
000000000003e15c	mov	x9, x26
000000000003e160	mov	x11, x14
000000000003e164	mov	x12, x9
000000000003e168	ldr	w13, [x14, #0x20]
000000000003e16c	cmp	w13, w10
000000000003e170	cset	w14, lt
000000000003e174	csel	x9, x9, x11, lt
000000000003e178	ldr	x14, [x11, w14, uxtw #3]
000000000003e17c	cbnz	x14, 0x3e160
000000000003e180	cmp	x9, x26
000000000003e184	b.eq	0x3df90
000000000003e188	cmp	w13, w10
000000000003e18c	csel	x11, x12, x11, lt
000000000003e190	ldr	w11, [x11, #0x20]
000000000003e194	cmp	w11, w10
000000000003e198	b.gt	0x3df90
000000000003e19c	b	0x3df94
000000000003e1a0	mov	w25, #0x1
000000000003e1a4	ldr	x0, [sp, #0x48]
000000000003e1a8	bl	0x4db68 ; symbol stub for: _class_getName
000000000003e1ac	mov	x23, x0
000000000003e1b0	mov	x20, x25
000000000003e1b4	ldp	x9, x8, [sp, #0x98]
000000000003e1b8	sub	x8, x8, x9
000000000003e1bc	add	x1, x8, #0x70
000000000003e1c0	mov	w0, #0x1
000000000003e1c4	bl	0x4db20 ; symbol stub for: _calloc
000000000003e1c8	mov	x22, x0
000000000003e1cc	str	x0, [x0]
000000000003e1d0	mov	w8, #0x8
000000000003e1d4	str	w8, [x0, #0x58]
000000000003e1d8	ldr	x9, [sp, #0x38]
000000000003e1dc	str	x9, [x0, #0x18]
000000000003e1e0	ldr	w8, [x9, #0x14]
000000000003e1e4	str	w8, [x0, #0x14]
000000000003e1e8	ldr	x8, [x9, #0x20]
000000000003e1ec	str	x8, [x0, #0x20]
000000000003e1f0	ldr	w8, [x9, #0x28]
000000000003e1f4	str	w8, [x0, #0x28]
000000000003e1f8	ldrb	w8, [x9, #0x58]
000000000003e1fc	tbz	w8, #0x0, 0x3e208
000000000003e200	mov	w8, #0x9
000000000003e204	str	w8, [x22, #0x58]
000000000003e208	ldr	x9, [sp, #0x38]
000000000003e20c	ldr	w8, [x9, #0x5c]
000000000003e210	str	w8, [x22, #0x5c]
000000000003e214	ldr	x24, [x9, #0x30]
000000000003e218	ldrsw	x25, [x9, #0x38]
000000000003e21c	stp	xzr, xzr, [x29, #-0xa0]
000000000003e220	stur	xzr, [x29, #-0xa8]
000000000003e224	cbz	w25, 0x3e264
000000000003e228	tbnz	w25, #0x1f, 0x3ec60
000000000003e22c	lsl	x26, x25, #3
000000000003e230	mov	x0, x25
000000000003e234	mov	w1, #0x8
000000000003e238	bl	0x4db20 ; symbol stub for: _calloc
000000000003e23c	mov	x21, x0
000000000003e240	add	x19, x0, x25, lsl #3
000000000003e244	stur	x0, [x29, #-0xa8]
000000000003e248	stur	x19, [x29, #-0x98]
000000000003e24c	mov	x1, x24
000000000003e250	mov	x2, x26
000000000003e254	bl	0x4dbec ; symbol stub for: _memcpy
000000000003e258	stur	x19, [x29, #-0xa0]
000000000003e25c	ldr	x26, [sp, #0x60]
000000000003e260	b	0x3e26c
000000000003e264	mov	x19, #0x0
000000000003e268	mov	x21, #0x0
000000000003e26c	movi.16b	v0, #0x0
000000000003e270	sub	x8, x29, #0xd0
000000000003e274	str	q0, [x8, #0x10]
000000000003e278	stur	q0, [x29, #-0xd0]
000000000003e27c	mov	w8, #0x3f800000
000000000003e280	stur	w8, [x29, #-0xb0]
000000000003e284	cmp	x21, x19
000000000003e288	ldr	x24, [sp, #0x58]
000000000003e28c	mov	x25, x20
000000000003e290	b.eq	0x3e2b0
000000000003e294	ldr	x1, [x21]
000000000003e298	sub	x0, x29, #0xd0
000000000003e29c	mov	x2, x21
000000000003e2a0	bl	__ZNSt3__112__hash_tableIPK8TypeInfoNS_4hashIS3_EENS_8equal_toIS3_EEN6kotlin11std_support9allocatorIS3_EEE25__emplace_unique_key_argsIS3_JRKS3_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEEbEERKT_DpOT0_
000000000003e2a4	add	x21, x21, #0x8
000000000003e2a8	cmp	x21, x19
000000000003e2ac	b.ne	0x3e294
000000000003e2b0	ldp	x19, x20, [x29, #-0xa8]
000000000003e2b4	subs	x8, x20, x19
000000000003e2b8	asr	x21, x8, #3
000000000003e2bc	mov	x0, x21
000000000003e2c0	mov	w1, #0x8
000000000003e2c4	bl	0x4db20 ; symbol stub for: _calloc
000000000003e2c8	cmp	x20, x19
000000000003e2cc	b.ne	0x3e2d8
000000000003e2d0	mov	x21, #0x0
000000000003e2d4	b	0x3e2f4
000000000003e2d8	mov	x8, #0x0
000000000003e2dc	lsl	x9, x8, #3
000000000003e2e0	ldr	x10, [x19, x9]
000000000003e2e4	str	x10, [x0, x9]
000000000003e2e8	add	x8, x8, #0x1
000000000003e2ec	cmp	x8, x21
000000000003e2f0	b.lo	0x3e2dc
000000000003e2f4	str	x0, [x22, #0x30]
000000000003e2f8	str	w21, [x22, #0x38]
000000000003e2fc	cbz	x24, 0x3e310
000000000003e300	cbz	w25, 0x3e694
000000000003e304	ldr	w8, [sp, #0x34]
000000000003e308	str	w8, [x22, #0x3c]
000000000003e30c	str	x24, [x22, #0x40]
000000000003e310	str	xzr, [x22, #0x48]
000000000003e314	mov	x0, x23
000000000003e318	bl	0x4de74 ; symbol stub for: _strlen
000000000003e31c	mov	x24, x0
000000000003e320	add	x21, x23, x0
000000000003e324	stur	x23, [x29, #-0x90]
000000000003e328	cmp	x0, #0x1
000000000003e32c	b.lt	0x3e3d8
000000000003e330	mov	w20, #0x0
000000000003e334	mov	w19, #0x1
000000000003e338	mov	w25, #0x34
000000000003e33c	mov	w26, #0xa
000000000003e340	b	0x3e360
000000000003e344	ldur	x8, [x29, #-0x90]
000000000003e348	add	x8, x8, #0x1
000000000003e34c	stur	x8, [x29, #-0x90]
000000000003e350	mov	w9, #0x1
000000000003e354	add	w20, w9, w20
000000000003e358	cmp	x8, x21
000000000003e35c	b.hs	0x3e3dc
000000000003e360	stur	wzr, [x29, #-0x64]
000000000003e364	sub	x0, x29, #0x90
000000000003e368	sub	x2, x29, #0x64
000000000003e36c	mov	x1, x21
000000000003e370	bl	__ZN4utf88internal13validate_nextIPKcEENS0_9utf_errorERT_S5_Rj
000000000003e374	lsl	w8, w19, w0
000000000003e378	tst	w8, w25
000000000003e37c	b.ne	0x3e344
000000000003e380	tst	w8, w26
000000000003e384	b.eq	0x3e3b8
000000000003e388	ldur	x8, [x29, #-0x90]
000000000003e38c	add	x9, x8, #0x1
000000000003e390	mov	x8, x9
000000000003e394	stur	x9, [x29, #-0x90]
000000000003e398	cmp	x9, x21
000000000003e39c	b.hs	0x3e350
000000000003e3a0	mov	x9, x8
000000000003e3a4	ldrb	w10, [x9], #0x1
000000000003e3a8	and	w10, w10, #0xc0
000000000003e3ac	cmp	w10, #0x80
000000000003e3b0	b.eq	0x3e390
000000000003e3b4	b	0x3e350
000000000003e3b8	ldurh	w9, [x29, #-0x62]
000000000003e3bc	ldur	x8, [x29, #-0x90]
000000000003e3c0	cmp	w9, #0x0
000000000003e3c4	cinc	w9, w19, ne
000000000003e3c8	add	w20, w9, w20
000000000003e3cc	cmp	x8, x21
000000000003e3d0	b.lo	0x3e360
000000000003e3d4	b	0x3e3dc
000000000003e3d8	mov	w20, #0x0
000000000003e3dc	mov	w8, w20
000000000003e3e0	lsl	x8, x8, #1
000000000003e3e4	add	x0, x8, #0x10
000000000003e3e8	mov	w19, #0x1
000000000003e3ec	mov	w1, #0x1
000000000003e3f0	bl	0x4db20 ; symbol stub for: _calloc
000000000003e3f4	mov	x25, x0
000000000003e3f8	adr	x8, #0x172e8
000000000003e3fc	nop
000000000003e400	orr	x8, x8, #0x1
000000000003e404	str	x8, [x0]
000000000003e408	str	w20, [x0, #0x8]
000000000003e40c	stur	x23, [x29, #-0x90]
000000000003e410	cbz	x24, 0x3e4d0
000000000003e414	add	x20, x25, #0x10
000000000003e418	mov	w23, #0x34
000000000003e41c	mov	w24, #0xa
000000000003e420	mov	w26, #-0x2840
000000000003e424	b	0x3e44c
000000000003e428	add	w9, w26, w8, lsr #10
000000000003e42c	strh	w9, [x20]
000000000003e430	mov	w9, #0xdc00
000000000003e434	bfxil	w9, w8, #0, #10
000000000003e438	strh	w9, [x20, #0x2]
000000000003e43c	add	x20, x20, #0x4
000000000003e440	ldur	x8, [x29, #-0x90]
000000000003e444	cmp	x8, x21
000000000003e448	b.eq	0x3e4d0
000000000003e44c	stur	wzr, [x29, #-0x64]
000000000003e450	sub	x0, x29, #0x90
000000000003e454	sub	x2, x29, #0x64
000000000003e458	mov	x1, x21
000000000003e45c	bl	__ZN4utf88internal13validate_nextIPKcEENS0_9utf_errorERT_S5_Rj
000000000003e460	lsl	w8, w19, w0
000000000003e464	tst	w8, w23
000000000003e468	b.eq	0x3e47c
000000000003e46c	ldur	x8, [x29, #-0x90]
000000000003e470	add	x8, x8, #0x1
000000000003e474	stur	x8, [x29, #-0x90]
000000000003e478	b	0x3e4a8
000000000003e47c	tst	w8, w24
000000000003e480	b.eq	0x3e4c0
000000000003e484	ldur	x8, [x29, #-0x90]
000000000003e488	add	x8, x8, #0x1
000000000003e48c	stur	x8, [x29, #-0x90]
000000000003e490	cmp	x8, x21
000000000003e494	b.hs	0x3e4a8
000000000003e498	ldrb	w9, [x8], #0x1
000000000003e49c	and	w9, w9, #0xc0
000000000003e4a0	cmp	w9, #0x80
000000000003e4a4	b.eq	0x3e48c
000000000003e4a8	mov	w8, #0xfffd
000000000003e4ac	strh	w8, [x20], #0x2
000000000003e4b0	ldur	x8, [x29, #-0x90]
000000000003e4b4	cmp	x8, x21
000000000003e4b8	b.ne	0x3e44c
000000000003e4bc	b	0x3e4d0
000000000003e4c0	ldur	w8, [x29, #-0x64]
000000000003e4c4	cmp	w8, #0x10, lsl #12
000000000003e4c8	b.lo	0x3e4ac
000000000003e4cc	b	0x3e428
000000000003e4d0	str	x25, [x22, #0x50]
000000000003e4d4	mov	w0, #0x1
000000000003e4d8	mov	w1, #0x18
000000000003e4dc	bl	0x4db20 ; symbol stub for: _calloc
000000000003e4e0	str	x0, [x22, #0x60]
000000000003e4e4	ldp	x8, x9, [sp, #0x98]
000000000003e4e8	subs	x11, x9, x8
000000000003e4ec	b.eq	0x3e514
000000000003e4f0	mov	x9, #0x0
000000000003e4f4	add	x10, x22, #0x70
000000000003e4f8	asr	x11, x11, #3
000000000003e4fc	lsl	x12, x9, #3
000000000003e500	ldr	x13, [x8, x12]
000000000003e504	str	x13, [x10, x12]
000000000003e508	add	x9, x9, #0x1
000000000003e50c	cmp	x9, x11
000000000003e510	b.lo	0x3e4fc
000000000003e514	ldur	x0, [x29, #-0xc0]
000000000003e518	ldr	x20, [sp, #0x48]
000000000003e51c	cbz	x0, 0x3e530
000000000003e520	ldr	x19, [x0]
000000000003e524	bl	0x4dba4 ; symbol stub for: _free
000000000003e528	mov	x0, x19
000000000003e52c	cbnz	x19, 0x3e520
000000000003e530	ldur	x0, [x29, #-0xd0]
000000000003e534	stur	xzr, [x29, #-0xd0]
000000000003e538	cbz	x0, 0x3e540
000000000003e53c	bl	0x4dba4 ; symbol stub for: _free
000000000003e540	ldur	x0, [x29, #-0xa8]
000000000003e544	cbz	x0, 0x3e550
000000000003e548	stur	x0, [x29, #-0xa0]
000000000003e54c	bl	0x4dba4 ; symbol stub for: _free
000000000003e550	ldr	x8, [x22, #0x60]
000000000003e554	str	x20, [x8, #0x8]
000000000003e558	ldr	x0, [sp, #0x68]
000000000003e55c	cbz	x0, 0x3e568
000000000003e560	str	x0, [sp, #0x70]
000000000003e564	bl	0x4dba4 ; symbol stub for: _free
000000000003e568	ldr	x0, [sp, #0x88]
000000000003e56c	bl	__ZNSt3__16__treeINS_12__value_typeIiNS_6vectorIPKvN6kotlin11std_support9allocatorIS4_EEEEEENS_19__map_value_compareIiSA_NS_4lessIiEELb1EEENS7_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE
000000000003e570	ldr	x0, [sp, #0x98]
000000000003e574	adrp	x20, 42 ; 0x68000
000000000003e578	add	x20, x20, #0xa00
000000000003e57c	cbz	x0, 0x3e588
000000000003e580	str	x0, [sp, #0xa0]
000000000003e584	bl	0x4dba4 ; symbol stub for: _free
000000000003e588	ldr	x0, [sp, #0xc0]
000000000003e58c	cbz	x0, 0x3e5a0
000000000003e590	ldr	x19, [x0]
000000000003e594	bl	0x4dba4 ; symbol stub for: _free
000000000003e598	mov	x0, x19
000000000003e59c	cbnz	x19, 0x3e590
000000000003e5a0	ldr	x0, [sp, #0xb0]
000000000003e5a4	str	xzr, [sp, #0xb0]
000000000003e5a8	cbz	x0, 0x3e5b0
000000000003e5ac	bl	0x4dba4 ; symbol stub for: _free
000000000003e5b0	ldr	x8, [sp, #0x28]
000000000003e5b4	cbz	x8, 0x3e5ec
000000000003e5b8	add	x0, x8, #0x138
000000000003e5bc	ldr	x10, [sp, #0x18]
000000000003e5c0	ldaxr	w8, [x0]
000000000003e5c4	stlxr	w9, w10, [x0]
000000000003e5c8	cbnz	w9, 0x3e5c0
000000000003e5cc	cbnz	w10, 0x3e5ec
000000000003e5d0	cmp	w8, #0x1
000000000003e5d4	b.ne	0x3e5ec
000000000003e5d8	adr	x8, #0x4426b
000000000003e5dc	nop
000000000003e5e0	ldarb	w8, [x8]
000000000003e5e4	tbz	w8, #0x0, 0x3e5ec
000000000003e5e8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000003e5ec	stur	x22, [x29, #-0xd0]
000000000003e5f0	mov	x0, x20
000000000003e5f4	ldr	x8, [sp, #0x20]
000000000003e5f8	blr	x8
000000000003e5fc	ldr	x21, [x0]
000000000003e600	cbz	x21, 0x3e61c
000000000003e604	add	x8, x21, #0x138
000000000003e608	mov	w9, #0x1
000000000003e60c	ldaxr	w20, [x8]
000000000003e610	stlxr	w10, w9, [x8]
000000000003e614	cbnz	w10, 0x3e60c
000000000003e618	b	0x3e620
000000000003e61c	mov	w20, #0x1
000000000003e620	nop
000000000003e624	ldr	x0, #0x280e4 ; Objc class ref: _OBJC_CLASS_$_NSValue
000000000003e628	bl	0x4dc40 ; symbol stub for: _objc_alloc
000000000003e62c	nop
000000000003e630	ldr	x1, #0x27eb0 ; Objc selector ref: initWithBytes:objCType:
000000000003e634	adr	x3, #0x143ea ; literal pool for: "^v"
000000000003e638	nop
000000000003e63c	sub	x2, x29, #0xd0
000000000003e640	bl	0x4dcb8 ; Objc message: +[NSValue initWithBytes:objCType:]
000000000003e644	mov	x2, x0
000000000003e648	adr	x1, #0x44202
000000000003e64c	nop
000000000003e650	ldr	x0, [sp, #0x48]
000000000003e654	mov	x3, #0x0
000000000003e658	bl	0x4dd0c ; symbol stub for: _objc_setAssociatedObject
000000000003e65c	cbz	x21, 0x3d404
000000000003e660	add	x0, x21, #0x138
000000000003e664	ldaxr	w8, [x0]
000000000003e668	stlxr	w9, w20, [x0]
000000000003e66c	cbnz	w9, 0x3e664
000000000003e670	cbnz	w20, 0x3d404
000000000003e674	cmp	w8, #0x1
000000000003e678	b.ne	0x3d404
000000000003e67c	adr	x8, #0x441c7
000000000003e680	nop
000000000003e684	ldarb	w8, [x8]
000000000003e688	tbz	w8, #0x0, 0x3d404
000000000003e68c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000003e690	b	0x3d404
000000000003e694	ldr	x24, [sp, #0x80]
000000000003e698	movi.16b	v0, #0x0
000000000003e69c	sub	x8, x29, #0xd0
000000000003e6a0	stp	q0, q0, [x8, #0x40]
000000000003e6a4	mov	w25, #0x1
000000000003e6a8	cmp	x24, x26
000000000003e6ac	b.eq	0x3e9b8
000000000003e6b0	mov	x8, x24
000000000003e6b4	b	0x3e6c4
000000000003e6b8	mov	x8, x10
000000000003e6bc	cmp	x8, x26
000000000003e6c0	b.eq	0x3e9b4
000000000003e6c4	ldurb	w9, [x29, #-0x90]
000000000003e6c8	cbnz	w9, 0x3e718
000000000003e6cc	sturb	w25, [x29, #-0x90]
000000000003e6d0	ldr	x9, [x8, #0x8]
000000000003e6d4	cbz	x9, 0x3e6e8
000000000003e6d8	mov	x8, x9
000000000003e6dc	ldr	x9, [x9]
000000000003e6e0	cbnz	x9, 0x3e6d8
000000000003e6e4	b	0x3e6bc
000000000003e6e8	mov	x9, x8
000000000003e6ec	ldr	x10, [x9, #0x10]!
000000000003e6f0	ldr	x11, [x10]
000000000003e6f4	cmp	x11, x8
000000000003e6f8	b.eq	0x3e6b8
000000000003e6fc	ldr	x10, [x9]
000000000003e700	mov	x9, x10
000000000003e704	ldr	x8, [x9, #0x10]!
000000000003e708	ldr	x11, [x8]
000000000003e70c	cmp	x11, x10
000000000003e710	b.ne	0x3e6fc
000000000003e714	b	0x3e6bc
000000000003e718	movi.16b	v0, #0x0
000000000003e71c	sub	x8, x29, #0xd0
000000000003e720	stp	q0, q0, [x8, #0x40]
000000000003e724	mov	w25, #0x1
000000000003e728	cmp	x24, x26
000000000003e72c	b.eq	0x3e9b8
000000000003e730	sub	x8, x29, #0x90
000000000003e734	mov	x9, x24
000000000003e738	b	0x3e748
000000000003e73c	mov	x9, x11
000000000003e740	cmp	x9, x26
000000000003e744	b.eq	0x3e848
000000000003e748	ldr	w10, [x9, #0x20]
000000000003e74c	sub	x11, x29, #0x90
000000000003e750	bfxil	x11, x10, #0, #1
000000000003e754	ldrb	w11, [x11]
000000000003e758	cbnz	w11, 0x3e7b0
000000000003e75c	and	x10, x10, #0x1
000000000003e760	orr	x10, x8, x10
000000000003e764	strb	w25, [x10]
000000000003e768	ldr	x10, [x9, #0x8]
000000000003e76c	cbz	x10, 0x3e780
000000000003e770	mov	x9, x10
000000000003e774	ldr	x10, [x10]
000000000003e778	cbnz	x10, 0x3e770
000000000003e77c	b	0x3e740
000000000003e780	mov	x10, x9
000000000003e784	ldr	x11, [x10, #0x10]!
000000000003e788	ldr	x12, [x11]
000000000003e78c	cmp	x12, x9
000000000003e790	b.eq	0x3e73c
000000000003e794	ldr	x11, [x10]
000000000003e798	mov	x10, x11
000000000003e79c	ldr	x9, [x10, #0x10]!
000000000003e7a0	ldr	x12, [x9]
000000000003e7a4	cmp	x12, x11
000000000003e7a8	b.ne	0x3e794
000000000003e7ac	b	0x3e740
000000000003e7b0	movi.16b	v0, #0x0
000000000003e7b4	sub	x8, x29, #0xd0
000000000003e7b8	stp	q0, q0, [x8, #0x40]
000000000003e7bc	mov	w25, #0x1
000000000003e7c0	cmp	x24, x26
000000000003e7c4	b.eq	0x3e9b8
000000000003e7c8	sub	x8, x29, #0x90
000000000003e7cc	mov	x9, x24
000000000003e7d0	b	0x3e7e0
000000000003e7d4	mov	x9, x11
000000000003e7d8	cmp	x9, x26
000000000003e7dc	b.eq	0x3e8ec
000000000003e7e0	ldr	w10, [x9, #0x20]
000000000003e7e4	sub	x11, x29, #0x90
000000000003e7e8	bfxil	x11, x10, #0, #2
000000000003e7ec	ldrb	w11, [x11]
000000000003e7f0	cbnz	w11, 0x3e850
000000000003e7f4	and	x10, x10, #0x3
000000000003e7f8	orr	x10, x8, x10
000000000003e7fc	strb	w25, [x10]
000000000003e800	ldr	x10, [x9, #0x8]
000000000003e804	cbz	x10, 0x3e818
000000000003e808	mov	x9, x10
000000000003e80c	ldr	x10, [x10]
000000000003e810	cbnz	x10, 0x3e808
000000000003e814	b	0x3e7d8
000000000003e818	mov	x10, x9
000000000003e81c	ldr	x11, [x10, #0x10]!
000000000003e820	ldr	x12, [x11]
000000000003e824	cmp	x12, x9
000000000003e828	b.eq	0x3e7d4
000000000003e82c	ldr	x11, [x10]
000000000003e830	mov	x10, x11
000000000003e834	ldr	x9, [x10, #0x10]!
000000000003e838	ldr	x12, [x9]
000000000003e83c	cmp	x12, x11
000000000003e840	b.ne	0x3e82c
000000000003e844	b	0x3e7d8
000000000003e848	mov	w25, #0x2
000000000003e84c	b	0x3e9b8
000000000003e850	movi.16b	v0, #0x0
000000000003e854	sub	x8, x29, #0xd0
000000000003e858	stp	q0, q0, [x8, #0x40]
000000000003e85c	mov	w8, #0x1
000000000003e860	cmp	x24, x26
000000000003e864	b.eq	0x3e9b4
000000000003e868	sub	x9, x29, #0x90
000000000003e86c	mov	x10, x24
000000000003e870	b	0x3e884
000000000003e874	mov	x10, x12
000000000003e878	mov	w25, #0x8
000000000003e87c	cmp	x10, x26
000000000003e880	b.eq	0x3e9b8
000000000003e884	ldr	w11, [x10, #0x20]
000000000003e888	sub	x12, x29, #0x90
000000000003e88c	bfxil	x12, x11, #0, #3
000000000003e890	ldrb	w12, [x12]
000000000003e894	cbnz	w12, 0x3e8f4
000000000003e898	and	x11, x11, #0x7
000000000003e89c	orr	x11, x9, x11
000000000003e8a0	strb	w8, [x11]
000000000003e8a4	ldr	x11, [x10, #0x8]
000000000003e8a8	cbz	x11, 0x3e8bc
000000000003e8ac	mov	x10, x11
000000000003e8b0	ldr	x11, [x11]
000000000003e8b4	cbnz	x11, 0x3e8ac
000000000003e8b8	b	0x3e878
000000000003e8bc	mov	x11, x10
000000000003e8c0	ldr	x12, [x11, #0x10]!
000000000003e8c4	ldr	x13, [x12]
000000000003e8c8	cmp	x13, x10
000000000003e8cc	b.eq	0x3e874
000000000003e8d0	ldr	x12, [x11]
000000000003e8d4	mov	x11, x12
000000000003e8d8	ldr	x10, [x11, #0x10]!
000000000003e8dc	ldr	x13, [x10]
000000000003e8e0	cmp	x13, x12
000000000003e8e4	b.ne	0x3e8d0
000000000003e8e8	b	0x3e878
000000000003e8ec	mov	w25, #0x4
000000000003e8f0	b	0x3e9b8
000000000003e8f4	movi.16b	v0, #0x0
000000000003e8f8	sub	x8, x29, #0xd0
000000000003e8fc	stp	q0, q0, [x8, #0x40]
000000000003e900	mov	w8, #0x1
000000000003e904	cmp	x24, x26
000000000003e908	b.eq	0x3e9b4
000000000003e90c	sub	x9, x29, #0x90
000000000003e910	mov	x10, x24
000000000003e914	b	0x3e928
000000000003e918	mov	x10, x12
000000000003e91c	mov	w25, #0x10
000000000003e920	cmp	x10, x26
000000000003e924	b.eq	0x3e9b8
000000000003e928	ldr	w11, [x10, #0x20]
000000000003e92c	sub	x12, x29, #0x90
000000000003e930	bfxil	x12, x11, #0, #4
000000000003e934	ldrb	w12, [x12]
000000000003e938	cbnz	w12, 0x3e990
000000000003e93c	and	x11, x11, #0xf
000000000003e940	orr	x11, x9, x11
000000000003e944	strb	w8, [x11]
000000000003e948	ldr	x11, [x10, #0x8]
000000000003e94c	cbz	x11, 0x3e960
000000000003e950	mov	x10, x11
000000000003e954	ldr	x11, [x11]
000000000003e958	cbnz	x11, 0x3e950
000000000003e95c	b	0x3e91c
000000000003e960	mov	x11, x10
000000000003e964	ldr	x12, [x11, #0x10]!
000000000003e968	ldr	x13, [x12]
000000000003e96c	cmp	x13, x10
000000000003e970	b.eq	0x3e918
000000000003e974	ldr	x12, [x11]
000000000003e978	mov	x11, x12
000000000003e97c	ldr	x10, [x11, #0x10]!
000000000003e980	ldr	x13, [x10]
000000000003e984	cmp	x13, x12
000000000003e988	b.ne	0x3e974
000000000003e98c	b	0x3e91c
000000000003e990	movi.16b	v0, #0x0
000000000003e994	sub	x8, x29, #0xd0
000000000003e998	stp	q0, q0, [x8, #0x40]
000000000003e99c	mov	w8, #0x1
000000000003e9a0	cmp	x24, x26
000000000003e9a4	b.eq	0x3e9b4
000000000003e9a8	sub	x9, x29, #0x90
000000000003e9ac	mov	x10, x24
000000000003e9b0	b	0x3ea58
000000000003e9b4	mov	w25, #0x1
000000000003e9b8	ldr	w19, [sp, #0x90]
000000000003e9bc	mov	w20, #0x1
000000000003e9c0	sxtw	x0, w25
000000000003e9c4	mov	w1, #0x10
000000000003e9c8	bl	0x4db20 ; symbol stub for: _calloc
000000000003e9cc	mov	x21, x0
000000000003e9d0	str	x0, [x22, #0x40]
000000000003e9d4	tbz	w20, #0x0, 0x3ead8
000000000003e9d8	sub	w8, w25, #0x1
000000000003e9dc	str	w8, [x22, #0x3c]
000000000003e9e0	b	0x3e9e8
000000000003e9e4	mov	x24, x10
000000000003e9e8	cmp	x24, x26
000000000003e9ec	b.eq	0x3eb54
000000000003e9f0	ldr	w9, [x24, #0x20]
000000000003e9f4	and	w10, w9, w8
000000000003e9f8	sbfiz	x10, x10, #4, #32
000000000003e9fc	str	w9, [x21, x10]
000000000003ea00	ldr	x9, [x24, #0x8]
000000000003ea04	cbz	x9, 0x3ea18
000000000003ea08	mov	x24, x9
000000000003ea0c	ldr	x9, [x9]
000000000003ea10	cbnz	x9, 0x3ea08
000000000003ea14	b	0x3e9e8
000000000003ea18	mov	x9, x24
000000000003ea1c	ldr	x10, [x9, #0x10]!
000000000003ea20	ldr	x11, [x10]
000000000003ea24	cmp	x11, x24
000000000003ea28	b.eq	0x3e9e4
000000000003ea2c	ldr	x10, [x9]
000000000003ea30	mov	x9, x10
000000000003ea34	ldr	x24, [x9, #0x10]!
000000000003ea38	ldr	x11, [x24]
000000000003ea3c	cmp	x11, x10
000000000003ea40	b.ne	0x3ea2c
000000000003ea44	b	0x3e9e8
000000000003ea48	mov	x10, x12
000000000003ea4c	mov	w25, #0x20
000000000003ea50	cmp	x10, x26
000000000003ea54	b.eq	0x3e9b8
000000000003ea58	ldr	w11, [x10, #0x20]
000000000003ea5c	and	x11, x11, #0x1f
000000000003ea60	ldrb	w12, [x9, x11]
000000000003ea64	cbnz	w12, 0x3eab4
000000000003ea68	strb	w8, [x9, x11]
000000000003ea6c	ldr	x11, [x10, #0x8]
000000000003ea70	cbz	x11, 0x3ea84
000000000003ea74	mov	x10, x11
000000000003ea78	ldr	x11, [x11]
000000000003ea7c	cbnz	x11, 0x3ea74
000000000003ea80	b	0x3ea4c
000000000003ea84	mov	x11, x10
000000000003ea88	ldr	x12, [x11, #0x10]!
000000000003ea8c	ldr	x13, [x12]
000000000003ea90	cmp	x13, x10
000000000003ea94	b.eq	0x3ea48
000000000003ea98	ldr	x12, [x11]
000000000003ea9c	mov	x11, x12
000000000003eaa0	ldr	x10, [x11, #0x10]!
000000000003eaa4	ldr	x13, [x10]
000000000003eaa8	cmp	x13, x12
000000000003eaac	b.ne	0x3ea98
000000000003eab0	b	0x3ea4c
000000000003eab4	mov	w20, #0x0
000000000003eab8	ldr	w19, [sp, #0x90]
000000000003eabc	mov	x25, x19
000000000003eac0	sxtw	x0, w25
000000000003eac4	mov	w1, #0x10
000000000003eac8	bl	0x4db20 ; symbol stub for: _calloc
000000000003eacc	mov	x21, x0
000000000003ead0	str	x0, [x22, #0x40]
000000000003ead4	tbnz	w20, #0x0, 0x3e9d8
000000000003ead8	neg	w8, w19
000000000003eadc	str	w8, [x22, #0x3c]
000000000003eae0	cmp	x24, x26
000000000003eae4	b.eq	0x3eb54
000000000003eae8	mov	x8, #0x0
000000000003eaec	b	0x3eb00
000000000003eaf0	mov	x24, x10
000000000003eaf4	add	x8, x8, #0x1
000000000003eaf8	cmp	x24, x26
000000000003eafc	b.eq	0x3eb54
000000000003eb00	ldr	w9, [x24, #0x20]
000000000003eb04	lsl	x10, x8, #4
000000000003eb08	str	w9, [x21, x10]
000000000003eb0c	ldr	x9, [x24, #0x8]
000000000003eb10	cbz	x9, 0x3eb24
000000000003eb14	mov	x24, x9
000000000003eb18	ldr	x9, [x9]
000000000003eb1c	cbnz	x9, 0x3eb14
000000000003eb20	b	0x3eaf4
000000000003eb24	mov	x9, x24
000000000003eb28	ldr	x10, [x9, #0x10]!
000000000003eb2c	ldr	x11, [x10]
000000000003eb30	cmp	x11, x24
000000000003eb34	b.eq	0x3eaf0
000000000003eb38	ldr	x10, [x9]
000000000003eb3c	mov	x9, x10
000000000003eb40	ldr	x24, [x9, #0x10]!
000000000003eb44	ldr	x11, [x24]
000000000003eb48	cmp	x11, x10
000000000003eb4c	b.ne	0x3eb38
000000000003eb50	b	0x3eaf4
000000000003eb54	cmp	w25, #0x1
000000000003eb58	b.lt	0x3e310
000000000003eb5c	mov	x19, #0x0
000000000003eb60	mov	w20, w25
000000000003eb64	ldr	x24, [sp, #0x88]
000000000003eb68	b	0x3eb8c
000000000003eb6c	mov	x0, #0x0
000000000003eb70	add	x8, x21, x19, lsl #4
000000000003eb74	str	x0, [x8, #0x8]
000000000003eb78	str	w26, [x8, #0x4]
000000000003eb7c	ldr	x26, [sp, #0x60]
000000000003eb80	add	x19, x19, #0x1
000000000003eb84	cmp	x19, x20
000000000003eb88	b.eq	0x3e310
000000000003eb8c	lsl	x8, x19, #4
000000000003eb90	ldr	w8, [x21, x8]
000000000003eb94	cbz	w8, 0x3eb80
000000000003eb98	cbz	x24, 0x3ebe0
000000000003eb9c	mov	x25, x26
000000000003eba0	mov	x12, x24
000000000003eba4	mov	x9, x12
000000000003eba8	mov	x10, x25
000000000003ebac	ldr	w11, [x12, #0x20]
000000000003ebb0	cmp	w11, w8
000000000003ebb4	cset	w12, lt
000000000003ebb8	csel	x25, x25, x9, lt
000000000003ebbc	ldr	x12, [x9, w12, uxtw #3]
000000000003ebc0	cbnz	x12, 0x3eba4
000000000003ebc4	cmp	x25, x26
000000000003ebc8	b.eq	0x3ebe0
000000000003ebcc	cmp	w11, w8
000000000003ebd0	csel	x9, x10, x9, lt
000000000003ebd4	ldr	w9, [x9, #0x20]
000000000003ebd8	cmp	w8, w9
000000000003ebdc	b.ge	0x3ebe4
000000000003ebe0	mov	x25, x26
000000000003ebe4	ldp	x9, x8, [x25, #0x28]
000000000003ebe8	sub	x27, x8, x9
000000000003ebec	lsr	x26, x27, #3
000000000003ebf0	cbz	w26, 0x3eb6c
000000000003ebf4	sbfx	x0, x27, #3, #32
000000000003ebf8	mov	w1, #0x8
000000000003ebfc	bl	0x4db20 ; symbol stub for: _calloc
000000000003ec00	cmp	w26, #0x1
000000000003ec04	b.lt	0x3eb70
000000000003ec08	mov	x8, #0x0
000000000003ec0c	ubfx	x9, x27, #3, #32
000000000003ec10	lsl	x9, x9, #3
000000000003ec14	ldr	x10, [x25, #0x28]
000000000003ec18	ldr	x10, [x10, x8]
000000000003ec1c	str	x10, [x0, x8]
000000000003ec20	add	x8, x8, #0x8
000000000003ec24	cmp	x9, x8
000000000003ec28	b.ne	0x3ec14
000000000003ec2c	b	0x3eb70
000000000003ec30	add	x0, sp, #0x68
000000000003ec34	bl	0x4d8ec ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
000000000003ec38	b	0x3ec68
000000000003ec3c	sub	x0, x29, #0xd0
000000000003ec40	bl	0x4d8ec ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
000000000003ec44	b	0x3ec68
000000000003ec48	add	x0, sp, #0x98
000000000003ec4c	bl	0x4d8ec ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
000000000003ec50	b	0x3ec68
000000000003ec54	add	x0, sp, #0x68
000000000003ec58	bl	0x4d8ec ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
000000000003ec5c	b	0x3ec68
000000000003ec60	sub	x0, x29, #0xa8
000000000003ec64	bl	0x4d8ec ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
000000000003ec68	brk	#0x1
000000000003ec6c	mov	x19, x0
000000000003ec70	b	0x3edb0
000000000003ec74	b	0x3edcc
000000000003ec78	b	0x3ed5c
000000000003ec7c	mov	x19, x0
000000000003ec80	b	0x3ede8
000000000003ec84	b	0x3edcc
000000000003ec88	b	0x3ed5c
000000000003ec8c	mov	x19, x0
000000000003ec90	b	0x3edf8
000000000003ec94	mov	x19, x0
000000000003ec98	cbnz	x23, 0x3eccc
000000000003ec9c	ldur	x0, [x29, #-0x90]
000000000003eca0	cbnz	x0, 0x3ed68
000000000003eca4	ldur	x0, [x29, #-0xc0]
000000000003eca8	cbz	x0, 0x3ecbc
000000000003ecac	ldr	x20, [x0]
000000000003ecb0	bl	0x4dba4 ; symbol stub for: _free
000000000003ecb4	mov	x0, x20
000000000003ecb8	cbnz	x20, 0x3ecac
000000000003ecbc	ldur	x0, [x29, #-0xd0]
000000000003ecc0	stur	xzr, [x29, #-0xd0]
000000000003ecc4	cbnz	x0, 0x3eddc
000000000003ecc8	b	0x3ede0
000000000003eccc	mov	x0, x23
000000000003ecd0	bl	0x4dba4 ; symbol stub for: _free
000000000003ecd4	ldur	x0, [x29, #-0x90]
000000000003ecd8	cbz	x0, 0x3eca4
000000000003ecdc	b	0x3ed68
000000000003ece0	mov	x19, x0
000000000003ece4	cbz	x21, 0x3ee28
000000000003ece8	add	x0, x21, #0x138
000000000003ecec	ldaxr	w8, [x0]
000000000003ecf0	stlxr	w9, w20, [x0]
000000000003ecf4	cbnz	w9, 0x3ecec
000000000003ecf8	cbnz	w20, 0x3ee28
000000000003ecfc	cmp	w8, #0x1
000000000003ed00	b.ne	0x3ee28
000000000003ed04	adr	x8, #0x43b3f
000000000003ed08	nop
000000000003ed0c	ldarb	w8, [x8]
000000000003ed10	tbnz	w8, #0x0, 0x3ee70
000000000003ed14	b	0x3ee28
000000000003ed18	mov	x19, x0
000000000003ed1c	cbz	x23, 0x3edf8
000000000003ed20	mov	x0, x23
000000000003ed24	b	0x3edf4
000000000003ed28	mov	x19, x0
000000000003ed2c	ldur	x0, [x29, #-0xd0]
000000000003ed30	cbz	x0, 0x3ede0
000000000003ed34	stur	x0, [x29, #-0xc8]
000000000003ed38	b	0x3eddc
000000000003ed3c	mov	x19, x0
000000000003ed40	adr	x8, #0x43b0b
000000000003ed44	nop
000000000003ed48	stlrb	wzr, [x8]
000000000003ed4c	mov	x0, x19
000000000003ed50	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
000000000003ed54	b	0x3ed5c
000000000003ed58	b	0x3ed5c
000000000003ed5c	mov	x19, x0
000000000003ed60	ldur	x0, [x29, #-0x90]
000000000003ed64	cbz	x0, 0x3eca4
000000000003ed68	stur	x0, [x29, #-0x88]
000000000003ed6c	bl	0x4dba4 ; symbol stub for: _free
000000000003ed70	ldur	x0, [x29, #-0xc0]
000000000003ed74	cbnz	x0, 0x3ecac
000000000003ed78	b	0x3ecbc
000000000003ed7c	b	0x3edcc
000000000003ed80	b	0x3edcc
000000000003ed84	mov	x19, x0
000000000003ed88	ldur	x0, [x29, #-0xc0]
000000000003ed8c	cbz	x0, 0x3eda0
000000000003ed90	ldr	x20, [x0]
000000000003ed94	bl	0x4dba4 ; symbol stub for: _free
000000000003ed98	mov	x0, x20
000000000003ed9c	cbnz	x20, 0x3ed90
000000000003eda0	ldur	x0, [x29, #-0xd0]
000000000003eda4	stur	xzr, [x29, #-0xd0]
000000000003eda8	cbz	x0, 0x3edb0
000000000003edac	bl	0x4dba4 ; symbol stub for: _free
000000000003edb0	ldur	x0, [x29, #-0xa8]
000000000003edb4	cbz	x0, 0x3edd0
000000000003edb8	stur	x0, [x29, #-0xa0]
000000000003edbc	bl	0x4dba4 ; symbol stub for: _free
000000000003edc0	b	0x3edd0
000000000003edc4	mov	x19, x0
000000000003edc8	b	0x3edf8
000000000003edcc	mov	x19, x0
000000000003edd0	ldr	x0, [sp, #0x68]
000000000003edd4	cbz	x0, 0x3ede0
000000000003edd8	str	x0, [sp, #0x70]
000000000003eddc	bl	0x4dba4 ; symbol stub for: _free
000000000003ede0	ldr	x0, [sp, #0x88]
000000000003ede4	bl	__ZNSt3__16__treeINS_12__value_typeIiNS_6vectorIPKvN6kotlin11std_support9allocatorIS4_EEEEEENS_19__map_value_compareIiSA_NS_4lessIiEELb1EEENS7_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE
000000000003ede8	ldr	x0, [sp, #0x98]
000000000003edec	cbz	x0, 0x3edf8
000000000003edf0	str	x0, [sp, #0xa0]
000000000003edf4	bl	0x4dba4 ; symbol stub for: _free
000000000003edf8	ldr	x0, [sp, #0xc0]
000000000003edfc	cbz	x0, 0x3ee10
000000000003ee00	ldr	x20, [x0]
000000000003ee04	bl	0x4dba4 ; symbol stub for: _free
000000000003ee08	mov	x0, x20
000000000003ee0c	cbnz	x20, 0x3ee00
000000000003ee10	ldr	x0, [sp, #0xb0]
000000000003ee14	str	xzr, [sp, #0xb0]
000000000003ee18	cbz	x0, 0x3ee20
000000000003ee1c	bl	0x4dba4 ; symbol stub for: _free
000000000003ee20	ldr	x8, [sp, #0x28]
000000000003ee24	cbnz	x8, 0x3ee3c
000000000003ee28	adr	x8, #0x43a23
000000000003ee2c	nop
000000000003ee30	stlrb	wzr, [x8]
000000000003ee34	mov	x0, x19
000000000003ee38	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
000000000003ee3c	ldr	x8, [sp, #0x28]
000000000003ee40	add	x0, x8, #0x138
000000000003ee44	ldr	x10, [sp, #0x18]
000000000003ee48	ldaxr	w8, [x0]
000000000003ee4c	stlxr	w9, w10, [x0]
000000000003ee50	cbnz	w9, 0x3ee48
000000000003ee54	cbnz	w10, 0x3ee28
000000000003ee58	cmp	w8, #0x1
000000000003ee5c	b.ne	0x3ee28
000000000003ee60	adr	x8, #0x439e3
000000000003ee64	nop
000000000003ee68	ldarb	w8, [x8]
000000000003ee6c	tbz	w8, #0x0, 0x3ee28
000000000003ee70	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000003ee74	adr	x8, #0x439d7
000000000003ee78	nop
000000000003ee7c	stlrb	wzr, [x8]
000000000003ee80	mov	x0, x19
000000000003ee84	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
__ZN6kotlin8SpinLockILNS_24MutexThreadStateHandlingE1EE4lockEv:
000000000003ee88	stp	x22, x21, [sp, #-0x30]!
000000000003ee8c	stp	x20, x19, [sp, #0x10]
000000000003ee90	stp	x29, x30, [sp, #0x20]
000000000003ee94	add	x29, sp, #0x20
000000000003ee98	mov	x19, x0
000000000003ee9c	mov	w8, #0x1
000000000003eea0	ldaxrb	w9, [x19]
000000000003eea4	stxrb	w10, w8, [x19]
000000000003eea8	cbnz	w10, 0x3eea0
000000000003eeac	tbz	w9, #0x0, 0x3ef30
000000000003eeb0	adrp	x0, 42 ; 0x68000
000000000003eeb4	add	x0, x0, #0xa00
000000000003eeb8	ldr	x8, [x0]
000000000003eebc	blr	x8
000000000003eec0	ldr	x20, [x0]
000000000003eec4	cbz	x20, 0x3eee0
000000000003eec8	add	x8, x20, #0x138
000000000003eecc	mov	w9, #0x1
000000000003eed0	ldaxr	w21, [x8]
000000000003eed4	stlxr	w10, w9, [x8]
000000000003eed8	cbnz	w10, 0x3eed0
000000000003eedc	b	0x3eee4
000000000003eee0	mov	w21, #0x1
000000000003eee4	mov	w22, #0x1
000000000003eee8	ldaxrb	w8, [x19]
000000000003eeec	stxrb	w9, w22, [x19]
000000000003eef0	cbnz	w9, 0x3eee8
000000000003eef4	tbz	w8, #0x0, 0x3ef00
000000000003eef8	bl	0x4de20 ; symbol stub for: _sched_yield
000000000003eefc	b	0x3eee8
000000000003ef00	cbz	x20, 0x3ef30
000000000003ef04	add	x0, x20, #0x138
000000000003ef08	ldaxr	w8, [x0]
000000000003ef0c	stlxr	w9, w21, [x0]
000000000003ef10	cbnz	w9, 0x3ef08
000000000003ef14	cbnz	w21, 0x3ef30
000000000003ef18	cmp	w8, #0x1
000000000003ef1c	b.ne	0x3ef30
000000000003ef20	adr	x8, #0x43923
000000000003ef24	nop
000000000003ef28	ldarb	w8, [x8]
000000000003ef2c	tbnz	w8, #0x0, 0x3ef40
000000000003ef30	ldp	x29, x30, [sp, #0x20]
000000000003ef34	ldp	x20, x19, [sp, #0x10]
000000000003ef38	ldp	x22, x21, [sp], #0x30
000000000003ef3c	ret
000000000003ef40	ldp	x29, x30, [sp, #0x20]
000000000003ef44	ldp	x20, x19, [sp, #0x10]
000000000003ef48	ldp	x22, x21, [sp], #0x30
000000000003ef4c	b	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000003ef50	bl	___clang_call_terminate
__ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_:
000000000003ef54	cmp	x1, x0
000000000003ef58	cset	w8, eq
000000000003ef5c	strb	w8, [x1, #0x18]
000000000003ef60	b.eq	0x3f0f0
000000000003ef64	mov	w10, #0x1
000000000003ef68	b	0x3ef88
000000000003ef6c	strb	w10, [x9, #0x18]
000000000003ef70	mov	x1, x8
000000000003ef74	cmp	x8, x0
000000000003ef78	cset	w9, eq
000000000003ef7c	strb	w9, [x8, #0x18]
000000000003ef80	strb	w10, [x11]
000000000003ef84	b.eq	0x3f0f0
000000000003ef88	ldr	x9, [x1, #0x10]
000000000003ef8c	ldrb	w8, [x9, #0x18]
000000000003ef90	cbnz	w8, 0x3f0f0
000000000003ef94	ldr	x8, [x9, #0x10]
000000000003ef98	ldr	x11, [x8]
000000000003ef9c	cmp	x11, x9
000000000003efa0	b.eq	0x3efb4
000000000003efa4	cbz	x11, 0x3f010
000000000003efa8	ldrb	w12, [x11, #0x18]!
000000000003efac	cbz	w12, 0x3ef6c
000000000003efb0	b	0x3f010
000000000003efb4	ldr	x11, [x8, #0x8]
000000000003efb8	cbz	x11, 0x3efc4
000000000003efbc	ldrb	w12, [x11, #0x18]!
000000000003efc0	cbz	w12, 0x3ef6c
000000000003efc4	ldr	x10, [x9]
000000000003efc8	cmp	x10, x1
000000000003efcc	b.eq	0x3f0a4
000000000003efd0	ldr	x10, [x9, #0x8]
000000000003efd4	ldr	x11, [x10]
000000000003efd8	str	x11, [x9, #0x8]
000000000003efdc	cbz	x11, 0x3efe8
000000000003efe0	str	x9, [x11, #0x10]
000000000003efe4	ldr	x8, [x9, #0x10]
000000000003efe8	str	x8, [x10, #0x10]
000000000003efec	ldr	x8, [x9, #0x10]
000000000003eff0	ldr	x11, [x8]
000000000003eff4	cmp	x11, x9
000000000003eff8	cset	w11, ne
000000000003effc	str	x10, [x8, w11, uxtw #3]
000000000003f000	str	x9, [x10]
000000000003f004	str	x10, [x9, #0x10]
000000000003f008	ldr	x8, [x10, #0x10]
000000000003f00c	b	0x3f0a8
000000000003f010	ldr	x10, [x9]
000000000003f014	cmp	x10, x1
000000000003f018	b.eq	0x3f024
000000000003f01c	mov	x1, x9
000000000003f020	b	0x3f05c
000000000003f024	ldr	x10, [x1, #0x8]
000000000003f028	str	x10, [x9]
000000000003f02c	cbz	x10, 0x3f038
000000000003f030	str	x9, [x10, #0x10]
000000000003f034	ldr	x8, [x9, #0x10]
000000000003f038	str	x8, [x1, #0x10]
000000000003f03c	ldr	x8, [x9, #0x10]
000000000003f040	ldr	x10, [x8]
000000000003f044	cmp	x10, x9
000000000003f048	cset	w10, ne
000000000003f04c	str	x1, [x8, w10, uxtw #3]
000000000003f050	str	x9, [x1, #0x8]
000000000003f054	str	x1, [x9, #0x10]
000000000003f058	ldr	x8, [x1, #0x10]
000000000003f05c	mov	w9, #0x1
000000000003f060	strb	w9, [x1, #0x18]
000000000003f064	strb	wzr, [x8, #0x18]
000000000003f068	ldr	x9, [x8, #0x8]
000000000003f06c	ldr	x10, [x9]
000000000003f070	str	x10, [x8, #0x8]
000000000003f074	cbz	x10, 0x3f07c
000000000003f078	str	x8, [x10, #0x10]
000000000003f07c	mov	x10, x8
000000000003f080	ldr	x11, [x10, #0x10]!
000000000003f084	str	x11, [x9, #0x10]
000000000003f088	ldr	x11, [x10]
000000000003f08c	ldr	x12, [x11]
000000000003f090	cmp	x12, x8
000000000003f094	cset	w12, ne
000000000003f098	str	x9, [x11, w12, uxtw #3]
000000000003f09c	str	x8, [x9]
000000000003f0a0	b	0x3f0ec
000000000003f0a4	mov	x10, x9
000000000003f0a8	mov	w9, #0x1
000000000003f0ac	strb	w9, [x10, #0x18]
000000000003f0b0	strb	wzr, [x8, #0x18]
000000000003f0b4	ldr	x9, [x8]
000000000003f0b8	ldr	x10, [x9, #0x8]
000000000003f0bc	str	x10, [x8]
000000000003f0c0	cbz	x10, 0x3f0c8
000000000003f0c4	str	x8, [x10, #0x10]
000000000003f0c8	mov	x10, x8
000000000003f0cc	ldr	x11, [x10, #0x10]!
000000000003f0d0	str	x11, [x9, #0x10]
000000000003f0d4	ldr	x11, [x10]
000000000003f0d8	ldr	x12, [x11]
000000000003f0dc	cmp	x12, x8
000000000003f0e0	cset	w12, ne
000000000003f0e4	str	x9, [x11, w12, uxtw #3]
000000000003f0e8	str	x8, [x9, #0x8]
000000000003f0ec	str	x9, [x10]
000000000003f0f0	ret
__ZNSt3__16vectorIP8ProtocolN6kotlin11std_support9allocatorIS2_EEE6insertIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISB_E9referenceEEE5valueENS_11__wrap_iterIS9_EEE4typeENSF_IPKS2_EESB_SB_:
000000000003f0f4	stp	x28, x27, [sp, #-0x60]!
000000000003f0f8	stp	x26, x25, [sp, #0x10]
000000000003f0fc	stp	x24, x23, [sp, #0x20]
000000000003f100	stp	x22, x21, [sp, #0x30]
000000000003f104	stp	x20, x19, [sp, #0x40]
000000000003f108	stp	x29, x30, [sp, #0x50]
000000000003f10c	add	x29, sp, #0x50
000000000003f110	sub	x28, x3, x2
000000000003f114	cmp	x28, #0x1
000000000003f118	b.lt	0x3f400
000000000003f11c	mov	x21, x2
000000000003f120	mov	x19, x1
000000000003f124	mov	x20, x0
000000000003f128	ldp	x26, x23, [x0]
000000000003f12c	sub	x8, x1, x26
000000000003f130	asr	x25, x8, #3
000000000003f134	asr	x27, x28, #3
000000000003f138	ldr	x8, [x0, #0x10]
000000000003f13c	sub	x9, x8, x23
000000000003f140	cmp	x27, x9, asr #3
000000000003f144	b.le	0x3f1a4
000000000003f148	sub	x9, x23, x26
000000000003f14c	add	x9, x27, x9, asr #3
000000000003f150	lsr	x10, x9, #61
000000000003f154	cbnz	x10, 0x3f41c
000000000003f158	sub	x8, x8, x26
000000000003f15c	asr	x10, x8, #2
000000000003f160	cmp	x10, x9
000000000003f164	csel	x9, x9, x10, lo
000000000003f168	mov	x10, #0xfffffffffffffff
000000000003f16c	cmp	x10, x8, asr #3
000000000003f170	mov	x8, #0x1fffffffffffffff
000000000003f174	csel	x22, x9, x8, hi
000000000003f178	cbz	x22, 0x3f1f8
000000000003f17c	mov	x0, x22
000000000003f180	mov	w1, #0x8
000000000003f184	bl	0x4db20 ; symbol stub for: _calloc
000000000003f188	mov	x24, x0
000000000003f18c	add	x8, x24, x25, lsl #3
000000000003f190	add	x23, x8, x27, lsl #3
000000000003f194	sub	x9, x28, #0x8
000000000003f198	lsr	x9, x9, #3
000000000003f19c	cbnz	x9, 0x3f210
000000000003f1a0	b	0x3f234
000000000003f1a4	sub	x28, x23, x19
000000000003f1a8	asr	x8, x28, #3
000000000003f1ac	cmp	x27, x8
000000000003f1b0	b.le	0x3f1e8
000000000003f1b4	add	x22, x21, x8, lsl #3
000000000003f1b8	sub	x24, x3, x22
000000000003f1bc	cmp	x24, #0x1
000000000003f1c0	b.lt	0x3f2f8
000000000003f1c4	mov	x0, x23
000000000003f1c8	mov	x1, x22
000000000003f1cc	mov	x2, x24
000000000003f1d0	bl	0x4dbec ; symbol stub for: _memcpy
000000000003f1d4	add	x11, x23, x24
000000000003f1d8	str	x11, [x20, #0x8]
000000000003f1dc	cmp	x28, #0x1
000000000003f1e0	b.ge	0x3f308
000000000003f1e4	b	0x3f400
000000000003f1e8	mov	x11, x23
000000000003f1ec	mov	x8, x23
000000000003f1f0	mov	x22, x3
000000000003f1f4	b	0x3f30c
000000000003f1f8	mov	x24, #0x0
000000000003f1fc	add	x8, x24, x25, lsl #3
000000000003f200	add	x23, x8, x27, lsl #3
000000000003f204	sub	x9, x28, #0x8
000000000003f208	lsr	x9, x9, #3
000000000003f20c	cbz	x9, 0x3f234
000000000003f210	add	x10, x21, x9, lsl #3
000000000003f214	add	x10, x10, #0x8
000000000003f218	cmp	x8, x10
000000000003f21c	b.hs	0x3f2c0
000000000003f220	add	x10, x25, x9
000000000003f224	add	x10, x24, x10, lsl #3
000000000003f228	add	x10, x10, #0x8
000000000003f22c	cmp	x10, x21
000000000003f230	b.ls	0x3f2c0
000000000003f234	mov	x9, x8
000000000003f238	mov	x10, x21
000000000003f23c	ldr	x11, [x10], #0x8
000000000003f240	str	x11, [x9], #0x8
000000000003f244	cmp	x9, x23
000000000003f248	b.ne	0x3f23c
000000000003f24c	ldr	x21, [x20]
000000000003f250	sub	x2, x19, x21
000000000003f254	sub	x25, x8, x2
000000000003f258	cmp	x2, #0x1
000000000003f25c	b.lt	0x3f26c
000000000003f260	mov	x0, x25
000000000003f264	mov	x1, x21
000000000003f268	bl	0x4dbec ; symbol stub for: _memcpy
000000000003f26c	add	x24, x24, x22, lsl #3
000000000003f270	ldr	x8, [x20, #0x8]
000000000003f274	sub	x22, x8, x19
000000000003f278	cmp	x22, #0x1
000000000003f27c	b.lt	0x3f294
000000000003f280	mov	x0, x23
000000000003f284	mov	x1, x19
000000000003f288	mov	x2, x22
000000000003f28c	bl	0x4dbec ; symbol stub for: _memcpy
000000000003f290	add	x23, x23, x22
000000000003f294	stp	x25, x23, [x20]
000000000003f298	str	x24, [x20, #0x10]
000000000003f29c	cbz	x21, 0x3f400
000000000003f2a0	mov	x0, x21
000000000003f2a4	ldp	x29, x30, [sp, #0x50]
000000000003f2a8	ldp	x20, x19, [sp, #0x40]
000000000003f2ac	ldp	x22, x21, [sp, #0x30]
000000000003f2b0	ldp	x24, x23, [sp, #0x20]
000000000003f2b4	ldp	x26, x25, [sp, #0x10]
000000000003f2b8	ldp	x28, x27, [sp], #0x60
000000000003f2bc	b	0x4dba4 ; symbol stub for: _free
000000000003f2c0	add	x11, x9, #0x1
000000000003f2c4	and	x12, x11, #0x3ffffffffffffffe
000000000003f2c8	lsl	x10, x12, #3
000000000003f2cc	add	x9, x8, x10
000000000003f2d0	add	x10, x21, x10
000000000003f2d4	mov	x13, x8
000000000003f2d8	mov	x14, x12
000000000003f2dc	ldr	q0, [x21], #0x10
000000000003f2e0	str	q0, [x13], #0x10
000000000003f2e4	subs	x14, x14, #0x2
000000000003f2e8	b.ne	0x3f2dc
000000000003f2ec	cmp	x11, x12
000000000003f2f0	b.ne	0x3f23c
000000000003f2f4	b	0x3f24c
000000000003f2f8	mov	x11, x23
000000000003f2fc	str	x11, [x20, #0x8]
000000000003f300	cmp	x28, #0x1
000000000003f304	b.lt	0x3f400
000000000003f308	mov	x8, x11
000000000003f30c	lsl	x10, x27, #3
000000000003f310	add	x9, x19, x10
000000000003f314	sub	x2, x11, x9
000000000003f318	asr	x9, x2, #3
000000000003f31c	sub	x10, x11, x10
000000000003f320	cmp	x10, x23
000000000003f324	b.hs	0x3f3c0
000000000003f328	add	x11, x9, x25
000000000003f32c	sub	x12, x23, x11, lsl #3
000000000003f330	mvn	x13, x26
000000000003f334	add	x12, x12, x13
000000000003f338	cmp	x12, #0x17
000000000003f33c	b.hi	0x3f348
000000000003f340	mov	x11, x8
000000000003f344	b	0x3f3b0
000000000003f348	lsr	x13, x12, #3
000000000003f34c	add	x12, x13, #0x1
000000000003f350	add	x14, x8, x12, lsl #3
000000000003f354	add	x11, x11, x13
000000000003f358	add	x11, x26, x11, lsl #3
000000000003f35c	add	x11, x11, #0x8
000000000003f360	cmp	x8, x11
000000000003f364	ccmp	x10, x14, #0x2, lo
000000000003f368	mov	x11, x8
000000000003f36c	b.lo	0x3f3b0
000000000003f370	and	x13, x12, #0x3ffffffffffffffc
000000000003f374	add	x10, x10, x13, lsl #3
000000000003f378	add	x11, x8, #0x10
000000000003f37c	add	x14, x9, x25
000000000003f380	add	x14, x26, x14, lsl #3
000000000003f384	add	x14, x14, #0x10
000000000003f388	mov	x15, x13
000000000003f38c	ldp	q0, q1, [x14, #-0x10]
000000000003f390	stp	q0, q1, [x11, #-0x10]
000000000003f394	add	x11, x11, #0x20
000000000003f398	add	x14, x14, #0x20
000000000003f39c	subs	x15, x15, #0x4
000000000003f3a0	b.ne	0x3f38c
000000000003f3a4	add	x11, x8, x13, lsl #3
000000000003f3a8	cmp	x12, x13
000000000003f3ac	b.eq	0x3f3c0
000000000003f3b0	ldr	x12, [x10], #0x8
000000000003f3b4	str	x12, [x11], #0x8
000000000003f3b8	cmp	x10, x23
000000000003f3bc	b.lo	0x3f3b0
000000000003f3c0	str	x11, [x20, #0x8]
000000000003f3c4	cbz	x2, 0x3f3d4
000000000003f3c8	sub	x0, x8, x9, lsl #3
000000000003f3cc	mov	x1, x19
000000000003f3d0	bl	0x4dbf8 ; symbol stub for: _memmove
000000000003f3d4	subs	x2, x22, x21
000000000003f3d8	b.eq	0x3f400
000000000003f3dc	mov	x0, x19
000000000003f3e0	mov	x1, x21
000000000003f3e4	ldp	x29, x30, [sp, #0x50]
000000000003f3e8	ldp	x20, x19, [sp, #0x40]
000000000003f3ec	ldp	x22, x21, [sp, #0x30]
000000000003f3f0	ldp	x24, x23, [sp, #0x20]
000000000003f3f4	ldp	x26, x25, [sp, #0x10]
000000000003f3f8	ldp	x28, x27, [sp], #0x60
000000000003f3fc	b	0x4dbf8 ; symbol stub for: _memmove
000000000003f400	ldp	x29, x30, [sp, #0x50]
000000000003f404	ldp	x20, x19, [sp, #0x40]
000000000003f408	ldp	x22, x21, [sp, #0x30]
000000000003f40c	ldp	x24, x23, [sp, #0x20]
000000000003f410	ldp	x26, x25, [sp, #0x10]
000000000003f414	ldp	x28, x27, [sp], #0x60
000000000003f418	ret
000000000003f41c	mov	x0, x20
000000000003f420	bl	0x4d8ec ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
__ZNSt3__112__hash_tableIPK8TypeInfoNS_4hashIS3_EENS_8equal_toIS3_EEN6kotlin11std_support9allocatorIS3_EEE25__emplace_unique_key_argsIS3_JRKS3_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEEbEERKT_DpOT0_:
000000000003f424	stp	x24, x23, [sp, #-0x40]!
000000000003f428	stp	x22, x21, [sp, #0x10]
000000000003f42c	stp	x20, x19, [sp, #0x20]
000000000003f430	stp	x29, x30, [sp, #0x30]
000000000003f434	add	x29, sp, #0x30
000000000003f438	mov	x21, x2
000000000003f43c	mov	x19, x0
000000000003f440	lsr	x8, x1, #32
000000000003f444	lsl	w9, w1, #3
000000000003f448	add	x9, x9, #0x8
000000000003f44c	eor	x9, x9, x8
000000000003f450	mov	x10, #0x2d69
000000000003f454	movk	x10, #0xeb38, lsl #16
000000000003f458	movk	x10, #0xea08, lsl #32
000000000003f45c	movk	x10, #0x9ddf, lsl #48
000000000003f460	mul	x9, x9, x10
000000000003f464	eor	x8, x9, x8
000000000003f468	eor	x8, x8, x9, lsr #47
000000000003f46c	mul	x8, x8, x10
000000000003f470	eor	x8, x8, x8, lsr #47
000000000003f474	mul	x23, x8, x10
000000000003f478	ldr	x22, [x0, #0x8]
000000000003f47c	cbz	x22, 0x3f4a4
000000000003f480	fmov	d0, x22
000000000003f484	cnt.8b	v0, v0
000000000003f488	uaddlv.8b	h0, v0
000000000003f48c	fmov	w8, s0
000000000003f490	cmp	x8, #0x1
000000000003f494	b.hi	0x3f4a8
000000000003f498	sub	x9, x22, #0x1
000000000003f49c	and	x24, x23, x9
000000000003f4a0	b	0x3f4bc
000000000003f4a4	b	0x3f518
000000000003f4a8	mov	x24, x23
000000000003f4ac	cmp	x23, x22
000000000003f4b0	b.lo	0x3f4bc
000000000003f4b4	udiv	x9, x23, x22
000000000003f4b8	msub	x24, x9, x22, x23
000000000003f4bc	ldr	x9, [x19]
000000000003f4c0	ldr	x9, [x9, x24, lsl #3]
000000000003f4c4	cbz	x9, 0x3f518
000000000003f4c8	sub	x10, x22, #0x1
000000000003f4cc	b	0x3f4e8
000000000003f4d0	and	x11, x11, x10
000000000003f4d4	cmp	x11, x24
000000000003f4d8	b.ne	0x3f518
000000000003f4dc	ldr	x11, [x9, #0x10]
000000000003f4e0	cmp	x11, x1
000000000003f4e4	b.eq	0x3f618
000000000003f4e8	ldr	x9, [x9]
000000000003f4ec	cbz	x9, 0x3f518
000000000003f4f0	ldr	x11, [x9, #0x8]
000000000003f4f4	cmp	x11, x23
000000000003f4f8	b.eq	0x3f4dc
000000000003f4fc	cmp	x8, #0x1
000000000003f500	b.ls	0x3f4d0
000000000003f504	cmp	x11, x22
000000000003f508	b.lo	0x3f4d4
000000000003f50c	udiv	x12, x11, x22
000000000003f510	msub	x11, x12, x22, x11
000000000003f514	b	0x3f4d4
000000000003f518	mov	w0, #0x1
000000000003f51c	mov	w1, #0x18
000000000003f520	bl	0x4db20 ; symbol stub for: _calloc
000000000003f524	mov	x20, x0
000000000003f528	ldr	x8, [x21]
000000000003f52c	stp	x23, x8, [x0, #0x8]
000000000003f530	ldr	x8, [x19, #0x18]
000000000003f534	add	x8, x8, #0x1
000000000003f538	ucvtf	s0, x8
000000000003f53c	ldr	s1, [x19, #0x20]
000000000003f540	cbz	x22, 0x3f554
000000000003f544	ucvtf	s2, x22
000000000003f548	fmul	s2, s1, s2
000000000003f54c	fcmp	s2, s0
000000000003f550	b.pl	0x3f674
000000000003f554	cmp	x22, #0x3
000000000003f558	cset	w8, lo
000000000003f55c	sub	x9, x22, #0x1
000000000003f560	tst	x22, x9
000000000003f564	cset	w9, ne
000000000003f568	orr	w8, w8, w9
000000000003f56c	bfi	x8, x22, #1, #63
000000000003f570	fdiv	s0, s0, s1
000000000003f574	fcvtpu	x9, s0
000000000003f578	cmp	x8, x9
000000000003f57c	csel	x21, x9, x8, lo
000000000003f580	subs	x8, x21, #0x1
000000000003f584	b.ne	0x3f590
000000000003f588	mov	w21, #0x2
000000000003f58c	b	0x3f5a8
000000000003f590	tst	x21, x8
000000000003f594	b.eq	0x3f5a8
000000000003f598	mov	x0, x21
000000000003f59c	bl	0x4d928 ; symbol stub for: __ZNSt3__112__next_primeEm
000000000003f5a0	mov	x21, x0
000000000003f5a4	ldr	x22, [x19, #0x8]
000000000003f5a8	cmp	x21, x22
000000000003f5ac	b.ls	0x3f5c0
000000000003f5b0	mov	x0, x19
000000000003f5b4	mov	x1, x21
000000000003f5b8	bl	__ZNSt3__112__hash_tableIPK8TypeInfoNS_4hashIS3_EENS_8equal_toIS3_EEN6kotlin11std_support9allocatorIS3_EEE8__rehashEm
000000000003f5bc	b	0x3f644
000000000003f5c0	b.hs	0x3f644
000000000003f5c4	ldr	x8, [x19, #0x18]
000000000003f5c8	ucvtf	s0, x8
000000000003f5cc	ldr	s1, [x19, #0x20]
000000000003f5d0	fdiv	s0, s0, s1
000000000003f5d4	fcvtpu	x0, s0
000000000003f5d8	cmp	x22, #0x3
000000000003f5dc	b.lo	0x3f630
000000000003f5e0	fmov	d0, x22
000000000003f5e4	cnt.8b	v0, v0
000000000003f5e8	uaddlv.8b	h0, v0
000000000003f5ec	fmov	w8, s0
000000000003f5f0	cmp	x8, #0x1
000000000003f5f4	b.hi	0x3f630
000000000003f5f8	sub	x8, x0, #0x1
000000000003f5fc	clz	x8, x8
000000000003f600	neg	x8, x8
000000000003f604	mov	w9, #0x1
000000000003f608	lsl	x8, x9, x8
000000000003f60c	cmp	x0, #0x2
000000000003f610	csel	x0, x0, x8, lo
000000000003f614	b	0x3f634
000000000003f618	mov	x0, #0x0
000000000003f61c	ldp	x29, x30, [sp, #0x30]
000000000003f620	ldp	x20, x19, [sp, #0x20]
000000000003f624	ldp	x22, x21, [sp, #0x10]
000000000003f628	ldp	x24, x23, [sp], #0x40
000000000003f62c	ret
000000000003f630	bl	0x4d928 ; symbol stub for: __ZNSt3__112__next_primeEm
000000000003f634	cmp	x21, x0
000000000003f638	csel	x21, x0, x21, lo
000000000003f63c	cmp	x21, x22
000000000003f640	b.lo	0x3f5b0
000000000003f644	ldr	x22, [x19, #0x8]
000000000003f648	sub	x8, x22, #0x1
000000000003f64c	tst	x22, x8
000000000003f650	b.ne	0x3f668
000000000003f654	and	x24, x8, x23
000000000003f658	ldr	x9, [x19]
000000000003f65c	ldr	x8, [x9, x24, lsl #3]
000000000003f660	cbnz	x8, 0x3f680
000000000003f664	b	0x3f6a0
000000000003f668	cmp	x23, x22
000000000003f66c	b.hs	0x3f68c
000000000003f670	mov	x24, x23
000000000003f674	ldr	x9, [x19]
000000000003f678	ldr	x8, [x9, x24, lsl #3]
000000000003f67c	cbz	x8, 0x3f6a0
000000000003f680	ldr	x9, [x8]
000000000003f684	str	x9, [x20]
000000000003f688	b	0x3f6ec
000000000003f68c	udiv	x8, x23, x22
000000000003f690	msub	x24, x8, x22, x23
000000000003f694	ldr	x9, [x19]
000000000003f698	ldr	x8, [x9, x24, lsl #3]
000000000003f69c	cbnz	x8, 0x3f680
000000000003f6a0	mov	x8, x19
000000000003f6a4	ldr	x10, [x8, #0x10]!
000000000003f6a8	str	x10, [x20]
000000000003f6ac	str	x20, [x8]
000000000003f6b0	str	x8, [x9, x24, lsl #3]
000000000003f6b4	ldr	x8, [x20]
000000000003f6b8	cbz	x8, 0x3f6f0
000000000003f6bc	ldr	x8, [x8, #0x8]
000000000003f6c0	sub	x9, x22, #0x1
000000000003f6c4	tst	x22, x9
000000000003f6c8	b.ne	0x3f6d4
000000000003f6cc	and	x8, x8, x9
000000000003f6d0	b	0x3f6e4
000000000003f6d4	cmp	x8, x22
000000000003f6d8	b.lo	0x3f6e4
000000000003f6dc	udiv	x9, x8, x22
000000000003f6e0	msub	x8, x9, x22, x8
000000000003f6e4	ldr	x9, [x19]
000000000003f6e8	add	x8, x9, x8, lsl #3
000000000003f6ec	str	x20, [x8]
000000000003f6f0	ldr	x8, [x19, #0x18]
000000000003f6f4	add	x8, x8, #0x1
000000000003f6f8	str	x8, [x19, #0x18]
000000000003f6fc	mov	w0, #0x1
000000000003f700	ldp	x29, x30, [sp, #0x30]
000000000003f704	ldp	x20, x19, [sp, #0x20]
000000000003f708	ldp	x22, x21, [sp, #0x10]
000000000003f70c	ldp	x24, x23, [sp], #0x40
000000000003f710	ret
000000000003f714	mov	x19, x0
000000000003f718	cbz	x20, 0x3f724
000000000003f71c	mov	x0, x20
000000000003f720	bl	0x4dba4 ; symbol stub for: _free
000000000003f724	mov	x0, x19
000000000003f728	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
__ZNSt3__16__treeINS_12__value_typeIiNS_6vectorIPKvN6kotlin11std_support9allocatorIS4_EEEEEENS_19__map_value_compareIiSA_NS_4lessIiEELb1EEENS7_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE:
000000000003f72c	cbz	x0, 0x3f770
000000000003f730	stp	x20, x19, [sp, #-0x20]!
000000000003f734	stp	x29, x30, [sp, #0x10]
000000000003f738	add	x29, sp, #0x10
000000000003f73c	mov	x19, x0
000000000003f740	ldr	x0, [x0]
000000000003f744	bl	__ZNSt3__16__treeINS_12__value_typeIiNS_6vectorIPKvN6kotlin11std_support9allocatorIS4_EEEEEENS_19__map_value_compareIiSA_NS_4lessIiEELb1EEENS7_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE
000000000003f748	ldr	x0, [x19, #0x8]
000000000003f74c	bl	__ZNSt3__16__treeINS_12__value_typeIiNS_6vectorIPKvN6kotlin11std_support9allocatorIS4_EEEEEENS_19__map_value_compareIiSA_NS_4lessIiEELb1EEENS7_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE
000000000003f750	ldr	x0, [x19, #0x28]
000000000003f754	cbz	x0, 0x3f760
000000000003f758	str	x0, [x19, #0x30]
000000000003f75c	bl	0x4dba4 ; symbol stub for: _free
000000000003f760	mov	x0, x19
000000000003f764	ldp	x29, x30, [sp, #0x10]
000000000003f768	ldp	x20, x19, [sp], #0x20
000000000003f76c	b	0x4dba4 ; symbol stub for: _free
000000000003f770	ret
__ZN4utf88internal13validate_nextIPKcEENS0_9utf_errorERT_S5_Rj:
000000000003f774	ldr	x9, [x0]
000000000003f778	ldrsb	w10, [x9]
000000000003f77c	and	w8, w10, #0xff
000000000003f780	tbnz	w10, #0x1f, 0x3f7ac
000000000003f784	cmp	x9, x1
000000000003f788	b.eq	0x3f97c
000000000003f78c	mov	x10, x9
000000000003f790	mov	x11, x8
000000000003f794	mov	w8, #0x0
000000000003f798	str	w11, [x2]
000000000003f79c	add	x9, x10, #0x1
000000000003f7a0	str	x9, [x0]
000000000003f7a4	mov	x0, x8
000000000003f7a8	ret
000000000003f7ac	and	w10, w8, #0xe0
000000000003f7b0	cmp	w10, #0xc0
000000000003f7b4	b.ne	0x3f800
000000000003f7b8	cmp	x9, x1
000000000003f7bc	b.eq	0x3f97c
000000000003f7c0	add	x10, x9, #0x1
000000000003f7c4	str	x10, [x0]
000000000003f7c8	cmp	x10, x1
000000000003f7cc	b.eq	0x3f97c
000000000003f7d0	ldrb	w11, [x10]
000000000003f7d4	and	w12, w11, #0xc0
000000000003f7d8	cmp	w12, #0x80
000000000003f7dc	b.ne	0x3f98c
000000000003f7e0	and	w11, w11, #0x3f
000000000003f7e4	bfi	w11, w8, #6, #5
000000000003f7e8	cmp	w11, #0x80
000000000003f7ec	b.hs	0x3f794
000000000003f7f0	mov	w8, #0x4
000000000003f7f4	str	x9, [x0]
000000000003f7f8	mov	x0, x8
000000000003f7fc	ret
000000000003f800	and	w10, w8, #0xf0
000000000003f804	cmp	w10, #0xe0
000000000003f808	b.ne	0x3f85c
000000000003f80c	cmp	x9, x1
000000000003f810	b.eq	0x3f97c
000000000003f814	add	x10, x9, #0x1
000000000003f818	str	x10, [x0]
000000000003f81c	cmp	x10, x1
000000000003f820	b.eq	0x3f97c
000000000003f824	ldrb	w10, [x10]
000000000003f828	and	w11, w10, #0xc0
000000000003f82c	cmp	w11, #0x80
000000000003f830	b.ne	0x3f98c
000000000003f834	ubfiz	w8, w8, #12, #4
000000000003f838	bfi	w8, w10, #6, #6
000000000003f83c	and	w10, w8, #0xf800
000000000003f840	mov	w11, #0xd800
000000000003f844	cmp	w10, w11
000000000003f848	b.ne	0x3f8bc
000000000003f84c	mov	w8, #0x5
000000000003f850	str	x9, [x0]
000000000003f854	mov	x0, x8
000000000003f858	ret
000000000003f85c	and	w10, w8, #0xf8
000000000003f860	cmp	w10, #0xf0
000000000003f864	b.ne	0x3f8b4
000000000003f868	cmp	x9, x1
000000000003f86c	b.eq	0x3f97c
000000000003f870	add	x10, x9, #0x1
000000000003f874	str	x10, [x0]
000000000003f878	cmp	x10, x1
000000000003f87c	b.eq	0x3f97c
000000000003f880	ldrb	w10, [x10]
000000000003f884	and	w11, w10, #0xc0
000000000003f888	cmp	w11, #0x80
000000000003f88c	b.ne	0x3f98c
000000000003f890	ubfiz	w8, w8, #18, #3
000000000003f894	bfi	w8, w10, #12, #6
000000000003f898	lsr	w10, w8, #16
000000000003f89c	cmp	w10, #0x10
000000000003f8a0	b.ls	0x3f8d4
000000000003f8a4	mov	w8, #0x5
000000000003f8a8	str	x9, [x0]
000000000003f8ac	mov	x0, x8
000000000003f8b0	ret
000000000003f8b4	mov	w0, #0x2
000000000003f8b8	ret
000000000003f8bc	cmp	w8, #0x800
000000000003f8c0	b.hs	0x3f8ec
000000000003f8c4	mov	w8, #0x4
000000000003f8c8	str	x9, [x0]
000000000003f8cc	mov	x0, x8
000000000003f8d0	ret
000000000003f8d4	cmp	w8, #0x10, lsl #12
000000000003f8d8	b.hs	0x3f92c
000000000003f8dc	mov	w8, #0x4
000000000003f8e0	str	x9, [x0]
000000000003f8e4	mov	x0, x8
000000000003f8e8	ret
000000000003f8ec	add	x10, x9, #0x2
000000000003f8f0	str	x10, [x0]
000000000003f8f4	cmp	x10, x1
000000000003f8f8	b.eq	0x3f97c
000000000003f8fc	ldrb	w11, [x10]
000000000003f900	and	w12, w11, #0xc0
000000000003f904	cmp	w12, #0x80
000000000003f908	b.ne	0x3f98c
000000000003f90c	and	w9, w11, #0x3f
000000000003f910	orr	w11, w8, w9
000000000003f914	mov	w8, #0x0
000000000003f918	str	w11, [x2]
000000000003f91c	add	x9, x10, #0x1
000000000003f920	str	x9, [x0]
000000000003f924	mov	x0, x8
000000000003f928	ret
000000000003f92c	add	x10, x9, #0x2
000000000003f930	str	x10, [x0]
000000000003f934	cmp	x10, x1
000000000003f938	b.eq	0x3f97c
000000000003f93c	ldrb	w11, [x10]
000000000003f940	and	w10, w11, #0xc0
000000000003f944	cmp	w10, #0x80
000000000003f948	b.ne	0x3f98c
000000000003f94c	add	x10, x9, #0x3
000000000003f950	str	x10, [x0]
000000000003f954	cmp	x10, x1
000000000003f958	b.eq	0x3f97c
000000000003f95c	ldrb	w12, [x10]
000000000003f960	and	w13, w12, #0xc0
000000000003f964	cmp	w13, #0x80
000000000003f968	b.ne	0x3f98c
000000000003f96c	ubfiz	w9, w11, #6, #6
000000000003f970	orr	w8, w9, w8
000000000003f974	and	w9, w12, #0x3f
000000000003f978	b	0x3f910
000000000003f97c	mov	w8, #0x1
000000000003f980	str	x9, [x0]
000000000003f984	mov	x0, x8
000000000003f988	ret
000000000003f98c	mov	w8, #0x3
000000000003f990	str	x9, [x0]
000000000003f994	mov	x0, x8
000000000003f998	ret
__ZNSt3__112__hash_tableIPK8TypeInfoNS_4hashIS3_EENS_8equal_toIS3_EEN6kotlin11std_support9allocatorIS3_EEE8__rehashEm:
000000000003f99c	stp	x20, x19, [sp, #-0x20]!
000000000003f9a0	stp	x29, x30, [sp, #0x10]
000000000003f9a4	add	x29, sp, #0x10
000000000003f9a8	mov	x19, x0
000000000003f9ac	cbz	x1, 0x3fa24
000000000003f9b0	mov	x20, x1
000000000003f9b4	mov	x0, x1
000000000003f9b8	mov	w1, #0x8
000000000003f9bc	bl	0x4db20 ; symbol stub for: _calloc
000000000003f9c0	mov	x8, x0
000000000003f9c4	ldr	x0, [x19]
000000000003f9c8	str	x8, [x19]
000000000003f9cc	cbz	x0, 0x3f9d4
000000000003f9d0	bl	0x4dba4 ; symbol stub for: _free
000000000003f9d4	mov	x8, #0x0
000000000003f9d8	str	x20, [x19, #0x8]
000000000003f9dc	ldr	x9, [x19]
000000000003f9e0	str	xzr, [x9, x8, lsl #3]
000000000003f9e4	add	x8, x8, #0x1
000000000003f9e8	cmp	x8, x20
000000000003f9ec	b.lo	0x3f9dc
000000000003f9f0	mov	x11, x19
000000000003f9f4	ldr	x8, [x11, #0x10]!
000000000003f9f8	cbz	x8, 0x3fb00
000000000003f9fc	ldr	x9, [x8, #0x8]
000000000003fa00	fmov	d0, x20
000000000003fa04	cnt.8b	v0, v0
000000000003fa08	uaddlv.8b	h0, v0
000000000003fa0c	fmov	w10, s0
000000000003fa10	cmp	x10, #0x1
000000000003fa14	b.hi	0x3fa3c
000000000003fa18	sub	x12, x20, #0x1
000000000003fa1c	and	x9, x9, x12
000000000003fa20	b	0x3fa4c
000000000003fa24	ldr	x0, [x19]
000000000003fa28	str	xzr, [x19]
000000000003fa2c	cbz	x0, 0x3fa34
000000000003fa30	bl	0x4dba4 ; symbol stub for: _free
000000000003fa34	str	xzr, [x19, #0x8]
000000000003fa38	b	0x3fb00
000000000003fa3c	cmp	x9, x20
000000000003fa40	b.lo	0x3fa4c
000000000003fa44	udiv	x12, x9, x20
000000000003fa48	msub	x9, x12, x20, x9
000000000003fa4c	ldr	x12, [x19]
000000000003fa50	str	x11, [x12, x9, lsl #3]
000000000003fa54	ldr	x12, [x8]
000000000003fa58	cbz	x12, 0x3fb00
000000000003fa5c	sub	x11, x20, #0x1
000000000003fa60	b	0x3fa70
000000000003fa64	mov	x8, x12
000000000003fa68	ldr	x12, [x8]
000000000003fa6c	cbz	x12, 0x3fb00
000000000003fa70	ldr	x13, [x12, #0x8]
000000000003fa74	cmp	x10, #0x1
000000000003fa78	b.hi	0x3fa84
000000000003fa7c	and	x13, x13, x11
000000000003fa80	b	0x3fa94
000000000003fa84	cmp	x13, x20
000000000003fa88	b.lo	0x3fa94
000000000003fa8c	udiv	x14, x13, x20
000000000003fa90	msub	x13, x14, x20, x13
000000000003fa94	cmp	x13, x9
000000000003fa98	b.eq	0x3fa64
000000000003fa9c	ldr	x14, [x19]
000000000003faa0	ldr	x16, [x14, x13, lsl #3]
000000000003faa4	mov	x15, x12
000000000003faa8	cbz	x16, 0x3faf0
000000000003faac	mov	x14, x15
000000000003fab0	ldr	x15, [x15]
000000000003fab4	cbz	x15, 0x3fac8
000000000003fab8	ldr	x16, [x12, #0x10]
000000000003fabc	ldr	x17, [x15, #0x10]
000000000003fac0	cmp	x16, x17
000000000003fac4	b.eq	0x3faac
000000000003fac8	str	x15, [x8]
000000000003facc	ldr	x15, [x19]
000000000003fad0	lsl	x13, x13, #3
000000000003fad4	ldr	x15, [x15, x13]
000000000003fad8	ldr	x15, [x15]
000000000003fadc	str	x15, [x14]
000000000003fae0	ldr	x14, [x19]
000000000003fae4	ldr	x13, [x14, x13]
000000000003fae8	str	x12, [x13]
000000000003faec	b	0x3fa68
000000000003faf0	str	x8, [x14, x13, lsl #3]
000000000003faf4	mov	x8, x12
000000000003faf8	mov	x9, x13
000000000003fafc	b	0x3fa68
000000000003fb00	ldp	x29, x30, [sp, #0x10]
000000000003fb04	ldp	x20, x19, [sp], #0x20
000000000003fb08	ret
__ZNSt3__112__hash_tableIP8ProtocolNS_4hashIS2_EENS_8equal_toIS2_EEN6kotlin11std_support9allocatorIS2_EEE8__rehashEm:
000000000003fb0c	stp	x20, x19, [sp, #-0x20]!
000000000003fb10	stp	x29, x30, [sp, #0x10]
000000000003fb14	add	x29, sp, #0x10
000000000003fb18	mov	x19, x0
000000000003fb1c	cbz	x1, 0x3fb94
000000000003fb20	mov	x20, x1
000000000003fb24	mov	x0, x1
000000000003fb28	mov	w1, #0x8
000000000003fb2c	bl	0x4db20 ; symbol stub for: _calloc
000000000003fb30	mov	x8, x0
000000000003fb34	ldr	x0, [x19]
000000000003fb38	str	x8, [x19]
000000000003fb3c	cbz	x0, 0x3fb44
000000000003fb40	bl	0x4dba4 ; symbol stub for: _free
000000000003fb44	mov	x8, #0x0
000000000003fb48	str	x20, [x19, #0x8]
000000000003fb4c	ldr	x9, [x19]
000000000003fb50	str	xzr, [x9, x8, lsl #3]
000000000003fb54	add	x8, x8, #0x1
000000000003fb58	cmp	x8, x20
000000000003fb5c	b.lo	0x3fb4c
000000000003fb60	mov	x11, x19
000000000003fb64	ldr	x8, [x11, #0x10]!
000000000003fb68	cbz	x8, 0x3fc70
000000000003fb6c	ldr	x9, [x8, #0x8]
000000000003fb70	fmov	d0, x20
000000000003fb74	cnt.8b	v0, v0
000000000003fb78	uaddlv.8b	h0, v0
000000000003fb7c	fmov	w10, s0
000000000003fb80	cmp	x10, #0x1
000000000003fb84	b.hi	0x3fbac
000000000003fb88	sub	x12, x20, #0x1
000000000003fb8c	and	x9, x9, x12
000000000003fb90	b	0x3fbbc
000000000003fb94	ldr	x0, [x19]
000000000003fb98	str	xzr, [x19]
000000000003fb9c	cbz	x0, 0x3fba4
000000000003fba0	bl	0x4dba4 ; symbol stub for: _free
000000000003fba4	str	xzr, [x19, #0x8]
000000000003fba8	b	0x3fc70
000000000003fbac	cmp	x9, x20
000000000003fbb0	b.lo	0x3fbbc
000000000003fbb4	udiv	x12, x9, x20
000000000003fbb8	msub	x9, x12, x20, x9
000000000003fbbc	ldr	x12, [x19]
000000000003fbc0	str	x11, [x12, x9, lsl #3]
000000000003fbc4	ldr	x12, [x8]
000000000003fbc8	cbz	x12, 0x3fc70
000000000003fbcc	sub	x11, x20, #0x1
000000000003fbd0	b	0x3fbe0
000000000003fbd4	mov	x8, x12
000000000003fbd8	ldr	x12, [x8]
000000000003fbdc	cbz	x12, 0x3fc70
000000000003fbe0	ldr	x13, [x12, #0x8]
000000000003fbe4	cmp	x10, #0x1
000000000003fbe8	b.hi	0x3fbf4
000000000003fbec	and	x13, x13, x11
000000000003fbf0	b	0x3fc04
000000000003fbf4	cmp	x13, x20
000000000003fbf8	b.lo	0x3fc04
000000000003fbfc	udiv	x14, x13, x20
000000000003fc00	msub	x13, x14, x20, x13
000000000003fc04	cmp	x13, x9
000000000003fc08	b.eq	0x3fbd4
000000000003fc0c	ldr	x14, [x19]
000000000003fc10	ldr	x16, [x14, x13, lsl #3]
000000000003fc14	mov	x15, x12
000000000003fc18	cbz	x16, 0x3fc60
000000000003fc1c	mov	x14, x15
000000000003fc20	ldr	x15, [x15]
000000000003fc24	cbz	x15, 0x3fc38
000000000003fc28	ldr	x16, [x12, #0x10]
000000000003fc2c	ldr	x17, [x15, #0x10]
000000000003fc30	cmp	x16, x17
000000000003fc34	b.eq	0x3fc1c
000000000003fc38	str	x15, [x8]
000000000003fc3c	ldr	x15, [x19]
000000000003fc40	lsl	x13, x13, #3
000000000003fc44	ldr	x15, [x15, x13]
000000000003fc48	ldr	x15, [x15]
000000000003fc4c	str	x15, [x14]
000000000003fc50	ldr	x14, [x19]
000000000003fc54	ldr	x13, [x14, x13]
000000000003fc58	str	x12, [x13]
000000000003fc5c	b	0x3fbd8
000000000003fc60	str	x8, [x14, x13, lsl #3]
000000000003fc64	mov	x8, x12
000000000003fc68	mov	x9, x13
000000000003fc6c	b	0x3fbd8
000000000003fc70	ldp	x29, x30, [sp, #0x10]
000000000003fc74	ldp	x20, x19, [sp], #0x20
000000000003fc78	ret
__ZNSt3__112__hash_tableIP13objc_selectorNS_4hashIS2_EENS_8equal_toIS2_EEN6kotlin11std_support9allocatorIS2_EEE8__rehashEm:
000000000003fc7c	stp	x20, x19, [sp, #-0x20]!
000000000003fc80	stp	x29, x30, [sp, #0x10]
000000000003fc84	add	x29, sp, #0x10
000000000003fc88	mov	x19, x0
000000000003fc8c	cbz	x1, 0x3fd04
000000000003fc90	mov	x20, x1
000000000003fc94	mov	x0, x1
000000000003fc98	mov	w1, #0x8
000000000003fc9c	bl	0x4db20 ; symbol stub for: _calloc
000000000003fca0	mov	x8, x0
000000000003fca4	ldr	x0, [x19]
000000000003fca8	str	x8, [x19]
000000000003fcac	cbz	x0, 0x3fcb4
000000000003fcb0	bl	0x4dba4 ; symbol stub for: _free
000000000003fcb4	mov	x8, #0x0
000000000003fcb8	str	x20, [x19, #0x8]
000000000003fcbc	ldr	x9, [x19]
000000000003fcc0	str	xzr, [x9, x8, lsl #3]
000000000003fcc4	add	x8, x8, #0x1
000000000003fcc8	cmp	x8, x20
000000000003fccc	b.lo	0x3fcbc
000000000003fcd0	mov	x11, x19
000000000003fcd4	ldr	x8, [x11, #0x10]!
000000000003fcd8	cbz	x8, 0x3fde0
000000000003fcdc	ldr	x9, [x8, #0x8]
000000000003fce0	fmov	d0, x20
000000000003fce4	cnt.8b	v0, v0
000000000003fce8	uaddlv.8b	h0, v0
000000000003fcec	fmov	w10, s0
000000000003fcf0	cmp	x10, #0x1
000000000003fcf4	b.hi	0x3fd1c
000000000003fcf8	sub	x12, x20, #0x1
000000000003fcfc	and	x9, x9, x12
000000000003fd00	b	0x3fd2c
000000000003fd04	ldr	x0, [x19]
000000000003fd08	str	xzr, [x19]
000000000003fd0c	cbz	x0, 0x3fd14
000000000003fd10	bl	0x4dba4 ; symbol stub for: _free
000000000003fd14	str	xzr, [x19, #0x8]
000000000003fd18	b	0x3fde0
000000000003fd1c	cmp	x9, x20
000000000003fd20	b.lo	0x3fd2c
000000000003fd24	udiv	x12, x9, x20
000000000003fd28	msub	x9, x12, x20, x9
000000000003fd2c	ldr	x12, [x19]
000000000003fd30	str	x11, [x12, x9, lsl #3]
000000000003fd34	ldr	x12, [x8]
000000000003fd38	cbz	x12, 0x3fde0
000000000003fd3c	sub	x11, x20, #0x1
000000000003fd40	b	0x3fd50
000000000003fd44	mov	x8, x12
000000000003fd48	ldr	x12, [x8]
000000000003fd4c	cbz	x12, 0x3fde0
000000000003fd50	ldr	x13, [x12, #0x8]
000000000003fd54	cmp	x10, #0x1
000000000003fd58	b.hi	0x3fd64
000000000003fd5c	and	x13, x13, x11
000000000003fd60	b	0x3fd74
000000000003fd64	cmp	x13, x20
000000000003fd68	b.lo	0x3fd74
000000000003fd6c	udiv	x14, x13, x20
000000000003fd70	msub	x13, x14, x20, x13
000000000003fd74	cmp	x13, x9
000000000003fd78	b.eq	0x3fd44
000000000003fd7c	ldr	x14, [x19]
000000000003fd80	ldr	x16, [x14, x13, lsl #3]
000000000003fd84	mov	x15, x12
000000000003fd88	cbz	x16, 0x3fdd0
000000000003fd8c	mov	x14, x15
000000000003fd90	ldr	x15, [x15]
000000000003fd94	cbz	x15, 0x3fda8
000000000003fd98	ldr	x16, [x12, #0x10]
000000000003fd9c	ldr	x17, [x15, #0x10]
000000000003fda0	cmp	x16, x17
000000000003fda4	b.eq	0x3fd8c
000000000003fda8	str	x15, [x8]
000000000003fdac	ldr	x15, [x19]
000000000003fdb0	lsl	x13, x13, #3
000000000003fdb4	ldr	x15, [x15, x13]
000000000003fdb8	ldr	x15, [x15]
000000000003fdbc	str	x15, [x14]
000000000003fdc0	ldr	x14, [x19]
000000000003fdc4	ldr	x13, [x14, x13]
000000000003fdc8	str	x12, [x13]
000000000003fdcc	b	0x3fd48
000000000003fdd0	str	x8, [x14, x13, lsl #3]
000000000003fdd4	mov	x8, x12
000000000003fdd8	mov	x9, x13
000000000003fddc	b	0x3fd48
000000000003fde0	ldp	x29, x30, [sp, #0x10]
000000000003fde4	ldp	x20, x19, [sp], #0x20
000000000003fde8	ret
__ZNSt3__112__hash_tableINS_17__hash_value_typeIiP6WorkerEENS_22__unordered_map_hasherIiS4_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS4_NS_8equal_toIiEELb1EEEN6kotlin11std_support9allocatorIS4_EEE8__rehashEm:
000000000003fdec	stp	x20, x19, [sp, #-0x20]!
000000000003fdf0	stp	x29, x30, [sp, #0x10]
000000000003fdf4	add	x29, sp, #0x10
000000000003fdf8	mov	x19, x0
000000000003fdfc	cbz	x1, 0x3fe74
000000000003fe00	mov	x20, x1
000000000003fe04	mov	x0, x1
000000000003fe08	mov	w1, #0x8
000000000003fe0c	bl	0x4db20 ; symbol stub for: _calloc
000000000003fe10	mov	x8, x0
000000000003fe14	ldr	x0, [x19]
000000000003fe18	str	x8, [x19]
000000000003fe1c	cbz	x0, 0x3fe24
000000000003fe20	bl	0x4dba4 ; symbol stub for: _free
000000000003fe24	mov	x8, #0x0
000000000003fe28	str	x20, [x19, #0x8]
000000000003fe2c	ldr	x9, [x19]
000000000003fe30	str	xzr, [x9, x8, lsl #3]
000000000003fe34	add	x8, x8, #0x1
000000000003fe38	cmp	x8, x20
000000000003fe3c	b.lo	0x3fe2c
000000000003fe40	mov	x11, x19
000000000003fe44	ldr	x8, [x11, #0x10]!
000000000003fe48	cbz	x8, 0x3ff50
000000000003fe4c	ldr	x9, [x8, #0x8]
000000000003fe50	fmov	d0, x20
000000000003fe54	cnt.8b	v0, v0
000000000003fe58	uaddlv.8b	h0, v0
000000000003fe5c	fmov	w10, s0
000000000003fe60	cmp	x10, #0x1
000000000003fe64	b.hi	0x3fe8c
000000000003fe68	sub	x12, x20, #0x1
000000000003fe6c	and	x9, x9, x12
000000000003fe70	b	0x3fe9c
000000000003fe74	ldr	x0, [x19]
000000000003fe78	str	xzr, [x19]
000000000003fe7c	cbz	x0, 0x3fe84
000000000003fe80	bl	0x4dba4 ; symbol stub for: _free
000000000003fe84	str	xzr, [x19, #0x8]
000000000003fe88	b	0x3ff50
000000000003fe8c	cmp	x9, x20
000000000003fe90	b.lo	0x3fe9c
000000000003fe94	udiv	x12, x9, x20
000000000003fe98	msub	x9, x12, x20, x9
000000000003fe9c	ldr	x12, [x19]
000000000003fea0	str	x11, [x12, x9, lsl #3]
000000000003fea4	ldr	x12, [x8]
000000000003fea8	cbz	x12, 0x3ff50
000000000003feac	sub	x11, x20, #0x1
000000000003feb0	b	0x3fec0
000000000003feb4	mov	x8, x12
000000000003feb8	ldr	x12, [x8]
000000000003febc	cbz	x12, 0x3ff50
000000000003fec0	ldr	x13, [x12, #0x8]
000000000003fec4	cmp	x10, #0x1
000000000003fec8	b.hi	0x3fed4
000000000003fecc	and	x13, x13, x11
000000000003fed0	b	0x3fee4
000000000003fed4	cmp	x13, x20
000000000003fed8	b.lo	0x3fee4
000000000003fedc	udiv	x14, x13, x20
000000000003fee0	msub	x13, x14, x20, x13
000000000003fee4	cmp	x13, x9
000000000003fee8	b.eq	0x3feb4
000000000003feec	ldr	x14, [x19]
000000000003fef0	ldr	x16, [x14, x13, lsl #3]
000000000003fef4	mov	x15, x12
000000000003fef8	cbz	x16, 0x3ff40
000000000003fefc	mov	x14, x15
000000000003ff00	ldr	x15, [x15]
000000000003ff04	cbz	x15, 0x3ff18
000000000003ff08	ldr	w16, [x12, #0x10]
000000000003ff0c	ldr	w17, [x15, #0x10]
000000000003ff10	cmp	w16, w17
000000000003ff14	b.eq	0x3fefc
000000000003ff18	str	x15, [x8]
000000000003ff1c	ldr	x15, [x19]
000000000003ff20	lsl	x13, x13, #3
000000000003ff24	ldr	x15, [x15, x13]
000000000003ff28	ldr	x15, [x15]
000000000003ff2c	str	x15, [x14]
000000000003ff30	ldr	x14, [x19]
000000000003ff34	ldr	x13, [x14, x13]
000000000003ff38	str	x12, [x13]
000000000003ff3c	b	0x3feb8
000000000003ff40	str	x8, [x14, x13, lsl #3]
000000000003ff44	mov	x8, x12
000000000003ff48	mov	x9, x13
000000000003ff4c	b	0x3feb8
000000000003ff50	ldp	x29, x30, [sp, #0x10]
000000000003ff54	ldp	x20, x19, [sp], #0x20
000000000003ff58	ret
__ZN12_GLOBAL__N_116TerminateHandler13kotlinHandlerEv:
000000000003ff5c	sub	sp, sp, #0x40
000000000003ff60	stp	x22, x21, [sp, #0x10]
000000000003ff64	stp	x20, x19, [sp, #0x20]
000000000003ff68	stp	x29, x30, [sp, #0x30]
000000000003ff6c	add	x29, sp, #0x30
000000000003ff70	add	x8, sp, #0x8
000000000003ff74	bl	0x4da30 ; symbol stub for: __ZSt17current_exceptionv
000000000003ff78	ldr	x8, [sp, #0x8]
000000000003ff7c	cbnz	x8, 0x3ffa8
000000000003ff80	add	x0, sp, #0x8
000000000003ff84	bl	0x4d910 ; symbol stub for: __ZNSt13exception_ptrD1Ev
000000000003ff88	adrp	x0, 41 ; 0x68000
000000000003ff8c	add	x0, x0, #0xa00
000000000003ff90	ldr	x8, [x0]
000000000003ff94	blr	x8
000000000003ff98	ldr	x20, [x0]
000000000003ff9c	cbnz	x20, 0x3ffc0
000000000003ffa0	mov	w21, #0x1
000000000003ffa4	b	0x3ffd4
000000000003ffa8	mov	x0, sp
000000000003ffac	add	x1, sp, #0x8
000000000003ffb0	bl	0x4d904 ; symbol stub for: __ZNSt13exception_ptrC1ERKS_
000000000003ffb4	mov	x0, sp
000000000003ffb8	bl	0x4da3c ; symbol stub for: __ZSt17rethrow_exceptionSt13exception_ptr
000000000003ffbc	b	0x400e4
000000000003ffc0	add	x8, x20, #0x138
000000000003ffc4	mov	w9, #0x1
000000000003ffc8	ldaxr	w21, [x8]
000000000003ffcc	stlxr	w10, w9, [x8]
000000000003ffd0	cbnz	w10, 0x3ffc8
000000000003ffd4	bl	__ZN12_GLOBAL__N_116TerminateHandler13queuedHandlerEv
000000000003ffd8	b	0x400e4
000000000003ffdc	mov	x19, x0
000000000003ffe0	cbnz	x20, 0x3ffec
000000000003ffe4	mov	x0, x19
000000000003ffe8	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
000000000003ffec	add	x0, x20, #0x138
000000000003fff0	ldaxr	w8, [x0]
000000000003fff4	stlxr	w9, w21, [x0]
000000000003fff8	cbnz	w9, 0x3fff0
000000000003fffc	cbnz	w21, 0x3ffe4
0000000000040000	cmp	w8, #0x1
0000000000040004	b.ne	0x3ffe4
0000000000040008	adr	x8, #0x4283b
000000000004000c	nop
0000000000040010	ldarb	w8, [x8]
0000000000040014	tbz	w8, #0x0, 0x3ffe4
0000000000040018	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004001c	mov	x0, x19
0000000000040020	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
0000000000040024	mov	x20, x1
0000000000040028	mov	x19, x0
000000000004002c	mov	x0, sp
0000000000040030	bl	0x4d910 ; symbol stub for: __ZNSt13exception_ptrD1Ev
0000000000040034	mov	x0, x19
0000000000040038	bl	0x4da78 ; symbol stub for: ___cxa_begin_catch
000000000004003c	cmp	w20, #0x2
0000000000040040	b.ne	0x400ac
0000000000040044	mov	x19, x0
0000000000040048	bl	_Kotlin_initRuntimeIfNeeded
000000000004004c	adrp	x0, 40 ; 0x68000
0000000000040050	add	x0, x0, #0xa00
0000000000040054	ldr	x8, [x0]
0000000000040058	blr	x8
000000000004005c	ldr	x8, [x0]
0000000000040060	add	x20, x8, #0x138
0000000000040064	ldaxr	w21, [x20]
0000000000040068	stlxr	w8, wzr, [x20]
000000000004006c	cbnz	w8, 0x40064
0000000000040070	cmp	w21, #0x1
0000000000040074	b.ne	0x40090
0000000000040078	adr	x8, #0x427cb
000000000004007c	nop
0000000000040080	ldarb	w8, [x8]
0000000000040084	tbz	w8, #0x0, 0x40090
0000000000040088	mov	x0, x20
000000000004008c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000040090	ldr	x8, [x19, #0x8]
0000000000040094	ldr	x0, [x8]
0000000000040098	bl	__ZN12_GLOBAL__N_125processUnhandledExceptionEP9ObjHeader
000000000004009c	ldr	x8, [x19, #0x8]
00000000000400a0	ldr	x0, [x8]
00000000000400a4	bl	__ZN12_GLOBAL__N_131terminateWithUnhandledExceptionEP9ObjHeader
00000000000400a8	b	0x400e4
00000000000400ac	adrp	x0, 40 ; 0x68000
00000000000400b0	add	x0, x0, #0xa00
00000000000400b4	ldr	x8, [x0]
00000000000400b8	blr	x8
00000000000400bc	ldr	x20, [x0]
00000000000400c0	cbnz	x20, 0x400cc
00000000000400c4	mov	w21, #0x1
00000000000400c8	b	0x400e0
00000000000400cc	add	x8, x20, #0x138
00000000000400d0	mov	w9, #0x1
00000000000400d4	ldaxr	w21, [x8]
00000000000400d8	stlxr	w10, w9, [x8]
00000000000400dc	cbnz	w10, 0x400d4
00000000000400e0	bl	__ZN12_GLOBAL__N_116TerminateHandler13queuedHandlerEv
00000000000400e4	brk	#0x1
00000000000400e8	mov	x19, x0
00000000000400ec	cbz	x20, 0x4011c
00000000000400f0	add	x0, x20, #0x138
00000000000400f4	ldaxr	w8, [x0]
00000000000400f8	stlxr	w9, w21, [x0]
00000000000400fc	cbnz	w9, 0x400f4
0000000000040100	cbnz	w21, 0x4011c
0000000000040104	cmp	w8, #0x1
0000000000040108	b.ne	0x4011c
000000000004010c	adr	x8, #0x42737
0000000000040110	nop
0000000000040114	ldarb	w8, [x8]
0000000000040118	tbnz	w8, #0x0, 0x40160
000000000004011c	bl	0x4da84 ; symbol stub for: ___cxa_end_catch
0000000000040120	add	x0, sp, #0x8
0000000000040124	bl	0x4d910 ; symbol stub for: __ZNSt13exception_ptrD1Ev
0000000000040128	mov	x0, x19
000000000004012c	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
0000000000040130	mov	x19, x0
0000000000040134	ldaxr	w8, [x20]
0000000000040138	stlxr	w9, w21, [x20]
000000000004013c	cbnz	w9, 0x40134
0000000000040140	cbnz	w21, 0x4011c
0000000000040144	cmp	w8, #0x1
0000000000040148	b.ne	0x4011c
000000000004014c	adr	x8, #0x426f7
0000000000040150	nop
0000000000040154	ldarb	w8, [x8]
0000000000040158	tbz	w8, #0x0, 0x4011c
000000000004015c	mov	x0, x20
0000000000040160	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000040164	bl	0x4da84 ; symbol stub for: ___cxa_end_catch
0000000000040168	add	x0, sp, #0x8
000000000004016c	bl	0x4d910 ; symbol stub for: __ZNSt13exception_ptrD1Ev
0000000000040170	mov	x0, x19
0000000000040174	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
__ZN12_GLOBAL__N_125processUnhandledExceptionEP9ObjHeader:
0000000000040178	sub	sp, sp, #0x180
000000000004017c	stp	x28, x27, [sp, #0x120]
0000000000040180	stp	x26, x25, [sp, #0x130]
0000000000040184	stp	x24, x23, [sp, #0x140]
0000000000040188	stp	x22, x21, [sp, #0x150]
000000000004018c	stp	x20, x19, [sp, #0x160]
0000000000040190	stp	x29, x30, [sp, #0x170]
0000000000040194	add	x29, sp, #0x170
0000000000040198	mov	x21, x0
000000000004019c	movi.16b	v0, #0x0
00000000000401a0	stp	q0, q0, [sp, #0x30]
00000000000401a4	str	q0, [sp, #0x50]
00000000000401a8	add	x23, sp, #0x30
00000000000401ac	adrp	x19, 40 ; 0x68000
00000000000401b0	add	x19, x19, #0xa00
00000000000401b4	ldr	x26, [x19]
00000000000401b8	mov	x0, x19
00000000000401bc	blr	x26
00000000000401c0	ldr	x8, [x0]
00000000000401c4	ldr	x9, [x8, #0x110]
00000000000401c8	str	x23, [x8, #0x110]
00000000000401cc	mov	x8, #0x600000000
00000000000401d0	stp	x9, x8, [sp, #0x38]
00000000000401d4	adr	x24, #0x4266f
00000000000401d8	nop
00000000000401dc	ldarb	w8, [x24]
00000000000401e0	tbz	w8, #0x0, 0x401e8
00000000000401e4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000401e8	adr	x27, #0x426d0
00000000000401ec	nop
00000000000401f0	ldar	x25, [x27]
00000000000401f4	cmp	x25, #0x2
00000000000401f8	b.hs	0x409ec
00000000000401fc	mov	x0, x19
0000000000040200	blr	x26
0000000000040204	ldr	x28, [x0]
0000000000040208	ldp	x8, x9, [x28, #0x120]
000000000004020c	cmp	x8, x9
0000000000040210	b.eq	0x40230
0000000000040214	mov	x10, x9
0000000000040218	ldr	x11, [x10, #-0x10]!
000000000004021c	cmp	x11, x27
0000000000040220	b.eq	0x402f0
0000000000040224	mov	x9, x10
0000000000040228	cmp	x10, x8
000000000004022c	b.ne	0x40218
0000000000040230	add	x22, x28, #0x120
0000000000040234	add	x0, x28, #0x138
0000000000040238	mov	w9, #0x1
000000000004023c	ldaxr	w8, [x0]
0000000000040240	stlxr	w10, w9, [x0]
0000000000040244	cbnz	w10, 0x4023c
0000000000040248	b	0x40258
000000000004024c	mov	w20, #0x1
0000000000040250	stlxr	w9, x20, [x27]
0000000000040254	cbz	w9, 0x40268
0000000000040258	ldaxr	x25, [x27]
000000000004025c	cbz	x25, 0x4024c
0000000000040260	mov	w20, #0x0
0000000000040264	clrex
0000000000040268	cmp	x25, #0x1
000000000004026c	b.eq	0x40258
0000000000040270	cbz	x28, 0x40298
0000000000040274	ldaxr	w9, [x0]
0000000000040278	stlxr	w10, w8, [x0]
000000000004027c	cbnz	w10, 0x40274
0000000000040280	cbnz	w8, 0x40298
0000000000040284	cmp	w9, #0x1
0000000000040288	b.ne	0x40298
000000000004028c	ldarb	w8, [x24]
0000000000040290	tbz	w8, #0x0, 0x40298
0000000000040294	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000040298	tbz	w20, #0x0, 0x402e8
000000000004029c	str	x21, [sp, #0x20]
00000000000402a0	ldr	x8, [x28, #0x118]
00000000000402a4	add	x0, x8, #0x70
00000000000402a8	mov	w1, #0x18
00000000000402ac	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000402b0	adr	x8, #0x16960
00000000000402b4	nop
00000000000402b8	mov	x25, x0
00000000000402bc	str	x8, [x25, #0x10]!
00000000000402c0	str	x0, [sp, #0x18]
00000000000402c4	str	xzr, [x0, #0x8]
00000000000402c8	str	x25, [sp, #0x48]
00000000000402cc	ldp	x9, x8, [x28, #0x128]
00000000000402d0	cmp	x9, x8
00000000000402d4	b.hs	0x402fc
00000000000402d8	stp	x27, x25, [x9]
00000000000402dc	add	x8, x9, #0x10
00000000000402e0	str	x8, [x28, #0x128]
00000000000402e4	b	0x4038c
00000000000402e8	str	x25, [sp, #0x48]
00000000000402ec	b	0x409ec
00000000000402f0	ldur	x25, [x9, #-0x8]
00000000000402f4	str	x25, [sp, #0x48]
00000000000402f8	b	0x409ec
00000000000402fc	mov	x21, x19
0000000000040300	ldr	x10, [x22]
0000000000040304	sub	x9, x9, x10
0000000000040308	asr	x19, x9, #4
000000000004030c	add	x9, x19, #0x1
0000000000040310	lsr	x11, x9, #60
0000000000040314	cbnz	x11, 0x40b34
0000000000040318	sub	x8, x8, x10
000000000004031c	asr	x10, x8, #3
0000000000040320	cmp	x10, x9
0000000000040324	csel	x9, x9, x10, lo
0000000000040328	mov	x10, #0x7ffffffffffffff
000000000004032c	cmp	x10, x8, asr #4
0000000000040330	mov	x8, #0xfffffffffffffff
0000000000040334	csel	x23, x9, x8, hi
0000000000040338	mov	x0, x23
000000000004033c	mov	w1, #0x10
0000000000040340	bl	0x4db20 ; symbol stub for: _calloc
0000000000040344	add	x8, x0, x19, lsl #4
0000000000040348	add	x19, x0, x23, lsl #4
000000000004034c	stp	x27, x25, [x8]
0000000000040350	add	x20, x8, #0x10
0000000000040354	ldp	x1, x9, [x28, #0x120]
0000000000040358	sub	x2, x9, x1
000000000004035c	sub	x23, x8, x2
0000000000040360	cmp	x2, #0x1
0000000000040364	b.lt	0x40374
0000000000040368	mov	x0, x23
000000000004036c	bl	0x4dbec ; symbol stub for: _memcpy
0000000000040370	ldr	x1, [x22]
0000000000040374	stp	x23, x20, [x28, #0x120]
0000000000040378	str	x19, [x28, #0x130]
000000000004037c	mov	x19, x21
0000000000040380	cbz	x1, 0x4038c
0000000000040384	mov	x0, x1
0000000000040388	bl	0x4dba4 ; symbol stub for: _free
000000000004038c	movi.16b	v0, #0x0
0000000000040390	stp	q0, q0, [sp, #0x60]
0000000000040394	str	xzr, [sp, #0xa0]
0000000000040398	stp	q0, q0, [sp, #0x80]
000000000004039c	mov	x0, x19
00000000000403a0	blr	x26
00000000000403a4	ldr	x8, [x0]
00000000000403a8	ldr	x9, [x8, #0x110]
00000000000403ac	add	x10, sp, #0x60
00000000000403b0	str	x10, [x8, #0x110]
00000000000403b4	add	x11, sp, #0xb0
00000000000403b8	str	x11, [x8, #0x110]
00000000000403bc	ldr	x8, [x0]
00000000000403c0	ldr	x11, [x8, #0x110]
00000000000403c4	sub	x12, x29, #0xa0
00000000000403c8	str	x12, [x8, #0x110]
00000000000403cc	mov	x8, #0x900000000
00000000000403d0	stp	x9, x8, [sp, #0x68]
00000000000403d4	stp	q0, q0, [sp, #0xb0]
00000000000403d8	mov	x8, #0x400000000
00000000000403dc	stp	x10, x8, [sp, #0xb8]
00000000000403e0	stp	q0, q0, [x29, #-0xa0]
00000000000403e4	stp	x11, x8, [x29, #-0x98]
00000000000403e8	adr	x21, #0x424b0
00000000000403ec	nop
00000000000403f0	ldar	x22, [x21]
00000000000403f4	cmp	x22, #0x2
00000000000403f8	str	x26, [sp, #0x28]
00000000000403fc	b.hs	0x405ec
0000000000040400	mov	x0, x19
0000000000040404	blr	x26
0000000000040408	ldr	x23, [x0]
000000000004040c	ldp	x8, x9, [x23, #0x120]
0000000000040410	cmp	x8, x9
0000000000040414	b.eq	0x40434
0000000000040418	mov	x10, x9
000000000004041c	ldr	x11, [x10, #-0x10]!
0000000000040420	cmp	x11, x21
0000000000040424	b.eq	0x404f4
0000000000040428	mov	x9, x10
000000000004042c	cmp	x10, x8
0000000000040430	b.ne	0x4041c
0000000000040434	add	x8, x23, #0x120
0000000000040438	str	x8, [sp, #0x10]
000000000004043c	add	x0, x23, #0x138
0000000000040440	mov	w9, #0x1
0000000000040444	ldaxr	w8, [x0]
0000000000040448	stlxr	w10, w9, [x0]
000000000004044c	cbnz	w10, 0x40444
0000000000040450	b	0x40460
0000000000040454	mov	w20, #0x1
0000000000040458	stlxr	w9, x20, [x21]
000000000004045c	cbz	w9, 0x40470
0000000000040460	ldaxr	x22, [x21]
0000000000040464	cbz	x22, 0x40454
0000000000040468	mov	w20, #0x0
000000000004046c	clrex
0000000000040470	cmp	x22, #0x1
0000000000040474	b.eq	0x40460
0000000000040478	cbz	x23, 0x404a4
000000000004047c	ldaxr	w9, [x0]
0000000000040480	stlxr	w10, w8, [x0]
0000000000040484	cbnz	w10, 0x4047c
0000000000040488	cbnz	w8, 0x404a4
000000000004048c	cmp	w9, #0x1
0000000000040490	b.ne	0x404a4
0000000000040494	ldarb	w8, [x24]
0000000000040498	tbz	w8, #0x0, 0x404a4
000000000004049c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000404a0	movi.16b	v0, #0x0
00000000000404a4	tbz	w20, #0x0, 0x404ec
00000000000404a8	ldr	x8, [x23, #0x118]
00000000000404ac	add	x0, x8, #0x70
00000000000404b0	mov	w1, #0x20
00000000000404b4	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000404b8	mov	x22, x0
00000000000404bc	adr	x8, #0x15604
00000000000404c0	nop
00000000000404c4	str	x8, [x22, #0x10]!
00000000000404c8	stur	xzr, [x22, #-0x8]
00000000000404cc	stur	x22, [x29, #-0x88]
00000000000404d0	ldp	x9, x8, [x23, #0x128]
00000000000404d4	cmp	x9, x8
00000000000404d8	b.hs	0x40500
00000000000404dc	stp	x21, x22, [x9]
00000000000404e0	add	x8, x9, #0x10
00000000000404e4	str	x8, [x23, #0x128]
00000000000404e8	b	0x4059c
00000000000404ec	stur	x22, [x29, #-0x88]
00000000000404f0	b	0x405ec
00000000000404f4	ldur	x22, [x9, #-0x8]
00000000000404f8	stur	x22, [x29, #-0x88]
00000000000404fc	b	0x405ec
0000000000040500	ldr	x10, [sp, #0x10]
0000000000040504	ldr	x10, [x10]
0000000000040508	sub	x9, x9, x10
000000000004050c	asr	x19, x9, #4
0000000000040510	add	x9, x19, #0x1
0000000000040514	lsr	x11, x9, #60
0000000000040518	cbnz	x11, 0x40b40
000000000004051c	sub	x8, x8, x10
0000000000040520	asr	x10, x8, #3
0000000000040524	cmp	x10, x9
0000000000040528	csel	x9, x9, x10, lo
000000000004052c	mov	x10, #0x7ffffffffffffff
0000000000040530	cmp	x10, x8, asr #4
0000000000040534	mov	x8, #0xfffffffffffffff
0000000000040538	csel	x20, x9, x8, hi
000000000004053c	mov	x0, x20
0000000000040540	mov	w1, #0x10
0000000000040544	bl	0x4db20 ; symbol stub for: _calloc
0000000000040548	add	x8, x0, x19, lsl #4
000000000004054c	add	x20, x0, x20, lsl #4
0000000000040550	stp	x21, x22, [x8]
0000000000040554	add	x11, x8, #0x10
0000000000040558	ldp	x1, x9, [x23, #0x120]
000000000004055c	sub	x2, x9, x1
0000000000040560	sub	x19, x8, x2
0000000000040564	cmp	x2, #0x1
0000000000040568	b.lt	0x40580
000000000004056c	mov	x0, x19
0000000000040570	str	x11, [sp, #0x8]
0000000000040574	bl	0x4dbec ; symbol stub for: _memcpy
0000000000040578	ldp	x11, x8, [sp, #0x8]
000000000004057c	ldr	x1, [x8]
0000000000040580	stp	x19, x11, [x23, #0x120]
0000000000040584	str	x20, [x23, #0x130]
0000000000040588	adrp	x19, 40 ; 0x68000
000000000004058c	add	x19, x19, #0xa00
0000000000040590	cbz	x1, 0x4059c
0000000000040594	mov	x0, x1
0000000000040598	bl	0x4dba4 ; symbol stub for: _free
000000000004059c	mov	x0, x22
00000000000405a0	bl	"_kfun:kotlin.native.MemoryModel.$OBJECT#<init>(){}"
00000000000405a4	mov	w0, #0x1
00000000000405a8	mov	w1, #0x28
00000000000405ac	bl	0x4db20 ; symbol stub for: _calloc
00000000000405b0	ldr	x8, [x23, #0x18]!
00000000000405b4	sub	x9, x23, #0x8
00000000000405b8	stp	x21, x9, [x0, #0x10]
00000000000405bc	stp	x8, x23, [x0]
00000000000405c0	str	x0, [x8, #0x8]
00000000000405c4	str	x0, [x23]
00000000000405c8	ldr	x8, [x23, #0x10]
00000000000405cc	add	x8, x8, #0x1
00000000000405d0	str	x8, [x23, #0x10]
00000000000405d4	str	x0, [x0, #0x20]
00000000000405d8	stlr	x22, [x21]
00000000000405dc	ldr	x8, [x23, #0x110]
00000000000405e0	sub	x8, x8, #0x10
00000000000405e4	str	x8, [x23, #0x110]
00000000000405e8	movi.16b	v0, #0x0
00000000000405ec	ldr	x20, [x22, #0x8]
00000000000405f0	stp	q0, q0, [x29, #-0x80]
00000000000405f4	stur	xzr, [x29, #-0x60]
00000000000405f8	mov	x0, x19
00000000000405fc	blr	x26
0000000000040600	ldr	x8, [x0]
0000000000040604	ldr	x9, [x8, #0x110]
0000000000040608	sub	x10, x29, #0x80
000000000004060c	str	x10, [x8, #0x110]
0000000000040610	mov	x8, #0x500000000
0000000000040614	stp	x9, x8, [x29, #-0x78]
0000000000040618	mov	x0, x19
000000000004061c	ldr	w19, [x20, #0x8]
0000000000040620	tbnz	w19, #0x1f, 0x40b08
0000000000040624	blr	x26
0000000000040628	ldr	x8, [x0]
000000000004062c	ldr	x8, [x8, #0x118]
0000000000040630	lsl	x9, x19, #3
0000000000040634	add	x9, x9, #0x1f
0000000000040638	and	x1, x9, #0xffffffff8
000000000004063c	add	x0, x8, #0x70
0000000000040640	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000040644	mov	x22, x0
0000000000040648	mov	x23, x0
000000000004064c	str	xzr, [x23, #0x10]!
0000000000040650	str	xzr, [x0, #0x18]
0000000000040654	str	xzr, [x0, #0x8]
0000000000040658	adr	x8, #0x13f88
000000000004065c	nop
0000000000040660	str	x8, [x23]
0000000000040664	str	w19, [x0, #0x18]
0000000000040668	stur	x23, [x29, #-0x68]
000000000004066c	ldr	w8, [x20, #0x8]
0000000000040670	add	x19, x20, #0x10
0000000000040674	add	x20, x0, #0x20
0000000000040678	bic	w26, w8, w8, asr #31
000000000004067c	cbz	w26, 0x406b8
0000000000040680	ldarb	w8, [x24]
0000000000040684	tbz	w8, #0x0, 0x4068c
0000000000040688	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000004068c	ldr	x8, [x19]
0000000000040690	stur	x8, [x29, #-0x60]
0000000000040694	ldrsw	x9, [x8, #0x10]
0000000000040698	ldr	w10, [x22, #0x18]
000000000004069c	cmp	w10, w9
00000000000406a0	b.ls	0x40af4
00000000000406a4	ldr	xzr, [x23]
00000000000406a8	str	x8, [x20, x9, lsl #3]
00000000000406ac	sub	w26, w26, #0x1
00000000000406b0	add	x19, x19, #0x8
00000000000406b4	cbnz	w26, 0x40680
00000000000406b8	ldr	x8, [x23]
00000000000406bc	and	x8, x8, #0xfffffffffffffffc
00000000000406c0	ldr	x8, [x8]
00000000000406c4	ldr	w8, [x8, #0x5c]
00000000000406c8	cmp	w8, #0x49
00000000000406cc	b.ne	0x40b10
00000000000406d0	adrp	x19, 40 ; 0x68000
00000000000406d4	add	x19, x19, #0xa00
00000000000406d8	mov	x0, x19
00000000000406dc	ldr	x26, [sp, #0x28]
00000000000406e0	blr	x26
00000000000406e4	ldr	x8, [x0]
00000000000406e8	str	x23, [sp, #0xc8]
00000000000406ec	ldur	x9, [x29, #-0x98]
00000000000406f0	str	x9, [x8, #0x110]
00000000000406f4	ldr	w9, [x22, #0x18]
00000000000406f8	cmp	w9, #0x2
00000000000406fc	b.ls	0x40b24
0000000000040700	ldr	x22, [x22, #0x30]
0000000000040704	str	x22, [sp, #0x78]
0000000000040708	ldr	x9, [sp, #0xb8]
000000000004070c	str	x9, [x8, #0x110]
0000000000040710	ldar	x23, [x21]
0000000000040714	cmp	x23, #0x2
0000000000040718	b.hs	0x40908
000000000004071c	mov	x0, x19
0000000000040720	blr	x26
0000000000040724	ldr	x20, [x0]
0000000000040728	ldp	x8, x9, [x20, #0x120]
000000000004072c	cmp	x8, x9
0000000000040730	b.eq	0x40750
0000000000040734	mov	x10, x9
0000000000040738	ldr	x11, [x10, #-0x10]!
000000000004073c	cmp	x11, x21
0000000000040740	b.eq	0x40814
0000000000040744	mov	x9, x10
0000000000040748	cmp	x10, x8
000000000004074c	b.ne	0x40738
0000000000040750	add	x8, x20, #0x120
0000000000040754	str	x8, [sp, #0x10]
0000000000040758	add	x0, x20, #0x138
000000000004075c	mov	w9, #0x1
0000000000040760	ldaxr	w8, [x0]
0000000000040764	stlxr	w10, w9, [x0]
0000000000040768	cbnz	w10, 0x40760
000000000004076c	b	0x4077c
0000000000040770	mov	w19, #0x1
0000000000040774	stlxr	w9, x19, [x21]
0000000000040778	cbz	w9, 0x4078c
000000000004077c	ldaxr	x23, [x21]
0000000000040780	cbz	x23, 0x40770
0000000000040784	mov	w19, #0x0
0000000000040788	clrex
000000000004078c	cmp	x23, #0x1
0000000000040790	b.eq	0x4077c
0000000000040794	cbz	x20, 0x407bc
0000000000040798	ldaxr	w9, [x0]
000000000004079c	stlxr	w10, w8, [x0]
00000000000407a0	cbnz	w10, 0x40798
00000000000407a4	cbnz	w8, 0x407bc
00000000000407a8	cmp	w9, #0x1
00000000000407ac	b.ne	0x407bc
00000000000407b0	ldarb	w8, [x24]
00000000000407b4	tbz	w8, #0x0, 0x407bc
00000000000407b8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000407bc	tbz	w19, #0x0, 0x40804
00000000000407c0	ldr	x8, [x20, #0x118]
00000000000407c4	add	x0, x8, #0x70
00000000000407c8	mov	w1, #0x20
00000000000407cc	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000407d0	mov	x23, x0
00000000000407d4	adr	x8, #0x152ec
00000000000407d8	nop
00000000000407dc	str	x8, [x23, #0x10]!
00000000000407e0	stur	xzr, [x23, #-0x8]
00000000000407e4	str	x23, [sp, #0x80]
00000000000407e8	ldp	x9, x8, [x20, #0x128]
00000000000407ec	cmp	x9, x8
00000000000407f0	b.hs	0x40820
00000000000407f4	stp	x21, x23, [x9]
00000000000407f8	add	x8, x9, #0x10
00000000000407fc	str	x8, [x20, #0x128]
0000000000040800	b	0x408b4
0000000000040804	str	x23, [sp, #0x80]
0000000000040808	adrp	x19, 40 ; 0x68000
000000000004080c	add	x19, x19, #0xa00
0000000000040810	b	0x40908
0000000000040814	ldur	x23, [x9, #-0x8]
0000000000040818	str	x23, [sp, #0x80]
000000000004081c	b	0x40908
0000000000040820	ldr	x10, [sp, #0x10]
0000000000040824	ldr	x10, [x10]
0000000000040828	sub	x9, x9, x10
000000000004082c	asr	x19, x9, #4
0000000000040830	add	x9, x19, #0x1
0000000000040834	lsr	x11, x9, #60
0000000000040838	cbnz	x11, 0x40b4c
000000000004083c	sub	x8, x8, x10
0000000000040840	asr	x10, x8, #3
0000000000040844	cmp	x10, x9
0000000000040848	csel	x9, x9, x10, lo
000000000004084c	mov	x10, #0x7ffffffffffffff
0000000000040850	cmp	x10, x8, asr #4
0000000000040854	mov	x8, #0xfffffffffffffff
0000000000040858	csel	x24, x9, x8, hi
000000000004085c	mov	x0, x24
0000000000040860	mov	w1, #0x10
0000000000040864	bl	0x4db20 ; symbol stub for: _calloc
0000000000040868	add	x8, x0, x19, lsl #4
000000000004086c	add	x19, x0, x24, lsl #4
0000000000040870	stp	x21, x23, [x8]
0000000000040874	add	x26, x8, #0x10
0000000000040878	ldp	x1, x9, [x20, #0x120]
000000000004087c	sub	x2, x9, x1
0000000000040880	sub	x24, x8, x2
0000000000040884	cmp	x2, #0x1
0000000000040888	b.lt	0x4089c
000000000004088c	mov	x0, x24
0000000000040890	bl	0x4dbec ; symbol stub for: _memcpy
0000000000040894	ldr	x8, [sp, #0x10]
0000000000040898	ldr	x1, [x8]
000000000004089c	stp	x24, x26, [x20, #0x120]
00000000000408a0	str	x19, [x20, #0x130]
00000000000408a4	ldr	x26, [sp, #0x28]
00000000000408a8	cbz	x1, 0x408b4
00000000000408ac	mov	x0, x1
00000000000408b0	bl	0x4dba4 ; symbol stub for: _free
00000000000408b4	mov	x0, x23
00000000000408b8	adrp	x19, 40 ; 0x68000
00000000000408bc	add	x19, x19, #0xa00
00000000000408c0	bl	"_kfun:kotlin.native.MemoryModel.$OBJECT#<init>(){}"
00000000000408c4	mov	w0, #0x1
00000000000408c8	mov	w1, #0x28
00000000000408cc	bl	0x4db20 ; symbol stub for: _calloc
00000000000408d0	ldr	x8, [x20, #0x18]!
00000000000408d4	sub	x9, x20, #0x8
00000000000408d8	stp	x21, x9, [x0, #0x10]
00000000000408dc	stp	x8, x20, [x0]
00000000000408e0	str	x0, [x8, #0x8]
00000000000408e4	str	x0, [x20]
00000000000408e8	ldr	x8, [x20, #0x10]
00000000000408ec	add	x8, x8, #0x1
00000000000408f0	str	x8, [x20, #0x10]
00000000000408f4	str	x0, [x0, #0x20]
00000000000408f8	stlr	x23, [x21]
00000000000408fc	ldr	x8, [x20, #0x110]
0000000000040900	sub	x8, x8, #0x10
0000000000040904	str	x8, [x20, #0x110]
0000000000040908	ldr	x8, [x23, #0x8]
000000000004090c	ldr	w9, [x8, #0x8]
0000000000040910	cbz	w9, 0x40b2c
0000000000040914	ldr	x1, [x8, #0x10]
0000000000040918	str	x1, [sp, #0x88]
000000000004091c	ldr	x8, [x22]
0000000000040920	and	x8, x8, #0xfffffffffffffffc
0000000000040924	ldr	x8, [x8]
0000000000040928	ldr	x8, [x8, #0x70]
000000000004092c	mov	x0, x22
0000000000040930	blr	x8
0000000000040934	ldr	x21, [sp, #0x20]
0000000000040938	add	x23, sp, #0x30
000000000004093c	mov	x22, x0
0000000000040940	mov	x0, x19
0000000000040944	blr	x26
0000000000040948	ldr	x8, [x0]
000000000004094c	ldr	x8, [x8, #0x118]
0000000000040950	add	x0, x8, #0x70
0000000000040954	mov	w1, #0x20
0000000000040958	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000004095c	adr	x9, #0x151f4
0000000000040960	nop
0000000000040964	mov	x8, x0
0000000000040968	str	x9, [x8, #0x10]!
000000000004096c	str	xzr, [x0, #0x8]
0000000000040970	tbz	w22, #0x0, 0x40980
0000000000040974	str	x8, [sp, #0x90]
0000000000040978	str	xzr, [x0, #0x18]
000000000004097c	b	0x4098c
0000000000040980	str	x8, [sp, #0x98]
0000000000040984	str	xzr, [x0, #0x18]
0000000000040988	str	x8, [sp, #0xa0]
000000000004098c	ldr	x9, [sp, #0x18]
0000000000040990	str	x8, [x9, #0x18]
0000000000040994	mov	x0, x19
0000000000040998	blr	x26
000000000004099c	ldr	x8, [x0]
00000000000409a0	ldr	x9, [sp, #0x68]
00000000000409a4	str	x9, [x8, #0x110]
00000000000409a8	mov	w0, #0x1
00000000000409ac	mov	w1, #0x28
00000000000409b0	bl	0x4db20 ; symbol stub for: _calloc
00000000000409b4	ldr	x8, [x28, #0x18]!
00000000000409b8	sub	x9, x28, #0x8
00000000000409bc	stp	x27, x9, [x0, #0x10]
00000000000409c0	stp	x8, x28, [x0]
00000000000409c4	str	x0, [x8, #0x8]
00000000000409c8	str	x0, [x28]
00000000000409cc	ldr	x8, [x28, #0x10]
00000000000409d0	add	x8, x8, #0x1
00000000000409d4	str	x8, [x28, #0x10]
00000000000409d8	str	x0, [x0, #0x20]
00000000000409dc	stlr	x25, [x27]
00000000000409e0	ldr	x8, [x28, #0x110]
00000000000409e4	sub	x8, x8, #0x10
00000000000409e8	str	x8, [x28, #0x110]
00000000000409ec	ldr	x8, [x25, #0x8]
00000000000409f0	add	x8, x8, #0x8
00000000000409f4	ldar	x0, [x8]
00000000000409f8	str	x0, [sp, #0x50]
00000000000409fc	cbz	x0, 0x40afc
0000000000040a00	add	x2, x23, #0x28
0000000000040a04	ldr	x8, [x0]
0000000000040a08	and	x8, x8, #0xfffffffffffffffc
0000000000040a0c	ldr	x8, [x8]
0000000000040a10	ldr	w9, [x8, #0x3c]
0000000000040a14	ldr	x8, [x8, #0x40]
0000000000040a18	tbnz	w9, #0x1f, 0x40a28
0000000000040a1c	mov	w10, #0x2c
0000000000040a20	and	x9, x9, x10
0000000000040a24	b	0x40aac
0000000000040a28	neg	w10, w9
0000000000040a2c	mvn	w9, w9
0000000000040a30	cmp	w10, #0x9
0000000000040a34	b.ge	0x40a6c
0000000000040a38	cmp	w10, #0x2
0000000000040a3c	b.lt	0x40aa0
0000000000040a40	mov	x10, #0x0
0000000000040a44	mov	x11, x8
0000000000040a48	ldr	w12, [x11]
0000000000040a4c	cmp	w12, #0x2b
0000000000040a50	b.gt	0x40aa8
0000000000040a54	add	x10, x10, #0x1
0000000000040a58	add	x11, x11, #0x10
0000000000040a5c	cmp	x9, x10
0000000000040a60	b.ne	0x40a48
0000000000040a64	mov	x10, x9
0000000000040a68	b	0x40aa8
0000000000040a6c	mov	w10, #0x0
0000000000040a70	add	w11, w9, w10
0000000000040a74	cmp	w11, #0x0
0000000000040a78	cinc	w11, w11, lt
0000000000040a7c	asr	w11, w11, #1
0000000000040a80	sbfiz	x12, x11, #4, #32
0000000000040a84	ldr	w12, [x8, x12]
0000000000040a88	cmp	w12, #0x2c
0000000000040a8c	csinc	w10, w10, w11, ge
0000000000040a90	csel	w9, w9, w11, lt
0000000000040a94	cmp	w10, w9
0000000000040a98	b.lt	0x40a70
0000000000040a9c	b	0x40aa8
0000000000040aa0	mov	w10, #0x0
0000000000040aa4	b	0x40aa8
0000000000040aa8	sxtw	x9, w10
0000000000040aac	add	x8, x8, x9, lsl #4
0000000000040ab0	ldr	x8, [x8, #0x8]
0000000000040ab4	ldr	x8, [x8]
0000000000040ab8	mov	x1, x21
0000000000040abc	blr	x8
0000000000040ac0	mov	x0, x19
0000000000040ac4	blr	x26
0000000000040ac8	ldr	x8, [x0]
0000000000040acc	ldr	x9, [sp, #0x38]
0000000000040ad0	str	x9, [x8, #0x110]
0000000000040ad4	ldp	x29, x30, [sp, #0x170]
0000000000040ad8	ldp	x20, x19, [sp, #0x160]
0000000000040adc	ldp	x22, x21, [sp, #0x150]
0000000000040ae0	ldp	x24, x23, [sp, #0x140]
0000000000040ae4	ldp	x26, x25, [sp, #0x130]
0000000000040ae8	ldp	x28, x27, [sp, #0x120]
0000000000040aec	add	sp, sp, #0x180
0000000000040af0	ret
0000000000040af4	bl	_ThrowArrayIndexOutOfBoundsException
0000000000040af8	b	0x40c24
0000000000040afc	mov	x0, x21
0000000000040b00	bl	_ThrowException
0000000000040b04	b	0x40c24
0000000000040b08	bl	_ThrowIllegalArgumentException
0000000000040b0c	b	0x40c24
0000000000040b10	adr	x1, #0x13ad0
0000000000040b14	nop
0000000000040b18	mov	x0, x23
0000000000040b1c	bl	_ThrowClassCastException
0000000000040b20	b	0x40c24
0000000000040b24	bl	_ThrowArrayIndexOutOfBoundsException
0000000000040b28	b	0x40c24
0000000000040b2c	bl	_ThrowArrayIndexOutOfBoundsException
0000000000040b30	b	0x40c24
0000000000040b34	mov	x0, x22
0000000000040b38	bl	0x4d8ec ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
0000000000040b3c	b	0x40c24
0000000000040b40	ldr	x0, [sp, #0x10]
0000000000040b44	bl	0x4d8ec ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
0000000000040b48	b	0x40c24
0000000000040b4c	ldr	x0, [sp, #0x10]
0000000000040b50	bl	0x4d8ec ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
0000000000040b54	b	0x40c24
0000000000040b58	bl	0x4da78 ; symbol stub for: ___cxa_begin_catch
0000000000040b5c	str	xzr, [sp, #0x80]
0000000000040b60	stlr	xzr, [x21]
0000000000040b64	ldr	x8, [x20, #0x128]
0000000000040b68	sub	x8, x8, #0x10
0000000000040b6c	str	x8, [x20, #0x128]
0000000000040b70	bl	0x4daa8 ; symbol stub for: ___cxa_rethrow
0000000000040b74	b	0x40c24
0000000000040b78	b	0x40b9c
0000000000040b7c	bl	0x4da78 ; symbol stub for: ___cxa_begin_catch
0000000000040b80	stur	xzr, [x29, #-0x88]
0000000000040b84	stlr	xzr, [x21]
0000000000040b88	ldr	x8, [x23, #0x128]
0000000000040b8c	sub	x8, x8, #0x10
0000000000040b90	str	x8, [x23, #0x128]
0000000000040b94	bl	0x4daa8 ; symbol stub for: ___cxa_rethrow
0000000000040b98	b	0x40c24
0000000000040b9c	mov	x20, x0
0000000000040ba0	bl	0x4da84 ; symbol stub for: ___cxa_end_catch
0000000000040ba4	b	0x40bbc
0000000000040ba8	str	x26, [sp, #0x28]
0000000000040bac	mov	x21, x1
0000000000040bb0	mov	x20, x0
0000000000040bb4	b	0x40bec
0000000000040bb8	mov	x20, x0
0000000000040bbc	mov	x0, x20
0000000000040bc0	bl	0x4da78 ; symbol stub for: ___cxa_begin_catch
0000000000040bc4	str	xzr, [sp, #0x48]
0000000000040bc8	stlr	xzr, [x27]
0000000000040bcc	ldr	x8, [x28, #0x128]
0000000000040bd0	sub	x8, x8, #0x10
0000000000040bd4	str	x8, [x28, #0x128]
0000000000040bd8	bl	0x4daa8 ; symbol stub for: ___cxa_rethrow
0000000000040bdc	b	0x40c24
0000000000040be0	mov	x21, x1
0000000000040be4	mov	x20, x0
0000000000040be8	bl	0x4da84 ; symbol stub for: ___cxa_end_catch
0000000000040bec	adrp	x0, 40 ; 0x68000
0000000000040bf0	add	x0, x0, #0xa00
0000000000040bf4	ldr	x8, [sp, #0x28]
0000000000040bf8	blr	x8
0000000000040bfc	ldr	x8, [x0]
0000000000040c00	ldr	x9, [sp, #0x38]
0000000000040c04	str	x9, [x8, #0x110]
0000000000040c08	cmp	w21, #0x2
0000000000040c0c	b.ne	0x40c30
0000000000040c10	mov	x0, x20
0000000000040c14	bl	0x4da78 ; symbol stub for: ___cxa_begin_catch
0000000000040c18	ldr	x8, [x0, #0x8]
0000000000040c1c	ldr	x0, [x8]
0000000000040c20	bl	__ZN12_GLOBAL__N_131terminateWithUnhandledExceptionEP9ObjHeader
0000000000040c24	brk	#0x1
0000000000040c28	mov	x20, x0
0000000000040c2c	bl	0x4da84 ; symbol stub for: ___cxa_end_catch
0000000000040c30	mov	x0, x20
0000000000040c34	bl	___clang_call_terminate
__ZN12_GLOBAL__N_131terminateWithUnhandledExceptionEP9ObjHeader:
0000000000040c38	stp	x29, x30, [sp, #-0x10]!
0000000000040c3c	mov	x29, sp
0000000000040c40	bl	__ZN12_GLOBAL__N_13$_0clIZNS_31terminateWithUnhandledExceptionEP9ObjHeaderE3$_1EEvT_
__ZN12_GLOBAL__N_116TerminateHandler13queuedHandlerEv:
0000000000040c44	stp	x29, x30, [sp, #-0x10]!
0000000000040c48	mov	x29, sp
0000000000040c4c	bl	__ZN12_GLOBAL__N_13$_0clIZNS_16TerminateHandler13queuedHandlerEvEUlvE_EEvT_
__ZN12_GLOBAL__N_13$_0clIZNS_16TerminateHandler13queuedHandlerEvEUlvE_EEvT_:
0000000000040c50	sub	sp, sp, #0x50
0000000000040c54	stp	x22, x21, [sp, #0x20]
0000000000040c58	stp	x20, x19, [sp, #0x30]
0000000000040c5c	stp	x29, x30, [sp, #0x40]
0000000000040c60	add	x29, sp, #0x40
0000000000040c64	adr	x8, #0x27770
0000000000040c68	nop
0000000000040c6c	mov	w9, #0x1
0000000000040c70	ldaxr	w10, [x8]
0000000000040c74	cbnz	w10, 0x40c84
0000000000040c78	stlxr	w10, w9, [x8]
0000000000040c7c	cbnz	w10, 0x40c70
0000000000040c80	bl	__ZZN12_GLOBAL__N_116TerminateHandler13queuedHandlerEvENKUlvE_clEv
0000000000040c84	clrex
0000000000040c88	str	xzr, [sp, #0x10]
0000000000040c8c	mov	w20, #0x1
0000000000040c90	str	w20, [sp, #0x18]
0000000000040c94	strb	wzr, [sp, #0x1c]
0000000000040c98	adrp	x0, 40 ; 0x68000
0000000000040c9c	add	x0, x0, #0xa00
0000000000040ca0	ldr	x8, [x0]
0000000000040ca4	blr	x8
0000000000040ca8	ldr	x21, [x0]
0000000000040cac	cbz	x21, 0x40cd4
0000000000040cb0	add	x8, x21, #0x138
0000000000040cb4	mov	w9, #0x1
0000000000040cb8	ldaxr	w20, [x8]
0000000000040cbc	stlxr	w10, w9, [x8]
0000000000040cc0	cbnz	w10, 0x40cb8
0000000000040cc4	str	x21, [sp, #0x10]
0000000000040cc8	str	w20, [sp, #0x18]
0000000000040ccc	mov	w8, #0x1
0000000000040cd0	strb	w8, [sp, #0x1c]
0000000000040cd4	nop
0000000000040cd8	ldr	w0, __ZN12_GLOBAL__N_126concurrentTerminateWrapperE
0000000000040cdc	bl	0x4de44 ; symbol stub for: _sleep
0000000000040ce0	add	x0, sp, #0x8
0000000000040ce4	bl	__ZN6kotlin31NativeOrUnregisteredThreadGuardD1Ev
0000000000040ce8	mov	w0, #0x1
0000000000040cec	bl	0x4d8c8 ; symbol stub for: __Exit
0000000000040cf0	mov	x19, x0
0000000000040cf4	cbz	x21, 0x40d28
0000000000040cf8	add	x0, x21, #0x138
0000000000040cfc	ldaxr	w8, [x0]
0000000000040d00	stlxr	w9, w20, [x0]
0000000000040d04	cbnz	w9, 0x40cfc
0000000000040d08	cbnz	w20, 0x40d28
0000000000040d0c	cmp	w8, #0x1
0000000000040d10	b.ne	0x40d28
0000000000040d14	adr	x8, #0x41b2f
0000000000040d18	nop
0000000000040d1c	ldarb	w8, [x8]
0000000000040d20	tbz	w8, #0x0, 0x40d28
0000000000040d24	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000040d28	mov	x0, x19
0000000000040d2c	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
__ZZN12_GLOBAL__N_116TerminateHandler13queuedHandlerEvENKUlvE_clEv:
0000000000040d30	stp	x29, x30, [sp, #-0x10]!
0000000000040d34	mov	x29, sp
0000000000040d38	bl	__ZN12_GLOBAL__N_116TerminateHandler8instanceEv
0000000000040d3c	nop
0000000000040d40	ldr	x8, #0x41d90
0000000000040d44	blr	x8
__ZN12_GLOBAL__N_116TerminateHandler8instanceEv:
0000000000040d48	stp	x20, x19, [sp, #-0x20]!
0000000000040d4c	stp	x29, x30, [sp, #0x10]
0000000000040d50	add	x29, sp, #0x10
0000000000040d54	adr	x8, #0x41d74
0000000000040d58	nop
0000000000040d5c	ldarb	w8, [x8]
0000000000040d60	tbz	w8, #0x0, 0x40d70
0000000000040d64	ldp	x29, x30, [sp, #0x10]
0000000000040d68	ldp	x20, x19, [sp], #0x20
0000000000040d6c	ret
0000000000040d70	adr	x19, #0x41d58
0000000000040d74	nop
0000000000040d78	mov	x0, x19
0000000000040d7c	bl	0x4da90 ; symbol stub for: ___cxa_guard_acquire
0000000000040d80	cbz	w0, 0x40d64
0000000000040d84	adr	x0, #-0xe28
0000000000040d88	nop
0000000000040d8c	bl	0x4da24 ; symbol stub for: __ZSt13set_terminatePFvvE
0000000000040d90	str	x0, [x19, #0x8]
0000000000040d94	mov	x0, x19
0000000000040d98	ldp	x29, x30, [sp, #0x10]
0000000000040d9c	ldp	x20, x19, [sp], #0x20
0000000000040da0	b	0x4da9c ; symbol stub for: ___cxa_guard_release
__ZN12_GLOBAL__N_13$_0clIZNS_31terminateWithUnhandledExceptionEP9ObjHeaderE3$_1EEvT_:
0000000000040da4	sub	sp, sp, #0x50
0000000000040da8	stp	x22, x21, [sp, #0x20]
0000000000040dac	stp	x20, x19, [sp, #0x30]
0000000000040db0	stp	x29, x30, [sp, #0x40]
0000000000040db4	add	x29, sp, #0x40
0000000000040db8	str	x0, [sp, #0x18]
0000000000040dbc	adr	x8, #0x27618
0000000000040dc0	nop
0000000000040dc4	mov	w9, #0x1
0000000000040dc8	ldaxr	w10, [x8]
0000000000040dcc	cbnz	w10, 0x40de0
0000000000040dd0	stlxr	w10, w9, [x8]
0000000000040dd4	cbnz	w10, 0x40dc8
0000000000040dd8	add	x0, sp, #0x18
0000000000040ddc	bl	__ZZN12_GLOBAL__N_131terminateWithUnhandledExceptionEP9ObjHeaderENK3$_1clEv
0000000000040de0	clrex
0000000000040de4	str	xzr, [sp, #0x8]
0000000000040de8	mov	w20, #0x1
0000000000040dec	str	w20, [sp, #0x10]
0000000000040df0	strb	wzr, [sp, #0x14]
0000000000040df4	adrp	x0, 40 ; 0x68000
0000000000040df8	add	x0, x0, #0xa00
0000000000040dfc	ldr	x8, [x0]
0000000000040e00	blr	x8
0000000000040e04	ldr	x21, [x0]
0000000000040e08	cbz	x21, 0x40e30
0000000000040e0c	add	x8, x21, #0x138
0000000000040e10	mov	w9, #0x1
0000000000040e14	ldaxr	w20, [x8]
0000000000040e18	stlxr	w10, w9, [x8]
0000000000040e1c	cbnz	w10, 0x40e14
0000000000040e20	str	x21, [sp, #0x8]
0000000000040e24	str	w20, [sp, #0x10]
0000000000040e28	mov	w8, #0x1
0000000000040e2c	strb	w8, [sp, #0x14]
0000000000040e30	nop
0000000000040e34	ldr	w0, __ZN12_GLOBAL__N_126concurrentTerminateWrapperE
0000000000040e38	bl	0x4de44 ; symbol stub for: _sleep
0000000000040e3c	mov	x0, sp
0000000000040e40	bl	__ZN6kotlin31NativeOrUnregisteredThreadGuardD1Ev
0000000000040e44	mov	w0, #0x1
0000000000040e48	bl	0x4d8c8 ; symbol stub for: __Exit
0000000000040e4c	mov	x19, x0
0000000000040e50	cbz	x21, 0x40e84
0000000000040e54	add	x0, x21, #0x138
0000000000040e58	ldaxr	w8, [x0]
0000000000040e5c	stlxr	w9, w20, [x0]
0000000000040e60	cbnz	w9, 0x40e58
0000000000040e64	cbnz	w20, 0x40e84
0000000000040e68	cmp	w8, #0x1
0000000000040e6c	b.ne	0x40e84
0000000000040e70	adr	x8, #0x419d3
0000000000040e74	nop
0000000000040e78	ldarb	w8, [x8]
0000000000040e7c	tbz	w8, #0x0, 0x40e84
0000000000040e80	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000040e84	mov	x0, x19
0000000000040e88	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
__ZZN12_GLOBAL__N_131terminateWithUnhandledExceptionEP9ObjHeaderENK3$_1clEv:
0000000000040e8c	stp	x20, x19, [sp, #-0x20]!
0000000000040e90	stp	x29, x30, [sp, #0x10]
0000000000040e94	add	x29, sp, #0x10
0000000000040e98	mov	x19, x0
0000000000040e9c	ldr	x0, [x0]
0000000000040ea0	bl	_ReportUnhandledException
0000000000040ea4	ldr	x0, [x19]
0000000000040ea8	bl	__Z28ReportBacktraceToIosCrashLogP9ObjHeader
0000000000040eac	bl	__ZN5konan5abortEv
__Z28ReportBacktraceToIosCrashLogP9ObjHeader:
0000000000040eb0	sub	sp, sp, #0xb0
0000000000040eb4	stp	x28, x27, [sp, #0x50]
0000000000040eb8	stp	x26, x25, [sp, #0x60]
0000000000040ebc	stp	x24, x23, [sp, #0x70]
0000000000040ec0	stp	x22, x21, [sp, #0x80]
0000000000040ec4	stp	x20, x19, [sp, #0x90]
0000000000040ec8	stp	x29, x30, [sp, #0xa0]
0000000000040ecc	add	x29, sp, #0xa0
0000000000040ed0	mov	x19, x0
0000000000040ed4	nop
0000000000040ed8	ldr	x0, #0x13128 ; literal pool symbol address: _CFRunLoopRun
0000000000040edc	add	x1, sp, #0x18
0000000000040ee0	bl	0x4db8c ; symbol stub for: _dladdr
0000000000040ee4	ldr	x24, [sp, #0x20]
0000000000040ee8	cmp	w0, #0x0
0000000000040eec	ccmp	x24, #0x0, #0x4, ne
0000000000040ef0	b.eq	0x410f0
0000000000040ef4	ldr	w8, [x24]
0000000000040ef8	mov	w9, #0xfacf
0000000000040efc	movk	w9, #0xfeed, lsl #16
0000000000040f00	cmp	w8, w9
0000000000040f04	b.ne	0x410f0
0000000000040f08	ldr	w25, [x24, #0x10]
0000000000040f0c	cbz	w25, 0x410f0
0000000000040f10	str	xzr, [sp, #0x10]
0000000000040f14	mov	w27, #0x0
0000000000040f18	add	x28, x24, #0x20
0000000000040f1c	adr	x20, #0x11c24 ; literal pool for: "__TEXT"
0000000000040f20	nop
0000000000040f24	adr	x21, #0x11c23 ; literal pool for: "__DATA"
0000000000040f28	nop
0000000000040f2c	adr	x22, #0x11c22 ; literal pool for: "__cf_except_bt"
0000000000040f30	nop
0000000000040f34	b	0x40f4c
0000000000040f38	ldr	w8, [x28, #0x4]
0000000000040f3c	add	x28, x8, x28
0000000000040f40	add	w27, w27, #0x1
0000000000040f44	cmp	w27, w25
0000000000040f48	b.eq	0x410f0
0000000000040f4c	ldr	w8, [x28]
0000000000040f50	cmp	w8, #0x19
0000000000040f54	b.ne	0x40f38
0000000000040f58	add	x23, x28, #0x8
0000000000040f5c	mov	x0, x23
0000000000040f60	mov	x1, x20
0000000000040f64	mov	w2, #0x10
0000000000040f68	bl	0x4de80 ; symbol stub for: _strncmp
0000000000040f6c	cbz	w0, 0x40f88
0000000000040f70	mov	x0, x23
0000000000040f74	mov	x1, x21
0000000000040f78	mov	w2, #0x10
0000000000040f7c	bl	0x4de80 ; symbol stub for: _strncmp
0000000000040f80	cbnz	w0, 0x40f38
0000000000040f84	b	0x40fa4
0000000000040f88	ldr	x8, [x28, #0x18]
0000000000040f8c	str	x8, [sp, #0x10]
0000000000040f90	mov	x0, x23
0000000000040f94	mov	x1, x21
0000000000040f98	mov	w2, #0x10
0000000000040f9c	bl	0x4de80 ; symbol stub for: _strncmp
0000000000040fa0	cbnz	w0, 0x40f38
0000000000040fa4	ldr	w26, [x28, #0x40]
0000000000040fa8	cbz	w26, 0x40f38
0000000000040fac	add	x23, x28, #0x48
0000000000040fb0	b	0x40fc0
0000000000040fb4	add	x23, x23, #0x50
0000000000040fb8	subs	x26, x26, #0x1
0000000000040fbc	b.eq	0x40f38
0000000000040fc0	mov	x0, x23
0000000000040fc4	mov	x1, x22
0000000000040fc8	mov	w2, #0x10
0000000000040fcc	bl	0x4de80 ; symbol stub for: _strncmp
0000000000040fd0	cbnz	w0, 0x40fb4
0000000000040fd4	add	x0, x23, #0x10
0000000000040fd8	mov	x1, x21
0000000000040fdc	mov	w2, #0x10
0000000000040fe0	bl	0x4de80 ; symbol stub for: _strncmp
0000000000040fe4	cbnz	w0, 0x40fb4
0000000000040fe8	ldp	x8, x22, [x23, #0x20]
0000000000040fec	ldr	x9, [sp, #0x10]
0000000000040ff0	sub	x9, x24, x9
0000000000040ff4	add	x20, x8, x9
0000000000040ff8	cmp	x22, #0x2
0000000000040ffc	ccmp	x20, #0x0, #0x4, hs
0000000000041000	b.eq	0x410f0
0000000000041004	str	xzr, [sp, #0x30]
0000000000041008	adrp	x21, 39 ; 0x68000
000000000004100c	add	x21, x21, #0xa00
0000000000041010	ldr	x23, [x21]
0000000000041014	mov	x0, x21
0000000000041018	blr	x23
000000000004101c	ldr	x8, [x0]
0000000000041020	ldr	x9, [x8, #0x110]
0000000000041024	mov	x10, #0x400000000
0000000000041028	stp	x9, x10, [sp, #0x20]
000000000004102c	add	x9, sp, #0x18
0000000000041030	stp	xzr, x9, [sp, #0x38]
0000000000041034	add	x9, sp, #0x38
0000000000041038	str	x9, [x8, #0x110]
000000000004103c	mov	x8, #0x300000000
0000000000041040	str	x8, [sp, #0x48]
0000000000041044	adr	x8, #0x417ff
0000000000041048	nop
000000000004104c	ldarb	w8, [x8]
0000000000041050	tbz	w8, #0x0, 0x41058
0000000000041054	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000041058	ldr	x24, [x19, #0x18]
000000000004105c	str	x24, [sp, #0x30]
0000000000041060	mov	x0, x21
0000000000041064	blr	x23
0000000000041068	ldr	x8, [x0]
000000000004106c	ldr	x9, [sp, #0x40]
0000000000041070	str	x9, [x8, #0x110]
0000000000041074	mov	w8, #0x28
0000000000041078	strb	w8, [x20], #0x1
000000000004107c	ldr	w8, [x24, #0x8]
0000000000041080	cbz	w8, 0x410d4
0000000000041084	mov	w25, #0x0
0000000000041088	add	x26, x24, #0x10
000000000004108c	sub	x19, x22, #0x1
0000000000041090	adr	x22, #0x11acd ; literal pool for: "0x%lx "
0000000000041094	nop
0000000000041098	ldr	x8, [x26, w25, sxtw #3]
000000000004109c	str	x8, [sp]
00000000000410a0	mov	x0, x20
00000000000410a4	mov	x1, x19
00000000000410a8	mov	x2, x22
00000000000410ac	bl	0x4de50 ; symbol stub for: _snprintf
00000000000410b0	tbnz	w0, #0x1f, 0x410d4
00000000000410b4	mov	w8, w0
00000000000410b8	subs	x19, x19, x8
00000000000410bc	b.ls	0x410d4
00000000000410c0	add	x20, x20, x8
00000000000410c4	add	w25, w25, #0x1
00000000000410c8	ldr	w8, [x24, #0x8]
00000000000410cc	cmp	w25, w8
00000000000410d0	b.lo	0x41098
00000000000410d4	mov	w8, #0x29
00000000000410d8	sturh	w8, [x20, #-0x1]
00000000000410dc	mov	x0, x21
00000000000410e0	blr	x23
00000000000410e4	ldr	x8, [x0]
00000000000410e8	ldr	x9, [sp, #0x20]
00000000000410ec	str	x9, [x8, #0x110]
00000000000410f0	ldp	x29, x30, [sp, #0xa0]
00000000000410f4	ldp	x20, x19, [sp, #0x90]
00000000000410f8	ldp	x22, x21, [sp, #0x80]
00000000000410fc	ldp	x24, x23, [sp, #0x70]
0000000000041100	ldp	x26, x25, [sp, #0x60]
0000000000041104	ldp	x28, x27, [sp, #0x50]
0000000000041108	add	sp, sp, #0xb0
000000000004110c	ret
_Kotlin_ObjCExport_refToObjC:
0000000000041110	stp	x29, x30, [sp, #-0x10]!
0000000000041114	mov	x29, sp
0000000000041118	cbz	x0, 0x41178
000000000004111c	ldar	x8, [x0]
0000000000041120	and	x8, x8, #0xfffffffffffffffc
0000000000041124	ldr	x9, [x8]
0000000000041128	cmp	x8, #0x0
000000000004112c	ccmp	x9, x8, #0x4, ne
0000000000041130	b.eq	0x41150
0000000000041134	add	x8, x8, #0x10
0000000000041138	ldar	x8, [x8]
000000000004113c	cbz	x8, 0x41150
0000000000041140	mov	x0, x8
0000000000041144	bl	0x4dce8 ; symbol stub for: _objc_retain
0000000000041148	ldp	x29, x30, [sp], #0x10
000000000004114c	b	0x4dc58 ; symbol stub for: _objc_autorelease
0000000000041150	ldr	x8, [x0]
0000000000041154	and	x8, x8, #0xfffffffffffffffc
0000000000041158	ldr	x8, [x8]
000000000004115c	ldr	x8, [x8, #0x60]
0000000000041160	ldr	x8, [x8]
0000000000041164	cbz	x8, 0x41174
0000000000041168	blr	x8
000000000004116c	ldp	x29, x30, [sp], #0x10
0000000000041170	b	0x4dc58 ; symbol stub for: _objc_autorelease
0000000000041174	bl	__ZL44Kotlin_ObjCExport_refToRetainedObjC_slowpathP9ObjHeader
0000000000041178	ldp	x29, x30, [sp], #0x10
000000000004117c	b	0x4dc58 ; symbol stub for: _objc_autorelease
__ZL44Kotlin_ObjCExport_refToRetainedObjC_slowpathP9ObjHeader:
0000000000041180	sub	sp, sp, #0x70
0000000000041184	stp	x28, x27, [sp, #0x10]
0000000000041188	stp	x26, x25, [sp, #0x20]
000000000004118c	stp	x24, x23, [sp, #0x30]
0000000000041190	stp	x22, x21, [sp, #0x40]
0000000000041194	stp	x20, x19, [sp, #0x50]
0000000000041198	stp	x29, x30, [sp, #0x60]
000000000004119c	add	x29, sp, #0x60
00000000000411a0	mov	x19, x0
00000000000411a4	ldr	x8, [x0]
00000000000411a8	and	x8, x8, #0xfffffffffffffffc
00000000000411ac	ldr	x20, [x8]
00000000000411b0	ldr	w8, [x20, #0x38]
00000000000411b4	cmp	w8, #0x1
00000000000411b8	b.lt	0x41320
00000000000411bc	mov	x26, #0x0
00000000000411c0	mov	x28, #0x0
00000000000411c4	nop
00000000000411c8	ldr	x9, #0x12e40 ; literal pool symbol address: _NSGenericException
00000000000411cc	ldr	x21, [x9]
00000000000411d0	nop
00000000000411d4	ldr	x22, #0x2542c ; Objc selector ref: raise:format:
00000000000411d8	adr	x23, #0x22878 ; Objc cfstring ref: @"bad cfstring ref"
00000000000411dc	nop
00000000000411e0	b	0x411f4
00000000000411e4	mov	x28, x27
00000000000411e8	add	x26, x26, #0x1
00000000000411ec	cmp	x26, w8, sxtw
00000000000411f0	b.ge	0x41310
00000000000411f4	ldr	x9, [x20, #0x30]
00000000000411f8	ldr	x27, [x9, x26, lsl #3]
00000000000411fc	ldrb	w9, [x27, #0x58]
0000000000041200	tbnz	w9, #0x5, 0x41320
0000000000041204	ldr	x9, [x27, #0x60]
0000000000041208	ldr	x9, [x9]
000000000004120c	cbz	x9, 0x411e8
0000000000041210	cbz	x28, 0x411e4
0000000000041214	ldrsw	x9, [x27, #0x38]
0000000000041218	cmp	w9, #0x1
000000000004121c	b.lt	0x4123c
0000000000041220	ldr	x10, [x27, #0x30]
0000000000041224	ldr	x11, [x10]
0000000000041228	cmp	x11, x28
000000000004122c	b.eq	0x411e4
0000000000041230	add	x10, x10, #0x8
0000000000041234	subs	x9, x9, #0x1
0000000000041238	b.ne	0x41224
000000000004123c	ldrsw	x9, [x28, #0x38]
0000000000041240	cmp	w9, #0x1
0000000000041244	b.lt	0x41264
0000000000041248	ldr	x10, [x28, #0x30]
000000000004124c	ldr	x11, [x10]
0000000000041250	cmp	x11, x27
0000000000041254	b.eq	0x411e8
0000000000041258	add	x10, x10, #0x8
000000000004125c	subs	x9, x9, #0x1
0000000000041260	b.ne	0x4124c
0000000000041264	nop
0000000000041268	ldr	x24, #0x25498 ; Objc class ref: _OBJC_CLASS_$_NSException
000000000004126c	ldr	x0, [x28, #0x50]
0000000000041270	cbz	x0, 0x412e0
0000000000041274	ldar	x8, [x0]
0000000000041278	and	x8, x8, #0xfffffffffffffffc
000000000004127c	ldr	x9, [x8]
0000000000041280	cmp	x8, #0x0
0000000000041284	ccmp	x9, x8, #0x4, ne
0000000000041288	b.eq	0x41298
000000000004128c	add	x8, x8, #0x10
0000000000041290	ldar	x25, [x8]
0000000000041294	cbnz	x25, 0x412a4
0000000000041298	bl	_Kotlin_ObjCExport_CreateRetainedNSStringFromKString
000000000004129c	bl	0x4dc58 ; symbol stub for: _objc_autorelease
00000000000412a0	mov	x25, x0
00000000000412a4	ldr	x0, [x27, #0x50]
00000000000412a8	cbz	x0, 0x412ec
00000000000412ac	ldar	x8, [x0]
00000000000412b0	and	x8, x8, #0xfffffffffffffffc
00000000000412b4	ldr	x9, [x8]
00000000000412b8	cmp	x8, #0x0
00000000000412bc	ccmp	x9, x8, #0x4, ne
00000000000412c0	b.eq	0x412d0
00000000000412c4	add	x8, x8, #0x10
00000000000412c8	ldar	x8, [x8]
00000000000412cc	cbnz	x8, 0x412f0
00000000000412d0	bl	_Kotlin_ObjCExport_CreateRetainedNSStringFromKString
00000000000412d4	bl	0x4dc58 ; symbol stub for: _objc_autorelease
00000000000412d8	mov	x8, x0
00000000000412dc	b	0x412f0
00000000000412e0	mov	x25, #0x0
00000000000412e4	ldr	x0, [x27, #0x50]
00000000000412e8	cbnz	x0, 0x412ac
00000000000412ec	mov	x8, #0x0
00000000000412f0	stp	x25, x8, [sp]
00000000000412f4	mov	x0, x24
00000000000412f8	mov	x1, x22
00000000000412fc	mov	x2, x21
0000000000041300	mov	x3, x23
0000000000041304	bl	0x4dcb8 ; Objc message: +[NSException raise:format:]
0000000000041308	ldr	w8, [x20, #0x38]
000000000004130c	b	0x411e8
0000000000041310	cbz	x28, 0x41320
0000000000041314	ldr	x8, [x28, #0x60]
0000000000041318	ldr	x1, [x8]
000000000004131c	cbnz	x1, 0x41348
0000000000041320	mov	x0, x20
0000000000041324	bl	__ZL16getOrCreateClassPK8TypeInfo
0000000000041328	adr	x8, #0x14608
000000000004132c	nop
0000000000041330	adr	x9, #0x6fc
0000000000041334	nop
0000000000041338	adr	x10, #0x670
000000000004133c	nop
0000000000041340	cmp	x20, x8
0000000000041344	csel	x1, x10, x9, eq
0000000000041348	ldr	x8, [x20, #0x60]
000000000004134c	str	x1, [x8]
0000000000041350	mov	x0, x19
0000000000041354	ldp	x29, x30, [sp, #0x60]
0000000000041358	ldp	x20, x19, [sp, #0x50]
000000000004135c	ldp	x22, x21, [sp, #0x40]
0000000000041360	ldp	x24, x23, [sp, #0x30]
0000000000041364	ldp	x26, x25, [sp, #0x20]
0000000000041368	ldp	x28, x27, [sp, #0x10]
000000000004136c	add	sp, sp, #0x70
0000000000041370	br	x1
__ZL16getOrCreateClassPK8TypeInfo:
0000000000041374	sub	sp, sp, #0xc0
0000000000041378	stp	x28, x27, [sp, #0x60]
000000000004137c	stp	x26, x25, [sp, #0x70]
0000000000041380	stp	x24, x23, [sp, #0x80]
0000000000041384	stp	x22, x21, [sp, #0x90]
0000000000041388	stp	x20, x19, [sp, #0xa0]
000000000004138c	stp	x29, x30, [sp, #0xb0]
0000000000041390	add	x29, sp, #0xb0
0000000000041394	ldr	x8, [x0, #0x60]
0000000000041398	ldr	x21, [x8, #0x8]
000000000004139c	cbnz	x21, 0x41840
00000000000413a0	mov	x20, x0
00000000000413a4	ldr	x8, [x8, #0x10]
00000000000413a8	cbz	x8, 0x413c4
00000000000413ac	ldr	x0, [x8, #0x28]
00000000000413b0	bl	0x4dc94 ; symbol stub for: _objc_getClass
00000000000413b4	mov	x21, x0
00000000000413b8	ldr	x8, [x20, #0x60]
00000000000413bc	str	x0, [x8, #0x8]
00000000000413c0	b	0x41840
00000000000413c4	ldr	x0, [x20, #0x18]
00000000000413c8	bl	__ZL16getOrCreateClassPK8TypeInfo
00000000000413cc	mov	x23, x0
00000000000413d0	adr	x19, #0x4147c
00000000000413d4	nop
00000000000413d8	mov	x0, x19
00000000000413dc	bl	__ZN6kotlin8SpinLockILNS_24MutexThreadStateHandlingE1EE4lockEv
00000000000413e0	ldr	x8, [x20, #0x60]
00000000000413e4	ldr	x21, [x8, #0x8]
00000000000413e8	cbnz	x21, 0x4183c
00000000000413ec	adrp	x0, 39 ; 0x68000
00000000000413f0	add	x0, x0, #0xa00
00000000000413f4	ldr	x26, [x0]
00000000000413f8	blr	x26
00000000000413fc	ldr	x8, [x0]
0000000000041400	cbz	x8, 0x41420
0000000000041404	str	x8, [sp, #0x8]
0000000000041408	add	x8, x8, #0x138
000000000004140c	mov	w9, #0x1
0000000000041410	ldaxr	w24, [x8]
0000000000041414	stlxr	w10, w9, [x8]
0000000000041418	cbnz	w10, 0x41410
000000000004141c	b	0x41428
0000000000041420	str	xzr, [sp, #0x8]
0000000000041424	mov	w24, #0x1
0000000000041428	adrp	x8, 65 ; 0x82000
000000000004142c	ldr	w21, [x8, #0x864]
0000000000041430	add	w9, w21, #0x1
0000000000041434	str	w9, [x8, #0x864]
0000000000041438	mov	w8, #0x3
000000000004143c	strb	w8, [sp, #0x57]
0000000000041440	mov	w8, #0x5246
0000000000041444	movk	w8, #0x4b, lsl #16
0000000000041448	str	w8, [sp, #0x40]
000000000004144c	adr	x1, #0x11718 ; literal pool for: "_kobjcc"
0000000000041450	nop
0000000000041454	add	x0, sp, #0x40
0000000000041458	mov	w2, #0x7
000000000004145c	bl	__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN6kotlin11std_support9allocatorIcEEE6appendEPKcm
0000000000041460	add	x19, sp, #0x10
0000000000041464	add	x8, sp, #0x10
0000000000041468	mov	x0, x21
000000000004146c	bl	0x4da0c ; symbol stub for: __ZNSt3__19to_stringEi
0000000000041470	ldrb	w8, [sp, #0x27]
0000000000041474	sxtb	w9, w8
0000000000041478	ldp	x10, x11, [sp, #0x10]
000000000004147c	cmp	w9, #0x0
0000000000041480	csel	x1, x10, x19, lt
0000000000041484	csel	x2, x11, x8, lt
0000000000041488	add	x0, sp, #0x40
000000000004148c	bl	__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN6kotlin11std_support9allocatorIcEEE6appendEPKcm
0000000000041490	ldrsb	w8, [sp, #0x27]
0000000000041494	tbz	w8, #0x1f, 0x414a0
0000000000041498	ldr	x0, [sp, #0x10]
000000000004149c	bl	0x4da54 ; symbol stub for: __ZdlPv
00000000000414a0	ldrsb	w8, [sp, #0x57]
00000000000414a4	ldr	x9, [sp, #0x40]
00000000000414a8	cmp	w8, #0x0
00000000000414ac	add	x8, sp, #0x40
00000000000414b0	csel	x1, x9, x8, lt
00000000000414b4	mov	x0, x23
00000000000414b8	mov	x2, #0x0
00000000000414bc	bl	0x4dc4c ; symbol stub for: _objc_allocateClassPair
00000000000414c0	mov	x21, x0
00000000000414c4	cbz	x0, 0x41864
00000000000414c8	ldr	x22, [x20, #0x18]
00000000000414cc	ldr	x8, [x22, #0x60]
00000000000414d0	ldr	x23, [x8, #0x10]
00000000000414d4	str	x26, [sp]
00000000000414d8	cbz	x23, 0x41544
00000000000414dc	cbz	x23, 0x41528
00000000000414e0	ldr	w8, [x23, #0x58]
00000000000414e4	cmp	w8, #0x1
00000000000414e8	b.lt	0x41528
00000000000414ec	mov	x27, #0x0
00000000000414f0	mov	x19, #0x0
00000000000414f4	ldr	x25, [x23, #0x50]
00000000000414f8	ldr	x0, [x25, x27]
00000000000414fc	bl	0x4de38 ; symbol stub for: _sel_registerName
0000000000041500	mov	x1, x0
0000000000041504	add	x8, x25, x27
0000000000041508	ldp	x3, x2, [x8, #0x8]
000000000004150c	mov	x0, x21
0000000000041510	bl	0x4db2c ; symbol stub for: _class_addMethod
0000000000041514	add	x19, x19, #0x1
0000000000041518	ldrsw	x8, [x23, #0x58]
000000000004151c	add	x27, x27, #0x18
0000000000041520	cmp	x19, x8
0000000000041524	b.lt	0x414f4
0000000000041528	ldr	x22, [x22, #0x18]
000000000004152c	cbz	x22, 0x41540
0000000000041530	ldr	x8, [x22, #0x60]
0000000000041534	ldr	x23, [x8, #0x10]
0000000000041538	cbnz	x23, 0x414e0
000000000004153c	b	0x41528
0000000000041540	ldr	x22, [x20, #0x18]
0000000000041544	ldr	x23, [x22, #0x30]
0000000000041548	ldrsw	x8, [x22, #0x38]
000000000004154c	movi.16b	v0, #0x0
0000000000041550	stp	q0, q0, [sp, #0x10]
0000000000041554	mov	w9, #0x3f800000
0000000000041558	str	w9, [sp, #0x30]
000000000004155c	cbz	w8, 0x41580
0000000000041560	lsl	x19, x8, #3
0000000000041564	ldr	x1, [x23]
0000000000041568	add	x0, sp, #0x10
000000000004156c	mov	x2, x23
0000000000041570	bl	__ZNSt3__112__hash_tableIPK8TypeInfoNS_4hashIS3_EENS_8equal_toIS3_EEN6kotlin11std_support9allocatorIS3_EEE25__emplace_unique_key_argsIS3_JRKS3_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEEbEERKT_DpOT0_
0000000000041574	add	x23, x23, #0x8
0000000000041578	subs	x19, x19, #0x8
000000000004157c	b.ne	0x41564
0000000000041580	ldr	w8, [x20, #0x38]
0000000000041584	cmp	w8, #0x1
0000000000041588	b.lt	0x4170c
000000000004158c	mov	x27, #0x0
0000000000041590	mov	x28, #0x2d69
0000000000041594	movk	x28, #0xeb38, lsl #16
0000000000041598	movk	x28, #0xea08, lsl #32
000000000004159c	movk	x28, #0x9ddf, lsl #48
00000000000415a0	b	0x415b4
00000000000415a4	add	x27, x27, #0x1
00000000000415a8	ldrsw	x8, [x20, #0x38]
00000000000415ac	cmp	x27, x8
00000000000415b0	b.ge	0x4170c
00000000000415b4	ldr	x8, [x20, #0x30]
00000000000415b8	ldr	x23, [x8, x27, lsl #3]
00000000000415bc	ldr	x8, [x23, #0x60]
00000000000415c0	ldr	x22, [x8, #0x10]
00000000000415c4	cbz	x22, 0x415a4
00000000000415c8	ldr	w8, [x22, #0x58]
00000000000415cc	cmp	w8, #0x1
00000000000415d0	b.lt	0x41610
00000000000415d4	mov	x19, #0x0
00000000000415d8	mov	x25, #0x0
00000000000415dc	ldr	x26, [x22, #0x50]
00000000000415e0	ldr	x0, [x26, x19]
00000000000415e4	bl	0x4de38 ; symbol stub for: _sel_registerName
00000000000415e8	mov	x1, x0
00000000000415ec	add	x8, x26, x19
00000000000415f0	ldp	x3, x2, [x8, #0x8]
00000000000415f4	mov	x0, x21
00000000000415f8	bl	0x4db2c ; symbol stub for: _class_addMethod
00000000000415fc	add	x25, x25, #0x1
0000000000041600	ldrsw	x8, [x22, #0x58]
0000000000041604	add	x19, x19, #0x18
0000000000041608	cmp	x25, x8
000000000004160c	b.lt	0x415dc
0000000000041610	ldr	x8, [sp, #0x18]
0000000000041614	cbz	x8, 0x416dc
0000000000041618	lsr	x9, x23, #32
000000000004161c	lsl	w10, w23, #3
0000000000041620	add	x10, x10, #0x8
0000000000041624	eor	x10, x10, x9
0000000000041628	mul	x10, x10, x28
000000000004162c	eor	x9, x10, x9
0000000000041630	eor	x9, x9, x10, lsr #47
0000000000041634	mul	x9, x9, x28
0000000000041638	eor	x9, x9, x9, lsr #47
000000000004163c	mul	x9, x9, x28
0000000000041640	fmov	d0, x8
0000000000041644	cnt.8b	v0, v0
0000000000041648	uaddlv.8b	h0, v0
000000000004164c	fmov	w10, s0
0000000000041650	cmp	x10, #0x1
0000000000041654	b.hi	0x41664
0000000000041658	sub	x11, x8, #0x1
000000000004165c	and	x11, x11, x9
0000000000041660	b	0x41678
0000000000041664	mov	x11, x9
0000000000041668	cmp	x9, x8
000000000004166c	b.lo	0x41678
0000000000041670	udiv	x11, x9, x8
0000000000041674	msub	x11, x11, x8, x9
0000000000041678	ldr	x12, [sp, #0x10]
000000000004167c	ldr	x12, [x12, x11, lsl #3]
0000000000041680	cbz	x12, 0x416dc
0000000000041684	ldr	x12, [x12]
0000000000041688	cbz	x12, 0x416dc
000000000004168c	sub	x13, x8, #0x1
0000000000041690	b	0x416a8
0000000000041694	ldr	x14, [x12, #0x10]
0000000000041698	cmp	x14, x23
000000000004169c	b.eq	0x415a4
00000000000416a0	ldr	x12, [x12]
00000000000416a4	cbz	x12, 0x416dc
00000000000416a8	ldr	x14, [x12, #0x8]
00000000000416ac	cmp	x14, x9
00000000000416b0	b.eq	0x41694
00000000000416b4	cmp	x10, #0x1
00000000000416b8	b.hi	0x416c4
00000000000416bc	and	x14, x14, x13
00000000000416c0	b	0x416d4
00000000000416c4	cmp	x14, x8
00000000000416c8	b.lo	0x416d4
00000000000416cc	udiv	x15, x14, x8
00000000000416d0	msub	x14, x15, x8, x14
00000000000416d4	cmp	x14, x11
00000000000416d8	b.eq	0x416a0
00000000000416dc	ldr	x0, [x22, #0x28]
00000000000416e0	bl	0x4dca0 ; symbol stub for: _objc_getProtocol
00000000000416e4	mov	x23, x0
00000000000416e8	cbz	x0, 0x415a4
00000000000416ec	mov	x0, x21
00000000000416f0	mov	x1, x23
00000000000416f4	bl	0x4db38 ; symbol stub for: _class_addProtocol
00000000000416f8	mov	x0, x21
00000000000416fc	bl	0x4dd24 ; symbol stub for: _object_getClass
0000000000041700	mov	x1, x23
0000000000041704	bl	0x4db38 ; symbol stub for: _class_addProtocol
0000000000041708	b	0x415a4
000000000004170c	mov	x0, x21
0000000000041710	bl	0x4dcd0 ; symbol stub for: _objc_registerClassPair
0000000000041714	str	x20, [sp, #0x58]
0000000000041718	adrp	x0, 39 ; 0x68000
000000000004171c	add	x0, x0, #0xa00
0000000000041720	ldr	x8, [sp]
0000000000041724	blr	x8
0000000000041728	ldr	x23, [x0]
000000000004172c	cbz	x23, 0x41748
0000000000041730	add	x8, x23, #0x138
0000000000041734	mov	w9, #0x1
0000000000041738	ldaxr	w22, [x8]
000000000004173c	stlxr	w10, w9, [x8]
0000000000041740	cbnz	w10, 0x41738
0000000000041744	b	0x4174c
0000000000041748	mov	w22, #0x1
000000000004174c	nop
0000000000041750	ldr	x0, #0x24fb8 ; Objc class ref: _OBJC_CLASS_$_NSValue
0000000000041754	bl	0x4dc40 ; symbol stub for: _objc_alloc
0000000000041758	nop
000000000004175c	ldr	x1, #0x24d84 ; Objc selector ref: initWithBytes:objCType:
0000000000041760	adr	x3, #0x112be ; literal pool for: "^v"
0000000000041764	nop
0000000000041768	add	x2, sp, #0x58
000000000004176c	bl	0x4dcb8 ; Objc message: +[NSValue initWithBytes:objCType:]
0000000000041770	mov	x2, x0
0000000000041774	adr	x1, #0x410d6
0000000000041778	nop
000000000004177c	mov	x0, x21
0000000000041780	mov	x3, #0x0
0000000000041784	bl	0x4dd0c ; symbol stub for: _objc_setAssociatedObject
0000000000041788	cbz	x23, 0x417bc
000000000004178c	add	x0, x23, #0x138
0000000000041790	ldaxr	w8, [x0]
0000000000041794	stlxr	w9, w22, [x0]
0000000000041798	cbnz	w9, 0x41790
000000000004179c	cbnz	w22, 0x417bc
00000000000417a0	cmp	w8, #0x1
00000000000417a4	b.ne	0x417bc
00000000000417a8	adr	x8, #0x4109b
00000000000417ac	nop
00000000000417b0	ldarb	w8, [x8]
00000000000417b4	tbz	w8, #0x0, 0x417bc
00000000000417b8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000417bc	ldr	x0, [sp, #0x20]
00000000000417c0	cbz	x0, 0x417d4
00000000000417c4	ldr	x19, [x0]
00000000000417c8	bl	0x4dba4 ; symbol stub for: _free
00000000000417cc	mov	x0, x19
00000000000417d0	cbnz	x19, 0x417c4
00000000000417d4	ldr	x0, [sp, #0x10]
00000000000417d8	str	xzr, [sp, #0x10]
00000000000417dc	cbz	x0, 0x417e4
00000000000417e0	bl	0x4dba4 ; symbol stub for: _free
00000000000417e4	ldrsb	w8, [sp, #0x57]
00000000000417e8	tbz	w8, #0x1f, 0x417f4
00000000000417ec	ldr	x0, [sp, #0x40]
00000000000417f0	bl	0x4dba4 ; symbol stub for: _free
00000000000417f4	ldr	x8, [sp, #0x8]
00000000000417f8	cbz	x8, 0x4182c
00000000000417fc	add	x0, x8, #0x138
0000000000041800	ldaxr	w8, [x0]
0000000000041804	stlxr	w9, w24, [x0]
0000000000041808	cbnz	w9, 0x41800
000000000004180c	cbnz	w24, 0x4182c
0000000000041810	cmp	w8, #0x1
0000000000041814	b.ne	0x4182c
0000000000041818	adr	x8, #0x4102b
000000000004181c	nop
0000000000041820	ldarb	w8, [x8]
0000000000041824	tbz	w8, #0x0, 0x4182c
0000000000041828	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004182c	ldr	x8, [x20, #0x60]
0000000000041830	str	x21, [x8, #0x8]
0000000000041834	adr	x19, #0x41018
0000000000041838	nop
000000000004183c	stlrb	wzr, [x19]
0000000000041840	mov	x0, x21
0000000000041844	ldp	x29, x30, [sp, #0xb0]
0000000000041848	ldp	x20, x19, [sp, #0xa0]
000000000004184c	ldp	x22, x21, [sp, #0x90]
0000000000041850	ldp	x24, x23, [sp, #0x80]
0000000000041854	ldp	x26, x25, [sp, #0x70]
0000000000041858	ldp	x28, x27, [sp, #0x60]
000000000004185c	add	sp, sp, #0xc0
0000000000041860	ret
0000000000041864	adr	x2, #0x11183 ; literal pool for: ""
0000000000041868	nop
000000000004186c	mov	w0, #0x0
0000000000041870	bl	__ZN6kotlin8internal24RuntimeAssertFailedPanicEbPKcS2_z
0000000000041874	brk	#0x1
0000000000041878	b	0x41900
000000000004187c	mov	x20, x0
0000000000041880	ldrsb	w8, [sp, #0x27]
0000000000041884	tbz	w8, #0x1f, 0x41934
0000000000041888	ldr	x0, [sp, #0x10]
000000000004188c	bl	0x4da54 ; symbol stub for: __ZdlPv
0000000000041890	b	0x41934
0000000000041894	b	0x41930
0000000000041898	b	0x41930
000000000004189c	b	0x41930
00000000000418a0	mov	x20, x0
00000000000418a4	cbz	x23, 0x41904
00000000000418a8	add	x0, x23, #0x138
00000000000418ac	ldaxr	w8, [x0]
00000000000418b0	stlxr	w9, w22, [x0]
00000000000418b4	cbnz	w9, 0x418ac
00000000000418b8	cbnz	w22, 0x41904
00000000000418bc	cmp	w8, #0x1
00000000000418c0	b.ne	0x41904
00000000000418c4	adr	x8, #0x40f7f
00000000000418c8	nop
00000000000418cc	ldarb	w8, [x8]
00000000000418d0	tbz	w8, #0x0, 0x41904
00000000000418d4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000418d8	b	0x41904
00000000000418dc	mov	x20, x0
00000000000418e0	ldr	x0, [sp, #0x20]
00000000000418e4	cbz	x0, 0x4191c
00000000000418e8	ldr	x19, [x0]
00000000000418ec	bl	0x4dba4 ; symbol stub for: _free
00000000000418f0	mov	x0, x19
00000000000418f4	cbnz	x19, 0x418e8
00000000000418f8	b	0x4191c
00000000000418fc	b	0x41900
0000000000041900	mov	x20, x0
0000000000041904	ldr	x0, [sp, #0x20]
0000000000041908	cbz	x0, 0x4191c
000000000004190c	ldr	x19, [x0]
0000000000041910	bl	0x4dba4 ; symbol stub for: _free
0000000000041914	mov	x0, x19
0000000000041918	cbnz	x19, 0x4190c
000000000004191c	ldr	x0, [sp, #0x10]
0000000000041920	str	xzr, [sp, #0x10]
0000000000041924	cbz	x0, 0x41934
0000000000041928	bl	0x4dba4 ; symbol stub for: _free
000000000004192c	b	0x41934
0000000000041930	mov	x20, x0
0000000000041934	ldrsb	w8, [sp, #0x57]
0000000000041938	tbz	w8, #0x1f, 0x41944
000000000004193c	ldr	x0, [sp, #0x40]
0000000000041940	bl	0x4dba4 ; symbol stub for: _free
0000000000041944	ldr	x8, [sp, #0x8]
0000000000041948	cbnz	x8, 0x41960
000000000004194c	adr	x8, #0x40f00
0000000000041950	nop
0000000000041954	stlrb	wzr, [x8]
0000000000041958	mov	x0, x20
000000000004195c	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
0000000000041960	ldr	x8, [sp, #0x8]
0000000000041964	add	x0, x8, #0x138
0000000000041968	ldaxr	w8, [x0]
000000000004196c	stlxr	w9, w24, [x0]
0000000000041970	cbnz	w9, 0x41968
0000000000041974	cbnz	w24, 0x4194c
0000000000041978	cmp	w8, #0x1
000000000004197c	b.ne	0x4194c
0000000000041980	adr	x8, #0x40ec3
0000000000041984	nop
0000000000041988	ldarb	w8, [x8]
000000000004198c	tbz	w8, #0x0, 0x4194c
0000000000041990	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000041994	adr	x8, #0x40eb8
0000000000041998	nop
000000000004199c	stlrb	wzr, [x8]
00000000000419a0	mov	x0, x20
00000000000419a4	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
_Kotlin_ObjCExport_convertUnitToRetained:
00000000000419a8	sub	sp, sp, #0x40
00000000000419ac	stp	x29, x30, [sp, #0x30]
00000000000419b0	add	x29, sp, #0x30
00000000000419b4	nop
00000000000419b8	ldr	x8, #0x12658 ; literal pool symbol address: __NSConcreteGlobalBlock
00000000000419bc	str	x8, [sp, #0x8]
00000000000419c0	nop
00000000000419c4	ldr	d0, 0x4e560
00000000000419c8	str	d0, [sp, #0x10]
00000000000419cc	adr	x8, #0x84
00000000000419d0	nop
00000000000419d4	adr	x9, #0x21f5c
00000000000419d8	nop
00000000000419dc	stp	x8, x9, [sp, #0x18]
00000000000419e0	str	x0, [sp, #0x28]
00000000000419e4	nop
00000000000419e8	ldr	x8, #0x410f0
00000000000419ec	cmn	x8, #0x1
00000000000419f0	b.ne	0x41a08
00000000000419f4	nop
00000000000419f8	ldr	x0, #0x410e8
00000000000419fc	ldp	x29, x30, [sp, #0x30]
0000000000041a00	add	sp, sp, #0x40
0000000000041a04	b	0x4dce8 ; symbol stub for: _objc_retain
0000000000041a08	adr	x0, #0x410d0
0000000000041a0c	nop
0000000000041a10	add	x1, sp, #0x8
0000000000041a14	bl	0x4db80 ; symbol stub for: _dispatch_once
0000000000041a18	nop
0000000000041a1c	ldr	x0, #0x410c4
0000000000041a20	ldp	x29, x30, [sp, #0x30]
0000000000041a24	add	sp, sp, #0x40
0000000000041a28	b	0x4dce8 ; symbol stub for: _objc_retain
__ZL29convertKotlinObjectToRetainedP9ObjHeader:
0000000000041a2c	mov	x2, x0
0000000000041a30	ldr	x8, [x0]
0000000000041a34	and	x8, x8, #0xfffffffffffffffc
0000000000041a38	ldr	x8, [x8]
0000000000041a3c	ldr	x8, [x8, #0x60]
0000000000041a40	ldr	x0, [x8, #0x8]
0000000000041a44	nop
0000000000041a48	ldr	x1, #0x24a30 ; Objc selector ref: createRetainedWrapper:
0000000000041a4c	b	0x4dcb8 ; Objc message: -[x0 createRetainedWrapper:]
___Kotlin_ObjCExport_convertUnitToRetained_block_invoke:
0000000000041a50	stp	x20, x19, [sp, #-0x20]!
0000000000041a54	stp	x29, x30, [sp, #0x10]
0000000000041a58	add	x29, sp, #0x10
0000000000041a5c	mov	x19, x0
0000000000041a60	ldr	x8, [x0, #0x20]
0000000000041a64	ldr	x8, [x8]
0000000000041a68	and	x8, x8, #0xfffffffffffffffc
0000000000041a6c	ldr	x0, [x8]
0000000000041a70	bl	__ZL16getOrCreateClassPK8TypeInfo
0000000000041a74	ldr	x2, [x19, #0x20]
0000000000041a78	nop
0000000000041a7c	ldr	x1, #0x249fc ; Objc selector ref: createRetainedWrapper:
0000000000041a80	bl	0x4dcb8 ; Objc message: -[x0 createRetainedWrapper:]
0000000000041a84	adrp	x8, 65 ; 0x82000
0000000000041a88	str	x0, [x8, #0xae0]
0000000000041a8c	ldp	x29, x30, [sp, #0x10]
0000000000041a90	ldp	x20, x19, [sp], #0x20
0000000000041a94	ret
_Kotlin_ObjCExport_CreateRetainedNSStringFromKString:
0000000000041a98	stp	x22, x21, [sp, #-0x30]!
0000000000041a9c	stp	x20, x19, [sp, #0x10]
0000000000041aa0	stp	x29, x30, [sp, #0x20]
0000000000041aa4	add	x29, sp, #0x20
0000000000041aa8	mov	x20, x0
0000000000041aac	add	x19, x0, #0x10
0000000000041ab0	ldr	w8, [x0, #0x8]
0000000000041ab4	lsl	x21, x8, #1
0000000000041ab8	ldr	x22, [x0]
0000000000041abc	nop
0000000000041ac0	ldr	x0, #0x24c38 ; Objc class ref: _OBJC_CLASS_$_NSString
0000000000041ac4	bl	0x4dc40 ; symbol stub for: _objc_alloc
0000000000041ac8	tbnz	w22, #0x0, 0x41b30
0000000000041acc	nop
0000000000041ad0	ldr	x1, #0x24a08 ; Objc selector ref: initWithBytes:length:encoding:
0000000000041ad4	mov	x2, x19
0000000000041ad8	mov	x3, x21
0000000000041adc	mov	w4, #0x100
0000000000041ae0	movk	w4, #0x9400, lsl #16
0000000000041ae4	bl	0x4dcb8 ; Objc message: +[NSString initWithBytes:length:encoding:]
0000000000041ae8	mov	x19, x0
0000000000041aec	ldar	x8, [x20]
0000000000041af0	and	x8, x8, #0xfffffffffffffffc
0000000000041af4	ldr	x9, [x8]
0000000000041af8	cmp	x9, x8
0000000000041afc	csel	x0, xzr, x8, eq
0000000000041b00	cbnz	x0, 0x41b0c
0000000000041b04	mov	x0, x20
0000000000041b08	bl	__ZN6kotlin2mm15ExtraObjectData7InstallEP9ObjHeader
0000000000041b0c	add	x8, x0, #0x10
0000000000041b10	ldaxr	x20, [x8]
0000000000041b14	cbnz	x20, 0x41b5c
0000000000041b18	stlxr	w9, x19, [x8]
0000000000041b1c	cbnz	w9, 0x41b10
0000000000041b20	mov	w8, #0x1
0000000000041b24	mov	x0, x19
0000000000041b28	tbz	w8, #0x0, 0x41b6c
0000000000041b2c	b	0x41b74
0000000000041b30	nop
0000000000041b34	ldr	x1, #0x249b4 ; Objc selector ref: initWithBytesNoCopy:length:encoding:freeWhenDone:
0000000000041b38	mov	x2, x19
0000000000041b3c	mov	x3, x21
0000000000041b40	mov	w4, #0x100
0000000000041b44	movk	w4, #0x9400, lsl #16
0000000000041b48	mov	w5, #0x0
0000000000041b4c	ldp	x29, x30, [sp, #0x20]
0000000000041b50	ldp	x20, x19, [sp, #0x10]
0000000000041b54	ldp	x22, x21, [sp], #0x30
0000000000041b58	b	0x4dcb8 ; Objc message: -[x0 initWithBytesNoCopy:length:encoding:freeWhenDone:]
0000000000041b5c	mov	w8, #0x0
0000000000041b60	clrex
0000000000041b64	mov	x0, x19
0000000000041b68	tbnz	w8, #0x0, 0x41b74
0000000000041b6c	bl	0x4dcdc ; symbol stub for: _objc_release
0000000000041b70	mov	x0, x20
0000000000041b74	ldp	x29, x30, [sp, #0x20]
0000000000041b78	ldp	x20, x19, [sp, #0x10]
0000000000041b7c	ldp	x22, x21, [sp], #0x30
0000000000041b80	b	0x4dce8 ; symbol stub for: _objc_retain
_ThrowException:
0000000000041b84	stp	x29, x30, [sp, #-0x10]!
0000000000041b88	mov	x29, sp
0000000000041b8c	bl	__ZN18ExceptionObjHolder5ThrowEP9ObjHeader
__ZN6kotlin25ProcessUnhandledExceptionEP9ObjHeader:
0000000000041b90	stp	x22, x21, [sp, #-0x30]!
0000000000041b94	stp	x20, x19, [sp, #0x10]
0000000000041b98	stp	x29, x30, [sp, #0x20]
0000000000041b9c	add	x29, sp, #0x20
0000000000041ba0	mov	x20, x0
0000000000041ba4	adrp	x0, 39 ; 0x68000
0000000000041ba8	add	x0, x0, #0xa00
0000000000041bac	ldr	x8, [x0]
0000000000041bb0	blr	x8
0000000000041bb4	ldr	x22, [x0]
0000000000041bb8	add	x19, x22, #0x138
0000000000041bbc	ldaxr	w21, [x19]
0000000000041bc0	stlxr	w8, wzr, [x19]
0000000000041bc4	cbnz	w8, 0x41bbc
0000000000041bc8	cmp	w21, #0x1
0000000000041bcc	b.ne	0x41be8
0000000000041bd0	adr	x8, #0x40c73
0000000000041bd4	nop
0000000000041bd8	ldarb	w8, [x8]
0000000000041bdc	tbz	w8, #0x0, 0x41be8
0000000000041be0	mov	x0, x19
0000000000041be4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000041be8	mov	x0, x20
0000000000041bec	bl	__ZN12_GLOBAL__N_125processUnhandledExceptionEP9ObjHeader
0000000000041bf0	cbz	x22, 0x41c1c
0000000000041bf4	ldaxr	w8, [x19]
0000000000041bf8	stlxr	w9, w21, [x19]
0000000000041bfc	cbnz	w9, 0x41bf4
0000000000041c00	cbnz	w21, 0x41c1c
0000000000041c04	cmp	w8, #0x1
0000000000041c08	b.ne	0x41c1c
0000000000041c0c	adr	x8, #0x40c37
0000000000041c10	nop
0000000000041c14	ldarb	w8, [x8]
0000000000041c18	tbnz	w8, #0x0, 0x41c2c
0000000000041c1c	ldp	x29, x30, [sp, #0x20]
0000000000041c20	ldp	x20, x19, [sp, #0x10]
0000000000041c24	ldp	x22, x21, [sp], #0x30
0000000000041c28	ret
0000000000041c2c	mov	x0, x19
0000000000041c30	ldp	x29, x30, [sp, #0x20]
0000000000041c34	ldp	x20, x19, [sp, #0x10]
0000000000041c38	ldp	x22, x21, [sp], #0x30
0000000000041c3c	b	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
__ZN6kotlin31TerminateWithUnhandledExceptionEP9ObjHeader:
0000000000041c40	sub	sp, sp, #0x30
0000000000041c44	stp	x20, x19, [sp, #0x10]
0000000000041c48	stp	x29, x30, [sp, #0x20]
0000000000041c4c	add	x29, sp, #0x20
0000000000041c50	mov	x19, x0
0000000000041c54	adrp	x0, 39 ; 0x68000
0000000000041c58	add	x0, x0, #0xa00
0000000000041c5c	ldr	x8, [x0]
0000000000041c60	blr	x8
0000000000041c64	ldr	x8, [x0]
0000000000041c68	str	x8, [sp]
0000000000041c6c	mov	w9, #0x1
0000000000041c70	strb	w9, [sp, #0xc]
0000000000041c74	add	x0, x8, #0x138
0000000000041c78	ldaxr	w20, [x0]
0000000000041c7c	stlxr	w8, wzr, [x0]
0000000000041c80	cbnz	w8, 0x41c78
0000000000041c84	cmp	w20, #0x1
0000000000041c88	b.ne	0x41ca0
0000000000041c8c	adr	x8, #0x40bb7
0000000000041c90	nop
0000000000041c94	ldarb	w8, [x8]
0000000000041c98	tbz	w8, #0x0, 0x41ca0
0000000000041c9c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000041ca0	str	w20, [sp, #0x8]
0000000000041ca4	mov	x0, x19
0000000000041ca8	bl	__ZN12_GLOBAL__N_131terminateWithUnhandledExceptionEP9ObjHeader
0000000000041cac	brk	#0x1
0000000000041cb0	mov	x19, x0
0000000000041cb4	mov	x0, sp
0000000000041cb8	bl	__ZN6kotlin16ThreadStateGuardD1Ev
0000000000041cbc	mov	x0, x19
0000000000041cc0	bl	___clang_call_terminate
__ZN12_GLOBAL__N_121RunFinalizerHooksImplEP9ObjHeaderPK8TypeInfo:
0000000000041cc4	sub	sp, sp, #0xc0
0000000000041cc8	stp	x28, x27, [sp, #0x60]
0000000000041ccc	stp	x26, x25, [sp, #0x70]
0000000000041cd0	stp	x24, x23, [sp, #0x80]
0000000000041cd4	stp	x22, x21, [sp, #0x90]
0000000000041cd8	stp	x20, x19, [sp, #0xa0]
0000000000041cdc	stp	x29, x30, [sp, #0xb0]
0000000000041ce0	add	x29, sp, #0xb0
0000000000041ce4	adr	x8, #0x1425c
0000000000041ce8	nop
0000000000041cec	cmp	x1, x8
0000000000041cf0	b.eq	0x41d58
0000000000041cf4	adr	x8, #0x141bc
0000000000041cf8	nop
0000000000041cfc	cmp	x1, x8
0000000000041d00	b.ne	0x423d0
0000000000041d04	ldr	x19, [x0, #0x8]
0000000000041d08	cbz	x19, 0x423d0
0000000000041d0c	ldr	x8, [x19]
0000000000041d10	cbz	x8, 0x41d34
0000000000041d14	ldr	x1, [x19, #0x8]
0000000000041d18	adrp	x0, 39 ; 0x68000
0000000000041d1c	add	x0, x0, #0xa00
0000000000041d20	ldr	x8, [x0]
0000000000041d24	blr	x8
0000000000041d28	ldr	x8, [x0]
0000000000041d2c	add	x0, x8, #0x8
0000000000041d30	bl	__ZN6kotlin2mm17StableRefRegistry19UnregisterStableRefEPNS0_10ThreadDataEPNS_16MultiSourceQueueIP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS6_EEE4NodeE
0000000000041d34	mov	x0, x19
0000000000041d38	ldp	x29, x30, [sp, #0xb0]
0000000000041d3c	ldp	x20, x19, [sp, #0xa0]
0000000000041d40	ldp	x22, x21, [sp, #0x90]
0000000000041d44	ldp	x24, x23, [sp, #0x80]
0000000000041d48	ldp	x26, x25, [sp, #0x70]
0000000000041d4c	ldp	x28, x27, [sp, #0x60]
0000000000041d50	add	sp, sp, #0xc0
0000000000041d54	b	0x4dba4 ; symbol stub for: _free
0000000000041d58	adr	x8, #0x40b10
0000000000041d5c	nop
0000000000041d60	ldar	w20, [x8]
0000000000041d64	cmn	w20, #0x2
0000000000041d68	b.eq	0x423d0
0000000000041d6c	ldr	x27, [x0, #0x8]
0000000000041d70	bl	__ZN12_GLOBAL__N_18theStateEv
0000000000041d74	mov	x19, x0
0000000000041d78	sxtw	x23, w20
0000000000041d7c	str	x0, [sp, #0x30]
0000000000041d80	mov	w8, #0x1
0000000000041d84	strb	w8, [sp, #0x38]
0000000000041d88	str	xzr, [sp, #0x40]
0000000000041d8c	adrp	x20, 39 ; 0x68000
0000000000041d90	add	x20, x20, #0xa00
0000000000041d94	ldr	x22, [x20]
0000000000041d98	mov	x0, x20
0000000000041d9c	blr	x22
0000000000041da0	ldr	x25, [x0]
0000000000041da4	add	x21, x25, #0x138
0000000000041da8	ldaxr	w24, [x21]
0000000000041dac	stlxr	w9, w8, [x21]
0000000000041db0	cbnz	w9, 0x41da8
0000000000041db4	mov	x0, x19
0000000000041db8	bl	0x4ddcc ; symbol stub for: _pthread_mutex_lock
0000000000041dbc	cbz	x25, 0x41df0
0000000000041dc0	ldaxr	w8, [x21]
0000000000041dc4	stlxr	w9, w24, [x21]
0000000000041dc8	cbnz	w9, 0x41dc0
0000000000041dcc	cbnz	w24, 0x41df0
0000000000041dd0	cmp	w8, #0x1
0000000000041dd4	b.ne	0x41df0
0000000000041dd8	adr	x8, #0x40a6b
0000000000041ddc	nop
0000000000041de0	ldarb	w8, [x8]
0000000000041de4	tbz	w8, #0x0, 0x41df0
0000000000041de8	mov	x0, x21
0000000000041dec	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000041df0	ldr	x8, [x19, #0xa0]
0000000000041df4	cbz	x8, 0x423c8
0000000000041df8	fmov	d0, x8
0000000000041dfc	cnt.8b	v0, v0
0000000000041e00	uaddlv.8b	h0, v0
0000000000041e04	fmov	w9, s0
0000000000041e08	cmp	x9, #0x1
0000000000041e0c	b.hi	0x41e1c
0000000000041e10	sub	x10, x8, #0x1
0000000000041e14	and	x10, x10, x23
0000000000041e18	b	0x41e30
0000000000041e1c	mov	x10, x23
0000000000041e20	cmp	x8, x23
0000000000041e24	b.hi	0x41e30
0000000000041e28	udiv	x10, x23, x8
0000000000041e2c	msub	x10, x10, x8, x23
0000000000041e30	ldr	x11, [x19, #0x98]
0000000000041e34	ldr	x11, [x11, x10, lsl #3]
0000000000041e38	cbz	x11, 0x423c8
0000000000041e3c	ldr	x11, [x11]
0000000000041e40	cbz	x11, 0x423c8
0000000000041e44	sub	x12, x8, #0x1
0000000000041e48	b	0x41e60
0000000000041e4c	ldr	w13, [x11, #0x10]
0000000000041e50	cmp	w13, w23
0000000000041e54	b.eq	0x41e98
0000000000041e58	ldr	x11, [x11]
0000000000041e5c	cbz	x11, 0x423c8
0000000000041e60	ldr	x13, [x11, #0x8]
0000000000041e64	cmp	x13, x23
0000000000041e68	b.eq	0x41e4c
0000000000041e6c	cmp	x9, #0x1
0000000000041e70	b.hi	0x41e7c
0000000000041e74	and	x13, x13, x12
0000000000041e78	b	0x41e8c
0000000000041e7c	cmp	x13, x8
0000000000041e80	b.lo	0x41e8c
0000000000041e84	udiv	x14, x13, x8
0000000000041e88	msub	x13, x14, x8, x13
0000000000041e8c	cmp	x13, x10
0000000000041e90	b.eq	0x41e58
0000000000041e94	b	0x423c8
0000000000041e98	ldr	x28, [x11, #0x18]
0000000000041e9c	mov	x0, x20
0000000000041ea0	blr	x22
0000000000041ea4	ldr	x24, [x0]
0000000000041ea8	add	x19, x24, #0x138
0000000000041eac	mov	w8, #0x1
0000000000041eb0	ldaxr	w26, [x19]
0000000000041eb4	stlxr	w9, w8, [x19]
0000000000041eb8	cbnz	w9, 0x41eb0
0000000000041ebc	add	x8, x28, #0x58
0000000000041ec0	str	x8, [sp, #0x48]
0000000000041ec4	mov	w9, #0x1
0000000000041ec8	strb	w9, [sp, #0x50]
0000000000041ecc	str	xzr, [sp, #0x58]
0000000000041ed0	mov	x0, x20
0000000000041ed4	blr	x22
0000000000041ed8	ldr	x23, [x0]
0000000000041edc	add	x21, x23, #0x138
0000000000041ee0	ldaxr	w22, [x21]
0000000000041ee4	stlxr	w10, w9, [x21]
0000000000041ee8	cbnz	w10, 0x41ee0
0000000000041eec	mov	x0, x8
0000000000041ef0	bl	0x4ddcc ; symbol stub for: _pthread_mutex_lock
0000000000041ef4	cbz	x23, 0x41f28
0000000000041ef8	ldaxr	w8, [x21]
0000000000041efc	stlxr	w9, w22, [x21]
0000000000041f00	cbnz	w9, 0x41ef8
0000000000041f04	cbnz	w22, 0x41f28
0000000000041f08	cmp	w8, #0x1
0000000000041f0c	b.ne	0x41f28
0000000000041f10	adr	x8, #0x40933
0000000000041f14	nop
0000000000041f18	ldarb	w8, [x8]
0000000000041f1c	tbz	w8, #0x0, 0x41f28
0000000000041f20	mov	x0, x21
0000000000041f24	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000041f28	str	x27, [sp, #0x10]
0000000000041f2c	ldp	x1, x27, [x28, #0x10]
0000000000041f30	subs	x8, x27, x1
0000000000041f34	asr	x25, x8, #3
0000000000041f38	mov	w8, #0x66
0000000000041f3c	mul	x8, x25, x8
0000000000041f40	sub	x8, x8, #0x1
0000000000041f44	csel	x9, xzr, x8, eq
0000000000041f48	ldp	x8, x10, [x28, #0x28]
0000000000041f4c	add	x10, x10, x8
0000000000041f50	cmp	x9, x10
0000000000041f54	b.ne	0x42310
0000000000041f58	subs	x8, x8, #0x66
0000000000041f5c	b.lo	0x41fcc
0000000000041f60	str	x8, [x28, #0x28]
0000000000041f64	ldr	x22, [x1], #0x8
0000000000041f68	str	x1, [x28, #0x10]
0000000000041f6c	ldr	x8, [x28, #0x20]
0000000000041f70	cmp	x8, x27
0000000000041f74	b.ne	0x42300
0000000000041f78	ldr	x9, [x28, #0x8]
0000000000041f7c	subs	x10, x1, x9
0000000000041f80	b.ls	0x420d0
0000000000041f84	asr	x9, x10, #3
0000000000041f88	add	x10, x9, #0x1
0000000000041f8c	add	x11, x9, #0x2
0000000000041f90	cmp	x10, #0x0
0000000000041f94	csinc	x9, x11, x9, lt
0000000000041f98	asr	x9, x9, #1
0000000000041f9c	neg	x23, x9
0000000000041fa0	sub	x20, x1, x9, lsl #3
0000000000041fa4	subs	x21, x8, x1
0000000000041fa8	b.eq	0x41fbc
0000000000041fac	mov	x0, x20
0000000000041fb0	mov	x2, x21
0000000000041fb4	bl	0x4dbf8 ; symbol stub for: _memmove
0000000000041fb8	ldr	x1, [x28, #0x10]
0000000000041fbc	add	x27, x20, x21
0000000000041fc0	add	x8, x1, x23, lsl #3
0000000000041fc4	stp	x8, x27, [x28, #0x10]
0000000000041fc8	b	0x42300
0000000000041fcc	ldr	x21, [x28, #0x20]
0000000000041fd0	ldr	x8, [x28, #0x8]
0000000000041fd4	sub	x8, x21, x8
0000000000041fd8	cmp	x25, x8, asr #3
0000000000041fdc	b.hs	0x42050
0000000000041fe0	mov	w0, #0x66
0000000000041fe4	mov	w1, #0x28
0000000000041fe8	bl	0x4db20 ; symbol stub for: _calloc
0000000000041fec	mov	x20, x0
0000000000041ff0	cmp	x21, x27
0000000000041ff4	b.ne	0x420bc
0000000000041ff8	ldp	x9, x1, [x28, #0x8]
0000000000041ffc	cmp	x1, x9
0000000000042000	b.ne	0x424d4
0000000000042004	ldp	x8, x10, [x28, #0x18]
0000000000042008	cmp	x8, x10
000000000004200c	b.hs	0x423f0
0000000000042010	sub	x9, x10, x8
0000000000042014	asr	x9, x9, #3
0000000000042018	add	x10, x9, #0x1
000000000004201c	add	x11, x9, #0x2
0000000000042020	cmp	x10, #0x0
0000000000042024	csinc	x9, x11, x9, lt
0000000000042028	asr	x22, x9, #1
000000000004202c	add	x9, x8, x22, lsl #3
0000000000042030	subs	x2, x8, x1
0000000000042034	b.eq	0x424a4
0000000000042038	sub	x21, x9, x2
000000000004203c	mov	x0, x21
0000000000042040	bl	0x4dbf8 ; symbol stub for: _memmove
0000000000042044	ldr	x8, [x28, #0x18]
0000000000042048	mov	x1, x21
000000000004204c	b	0x424a8
0000000000042050	str	x24, [sp, #0x8]
0000000000042054	asr	x9, x8, #2
0000000000042058	cmp	x8, #0x0
000000000004205c	csinc	x23, x9, xzr, ne
0000000000042060	mov	x0, x23
0000000000042064	mov	w1, #0x8
0000000000042068	bl	0x4db20 ; symbol stub for: _calloc
000000000004206c	mov	x20, x0
0000000000042070	add	x21, x0, x25, lsl #3
0000000000042074	add	x24, x0, x23, lsl #3
0000000000042078	mov	w0, #0x66
000000000004207c	mov	w1, #0x28
0000000000042080	bl	0x4db20 ; symbol stub for: _calloc
0000000000042084	mov	x22, x0
0000000000042088	cmp	x25, x23
000000000004208c	b.ne	0x42164
0000000000042090	subs	x8, x21, x20
0000000000042094	b.ls	0x42128
0000000000042098	asr	x8, x8, #3
000000000004209c	add	x9, x8, #0x1
00000000000420a0	add	x10, x8, #0x2
00000000000420a4	cmp	x9, #0x0
00000000000420a8	csinc	x8, x10, x8, lt
00000000000420ac	lsl	x8, x8, #2
00000000000420b0	and	x8, x8, #0xfffffffffffffff8
00000000000420b4	sub	x21, x21, x8
00000000000420b8	b	0x42164
00000000000420bc	ldp	x9, x8, [x28, #0x18]
00000000000420c0	cmp	x9, x8
00000000000420c4	b.eq	0x42288
00000000000420c8	str	x20, [x9]
00000000000420cc	b	0x42304
00000000000420d0	subs	x8, x8, x9
00000000000420d4	asr	x8, x8, #2
00000000000420d8	csinc	x20, x8, xzr, ne
00000000000420dc	lsl	x8, x20, #1
00000000000420e0	and	x21, x8, #0xfffffffffffffff8
00000000000420e4	mov	x0, x20
00000000000420e8	mov	w1, #0x8
00000000000420ec	bl	0x4db20 ; symbol stub for: _calloc
00000000000420f0	add	x9, x0, x21
00000000000420f4	add	x10, x0, x20, lsl #3
00000000000420f8	ldp	x8, x11, [x28, #0x10]
00000000000420fc	subs	x11, x11, x8
0000000000042100	b.eq	0x422e0
0000000000042104	asr	x12, x11, #3
0000000000042108	add	x27, x9, x11
000000000004210c	lsl	x11, x12, #3
0000000000042110	mov	x12, x9
0000000000042114	ldr	x13, [x8], #0x8
0000000000042118	str	x13, [x12], #0x8
000000000004211c	subs	x11, x11, #0x8
0000000000042120	b.ne	0x42114
0000000000042124	b	0x422e4
0000000000042128	subs	x8, x24, x20
000000000004212c	asr	x8, x8, #2
0000000000042130	csinc	x24, x8, xzr, ne
0000000000042134	lsl	x8, x24, #1
0000000000042138	and	x21, x8, #0xfffffffffffffff8
000000000004213c	mov	x0, x24
0000000000042140	mov	w1, #0x8
0000000000042144	bl	0x4db20 ; symbol stub for: _calloc
0000000000042148	mov	x23, x0
000000000004214c	add	x21, x0, x21
0000000000042150	add	x24, x0, x24, lsl #3
0000000000042154	cbz	x20, 0x42160
0000000000042158	mov	x0, x20
000000000004215c	bl	0x4dba4 ; symbol stub for: _free
0000000000042160	mov	x20, x23
0000000000042164	str	x22, [x21]
0000000000042168	add	x27, x21, #0x8
000000000004216c	ldr	x25, [x28, #0x18]
0000000000042170	b	0x42184
0000000000042174	mov	x22, x21
0000000000042178	ldr	x8, [x25]
000000000004217c	stur	x8, [x22, #-0x8]
0000000000042180	sub	x21, x21, #0x8
0000000000042184	ldr	x8, [x28, #0x10]
0000000000042188	cmp	x25, x8
000000000004218c	b.eq	0x42268
0000000000042190	sub	x25, x25, #0x8
0000000000042194	cmp	x21, x20
0000000000042198	b.ne	0x42174
000000000004219c	cmp	x27, x24
00000000000421a0	b.hs	0x421f0
00000000000421a4	sub	x8, x24, x27
00000000000421a8	asr	x8, x8, #3
00000000000421ac	add	x9, x8, #0x1
00000000000421b0	add	x10, x8, #0x2
00000000000421b4	cmp	x9, #0x0
00000000000421b8	csinc	x8, x10, x8, lt
00000000000421bc	lsl	x8, x8, #2
00000000000421c0	and	x8, x8, #0xfffffffffffffff8
00000000000421c4	add	x23, x27, x8
00000000000421c8	mov	x22, x23
00000000000421cc	subs	x2, x27, x21
00000000000421d0	b.eq	0x421e4
00000000000421d4	sub	x22, x23, x2
00000000000421d8	mov	x0, x22
00000000000421dc	mov	x1, x21
00000000000421e0	bl	0x4dbf8 ; symbol stub for: _memmove
00000000000421e4	mov	x21, x22
00000000000421e8	mov	x27, x23
00000000000421ec	b	0x42178
00000000000421f0	subs	x8, x24, x20
00000000000421f4	asr	x8, x8, #2
00000000000421f8	csinc	x24, x8, xzr, ne
00000000000421fc	lsl	x8, x24, #1
0000000000042200	add	x8, x8, #0x6
0000000000042204	and	x22, x8, #0xfffffffffffffff8
0000000000042208	mov	x0, x24
000000000004220c	mov	w1, #0x8
0000000000042210	bl	0x4db20 ; symbol stub for: _calloc
0000000000042214	mov	x23, x0
0000000000042218	add	x22, x0, x22
000000000004221c	subs	x8, x27, x21
0000000000042220	b.eq	0x42248
0000000000042224	asr	x9, x8, #3
0000000000042228	add	x27, x22, x8
000000000004222c	lsl	x8, x9, #3
0000000000042230	mov	x9, x22
0000000000042234	ldr	x10, [x21], #0x8
0000000000042238	str	x10, [x9], #0x8
000000000004223c	subs	x8, x8, #0x8
0000000000042240	b.ne	0x42234
0000000000042244	b	0x4224c
0000000000042248	mov	x27, x22
000000000004224c	add	x24, x23, x24, lsl #3
0000000000042250	cbz	x20, 0x4225c
0000000000042254	mov	x0, x20
0000000000042258	bl	0x4dba4 ; symbol stub for: _free
000000000004225c	mov	x20, x23
0000000000042260	mov	x21, x22
0000000000042264	b	0x42178
0000000000042268	ldr	x0, [x28, #0x8]
000000000004226c	stp	x20, x21, [x28, #0x8]
0000000000042270	stp	x27, x24, [x28, #0x18]
0000000000042274	cbz	x0, 0x42280
0000000000042278	bl	0x4dba4 ; symbol stub for: _free
000000000004227c	ldr	x27, [x28, #0x18]
0000000000042280	ldr	x24, [sp, #0x8]
0000000000042284	b	0x42310
0000000000042288	ldp	x10, x1, [x28, #0x8]
000000000004228c	subs	x11, x1, x10
0000000000042290	b.ls	0x4244c
0000000000042294	asr	x8, x11, #3
0000000000042298	add	x10, x8, #0x1
000000000004229c	add	x11, x8, #0x2
00000000000422a0	cmp	x10, #0x0
00000000000422a4	csinc	x8, x11, x8, lt
00000000000422a8	asr	x8, x8, #1
00000000000422ac	neg	x23, x8
00000000000422b0	sub	x21, x1, x8, lsl #3
00000000000422b4	subs	x22, x9, x1
00000000000422b8	b.eq	0x422cc
00000000000422bc	mov	x0, x21
00000000000422c0	mov	x2, x22
00000000000422c4	bl	0x4dbf8 ; symbol stub for: _memmove
00000000000422c8	ldr	x1, [x28, #0x10]
00000000000422cc	add	x9, x21, x22
00000000000422d0	add	x8, x1, x23, lsl #3
00000000000422d4	stp	x8, x9, [x28, #0x10]
00000000000422d8	str	x20, [x9]
00000000000422dc	b	0x42304
00000000000422e0	mov	x27, x9
00000000000422e4	ldr	x8, [x28, #0x8]
00000000000422e8	stp	x0, x9, [x28, #0x8]
00000000000422ec	stp	x27, x10, [x28, #0x18]
00000000000422f0	cbz	x8, 0x42300
00000000000422f4	mov	x0, x8
00000000000422f8	bl	0x4dba4 ; symbol stub for: _free
00000000000422fc	ldr	x27, [x28, #0x18]
0000000000042300	str	x22, [x27]
0000000000042304	ldr	x8, [x28, #0x18]
0000000000042308	add	x27, x8, #0x8
000000000004230c	str	x27, [x28, #0x18]
0000000000042310	ldr	x8, [x28, #0x10]
0000000000042314	cmp	x27, x8
0000000000042318	b.eq	0x42354
000000000004231c	ldp	x9, x10, [x28, #0x28]
0000000000042320	add	x9, x9, x10
0000000000042324	mov	x10, #0xa0a1
0000000000042328	movk	x10, #0xa0a0, lsl #16
000000000004232c	movk	x10, #0xa0a0, lsl #32
0000000000042330	movk	x10, #0xa0a0, lsl #48
0000000000042334	umulh	x10, x9, x10
0000000000042338	lsr	x10, x10, #6
000000000004233c	ldr	x8, [x8, x10, lsl #3]
0000000000042340	mov	x11, #-0x66
0000000000042344	madd	x9, x10, x11, x9
0000000000042348	mov	w10, #0x28
000000000004234c	madd	x8, x9, x10, x8
0000000000042350	b	0x42358
0000000000042354	mov	x8, #0x0
0000000000042358	ldr	x10, [sp, #0x10]
000000000004235c	mov	w9, #0x3
0000000000042360	str	w9, [x8]
0000000000042364	str	x10, [x8, #0x8]
0000000000042368	ldur	q0, [sp, #0x18]
000000000004236c	str	q0, [x8, #0x10]
0000000000042370	ldr	x9, [sp, #0x28]
0000000000042374	str	x9, [x8, #0x20]
0000000000042378	ldr	x8, [x28, #0x30]
000000000004237c	add	x8, x8, #0x1
0000000000042380	str	x8, [x28, #0x30]
0000000000042384	add	x0, x28, #0x98
0000000000042388	bl	0x4dd6c ; symbol stub for: _pthread_cond_signal
000000000004238c	add	x0, sp, #0x48
0000000000042390	bl	__ZN12_GLOBAL__N_16LockerD1Ev
0000000000042394	cbz	x24, 0x423c8
0000000000042398	ldaxr	w8, [x19]
000000000004239c	stlxr	w9, w26, [x19]
00000000000423a0	cbnz	w9, 0x42398
00000000000423a4	cbnz	w26, 0x423c8
00000000000423a8	cmp	w8, #0x1
00000000000423ac	b.ne	0x423c8
00000000000423b0	adr	x8, #0x40493
00000000000423b4	nop
00000000000423b8	ldarb	w8, [x8]
00000000000423bc	tbz	w8, #0x0, 0x423c8
00000000000423c0	mov	x0, x19
00000000000423c4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000423c8	add	x0, sp, #0x30
00000000000423cc	bl	__ZN12_GLOBAL__N_16LockerD1Ev
00000000000423d0	ldp	x29, x30, [sp, #0xb0]
00000000000423d4	ldp	x20, x19, [sp, #0xa0]
00000000000423d8	ldp	x22, x21, [sp, #0x90]
00000000000423dc	ldp	x24, x23, [sp, #0x80]
00000000000423e0	ldp	x26, x25, [sp, #0x70]
00000000000423e4	ldp	x28, x27, [sp, #0x60]
00000000000423e8	add	sp, sp, #0xc0
00000000000423ec	ret
00000000000423f0	subs	x8, x10, x9
00000000000423f4	asr	x8, x8, #2
00000000000423f8	csinc	x21, x8, xzr, ne
00000000000423fc	lsl	x8, x21, #1
0000000000042400	add	x8, x8, #0x6
0000000000042404	and	x22, x8, #0xfffffffffffffff8
0000000000042408	mov	x0, x21
000000000004240c	mov	w1, #0x8
0000000000042410	bl	0x4db20 ; symbol stub for: _calloc
0000000000042414	add	x1, x0, x22
0000000000042418	add	x9, x0, x21, lsl #3
000000000004241c	ldp	x8, x10, [x28, #0x10]
0000000000042420	subs	x10, x10, x8
0000000000042424	b.eq	0x424b4
0000000000042428	asr	x11, x10, #3
000000000004242c	add	x10, x1, x10
0000000000042430	lsl	x11, x11, #3
0000000000042434	mov	x12, x1
0000000000042438	ldr	x13, [x8], #0x8
000000000004243c	str	x13, [x12], #0x8
0000000000042440	subs	x11, x11, #0x8
0000000000042444	b.ne	0x42438
0000000000042448	b	0x424b8
000000000004244c	subs	x8, x8, x10
0000000000042450	asr	x8, x8, #2
0000000000042454	csinc	x21, x8, xzr, ne
0000000000042458	lsl	x8, x21, #1
000000000004245c	and	x22, x8, #0xfffffffffffffff8
0000000000042460	mov	x0, x21
0000000000042464	mov	w1, #0x8
0000000000042468	bl	0x4db20 ; symbol stub for: _calloc
000000000004246c	add	x10, x0, x22
0000000000042470	add	x11, x0, x21, lsl #3
0000000000042474	ldp	x8, x9, [x28, #0x10]
0000000000042478	subs	x9, x9, x8
000000000004247c	b.eq	0x425b0
0000000000042480	asr	x12, x9, #3
0000000000042484	add	x9, x10, x9
0000000000042488	lsl	x12, x12, #3
000000000004248c	mov	x13, x10
0000000000042490	ldr	x14, [x8], #0x8
0000000000042494	str	x14, [x13], #0x8
0000000000042498	subs	x12, x12, #0x8
000000000004249c	b.ne	0x42490
00000000000424a0	b	0x425b4
00000000000424a4	mov	x1, x9
00000000000424a8	add	x8, x8, x22, lsl #3
00000000000424ac	stp	x1, x8, [x28, #0x10]
00000000000424b0	b	0x424d4
00000000000424b4	mov	x10, x1
00000000000424b8	ldr	x8, [x28, #0x8]
00000000000424bc	stp	x0, x1, [x28, #0x8]
00000000000424c0	stp	x10, x9, [x28, #0x18]
00000000000424c4	cbz	x8, 0x424d4
00000000000424c8	mov	x0, x8
00000000000424cc	bl	0x4dba4 ; symbol stub for: _free
00000000000424d0	ldr	x1, [x28, #0x10]
00000000000424d4	stur	x20, [x1, #-0x8]
00000000000424d8	ldp	x1, x9, [x28, #0x10]
00000000000424dc	sub	x8, x1, #0x8
00000000000424e0	str	x8, [x28, #0x10]
00000000000424e4	ldur	x22, [x1, #-0x8]
00000000000424e8	str	x1, [x28, #0x10]
00000000000424ec	ldr	x8, [x28, #0x20]
00000000000424f0	cmp	x9, x8
00000000000424f4	b.eq	0x42500
00000000000424f8	str	x22, [x9]
00000000000424fc	b	0x42304
0000000000042500	ldr	x10, [x28, #0x8]
0000000000042504	subs	x11, x1, x10
0000000000042508	b.ls	0x42558
000000000004250c	asr	x8, x11, #3
0000000000042510	add	x10, x8, #0x1
0000000000042514	add	x11, x8, #0x2
0000000000042518	cmp	x10, #0x0
000000000004251c	csinc	x8, x11, x8, lt
0000000000042520	asr	x8, x8, #1
0000000000042524	neg	x23, x8
0000000000042528	sub	x20, x1, x8, lsl #3
000000000004252c	subs	x21, x9, x1
0000000000042530	b.eq	0x42544
0000000000042534	mov	x0, x20
0000000000042538	mov	x2, x21
000000000004253c	bl	0x4dbf8 ; symbol stub for: _memmove
0000000000042540	ldr	x1, [x28, #0x10]
0000000000042544	add	x9, x20, x21
0000000000042548	add	x8, x1, x23, lsl #3
000000000004254c	stp	x8, x9, [x28, #0x10]
0000000000042550	str	x22, [x9]
0000000000042554	b	0x42304
0000000000042558	subs	x8, x8, x10
000000000004255c	asr	x8, x8, #2
0000000000042560	csinc	x20, x8, xzr, ne
0000000000042564	lsl	x8, x20, #1
0000000000042568	and	x21, x8, #0xfffffffffffffff8
000000000004256c	mov	x0, x20
0000000000042570	mov	w1, #0x8
0000000000042574	bl	0x4db20 ; symbol stub for: _calloc
0000000000042578	add	x10, x0, x21
000000000004257c	add	x11, x0, x20, lsl #3
0000000000042580	ldp	x8, x9, [x28, #0x10]
0000000000042584	subs	x9, x9, x8
0000000000042588	b.eq	0x425d4
000000000004258c	asr	x12, x9, #3
0000000000042590	add	x9, x10, x9
0000000000042594	lsl	x12, x12, #3
0000000000042598	mov	x13, x10
000000000004259c	ldr	x14, [x8], #0x8
00000000000425a0	str	x14, [x13], #0x8
00000000000425a4	subs	x12, x12, #0x8
00000000000425a8	b.ne	0x4259c
00000000000425ac	b	0x425d8
00000000000425b0	mov	x9, x10
00000000000425b4	ldr	x8, [x28, #0x8]
00000000000425b8	stp	x0, x10, [x28, #0x8]
00000000000425bc	stp	x9, x11, [x28, #0x18]
00000000000425c0	cbz	x8, 0x420c8
00000000000425c4	mov	x0, x8
00000000000425c8	bl	0x4dba4 ; symbol stub for: _free
00000000000425cc	ldr	x9, [x28, #0x18]
00000000000425d0	b	0x420c8
00000000000425d4	mov	x9, x10
00000000000425d8	ldr	x8, [x28, #0x8]
00000000000425dc	stp	x0, x10, [x28, #0x8]
00000000000425e0	stp	x9, x11, [x28, #0x18]
00000000000425e4	cbz	x8, 0x424f8
00000000000425e8	mov	x0, x8
00000000000425ec	bl	0x4dba4 ; symbol stub for: _free
00000000000425f0	ldr	x9, [x28, #0x18]
00000000000425f4	b	0x424f8
00000000000425f8	mov	x20, x0
00000000000425fc	add	x0, sp, #0x48
0000000000042600	bl	__ZN12_GLOBAL__N_16LockerD1Ev
0000000000042604	b	0x42640
0000000000042608	mov	x20, x0
000000000004260c	cbz	x23, 0x42640
0000000000042610	ldaxr	w8, [x21]
0000000000042614	stlxr	w9, w22, [x21]
0000000000042618	cbnz	w9, 0x42610
000000000004261c	cbnz	w22, 0x42640
0000000000042620	cmp	w8, #0x1
0000000000042624	b.ne	0x42640
0000000000042628	adr	x8, #0x4021b
000000000004262c	nop
0000000000042630	ldarb	w8, [x8]
0000000000042634	tbz	w8, #0x0, 0x42640
0000000000042638	mov	x0, x21
000000000004263c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000042640	cbnz	x24, 0x42650
0000000000042644	add	x0, sp, #0x30
0000000000042648	bl	__ZN12_GLOBAL__N_16LockerD1Ev
000000000004264c	b	0x426c4
0000000000042650	ldaxr	w8, [x19]
0000000000042654	stlxr	w9, w26, [x19]
0000000000042658	cbnz	w9, 0x42650
000000000004265c	cbnz	w26, 0x42644
0000000000042660	cmp	w8, #0x1
0000000000042664	b.ne	0x42644
0000000000042668	adr	x8, #0x401db
000000000004266c	nop
0000000000042670	ldarb	w8, [x8]
0000000000042674	tbz	w8, #0x0, 0x42644
0000000000042678	mov	x0, x19
000000000004267c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000042680	b	0x42644
0000000000042684	mov	x20, x0
0000000000042688	cbz	x25, 0x426c4
000000000004268c	ldaxr	w8, [x21]
0000000000042690	stlxr	w9, w24, [x21]
0000000000042694	cbnz	w9, 0x4268c
0000000000042698	cbnz	w24, 0x426c4
000000000004269c	cmp	w8, #0x1
00000000000426a0	b.ne	0x426c4
00000000000426a4	adr	x8, #0x4019f
00000000000426a8	nop
00000000000426ac	ldarb	w8, [x8]
00000000000426b0	tbz	w8, #0x0, 0x426c4
00000000000426b4	mov	x0, x21
00000000000426b8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000426bc	b	0x426c4
00000000000426c0	mov	x20, x0
00000000000426c4	mov	x0, x20
00000000000426c8	bl	0x4da78 ; symbol stub for: ___cxa_begin_catch
00000000000426cc	bl	0x4da48 ; symbol stub for: __ZSt9terminatev
_Kotlin_ObjCExport_AllocInstanceWithAssociatedObject:
00000000000426d0	stp	x22, x21, [sp, #-0x30]!
00000000000426d4	stp	x20, x19, [sp, #0x10]
00000000000426d8	stp	x29, x30, [sp, #0x20]
00000000000426dc	add	x29, sp, #0x20
00000000000426e0	mov	x21, x2
00000000000426e4	mov	x19, x1
00000000000426e8	mov	x22, x0
00000000000426ec	adrp	x0, 38 ; 0x68000
00000000000426f0	add	x0, x0, #0xa00
00000000000426f4	ldr	x8, [x0]
00000000000426f8	blr	x8
00000000000426fc	ldr	x8, [x0]
0000000000042700	ldr	x8, [x8, #0x118]
0000000000042704	ldrsw	x9, [x22, #0x14]
0000000000042708	add	x9, x9, #0xf
000000000004270c	and	x1, x9, #0xfffffffffffffff8
0000000000042710	add	x0, x8, #0x70
0000000000042714	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000042718	mov	x20, x0
000000000004271c	str	x22, [x20, #0x10]!
0000000000042720	stur	xzr, [x20, #-0x8]
0000000000042724	str	x20, [x21]
0000000000042728	ldar	x8, [x20]
000000000004272c	and	x8, x8, #0xfffffffffffffffc
0000000000042730	ldr	x9, [x8]
0000000000042734	cmp	x9, x8
0000000000042738	csel	x0, xzr, x8, eq
000000000004273c	cbnz	x0, 0x42748
0000000000042740	mov	x0, x20
0000000000042744	bl	__ZN6kotlin2mm15ExtraObjectData7InstallEP9ObjHeader
0000000000042748	add	x8, x0, #0x10
000000000004274c	stlr	x19, [x8]
0000000000042750	mov	x0, x20
0000000000042754	ldp	x29, x30, [sp, #0x20]
0000000000042758	ldp	x20, x19, [sp, #0x10]
000000000004275c	ldp	x22, x21, [sp], #0x30
0000000000042760	ret
_Kotlin_ObjCExport_refToRetainedObjC:
0000000000042764	cbz	x0, 0x427b0
0000000000042768	ldar	x8, [x0]
000000000004276c	and	x8, x8, #0xfffffffffffffffc
0000000000042770	ldr	x9, [x8]
0000000000042774	cmp	x8, #0x0
0000000000042778	ccmp	x9, x8, #0x4, ne
000000000004277c	b.eq	0x42794
0000000000042780	add	x8, x8, #0x10
0000000000042784	ldar	x8, [x8]
0000000000042788	cbz	x8, 0x42794
000000000004278c	mov	x0, x8
0000000000042790	b	0x4dce8 ; symbol stub for: _objc_retain
0000000000042794	ldr	x8, [x0]
0000000000042798	and	x8, x8, #0xfffffffffffffffc
000000000004279c	ldr	x8, [x8]
00000000000427a0	ldr	x8, [x8, #0x60]
00000000000427a4	ldr	x1, [x8]
00000000000427a8	cbz	x1, 0x427b4
00000000000427ac	br	x1
00000000000427b0	ret
00000000000427b4	b	__ZL44Kotlin_ObjCExport_refToRetainedObjC_slowpathP9ObjHeader
_Kotlin_ObjCExport_refToLocalObjC:
00000000000427b8	stp	x29, x30, [sp, #-0x10]!
00000000000427bc	mov	x29, sp
00000000000427c0	cbz	x0, 0x42818
00000000000427c4	ldar	x8, [x0]
00000000000427c8	and	x8, x8, #0xfffffffffffffffc
00000000000427cc	ldr	x9, [x8]
00000000000427d0	cmp	x8, #0x0
00000000000427d4	ccmp	x9, x8, #0x4, ne
00000000000427d8	b.eq	0x427f4
00000000000427dc	add	x8, x8, #0x10
00000000000427e0	ldar	x8, [x8]
00000000000427e4	cbz	x8, 0x427f4
00000000000427e8	mov	x0, x8
00000000000427ec	ldp	x29, x30, [sp], #0x10
00000000000427f0	ret
00000000000427f4	ldr	x8, [x0]
00000000000427f8	and	x8, x8, #0xfffffffffffffffc
00000000000427fc	ldr	x8, [x8]
0000000000042800	ldr	x8, [x8, #0x60]
0000000000042804	ldr	x8, [x8]
0000000000042808	cbz	x8, 0x42828
000000000004280c	blr	x8
0000000000042810	ldp	x29, x30, [sp], #0x10
0000000000042814	b	0x4dc58 ; symbol stub for: _objc_autorelease
0000000000042818	mov	x8, #0x0
000000000004281c	mov	x0, x8
0000000000042820	ldp	x29, x30, [sp], #0x10
0000000000042824	ret
0000000000042828	bl	__ZL44Kotlin_ObjCExport_refToRetainedObjC_slowpathP9ObjHeader
000000000004282c	ldp	x29, x30, [sp], #0x10
0000000000042830	b	0x4dc58 ; symbol stub for: _objc_autorelease
_Kotlin_NSSetAsKSet_contains:
0000000000042834	stp	x22, x21, [sp, #-0x30]!
0000000000042838	stp	x20, x19, [sp, #0x10]
000000000004283c	stp	x29, x30, [sp, #0x20]
0000000000042840	add	x29, sp, #0x20
0000000000042844	ldar	x8, [x0]
0000000000042848	and	x8, x8, #0xfffffffffffffffc
000000000004284c	ldr	x9, [x8]
0000000000042850	cmp	x8, #0x0
0000000000042854	ccmp	x9, x8, #0x4, ne
0000000000042858	b.ne	0x42870
000000000004285c	mov	x20, #0x0
0000000000042860	cbz	x1, 0x4287c
0000000000042864	mov	x0, x1
0000000000042868	bl	_Kotlin_ObjCExport_refToObjC
000000000004286c	b	0x42890
0000000000042870	add	x8, x8, #0x10
0000000000042874	ldar	x20, [x8]
0000000000042878	cbnz	x1, 0x42864
000000000004287c	nop
0000000000042880	ldr	x0, #0x23ea0 ; Objc class ref: _OBJC_CLASS_$_NSNull
0000000000042884	nop
0000000000042888	ldr	x1, #0x23d38 ; Objc selector ref: null
000000000004288c	bl	0x4dcb8 ; Objc message: +[NSNull null]
0000000000042890	mov	x2, x0
0000000000042894	adrp	x0, 38 ; 0x68000
0000000000042898	add	x0, x0, #0xa00
000000000004289c	ldr	x8, [x0]
00000000000428a0	blr	x8
00000000000428a4	ldr	x22, [x0]
00000000000428a8	add	x19, x22, #0x138
00000000000428ac	mov	w8, #0x1
00000000000428b0	ldaxr	w21, [x19]
00000000000428b4	stlxr	w9, w8, [x19]
00000000000428b8	cbnz	w9, 0x428b0
00000000000428bc	nop
00000000000428c0	ldr	x1, #0x23b80 ; Objc selector ref: containsObject:
00000000000428c4	mov	x0, x20
00000000000428c8	bl	0x4dcb8 ; Objc message: -[x0 containsObject:]
00000000000428cc	mov	x20, x0
00000000000428d0	cbz	x22, 0x42904
00000000000428d4	ldaxr	w8, [x19]
00000000000428d8	stlxr	w9, w21, [x19]
00000000000428dc	cbnz	w9, 0x428d4
00000000000428e0	cbnz	w21, 0x42904
00000000000428e4	cmp	w8, #0x1
00000000000428e8	b.ne	0x42904
00000000000428ec	adr	x8, #0x3ff57
00000000000428f0	nop
00000000000428f4	ldarb	w8, [x8]
00000000000428f8	tbz	w8, #0x0, 0x42904
00000000000428fc	mov	x0, x19
0000000000042900	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000042904	mov	x0, x20
0000000000042908	ldp	x29, x30, [sp, #0x20]
000000000004290c	ldp	x20, x19, [sp, #0x10]
0000000000042910	ldp	x22, x21, [sp], #0x30
0000000000042914	ret
0000000000042918	mov	x20, x0
000000000004291c	cbz	x22, 0x42950
0000000000042920	ldaxr	w8, [x19]
0000000000042924	stlxr	w9, w21, [x19]
0000000000042928	cbnz	w9, 0x42920
000000000004292c	cbnz	w21, 0x42950
0000000000042930	cmp	w8, #0x1
0000000000042934	b.ne	0x42950
0000000000042938	adr	x8, #0x3ff0b
000000000004293c	nop
0000000000042940	ldarb	w8, [x8]
0000000000042944	tbz	w8, #0x0, 0x42950
0000000000042948	mov	x0, x19
000000000004294c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000042950	mov	x0, x20
0000000000042954	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
_Kotlin_NSSetAsKSet_getElement:
0000000000042958	stp	x26, x25, [sp, #-0x50]!
000000000004295c	stp	x24, x23, [sp, #0x10]
0000000000042960	stp	x22, x21, [sp, #0x20]
0000000000042964	stp	x20, x19, [sp, #0x30]
0000000000042968	stp	x29, x30, [sp, #0x40]
000000000004296c	add	x29, sp, #0x40
0000000000042970	mov	x19, x2
0000000000042974	ldar	x8, [x0]
0000000000042978	and	x8, x8, #0xfffffffffffffffc
000000000004297c	ldr	x9, [x8]
0000000000042980	cmp	x8, #0x0
0000000000042984	ccmp	x9, x8, #0x4, ne
0000000000042988	b.ne	0x429a8
000000000004298c	mov	x21, #0x0
0000000000042990	adrp	x22, 36 ; 0x66000
0000000000042994	adrp	x23, 36 ; 0x66000
0000000000042998	cbz	x1, 0x429bc
000000000004299c	mov	x0, x1
00000000000429a0	bl	_Kotlin_ObjCExport_refToObjC
00000000000429a4	b	0x429c8
00000000000429a8	add	x8, x8, #0x10
00000000000429ac	ldar	x21, [x8]
00000000000429b0	adrp	x22, 36 ; 0x66000
00000000000429b4	adrp	x23, 36 ; 0x66000
00000000000429b8	cbnz	x1, 0x4299c
00000000000429bc	ldr	x0, [x22, #0x720]
00000000000429c0	ldr	x1, [x23, #0x5c0]
00000000000429c4	bl	0x4dcb8 ; Objc message: -[x0 containsObject:]
00000000000429c8	mov	x2, x0
00000000000429cc	adrp	x0, 38 ; 0x68000
00000000000429d0	add	x0, x0, #0xa00
00000000000429d4	ldr	x8, [x0]
00000000000429d8	blr	x8
00000000000429dc	ldr	x25, [x0]
00000000000429e0	add	x20, x25, #0x138
00000000000429e4	mov	w8, #0x1
00000000000429e8	ldaxr	w24, [x20]
00000000000429ec	stlxr	w9, w8, [x20]
00000000000429f0	cbnz	w9, 0x429e8
00000000000429f4	nop
00000000000429f8	ldr	x1, #0x23ba0 ; Objc selector ref: member:
00000000000429fc	mov	x0, x21
0000000000042a00	bl	0x4dcb8 ; Objc message: -[x0 member:]
0000000000042a04	mov	x21, x0
0000000000042a08	cbz	x25, 0x42a3c
0000000000042a0c	ldaxr	w8, [x20]
0000000000042a10	stlxr	w9, w24, [x20]
0000000000042a14	cbnz	w9, 0x42a0c
0000000000042a18	cbnz	w24, 0x42a3c
0000000000042a1c	cmp	w8, #0x1
0000000000042a20	b.ne	0x42a3c
0000000000042a24	adr	x8, #0x3fe1f
0000000000042a28	nop
0000000000042a2c	ldarb	w8, [x8]
0000000000042a30	tbz	w8, #0x0, 0x42a3c
0000000000042a34	mov	x0, x20
0000000000042a38	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000042a3c	ldr	x0, [x22, #0x720]
0000000000042a40	ldr	x1, [x23, #0x5c0]
0000000000042a44	bl	0x4dcb8 ; Objc message: -[x0 member:]
0000000000042a48	cmp	x21, x0
0000000000042a4c	b.eq	0x42a7c
0000000000042a50	cbz	x21, 0x42a7c
0000000000042a54	nop
0000000000042a58	ldr	x1, #0x40040
0000000000042a5c	mov	x0, x21
0000000000042a60	mov	x2, x19
0000000000042a64	ldp	x29, x30, [sp, #0x40]
0000000000042a68	ldp	x20, x19, [sp, #0x30]
0000000000042a6c	ldp	x22, x21, [sp, #0x20]
0000000000042a70	ldp	x24, x23, [sp, #0x10]
0000000000042a74	ldp	x26, x25, [sp], #0x50
0000000000042a78	b	0x4dcb8 ; Objc message: -[x0 member:]
0000000000042a7c	str	xzr, [x19]
0000000000042a80	mov	x0, #0x0
0000000000042a84	ldp	x29, x30, [sp, #0x40]
0000000000042a88	ldp	x20, x19, [sp, #0x30]
0000000000042a8c	ldp	x22, x21, [sp, #0x20]
0000000000042a90	ldp	x24, x23, [sp, #0x10]
0000000000042a94	ldp	x26, x25, [sp], #0x50
0000000000042a98	ret
0000000000042a9c	mov	x19, x0
0000000000042aa0	cbz	x25, 0x42ad4
0000000000042aa4	ldaxr	w8, [x20]
0000000000042aa8	stlxr	w9, w24, [x20]
0000000000042aac	cbnz	w9, 0x42aa4
0000000000042ab0	cbnz	w24, 0x42ad4
0000000000042ab4	cmp	w8, #0x1
0000000000042ab8	b.ne	0x42ad4
0000000000042abc	adr	x8, #0x3fd87
0000000000042ac0	nop
0000000000042ac4	ldarb	w8, [x8]
0000000000042ac8	tbz	w8, #0x0, 0x42ad4
0000000000042acc	mov	x0, x20
0000000000042ad0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000042ad4	mov	x0, x19
0000000000042ad8	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
_Kotlin_NSDictionaryAsKMap_containsKey:
0000000000042adc	stp	x22, x21, [sp, #-0x30]!
0000000000042ae0	stp	x20, x19, [sp, #0x10]
0000000000042ae4	stp	x29, x30, [sp, #0x20]
0000000000042ae8	add	x29, sp, #0x20
0000000000042aec	ldar	x8, [x0]
0000000000042af0	and	x8, x8, #0xfffffffffffffffc
0000000000042af4	ldr	x9, [x8]
0000000000042af8	cmp	x8, #0x0
0000000000042afc	ccmp	x9, x8, #0x4, ne
0000000000042b00	b.ne	0x42b18
0000000000042b04	mov	x20, #0x0
0000000000042b08	cbz	x1, 0x42b24
0000000000042b0c	mov	x0, x1
0000000000042b10	bl	_Kotlin_ObjCExport_refToObjC
0000000000042b14	b	0x42b38
0000000000042b18	add	x8, x8, #0x10
0000000000042b1c	ldar	x20, [x8]
0000000000042b20	cbnz	x1, 0x42b0c
0000000000042b24	nop
0000000000042b28	ldr	x0, #0x23bf8 ; Objc class ref: _OBJC_CLASS_$_NSNull
0000000000042b2c	nop
0000000000042b30	ldr	x1, #0x23a90 ; Objc selector ref: null
0000000000042b34	bl	0x4dcb8 ; Objc message: +[NSNull null]
0000000000042b38	mov	x2, x0
0000000000042b3c	adrp	x0, 38 ; 0x68000
0000000000042b40	add	x0, x0, #0xa00
0000000000042b44	ldr	x8, [x0]
0000000000042b48	blr	x8
0000000000042b4c	ldr	x22, [x0]
0000000000042b50	add	x19, x22, #0x138
0000000000042b54	mov	w8, #0x1
0000000000042b58	ldaxr	w21, [x19]
0000000000042b5c	stlxr	w9, w8, [x19]
0000000000042b60	cbnz	w9, 0x42b58
0000000000042b64	nop
0000000000042b68	ldr	x1, #0x23a80 ; Objc selector ref: objectForKey:
0000000000042b6c	mov	x0, x20
0000000000042b70	bl	0x4dcb8 ; Objc message: -[x0 objectForKey:]
0000000000042b74	mov	x20, x0
0000000000042b78	cbz	x22, 0x42bac
0000000000042b7c	ldaxr	w8, [x19]
0000000000042b80	stlxr	w9, w21, [x19]
0000000000042b84	cbnz	w9, 0x42b7c
0000000000042b88	cbnz	w21, 0x42bac
0000000000042b8c	cmp	w8, #0x1
0000000000042b90	b.ne	0x42bac
0000000000042b94	adr	x8, #0x3fcaf
0000000000042b98	nop
0000000000042b9c	ldarb	w8, [x8]
0000000000042ba0	tbz	w8, #0x0, 0x42bac
0000000000042ba4	mov	x0, x19
0000000000042ba8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000042bac	cmp	x20, #0x0
0000000000042bb0	cset	w0, ne
0000000000042bb4	ldp	x29, x30, [sp, #0x20]
0000000000042bb8	ldp	x20, x19, [sp, #0x10]
0000000000042bbc	ldp	x22, x21, [sp], #0x30
0000000000042bc0	ret
0000000000042bc4	mov	x20, x0
0000000000042bc8	cbz	x22, 0x42bfc
0000000000042bcc	ldaxr	w8, [x19]
0000000000042bd0	stlxr	w9, w21, [x19]
0000000000042bd4	cbnz	w9, 0x42bcc
0000000000042bd8	cbnz	w21, 0x42bfc
0000000000042bdc	cmp	w8, #0x1
0000000000042be0	b.ne	0x42bfc
0000000000042be4	adr	x8, #0x3fc5f
0000000000042be8	nop
0000000000042bec	ldarb	w8, [x8]
0000000000042bf0	tbz	w8, #0x0, 0x42bfc
0000000000042bf4	mov	x0, x19
0000000000042bf8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000042bfc	mov	x0, x20
0000000000042c00	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
_Kotlin_NSDictionaryAsKMap_containsValue:
0000000000042c04	sub	sp, sp, #0x140
0000000000042c08	stp	x28, x27, [sp, #0xe0]
0000000000042c0c	stp	x26, x25, [sp, #0xf0]
0000000000042c10	stp	x24, x23, [sp, #0x100]
0000000000042c14	stp	x22, x21, [sp, #0x110]
0000000000042c18	stp	x20, x19, [sp, #0x120]
0000000000042c1c	stp	x29, x30, [sp, #0x130]
0000000000042c20	add	x29, sp, #0x130
0000000000042c24	ldar	x8, [x0]
0000000000042c28	and	x8, x8, #0xfffffffffffffffc
0000000000042c2c	ldr	x9, [x8]
0000000000042c30	cmp	x8, #0x0
0000000000042c34	ccmp	x9, x8, #0x4, ne
0000000000042c38	b.ne	0x42c50
0000000000042c3c	mov	x20, #0x0
0000000000042c40	cbz	x1, 0x42c5c
0000000000042c44	mov	x0, x1
0000000000042c48	bl	_Kotlin_ObjCExport_refToObjC
0000000000042c4c	b	0x42c70
0000000000042c50	add	x8, x8, #0x10
0000000000042c54	ldar	x20, [x8]
0000000000042c58	cbnz	x1, 0x42c44
0000000000042c5c	nop
0000000000042c60	ldr	x0, #0x23ac0 ; Objc class ref: _OBJC_CLASS_$_NSNull
0000000000042c64	nop
0000000000042c68	ldr	x1, #0x23958 ; Objc selector ref: null
0000000000042c6c	bl	0x4dcb8 ; Objc message: +[NSNull null]
0000000000042c70	mov	x21, x0
0000000000042c74	adrp	x0, 38 ; 0x68000
0000000000042c78	add	x0, x0, #0xa00
0000000000042c7c	ldr	x8, [x0]
0000000000042c80	blr	x8
0000000000042c84	ldr	x23, [x0]
0000000000042c88	add	x19, x23, #0x138
0000000000042c8c	mov	w8, #0x1
0000000000042c90	ldaxr	w25, [x19]
0000000000042c94	stlxr	w9, w8, [x19]
0000000000042c98	cbnz	w9, 0x42c90
0000000000042c9c	movi.16b	v0, #0x0
0000000000042ca0	stp	q0, q0, [sp, #0xb0]
0000000000042ca4	stp	q0, q0, [sp, #0x90]
0000000000042ca8	nop
0000000000042cac	ldr	x22, #0x237ac ; Objc selector ref: countByEnumeratingWithState:objects:count:
0000000000042cb0	add	x2, sp, #0x90
0000000000042cb4	add	x3, sp, #0x10
0000000000042cb8	mov	x0, x20
0000000000042cbc	mov	x1, x22
0000000000042cc0	mov	w4, #0x10
0000000000042cc4	bl	0x4dcb8 ; Objc message: -[x0 countByEnumeratingWithState:objects:count:]
0000000000042cc8	cbz	x0, 0x42d80
0000000000042ccc	str	x23, [sp, #0x8]
0000000000042cd0	ldr	x8, [sp, #0xa0]
0000000000042cd4	ldr	x27, [x8]
0000000000042cd8	adrp	x8, 36 ; 0x66000
0000000000042cdc	adrp	x9, 36 ; 0x66000
0000000000042ce0	mov	x28, #0x0
0000000000042ce4	ldr	x23, [x8, #0x5e8]
0000000000042ce8	ldr	x24, [x9, #0x570]
0000000000042cec	cmp	x0, #0x1
0000000000042cf0	csinc	x26, x0, xzr, hi
0000000000042cf4	ldr	x8, [sp, #0xa0]
0000000000042cf8	ldr	x8, [x8]
0000000000042cfc	cmp	x8, x27
0000000000042d00	b.eq	0x42d0c
0000000000042d04	mov	x0, x20
0000000000042d08	bl	0x4dc7c ; symbol stub for: _objc_enumerationMutation
0000000000042d0c	ldr	x8, [sp, #0x98]
0000000000042d10	ldr	x2, [x8, x28, lsl #3]
0000000000042d14	mov	x0, x20
0000000000042d18	mov	x1, x23
0000000000042d1c	bl	0x4dcb8 ; Objc message: -[x0 countByEnumeratingWithState:objects:count:]
0000000000042d20	mov	x1, x24
0000000000042d24	mov	x2, x21
0000000000042d28	bl	0x4dcb8 ; Objc message: -[x0 countByEnumeratingWithState:objects:count:]
0000000000042d2c	tbnz	w0, #0x0, 0x42d70
0000000000042d30	add	x28, x28, #0x1
0000000000042d34	cmp	x26, x28
0000000000042d38	b.ne	0x42cf4
0000000000042d3c	add	x2, sp, #0x90
0000000000042d40	add	x3, sp, #0x10
0000000000042d44	mov	x0, x20
0000000000042d48	mov	x1, x22
0000000000042d4c	mov	w4, #0x10
0000000000042d50	bl	0x4dcb8 ; Objc message: -[x0 countByEnumeratingWithState:objects:count:]
0000000000042d54	adrp	x8, 36 ; 0x66000
0000000000042d58	adrp	x9, 36 ; 0x66000
0000000000042d5c	cbnz	x0, 0x42ce0
0000000000042d60	mov	w20, #0x0
0000000000042d64	ldr	x23, [sp, #0x8]
0000000000042d68	cbnz	x23, 0x42d88
0000000000042d6c	b	0x42db8
0000000000042d70	mov	w20, #0x1
0000000000042d74	ldr	x23, [sp, #0x8]
0000000000042d78	cbnz	x23, 0x42d88
0000000000042d7c	b	0x42db8
0000000000042d80	mov	w20, #0x0
0000000000042d84	cbz	x23, 0x42db8
0000000000042d88	ldaxr	w8, [x19]
0000000000042d8c	stlxr	w9, w25, [x19]
0000000000042d90	cbnz	w9, 0x42d88
0000000000042d94	cbnz	w25, 0x42db8
0000000000042d98	cmp	w8, #0x1
0000000000042d9c	b.ne	0x42db8
0000000000042da0	adr	x8, #0x3faa3
0000000000042da4	nop
0000000000042da8	ldarb	w8, [x8]
0000000000042dac	tbz	w8, #0x0, 0x42db8
0000000000042db0	mov	x0, x19
0000000000042db4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000042db8	mov	x0, x20
0000000000042dbc	ldp	x29, x30, [sp, #0x130]
0000000000042dc0	ldp	x20, x19, [sp, #0x120]
0000000000042dc4	ldp	x22, x21, [sp, #0x110]
0000000000042dc8	ldp	x24, x23, [sp, #0x100]
0000000000042dcc	ldp	x26, x25, [sp, #0xf0]
0000000000042dd0	ldp	x28, x27, [sp, #0xe0]
0000000000042dd4	add	sp, sp, #0x140
0000000000042dd8	ret
0000000000042ddc	b	0x42de8
0000000000042de0	str	x23, [sp, #0x8]
0000000000042de4	b	0x42de8
0000000000042de8	mov	x20, x0
0000000000042dec	ldr	x8, [sp, #0x8]
0000000000042df0	cbnz	x8, 0x42dfc
0000000000042df4	mov	x0, x20
0000000000042df8	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
0000000000042dfc	ldaxr	w8, [x19]
0000000000042e00	stlxr	w9, w25, [x19]
0000000000042e04	cbnz	w9, 0x42dfc
0000000000042e08	cbnz	w25, 0x42df4
0000000000042e0c	cmp	w8, #0x1
0000000000042e10	b.ne	0x42df4
0000000000042e14	adr	x8, #0x3fa2f
0000000000042e18	nop
0000000000042e1c	ldarb	w8, [x8]
0000000000042e20	tbz	w8, #0x0, 0x42df4
0000000000042e24	mov	x0, x19
0000000000042e28	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000042e2c	mov	x0, x20
0000000000042e30	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
_Kotlin_NSDictionaryAsKMap_get:
0000000000042e34	stp	x26, x25, [sp, #-0x50]!
0000000000042e38	stp	x24, x23, [sp, #0x10]
0000000000042e3c	stp	x22, x21, [sp, #0x20]
0000000000042e40	stp	x20, x19, [sp, #0x30]
0000000000042e44	stp	x29, x30, [sp, #0x40]
0000000000042e48	add	x29, sp, #0x40
0000000000042e4c	mov	x19, x2
0000000000042e50	ldar	x8, [x0]
0000000000042e54	and	x8, x8, #0xfffffffffffffffc
0000000000042e58	ldr	x9, [x8]
0000000000042e5c	cmp	x8, #0x0
0000000000042e60	ccmp	x9, x8, #0x4, ne
0000000000042e64	b.ne	0x42e84
0000000000042e68	mov	x21, #0x0
0000000000042e6c	adrp	x22, 36 ; 0x66000
0000000000042e70	adrp	x23, 36 ; 0x66000
0000000000042e74	cbz	x1, 0x42e98
0000000000042e78	mov	x0, x1
0000000000042e7c	bl	_Kotlin_ObjCExport_refToObjC
0000000000042e80	b	0x42ea4
0000000000042e84	add	x8, x8, #0x10
0000000000042e88	ldar	x21, [x8]
0000000000042e8c	adrp	x22, 36 ; 0x66000
0000000000042e90	adrp	x23, 36 ; 0x66000
0000000000042e94	cbnz	x1, 0x42e78
0000000000042e98	ldr	x0, [x22, #0x720]
0000000000042e9c	ldr	x1, [x23, #0x5c0]
0000000000042ea0	bl	0x4dcb8 ; Objc message: -[x0 countByEnumeratingWithState:objects:count:]
0000000000042ea4	mov	x2, x0
0000000000042ea8	adrp	x0, 38 ; 0x68000
0000000000042eac	add	x0, x0, #0xa00
0000000000042eb0	ldr	x8, [x0]
0000000000042eb4	blr	x8
0000000000042eb8	ldr	x25, [x0]
0000000000042ebc	add	x20, x25, #0x138
0000000000042ec0	mov	w8, #0x1
0000000000042ec4	ldaxr	w24, [x20]
0000000000042ec8	stlxr	w9, w8, [x20]
0000000000042ecc	cbnz	w9, 0x42ec4
0000000000042ed0	nop
0000000000042ed4	ldr	x1, #0x23714 ; Objc selector ref: objectForKey:
0000000000042ed8	mov	x0, x21
0000000000042edc	bl	0x4dcb8 ; Objc message: -[x0 objectForKey:]
0000000000042ee0	mov	x21, x0
0000000000042ee4	cbz	x25, 0x42f18
0000000000042ee8	ldaxr	w8, [x20]
0000000000042eec	stlxr	w9, w24, [x20]
0000000000042ef0	cbnz	w9, 0x42ee8
0000000000042ef4	cbnz	w24, 0x42f18
0000000000042ef8	cmp	w8, #0x1
0000000000042efc	b.ne	0x42f18
0000000000042f00	adr	x8, #0x3f943
0000000000042f04	nop
0000000000042f08	ldarb	w8, [x8]
0000000000042f0c	tbz	w8, #0x0, 0x42f18
0000000000042f10	mov	x0, x20
0000000000042f14	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000042f18	ldr	x0, [x22, #0x720]
0000000000042f1c	ldr	x1, [x23, #0x5c0]
0000000000042f20	bl	0x4dcb8 ; Objc message: -[x0 objectForKey:]
0000000000042f24	cmp	x21, x0
0000000000042f28	b.eq	0x42f58
0000000000042f2c	cbz	x21, 0x42f58
0000000000042f30	nop
0000000000042f34	ldr	x1, #0x3fb64
0000000000042f38	mov	x0, x21
0000000000042f3c	mov	x2, x19
0000000000042f40	ldp	x29, x30, [sp, #0x40]
0000000000042f44	ldp	x20, x19, [sp, #0x30]
0000000000042f48	ldp	x22, x21, [sp, #0x20]
0000000000042f4c	ldp	x24, x23, [sp, #0x10]
0000000000042f50	ldp	x26, x25, [sp], #0x50
0000000000042f54	b	0x4dcb8 ; Objc message: -[x0 objectForKey:]
0000000000042f58	str	xzr, [x19]
0000000000042f5c	mov	x0, #0x0
0000000000042f60	ldp	x29, x30, [sp, #0x40]
0000000000042f64	ldp	x20, x19, [sp, #0x30]
0000000000042f68	ldp	x22, x21, [sp, #0x20]
0000000000042f6c	ldp	x24, x23, [sp, #0x10]
0000000000042f70	ldp	x26, x25, [sp], #0x50
0000000000042f74	ret
0000000000042f78	mov	x19, x0
0000000000042f7c	cbz	x25, 0x42fb0
0000000000042f80	ldaxr	w8, [x20]
0000000000042f84	stlxr	w9, w24, [x20]
0000000000042f88	cbnz	w9, 0x42f80
0000000000042f8c	cbnz	w24, 0x42fb0
0000000000042f90	cmp	w8, #0x1
0000000000042f94	b.ne	0x42fb0
0000000000042f98	adr	x8, #0x3f8ab
0000000000042f9c	nop
0000000000042fa0	ldarb	w8, [x8]
0000000000042fa4	tbz	w8, #0x0, 0x42fb0
0000000000042fa8	mov	x0, x20
0000000000042fac	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000042fb0	mov	x0, x19
0000000000042fb4	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
_Kotlin_NSDictionaryAsKMap_getOrThrowConcurrentModification:
0000000000042fb8	sub	sp, sp, #0x80
0000000000042fbc	stp	x28, x27, [sp, #0x20]
0000000000042fc0	stp	x26, x25, [sp, #0x30]
0000000000042fc4	stp	x24, x23, [sp, #0x40]
0000000000042fc8	stp	x22, x21, [sp, #0x50]
0000000000042fcc	stp	x20, x19, [sp, #0x60]
0000000000042fd0	stp	x29, x30, [sp, #0x70]
0000000000042fd4	add	x29, sp, #0x70
0000000000042fd8	mov	x20, x2
0000000000042fdc	ldar	x8, [x0]
0000000000042fe0	and	x8, x8, #0xfffffffffffffffc
0000000000042fe4	ldr	x9, [x8]
0000000000042fe8	cmp	x8, #0x0
0000000000042fec	ccmp	x9, x8, #0x4, ne
0000000000042ff0	b.ne	0x43010
0000000000042ff4	mov	x22, #0x0
0000000000042ff8	adrp	x24, 36 ; 0x66000
0000000000042ffc	adrp	x25, 36 ; 0x66000
0000000000043000	cbz	x1, 0x43024
0000000000043004	mov	x0, x1
0000000000043008	bl	_Kotlin_ObjCExport_refToObjC
000000000004300c	b	0x43030
0000000000043010	add	x8, x8, #0x10
0000000000043014	ldar	x22, [x8]
0000000000043018	adrp	x24, 35 ; 0x66000
000000000004301c	adrp	x25, 35 ; 0x66000
0000000000043020	cbnz	x1, 0x43004
0000000000043024	ldr	x0, [x24, #0x720]
0000000000043028	ldr	x1, [x25, #0x5c0]
000000000004302c	bl	0x4dcb8 ; Objc message: -[x0 objectForKey:]
0000000000043030	mov	x2, x0
0000000000043034	adrp	x19, 37 ; 0x68000
0000000000043038	add	x19, x19, #0xa00
000000000004303c	ldr	x23, [x19]
0000000000043040	mov	x0, x19
0000000000043044	blr	x23
0000000000043048	ldr	x27, [x0]
000000000004304c	add	x21, x27, #0x138
0000000000043050	mov	w8, #0x1
0000000000043054	ldaxr	w26, [x21]
0000000000043058	stlxr	w9, w8, [x21]
000000000004305c	cbnz	w9, 0x43054
0000000000043060	nop
0000000000043064	ldr	x1, #0x23584 ; Objc selector ref: objectForKey:
0000000000043068	mov	x0, x22
000000000004306c	bl	0x4dcb8 ; Objc message: -[x0 objectForKey:]
0000000000043070	mov	x22, x0
0000000000043074	cbz	x27, 0x430a8
0000000000043078	ldaxr	w8, [x21]
000000000004307c	stlxr	w9, w26, [x21]
0000000000043080	cbnz	w9, 0x43078
0000000000043084	cbnz	w26, 0x430a8
0000000000043088	cmp	w8, #0x1
000000000004308c	b.ne	0x430a8
0000000000043090	adr	x8, #0x3f7b3
0000000000043094	nop
0000000000043098	ldarb	w8, [x8]
000000000004309c	tbz	w8, #0x0, 0x430a8
00000000000430a0	mov	x0, x21
00000000000430a4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000430a8	cbz	x22, 0x43118
00000000000430ac	ldr	x0, [x24, #0x720]
00000000000430b0	ldr	x1, [x25, #0x5c0]
00000000000430b4	bl	0x4dcb8 ; Objc message: -[x0 objectForKey:]
00000000000430b8	cmp	x22, x0
00000000000430bc	b.eq	0x430f0
00000000000430c0	nop
00000000000430c4	ldr	x1, #0x3f9d4
00000000000430c8	mov	x0, x22
00000000000430cc	mov	x2, x20
00000000000430d0	ldp	x29, x30, [sp, #0x70]
00000000000430d4	ldp	x20, x19, [sp, #0x60]
00000000000430d8	ldp	x22, x21, [sp, #0x50]
00000000000430dc	ldp	x24, x23, [sp, #0x40]
00000000000430e0	ldp	x26, x25, [sp, #0x30]
00000000000430e4	ldp	x28, x27, [sp, #0x20]
00000000000430e8	add	sp, sp, #0x80
00000000000430ec	b	0x4dcb8 ; Objc message: -[x0 objectForKey:]
00000000000430f0	str	xzr, [x20]
00000000000430f4	mov	x0, #0x0
00000000000430f8	ldp	x29, x30, [sp, #0x70]
00000000000430fc	ldp	x20, x19, [sp, #0x60]
0000000000043100	ldp	x22, x21, [sp, #0x50]
0000000000043104	ldp	x24, x23, [sp, #0x40]
0000000000043108	ldp	x26, x25, [sp, #0x30]
000000000004310c	ldp	x28, x27, [sp, #0x20]
0000000000043110	add	sp, sp, #0x80
0000000000043114	ret
0000000000043118	movi.16b	v0, #0x0
000000000004311c	stp	q0, q0, [sp]
0000000000043120	mov	x0, x19
0000000000043124	blr	x23
0000000000043128	ldr	x8, [x0]
000000000004312c	ldr	x9, [x8, #0x110]
0000000000043130	mov	x10, sp
0000000000043134	str	x10, [x8, #0x110]
0000000000043138	mov	x8, #0x400000000
000000000004313c	stp	x9, x8, [sp, #0x8]
0000000000043140	adr	x21, #0x3f703
0000000000043144	nop
0000000000043148	ldarb	w8, [x21]
000000000004314c	tbz	w8, #0x0, 0x43154
0000000000043150	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000043154	mov	x0, x19
0000000000043158	blr	x23
000000000004315c	ldr	x8, [x0]
0000000000043160	ldr	x8, [x8, #0x118]
0000000000043164	add	x0, x8, #0x70
0000000000043168	mov	w1, #0x38
000000000004316c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000043170	mov	x20, x0
0000000000043174	adr	x8, #0x11cec
0000000000043178	nop
000000000004317c	str	x8, [x20, #0x10]!
0000000000043180	stur	xzr, [x20, #-0x8]
0000000000043184	str	x20, [sp, #0x18]
0000000000043188	adr	x1, #0x1e5d8
000000000004318c	nop
0000000000043190	mov	x0, x20
0000000000043194	bl	"_kfun:kotlin.Throwable#<init>(kotlin.String?;kotlin.Throwable?){}"
0000000000043198	ldarb	w8, [x21]
000000000004319c	tbz	w8, #0x0, 0x431a4
00000000000431a0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000431a4	mov	x0, x20
00000000000431a8	bl	_ThrowException
00000000000431ac	brk	#0x1
00000000000431b0	mov	x20, x0
00000000000431b4	mov	x0, x19
00000000000431b8	blr	x23
00000000000431bc	ldr	x8, [x0]
00000000000431c0	ldr	x9, [sp, #0x8]
00000000000431c4	str	x9, [x8, #0x110]
00000000000431c8	mov	x0, x20
00000000000431cc	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
00000000000431d0	mov	x20, x0
00000000000431d4	cbnz	x27, 0x431e0
00000000000431d8	mov	x0, x20
00000000000431dc	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
00000000000431e0	ldaxr	w8, [x21]
00000000000431e4	stlxr	w9, w26, [x21]
00000000000431e8	cbnz	w9, 0x431e0
00000000000431ec	cbnz	w26, 0x431d8
00000000000431f0	cmp	w8, #0x1
00000000000431f4	b.ne	0x431d8
00000000000431f8	adr	x8, #0x3f64b
00000000000431fc	nop
0000000000043200	ldarb	w8, [x8]
0000000000043204	tbz	w8, #0x0, 0x431d8
0000000000043208	mov	x0, x21
000000000004320c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000043210	mov	x0, x20
0000000000043214	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
_Kotlin_NSDictionaryAsKMap_containsEntry:
0000000000043218	stp	x24, x23, [sp, #-0x40]!
000000000004321c	stp	x22, x21, [sp, #0x10]
0000000000043220	stp	x20, x19, [sp, #0x20]
0000000000043224	stp	x29, x30, [sp, #0x30]
0000000000043228	add	x29, sp, #0x30
000000000004322c	mov	x19, x1
0000000000043230	ldar	x8, [x0]
0000000000043234	and	x8, x8, #0xfffffffffffffffc
0000000000043238	ldr	x9, [x8]
000000000004323c	cmp	x8, #0x0
0000000000043240	ccmp	x9, x8, #0x4, ne
0000000000043244	b.ne	0x4326c
0000000000043248	mov	x20, #0x0
000000000004324c	cbz	x2, 0x43278
0000000000043250	mov	x0, x2
0000000000043254	bl	_Kotlin_ObjCExport_refToObjC
0000000000043258	mov	x21, x0
000000000004325c	cbz	x19, 0x43294
0000000000043260	mov	x0, x19
0000000000043264	bl	_Kotlin_ObjCExport_refToObjC
0000000000043268	b	0x432a8
000000000004326c	add	x8, x8, #0x10
0000000000043270	ldar	x20, [x8]
0000000000043274	cbnz	x2, 0x43250
0000000000043278	nop
000000000004327c	ldr	x0, #0x234a4 ; Objc class ref: _OBJC_CLASS_$_NSNull
0000000000043280	nop
0000000000043284	ldr	x1, #0x2333c ; Objc selector ref: null
0000000000043288	bl	0x4dcb8 ; Objc message: +[NSNull null]
000000000004328c	mov	x21, x0
0000000000043290	cbnz	x19, 0x43260
0000000000043294	nop
0000000000043298	ldr	x0, #0x23488 ; Objc class ref: _OBJC_CLASS_$_NSNull
000000000004329c	nop
00000000000432a0	ldr	x1, #0x23320 ; Objc selector ref: null
00000000000432a4	bl	0x4dcb8 ; Objc message: +[NSNull null]
00000000000432a8	mov	x2, x0
00000000000432ac	adrp	x0, 37 ; 0x68000
00000000000432b0	add	x0, x0, #0xa00
00000000000432b4	ldr	x8, [x0]
00000000000432b8	blr	x8
00000000000432bc	ldr	x23, [x0]
00000000000432c0	add	x19, x23, #0x138
00000000000432c4	mov	w8, #0x1
00000000000432c8	ldaxr	w22, [x19]
00000000000432cc	stlxr	w9, w8, [x19]
00000000000432d0	cbnz	w9, 0x432c8
00000000000432d4	nop
00000000000432d8	ldr	x1, #0x23310 ; Objc selector ref: objectForKey:
00000000000432dc	mov	x0, x20
00000000000432e0	bl	0x4dcb8 ; Objc message: -[x0 objectForKey:]
00000000000432e4	mov	x2, x0
00000000000432e8	nop
00000000000432ec	ldr	x1, #0x23284 ; Objc selector ref: isEqual:
00000000000432f0	mov	x0, x21
00000000000432f4	bl	0x4dcb8 ; Objc message: -[x0 isEqual:]
00000000000432f8	mov	x20, x0
00000000000432fc	cbz	x23, 0x43330
0000000000043300	ldaxr	w8, [x19]
0000000000043304	stlxr	w9, w22, [x19]
0000000000043308	cbnz	w9, 0x43300
000000000004330c	cbnz	w22, 0x43330
0000000000043310	cmp	w8, #0x1
0000000000043314	b.ne	0x43330
0000000000043318	adr	x8, #0x3f52b
000000000004331c	nop
0000000000043320	ldarb	w8, [x8]
0000000000043324	tbz	w8, #0x0, 0x43330
0000000000043328	mov	x0, x19
000000000004332c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000043330	mov	x0, x20
0000000000043334	ldp	x29, x30, [sp, #0x30]
0000000000043338	ldp	x20, x19, [sp, #0x20]
000000000004333c	ldp	x22, x21, [sp, #0x10]
0000000000043340	ldp	x24, x23, [sp], #0x40
0000000000043344	ret
0000000000043348	mov	x20, x0
000000000004334c	cbz	x23, 0x43380
0000000000043350	ldaxr	w8, [x19]
0000000000043354	stlxr	w9, w22, [x19]
0000000000043358	cbnz	w9, 0x43350
000000000004335c	cbnz	w22, 0x43380
0000000000043360	cmp	w8, #0x1
0000000000043364	b.ne	0x43380
0000000000043368	adr	x8, #0x3f4db
000000000004336c	nop
0000000000043370	ldarb	w8, [x8]
0000000000043374	tbz	w8, #0x0, 0x43380
0000000000043378	mov	x0, x19
000000000004337c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000043380	mov	x0, x20
0000000000043384	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
_Kotlin_ObjCExport_trapOnUndeclaredException:
0000000000043388	stp	x20, x19, [sp, #-0x20]!
000000000004338c	stp	x29, x30, [sp, #0x10]
0000000000043390	add	x29, sp, #0x10
0000000000043394	mov	x19, x0
0000000000043398	bl	__ZL14printlnMessagePKc
000000000004339c	mov	x0, x19
00000000000433a0	bl	__ZN6kotlin25ProcessUnhandledExceptionEP9ObjHeader
00000000000433a4	mov	x0, x19
00000000000433a8	bl	__ZN6kotlin31TerminateWithUnhandledExceptionEP9ObjHeader
__ZL14printlnMessagePKc:
00000000000433ac	sub	sp, sp, #0x20
00000000000433b0	stp	x29, x30, [sp, #0x10]
00000000000433b4	add	x29, sp, #0x10
00000000000433b8	adr	x8, #0xf807 ; literal pool for: "Function doesn't have or inherit @Throws annotation and thus exception isn't propagated from Kotlin to Objective-C/Swift as NSError.\nIt is considered unexpected and unhandled instead. Program will be terminated."
00000000000433bc	nop
00000000000433c0	str	x8, [sp]
00000000000433c4	adr	x0, #0xf8cf ; literal pool for: "%s\n"
00000000000433c8	nop
00000000000433cc	bl	__ZN5konan13consolePrintfEPKcz
00000000000433d0	ldp	x29, x30, [sp, #0x10]
00000000000433d4	add	sp, sp, #0x20
00000000000433d8	ret
_Kotlin_Interop_CreateKStringFromNSString:
00000000000433dc	stp	x22, x21, [sp, #-0x30]!
00000000000433e0	stp	x20, x19, [sp, #0x10]
00000000000433e4	stp	x29, x30, [sp, #0x20]
00000000000433e8	add	x29, sp, #0x20
00000000000433ec	mov	x19, x1
00000000000433f0	cbz	x0, 0x434ac
00000000000433f4	mov	x1, x0
00000000000433f8	mov	x0, #0x0
00000000000433fc	bl	0x4d898 ; symbol stub for: _CFStringCreateCopy
0000000000043400	mov	x20, x0
0000000000043404	bl	0x4d8b0 ; symbol stub for: _CFStringGetLength
0000000000043408	mov	x22, x0
000000000004340c	tbnz	w22, #0x1f, 0x434c8
0000000000043410	adrp	x0, 37 ; 0x68000
0000000000043414	add	x0, x0, #0xa00
0000000000043418	ldr	x8, [x0]
000000000004341c	blr	x8
0000000000043420	ldr	x8, [x0]
0000000000043424	ldr	x8, [x8, #0x118]
0000000000043428	ubfiz	x9, x22, #1, #32
000000000004342c	add	x9, x9, #0x1f
0000000000043430	and	x1, x9, #0x3fffffff8
0000000000043434	add	x0, x8, #0x70
0000000000043438	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000004343c	mov	x21, x0
0000000000043440	adr	x8, #0x122a0
0000000000043444	nop
0000000000043448	stp	x8, xzr, [x21, #0x10]!
000000000004344c	stur	xzr, [x21, #-0x8]
0000000000043450	str	w22, [x21, #0x8]
0000000000043454	str	x21, [x19]
0000000000043458	add	x3, x21, #0x10
000000000004345c	mov	x0, x20
0000000000043460	mov	x1, #0x0
0000000000043464	mov	x2, x22
0000000000043468	bl	0x4d8a4 ; symbol stub for: _CFStringGetCharacters
000000000004346c	ldar	x8, [x21]
0000000000043470	and	x8, x8, #0xfffffffffffffffc
0000000000043474	ldr	x9, [x8]
0000000000043478	cmp	x9, x8
000000000004347c	csel	x0, xzr, x8, eq
0000000000043480	cbnz	x0, 0x4348c
0000000000043484	mov	x0, x21
0000000000043488	bl	__ZN6kotlin2mm15ExtraObjectData7InstallEP9ObjHeader
000000000004348c	add	x8, x0, #0x10
0000000000043490	stlr	x20, [x8]
0000000000043494	str	x21, [x19]
0000000000043498	mov	x0, x21
000000000004349c	ldp	x29, x30, [sp, #0x20]
00000000000434a0	ldp	x20, x19, [sp, #0x10]
00000000000434a4	ldp	x22, x21, [sp], #0x30
00000000000434a8	ret
00000000000434ac	mov	x21, #0x0
00000000000434b0	str	x21, [x19]
00000000000434b4	mov	x0, x21
00000000000434b8	ldp	x29, x30, [sp, #0x20]
00000000000434bc	ldp	x20, x19, [sp, #0x10]
00000000000434c0	ldp	x22, x21, [sp], #0x30
00000000000434c4	ret
00000000000434c8	bl	_ThrowIllegalArgumentException
_Kotlin_io_Console_print:
00000000000434cc	sub	sp, sp, #0x60
00000000000434d0	stp	x24, x23, [sp, #0x20]
00000000000434d4	stp	x22, x21, [sp, #0x30]
00000000000434d8	stp	x20, x19, [sp, #0x40]
00000000000434dc	stp	x29, x30, [sp, #0x50]
00000000000434e0	add	x29, sp, #0x50
00000000000434e4	mov	x19, x0
00000000000434e8	ldr	x8, [x0]
00000000000434ec	and	x8, x8, #0xfffffffffffffffc
00000000000434f0	ldr	x8, [x8]
00000000000434f4	adr	x9, #0x121ec
00000000000434f8	nop
00000000000434fc	cmp	x8, x9
0000000000043500	b.ne	0x436a8
0000000000043504	stp	xzr, xzr, [sp, #0x8]
0000000000043508	str	xzr, [sp, #0x18]
000000000004350c	ldr	w8, [x19, #0x8]
0000000000043510	cmp	w8, #0x17
0000000000043514	b.lo	0x43540
0000000000043518	add	x8, x8, #0x10
000000000004351c	and	x20, x8, #0x1fffffff0
0000000000043520	mov	x0, x20
0000000000043524	mov	w1, #0x1
0000000000043528	bl	0x4db20 ; symbol stub for: _calloc
000000000004352c	ldrb	w8, [sp, #0x8]
0000000000043530	strb	w8, [x0]
0000000000043534	orr	x8, x20, #0x8000000000000000
0000000000043538	stp	xzr, x8, [sp, #0x10]
000000000004353c	str	x0, [sp, #0x8]
0000000000043540	ldr	w8, [x19, #0x8]
0000000000043544	lsl	x8, x8, #1
0000000000043548	cbz	x8, 0x435e4
000000000004354c	add	x24, x19, #0x10
0000000000043550	add	x19, x24, x8
0000000000043554	mov	w20, #0xd800
0000000000043558	mov	w21, #0x2400
000000000004355c	movk	w21, #0xfca0, lsl #16
0000000000043560	mov	w22, #0xdc00
0000000000043564	mov	w23, #0xfffd
0000000000043568	b	0x43588
000000000004356c	cmp	w10, w22
0000000000043570	csel	w0, w23, w9, eq
0000000000043574	mov	x24, x8
0000000000043578	add	x1, sp, #0x8
000000000004357c	bl	__ZN4utf89unchecked6appendINSt3__120back_insert_iteratorINS2_12basic_stringIcNS2_11char_traitsIcEEN6kotlin11std_support9allocatorIcEEEEEEEET_jSD_
0000000000043580	cmp	x24, x19
0000000000043584	b.eq	0x435e4
0000000000043588	mov	x8, x24
000000000004358c	ldrh	w9, [x8], #0x2
0000000000043590	and	w10, w9, #0xfc00
0000000000043594	cmp	w10, w20
0000000000043598	b.ne	0x4356c
000000000004359c	cmp	x8, x19
00000000000435a0	b.eq	0x435d8
00000000000435a4	ldrh	w10, [x24, #0x2]
00000000000435a8	and	w11, w10, #0xfc00
00000000000435ac	add	w9, w10, w9, lsl #10
00000000000435b0	add	w9, w9, w21
00000000000435b4	add	x10, x24, #0x4
00000000000435b8	cmp	w11, w22
00000000000435bc	csel	w0, w9, w23, eq
00000000000435c0	csel	x24, x10, x8, eq
00000000000435c4	add	x1, sp, #0x8
00000000000435c8	bl	__ZN4utf89unchecked6appendINSt3__120back_insert_iteratorINS2_12basic_stringIcNS2_11char_traitsIcEEN6kotlin11std_support9allocatorIcEEEEEEEET_jSD_
00000000000435cc	cmp	x24, x19
00000000000435d0	b.ne	0x43588
00000000000435d4	b	0x435e4
00000000000435d8	add	x1, sp, #0x8
00000000000435dc	mov	w0, #0xfffd
00000000000435e0	bl	__ZN4utf89unchecked6appendINSt3__120back_insert_iteratorINS2_12basic_stringIcNS2_11char_traitsIcEEN6kotlin11std_support9allocatorIcEEEEEEEET_jSD_
00000000000435e4	adrp	x0, 37 ; 0x68000
00000000000435e8	add	x0, x0, #0xa00
00000000000435ec	ldr	x8, [x0]
00000000000435f0	blr	x8
00000000000435f4	ldr	x22, [x0]
00000000000435f8	add	x19, x22, #0x138
00000000000435fc	mov	w8, #0x1
0000000000043600	ldaxr	w21, [x19]
0000000000043604	stlxr	w9, w8, [x19]
0000000000043608	cbnz	w9, 0x43600
000000000004360c	ldrb	w8, [sp, #0x1f]
0000000000043610	sxtb	w9, w8
0000000000043614	ldp	x10, x11, [sp, #0x8]
0000000000043618	cmp	w9, #0x0
000000000004361c	add	x9, sp, #0x8
0000000000043620	csel	x1, x10, x9, lt
0000000000043624	csel	x8, x11, x8, lt
0000000000043628	and	x2, x8, #0xffffffff
000000000004362c	mov	w0, #0x1
0000000000043630	bl	0x4dee0 ; symbol stub for: _write
0000000000043634	cbz	x22, 0x43668
0000000000043638	ldaxr	w8, [x19]
000000000004363c	stlxr	w9, w21, [x19]
0000000000043640	cbnz	w9, 0x43638
0000000000043644	cbnz	w21, 0x43668
0000000000043648	cmp	w8, #0x1
000000000004364c	b.ne	0x43668
0000000000043650	adr	x8, #0x3f1f3
0000000000043654	nop
0000000000043658	ldarb	w8, [x8]
000000000004365c	tbz	w8, #0x0, 0x43668
0000000000043660	mov	x0, x19
0000000000043664	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000043668	ldrsb	w8, [sp, #0x1f]
000000000004366c	tbnz	w8, #0x1f, 0x43688
0000000000043670	ldp	x29, x30, [sp, #0x50]
0000000000043674	ldp	x20, x19, [sp, #0x40]
0000000000043678	ldp	x22, x21, [sp, #0x30]
000000000004367c	ldp	x24, x23, [sp, #0x20]
0000000000043680	add	sp, sp, #0x60
0000000000043684	ret
0000000000043688	ldr	x0, [sp, #0x8]
000000000004368c	bl	0x4dba4 ; symbol stub for: _free
0000000000043690	ldp	x29, x30, [sp, #0x50]
0000000000043694	ldp	x20, x19, [sp, #0x40]
0000000000043698	ldp	x22, x21, [sp, #0x30]
000000000004369c	ldp	x24, x23, [sp, #0x20]
00000000000436a0	add	sp, sp, #0x60
00000000000436a4	ret
00000000000436a8	adr	x1, #0x12038
00000000000436ac	nop
00000000000436b0	mov	x0, x19
00000000000436b4	bl	_ThrowClassCastException
00000000000436b8	mov	x20, x0
00000000000436bc	cbz	x22, 0x436f0
00000000000436c0	ldaxr	w8, [x19]
00000000000436c4	stlxr	w9, w21, [x19]
00000000000436c8	cbnz	w9, 0x436c0
00000000000436cc	cbnz	w21, 0x436f0
00000000000436d0	cmp	w8, #0x1
00000000000436d4	b.ne	0x436f0
00000000000436d8	adr	x8, #0x3f16b
00000000000436dc	nop
00000000000436e0	ldarb	w8, [x8]
00000000000436e4	tbz	w8, #0x0, 0x436f0
00000000000436e8	mov	x0, x19
00000000000436ec	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000436f0	ldrsb	w8, [sp, #0x1f]
00000000000436f4	tbz	w8, #0x1f, 0x43700
00000000000436f8	ldr	x0, [sp, #0x8]
00000000000436fc	bl	0x4dba4 ; symbol stub for: _free
0000000000043700	mov	x0, x20
0000000000043704	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
__ZN4utf89unchecked6appendINSt3__120back_insert_iteratorINS2_12basic_stringIcNS2_11char_traitsIcEEN6kotlin11std_support9allocatorIcEEEEEEEET_jSD_:
0000000000043708	stp	x26, x25, [sp, #-0x50]!
000000000004370c	stp	x24, x23, [sp, #0x10]
0000000000043710	stp	x22, x21, [sp, #0x20]
0000000000043714	stp	x20, x19, [sp, #0x30]
0000000000043718	stp	x29, x30, [sp, #0x40]
000000000004371c	add	x29, sp, #0x40
0000000000043720	mov	x19, x1
0000000000043724	mov	x20, x0
0000000000043728	cmp	w0, #0x7f
000000000004372c	b.hi	0x43750
0000000000043730	ldrsb	w8, [x19, #0x17]
0000000000043734	tbnz	w8, #0x1f, 0x437dc
0000000000043738	and	w9, w8, #0xff
000000000004373c	cmp	w9, #0x16
0000000000043740	b.ne	0x4386c
0000000000043744	mov	w21, #0x16
0000000000043748	mov	x22, x19
000000000004374c	b	0x43804
0000000000043750	cmp	w20, #0x7ff
0000000000043754	b.hi	0x437ac
0000000000043758	lsr	w8, w20, #6
000000000004375c	orr	w25, w8, #0xffffffc0
0000000000043760	ldrsb	w8, [x19, #0x17]
0000000000043764	tbz	w8, #0x1f, 0x43ab4
0000000000043768	ldr	x8, [x19, #0x10]
000000000004376c	and	x8, x8, #0x7fffffffffffffff
0000000000043770	sub	x21, x8, #0x1
0000000000043774	ldp	x22, x8, [x19]
0000000000043778	cmp	x8, x21
000000000004377c	b.ne	0x438a8
0000000000043780	mov	x8, #-0x19
0000000000043784	movk	x8, #0x7fff, lsl #48
0000000000043788	cmp	x21, x8
000000000004378c	b.lo	0x43ac8
0000000000043790	mov	x23, #-0x11
0000000000043794	mov	x0, x23
0000000000043798	mov	w1, #0x1
000000000004379c	bl	0x4db20 ; symbol stub for: _calloc
00000000000437a0	mov	x24, x0
00000000000437a4	cbnz	x21, 0x43b00
00000000000437a8	b	0x43b18
00000000000437ac	lsr	w8, w20, #16
00000000000437b0	cbnz	w8, 0x43880
00000000000437b4	lsr	w8, w20, #12
00000000000437b8	orr	w25, w8, #0xffffffe0
00000000000437bc	ldrsb	w8, [x19, #0x17]
00000000000437c0	tbnz	w8, #0x1f, 0x439f8
00000000000437c4	and	w9, w8, #0xff
00000000000437c8	cmp	w9, #0x16
00000000000437cc	b.ne	0x439e4
00000000000437d0	mov	w21, #0x16
00000000000437d4	mov	x22, x19
00000000000437d8	b	0x43a20
00000000000437dc	ldr	x8, [x19, #0x10]
00000000000437e0	and	x8, x8, #0x7fffffffffffffff
00000000000437e4	sub	x21, x8, #0x1
00000000000437e8	ldp	x22, x8, [x19]
00000000000437ec	cmp	x8, x21
00000000000437f0	b.ne	0x438b4
00000000000437f4	mov	x8, #-0x19
00000000000437f8	movk	x8, #0x7fff, lsl #48
00000000000437fc	cmp	x21, x8
0000000000043800	b.hs	0x438d0
0000000000043804	add	x8, x21, #0x1
0000000000043808	lsl	x9, x21, #1
000000000004380c	cmp	x8, x9
0000000000043810	csinc	x8, x9, x21, lo
0000000000043814	add	x9, x8, #0x10
0000000000043818	and	x9, x9, #0xfffffffffffffff0
000000000004381c	cmp	x8, #0x17
0000000000043820	mov	w8, #0x17
0000000000043824	csel	x23, x8, x9, lo
0000000000043828	mov	x0, x23
000000000004382c	mov	w1, #0x1
0000000000043830	bl	0x4db20 ; symbol stub for: _calloc
0000000000043834	mov	x24, x0
0000000000043838	cbz	x21, 0x43854
000000000004383c	mov	x0, x24
0000000000043840	mov	x1, x22
0000000000043844	mov	x2, x21
0000000000043848	bl	0x4dbec ; symbol stub for: _memcpy
000000000004384c	cmp	x21, #0x16
0000000000043850	b.eq	0x4385c
0000000000043854	mov	x0, x22
0000000000043858	bl	0x4dba4 ; symbol stub for: _free
000000000004385c	str	x24, [x19]
0000000000043860	orr	x8, x23, #0x8000000000000000
0000000000043864	str	x8, [x19, #0x10]
0000000000043868	b	0x438bc
000000000004386c	and	x21, x8, #0xff
0000000000043870	add	w8, w9, #0x1
0000000000043874	strb	w8, [x19, #0x17]
0000000000043878	mov	x24, x19
000000000004387c	b	0x438c4
0000000000043880	lsr	w8, w20, #18
0000000000043884	orr	w25, w8, #0xfffffff0
0000000000043888	ldrsb	w8, [x19, #0x17]
000000000004388c	tbnz	w8, #0x1f, 0x438ec
0000000000043890	and	w9, w8, #0xff
0000000000043894	cmp	w9, #0x16
0000000000043898	b.ne	0x43968
000000000004389c	mov	w21, #0x16
00000000000438a0	mov	x22, x19
00000000000438a4	b	0x43914
00000000000438a8	mov	x21, x8
00000000000438ac	mov	x24, x22
00000000000438b0	b	0x43b2c
00000000000438b4	mov	x21, x8
00000000000438b8	mov	x24, x22
00000000000438bc	add	x8, x21, #0x1
00000000000438c0	str	x8, [x19, #0x8]
00000000000438c4	add	x8, x24, x21
00000000000438c8	strb	w20, [x8]
00000000000438cc	b	0x43c54
00000000000438d0	mov	x23, #-0x11
00000000000438d4	mov	x0, x23
00000000000438d8	mov	w1, #0x1
00000000000438dc	bl	0x4db20 ; symbol stub for: _calloc
00000000000438e0	mov	x24, x0
00000000000438e4	cbnz	x21, 0x4383c
00000000000438e8	b	0x43854
00000000000438ec	ldr	x8, [x19, #0x10]
00000000000438f0	and	x8, x8, #0x7fffffffffffffff
00000000000438f4	sub	x21, x8, #0x1
00000000000438f8	ldp	x22, x8, [x19]
00000000000438fc	cmp	x8, x21
0000000000043900	b.ne	0x4397c
0000000000043904	mov	x8, #-0x19
0000000000043908	movk	x8, #0x7fff, lsl #48
000000000004390c	cmp	x21, x8
0000000000043910	b.hs	0x43988
0000000000043914	add	x8, x21, #0x1
0000000000043918	lsl	x9, x21, #1
000000000004391c	cmp	x8, x9
0000000000043920	csinc	x8, x9, x21, lo
0000000000043924	add	x9, x8, #0x10
0000000000043928	and	x9, x9, #0xfffffffffffffff0
000000000004392c	cmp	x8, #0x17
0000000000043930	mov	w8, #0x17
0000000000043934	csel	x23, x8, x9, lo
0000000000043938	mov	x0, x23
000000000004393c	mov	w1, #0x1
0000000000043940	bl	0x4db20 ; symbol stub for: _calloc
0000000000043944	mov	x24, x0
0000000000043948	cbz	x21, 0x439a0
000000000004394c	mov	x0, x24
0000000000043950	mov	x1, x22
0000000000043954	mov	x2, x21
0000000000043958	bl	0x4dbec ; symbol stub for: _memcpy
000000000004395c	cmp	x21, #0x16
0000000000043960	b.ne	0x439a0
0000000000043964	b	0x439a8
0000000000043968	and	x21, x8, #0xff
000000000004396c	add	w8, w9, #0x1
0000000000043970	strb	w8, [x19, #0x17]
0000000000043974	mov	x24, x19
0000000000043978	b	0x439bc
000000000004397c	mov	x21, x8
0000000000043980	mov	x24, x22
0000000000043984	b	0x439b4
0000000000043988	mov	x23, #-0x11
000000000004398c	mov	x0, x23
0000000000043990	mov	w1, #0x1
0000000000043994	bl	0x4db20 ; symbol stub for: _calloc
0000000000043998	mov	x24, x0
000000000004399c	cbnz	x21, 0x4394c
00000000000439a0	mov	x0, x22
00000000000439a4	bl	0x4dba4 ; symbol stub for: _free
00000000000439a8	str	x24, [x19]
00000000000439ac	orr	x8, x23, #0x8000000000000000
00000000000439b0	str	x8, [x19, #0x10]
00000000000439b4	add	x8, x21, #0x1
00000000000439b8	str	x8, [x19, #0x8]
00000000000439bc	add	x8, x24, x21
00000000000439c0	strb	w25, [x8]
00000000000439c4	strb	wzr, [x8, #0x1]
00000000000439c8	mov	w25, #-0x80
00000000000439cc	bfxil	w25, w20, #12, #6
00000000000439d0	ldrsb	w8, [x19, #0x17]
00000000000439d4	tbnz	w8, #0x1f, 0x439f8
00000000000439d8	and	w9, w8, #0xff
00000000000439dc	cmp	w9, #0x16
00000000000439e0	b.eq	0x437d0
00000000000439e4	and	x21, x8, #0xff
00000000000439e8	add	w8, w9, #0x1
00000000000439ec	strb	w8, [x19, #0x17]
00000000000439f0	mov	x24, x19
00000000000439f4	b	0x43a98
00000000000439f8	ldr	x8, [x19, #0x10]
00000000000439fc	and	x8, x8, #0x7fffffffffffffff
0000000000043a00	sub	x21, x8, #0x1
0000000000043a04	ldp	x22, x8, [x19]
0000000000043a08	cmp	x8, x21
0000000000043a0c	b.ne	0x43a88
0000000000043a10	mov	x8, #-0x19
0000000000043a14	movk	x8, #0x7fff, lsl #48
0000000000043a18	cmp	x21, x8
0000000000043a1c	b.hs	0x43c74
0000000000043a20	add	x8, x21, #0x1
0000000000043a24	lsl	x9, x21, #1
0000000000043a28	cmp	x8, x9
0000000000043a2c	csinc	x8, x9, x21, lo
0000000000043a30	add	x9, x8, #0x10
0000000000043a34	and	x9, x9, #0xfffffffffffffff0
0000000000043a38	cmp	x8, #0x17
0000000000043a3c	mov	w8, #0x17
0000000000043a40	csel	x23, x8, x9, lo
0000000000043a44	mov	x0, x23
0000000000043a48	mov	w1, #0x1
0000000000043a4c	bl	0x4db20 ; symbol stub for: _calloc
0000000000043a50	mov	x24, x0
0000000000043a54	cbz	x21, 0x43a70
0000000000043a58	mov	x0, x24
0000000000043a5c	mov	x1, x22
0000000000043a60	mov	x2, x21
0000000000043a64	bl	0x4dbec ; symbol stub for: _memcpy
0000000000043a68	cmp	x21, #0x16
0000000000043a6c	b.eq	0x43a78
0000000000043a70	mov	x0, x22
0000000000043a74	bl	0x4dba4 ; symbol stub for: _free
0000000000043a78	str	x24, [x19]
0000000000043a7c	orr	x8, x23, #0x8000000000000000
0000000000043a80	str	x8, [x19, #0x10]
0000000000043a84	b	0x43a90
0000000000043a88	mov	x21, x8
0000000000043a8c	mov	x24, x22
0000000000043a90	add	x8, x21, #0x1
0000000000043a94	str	x8, [x19, #0x8]
0000000000043a98	add	x8, x24, x21
0000000000043a9c	strb	w25, [x8]
0000000000043aa0	strb	wzr, [x8, #0x1]
0000000000043aa4	mov	w25, #-0x80
0000000000043aa8	bfxil	w25, w20, #6, #6
0000000000043aac	ldrsb	w8, [x19, #0x17]
0000000000043ab0	tbnz	w8, #0x1f, 0x43768
0000000000043ab4	and	w9, w8, #0xff
0000000000043ab8	cmp	w9, #0x16
0000000000043abc	b.ne	0x43b38
0000000000043ac0	mov	w21, #0x16
0000000000043ac4	mov	x22, x19
0000000000043ac8	add	x8, x21, #0x1
0000000000043acc	lsl	x9, x21, #1
0000000000043ad0	cmp	x8, x9
0000000000043ad4	csinc	x8, x9, x21, lo
0000000000043ad8	add	x9, x8, #0x10
0000000000043adc	and	x9, x9, #0xfffffffffffffff0
0000000000043ae0	cmp	x8, #0x17
0000000000043ae4	mov	w8, #0x17
0000000000043ae8	csel	x23, x8, x9, lo
0000000000043aec	mov	x0, x23
0000000000043af0	mov	w1, #0x1
0000000000043af4	bl	0x4db20 ; symbol stub for: _calloc
0000000000043af8	mov	x24, x0
0000000000043afc	cbz	x21, 0x43b18
0000000000043b00	mov	x0, x24
0000000000043b04	mov	x1, x22
0000000000043b08	mov	x2, x21
0000000000043b0c	bl	0x4dbec ; symbol stub for: _memcpy
0000000000043b10	cmp	x21, #0x16
0000000000043b14	b.eq	0x43b20
0000000000043b18	mov	x0, x22
0000000000043b1c	bl	0x4dba4 ; symbol stub for: _free
0000000000043b20	str	x24, [x19]
0000000000043b24	orr	x8, x23, #0x8000000000000000
0000000000043b28	str	x8, [x19, #0x10]
0000000000043b2c	add	x8, x21, #0x1
0000000000043b30	str	x8, [x19, #0x8]
0000000000043b34	b	0x43b48
0000000000043b38	and	x21, x8, #0xff
0000000000043b3c	add	w8, w9, #0x1
0000000000043b40	strb	w8, [x19, #0x17]
0000000000043b44	mov	x24, x19
0000000000043b48	add	x8, x24, x21
0000000000043b4c	strb	w25, [x8]
0000000000043b50	strb	wzr, [x8, #0x1]
0000000000043b54	mov	w24, #-0x80
0000000000043b58	bfxil	w24, w20, #0, #6
0000000000043b5c	ldrsb	w8, [x19, #0x17]
0000000000043b60	tbnz	w8, #0x1f, 0x43b7c
0000000000043b64	and	w9, w8, #0xff
0000000000043b68	cmp	w9, #0x16
0000000000043b6c	b.ne	0x43be0
0000000000043b70	mov	w20, #0x16
0000000000043b74	mov	x21, x19
0000000000043b78	b	0x43ba4
0000000000043b7c	ldr	x8, [x19, #0x10]
0000000000043b80	and	x8, x8, #0x7fffffffffffffff
0000000000043b84	sub	x20, x8, #0x1
0000000000043b88	ldp	x21, x8, [x19]
0000000000043b8c	cmp	x8, x20
0000000000043b90	b.ne	0x43bf4
0000000000043b94	mov	x8, #-0x19
0000000000043b98	movk	x8, #0x7fff, lsl #48
0000000000043b9c	cmp	x20, x8
0000000000043ba0	b.hs	0x43c00
0000000000043ba4	add	x8, x20, #0x1
0000000000043ba8	lsl	x9, x20, #1
0000000000043bac	cmp	x8, x9
0000000000043bb0	csinc	x8, x9, x20, lo
0000000000043bb4	add	x9, x8, #0x10
0000000000043bb8	and	x9, x9, #0xfffffffffffffff0
0000000000043bbc	cmp	x8, #0x17
0000000000043bc0	mov	w8, #0x17
0000000000043bc4	csel	x22, x8, x9, lo
0000000000043bc8	mov	x0, x22
0000000000043bcc	mov	w1, #0x1
0000000000043bd0	bl	0x4db20 ; symbol stub for: _calloc
0000000000043bd4	mov	x23, x0
0000000000043bd8	cbnz	x20, 0x43c18
0000000000043bdc	b	0x43c30
0000000000043be0	and	x20, x8, #0xff
0000000000043be4	add	w8, w9, #0x1
0000000000043be8	strb	w8, [x19, #0x17]
0000000000043bec	mov	x23, x19
0000000000043bf0	b	0x43c4c
0000000000043bf4	mov	x20, x8
0000000000043bf8	mov	x23, x21
0000000000043bfc	b	0x43c44
0000000000043c00	mov	x22, #-0x11
0000000000043c04	mov	x0, x22
0000000000043c08	mov	w1, #0x1
0000000000043c0c	bl	0x4db20 ; symbol stub for: _calloc
0000000000043c10	mov	x23, x0
0000000000043c14	cbz	x20, 0x43c30
0000000000043c18	mov	x0, x23
0000000000043c1c	mov	x1, x21
0000000000043c20	mov	x2, x20
0000000000043c24	bl	0x4dbec ; symbol stub for: _memcpy
0000000000043c28	cmp	x20, #0x16
0000000000043c2c	b.eq	0x43c38
0000000000043c30	mov	x0, x21
0000000000043c34	bl	0x4dba4 ; symbol stub for: _free
0000000000043c38	str	x23, [x19]
0000000000043c3c	orr	x8, x22, #0x8000000000000000
0000000000043c40	str	x8, [x19, #0x10]
0000000000043c44	add	x8, x20, #0x1
0000000000043c48	str	x8, [x19, #0x8]
0000000000043c4c	add	x8, x23, x20
0000000000043c50	strb	w24, [x8]
0000000000043c54	strb	wzr, [x8, #0x1]
0000000000043c58	mov	x0, x19
0000000000043c5c	ldp	x29, x30, [sp, #0x40]
0000000000043c60	ldp	x20, x19, [sp, #0x30]
0000000000043c64	ldp	x22, x21, [sp, #0x20]
0000000000043c68	ldp	x24, x23, [sp, #0x10]
0000000000043c6c	ldp	x26, x25, [sp], #0x50
0000000000043c70	ret
0000000000043c74	mov	x23, #-0x11
0000000000043c78	mov	x0, x23
0000000000043c7c	mov	w1, #0x1
0000000000043c80	bl	0x4db20 ; symbol stub for: _calloc
0000000000043c84	mov	x24, x0
0000000000043c88	cbnz	x21, 0x43a58
0000000000043c8c	b	0x43a70
_Kotlin_io_Console_println:
0000000000043c90	stp	x22, x21, [sp, #-0x30]!
0000000000043c94	stp	x20, x19, [sp, #0x10]
0000000000043c98	stp	x29, x30, [sp, #0x20]
0000000000043c9c	add	x29, sp, #0x20
0000000000043ca0	bl	_Kotlin_io_Console_print
0000000000043ca4	adrp	x0, 37 ; 0x68000
0000000000043ca8	add	x0, x0, #0xa00
0000000000043cac	ldr	x8, [x0]
0000000000043cb0	blr	x8
0000000000043cb4	ldr	x20, [x0]
0000000000043cb8	add	x19, x20, #0x138
0000000000043cbc	mov	w8, #0x1
0000000000043cc0	ldaxr	w21, [x19]
0000000000043cc4	stlxr	w9, w8, [x19]
0000000000043cc8	cbnz	w9, 0x43cc0
0000000000043ccc	adr	x1, #0xefcb ; literal pool for: "\n"
0000000000043cd0	nop
0000000000043cd4	mov	w0, #0x1
0000000000043cd8	mov	w2, #0x1
0000000000043cdc	bl	0x4dee0 ; symbol stub for: _write
0000000000043ce0	cbz	x20, 0x43d0c
0000000000043ce4	ldaxr	w8, [x19]
0000000000043ce8	stlxr	w9, w21, [x19]
0000000000043cec	cbnz	w9, 0x43ce4
0000000000043cf0	cbnz	w21, 0x43d0c
0000000000043cf4	cmp	w8, #0x1
0000000000043cf8	b.ne	0x43d0c
0000000000043cfc	adr	x8, #0x3eb47
0000000000043d00	nop
0000000000043d04	ldarb	w8, [x8]
0000000000043d08	tbnz	w8, #0x0, 0x43d1c
0000000000043d0c	ldp	x29, x30, [sp, #0x20]
0000000000043d10	ldp	x20, x19, [sp, #0x10]
0000000000043d14	ldp	x22, x21, [sp], #0x30
0000000000043d18	ret
0000000000043d1c	mov	x0, x19
0000000000043d20	ldp	x29, x30, [sp, #0x20]
0000000000043d24	ldp	x20, x19, [sp, #0x10]
0000000000043d28	ldp	x22, x21, [sp], #0x30
0000000000043d2c	b	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000043d30	mov	x8, x20
0000000000043d34	mov	x20, x0
0000000000043d38	cbz	x8, 0x43d6c
0000000000043d3c	ldaxr	w8, [x19]
0000000000043d40	stlxr	w9, w21, [x19]
0000000000043d44	cbnz	w9, 0x43d3c
0000000000043d48	cbnz	w21, 0x43d6c
0000000000043d4c	cmp	w8, #0x1
0000000000043d50	b.ne	0x43d6c
0000000000043d54	adr	x8, #0x3eaef
0000000000043d58	nop
0000000000043d5c	ldarb	w8, [x8]
0000000000043d60	tbz	w8, #0x0, 0x43d6c
0000000000043d64	mov	x0, x19
0000000000043d68	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000043d6c	mov	x0, x20
0000000000043d70	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
_CreateStringFromCString:
0000000000043d74	sub	sp, sp, #0x60
0000000000043d78	stp	x26, x25, [sp, #0x10]
0000000000043d7c	stp	x24, x23, [sp, #0x20]
0000000000043d80	stp	x22, x21, [sp, #0x30]
0000000000043d84	stp	x20, x19, [sp, #0x40]
0000000000043d88	stp	x29, x30, [sp, #0x50]
0000000000043d8c	add	x29, sp, #0x50
0000000000043d90	mov	x19, x1
0000000000043d94	cbz	x0, 0x43e60
0000000000043d98	mov	x21, x0
0000000000043d9c	bl	0x4de74 ; symbol stub for: _strlen
0000000000043da0	mov	x22, x0
0000000000043da4	add	x20, x21, x0
0000000000043da8	str	x21, [sp]
0000000000043dac	cmp	x0, #0x0
0000000000043db0	b.le	0x43e68
0000000000043db4	mov	w24, #0x0
0000000000043db8	mov	w23, #0x1
0000000000043dbc	mov	w25, #0x34
0000000000043dc0	mov	w26, #0xa
0000000000043dc4	b	0x43de4
0000000000043dc8	ldr	x8, [sp]
0000000000043dcc	add	x8, x8, #0x1
0000000000043dd0	str	x8, [sp]
0000000000043dd4	mov	w9, #0x1
0000000000043dd8	add	w24, w9, w24
0000000000043ddc	cmp	x8, x20
0000000000043de0	b.hs	0x43e58
0000000000043de4	str	wzr, [sp, #0xc]
0000000000043de8	mov	x0, sp
0000000000043dec	add	x2, sp, #0xc
0000000000043df0	mov	x1, x20
0000000000043df4	bl	__ZN4utf88internal13validate_nextIPKcEENS0_9utf_errorERT_S5_Rj
0000000000043df8	lsl	w8, w23, w0
0000000000043dfc	tst	w8, w25
0000000000043e00	b.ne	0x43dc8
0000000000043e04	tst	w8, w26
0000000000043e08	b.eq	0x43e3c
0000000000043e0c	ldr	x8, [sp]
0000000000043e10	add	x9, x8, #0x1
0000000000043e14	mov	x8, x9
0000000000043e18	str	x9, [sp]
0000000000043e1c	cmp	x9, x20
0000000000043e20	b.hs	0x43dd4
0000000000043e24	mov	x9, x8
0000000000043e28	ldrb	w10, [x9], #0x1
0000000000043e2c	and	w10, w10, #0xc0
0000000000043e30	cmp	w10, #0x80
0000000000043e34	b.eq	0x43e14
0000000000043e38	b	0x43dd4
0000000000043e3c	ldrh	w9, [sp, #0xe]
0000000000043e40	ldr	x8, [sp]
0000000000043e44	cmp	w9, #0x0
0000000000043e48	cinc	w9, w23, ne
0000000000043e4c	add	w24, w9, w24
0000000000043e50	cmp	x8, x20
0000000000043e54	b.lo	0x43de4
0000000000043e58	tbz	w24, #0x1f, 0x43e6c
0000000000043e5c	bl	_ThrowIllegalArgumentException
0000000000043e60	mov	x23, #0x0
0000000000043e64	b	0x43f84
0000000000043e68	mov	w24, #0x0
0000000000043e6c	adrp	x0, 37 ; 0x68000
0000000000043e70	add	x0, x0, #0xa00
0000000000043e74	ldr	x8, [x0]
0000000000043e78	blr	x8
0000000000043e7c	ldr	x8, [x0]
0000000000043e80	ldr	x8, [x8, #0x118]
0000000000043e84	mov	w9, w24
0000000000043e88	lsl	x9, x9, #1
0000000000043e8c	add	x9, x9, #0x1f
0000000000043e90	and	x1, x9, #0x3fffffff8
0000000000043e94	add	x0, x8, #0x70
0000000000043e98	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000043e9c	adr	x8, #0x11844
0000000000043ea0	nop
0000000000043ea4	mov	x23, x0
0000000000043ea8	str	x8, [x23, #0x10]!
0000000000043eac	str	xzr, [x0, #0x18]
0000000000043eb0	str	xzr, [x0, #0x8]
0000000000043eb4	str	w24, [x0, #0x18]
0000000000043eb8	str	x23, [x19]
0000000000043ebc	str	x21, [sp]
0000000000043ec0	cbz	x22, 0x43f84
0000000000043ec4	add	x21, x0, #0x20
0000000000043ec8	mov	w22, #0x1
0000000000043ecc	mov	w24, #0x34
0000000000043ed0	mov	w25, #0xa
0000000000043ed4	mov	w26, #-0x2840
0000000000043ed8	b	0x43f00
0000000000043edc	add	w9, w26, w8, lsr #10
0000000000043ee0	strh	w9, [x21]
0000000000043ee4	mov	w9, #0xdc00
0000000000043ee8	bfxil	w9, w8, #0, #10
0000000000043eec	strh	w9, [x21, #0x2]
0000000000043ef0	add	x21, x21, #0x4
0000000000043ef4	ldr	x8, [sp]
0000000000043ef8	cmp	x8, x20
0000000000043efc	b.eq	0x43f84
0000000000043f00	str	wzr, [sp, #0xc]
0000000000043f04	mov	x0, sp
0000000000043f08	add	x2, sp, #0xc
0000000000043f0c	mov	x1, x20
0000000000043f10	bl	__ZN4utf88internal13validate_nextIPKcEENS0_9utf_errorERT_S5_Rj
0000000000043f14	lsl	w8, w22, w0
0000000000043f18	tst	w8, w24
0000000000043f1c	b.eq	0x43f30
0000000000043f20	ldr	x8, [sp]
0000000000043f24	add	x8, x8, #0x1
0000000000043f28	str	x8, [sp]
0000000000043f2c	b	0x43f5c
0000000000043f30	tst	w8, w25
0000000000043f34	b.eq	0x43f74
0000000000043f38	ldr	x8, [sp]
0000000000043f3c	add	x8, x8, #0x1
0000000000043f40	str	x8, [sp]
0000000000043f44	cmp	x8, x20
0000000000043f48	b.hs	0x43f5c
0000000000043f4c	ldrb	w9, [x8], #0x1
0000000000043f50	and	w9, w9, #0xc0
0000000000043f54	cmp	w9, #0x80
0000000000043f58	b.eq	0x43f40
0000000000043f5c	mov	w8, #0xfffd
0000000000043f60	strh	w8, [x21], #0x2
0000000000043f64	ldr	x8, [sp]
0000000000043f68	cmp	x8, x20
0000000000043f6c	b.ne	0x43f00
0000000000043f70	b	0x43f84
0000000000043f74	ldr	w8, [sp, #0xc]
0000000000043f78	cmp	w8, #0x10, lsl #12
0000000000043f7c	b.lo	0x43f60
0000000000043f80	b	0x43edc
0000000000043f84	str	x23, [x19]
0000000000043f88	mov	x0, x23
0000000000043f8c	ldp	x29, x30, [sp, #0x50]
0000000000043f90	ldp	x20, x19, [sp, #0x40]
0000000000043f94	ldp	x22, x21, [sp, #0x30]
0000000000043f98	ldp	x24, x23, [sp, #0x20]
0000000000043f9c	ldp	x26, x25, [sp, #0x10]
0000000000043fa0	add	sp, sp, #0x60
0000000000043fa4	ret
__ZN27BackRefFromAssociatedObject10releaseRefEv:
0000000000043fa8	stp	x24, x23, [sp, #-0x40]!
0000000000043fac	stp	x22, x21, [sp, #0x10]
0000000000043fb0	stp	x20, x19, [sp, #0x20]
0000000000043fb4	stp	x29, x30, [sp, #0x30]
0000000000043fb8	add	x29, sp, #0x30
0000000000043fbc	ldr	x19, [x0, #0x8]
0000000000043fc0	add	x8, x0, #0x10
0000000000043fc4	ldaxr	w9, [x8]
0000000000043fc8	subs	w9, w9, #0x1
0000000000043fcc	stlxr	w10, w9, [x8]
0000000000043fd0	cbnz	w10, 0x43fc4
0000000000043fd4	b.ne	0x4406c
0000000000043fd8	ldr	x8, [x0]
0000000000043fdc	cbz	x8, 0x4406c
0000000000043fe0	bl	_Kotlin_initRuntimeIfNeeded
0000000000043fe4	adrp	x21, 37 ; 0x68000
0000000000043fe8	add	x21, x21, #0xa00
0000000000043fec	ldr	x23, [x21]
0000000000043ff0	mov	x0, x21
0000000000043ff4	blr	x23
0000000000043ff8	ldr	x8, [x0]
0000000000043ffc	add	x20, x8, #0x138
0000000000044000	ldaxr	w22, [x20]
0000000000044004	stlxr	w8, wzr, [x20]
0000000000044008	cbnz	w8, 0x44000
000000000004400c	cmp	w22, #0x1
0000000000044010	b.ne	0x4402c
0000000000044014	adr	x8, #0x3e82f
0000000000044018	nop
000000000004401c	ldarb	w8, [x8]
0000000000044020	tbz	w8, #0x0, 0x4402c
0000000000044024	mov	x0, x20
0000000000044028	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004402c	mov	x0, x21
0000000000044030	blr	x23
0000000000044034	ldr	x8, [x0]
0000000000044038	add	x0, x8, #0x8
000000000004403c	mov	x1, x19
0000000000044040	bl	__ZN6kotlin2mm17StableRefRegistry19UnregisterStableRefEPNS0_10ThreadDataEPNS_16MultiSourceQueueIP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS6_EEE4NodeE
0000000000044044	ldaxr	w8, [x20]
0000000000044048	stlxr	w9, w22, [x20]
000000000004404c	cbnz	w9, 0x44044
0000000000044050	cbnz	w22, 0x4406c
0000000000044054	cmp	w8, #0x1
0000000000044058	b.ne	0x4406c
000000000004405c	adr	x8, #0x3e7e7
0000000000044060	nop
0000000000044064	ldarb	w8, [x8]
0000000000044068	tbnz	w8, #0x0, 0x44080
000000000004406c	ldp	x29, x30, [sp, #0x30]
0000000000044070	ldp	x20, x19, [sp, #0x20]
0000000000044074	ldp	x22, x21, [sp, #0x10]
0000000000044078	ldp	x24, x23, [sp], #0x40
000000000004407c	ret
0000000000044080	mov	x0, x20
0000000000044084	ldp	x29, x30, [sp, #0x30]
0000000000044088	ldp	x20, x19, [sp, #0x20]
000000000004408c	ldp	x22, x21, [sp, #0x10]
0000000000044090	ldp	x24, x23, [sp], #0x40
0000000000044094	b	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
_addHighPrecision:
0000000000044098	cbz	w1, 0x44110
000000000004409c	cbz	w3, 0x44110
00000000000440a0	mov	x9, #0x0
00000000000440a4	cmp	w1, w3
00000000000440a8	csel	w8, w1, w3, lt
00000000000440ac	cmp	w8, #0x1
00000000000440b0	csinc	w8, w8, wzr, gt
00000000000440b4	mov	x10, x0
00000000000440b8	mov	x11, x8
00000000000440bc	ldr	x12, [x10]
00000000000440c0	ldr	x13, [x2]
00000000000440c4	add	x12, x12, x9
00000000000440c8	add	x12, x12, x13
00000000000440cc	str	x12, [x10], #0x8
00000000000440d0	ldr	x13, [x2], #0x8
00000000000440d4	cmp	x13, x12
00000000000440d8	csinc	x9, x9, xzr, eq
00000000000440dc	csel	x9, xzr, x9, lo
00000000000440e0	subs	x11, x11, #0x1
00000000000440e4	b.ne	0x440bc
00000000000440e8	cmp	x9, #0x0
00000000000440ec	ccmp	w8, w1, #0x4, ne
00000000000440f0	b.eq	0x44110
00000000000440f4	lsl	x9, x8, #3
00000000000440f8	ldr	x10, [x0, x9]
00000000000440fc	adds	x10, x10, #0x1
0000000000044100	str	x10, [x0, x9]
0000000000044104	add	x8, x8, #0x1
0000000000044108	ccmp	w8, w1, #0x0, hs
000000000004410c	b.lt	0x440f4
0000000000044110	ret
_subtractHighPrecision:
0000000000044114	cmp	w1, #0x1
0000000000044118	b.lt	0x4417c
000000000004411c	mov	w8, w1
0000000000044120	cmp	w1, #0x4
0000000000044124	b.hs	0x44130
0000000000044128	mov	x9, #0x0
000000000004412c	b	0x44160
0000000000044130	and	x9, x8, #0xfffffffc
0000000000044134	add	x10, x0, #0x10
0000000000044138	mov	x11, x9
000000000004413c	ldp	q0, q1, [x10, #-0x10]
0000000000044140	mvn.16b	v0, v0
0000000000044144	mvn.16b	v1, v1
0000000000044148	stp	q0, q1, [x10, #-0x10]
000000000004414c	add	x10, x10, #0x20
0000000000044150	subs	x11, x11, #0x4
0000000000044154	b.ne	0x4413c
0000000000044158	cmp	x9, x8
000000000004415c	b.eq	0x4417c
0000000000044160	sub	x8, x8, x9
0000000000044164	add	x9, x0, x9, lsl #3
0000000000044168	ldr	x10, [x9]
000000000004416c	mvn	x10, x10
0000000000044170	str	x10, [x9], #0x8
0000000000044174	subs	x8, x8, #0x1
0000000000044178	b.ne	0x44168
000000000004417c	ldr	x8, [x0]
0000000000044180	add	x8, x8, #0x1
0000000000044184	str	x8, [x0]
0000000000044188	cmp	w1, #0x1
000000000004418c	b.eq	0x441c4
0000000000044190	cbnz	x8, 0x441c4
0000000000044194	cmp	w1, #0x2
0000000000044198	mov	w8, #0x2
000000000004419c	csel	w8, w1, w8, gt
00000000000441a0	sub	x8, x8, #0x2
00000000000441a4	add	x9, x0, #0x8
00000000000441a8	ldr	x10, [x9]
00000000000441ac	add	x10, x10, #0x1
00000000000441b0	str	x10, [x9], #0x8
00000000000441b4	cmp	x10, #0x0
00000000000441b8	ccmp	x8, #0x0, #0x4, eq
00000000000441bc	sub	x8, x8, #0x1
00000000000441c0	b.ne	0x441a8
00000000000441c4	mov	w9, w3
00000000000441c8	and	w8, w3, w3, asr #31
00000000000441cc	cmp	w9, #0x1
00000000000441d0	b.lt	0x441e8
00000000000441d4	sub	w10, w9, #0x1
00000000000441d8	ldr	x10, [x2, w10, uxtw #3]
00000000000441dc	sub	x9, x9, #0x1
00000000000441e0	cbz	x10, 0x441cc
00000000000441e4	add	w8, w9, #0x1
00000000000441e8	cbz	w1, 0x44260
00000000000441ec	cbz	w8, 0x44260
00000000000441f0	mov	x9, #0x0
00000000000441f4	cmp	w8, w1
00000000000441f8	csel	w8, w1, w8, gt
00000000000441fc	cmp	w8, #0x1
0000000000044200	csinc	w8, w8, wzr, gt
0000000000044204	mov	x10, x0
0000000000044208	mov	x11, x8
000000000004420c	ldr	x12, [x10]
0000000000044210	ldr	x13, [x2]
0000000000044214	add	x12, x12, x9
0000000000044218	add	x12, x12, x13
000000000004421c	str	x12, [x10], #0x8
0000000000044220	ldr	x13, [x2], #0x8
0000000000044224	cmp	x13, x12
0000000000044228	csinc	x9, x9, xzr, eq
000000000004422c	csel	x9, xzr, x9, lo
0000000000044230	subs	x11, x11, #0x1
0000000000044234	b.ne	0x4420c
0000000000044238	cmp	w8, w1
000000000004423c	b.eq	0x44260
0000000000044240	cbz	x9, 0x44260
0000000000044244	lsl	x9, x8, #3
0000000000044248	ldr	x10, [x0, x9]
000000000004424c	adds	x10, x10, #0x1
0000000000044250	str	x10, [x0, x9]
0000000000044254	add	x8, x8, #0x1
0000000000044258	ccmp	w8, w1, #0x0, hs
000000000004425c	b.lt	0x44244
0000000000044260	cmp	w1, #0x1
0000000000044264	b.lt	0x442c8
0000000000044268	mov	w8, w1
000000000004426c	cmp	w1, #0x4
0000000000044270	b.hs	0x4427c
0000000000044274	mov	x9, #0x0
0000000000044278	b	0x442ac
000000000004427c	and	x9, x8, #0xfffffffc
0000000000044280	add	x10, x0, #0x10
0000000000044284	mov	x11, x9
0000000000044288	ldp	q0, q1, [x10, #-0x10]
000000000004428c	mvn.16b	v0, v0
0000000000044290	mvn.16b	v1, v1
0000000000044294	stp	q0, q1, [x10, #-0x10]
0000000000044298	add	x10, x10, #0x20
000000000004429c	subs	x11, x11, #0x4
00000000000442a0	b.ne	0x44288
00000000000442a4	cmp	x9, x8
00000000000442a8	b.eq	0x442c8
00000000000442ac	sub	x8, x8, x9
00000000000442b0	add	x9, x0, x9, lsl #3
00000000000442b4	ldr	x10, [x9]
00000000000442b8	mvn	x10, x10
00000000000442bc	str	x10, [x9], #0x8
00000000000442c0	subs	x8, x8, #0x1
00000000000442c4	b.ne	0x442b4
00000000000442c8	ldr	x8, [x0]
00000000000442cc	add	x8, x8, #0x1
00000000000442d0	str	x8, [x0]
00000000000442d4	cmp	w1, #0x1
00000000000442d8	b.eq	0x44310
00000000000442dc	cbnz	x8, 0x44310
00000000000442e0	cmp	w1, #0x2
00000000000442e4	mov	w8, #0x2
00000000000442e8	csel	w8, w1, w8, gt
00000000000442ec	sub	x8, x8, #0x2
00000000000442f0	add	x9, x0, #0x8
00000000000442f4	ldr	x10, [x9]
00000000000442f8	add	x10, x10, #0x1
00000000000442fc	str	x10, [x9], #0x8
0000000000044300	cmp	x10, #0x0
0000000000044304	ccmp	x8, #0x0, #0x4, eq
0000000000044308	sub	x8, x8, #0x1
000000000004430c	b.ne	0x442f4
0000000000044310	ret
_simpleShiftLeftHighPrecision:
0000000000044314	stp	x22, x21, [sp, #-0x30]!
0000000000044318	stp	x20, x19, [sp, #0x10]
000000000004431c	stp	x29, x30, [sp, #0x20]
0000000000044320	add	x29, sp, #0x20
0000000000044324	mov	x21, x2
0000000000044328	mov	x20, x1
000000000004432c	mov	x19, x0
0000000000044330	cmp	w2, #0x40
0000000000044334	b.lt	0x443a0
0000000000044338	lsr	w11, w21, #6
000000000004433c	sub	w8, w20, #0x1
0000000000044340	subs	w9, w8, w11
0000000000044344	b.mi	0x44380
0000000000044348	sxtw	x10, w20
000000000004434c	sub	x12, x10, #0x1
0000000000044350	neg	w10, w11
0000000000044354	sub	x11, x12, w11, uxtw
0000000000044358	add	x12, x19, x12, lsl #3
000000000004435c	mov	x13, x8
0000000000044360	ldr	x8, [x19, w9, uxtw #3]
0000000000044364	str	x8, [x12], #-0x8
0000000000044368	sub	w8, w13, #0x1
000000000004436c	add	w9, w10, w13
0000000000044370	sub	w9, w9, #0x1
0000000000044374	mov	x13, x8
0000000000044378	subs	x11, x11, #0x1
000000000004437c	b.pl	0x44360
0000000000044380	sxtw	x9, w8
0000000000044384	bic	w8, w8, w8, asr #31
0000000000044388	sub	x9, x9, x8
000000000004438c	add	x0, x19, x9, lsl #3
0000000000044390	lsl	x8, x8, #3
0000000000044394	add	x1, x8, #0x8
0000000000044398	bl	0x4db14 ; symbol stub for: _bzero
000000000004439c	and	w21, w21, #0x3f
00000000000443a0	cbz	w21, 0x44404
00000000000443a4	mov	w8, w21
00000000000443a8	cmp	w20, #0x2
00000000000443ac	b.lt	0x443f8
00000000000443b0	mov	w9, #0x40
00000000000443b4	sub	w9, w9, w21
00000000000443b8	mov	w12, w20
00000000000443bc	mov	w10, #-0x2
00000000000443c0	add	x10, x10, w20, sxtw
00000000000443c4	add	x11, x19, w20, sxtw #3
00000000000443c8	sub	x11, x11, #0x8
00000000000443cc	add	x12, x12, #0x1
00000000000443d0	ldr	x13, [x11]
00000000000443d4	lsl	x13, x13, x8
00000000000443d8	ldr	x14, [x19, w10, uxtw #3]
00000000000443dc	lsr	x14, x14, x9
00000000000443e0	orr	x13, x14, x13
00000000000443e4	str	x13, [x11], #-0x8
00000000000443e8	sub	x10, x10, #0x1
00000000000443ec	sub	x12, x12, #0x1
00000000000443f0	cmp	x12, #0x2
00000000000443f4	b.gt	0x443d0
00000000000443f8	ldr	x9, [x19]
00000000000443fc	lsl	x8, x9, x8
0000000000044400	str	x8, [x19]
0000000000044404	ldp	x29, x30, [sp, #0x20]
0000000000044408	ldp	x20, x19, [sp, #0x10]
000000000004440c	ldp	x22, x21, [sp], #0x30
0000000000044410	ret
_compareHighPrecision:
0000000000044414	sxtw	x10, w1
0000000000044418	and	w8, w1, w1, asr #31
000000000004441c	sub	w9, w8, #0x1
0000000000044420	sub	x12, x0, #0x8
0000000000044424	subs	x11, x10, #0x1
0000000000044428	b.lt	0x44448
000000000004442c	ldr	x13, [x12, x10, lsl #3]
0000000000044430	mov	x10, x11
0000000000044434	cbz	x13, 0x44424
0000000000044438	mov	w10, #0x0
000000000004443c	add	w8, w11, #0x1
0000000000044440	mov	x9, x11
0000000000044444	b	0x4444c
0000000000044448	mov	w10, #0x1
000000000004444c	sxtw	x12, w3
0000000000044450	add	w11, w3, #0x1
0000000000044454	sub	x14, x2, #0x8
0000000000044458	and	w13, w3, w3, asr #31
000000000004445c	subs	x15, x12, #0x1
0000000000044460	b.lt	0x44480
0000000000044464	ldr	x16, [x14, x12, lsl #3]
0000000000044468	sub	w11, w11, #0x1
000000000004446c	mov	x12, x15
0000000000044470	cbz	x16, 0x4445c
0000000000044474	cmp	w8, w11
0000000000044478	b.le	0x44494
000000000004447c	b	0x4448c
0000000000044480	mov	x11, x13
0000000000044484	cmp	w8, w11
0000000000044488	b.le	0x44494
000000000004448c	mov	w0, #0x1
0000000000044490	ret
0000000000044494	cset	w8, lt
0000000000044498	orr	w10, w8, w10
000000000004449c	csetm	w8, lt
00000000000444a0	tbnz	w10, #0x0, 0x444d4
00000000000444a4	sxtw	x8, w9
00000000000444a8	lsl	x9, x8, #3
00000000000444ac	ldr	x10, [x0, x9]
00000000000444b0	ldr	x9, [x2, x9]
00000000000444b4	cmp	x10, x9
00000000000444b8	b.hi	0x4448c
00000000000444bc	b.lo	0x444dc
00000000000444c0	sub	x9, x8, #0x1
00000000000444c4	cmp	x8, #0x0
00000000000444c8	mov	x8, x9
00000000000444cc	b.gt	0x444a8
00000000000444d0	mov	w8, #0x0
00000000000444d4	mov	x0, x8
00000000000444d8	ret
00000000000444dc	mov	w0, #-0x1
00000000000444e0	ret
_timesTenToTheEHighPrecision:
00000000000444e4	cbz	w2, 0x448a4
00000000000444e8	cmp	w2, #0x13
00000000000444ec	b.lt	0x445c4
00000000000444f0	mov	w8, #0x2304
00000000000444f4	movk	w8, #0x8ac7, lsl #16
00000000000444f8	add	x9, x0, #0x4
00000000000444fc	mov	w10, #-0x76180000
0000000000044500	b	0x44514
0000000000044504	sub	w11, w2, #0x13
0000000000044508	cmp	w2, #0x25
000000000004450c	mov	x2, x11
0000000000044510	b.le	0x445c8
0000000000044514	mov	x12, #0x0
0000000000044518	mov	w14, #0x0
000000000004451c	mov	w11, #0x0
0000000000044520	mov	w15, #0x0
0000000000044524	mov	x13, x9
0000000000044528	b	0x4453c
000000000004452c	add	w11, w11, #0x1
0000000000044530	add	x13, x13, #0x8
0000000000044534	cmp	w11, w1
0000000000044538	b.ge	0x445ac
000000000004453c	ldur	x17, [x13, #-0x4]
0000000000044540	mov	w16, w14
0000000000044544	bfi	x16, x15, #32, #32
0000000000044548	orr	x3, x16, x17
000000000004454c	cbz	x3, 0x4452c
0000000000044550	and	x14, x17, #0xffffffff
0000000000044554	mul	x15, x14, x10
0000000000044558	adds	x15, x15, x16
000000000004455c	cset	w17, hs
0000000000044560	cmp	x15, x16
0000000000044564	cset	w16, lo
0000000000044568	orr	w16, w17, w16
000000000004456c	ldr	w17, [x13]
0000000000044570	mul	x3, x17, x10
0000000000044574	mul	x14, x14, x8
0000000000044578	add	x12, x14, x12
000000000004457c	add	x12, x12, x15, lsr #32
0000000000044580	adds	x3, x12, x3
0000000000044584	cset	w12, hs
0000000000044588	cmp	x3, x14
000000000004458c	cset	w14, lo
0000000000044590	orr	w12, w12, w14
0000000000044594	stp	w15, w3, [x13, #-0x4]
0000000000044598	mul	x14, x17, x8
000000000004459c	orr	x14, x14, x16
00000000000445a0	add	x14, x14, x3, lsr #32
00000000000445a4	lsr	x15, x14, #32
00000000000445a8	b	0x4452c
00000000000445ac	mov	w11, w14
00000000000445b0	bfi	x11, x15, #32, #32
00000000000445b4	cbz	x11, 0x44504
00000000000445b8	str	x11, [x0, w1, sxtw #3]
00000000000445bc	add	w1, w1, #0x1
00000000000445c0	b	0x44504
00000000000445c4	mov	x11, x2
00000000000445c8	cmp	w11, #0x9
00000000000445cc	b.lt	0x44638
00000000000445d0	mov	w8, #0xca00
00000000000445d4	movk	w8, #0x3b9a, lsl #16
00000000000445d8	add	x9, x0, #0x4
00000000000445dc	b	0x445f0
00000000000445e0	sub	w10, w11, #0x9
00000000000445e4	cmp	w11, #0x11
00000000000445e8	mov	x11, x10
00000000000445ec	b.le	0x4463c
00000000000445f0	mov	x10, #0x0
00000000000445f4	cmp	w1, #0x1
00000000000445f8	csinc	w12, w1, wzr, gt
00000000000445fc	mov	x13, x9
0000000000044600	ldur	w14, [x13, #-0x4]
0000000000044604	madd	x10, x14, x8, x10
0000000000044608	stur	w10, [x13, #-0x4]
000000000004460c	ldr	w14, [x13]
0000000000044610	mul	x14, x14, x8
0000000000044614	add	x14, x14, x10, lsr #32
0000000000044618	lsr	x10, x14, #32
000000000004461c	str	w14, [x13], #0x8
0000000000044620	subs	x12, x12, #0x1
0000000000044624	b.ne	0x44600
0000000000044628	cbz	x10, 0x445e0
000000000004462c	str	x10, [x0, w1, sxtw #3]
0000000000044630	add	w1, w1, #0x1
0000000000044634	b	0x445e0
0000000000044638	mov	x10, x11
000000000004463c	sub	w8, w10, #0x1
0000000000044640	cmp	w8, #0x7
0000000000044644	b.hi	0x448a4
0000000000044648	adr	x9, #0xa00c
000000000004464c	nop
0000000000044650	adr	x10, #0x10
0000000000044654	ldrb	w11, [x9, x8]
0000000000044658	add	x10, x10, x11, lsl #2
000000000004465c	br	x10
0000000000044660	mov	x8, #0x0
0000000000044664	cmp	w1, #0x1
0000000000044668	csinc	w9, w1, wzr, gt
000000000004466c	mov	w10, #0xa
0000000000044670	mov	x11, x0
0000000000044674	ldp	w12, w13, [x11]
0000000000044678	madd	x12, x12, x10, x8
000000000004467c	mul	x8, x13, x10
0000000000044680	add	x13, x8, x12, lsr #32
0000000000044684	lsr	x8, x13, #32
0000000000044688	stp	w12, w13, [x11], #0x8
000000000004468c	subs	x9, x9, #0x1
0000000000044690	b.ne	0x44674
0000000000044694	b	0x4489c
0000000000044698	mov	x8, #0x0
000000000004469c	cmp	w1, #0x1
00000000000446a0	csinc	w9, w1, wzr, gt
00000000000446a4	mov	w10, #0xa
00000000000446a8	mov	x11, x0
00000000000446ac	ldp	w12, w13, [x11]
00000000000446b0	madd	x12, x12, x10, x8
00000000000446b4	mul	x8, x13, x10
00000000000446b8	add	x13, x8, x12, lsr #32
00000000000446bc	lsr	x8, x13, #32
00000000000446c0	stp	w12, w13, [x11], #0x8
00000000000446c4	subs	x9, x9, #0x1
00000000000446c8	b.ne	0x446ac
00000000000446cc	cbz	x8, 0x446d8
00000000000446d0	str	x8, [x0, w1, sxtw #3]
00000000000446d4	add	w1, w1, #0x1
00000000000446d8	mov	x8, #0x0
00000000000446dc	cmp	w1, #0x1
00000000000446e0	csinc	w9, w1, wzr, gt
00000000000446e4	mov	w10, #0xa
00000000000446e8	mov	x11, x0
00000000000446ec	ldp	w12, w13, [x11]
00000000000446f0	madd	x12, x12, x10, x8
00000000000446f4	mul	x8, x13, x10
00000000000446f8	add	x13, x8, x12, lsr #32
00000000000446fc	lsr	x8, x13, #32
0000000000044700	stp	w12, w13, [x11], #0x8
0000000000044704	subs	x9, x9, #0x1
0000000000044708	b.ne	0x446ec
000000000004470c	b	0x4489c
0000000000044710	mov	x8, #0x0
0000000000044714	cmp	w1, #0x1
0000000000044718	csinc	w9, w1, wzr, gt
000000000004471c	add	x10, x0, #0x4
0000000000044720	mov	w11, #0x3e8
0000000000044724	ldur	w12, [x10, #-0x4]
0000000000044728	madd	x8, x12, x11, x8
000000000004472c	stur	w8, [x10, #-0x4]
0000000000044730	ldr	w12, [x10]
0000000000044734	mul	x12, x12, x11
0000000000044738	add	x12, x12, x8, lsr #32
000000000004473c	lsr	x8, x12, #32
0000000000044740	str	w12, [x10], #0x8
0000000000044744	subs	x9, x9, #0x1
0000000000044748	b.ne	0x44724
000000000004474c	b	0x4489c
0000000000044750	mov	x8, #0x0
0000000000044754	cmp	w1, #0x1
0000000000044758	csinc	w9, w1, wzr, gt
000000000004475c	add	x10, x0, #0x4
0000000000044760	mov	w11, #0x2710
0000000000044764	ldur	w12, [x10, #-0x4]
0000000000044768	madd	x8, x12, x11, x8
000000000004476c	stur	w8, [x10, #-0x4]
0000000000044770	ldr	w12, [x10]
0000000000044774	mul	x12, x12, x11
0000000000044778	add	x12, x12, x8, lsr #32
000000000004477c	lsr	x8, x12, #32
0000000000044780	str	w12, [x10], #0x8
0000000000044784	subs	x9, x9, #0x1
0000000000044788	b.ne	0x44764
000000000004478c	b	0x4489c
0000000000044790	mov	x8, #0x0
0000000000044794	mov	w9, #0x86a0
0000000000044798	movk	w9, #0x1, lsl #16
000000000004479c	cmp	w1, #0x1
00000000000447a0	csinc	w10, w1, wzr, gt
00000000000447a4	add	x11, x0, #0x4
00000000000447a8	ldur	w12, [x11, #-0x4]
00000000000447ac	madd	x8, x12, x9, x8
00000000000447b0	stur	w8, [x11, #-0x4]
00000000000447b4	ldr	w12, [x11]
00000000000447b8	mul	x12, x12, x9
00000000000447bc	add	x12, x12, x8, lsr #32
00000000000447c0	lsr	x8, x12, #32
00000000000447c4	str	w12, [x11], #0x8
00000000000447c8	subs	x10, x10, #0x1
00000000000447cc	b.ne	0x447a8
00000000000447d0	b	0x4489c
00000000000447d4	mov	x8, #0x0
00000000000447d8	mov	w9, #0x4240
00000000000447dc	movk	w9, #0xf, lsl #16
00000000000447e0	cmp	w1, #0x1
00000000000447e4	csinc	w10, w1, wzr, gt
00000000000447e8	add	x11, x0, #0x4
00000000000447ec	ldur	w12, [x11, #-0x4]
00000000000447f0	madd	x8, x12, x9, x8
00000000000447f4	stur	w8, [x11, #-0x4]
00000000000447f8	ldr	w12, [x11]
00000000000447fc	mul	x12, x12, x9
0000000000044800	add	x12, x12, x8, lsr #32
0000000000044804	lsr	x8, x12, #32
0000000000044808	str	w12, [x11], #0x8
000000000004480c	subs	x10, x10, #0x1
0000000000044810	b.ne	0x447ec
0000000000044814	b	0x4489c
0000000000044818	mov	x8, #0x0
000000000004481c	mov	w9, #0x9680
0000000000044820	movk	w9, #0x98, lsl #16
0000000000044824	cmp	w1, #0x1
0000000000044828	csinc	w10, w1, wzr, gt
000000000004482c	add	x11, x0, #0x4
0000000000044830	ldur	w12, [x11, #-0x4]
0000000000044834	madd	x8, x12, x9, x8
0000000000044838	stur	w8, [x11, #-0x4]
000000000004483c	ldr	w12, [x11]
0000000000044840	mul	x12, x12, x9
0000000000044844	add	x12, x12, x8, lsr #32
0000000000044848	lsr	x8, x12, #32
000000000004484c	str	w12, [x11], #0x8
0000000000044850	subs	x10, x10, #0x1
0000000000044854	b.ne	0x44830
0000000000044858	b	0x4489c
000000000004485c	mov	x8, #0x0
0000000000044860	mov	w9, #0xe100
0000000000044864	movk	w9, #0x5f5, lsl #16
0000000000044868	cmp	w1, #0x1
000000000004486c	csinc	w10, w1, wzr, gt
0000000000044870	add	x11, x0, #0x4
0000000000044874	ldur	w12, [x11, #-0x4]
0000000000044878	madd	x8, x12, x9, x8
000000000004487c	stur	w8, [x11, #-0x4]
0000000000044880	ldr	w12, [x11]
0000000000044884	mul	x12, x12, x9
0000000000044888	add	x12, x12, x8, lsr #32
000000000004488c	lsr	x8, x12, #32
0000000000044890	str	w12, [x11], #0x8
0000000000044894	subs	x10, x10, #0x1
0000000000044898	b.ne	0x44874
000000000004489c	cbz	x8, 0x448a4
00000000000448a0	str	x8, [x0, w1, sxtw #3]
00000000000448a4	ret
_Kotlin_Any_equals:
00000000000448a8	cmp	x0, x1
00000000000448ac	cset	w0, eq
00000000000448b0	ret
_Kotlin_getCurrentStackTrace:
00000000000448b4	sub	sp, sp, #0x80
00000000000448b8	stp	x28, x27, [sp, #0x20]
00000000000448bc	stp	x26, x25, [sp, #0x30]
00000000000448c0	stp	x24, x23, [sp, #0x40]
00000000000448c4	stp	x22, x21, [sp, #0x50]
00000000000448c8	stp	x20, x19, [sp, #0x60]
00000000000448cc	stp	x29, x30, [sp, #0x70]
00000000000448d0	add	x29, sp, #0x70
00000000000448d4	mov	x21, x0
00000000000448d8	adrp	x19, 36 ; 0x68000
00000000000448dc	add	x19, x19, #0xa00
00000000000448e0	ldr	x23, [x19]
00000000000448e4	mov	x0, x19
00000000000448e8	blr	x23
00000000000448ec	ldr	x27, [x0]
00000000000448f0	add	x22, x27, #0x138
00000000000448f4	mov	w8, #0x1
00000000000448f8	ldaxr	w26, [x22]
00000000000448fc	stlxr	w9, w8, [x22]
0000000000044900	cbnz	w9, 0x448f8
0000000000044904	mov	x24, sp
0000000000044908	mov	x0, sp
000000000004490c	bl	__ZN6kotlin10StackTraceILm18446744073709551615EE7currentEm
0000000000044910	ldp	x20, x25, [sp]
0000000000044914	cbz	x27, 0x44948
0000000000044918	ldaxr	w8, [x22]
000000000004491c	stlxr	w9, w26, [x22]
0000000000044920	cbnz	w9, 0x44918
0000000000044924	cbnz	w26, 0x44948
0000000000044928	cmp	w8, #0x1
000000000004492c	b.ne	0x44948
0000000000044930	adr	x8, #0x3df13
0000000000044934	nop
0000000000044938	ldarb	w8, [x8]
000000000004493c	tbz	w8, #0x0, 0x44948
0000000000044940	mov	x0, x22
0000000000044944	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000044948	str	xzr, [sp, #0x18]
000000000004494c	mov	x0, x19
0000000000044950	blr	x23
0000000000044954	ldr	x8, [x0]
0000000000044958	ldr	x9, [x8, #0x110]
000000000004495c	str	x24, [x8, #0x110]
0000000000044960	mov	x10, #0x400000000
0000000000044964	stp	x9, x10, [sp, #0x8]
0000000000044968	sub	x24, x25, x20
000000000004496c	asr	x25, x24, #3
0000000000044970	tbnz	w25, #0x1f, 0x44a40
0000000000044974	ldr	x8, [x8, #0x118]
0000000000044978	and	x9, x24, #0x7fffffff8
000000000004497c	add	x9, x9, #0x1f
0000000000044980	and	x1, x9, #0xffffffff8
0000000000044984	add	x0, x8, #0x70
0000000000044988	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000004498c	adr	x8, #0x117b4
0000000000044990	nop
0000000000044994	mov	x22, x0
0000000000044998	str	x8, [x22, #0x10]!
000000000004499c	str	xzr, [x0, #0x18]
00000000000449a0	str	xzr, [x0, #0x8]
00000000000449a4	str	w25, [x0, #0x18]
00000000000449a8	str	x22, [sp, #0x18]
00000000000449ac	cbz	x24, 0x449f0
00000000000449b0	mov	x8, #0x0
00000000000449b4	cmp	x25, #0x1
00000000000449b8	csinc	x9, x25, xzr, hi
00000000000449bc	add	x10, x0, #0x20
00000000000449c0	ubfx	x11, x24, #3, #32
00000000000449c4	mov	x12, #0x100000000
00000000000449c8	mov	x13, x20
00000000000449cc	cbz	x11, 0x44a38
00000000000449d0	ldr	x14, [x13], #0x8
00000000000449d4	asr	x15, x8, #29
00000000000449d8	ldr	xzr, [x22]
00000000000449dc	str	x14, [x10, x15]
00000000000449e0	add	x8, x8, x12
00000000000449e4	sub	x11, x11, #0x1
00000000000449e8	sub	x9, x9, #0x1
00000000000449ec	cbnz	x9, 0x449cc
00000000000449f0	str	x22, [x21]
00000000000449f4	mov	x0, x19
00000000000449f8	blr	x23
00000000000449fc	ldr	x8, [x0]
0000000000044a00	ldr	x9, [sp, #0x8]
0000000000044a04	str	x9, [x8, #0x110]
0000000000044a08	cbz	x20, 0x44a14
0000000000044a0c	mov	x0, x20
0000000000044a10	bl	0x4dba4 ; symbol stub for: _free
0000000000044a14	mov	x0, x22
0000000000044a18	ldp	x29, x30, [sp, #0x70]
0000000000044a1c	ldp	x20, x19, [sp, #0x60]
0000000000044a20	ldp	x22, x21, [sp, #0x50]
0000000000044a24	ldp	x24, x23, [sp, #0x40]
0000000000044a28	ldp	x26, x25, [sp, #0x30]
0000000000044a2c	ldp	x28, x27, [sp, #0x20]
0000000000044a30	add	sp, sp, #0x80
0000000000044a34	ret
0000000000044a38	bl	_ThrowArrayIndexOutOfBoundsException
0000000000044a3c	b	0x44a44
0000000000044a40	bl	_ThrowIllegalArgumentException
0000000000044a44	brk	#0x1
0000000000044a48	b	0x44a4c
0000000000044a4c	mov	x21, x0
0000000000044a50	mov	x0, x19
0000000000044a54	blr	x23
0000000000044a58	ldr	x8, [x0]
0000000000044a5c	ldr	x9, [sp, #0x8]
0000000000044a60	str	x9, [x8, #0x110]
0000000000044a64	cbz	x20, 0x44a70
0000000000044a68	mov	x0, x20
0000000000044a6c	bl	0x4dba4 ; symbol stub for: _free
0000000000044a70	mov	x0, x21
0000000000044a74	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
_Kotlin_Long_toStringRadix:
0000000000044a78	cbz	x0, 0x44aa0
0000000000044a7c	sub	sp, sp, #0x60
0000000000044a80	stp	x29, x30, [sp, #0x50]
0000000000044a84	add	x29, sp, #0x50
0000000000044a88	cmp	x0, #0x0
0000000000044a8c	cneg	x8, x0, mi
0000000000044a90	negs	x10, x8
0000000000044a94	b.mi	0x44ab0
0000000000044a98	mov	w8, #0x0
0000000000044a9c	b	0x44aec
0000000000044aa0	adr	x0, #0xe1f9 ; literal pool for: "0"
0000000000044aa4	nop
0000000000044aa8	mov	x1, x2
0000000000044aac	b	_CreateStringFromCString
0000000000044ab0	mov	x8, #0x0
0000000000044ab4	mov	w9, #0x57
0000000000044ab8	mov	w11, #0x30
0000000000044abc	add	x12, sp, #0xe
0000000000044ac0	mov	w13, w1
0000000000044ac4	sdiv	x14, x10, x13
0000000000044ac8	neg	w10, w10
0000000000044acc	madd	w10, w14, w13, w10
0000000000044ad0	cmp	w10, #0xa
0000000000044ad4	csel	w15, w11, w9, lo
0000000000044ad8	add	w10, w15, w10
0000000000044adc	strb	w10, [x12, x8]
0000000000044ae0	add	x8, x8, #0x1
0000000000044ae4	mov	x10, x14
0000000000044ae8	tbnz	x14, #0x3f, 0x44ac4
0000000000044aec	tbnz	x0, #0x3f, 0x44b2c
0000000000044af0	cmp	w8, #0x1
0000000000044af4	b.le	0x44b44
0000000000044af8	mov	x9, #0x0
0000000000044afc	mov	w8, w8
0000000000044b00	sub	x10, x8, #0x1
0000000000044b04	add	x11, sp, #0xe
0000000000044b08	ldrb	w12, [x11, x9]
0000000000044b0c	ldrb	w13, [x11, x10]
0000000000044b10	strb	w13, [x11, x9]
0000000000044b14	strb	w12, [x11, x10]
0000000000044b18	add	x9, x9, #0x1
0000000000044b1c	sub	x10, x10, #0x1
0000000000044b20	cmp	x9, x10
0000000000044b24	b.lt	0x44b08
0000000000044b28	b	0x44b48
0000000000044b2c	add	x9, sp, #0xe
0000000000044b30	mov	w10, #0x2d
0000000000044b34	strb	w10, [x9, w8, uxtw]
0000000000044b38	add	w8, w8, #0x1
0000000000044b3c	cmp	w8, #0x1
0000000000044b40	b.gt	0x44af8
0000000000044b44	sxtw	x8, w8
0000000000044b48	add	x9, sp, #0xe
0000000000044b4c	strb	wzr, [x9, x8]
0000000000044b50	add	x0, sp, #0xe
0000000000044b54	mov	x1, x2
0000000000044b58	bl	_CreateStringFromCString
0000000000044b5c	ldp	x29, x30, [sp, #0x50]
0000000000044b60	add	sp, sp, #0x60
0000000000044b64	ret
_Kotlin_String_plusImpl:
0000000000044b68	stp	x24, x23, [sp, #-0x40]!
0000000000044b6c	stp	x22, x21, [sp, #0x10]
0000000000044b70	stp	x20, x19, [sp, #0x20]
0000000000044b74	stp	x29, x30, [sp, #0x30]
0000000000044b78	add	x29, sp, #0x30
0000000000044b7c	ldr	w8, [x0, #0x8]
0000000000044b80	ldr	w9, [x1, #0x8]
0000000000044b84	adds	w23, w9, w8
0000000000044b88	b.mi	0x44c2c
0000000000044b8c	mov	x19, x2
0000000000044b90	mov	x20, x1
0000000000044b94	mov	x21, x0
0000000000044b98	adrp	x0, 36 ; 0x68000
0000000000044b9c	add	x0, x0, #0xa00
0000000000044ba0	ldr	x8, [x0]
0000000000044ba4	blr	x8
0000000000044ba8	ldr	x8, [x0]
0000000000044bac	ldr	x8, [x8, #0x118]
0000000000044bb0	lsl	x9, x23, #1
0000000000044bb4	add	x9, x9, #0x1f
0000000000044bb8	and	x1, x9, #0x3fffffff8
0000000000044bbc	add	x0, x8, #0x70
0000000000044bc0	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000044bc4	mov	x22, x0
0000000000044bc8	stp	xzr, xzr, [x22, #0x10]!
0000000000044bcc	adr	x8, #0x10b14
0000000000044bd0	nop
0000000000044bd4	stp	xzr, x8, [x22, #-0x8]
0000000000044bd8	str	w23, [x22, #0x8]
0000000000044bdc	str	x22, [x19]
0000000000044be0	add	x23, x22, #0x10
0000000000044be4	add	x1, x21, #0x10
0000000000044be8	ldr	w8, [x21, #0x8]
0000000000044bec	lsl	x2, x8, #1
0000000000044bf0	mov	x0, x23
0000000000044bf4	bl	0x4dbec ; symbol stub for: _memcpy
0000000000044bf8	ldrsw	x8, [x21, #0x8]
0000000000044bfc	add	x0, x23, x8, lsl #1
0000000000044c00	add	x1, x20, #0x10
0000000000044c04	ldr	w8, [x20, #0x8]
0000000000044c08	lsl	x2, x8, #1
0000000000044c0c	bl	0x4dbec ; symbol stub for: _memcpy
0000000000044c10	str	x22, [x19]
0000000000044c14	mov	x0, x22
0000000000044c18	ldp	x29, x30, [sp, #0x30]
0000000000044c1c	ldp	x20, x19, [sp, #0x20]
0000000000044c20	ldp	x22, x21, [sp, #0x10]
0000000000044c24	ldp	x24, x23, [sp], #0x40
0000000000044c28	ret
0000000000044c2c	bl	_ThrowArrayIndexOutOfBoundsException
_Kotlin_String_subSequence:
0000000000044c30	sub	sp, sp, #0x60
0000000000044c34	stp	x24, x23, [sp, #0x20]
0000000000044c38	stp	x22, x21, [sp, #0x30]
0000000000044c3c	stp	x20, x19, [sp, #0x40]
0000000000044c40	stp	x29, x30, [sp, #0x50]
0000000000044c44	add	x29, sp, #0x50
0000000000044c48	tbnz	w1, #0x1f, 0x44d5c
0000000000044c4c	mov	x20, x1
0000000000044c50	cmp	w2, w1
0000000000044c54	b.lt	0x44d5c
0000000000044c58	mov	x21, x0
0000000000044c5c	ldr	w8, [x0, #0x8]
0000000000044c60	cmp	w8, w2
0000000000044c64	b.lo	0x44d5c
0000000000044c68	mov	x19, x3
0000000000044c6c	subs	w23, w2, w20
0000000000044c70	b.ne	0x44cdc
0000000000044c74	str	xzr, [sp, #0x8]
0000000000044c78	adrp	x20, 36 ; 0x68000
0000000000044c7c	add	x20, x20, #0xa00
0000000000044c80	ldr	x21, [x20]
0000000000044c84	mov	x0, x20
0000000000044c88	blr	x21
0000000000044c8c	ldr	x8, [x0]
0000000000044c90	ldr	x9, [x8, #0x110]
0000000000044c94	add	x10, sp, #0x8
0000000000044c98	str	x10, [x8, #0x110]
0000000000044c9c	mov	x8, #0x300000000
0000000000044ca0	stp	x9, x8, [sp, #0x10]
0000000000044ca4	adr	x8, #0x3db9f
0000000000044ca8	nop
0000000000044cac	ldarb	w8, [x8]
0000000000044cb0	tbz	w8, #0x0, 0x44cb8
0000000000044cb4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000044cb8	adr	x22, #0x1c3d0
0000000000044cbc	nop
0000000000044cc0	str	x22, [x19]
0000000000044cc4	mov	x0, x20
0000000000044cc8	blr	x21
0000000000044ccc	ldr	x8, [x0]
0000000000044cd0	ldr	x9, [sp, #0x10]
0000000000044cd4	str	x9, [x8, #0x110]
0000000000044cd8	b	0x44d40
0000000000044cdc	b.mi	0x44d60
0000000000044ce0	adrp	x0, 36 ; 0x68000
0000000000044ce4	add	x0, x0, #0xa00
0000000000044ce8	ldr	x8, [x0]
0000000000044cec	blr	x8
0000000000044cf0	ldr	x8, [x0]
0000000000044cf4	ldr	x8, [x8, #0x118]
0000000000044cf8	lsl	x9, x23, #1
0000000000044cfc	add	x9, x9, #0x1f
0000000000044d00	and	x1, x9, #0x3fffffff8
0000000000044d04	add	x0, x8, #0x70
0000000000044d08	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000044d0c	mov	x22, x0
0000000000044d10	adr	x8, #0x109d0
0000000000044d14	nop
0000000000044d18	stp	x8, xzr, [x22, #0x10]!
0000000000044d1c	stur	xzr, [x22, #-0x8]
0000000000044d20	str	w23, [x22, #0x8]
0000000000044d24	str	x22, [x19]
0000000000044d28	add	x0, x22, #0x10
0000000000044d2c	add	x8, x21, w20, uxtw #1
0000000000044d30	add	x1, x8, #0x10
0000000000044d34	sbfiz	x2, x23, #1, #32
0000000000044d38	bl	0x4dbec ; symbol stub for: _memcpy
0000000000044d3c	str	x22, [x19]
0000000000044d40	mov	x0, x22
0000000000044d44	ldp	x29, x30, [sp, #0x50]
0000000000044d48	ldp	x20, x19, [sp, #0x40]
0000000000044d4c	ldp	x22, x21, [sp, #0x30]
0000000000044d50	ldp	x24, x23, [sp, #0x20]
0000000000044d54	add	sp, sp, #0x60
0000000000044d58	ret
0000000000044d5c	bl	_ThrowArrayIndexOutOfBoundsException
0000000000044d60	bl	_ThrowIllegalArgumentException
_Kotlin_String_compareTo:
0000000000044d64	add	x8, x0, #0x10
0000000000044d68	add	x9, x1, #0x10
0000000000044d6c	ldr	w10, [x1, #0x8]
0000000000044d70	ldr	w11, [x0, #0x8]
0000000000044d74	cmp	w10, w11
0000000000044d78	csel	w12, w10, w11, lo
0000000000044d7c	lsr	w13, w12, #2
0000000000044d80	cbz	w13, 0x44da8
0000000000044d84	mov	x14, #0x0
0000000000044d88	lsl	x15, x14, #3
0000000000044d8c	ldr	x16, [x8, x15]
0000000000044d90	ldr	x15, [x9, x15]
0000000000044d94	cmp	x16, x15
0000000000044d98	b.ne	0x44db8
0000000000044d9c	add	x14, x14, #0x1
0000000000044da0	cmp	x13, x14
0000000000044da4	b.ne	0x44d88
0000000000044da8	lsl	w14, w13, #2
0000000000044dac	cmp	w14, w12
0000000000044db0	b.lo	0x44dc8
0000000000044db4	b	0x44e10
0000000000044db8	mov	x13, x14
0000000000044dbc	lsl	w14, w13, #2
0000000000044dc0	cmp	w14, w12
0000000000044dc4	b.hs	0x44e10
0000000000044dc8	mov	w13, w13
0000000000044dcc	lsl	x13, x13, #2
0000000000044dd0	sub	w12, w12, w14
0000000000044dd4	lsl	x14, x13, #1
0000000000044dd8	ldrh	w15, [x8, x14]
0000000000044ddc	ldrh	w14, [x9, x14]
0000000000044de0	cmp	w15, w14
0000000000044de4	b.ne	0x44df8
0000000000044de8	add	x13, x13, #0x1
0000000000044dec	subs	w12, w12, #0x1
0000000000044df0	b.ne	0x44dd4
0000000000044df4	b	0x44e10
0000000000044df8	cbz	w12, 0x44e10
0000000000044dfc	ubfiz	x10, x13, #1, #32
0000000000044e00	ldrh	w8, [x8, x10]
0000000000044e04	ldrh	w9, [x9, x10]
0000000000044e08	cmp	w8, w9
0000000000044e0c	b	0x44e14
0000000000044e10	cmp	w11, w10
0000000000044e14	cset	w8, eq
0000000000044e18	cset	w9, lo
0000000000044e1c	cmp	w9, #0x0
0000000000044e20	mov	w9, #-0x1
0000000000044e24	cneg	w9, w9, eq
0000000000044e28	cmp	w8, #0x0
0000000000044e2c	csel	w0, wzr, w9, ne
0000000000044e30	ret
_Kotlin_String_get:
0000000000044e34	stp	x29, x30, [sp, #-0x10]!
0000000000044e38	mov	x29, sp
0000000000044e3c	ldr	w8, [x0, #0x8]
0000000000044e40	cmp	w8, w1
0000000000044e44	b.ls	0x44e58
0000000000044e48	add	x8, x0, w1, sxtw #1
0000000000044e4c	ldrh	w0, [x8, #0x10]
0000000000044e50	ldp	x29, x30, [sp], #0x10
0000000000044e54	ret
0000000000044e58	bl	_ThrowArrayIndexOutOfBoundsException
_Kotlin_String_equals:
0000000000044e5c	stp	x29, x30, [sp, #-0x10]!
0000000000044e60	mov	x29, sp
0000000000044e64	cbz	x1, 0x44e84
0000000000044e68	ldr	x8, [x1]
0000000000044e6c	and	x8, x8, #0xfffffffffffffffc
0000000000044e70	ldr	x8, [x8]
0000000000044e74	adr	x9, #0x1086c
0000000000044e78	nop
0000000000044e7c	cmp	x8, x9
0000000000044e80	b.eq	0x44e90
0000000000044e84	mov	w0, #0x0
0000000000044e88	ldp	x29, x30, [sp], #0x10
0000000000044e8c	ret
0000000000044e90	cmp	x1, x0
0000000000044e94	b.eq	0x44ec8
0000000000044e98	ldr	w8, [x0, #0x8]
0000000000044e9c	ldr	w9, [x1, #0x8]
0000000000044ea0	cmp	w8, w9
0000000000044ea4	b.ne	0x44e84
0000000000044ea8	add	x0, x0, #0x10
0000000000044eac	add	x1, x1, #0x10
0000000000044eb0	lsl	x2, x8, #1
0000000000044eb4	bl	0x4dbe0 ; symbol stub for: _memcmp
0000000000044eb8	cmp	w0, #0x0
0000000000044ebc	cset	w0, eq
0000000000044ec0	ldp	x29, x30, [sp], #0x10
0000000000044ec4	ret
0000000000044ec8	mov	w0, #0x1
0000000000044ecc	ldp	x29, x30, [sp], #0x10
0000000000044ed0	ret
_Kotlin_String_hashCode:
0000000000044ed4	stp	d9, d8, [sp, #-0x10]!
0000000000044ed8	ldrsw	x9, [x0, #0x8]
0000000000044edc	add	x8, x0, #0x10
0000000000044ee0	add	w10, w9, #0x3
0000000000044ee4	cmp	w9, #0x0
0000000000044ee8	csel	w10, w10, w9, lt
0000000000044eec	asr	w11, w10, #2
0000000000044ef0	adrp	x10, 10 ; 0x4e000
0000000000044ef4	movi.16b	v0, #0x0
0000000000044ef8	cmp	w9, #0x1e8
0000000000044efc	b.ge	0x4500c
0000000000044f00	cmp	w9, #0x10
0000000000044f04	b.lt	0x44f98
0000000000044f08	mov	w12, #0xde01
0000000000044f0c	movk	w12, #0x50a9, lsl #16
0000000000044f10	dup.4s	v1, w12
0000000000044f14	nop
0000000000044f18	ldr	q2, 0x4e610
0000000000044f1c	nop
0000000000044f20	ldr	q3, 0x4e620
0000000000044f24	nop
0000000000044f28	ldr	q4, 0x4e630
0000000000044f2c	movi.16b	v5, #0x0
0000000000044f30	movi.16b	v6, #0x0
0000000000044f34	movi.16b	v7, #0x0
0000000000044f38	ldr	d16, [x10, #0x568]
0000000000044f3c	mov	x12, x11
0000000000044f40	ldp	d17, d18, [x8]
0000000000044f44	ushll.4s	v17, v17, #0x0
0000000000044f48	ushll.4s	v18, v18, #0x0
0000000000044f4c	ldp	d19, d20, [x8, #0x10]
0000000000044f50	ushll.4s	v19, v19, #0x0
0000000000044f54	mul.4s	v7, v7, v1
0000000000044f58	mul.4s	v6, v6, v1
0000000000044f5c	mul.4s	v5, v5, v1
0000000000044f60	mul.4s	v0, v0, v1
0000000000044f64	mla.4s	v7, v17, v2
0000000000044f68	mla.4s	v6, v18, v3
0000000000044f6c	mla.4s	v5, v19, v4
0000000000044f70	umlal.4s	v0, v20, v16
0000000000044f74	add	x8, x8, #0x20
0000000000044f78	sub	w11, w11, #0x4
0000000000044f7c	cmp	w12, #0x7
0000000000044f80	b.gt	0x44f3c
0000000000044f84	add.4s	v1, v6, v7
0000000000044f88	add.4s	v0, v0, v5
0000000000044f8c	add.4s	v0, v0, v1
0000000000044f90	addv.4s	s0, v0
0000000000044f94	dup.4s	v0, v0[0]
0000000000044f98	cmp	w11, #0x1
0000000000044f9c	b.le	0x45210
0000000000044fa0	movi.16b	v1, #0x0
0000000000044fa4	mov	w12, #0x6f01
0000000000044fa8	movk	w12, #0x9444, lsl #16
0000000000044fac	dup.4s	v2, w12
0000000000044fb0	nop
0000000000044fb4	ldr	q3, 0x4e630
0000000000044fb8	ldr	d5, [x10, #0x568]
0000000000044fbc	movi.16b	v4, #0x0
0000000000044fc0	mov	x12, x11
0000000000044fc4	ldp	d6, d7, [x8], #0x10
0000000000044fc8	ushll.4s	v6, v6, #0x0
0000000000044fcc	mul.4s	v4, v4, v2
0000000000044fd0	mul.4s	v1, v1, v2
0000000000044fd4	mla.4s	v4, v6, v3
0000000000044fd8	umlal.4s	v1, v7, v5
0000000000044fdc	sub	w11, w11, #0x2
0000000000044fe0	cmp	w12, #0x3
0000000000044fe4	b.gt	0x44fc0
0000000000044fe8	mov	w12, #0x6f01
0000000000044fec	movk	w12, #0x9444, lsl #16
0000000000044ff0	dup.4s	v2, w12
0000000000044ff4	add.4s	v1, v1, v4
0000000000044ff8	addv.4s	s1, v1
0000000000044ffc	dup.4s	v1, v1[0]
0000000000045000	mla.4s	v1, v0, v2
0000000000045004	mov.16b	v0, v1
0000000000045008	b	0x45210
000000000004500c	mov	w12, #0xbc01
0000000000045010	movk	w12, #0x7dd7, lsl #16
0000000000045014	dup.4s	v5, w12
0000000000045018	nop
000000000004501c	ldr	q6, 0x4e5d0
0000000000045020	nop
0000000000045024	ldr	q7, 0x4e5e0
0000000000045028	nop
000000000004502c	ldr	q16, 0x4e5f0
0000000000045030	nop
0000000000045034	ldr	q17, 0x4e600
0000000000045038	nop
000000000004503c	ldr	q3, 0x4e610
0000000000045040	nop
0000000000045044	ldr	q4, 0x4e620
0000000000045048	nop
000000000004504c	movi.16b	v18, #0x0
0000000000045050	movi.16b	v19, #0x0
0000000000045054	movi.16b	v20, #0x0
0000000000045058	movi.16b	v21, #0x0
000000000004505c	movi.16b	v22, #0x0
0000000000045060	ldr	q1, 0x4e630
0000000000045064	movi.16b	v23, #0x0
0000000000045068	movi.16b	v24, #0x0
000000000004506c	ldr	d2, [x10, #0x568]
0000000000045070	mov	x12, x11
0000000000045074	ldp	d25, d26, [x8]
0000000000045078	ushll.4s	v25, v25, #0x0
000000000004507c	ushll.4s	v26, v26, #0x0
0000000000045080	ldp	d27, d28, [x8, #0x10]
0000000000045084	ushll.4s	v27, v27, #0x0
0000000000045088	ushll.4s	v28, v28, #0x0
000000000004508c	ldp	d29, d30, [x8, #0x20]
0000000000045090	ushll.4s	v29, v29, #0x0
0000000000045094	ushll.4s	v30, v30, #0x0
0000000000045098	mul.4s	v24, v24, v5
000000000004509c	mul.4s	v23, v23, v5
00000000000450a0	ldp	d31, d8, [x8, #0x30]
00000000000450a4	mul.4s	v22, v22, v5
00000000000450a8	mul.4s	v21, v21, v5
00000000000450ac	mul.4s	v20, v20, v5
00000000000450b0	mul.4s	v19, v19, v5
00000000000450b4	mul.4s	v18, v18, v5
00000000000450b8	mul.4s	v0, v0, v5
00000000000450bc	ushll.4s	v31, v31, #0x0
00000000000450c0	mla.4s	v24, v25, v6
00000000000450c4	mla.4s	v23, v26, v7
00000000000450c8	mla.4s	v22, v27, v16
00000000000450cc	mla.4s	v21, v28, v17
00000000000450d0	mla.4s	v20, v29, v3
00000000000450d4	mla.4s	v19, v30, v4
00000000000450d8	mla.4s	v18, v31, v1
00000000000450dc	add	x8, x8, #0x40
00000000000450e0	sub	w11, w11, #0x8
00000000000450e4	umlal.4s	v0, v8, v2
00000000000450e8	cmp	w12, #0xf
00000000000450ec	b.gt	0x45070
00000000000450f0	add.4s	v5, v23, v24
00000000000450f4	add.4s	v6, v21, v22
00000000000450f8	add.4s	v7, v19, v20
00000000000450fc	add.4s	v0, v0, v18
0000000000045100	add.4s	v5, v6, v5
0000000000045104	add.4s	v5, v5, v7
0000000000045108	add.4s	v0, v5, v0
000000000004510c	addv.4s	s0, v0
0000000000045110	dup.4s	v0, v0[0]
0000000000045114	add	w12, w11, #0x8
0000000000045118	cmp	w12, #0xc
000000000004511c	b.lt	0x451ac
0000000000045120	movi.16b	v5, #0x0
0000000000045124	mov	w12, #0xde01
0000000000045128	movk	w12, #0x50a9, lsl #16
000000000004512c	dup.4s	v7, w12
0000000000045130	movi.16b	v6, #0x0
0000000000045134	movi.16b	v16, #0x0
0000000000045138	movi.16b	v17, #0x0
000000000004513c	mov	x12, x11
0000000000045140	ldp	d18, d19, [x8]
0000000000045144	ushll.4s	v18, v18, #0x0
0000000000045148	ushll.4s	v19, v19, #0x0
000000000004514c	ldp	d20, d21, [x8, #0x10]
0000000000045150	ushll.4s	v20, v20, #0x0
0000000000045154	mul.4s	v17, v17, v7
0000000000045158	mul.4s	v16, v16, v7
000000000004515c	mul.4s	v6, v6, v7
0000000000045160	mul.4s	v5, v5, v7
0000000000045164	mla.4s	v17, v18, v3
0000000000045168	mla.4s	v16, v19, v4
000000000004516c	mla.4s	v6, v20, v1
0000000000045170	umlal.4s	v5, v21, v2
0000000000045174	add	x8, x8, #0x20
0000000000045178	sub	w11, w11, #0x4
000000000004517c	cmp	w12, #0x7
0000000000045180	b.gt	0x4513c
0000000000045184	mov	w12, #0xde01
0000000000045188	movk	w12, #0x50a9, lsl #16
000000000004518c	dup.4s	v3, w12
0000000000045190	add.4s	v4, v16, v17
0000000000045194	add.4s	v5, v5, v6
0000000000045198	add.4s	v4, v5, v4
000000000004519c	addv.4s	s4, v4
00000000000451a0	dup.4s	v4, v4[0]
00000000000451a4	mla.4s	v4, v0, v3
00000000000451a8	mov.16b	v0, v4
00000000000451ac	cmp	w11, #0x1
00000000000451b0	b.le	0x45210
00000000000451b4	movi.16b	v3, #0x0
00000000000451b8	mov	w12, #0x6f01
00000000000451bc	movk	w12, #0x9444, lsl #16
00000000000451c0	dup.4s	v5, w12
00000000000451c4	movi.16b	v4, #0x0
00000000000451c8	mov	x12, x11
00000000000451cc	ldp	d6, d7, [x8], #0x10
00000000000451d0	ushll.4s	v6, v6, #0x0
00000000000451d4	mul.4s	v4, v4, v5
00000000000451d8	mul.4s	v3, v3, v5
00000000000451dc	mla.4s	v4, v6, v1
00000000000451e0	umlal.4s	v3, v7, v2
00000000000451e4	sub	w11, w11, #0x2
00000000000451e8	cmp	w12, #0x3
00000000000451ec	b.gt	0x451c8
00000000000451f0	mov	w12, #0x6f01
00000000000451f4	movk	w12, #0x9444, lsl #16
00000000000451f8	dup.4s	v1, w12
00000000000451fc	add.4s	v2, v3, v4
0000000000045200	addv.4s	s2, v2
0000000000045204	dup.4s	v2, v2[0]
0000000000045208	mla.4s	v2, v0, v1
000000000004520c	mov.16b	v0, v2
0000000000045210	cmp	w11, #0x1
0000000000045214	b.lt	0x45240
0000000000045218	ldr	d1, [x8]
000000000004521c	mov	w8, #0x1781
0000000000045220	movk	w8, #0xe, lsl #16
0000000000045224	dup.4s	v2, w8
0000000000045228	ldr	d3, [x10, #0x568]
000000000004522c	umull.4s	v1, v1, v3
0000000000045230	addv.4s	s1, v1
0000000000045234	dup.4s	v1, v1[0]
0000000000045238	mla.4s	v1, v0, v2
000000000004523c	mov.16b	v0, v1
0000000000045240	fmov	w8, s0
0000000000045244	and	x10, x9, #0xfffffffffffffffc
0000000000045248	cmp	w10, w9
000000000004524c	b.ge	0x45274
0000000000045250	sub	x9, x9, x10
0000000000045254	add	x10, x0, x10, lsl #1
0000000000045258	add	x10, x10, #0x10
000000000004525c	lsl	w11, w8, #5
0000000000045260	sub	w8, w11, w8
0000000000045264	ldrh	w11, [x10], #0x2
0000000000045268	add	w8, w8, w11
000000000004526c	subs	x9, x9, #0x1
0000000000045270	b.ne	0x4525c
0000000000045274	mov	x0, x8
0000000000045278	ldp	d9, d8, [sp], #0x10
000000000004527c	ret
-[KIteratorAsNSEnumerator dealloc]:
0000000000045280	sub	sp, sp, #0x60
0000000000045284	stp	x26, x25, [sp, #0x10]
0000000000045288	stp	x24, x23, [sp, #0x20]
000000000004528c	stp	x22, x21, [sp, #0x30]
0000000000045290	stp	x20, x19, [sp, #0x40]
0000000000045294	stp	x29, x30, [sp, #0x50]
0000000000045298	add	x29, sp, #0x50
000000000004529c	mov	x19, x0
00000000000452a0	nop
00000000000452a4	ldrsw	x8, _OBJC_IVAR_$_FRKKIteratorAsNSEnumerator.iteratorHolder
00000000000452a8	add	x24, x0, x8
00000000000452ac	bl	_Kotlin_initRuntimeIfNeeded
00000000000452b0	adrp	x21, 35 ; 0x68000
00000000000452b4	add	x21, x21, #0xa00
00000000000452b8	ldr	x25, [x21]
00000000000452bc	mov	x0, x21
00000000000452c0	blr	x25
00000000000452c4	ldr	x8, [x0]
00000000000452c8	add	x20, x8, #0x138
00000000000452cc	ldaxr	w22, [x20]
00000000000452d0	stlxr	w8, wzr, [x20]
00000000000452d4	cbnz	w8, 0x452cc
00000000000452d8	adr	x23, #0x3d56b
00000000000452dc	nop
00000000000452e0	cmp	w22, #0x1
00000000000452e4	b.ne	0x452f8
00000000000452e8	ldarb	w8, [x23]
00000000000452ec	tbz	w8, #0x0, 0x452f8
00000000000452f0	mov	x0, x20
00000000000452f4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000452f8	ldr	x8, [x24]
00000000000452fc	cbz	x8, 0x45318
0000000000045300	ldr	x1, [x24, #0x8]
0000000000045304	mov	x0, x21
0000000000045308	blr	x25
000000000004530c	ldr	x8, [x0]
0000000000045310	add	x0, x8, #0x8
0000000000045314	bl	__ZN6kotlin2mm17StableRefRegistry19UnregisterStableRefEPNS0_10ThreadDataEPNS_16MultiSourceQueueIP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS6_EEE4NodeE
0000000000045318	ldaxr	w8, [x20]
000000000004531c	stlxr	w9, w22, [x20]
0000000000045320	cbnz	w9, 0x45318
0000000000045324	cbnz	w22, 0x45340
0000000000045328	cmp	w8, #0x1
000000000004532c	b.ne	0x45340
0000000000045330	ldarb	w8, [x23]
0000000000045334	tbz	w8, #0x0, 0x45340
0000000000045338	mov	x0, x20
000000000004533c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000045340	nop
0000000000045344	ldr	x8, #0x2144c ; Objc class ref: FRKKIteratorAsNSEnumerator
0000000000045348	stp	x19, x8, [sp]
000000000004534c	nop
0000000000045350	ldr	x1, #0x21138 ; Objc selector ref: dealloc
0000000000045354	mov	x0, sp
0000000000045358	bl	0x4dcc4 ; Objc message: -[[x0 super] dealloc]
000000000004535c	ldp	x29, x30, [sp, #0x50]
0000000000045360	ldp	x20, x19, [sp, #0x40]
0000000000045364	ldp	x22, x21, [sp, #0x30]
0000000000045368	ldp	x24, x23, [sp, #0x20]
000000000004536c	ldp	x26, x25, [sp, #0x10]
0000000000045370	add	sp, sp, #0x60
0000000000045374	ret
-[KIteratorAsNSEnumerator nextObject]:
0000000000045378	sub	sp, sp, #0x90
000000000004537c	stp	x26, x25, [sp, #0x40]
0000000000045380	stp	x24, x23, [sp, #0x50]
0000000000045384	stp	x22, x21, [sp, #0x60]
0000000000045388	stp	x20, x19, [sp, #0x70]
000000000004538c	stp	x29, x30, [sp, #0x80]
0000000000045390	add	x29, sp, #0x80
0000000000045394	mov	x21, x0
0000000000045398	bl	_Kotlin_initRuntimeIfNeeded
000000000004539c	adrp	x20, 35 ; 0x68000
00000000000453a0	add	x20, x20, #0xa00
00000000000453a4	ldr	x25, [x20]
00000000000453a8	mov	x0, x20
00000000000453ac	blr	x25
00000000000453b0	ldr	x8, [x0]
00000000000453b4	add	x19, x8, #0x138
00000000000453b8	ldaxr	w24, [x19]
00000000000453bc	stlxr	w8, wzr, [x19]
00000000000453c0	cbnz	w8, 0x453b8
00000000000453c4	adr	x23, #0x3d47f
00000000000453c8	nop
00000000000453cc	cmp	w24, #0x1
00000000000453d0	b.ne	0x453e4
00000000000453d4	ldarb	w8, [x23]
00000000000453d8	tbz	w8, #0x0, 0x453e4
00000000000453dc	mov	x0, x19
00000000000453e0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000453e4	nop
00000000000453e8	ldrsw	x22, _OBJC_IVAR_$_FRKKIteratorAsNSEnumerator.iteratorHolder
00000000000453ec	bl	_Kotlin_initRuntimeIfNeeded
00000000000453f0	ldr	x21, [x21, x22]
00000000000453f4	str	xzr, [sp, #0x28]
00000000000453f8	mov	x0, x20
00000000000453fc	blr	x25
0000000000045400	ldr	x8, [x0]
0000000000045404	ldr	x9, [x8, #0x110]
0000000000045408	add	x10, sp, #0x28
000000000004540c	str	x10, [x8, #0x110]
0000000000045410	mov	x8, #0x300000000
0000000000045414	stp	x9, x8, [sp, #0x30]
0000000000045418	ldarb	w8, [x23]
000000000004541c	tbz	w8, #0x0, 0x45424
0000000000045420	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000045424	ldr	x8, [x21]
0000000000045428	and	x8, x8, #0xfffffffffffffffc
000000000004542c	ldr	x8, [x8]
0000000000045430	ldr	w9, [x8, #0x3c]
0000000000045434	ldr	x8, [x8, #0x40]
0000000000045438	tbnz	w9, #0x1f, 0x45448
000000000004543c	mov	w10, #0xa0
0000000000045440	and	x9, x9, x10
0000000000045444	b	0x454cc
0000000000045448	neg	w10, w9
000000000004544c	mvn	w9, w9
0000000000045450	cmp	w10, #0x9
0000000000045454	b.ge	0x4548c
0000000000045458	cmp	w10, #0x2
000000000004545c	b.lt	0x454c0
0000000000045460	mov	x10, #0x0
0000000000045464	mov	x11, x8
0000000000045468	ldr	w12, [x11]
000000000004546c	cmp	w12, #0x9f
0000000000045470	b.gt	0x454c8
0000000000045474	add	x10, x10, #0x1
0000000000045478	add	x11, x11, #0x10
000000000004547c	cmp	x9, x10
0000000000045480	b.ne	0x45468
0000000000045484	mov	x10, x9
0000000000045488	b	0x454c8
000000000004548c	mov	w10, #0x0
0000000000045490	add	w11, w9, w10
0000000000045494	cmp	w11, #0x0
0000000000045498	cinc	w11, w11, lt
000000000004549c	asr	w11, w11, #1
00000000000454a0	sbfiz	x12, x11, #4, #32
00000000000454a4	ldr	w12, [x8, x12]
00000000000454a8	cmp	w12, #0xa0
00000000000454ac	csinc	w10, w10, w11, ge
00000000000454b0	csel	w9, w9, w11, lt
00000000000454b4	cmp	w10, w9
00000000000454b8	b.lt	0x45490
00000000000454bc	b	0x454c8
00000000000454c0	mov	w10, #0x0
00000000000454c4	b	0x454c8
00000000000454c8	sxtw	x9, w10
00000000000454cc	add	x8, x8, x9, lsl #4
00000000000454d0	ldr	x8, [x8, #0x8]
00000000000454d4	ldr	x8, [x8]
00000000000454d8	mov	x0, x21
00000000000454dc	blr	x8
00000000000454e0	mov	x8, x0
00000000000454e4	mov	x0, x20
00000000000454e8	blr	x25
00000000000454ec	ldr	x9, [x0]
00000000000454f0	ldr	x10, [sp, #0x30]
00000000000454f4	str	x10, [x9, #0x110]
00000000000454f8	cbz	w8, 0x45554
00000000000454fc	add	x8, sp, #0x8
0000000000045500	add	x22, x8, #0x18
0000000000045504	mov	x11, #0x400000000
0000000000045508	str	x10, [sp, #0x10]
000000000004550c	stp	x11, xzr, [sp, #0x18]
0000000000045510	stp	xzr, x8, [sp, #0x28]
0000000000045514	add	x8, sp, #0x28
0000000000045518	str	x8, [x9, #0x110]
000000000004551c	mov	x8, #0x300000000
0000000000045520	str	x8, [sp, #0x38]
0000000000045524	ldarb	w8, [x23]
0000000000045528	tbz	w8, #0x0, 0x45530
000000000004552c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000045530	ldr	x8, [x21]
0000000000045534	and	x8, x8, #0xfffffffffffffffc
0000000000045538	ldr	x8, [x8]
000000000004553c	ldr	w9, [x8, #0x3c]
0000000000045540	ldr	x8, [x8, #0x40]
0000000000045544	tbnz	w9, #0x1f, 0x4555c
0000000000045548	mov	w10, #0xa0
000000000004554c	and	x9, x9, x10
0000000000045550	b	0x455e0
0000000000045554	mov	x21, #0x0
0000000000045558	b	0x45650
000000000004555c	neg	w10, w9
0000000000045560	mvn	w9, w9
0000000000045564	cmp	w10, #0x9
0000000000045568	b.ge	0x455a0
000000000004556c	cmp	w10, #0x2
0000000000045570	b.lt	0x455d4
0000000000045574	mov	x10, #0x0
0000000000045578	mov	x11, x8
000000000004557c	ldr	w12, [x11]
0000000000045580	cmp	w12, #0x9f
0000000000045584	b.gt	0x455dc
0000000000045588	add	x10, x10, #0x1
000000000004558c	add	x11, x11, #0x10
0000000000045590	cmp	x9, x10
0000000000045594	b.ne	0x4557c
0000000000045598	mov	x10, x9
000000000004559c	b	0x455dc
00000000000455a0	mov	w10, #0x0
00000000000455a4	add	w11, w9, w10
00000000000455a8	cmp	w11, #0x0
00000000000455ac	cinc	w11, w11, lt
00000000000455b0	asr	w11, w11, #1
00000000000455b4	sbfiz	x12, x11, #4, #32
00000000000455b8	ldr	w12, [x8, x12]
00000000000455bc	cmp	w12, #0xa0
00000000000455c0	csinc	w10, w10, w11, ge
00000000000455c4	csel	w9, w9, w11, lt
00000000000455c8	cmp	w10, w9
00000000000455cc	b.lt	0x455a4
00000000000455d0	b	0x455dc
00000000000455d4	mov	w10, #0x0
00000000000455d8	b	0x455dc
00000000000455dc	sxtw	x9, w10
00000000000455e0	add	x8, x8, x9, lsl #4
00000000000455e4	ldr	x8, [x8, #0x8]
00000000000455e8	ldr	x8, [x8, #0x8]
00000000000455ec	mov	x0, x21
00000000000455f0	mov	x1, x22
00000000000455f4	blr	x8
00000000000455f8	mov	x8, x0
00000000000455fc	str	x0, [sp, #0x20]
0000000000045600	mov	x0, x20
0000000000045604	blr	x25
0000000000045608	ldr	x9, [x0]
000000000004560c	ldr	x10, [sp, #0x30]
0000000000045610	str	x10, [x9, #0x110]
0000000000045614	cbz	x8, 0x45624
0000000000045618	mov	x0, x8
000000000004561c	bl	_Kotlin_ObjCExport_refToObjC
0000000000045620	b	0x45638
0000000000045624	nop
0000000000045628	ldr	x0, #0x210f8 ; Objc class ref: _OBJC_CLASS_$_NSNull
000000000004562c	nop
0000000000045630	ldr	x1, #0x20f90 ; Objc selector ref: null
0000000000045634	bl	0x4dcb8 ; Objc message: +[NSNull null]
0000000000045638	mov	x21, x0
000000000004563c	mov	x0, x20
0000000000045640	blr	x25
0000000000045644	ldr	x8, [x0]
0000000000045648	ldr	x9, [sp, #0x10]
000000000004564c	str	x9, [x8, #0x110]
0000000000045650	ldaxr	w8, [x19]
0000000000045654	stlxr	w9, w24, [x19]
0000000000045658	cbnz	w9, 0x45650
000000000004565c	cbnz	w24, 0x45678
0000000000045660	cmp	w8, #0x1
0000000000045664	b.ne	0x45678
0000000000045668	ldarb	w8, [x23]
000000000004566c	tbz	w8, #0x0, 0x45678
0000000000045670	mov	x0, x19
0000000000045674	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000045678	mov	x0, x21
000000000004567c	ldp	x29, x30, [sp, #0x80]
0000000000045680	ldp	x20, x19, [sp, #0x70]
0000000000045684	ldp	x22, x21, [sp, #0x60]
0000000000045688	ldp	x24, x23, [sp, #0x50]
000000000004568c	ldp	x26, x25, [sp, #0x40]
0000000000045690	add	sp, sp, #0x90
0000000000045694	ret
0000000000045698	mov	x21, x0
000000000004569c	mov	x0, x20
00000000000456a0	blr	x25
00000000000456a4	ldr	x8, [x0]
00000000000456a8	ldr	x9, [sp, #0x10]
00000000000456ac	b	0x456e4
00000000000456b0	mov	x21, x0
00000000000456b4	mov	x0, x20
00000000000456b8	blr	x25
00000000000456bc	ldr	x8, [x0]
00000000000456c0	ldr	x9, [sp, #0x30]
00000000000456c4	str	x9, [x8, #0x110]
00000000000456c8	ldr	x9, [sp, #0x10]
00000000000456cc	b	0x456e4
00000000000456d0	mov	x21, x0
00000000000456d4	mov	x0, x20
00000000000456d8	blr	x25
00000000000456dc	ldr	x8, [x0]
00000000000456e0	ldr	x9, [sp, #0x30]
00000000000456e4	str	x9, [x8, #0x110]
00000000000456e8	ldaxr	w8, [x19]
00000000000456ec	stlxr	w9, w24, [x19]
00000000000456f0	cbnz	w9, 0x456e8
00000000000456f4	cbnz	w24, 0x45710
00000000000456f8	cmp	w8, #0x1
00000000000456fc	b.ne	0x45710
0000000000045700	ldarb	w8, [x23]
0000000000045704	tbz	w8, #0x0, 0x45710
0000000000045708	mov	x0, x19
000000000004570c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000045710	mov	x0, x21
0000000000045714	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
+[KIteratorAsNSEnumerator createWithKIterator:]:
0000000000045718	stp	x22, x21, [sp, #-0x30]!
000000000004571c	stp	x20, x19, [sp, #0x10]
0000000000045720	stp	x29, x30, [sp, #0x20]
0000000000045724	add	x29, sp, #0x20
0000000000045728	mov	x19, x2
000000000004572c	nop
0000000000045730	ldr	x0, #0x21010 ; Objc class ref: FRKKIteratorAsNSEnumerator
0000000000045734	bl	0x4dc40 ; symbol stub for: _objc_alloc
0000000000045738	nop
000000000004573c	ldr	x1, #0x20d8c ; Objc selector ref: init
0000000000045740	bl	0x4dcb8 ; Objc message: +[FRKKIteratorAsNSEnumerator init]
0000000000045744	bl	0x4dc58 ; symbol stub for: _objc_autorelease
0000000000045748	mov	x20, x0
000000000004574c	nop
0000000000045750	ldrsw	x8, _OBJC_IVAR_$_FRKKIteratorAsNSEnumerator.iteratorHolder
0000000000045754	add	x21, x0, x8
0000000000045758	adrp	x0, 35 ; 0x68000
000000000004575c	add	x0, x0, #0xa00
0000000000045760	ldr	x8, [x0]
0000000000045764	blr	x8
0000000000045768	ldr	x22, [x0]
000000000004576c	mov	w0, #0x1
0000000000045770	mov	w1, #0x28
0000000000045774	bl	0x4db20 ; symbol stub for: _calloc
0000000000045778	ldr	x8, [x22, #0xa8]!
000000000004577c	sub	x9, x22, #0x8
0000000000045780	stp	x8, x22, [x0]
0000000000045784	str	x0, [x8, #0x8]
0000000000045788	str	x0, [x22]
000000000004578c	ldr	x8, [x22, #0x10]
0000000000045790	add	x8, x8, #0x1
0000000000045794	str	x8, [x22, #0x10]
0000000000045798	stp	x9, x0, [x0, #0x18]
000000000004579c	str	x19, [x0, #0x10]!
00000000000457a0	stp	x19, x0, [x21]
00000000000457a4	mov	x0, x20
00000000000457a8	ldp	x29, x30, [sp, #0x20]
00000000000457ac	ldp	x20, x19, [sp, #0x10]
00000000000457b0	ldp	x22, x21, [sp], #0x30
00000000000457b4	ret
-[KListAsNSArray dealloc]:
00000000000457b8	sub	sp, sp, #0x60
00000000000457bc	stp	x26, x25, [sp, #0x10]
00000000000457c0	stp	x24, x23, [sp, #0x20]
00000000000457c4	stp	x22, x21, [sp, #0x30]
00000000000457c8	stp	x20, x19, [sp, #0x40]
00000000000457cc	stp	x29, x30, [sp, #0x50]
00000000000457d0	add	x29, sp, #0x50
00000000000457d4	mov	x19, x0
00000000000457d8	nop
00000000000457dc	ldrsw	x8, _OBJC_IVAR_$_FRKKListAsNSArray.listHolder
00000000000457e0	add	x24, x0, x8
00000000000457e4	bl	_Kotlin_initRuntimeIfNeeded
00000000000457e8	adrp	x21, 35 ; 0x68000
00000000000457ec	add	x21, x21, #0xa00
00000000000457f0	ldr	x25, [x21]
00000000000457f4	mov	x0, x21
00000000000457f8	blr	x25
00000000000457fc	ldr	x8, [x0]
0000000000045800	add	x20, x8, #0x138
0000000000045804	ldaxr	w22, [x20]
0000000000045808	stlxr	w8, wzr, [x20]
000000000004580c	cbnz	w8, 0x45804
0000000000045810	adr	x23, #0x3d033
0000000000045814	nop
0000000000045818	cmp	w22, #0x1
000000000004581c	b.ne	0x45830
0000000000045820	ldarb	w8, [x23]
0000000000045824	tbz	w8, #0x0, 0x45830
0000000000045828	mov	x0, x20
000000000004582c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000045830	ldr	x8, [x24]
0000000000045834	cbz	x8, 0x45850
0000000000045838	ldr	x1, [x24, #0x8]
000000000004583c	mov	x0, x21
0000000000045840	blr	x25
0000000000045844	ldr	x8, [x0]
0000000000045848	add	x0, x8, #0x8
000000000004584c	bl	__ZN6kotlin2mm17StableRefRegistry19UnregisterStableRefEPNS0_10ThreadDataEPNS_16MultiSourceQueueIP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS6_EEE4NodeE
0000000000045850	ldaxr	w8, [x20]
0000000000045854	stlxr	w9, w22, [x20]
0000000000045858	cbnz	w9, 0x45850
000000000004585c	cbnz	w22, 0x45878
0000000000045860	cmp	w8, #0x1
0000000000045864	b.ne	0x45878
0000000000045868	ldarb	w8, [x23]
000000000004586c	tbz	w8, #0x0, 0x45878
0000000000045870	mov	x0, x20
0000000000045874	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000045878	nop
000000000004587c	ldr	x8, #0x20f1c ; Objc class ref: FRKKListAsNSArray
0000000000045880	stp	x19, x8, [sp]
0000000000045884	nop
0000000000045888	ldr	x1, #0x20c00 ; Objc selector ref: dealloc
000000000004588c	mov	x0, sp
0000000000045890	bl	0x4dcc4 ; Objc message: -[[x0 super] dealloc]
0000000000045894	ldp	x29, x30, [sp, #0x50]
0000000000045898	ldp	x20, x19, [sp, #0x40]
000000000004589c	ldp	x22, x21, [sp, #0x30]
00000000000458a0	ldp	x24, x23, [sp, #0x20]
00000000000458a4	ldp	x26, x25, [sp, #0x10]
00000000000458a8	add	sp, sp, #0x60
00000000000458ac	ret
-[KListAsNSArray toKotlin:]:
00000000000458b0	stp	x22, x21, [sp, #-0x30]!
00000000000458b4	stp	x20, x19, [sp, #0x10]
00000000000458b8	stp	x29, x30, [sp, #0x20]
00000000000458bc	add	x29, sp, #0x20
00000000000458c0	mov	x19, x2
00000000000458c4	mov	x20, x0
00000000000458c8	nop
00000000000458cc	ldrsw	x21, _OBJC_IVAR_$_FRKKListAsNSArray.listHolder
00000000000458d0	bl	_Kotlin_initRuntimeIfNeeded
00000000000458d4	ldr	x0, [x20, x21]
00000000000458d8	str	x0, [x19]
00000000000458dc	ldp	x29, x30, [sp, #0x20]
00000000000458e0	ldp	x20, x19, [sp, #0x10]
00000000000458e4	ldp	x22, x21, [sp], #0x30
00000000000458e8	ret
-[KListAsNSArray objectAtIndex:]:
00000000000458ec	sub	sp, sp, #0x70
00000000000458f0	stp	x26, x25, [sp, #0x20]
00000000000458f4	stp	x24, x23, [sp, #0x30]
00000000000458f8	stp	x22, x21, [sp, #0x40]
00000000000458fc	stp	x20, x19, [sp, #0x50]
0000000000045900	stp	x29, x30, [sp, #0x60]
0000000000045904	add	x29, sp, #0x60
0000000000045908	mov	x21, x2
000000000004590c	mov	x22, x0
0000000000045910	bl	_Kotlin_initRuntimeIfNeeded
0000000000045914	adrp	x20, 35 ; 0x68000
0000000000045918	add	x20, x20, #0xa00
000000000004591c	ldr	x25, [x20]
0000000000045920	mov	x0, x20
0000000000045924	blr	x25
0000000000045928	ldr	x8, [x0]
000000000004592c	add	x19, x8, #0x138
0000000000045930	ldaxr	w24, [x19]
0000000000045934	stlxr	w8, wzr, [x19]
0000000000045938	cbnz	w8, 0x45930
000000000004593c	cmp	w24, #0x1
0000000000045940	b.ne	0x4595c
0000000000045944	adr	x8, #0x3ceff
0000000000045948	nop
000000000004594c	ldarb	w8, [x8]
0000000000045950	tbz	w8, #0x0, 0x4595c
0000000000045954	mov	x0, x19
0000000000045958	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004595c	mov	x8, sp
0000000000045960	add	x23, x8, #0x18
0000000000045964	str	xzr, [sp, #0x18]
0000000000045968	mov	x0, x20
000000000004596c	blr	x25
0000000000045970	ldr	x9, [x0]
0000000000045974	ldr	x10, [x9, #0x110]
0000000000045978	str	x8, [x9, #0x110]
000000000004597c	mov	x8, #0x400000000
0000000000045980	stp	x10, x8, [sp, #0x8]
0000000000045984	nop
0000000000045988	ldrsw	x26, _OBJC_IVAR_$_FRKKListAsNSArray.listHolder
000000000004598c	bl	_Kotlin_initRuntimeIfNeeded
0000000000045990	ldr	x0, [x22, x26]
0000000000045994	mov	x1, x21
0000000000045998	mov	x2, x23
000000000004599c	bl	_Kotlin_List_get
00000000000459a0	cbz	x0, 0x459ac
00000000000459a4	bl	_Kotlin_ObjCExport_refToObjC
00000000000459a8	b	0x459c0
00000000000459ac	nop
00000000000459b0	ldr	x0, #0x20d70 ; Objc class ref: _OBJC_CLASS_$_NSNull
00000000000459b4	nop
00000000000459b8	ldr	x1, #0x20c08 ; Objc selector ref: null
00000000000459bc	bl	0x4dcb8 ; Objc message: +[NSNull null]
00000000000459c0	mov	x21, x0
00000000000459c4	mov	x0, x20
00000000000459c8	blr	x25
00000000000459cc	ldr	x8, [x0]
00000000000459d0	ldr	x9, [sp, #0x8]
00000000000459d4	str	x9, [x8, #0x110]
00000000000459d8	ldaxr	w8, [x19]
00000000000459dc	stlxr	w9, w24, [x19]
00000000000459e0	cbnz	w9, 0x459d8
00000000000459e4	cbnz	w24, 0x45a08
00000000000459e8	cmp	w8, #0x1
00000000000459ec	b.ne	0x45a08
00000000000459f0	adr	x8, #0x3ce53
00000000000459f4	nop
00000000000459f8	ldarb	w8, [x8]
00000000000459fc	tbz	w8, #0x0, 0x45a08
0000000000045a00	mov	x0, x19
0000000000045a04	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000045a08	mov	x0, x21
0000000000045a0c	ldp	x29, x30, [sp, #0x60]
0000000000045a10	ldp	x20, x19, [sp, #0x50]
0000000000045a14	ldp	x22, x21, [sp, #0x40]
0000000000045a18	ldp	x24, x23, [sp, #0x30]
0000000000045a1c	ldp	x26, x25, [sp, #0x20]
0000000000045a20	add	sp, sp, #0x70
0000000000045a24	ret
0000000000045a28	mov	x21, x0
0000000000045a2c	mov	x0, x20
0000000000045a30	blr	x25
0000000000045a34	ldr	x8, [x0]
0000000000045a38	ldr	x9, [sp, #0x8]
0000000000045a3c	str	x9, [x8, #0x110]
0000000000045a40	ldaxr	w8, [x19]
0000000000045a44	stlxr	w9, w24, [x19]
0000000000045a48	cbnz	w9, 0x45a40
0000000000045a4c	cbnz	w24, 0x45a70
0000000000045a50	cmp	w8, #0x1
0000000000045a54	b.ne	0x45a70
0000000000045a58	adr	x8, #0x3cdeb
0000000000045a5c	nop
0000000000045a60	ldarb	w8, [x8]
0000000000045a64	tbz	w8, #0x0, 0x45a70
0000000000045a68	mov	x0, x19
0000000000045a6c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000045a70	mov	x0, x21
0000000000045a74	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
-[KListAsNSArray count]:
0000000000045a78	stp	x22, x21, [sp, #-0x30]!
0000000000045a7c	stp	x20, x19, [sp, #0x10]
0000000000045a80	stp	x29, x30, [sp, #0x20]
0000000000045a84	add	x29, sp, #0x20
0000000000045a88	mov	x20, x0
0000000000045a8c	bl	_Kotlin_initRuntimeIfNeeded
0000000000045a90	adrp	x0, 35 ; 0x68000
0000000000045a94	add	x0, x0, #0xa00
0000000000045a98	ldr	x8, [x0]
0000000000045a9c	blr	x8
0000000000045aa0	ldr	x8, [x0]
0000000000045aa4	add	x19, x8, #0x138
0000000000045aa8	ldaxr	w21, [x19]
0000000000045aac	stlxr	w8, wzr, [x19]
0000000000045ab0	cbnz	w8, 0x45aa8
0000000000045ab4	cmp	w21, #0x1
0000000000045ab8	b.ne	0x45ad4
0000000000045abc	adr	x8, #0x3cd87
0000000000045ac0	nop
0000000000045ac4	ldarb	w8, [x8]
0000000000045ac8	tbz	w8, #0x0, 0x45ad4
0000000000045acc	mov	x0, x19
0000000000045ad0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000045ad4	nop
0000000000045ad8	ldrsw	x22, _OBJC_IVAR_$_FRKKListAsNSArray.listHolder
0000000000045adc	bl	_Kotlin_initRuntimeIfNeeded
0000000000045ae0	ldr	x0, [x20, x22]
0000000000045ae4	bl	_Kotlin_Collection_getSize
0000000000045ae8	mov	x20, x0
0000000000045aec	ldaxr	w8, [x19]
0000000000045af0	stlxr	w9, w21, [x19]
0000000000045af4	cbnz	w9, 0x45aec
0000000000045af8	cbnz	w21, 0x45b1c
0000000000045afc	cmp	w8, #0x1
0000000000045b00	b.ne	0x45b1c
0000000000045b04	adr	x8, #0x3cd3f
0000000000045b08	nop
0000000000045b0c	ldarb	w8, [x8]
0000000000045b10	tbz	w8, #0x0, 0x45b1c
0000000000045b14	mov	x0, x19
0000000000045b18	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000045b1c	sxtw	x0, w20
0000000000045b20	ldp	x29, x30, [sp, #0x20]
0000000000045b24	ldp	x20, x19, [sp, #0x10]
0000000000045b28	ldp	x22, x21, [sp], #0x30
0000000000045b2c	ret
0000000000045b30	mov	x20, x0
0000000000045b34	ldaxr	w8, [x19]
0000000000045b38	stlxr	w9, w21, [x19]
0000000000045b3c	cbnz	w9, 0x45b34
0000000000045b40	cbnz	w21, 0x45b64
0000000000045b44	cmp	w8, #0x1
0000000000045b48	b.ne	0x45b64
0000000000045b4c	adr	x8, #0x3ccf7
0000000000045b50	nop
0000000000045b54	ldarb	w8, [x8]
0000000000045b58	tbz	w8, #0x0, 0x45b64
0000000000045b5c	mov	x0, x19
0000000000045b60	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000045b64	mov	x0, x20
0000000000045b68	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
+[KListAsNSArray createRetainedWithKList:]:
0000000000045b6c	stp	x22, x21, [sp, #-0x30]!
0000000000045b70	stp	x20, x19, [sp, #0x10]
0000000000045b74	stp	x29, x30, [sp, #0x20]
0000000000045b78	add	x29, sp, #0x20
0000000000045b7c	mov	x19, x2
0000000000045b80	nop
0000000000045b84	ldr	x0, #0x20bc4 ; Objc class ref: FRKKListAsNSArray
0000000000045b88	bl	0x4dc40 ; symbol stub for: _objc_alloc
0000000000045b8c	nop
0000000000045b90	ldr	x1, #0x20938 ; Objc selector ref: init
0000000000045b94	bl	0x4dcb8 ; Objc message: +[FRKKListAsNSArray init]
0000000000045b98	mov	x20, x0
0000000000045b9c	nop
0000000000045ba0	ldrsw	x8, _OBJC_IVAR_$_FRKKListAsNSArray.listHolder
0000000000045ba4	add	x21, x0, x8
0000000000045ba8	adrp	x0, 35 ; 0x68000
0000000000045bac	add	x0, x0, #0xa00
0000000000045bb0	ldr	x8, [x0]
0000000000045bb4	blr	x8
0000000000045bb8	ldr	x22, [x0]
0000000000045bbc	mov	w0, #0x1
0000000000045bc0	mov	w1, #0x28
0000000000045bc4	bl	0x4db20 ; symbol stub for: _calloc
0000000000045bc8	ldr	x8, [x22, #0xa8]!
0000000000045bcc	sub	x9, x22, #0x8
0000000000045bd0	stp	x8, x22, [x0]
0000000000045bd4	str	x0, [x8, #0x8]
0000000000045bd8	str	x0, [x22]
0000000000045bdc	ldr	x8, [x22, #0x10]
0000000000045be0	add	x8, x8, #0x1
0000000000045be4	str	x8, [x22, #0x10]
0000000000045be8	stp	x9, x0, [x0, #0x18]
0000000000045bec	str	x19, [x0, #0x10]!
0000000000045bf0	stp	x19, x0, [x21]
0000000000045bf4	mov	x0, x20
0000000000045bf8	ldp	x29, x30, [sp, #0x20]
0000000000045bfc	ldp	x20, x19, [sp, #0x10]
0000000000045c00	ldp	x22, x21, [sp], #0x30
0000000000045c04	ret
-[KMutableListAsNSMutableArray dealloc]:
0000000000045c08	sub	sp, sp, #0x60
0000000000045c0c	stp	x26, x25, [sp, #0x10]
0000000000045c10	stp	x24, x23, [sp, #0x20]
0000000000045c14	stp	x22, x21, [sp, #0x30]
0000000000045c18	stp	x20, x19, [sp, #0x40]
0000000000045c1c	stp	x29, x30, [sp, #0x50]
0000000000045c20	add	x29, sp, #0x50
0000000000045c24	mov	x19, x0
0000000000045c28	nop
0000000000045c2c	ldrsw	x8, _OBJC_IVAR_$_FRKKMutableListAsNSMutableArray.listHolder
0000000000045c30	add	x24, x0, x8
0000000000045c34	bl	_Kotlin_initRuntimeIfNeeded
0000000000045c38	adrp	x21, 35 ; 0x68000
0000000000045c3c	add	x21, x21, #0xa00
0000000000045c40	ldr	x25, [x21]
0000000000045c44	mov	x0, x21
0000000000045c48	blr	x25
0000000000045c4c	ldr	x8, [x0]
0000000000045c50	add	x20, x8, #0x138
0000000000045c54	ldaxr	w22, [x20]
0000000000045c58	stlxr	w8, wzr, [x20]
0000000000045c5c	cbnz	w8, 0x45c54
0000000000045c60	adr	x23, #0x3cbe3
0000000000045c64	nop
0000000000045c68	cmp	w22, #0x1
0000000000045c6c	b.ne	0x45c80
0000000000045c70	ldarb	w8, [x23]
0000000000045c74	tbz	w8, #0x0, 0x45c80
0000000000045c78	mov	x0, x20
0000000000045c7c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000045c80	ldr	x8, [x24]
0000000000045c84	cbz	x8, 0x45ca0
0000000000045c88	ldr	x1, [x24, #0x8]
0000000000045c8c	mov	x0, x21
0000000000045c90	blr	x25
0000000000045c94	ldr	x8, [x0]
0000000000045c98	add	x0, x8, #0x8
0000000000045c9c	bl	__ZN6kotlin2mm17StableRefRegistry19UnregisterStableRefEPNS0_10ThreadDataEPNS_16MultiSourceQueueIP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS6_EEE4NodeE
0000000000045ca0	ldaxr	w8, [x20]
0000000000045ca4	stlxr	w9, w22, [x20]
0000000000045ca8	cbnz	w9, 0x45ca0
0000000000045cac	cbnz	w22, 0x45cc8
0000000000045cb0	cmp	w8, #0x1
0000000000045cb4	b.ne	0x45cc8
0000000000045cb8	ldarb	w8, [x23]
0000000000045cbc	tbz	w8, #0x0, 0x45cc8
0000000000045cc0	mov	x0, x20
0000000000045cc4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000045cc8	nop
0000000000045ccc	ldr	x8, #0x20ad4 ; Objc class ref: FRKKMutableListAsNSMutableArray
0000000000045cd0	stp	x19, x8, [sp]
0000000000045cd4	nop
0000000000045cd8	ldr	x1, #0x207b0 ; Objc selector ref: dealloc
0000000000045cdc	mov	x0, sp
0000000000045ce0	bl	0x4dcc4 ; Objc message: -[[x0 super] dealloc]
0000000000045ce4	ldp	x29, x30, [sp, #0x50]
0000000000045ce8	ldp	x20, x19, [sp, #0x40]
0000000000045cec	ldp	x22, x21, [sp, #0x30]
0000000000045cf0	ldp	x24, x23, [sp, #0x20]
0000000000045cf4	ldp	x26, x25, [sp, #0x10]
0000000000045cf8	add	sp, sp, #0x60
0000000000045cfc	ret
-[KMutableListAsNSMutableArray toKotlin:]:
0000000000045d00	stp	x22, x21, [sp, #-0x30]!
0000000000045d04	stp	x20, x19, [sp, #0x10]
0000000000045d08	stp	x29, x30, [sp, #0x20]
0000000000045d0c	add	x29, sp, #0x20
0000000000045d10	mov	x19, x2
0000000000045d14	mov	x20, x0
0000000000045d18	nop
0000000000045d1c	ldrsw	x21, _OBJC_IVAR_$_FRKKMutableListAsNSMutableArray.listHolder
0000000000045d20	bl	_Kotlin_initRuntimeIfNeeded
0000000000045d24	ldr	x0, [x20, x21]
0000000000045d28	str	x0, [x19]
0000000000045d2c	ldp	x29, x30, [sp, #0x20]
0000000000045d30	ldp	x20, x19, [sp, #0x10]
0000000000045d34	ldp	x22, x21, [sp], #0x30
0000000000045d38	ret
-[KMutableListAsNSMutableArray objectAtIndex:]:
0000000000045d3c	sub	sp, sp, #0x70
0000000000045d40	stp	x26, x25, [sp, #0x20]
0000000000045d44	stp	x24, x23, [sp, #0x30]
0000000000045d48	stp	x22, x21, [sp, #0x40]
0000000000045d4c	stp	x20, x19, [sp, #0x50]
0000000000045d50	stp	x29, x30, [sp, #0x60]
0000000000045d54	add	x29, sp, #0x60
0000000000045d58	mov	x21, x2
0000000000045d5c	mov	x22, x0
0000000000045d60	bl	_Kotlin_initRuntimeIfNeeded
0000000000045d64	adrp	x20, 35 ; 0x68000
0000000000045d68	add	x20, x20, #0xa00
0000000000045d6c	ldr	x25, [x20]
0000000000045d70	mov	x0, x20
0000000000045d74	blr	x25
0000000000045d78	ldr	x8, [x0]
0000000000045d7c	add	x19, x8, #0x138
0000000000045d80	ldaxr	w24, [x19]
0000000000045d84	stlxr	w8, wzr, [x19]
0000000000045d88	cbnz	w8, 0x45d80
0000000000045d8c	cmp	w24, #0x1
0000000000045d90	b.ne	0x45dac
0000000000045d94	adr	x8, #0x3caaf
0000000000045d98	nop
0000000000045d9c	ldarb	w8, [x8]
0000000000045da0	tbz	w8, #0x0, 0x45dac
0000000000045da4	mov	x0, x19
0000000000045da8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000045dac	mov	x8, sp
0000000000045db0	add	x23, x8, #0x18
0000000000045db4	str	xzr, [sp, #0x18]
0000000000045db8	mov	x0, x20
0000000000045dbc	blr	x25
0000000000045dc0	ldr	x9, [x0]
0000000000045dc4	ldr	x10, [x9, #0x110]
0000000000045dc8	str	x8, [x9, #0x110]
0000000000045dcc	mov	x8, #0x400000000
0000000000045dd0	stp	x10, x8, [sp, #0x8]
0000000000045dd4	nop
0000000000045dd8	ldrsw	x26, _OBJC_IVAR_$_FRKKMutableListAsNSMutableArray.listHolder
0000000000045ddc	bl	_Kotlin_initRuntimeIfNeeded
0000000000045de0	ldr	x0, [x22, x26]
0000000000045de4	mov	x1, x21
0000000000045de8	mov	x2, x23
0000000000045dec	bl	_Kotlin_List_get
0000000000045df0	cbz	x0, 0x45dfc
0000000000045df4	bl	_Kotlin_ObjCExport_refToObjC
0000000000045df8	b	0x45e10
0000000000045dfc	nop
0000000000045e00	ldr	x0, #0x20920 ; Objc class ref: _OBJC_CLASS_$_NSNull
0000000000045e04	nop
0000000000045e08	ldr	x1, #0x207b8 ; Objc selector ref: null
0000000000045e0c	bl	0x4dcb8 ; Objc message: +[NSNull null]
0000000000045e10	mov	x21, x0
0000000000045e14	mov	x0, x20
0000000000045e18	blr	x25
0000000000045e1c	ldr	x8, [x0]
0000000000045e20	ldr	x9, [sp, #0x8]
0000000000045e24	str	x9, [x8, #0x110]
0000000000045e28	ldaxr	w8, [x19]
0000000000045e2c	stlxr	w9, w24, [x19]
0000000000045e30	cbnz	w9, 0x45e28
0000000000045e34	cbnz	w24, 0x45e58
0000000000045e38	cmp	w8, #0x1
0000000000045e3c	b.ne	0x45e58
0000000000045e40	adr	x8, #0x3ca03
0000000000045e44	nop
0000000000045e48	ldarb	w8, [x8]
0000000000045e4c	tbz	w8, #0x0, 0x45e58
0000000000045e50	mov	x0, x19
0000000000045e54	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000045e58	mov	x0, x21
0000000000045e5c	ldp	x29, x30, [sp, #0x60]
0000000000045e60	ldp	x20, x19, [sp, #0x50]
0000000000045e64	ldp	x22, x21, [sp, #0x40]
0000000000045e68	ldp	x24, x23, [sp, #0x30]
0000000000045e6c	ldp	x26, x25, [sp, #0x20]
0000000000045e70	add	sp, sp, #0x70
0000000000045e74	ret
0000000000045e78	mov	x21, x0
0000000000045e7c	mov	x0, x20
0000000000045e80	blr	x25
0000000000045e84	ldr	x8, [x0]
0000000000045e88	ldr	x9, [sp, #0x8]
0000000000045e8c	str	x9, [x8, #0x110]
0000000000045e90	ldaxr	w8, [x19]
0000000000045e94	stlxr	w9, w24, [x19]
0000000000045e98	cbnz	w9, 0x45e90
0000000000045e9c	cbnz	w24, 0x45ec0
0000000000045ea0	cmp	w8, #0x1
0000000000045ea4	b.ne	0x45ec0
0000000000045ea8	adr	x8, #0x3c99b
0000000000045eac	nop
0000000000045eb0	ldarb	w8, [x8]
0000000000045eb4	tbz	w8, #0x0, 0x45ec0
0000000000045eb8	mov	x0, x19
0000000000045ebc	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000045ec0	mov	x0, x21
0000000000045ec4	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
-[KMutableListAsNSMutableArray count]:
0000000000045ec8	stp	x22, x21, [sp, #-0x30]!
0000000000045ecc	stp	x20, x19, [sp, #0x10]
0000000000045ed0	stp	x29, x30, [sp, #0x20]
0000000000045ed4	add	x29, sp, #0x20
0000000000045ed8	mov	x20, x0
0000000000045edc	bl	_Kotlin_initRuntimeIfNeeded
0000000000045ee0	adrp	x0, 35 ; 0x68000
0000000000045ee4	add	x0, x0, #0xa00
0000000000045ee8	ldr	x8, [x0]
0000000000045eec	blr	x8
0000000000045ef0	ldr	x8, [x0]
0000000000045ef4	add	x19, x8, #0x138
0000000000045ef8	ldaxr	w21, [x19]
0000000000045efc	stlxr	w8, wzr, [x19]
0000000000045f00	cbnz	w8, 0x45ef8
0000000000045f04	cmp	w21, #0x1
0000000000045f08	b.ne	0x45f24
0000000000045f0c	adr	x8, #0x3c937
0000000000045f10	nop
0000000000045f14	ldarb	w8, [x8]
0000000000045f18	tbz	w8, #0x0, 0x45f24
0000000000045f1c	mov	x0, x19
0000000000045f20	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000045f24	nop
0000000000045f28	ldrsw	x22, _OBJC_IVAR_$_FRKKMutableListAsNSMutableArray.listHolder
0000000000045f2c	bl	_Kotlin_initRuntimeIfNeeded
0000000000045f30	ldr	x0, [x20, x22]
0000000000045f34	bl	_Kotlin_Collection_getSize
0000000000045f38	mov	x20, x0
0000000000045f3c	ldaxr	w8, [x19]
0000000000045f40	stlxr	w9, w21, [x19]
0000000000045f44	cbnz	w9, 0x45f3c
0000000000045f48	cbnz	w21, 0x45f6c
0000000000045f4c	cmp	w8, #0x1
0000000000045f50	b.ne	0x45f6c
0000000000045f54	adr	x8, #0x3c8ef
0000000000045f58	nop
0000000000045f5c	ldarb	w8, [x8]
0000000000045f60	tbz	w8, #0x0, 0x45f6c
0000000000045f64	mov	x0, x19
0000000000045f68	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000045f6c	sxtw	x0, w20
0000000000045f70	ldp	x29, x30, [sp, #0x20]
0000000000045f74	ldp	x20, x19, [sp, #0x10]
0000000000045f78	ldp	x22, x21, [sp], #0x30
0000000000045f7c	ret
0000000000045f80	mov	x20, x0
0000000000045f84	ldaxr	w8, [x19]
0000000000045f88	stlxr	w9, w21, [x19]
0000000000045f8c	cbnz	w9, 0x45f84
0000000000045f90	cbnz	w21, 0x45fb4
0000000000045f94	cmp	w8, #0x1
0000000000045f98	b.ne	0x45fb4
0000000000045f9c	adr	x8, #0x3c8a7
0000000000045fa0	nop
0000000000045fa4	ldarb	w8, [x8]
0000000000045fa8	tbz	w8, #0x0, 0x45fb4
0000000000045fac	mov	x0, x19
0000000000045fb0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000045fb4	mov	x0, x20
0000000000045fb8	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
-[KMutableListAsNSMutableArray insertObject:atIndex:]:
0000000000045fbc	sub	sp, sp, #0x90
0000000000045fc0	stp	x26, x25, [sp, #0x40]
0000000000045fc4	stp	x24, x23, [sp, #0x50]
0000000000045fc8	stp	x22, x21, [sp, #0x60]
0000000000045fcc	stp	x20, x19, [sp, #0x70]
0000000000045fd0	stp	x29, x30, [sp, #0x80]
0000000000045fd4	add	x29, sp, #0x80
0000000000045fd8	mov	x21, x3
0000000000045fdc	mov	x22, x2
0000000000045fe0	mov	x23, x0
0000000000045fe4	bl	_Kotlin_initRuntimeIfNeeded
0000000000045fe8	adrp	x20, 35 ; 0x68000
0000000000045fec	add	x20, x20, #0xa00
0000000000045ff0	ldr	x25, [x20]
0000000000045ff4	mov	x0, x20
0000000000045ff8	blr	x25
0000000000045ffc	ldr	x8, [x0]
0000000000046000	add	x19, x8, #0x138
0000000000046004	ldaxr	w24, [x19]
0000000000046008	stlxr	w8, wzr, [x19]
000000000004600c	cbnz	w8, 0x46004
0000000000046010	cmp	w24, #0x1
0000000000046014	b.ne	0x46030
0000000000046018	adr	x8, #0x3c82b
000000000004601c	nop
0000000000046020	ldarb	w8, [x8]
0000000000046024	tbz	w8, #0x0, 0x46030
0000000000046028	mov	x0, x19
000000000004602c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000046030	add	x26, sp, #0x8
0000000000046034	str	xzr, [sp, #0x20]
0000000000046038	mov	x0, x20
000000000004603c	blr	x25
0000000000046040	ldr	x8, [x0]
0000000000046044	ldr	x9, [x8, #0x110]
0000000000046048	str	x26, [x8, #0x110]
000000000004604c	mov	x8, #0x400000000
0000000000046050	stp	x9, x8, [sp, #0x10]
0000000000046054	nop
0000000000046058	ldr	x0, #0x206c8 ; Objc class ref: _OBJC_CLASS_$_NSNull
000000000004605c	nop
0000000000046060	ldr	x1, #0x20560 ; Objc selector ref: null
0000000000046064	bl	0x4dcb8 ; Objc message: +[NSNull null]
0000000000046068	cmp	x0, x22
000000000004606c	ccmp	x22, #0x0, #0x4, ne
0000000000046070	b.ne	0x46080
0000000000046074	mov	x22, #0x0
0000000000046078	str	xzr, [sp, #0x20]
000000000004607c	b	0x46098
0000000000046080	add	x2, x26, #0x18
0000000000046084	nop
0000000000046088	ldr	x1, #0x3ca10
000000000004608c	mov	x0, x22
0000000000046090	bl	0x4dcb8 ; Objc message: -[x0 null]
0000000000046094	mov	x22, x0
0000000000046098	bl	_Kotlin_initRuntimeIfNeeded
000000000004609c	lsr	x8, x21, #31
00000000000460a0	cbnz	x8, 0x46204
00000000000460a4	nop
00000000000460a8	ldrsw	x8, _OBJC_IVAR_$_FRKKMutableListAsNSMutableArray.listHolder
00000000000460ac	ldr	x23, [x23, x8]
00000000000460b0	str	xzr, [sp, #0x28]
00000000000460b4	mov	x0, x20
00000000000460b8	blr	x25
00000000000460bc	ldr	x8, [x0]
00000000000460c0	ldr	x9, [x8, #0x110]
00000000000460c4	add	x10, sp, #0x28
00000000000460c8	str	x10, [x8, #0x110]
00000000000460cc	mov	x8, #0x300000000
00000000000460d0	stp	x9, x8, [sp, #0x30]
00000000000460d4	adr	x26, #0x3c76f
00000000000460d8	nop
00000000000460dc	ldarb	w8, [x26]
00000000000460e0	tbz	w8, #0x0, 0x460e8
00000000000460e4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000460e8	ldr	x8, [x23]
00000000000460ec	and	x8, x8, #0xfffffffffffffffc
00000000000460f0	ldr	x8, [x8]
00000000000460f4	ldr	w9, [x8, #0x3c]
00000000000460f8	ldr	x8, [x8, #0x40]
00000000000460fc	tbnz	w9, #0x1f, 0x4610c
0000000000046100	mov	w10, #0x16
0000000000046104	and	x9, x9, x10
0000000000046108	b	0x46190
000000000004610c	neg	w10, w9
0000000000046110	mvn	w9, w9
0000000000046114	cmp	w10, #0x9
0000000000046118	b.ge	0x46150
000000000004611c	cmp	w10, #0x2
0000000000046120	b.lt	0x46184
0000000000046124	mov	x10, #0x0
0000000000046128	mov	x11, x8
000000000004612c	ldr	w12, [x11]
0000000000046130	cmp	w12, #0x15
0000000000046134	b.gt	0x4618c
0000000000046138	add	x10, x10, #0x1
000000000004613c	add	x11, x11, #0x10
0000000000046140	cmp	x9, x10
0000000000046144	b.ne	0x4612c
0000000000046148	mov	x10, x9
000000000004614c	b	0x4618c
0000000000046150	mov	w10, #0x0
0000000000046154	add	w11, w9, w10
0000000000046158	cmp	w11, #0x0
000000000004615c	cinc	w11, w11, lt
0000000000046160	asr	w11, w11, #1
0000000000046164	sbfiz	x12, x11, #4, #32
0000000000046168	ldr	w12, [x8, x12]
000000000004616c	cmp	w12, #0x16
0000000000046170	csinc	w10, w10, w11, ge
0000000000046174	csel	w9, w9, w11, lt
0000000000046178	cmp	w10, w9
000000000004617c	b.lt	0x46154
0000000000046180	b	0x4618c
0000000000046184	mov	w10, #0x0
0000000000046188	b	0x4618c
000000000004618c	sxtw	x9, w10
0000000000046190	add	x8, x8, x9, lsl #4
0000000000046194	ldr	x8, [x8, #0x8]
0000000000046198	ldr	x8, [x8, #0x8]
000000000004619c	mov	x0, x23
00000000000461a0	mov	x1, x21
00000000000461a4	mov	x2, x22
00000000000461a8	blr	x8
00000000000461ac	mov	x0, x20
00000000000461b0	blr	x25
00000000000461b4	ldr	x8, [x0]
00000000000461b8	ldr	x9, [sp, #0x10]
00000000000461bc	str	x9, [x8, #0x110]
00000000000461c0	ldaxr	w8, [x19]
00000000000461c4	stlxr	w9, w24, [x19]
00000000000461c8	cbnz	w9, 0x461c0
00000000000461cc	cbnz	w24, 0x461e8
00000000000461d0	cmp	w8, #0x1
00000000000461d4	b.ne	0x461e8
00000000000461d8	ldarb	w8, [x26]
00000000000461dc	tbz	w8, #0x0, 0x461e8
00000000000461e0	mov	x0, x19
00000000000461e4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000461e8	ldp	x29, x30, [sp, #0x80]
00000000000461ec	ldp	x20, x19, [sp, #0x70]
00000000000461f0	ldp	x22, x21, [sp, #0x60]
00000000000461f4	ldp	x24, x23, [sp, #0x50]
00000000000461f8	ldp	x26, x25, [sp, #0x40]
00000000000461fc	add	sp, sp, #0x90
0000000000046200	ret
0000000000046204	bl	_ThrowArrayIndexOutOfBoundsException
0000000000046208	brk	#0x1
000000000004620c	mov	x21, x0
0000000000046210	mov	x0, x20
0000000000046214	blr	x25
0000000000046218	ldr	x8, [x0]
000000000004621c	ldr	x9, [sp, #0x30]
0000000000046220	str	x9, [x8, #0x110]
0000000000046224	b	0x46238
0000000000046228	mov	x21, x0
000000000004622c	mov	x0, x20
0000000000046230	blr	x25
0000000000046234	ldr	x8, [x0]
0000000000046238	ldr	x9, [sp, #0x10]
000000000004623c	str	x9, [x8, #0x110]
0000000000046240	ldaxr	w8, [x19]
0000000000046244	stlxr	w9, w24, [x19]
0000000000046248	cbnz	w9, 0x46240
000000000004624c	cbnz	w24, 0x46270
0000000000046250	cmp	w8, #0x1
0000000000046254	b.ne	0x46270
0000000000046258	adr	x8, #0x3c5eb
000000000004625c	nop
0000000000046260	ldarb	w8, [x8]
0000000000046264	tbz	w8, #0x0, 0x46270
0000000000046268	mov	x0, x19
000000000004626c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000046270	mov	x0, x21
0000000000046274	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
-[KMutableListAsNSMutableArray removeObjectAtIndex:]:
0000000000046278	sub	sp, sp, #0x70
000000000004627c	stp	x26, x25, [sp, #0x20]
0000000000046280	stp	x24, x23, [sp, #0x30]
0000000000046284	stp	x22, x21, [sp, #0x40]
0000000000046288	stp	x20, x19, [sp, #0x50]
000000000004628c	stp	x29, x30, [sp, #0x60]
0000000000046290	add	x29, sp, #0x60
0000000000046294	mov	x21, x2
0000000000046298	mov	x22, x0
000000000004629c	bl	_Kotlin_initRuntimeIfNeeded
00000000000462a0	adrp	x20, 34 ; 0x68000
00000000000462a4	add	x20, x20, #0xa00
00000000000462a8	ldr	x26, [x20]
00000000000462ac	mov	x0, x20
00000000000462b0	blr	x26
00000000000462b4	ldr	x8, [x0]
00000000000462b8	add	x19, x8, #0x138
00000000000462bc	ldaxr	w25, [x19]
00000000000462c0	stlxr	w8, wzr, [x19]
00000000000462c4	cbnz	w8, 0x462bc
00000000000462c8	adr	x24, #0x3c57b
00000000000462cc	nop
00000000000462d0	cmp	w25, #0x1
00000000000462d4	b.ne	0x462e8
00000000000462d8	ldarb	w8, [x24]
00000000000462dc	tbz	w8, #0x0, 0x462e8
00000000000462e0	mov	x0, x19
00000000000462e4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000462e8	bl	_Kotlin_initRuntimeIfNeeded
00000000000462ec	lsr	x8, x21, #31
00000000000462f0	cbnz	x8, 0x46454
00000000000462f4	nop
00000000000462f8	ldrsw	x8, _OBJC_IVAR_$_FRKKMutableListAsNSMutableArray.listHolder
00000000000462fc	ldr	x22, [x22, x8]
0000000000046300	movi.16b	v0, #0x0
0000000000046304	stp	q0, q0, [sp]
0000000000046308	mov	x8, sp
000000000004630c	add	x23, x8, #0x18
0000000000046310	mov	x0, x20
0000000000046314	blr	x26
0000000000046318	ldr	x9, [x0]
000000000004631c	ldr	x10, [x9, #0x110]
0000000000046320	str	x8, [x9, #0x110]
0000000000046324	mov	x8, #0x400000000
0000000000046328	stp	x10, x8, [sp, #0x8]
000000000004632c	ldarb	w8, [x24]
0000000000046330	tbz	w8, #0x0, 0x46338
0000000000046334	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000046338	ldr	x8, [x22]
000000000004633c	and	x8, x8, #0xfffffffffffffffc
0000000000046340	ldr	x8, [x8]
0000000000046344	ldr	w9, [x8, #0x3c]
0000000000046348	ldr	x8, [x8, #0x40]
000000000004634c	tbnz	w9, #0x1f, 0x4635c
0000000000046350	mov	w10, #0x16
0000000000046354	and	x9, x9, x10
0000000000046358	b	0x463e0
000000000004635c	neg	w10, w9
0000000000046360	mvn	w9, w9
0000000000046364	cmp	w10, #0x9
0000000000046368	b.ge	0x463a0
000000000004636c	cmp	w10, #0x2
0000000000046370	b.lt	0x463d4
0000000000046374	mov	x10, #0x0
0000000000046378	mov	x11, x8
000000000004637c	ldr	w12, [x11]
0000000000046380	cmp	w12, #0x15
0000000000046384	b.gt	0x463dc
0000000000046388	add	x10, x10, #0x1
000000000004638c	add	x11, x11, #0x10
0000000000046390	cmp	x9, x10
0000000000046394	b.ne	0x4637c
0000000000046398	mov	x10, x9
000000000004639c	b	0x463dc
00000000000463a0	mov	w10, #0x0
00000000000463a4	add	w11, w9, w10
00000000000463a8	cmp	w11, #0x0
00000000000463ac	cinc	w11, w11, lt
00000000000463b0	asr	w11, w11, #1
00000000000463b4	sbfiz	x12, x11, #4, #32
00000000000463b8	ldr	w12, [x8, x12]
00000000000463bc	cmp	w12, #0x16
00000000000463c0	csinc	w10, w10, w11, ge
00000000000463c4	csel	w9, w9, w11, lt
00000000000463c8	cmp	w10, w9
00000000000463cc	b.lt	0x463a4
00000000000463d0	b	0x463dc
00000000000463d4	mov	w10, #0x0
00000000000463d8	b	0x463dc
00000000000463dc	sxtw	x9, w10
00000000000463e0	add	x8, x8, x9, lsl #4
00000000000463e4	ldr	x8, [x8, #0x8]
00000000000463e8	ldr	x8, [x8, #0x48]
00000000000463ec	mov	x0, x22
00000000000463f0	mov	x1, x21
00000000000463f4	mov	x2, x23
00000000000463f8	blr	x8
00000000000463fc	mov	x0, x20
0000000000046400	blr	x26
0000000000046404	ldr	x8, [x0]
0000000000046408	ldr	x9, [sp, #0x8]
000000000004640c	str	x9, [x8, #0x110]
0000000000046410	ldaxr	w8, [x19]
0000000000046414	stlxr	w9, w25, [x19]
0000000000046418	cbnz	w9, 0x46410
000000000004641c	cbnz	w25, 0x46438
0000000000046420	cmp	w8, #0x1
0000000000046424	b.ne	0x46438
0000000000046428	ldarb	w8, [x24]
000000000004642c	tbz	w8, #0x0, 0x46438
0000000000046430	mov	x0, x19
0000000000046434	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000046438	ldp	x29, x30, [sp, #0x60]
000000000004643c	ldp	x20, x19, [sp, #0x50]
0000000000046440	ldp	x22, x21, [sp, #0x40]
0000000000046444	ldp	x24, x23, [sp, #0x30]
0000000000046448	ldp	x26, x25, [sp, #0x20]
000000000004644c	add	sp, sp, #0x70
0000000000046450	ret
0000000000046454	bl	_ThrowArrayIndexOutOfBoundsException
0000000000046458	brk	#0x1
000000000004645c	mov	x21, x0
0000000000046460	mov	x0, x20
0000000000046464	blr	x26
0000000000046468	ldr	x8, [x0]
000000000004646c	ldr	x9, [sp, #0x8]
0000000000046470	str	x9, [x8, #0x110]
0000000000046474	b	0x4647c
0000000000046478	mov	x21, x0
000000000004647c	ldaxr	w8, [x19]
0000000000046480	stlxr	w9, w25, [x19]
0000000000046484	cbnz	w9, 0x4647c
0000000000046488	cbnz	w25, 0x464a4
000000000004648c	cmp	w8, #0x1
0000000000046490	b.ne	0x464a4
0000000000046494	ldarb	w8, [x24]
0000000000046498	tbz	w8, #0x0, 0x464a4
000000000004649c	mov	x0, x19
00000000000464a0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000464a4	mov	x0, x21
00000000000464a8	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
-[KMutableListAsNSMutableArray addObject:]:
00000000000464ac	sub	sp, sp, #0x70
00000000000464b0	stp	x26, x25, [sp, #0x20]
00000000000464b4	stp	x24, x23, [sp, #0x30]
00000000000464b8	stp	x22, x21, [sp, #0x40]
00000000000464bc	stp	x20, x19, [sp, #0x50]
00000000000464c0	stp	x29, x30, [sp, #0x60]
00000000000464c4	add	x29, sp, #0x60
00000000000464c8	mov	x21, x2
00000000000464cc	mov	x22, x0
00000000000464d0	bl	_Kotlin_initRuntimeIfNeeded
00000000000464d4	adrp	x20, 34 ; 0x68000
00000000000464d8	add	x20, x20, #0xa00
00000000000464dc	ldr	x24, [x20]
00000000000464e0	mov	x0, x20
00000000000464e4	blr	x24
00000000000464e8	ldr	x8, [x0]
00000000000464ec	add	x19, x8, #0x138
00000000000464f0	ldaxr	w23, [x19]
00000000000464f4	stlxr	w8, wzr, [x19]
00000000000464f8	cbnz	w8, 0x464f0
00000000000464fc	cmp	w23, #0x1
0000000000046500	b.ne	0x4651c
0000000000046504	adr	x8, #0x3c33f
0000000000046508	nop
000000000004650c	ldarb	w8, [x8]
0000000000046510	tbz	w8, #0x0, 0x4651c
0000000000046514	mov	x0, x19
0000000000046518	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004651c	mov	x25, sp
0000000000046520	str	xzr, [sp, #0x18]
0000000000046524	mov	x0, x20
0000000000046528	blr	x24
000000000004652c	ldr	x8, [x0]
0000000000046530	ldr	x9, [x8, #0x110]
0000000000046534	str	x25, [x8, #0x110]
0000000000046538	mov	x8, #0x400000000
000000000004653c	stp	x9, x8, [sp, #0x8]
0000000000046540	nop
0000000000046544	ldrsw	x26, _OBJC_IVAR_$_FRKKMutableListAsNSMutableArray.listHolder
0000000000046548	bl	_Kotlin_initRuntimeIfNeeded
000000000004654c	ldr	x22, [x22, x26]
0000000000046550	nop
0000000000046554	ldr	x0, #0x201cc ; Objc class ref: _OBJC_CLASS_$_NSNull
0000000000046558	nop
000000000004655c	ldr	x1, #0x20064 ; Objc selector ref: null
0000000000046560	bl	0x4dcb8 ; Objc message: +[NSNull null]
0000000000046564	cmp	x0, x21
0000000000046568	b.eq	0x4658c
000000000004656c	cbz	x21, 0x4658c
0000000000046570	add	x2, x25, #0x18
0000000000046574	nop
0000000000046578	ldr	x1, #0x3c520
000000000004657c	mov	x0, x21
0000000000046580	bl	0x4dcb8 ; Objc message: -[x0 null]
0000000000046584	mov	x1, x0
0000000000046588	b	0x46594
000000000004658c	mov	x1, #0x0
0000000000046590	str	xzr, [sp, #0x18]
0000000000046594	mov	x0, x22
0000000000046598	bl	_Kotlin_MutableCollection_addObject
000000000004659c	mov	x0, x20
00000000000465a0	blr	x24
00000000000465a4	ldr	x8, [x0]
00000000000465a8	ldr	x9, [sp, #0x8]
00000000000465ac	str	x9, [x8, #0x110]
00000000000465b0	ldaxr	w8, [x19]
00000000000465b4	stlxr	w9, w23, [x19]
00000000000465b8	cbnz	w9, 0x465b0
00000000000465bc	cbnz	w23, 0x465e0
00000000000465c0	cmp	w8, #0x1
00000000000465c4	b.ne	0x465e0
00000000000465c8	adr	x8, #0x3c27b
00000000000465cc	nop
00000000000465d0	ldarb	w8, [x8]
00000000000465d4	tbz	w8, #0x0, 0x465e0
00000000000465d8	mov	x0, x19
00000000000465dc	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000465e0	ldp	x29, x30, [sp, #0x60]
00000000000465e4	ldp	x20, x19, [sp, #0x50]
00000000000465e8	ldp	x22, x21, [sp, #0x40]
00000000000465ec	ldp	x24, x23, [sp, #0x30]
00000000000465f0	ldp	x26, x25, [sp, #0x20]
00000000000465f4	add	sp, sp, #0x70
00000000000465f8	ret
00000000000465fc	mov	x21, x0
0000000000046600	mov	x0, x20
0000000000046604	blr	x24
0000000000046608	ldr	x8, [x0]
000000000004660c	ldr	x9, [sp, #0x8]
0000000000046610	str	x9, [x8, #0x110]
0000000000046614	ldaxr	w8, [x19]
0000000000046618	stlxr	w9, w23, [x19]
000000000004661c	cbnz	w9, 0x46614
0000000000046620	cbnz	w23, 0x46644
0000000000046624	cmp	w8, #0x1
0000000000046628	b.ne	0x46644
000000000004662c	adr	x8, #0x3c217
0000000000046630	nop
0000000000046634	ldarb	w8, [x8]
0000000000046638	tbz	w8, #0x0, 0x46644
000000000004663c	mov	x0, x19
0000000000046640	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000046644	mov	x0, x21
0000000000046648	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
-[KMutableListAsNSMutableArray removeLastObject]:
000000000004664c	sub	sp, sp, #0x70
0000000000046650	stp	x26, x25, [sp, #0x20]
0000000000046654	stp	x24, x23, [sp, #0x30]
0000000000046658	stp	x22, x21, [sp, #0x40]
000000000004665c	stp	x20, x19, [sp, #0x50]
0000000000046660	stp	x29, x30, [sp, #0x60]
0000000000046664	add	x29, sp, #0x60
0000000000046668	mov	x21, x0
000000000004666c	bl	_Kotlin_initRuntimeIfNeeded
0000000000046670	adrp	x20, 34 ; 0x68000
0000000000046674	add	x20, x20, #0xa00
0000000000046678	ldr	x24, [x20]
000000000004667c	mov	x0, x20
0000000000046680	blr	x24
0000000000046684	ldr	x8, [x0]
0000000000046688	add	x19, x8, #0x138
000000000004668c	ldaxr	w23, [x19]
0000000000046690	stlxr	w8, wzr, [x19]
0000000000046694	cbnz	w8, 0x4668c
0000000000046698	adr	x22, #0x3c1ab
000000000004669c	nop
00000000000466a0	cmp	w23, #0x1
00000000000466a4	b.ne	0x466b8
00000000000466a8	ldarb	w8, [x22]
00000000000466ac	tbz	w8, #0x0, 0x466b8
00000000000466b0	mov	x0, x19
00000000000466b4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000466b8	nop
00000000000466bc	ldrsw	x25, _OBJC_IVAR_$_FRKKMutableListAsNSMutableArray.listHolder
00000000000466c0	bl	_Kotlin_initRuntimeIfNeeded
00000000000466c4	ldr	x21, [x21, x25]
00000000000466c8	movi.16b	v0, #0x0
00000000000466cc	stp	q0, q0, [sp]
00000000000466d0	mov	x25, sp
00000000000466d4	mov	x0, x20
00000000000466d8	blr	x24
00000000000466dc	ldr	x8, [x0]
00000000000466e0	ldr	x9, [x8, #0x110]
00000000000466e4	str	x25, [x8, #0x110]
00000000000466e8	mov	x8, #0x400000000
00000000000466ec	stp	x9, x8, [sp, #0x8]
00000000000466f0	ldarb	w8, [x22]
00000000000466f4	tbz	w8, #0x0, 0x466fc
00000000000466f8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000466fc	mov	x0, x21
0000000000046700	bl	"_kfun:kotlin.collections#<get-lastIndex>__at__kotlin.collections.List<0:0>(){0ยง<kotlin.Any?>}kotlin.Int"
0000000000046704	mov	x1, x0
0000000000046708	add	x2, x25, #0x18
000000000004670c	ldr	x8, [x21]
0000000000046710	and	x8, x8, #0xfffffffffffffffc
0000000000046714	ldr	x8, [x8]
0000000000046718	ldr	w9, [x8, #0x3c]
000000000004671c	ldr	x8, [x8, #0x40]
0000000000046720	tbnz	w9, #0x1f, 0x46730
0000000000046724	mov	w10, #0x16
0000000000046728	and	x9, x9, x10
000000000004672c	b	0x467b4
0000000000046730	neg	w10, w9
0000000000046734	mvn	w9, w9
0000000000046738	cmp	w10, #0x9
000000000004673c	b.ge	0x46774
0000000000046740	cmp	w10, #0x2
0000000000046744	b.lt	0x467a8
0000000000046748	mov	x10, #0x0
000000000004674c	mov	x11, x8
0000000000046750	ldr	w12, [x11]
0000000000046754	cmp	w12, #0x15
0000000000046758	b.gt	0x467b0
000000000004675c	add	x10, x10, #0x1
0000000000046760	add	x11, x11, #0x10
0000000000046764	cmp	x9, x10
0000000000046768	b.ne	0x46750
000000000004676c	mov	x10, x9
0000000000046770	b	0x467b0
0000000000046774	mov	w10, #0x0
0000000000046778	add	w11, w9, w10
000000000004677c	cmp	w11, #0x0
0000000000046780	cinc	w11, w11, lt
0000000000046784	asr	w11, w11, #1
0000000000046788	sbfiz	x12, x11, #4, #32
000000000004678c	ldr	w12, [x8, x12]
0000000000046790	cmp	w12, #0x16
0000000000046794	csinc	w10, w10, w11, ge
0000000000046798	csel	w9, w9, w11, lt
000000000004679c	cmp	w10, w9
00000000000467a0	b.lt	0x46778
00000000000467a4	b	0x467b0
00000000000467a8	mov	w10, #0x0
00000000000467ac	b	0x467b0
00000000000467b0	sxtw	x9, w10
00000000000467b4	add	x8, x8, x9, lsl #4
00000000000467b8	ldr	x8, [x8, #0x8]
00000000000467bc	ldr	x8, [x8, #0x48]
00000000000467c0	mov	x0, x21
00000000000467c4	blr	x8
00000000000467c8	mov	x0, x20
00000000000467cc	blr	x24
00000000000467d0	ldr	x8, [x0]
00000000000467d4	ldr	x9, [sp, #0x8]
00000000000467d8	str	x9, [x8, #0x110]
00000000000467dc	ldaxr	w8, [x19]
00000000000467e0	stlxr	w9, w23, [x19]
00000000000467e4	cbnz	w9, 0x467dc
00000000000467e8	cbnz	w23, 0x46804
00000000000467ec	cmp	w8, #0x1
00000000000467f0	b.ne	0x46804
00000000000467f4	ldarb	w8, [x22]
00000000000467f8	tbz	w8, #0x0, 0x46804
00000000000467fc	mov	x0, x19
0000000000046800	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000046804	ldp	x29, x30, [sp, #0x60]
0000000000046808	ldp	x20, x19, [sp, #0x50]
000000000004680c	ldp	x22, x21, [sp, #0x40]
0000000000046810	ldp	x24, x23, [sp, #0x30]
0000000000046814	ldp	x26, x25, [sp, #0x20]
0000000000046818	add	sp, sp, #0x70
000000000004681c	ret
0000000000046820	mov	x21, x0
0000000000046824	mov	x0, x20
0000000000046828	blr	x24
000000000004682c	ldr	x8, [x0]
0000000000046830	ldr	x9, [sp, #0x8]
0000000000046834	str	x9, [x8, #0x110]
0000000000046838	ldaxr	w8, [x19]
000000000004683c	stlxr	w9, w23, [x19]
0000000000046840	cbnz	w9, 0x46838
0000000000046844	cbnz	w23, 0x46860
0000000000046848	cmp	w8, #0x1
000000000004684c	b.ne	0x46860
0000000000046850	ldarb	w8, [x22]
0000000000046854	tbz	w8, #0x0, 0x46860
0000000000046858	mov	x0, x19
000000000004685c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000046860	mov	x0, x21
0000000000046864	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
-[KMutableListAsNSMutableArray replaceObjectAtIndex:withObject:]:
0000000000046868	sub	sp, sp, #0xa0
000000000004686c	stp	x28, x27, [sp, #0x40]
0000000000046870	stp	x26, x25, [sp, #0x50]
0000000000046874	stp	x24, x23, [sp, #0x60]
0000000000046878	stp	x22, x21, [sp, #0x70]
000000000004687c	stp	x20, x19, [sp, #0x80]
0000000000046880	stp	x29, x30, [sp, #0x90]
0000000000046884	add	x29, sp, #0x90
0000000000046888	mov	x22, x3
000000000004688c	mov	x21, x2
0000000000046890	mov	x23, x0
0000000000046894	bl	_Kotlin_initRuntimeIfNeeded
0000000000046898	adrp	x20, 34 ; 0x68000
000000000004689c	add	x20, x20, #0xa00
00000000000468a0	ldr	x26, [x20]
00000000000468a4	mov	x0, x20
00000000000468a8	blr	x26
00000000000468ac	ldr	x8, [x0]
00000000000468b0	add	x19, x8, #0x138
00000000000468b4	ldaxr	w25, [x19]
00000000000468b8	stlxr	w8, wzr, [x19]
00000000000468bc	cbnz	w8, 0x468b4
00000000000468c0	cmp	w25, #0x1
00000000000468c4	b.ne	0x468e0
00000000000468c8	adr	x8, #0x3bf7b
00000000000468cc	nop
00000000000468d0	ldarb	w8, [x8]
00000000000468d4	tbz	w8, #0x0, 0x468e0
00000000000468d8	mov	x0, x19
00000000000468dc	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000468e0	mov	x24, sp
00000000000468e4	str	xzr, [sp, #0x18]
00000000000468e8	mov	x0, x20
00000000000468ec	blr	x26
00000000000468f0	ldr	x8, [x0]
00000000000468f4	ldr	x9, [x8, #0x110]
00000000000468f8	str	x24, [x8, #0x110]
00000000000468fc	mov	x8, #0x400000000
0000000000046900	stp	x9, x8, [sp, #0x8]
0000000000046904	nop
0000000000046908	ldr	x0, #0x1fe18 ; Objc class ref: _OBJC_CLASS_$_NSNull
000000000004690c	nop
0000000000046910	ldr	x1, #0x1fcb0 ; Objc selector ref: null
0000000000046914	bl	0x4dcb8 ; Objc message: +[NSNull null]
0000000000046918	cmp	x0, x22
000000000004691c	ccmp	x22, #0x0, #0x4, ne
0000000000046920	b.ne	0x46930
0000000000046924	mov	x22, #0x0
0000000000046928	str	xzr, [sp, #0x18]
000000000004692c	b	0x46948
0000000000046930	add	x2, x24, #0x18
0000000000046934	nop
0000000000046938	ldr	x1, #0x3c160
000000000004693c	mov	x0, x22
0000000000046940	bl	0x4dcb8 ; Objc message: -[x0 null]
0000000000046944	mov	x22, x0
0000000000046948	bl	_Kotlin_initRuntimeIfNeeded
000000000004694c	lsr	x8, x21, #31
0000000000046950	cbnz	x8, 0x46ac4
0000000000046954	nop
0000000000046958	ldrsw	x8, _OBJC_IVAR_$_FRKKMutableListAsNSMutableArray.listHolder
000000000004695c	ldr	x23, [x23, x8]
0000000000046960	movi.16b	v0, #0x0
0000000000046964	stp	q0, q0, [sp, #0x20]
0000000000046968	add	x8, sp, #0x20
000000000004696c	add	x24, x8, #0x18
0000000000046970	mov	x0, x20
0000000000046974	blr	x26
0000000000046978	ldr	x9, [x0]
000000000004697c	ldr	x10, [x9, #0x110]
0000000000046980	str	x8, [x9, #0x110]
0000000000046984	mov	x8, #0x400000000
0000000000046988	stp	x10, x8, [sp, #0x28]
000000000004698c	adr	x27, #0x3beb7
0000000000046990	nop
0000000000046994	ldarb	w8, [x27]
0000000000046998	tbz	w8, #0x0, 0x469a0
000000000004699c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000469a0	ldr	x8, [x23]
00000000000469a4	and	x8, x8, #0xfffffffffffffffc
00000000000469a8	ldr	x8, [x8]
00000000000469ac	ldr	w9, [x8, #0x3c]
00000000000469b0	ldr	x8, [x8, #0x40]
00000000000469b4	tbnz	w9, #0x1f, 0x469c4
00000000000469b8	mov	w10, #0x16
00000000000469bc	and	x9, x9, x10
00000000000469c0	b	0x46a48
00000000000469c4	neg	w10, w9
00000000000469c8	mvn	w9, w9
00000000000469cc	cmp	w10, #0x9
00000000000469d0	b.ge	0x46a08
00000000000469d4	cmp	w10, #0x2
00000000000469d8	b.lt	0x46a3c
00000000000469dc	mov	x10, #0x0
00000000000469e0	mov	x11, x8
00000000000469e4	ldr	w12, [x11]
00000000000469e8	cmp	w12, #0x15
00000000000469ec	b.gt	0x46a44
00000000000469f0	add	x10, x10, #0x1
00000000000469f4	add	x11, x11, #0x10
00000000000469f8	cmp	x9, x10
00000000000469fc	b.ne	0x469e4
0000000000046a00	mov	x10, x9
0000000000046a04	b	0x46a44
0000000000046a08	mov	w10, #0x0
0000000000046a0c	add	w11, w9, w10
0000000000046a10	cmp	w11, #0x0
0000000000046a14	cinc	w11, w11, lt
0000000000046a18	asr	w11, w11, #1
0000000000046a1c	sbfiz	x12, x11, #4, #32
0000000000046a20	ldr	w12, [x8, x12]
0000000000046a24	cmp	w12, #0x16
0000000000046a28	csinc	w10, w10, w11, ge
0000000000046a2c	csel	w9, w9, w11, lt
0000000000046a30	cmp	w10, w9
0000000000046a34	b.lt	0x46a0c
0000000000046a38	b	0x46a44
0000000000046a3c	mov	w10, #0x0
0000000000046a40	b	0x46a44
0000000000046a44	sxtw	x9, w10
0000000000046a48	add	x8, x8, x9, lsl #4
0000000000046a4c	ldr	x8, [x8, #0x8]
0000000000046a50	ldr	x8, [x8, #0x58]
0000000000046a54	mov	x0, x23
0000000000046a58	mov	x1, x21
0000000000046a5c	mov	x2, x22
0000000000046a60	mov	x3, x24
0000000000046a64	blr	x8
0000000000046a68	mov	x0, x20
0000000000046a6c	blr	x26
0000000000046a70	ldr	x8, [x0]
0000000000046a74	ldr	x9, [sp, #0x8]
0000000000046a78	str	x9, [x8, #0x110]
0000000000046a7c	ldaxr	w8, [x19]
0000000000046a80	stlxr	w9, w25, [x19]
0000000000046a84	cbnz	w9, 0x46a7c
0000000000046a88	cbnz	w25, 0x46aa4
0000000000046a8c	cmp	w8, #0x1
0000000000046a90	b.ne	0x46aa4
0000000000046a94	ldarb	w8, [x27]
0000000000046a98	tbz	w8, #0x0, 0x46aa4
0000000000046a9c	mov	x0, x19
0000000000046aa0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000046aa4	ldp	x29, x30, [sp, #0x90]
0000000000046aa8	ldp	x20, x19, [sp, #0x80]
0000000000046aac	ldp	x22, x21, [sp, #0x70]
0000000000046ab0	ldp	x24, x23, [sp, #0x60]
0000000000046ab4	ldp	x26, x25, [sp, #0x50]
0000000000046ab8	ldp	x28, x27, [sp, #0x40]
0000000000046abc	add	sp, sp, #0xa0
0000000000046ac0	ret
0000000000046ac4	bl	_ThrowArrayIndexOutOfBoundsException
0000000000046ac8	brk	#0x1
0000000000046acc	mov	x21, x0
0000000000046ad0	mov	x0, x20
0000000000046ad4	blr	x26
0000000000046ad8	ldr	x8, [x0]
0000000000046adc	ldr	x9, [sp, #0x28]
0000000000046ae0	str	x9, [x8, #0x110]
0000000000046ae4	b	0x46af8
0000000000046ae8	mov	x21, x0
0000000000046aec	mov	x0, x20
0000000000046af0	blr	x26
0000000000046af4	ldr	x8, [x0]
0000000000046af8	ldr	x9, [sp, #0x8]
0000000000046afc	str	x9, [x8, #0x110]
0000000000046b00	ldaxr	w8, [x19]
0000000000046b04	stlxr	w9, w25, [x19]
0000000000046b08	cbnz	w9, 0x46b00
0000000000046b0c	cbnz	w25, 0x46b30
0000000000046b10	cmp	w8, #0x1
0000000000046b14	b.ne	0x46b30
0000000000046b18	adr	x8, #0x3bd2b
0000000000046b1c	nop
0000000000046b20	ldarb	w8, [x8]
0000000000046b24	tbz	w8, #0x0, 0x46b30
0000000000046b28	mov	x0, x19
0000000000046b2c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000046b30	mov	x0, x21
0000000000046b34	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
+[KMutableListAsNSMutableArray createRetainedWithKList:]:
0000000000046b38	stp	x22, x21, [sp, #-0x30]!
0000000000046b3c	stp	x20, x19, [sp, #0x10]
0000000000046b40	stp	x29, x30, [sp, #0x20]
0000000000046b44	add	x29, sp, #0x20
0000000000046b48	mov	x19, x2
0000000000046b4c	nop
0000000000046b50	ldr	x0, #0x1fc00 ; Objc class ref: FRKKMutableListAsNSMutableArray
0000000000046b54	bl	0x4dc40 ; symbol stub for: _objc_alloc
0000000000046b58	nop
0000000000046b5c	ldr	x1, #0x1f96c ; Objc selector ref: init
0000000000046b60	bl	0x4dcb8 ; Objc message: +[FRKKMutableListAsNSMutableArray init]
0000000000046b64	mov	x20, x0
0000000000046b68	nop
0000000000046b6c	ldrsw	x8, _OBJC_IVAR_$_FRKKMutableListAsNSMutableArray.listHolder
0000000000046b70	add	x21, x0, x8
0000000000046b74	adrp	x0, 34 ; 0x68000
0000000000046b78	add	x0, x0, #0xa00
0000000000046b7c	ldr	x8, [x0]
0000000000046b80	blr	x8
0000000000046b84	ldr	x22, [x0]
0000000000046b88	mov	w0, #0x1
0000000000046b8c	mov	w1, #0x28
0000000000046b90	bl	0x4db20 ; symbol stub for: _calloc
0000000000046b94	ldr	x8, [x22, #0xa8]!
0000000000046b98	sub	x9, x22, #0x8
0000000000046b9c	stp	x8, x22, [x0]
0000000000046ba0	str	x0, [x8, #0x8]
0000000000046ba4	str	x0, [x22]
0000000000046ba8	ldr	x8, [x22, #0x10]
0000000000046bac	add	x8, x8, #0x1
0000000000046bb0	str	x8, [x22, #0x10]
0000000000046bb4	stp	x9, x0, [x0, #0x18]
0000000000046bb8	str	x19, [x0, #0x10]!
0000000000046bbc	stp	x19, x0, [x21]
0000000000046bc0	mov	x0, x20
0000000000046bc4	ldp	x29, x30, [sp, #0x20]
0000000000046bc8	ldp	x20, x19, [sp, #0x10]
0000000000046bcc	ldp	x22, x21, [sp], #0x30
0000000000046bd0	ret
-[KSetAsNSSet dealloc]:
0000000000046bd4	sub	sp, sp, #0x60
0000000000046bd8	stp	x26, x25, [sp, #0x10]
0000000000046bdc	stp	x24, x23, [sp, #0x20]
0000000000046be0	stp	x22, x21, [sp, #0x30]
0000000000046be4	stp	x20, x19, [sp, #0x40]
0000000000046be8	stp	x29, x30, [sp, #0x50]
0000000000046bec	add	x29, sp, #0x50
0000000000046bf0	mov	x19, x0
0000000000046bf4	nop
0000000000046bf8	ldrsw	x8, _OBJC_IVAR_$_FRKKSetAsNSSet.setHolder
0000000000046bfc	add	x24, x0, x8
0000000000046c00	bl	_Kotlin_initRuntimeIfNeeded
0000000000046c04	adrp	x21, 34 ; 0x68000
0000000000046c08	add	x21, x21, #0xa00
0000000000046c0c	ldr	x25, [x21]
0000000000046c10	mov	x0, x21
0000000000046c14	blr	x25
0000000000046c18	ldr	x8, [x0]
0000000000046c1c	add	x20, x8, #0x138
0000000000046c20	ldaxr	w22, [x20]
0000000000046c24	stlxr	w8, wzr, [x20]
0000000000046c28	cbnz	w8, 0x46c20
0000000000046c2c	adr	x23, #0x3bc17
0000000000046c30	nop
0000000000046c34	cmp	w22, #0x1
0000000000046c38	b.ne	0x46c4c
0000000000046c3c	ldarb	w8, [x23]
0000000000046c40	tbz	w8, #0x0, 0x46c4c
0000000000046c44	mov	x0, x20
0000000000046c48	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000046c4c	ldr	x8, [x24]
0000000000046c50	cbz	x8, 0x46c6c
0000000000046c54	ldr	x1, [x24, #0x8]
0000000000046c58	mov	x0, x21
0000000000046c5c	blr	x25
0000000000046c60	ldr	x8, [x0]
0000000000046c64	add	x0, x8, #0x8
0000000000046c68	bl	__ZN6kotlin2mm17StableRefRegistry19UnregisterStableRefEPNS0_10ThreadDataEPNS_16MultiSourceQueueIP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS6_EEE4NodeE
0000000000046c6c	ldaxr	w8, [x20]
0000000000046c70	stlxr	w9, w22, [x20]
0000000000046c74	cbnz	w9, 0x46c6c
0000000000046c78	cbnz	w22, 0x46c94
0000000000046c7c	cmp	w8, #0x1
0000000000046c80	b.ne	0x46c94
0000000000046c84	ldarb	w8, [x23]
0000000000046c88	tbz	w8, #0x0, 0x46c94
0000000000046c8c	mov	x0, x20
0000000000046c90	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000046c94	nop
0000000000046c98	ldr	x8, #0x1fb10 ; Objc class ref: FRKKSetAsNSSet
0000000000046c9c	stp	x19, x8, [sp]
0000000000046ca0	nop
0000000000046ca4	ldr	x1, #0x1f7e4 ; Objc selector ref: dealloc
0000000000046ca8	mov	x0, sp
0000000000046cac	bl	0x4dcc4 ; Objc message: -[[x0 super] dealloc]
0000000000046cb0	ldp	x29, x30, [sp, #0x50]
0000000000046cb4	ldp	x20, x19, [sp, #0x40]
0000000000046cb8	ldp	x22, x21, [sp, #0x30]
0000000000046cbc	ldp	x24, x23, [sp, #0x20]
0000000000046cc0	ldp	x26, x25, [sp, #0x10]
0000000000046cc4	add	sp, sp, #0x60
0000000000046cc8	ret
-[KSetAsNSSet toKotlin:]:
0000000000046ccc	stp	x22, x21, [sp, #-0x30]!
0000000000046cd0	stp	x20, x19, [sp, #0x10]
0000000000046cd4	stp	x29, x30, [sp, #0x20]
0000000000046cd8	add	x29, sp, #0x20
0000000000046cdc	mov	x19, x2
0000000000046ce0	mov	x20, x0
0000000000046ce4	nop
0000000000046ce8	ldrsw	x21, _OBJC_IVAR_$_FRKKSetAsNSSet.setHolder
0000000000046cec	bl	_Kotlin_initRuntimeIfNeeded
0000000000046cf0	ldr	x0, [x20, x21]
0000000000046cf4	str	x0, [x19]
0000000000046cf8	ldp	x29, x30, [sp, #0x20]
0000000000046cfc	ldp	x20, x19, [sp, #0x10]
0000000000046d00	ldp	x22, x21, [sp], #0x30
0000000000046d04	ret
-[KSetAsNSSet count]:
0000000000046d08	stp	x22, x21, [sp, #-0x30]!
0000000000046d0c	stp	x20, x19, [sp, #0x10]
0000000000046d10	stp	x29, x30, [sp, #0x20]
0000000000046d14	add	x29, sp, #0x20
0000000000046d18	mov	x20, x0
0000000000046d1c	bl	_Kotlin_initRuntimeIfNeeded
0000000000046d20	adrp	x0, 34 ; 0x68000
0000000000046d24	add	x0, x0, #0xa00
0000000000046d28	ldr	x8, [x0]
0000000000046d2c	blr	x8
0000000000046d30	ldr	x8, [x0]
0000000000046d34	add	x19, x8, #0x138
0000000000046d38	ldaxr	w21, [x19]
0000000000046d3c	stlxr	w8, wzr, [x19]
0000000000046d40	cbnz	w8, 0x46d38
0000000000046d44	cmp	w21, #0x1
0000000000046d48	b.ne	0x46d64
0000000000046d4c	adr	x8, #0x3baf7
0000000000046d50	nop
0000000000046d54	ldarb	w8, [x8]
0000000000046d58	tbz	w8, #0x0, 0x46d64
0000000000046d5c	mov	x0, x19
0000000000046d60	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000046d64	nop
0000000000046d68	ldrsw	x22, _OBJC_IVAR_$_FRKKSetAsNSSet.setHolder
0000000000046d6c	bl	_Kotlin_initRuntimeIfNeeded
0000000000046d70	ldr	x0, [x20, x22]
0000000000046d74	bl	_Kotlin_Collection_getSize
0000000000046d78	mov	x20, x0
0000000000046d7c	ldaxr	w8, [x19]
0000000000046d80	stlxr	w9, w21, [x19]
0000000000046d84	cbnz	w9, 0x46d7c
0000000000046d88	cbnz	w21, 0x46dac
0000000000046d8c	cmp	w8, #0x1
0000000000046d90	b.ne	0x46dac
0000000000046d94	adr	x8, #0x3baaf
0000000000046d98	nop
0000000000046d9c	ldarb	w8, [x8]
0000000000046da0	tbz	w8, #0x0, 0x46dac
0000000000046da4	mov	x0, x19
0000000000046da8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000046dac	sxtw	x0, w20
0000000000046db0	ldp	x29, x30, [sp, #0x20]
0000000000046db4	ldp	x20, x19, [sp, #0x10]
0000000000046db8	ldp	x22, x21, [sp], #0x30
0000000000046dbc	ret
0000000000046dc0	mov	x20, x0
0000000000046dc4	ldaxr	w8, [x19]
0000000000046dc8	stlxr	w9, w21, [x19]
0000000000046dcc	cbnz	w9, 0x46dc4
0000000000046dd0	cbnz	w21, 0x46df4
0000000000046dd4	cmp	w8, #0x1
0000000000046dd8	b.ne	0x46df4
0000000000046ddc	adr	x8, #0x3ba67
0000000000046de0	nop
0000000000046de4	ldarb	w8, [x8]
0000000000046de8	tbz	w8, #0x0, 0x46df4
0000000000046dec	mov	x0, x19
0000000000046df0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000046df4	mov	x0, x20
0000000000046df8	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
-[KSetAsNSSet member:]:
0000000000046dfc	stp	x24, x23, [sp, #-0x40]!
0000000000046e00	stp	x22, x21, [sp, #0x10]
0000000000046e04	stp	x20, x19, [sp, #0x20]
0000000000046e08	stp	x29, x30, [sp, #0x30]
0000000000046e0c	add	x29, sp, #0x30
0000000000046e10	mov	x20, x2
0000000000046e14	mov	x21, x0
0000000000046e18	bl	_Kotlin_initRuntimeIfNeeded
0000000000046e1c	adrp	x0, 34 ; 0x68000
0000000000046e20	add	x0, x0, #0xa00
0000000000046e24	ldr	x8, [x0]
0000000000046e28	blr	x8
0000000000046e2c	ldr	x8, [x0]
0000000000046e30	add	x19, x8, #0x138
0000000000046e34	ldaxr	w22, [x19]
0000000000046e38	stlxr	w8, wzr, [x19]
0000000000046e3c	cbnz	w8, 0x46e34
0000000000046e40	cmp	w22, #0x1
0000000000046e44	b.ne	0x46e60
0000000000046e48	adr	x8, #0x3b9fb
0000000000046e4c	nop
0000000000046e50	ldarb	w8, [x8]
0000000000046e54	tbz	w8, #0x0, 0x46e60
0000000000046e58	mov	x0, x19
0000000000046e5c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000046e60	nop
0000000000046e64	ldrsw	x23, _OBJC_IVAR_$_FRKKSetAsNSSet.setHolder
0000000000046e68	bl	_Kotlin_initRuntimeIfNeeded
0000000000046e6c	ldr	x0, [x21, x23]
0000000000046e70	mov	x1, x20
0000000000046e74	bl	__ZL15KSet_getElementP9ObjHeaderP11objc_object
0000000000046e78	mov	x20, x0
0000000000046e7c	ldaxr	w8, [x19]
0000000000046e80	stlxr	w9, w22, [x19]
0000000000046e84	cbnz	w9, 0x46e7c
0000000000046e88	cbnz	w22, 0x46eac
0000000000046e8c	cmp	w8, #0x1
0000000000046e90	b.ne	0x46eac
0000000000046e94	adr	x8, #0x3b9af
0000000000046e98	nop
0000000000046e9c	ldarb	w8, [x8]
0000000000046ea0	tbz	w8, #0x0, 0x46eac
0000000000046ea4	mov	x0, x19
0000000000046ea8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000046eac	mov	x0, x20
0000000000046eb0	ldp	x29, x30, [sp, #0x30]
0000000000046eb4	ldp	x20, x19, [sp, #0x20]
0000000000046eb8	ldp	x22, x21, [sp, #0x10]
0000000000046ebc	ldp	x24, x23, [sp], #0x40
0000000000046ec0	ret
0000000000046ec4	mov	x20, x0
0000000000046ec8	ldaxr	w8, [x19]
0000000000046ecc	stlxr	w9, w22, [x19]
0000000000046ed0	cbnz	w9, 0x46ec8
0000000000046ed4	cbnz	w22, 0x46ef8
0000000000046ed8	cmp	w8, #0x1
0000000000046edc	b.ne	0x46ef8
0000000000046ee0	adr	x8, #0x3b963
0000000000046ee4	nop
0000000000046ee8	ldarb	w8, [x8]
0000000000046eec	tbz	w8, #0x0, 0x46ef8
0000000000046ef0	mov	x0, x19
0000000000046ef4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000046ef8	mov	x0, x20
0000000000046efc	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
-[KSetAsNSSet containsObject:]:
0000000000046f00	sub	sp, sp, #0x70
0000000000046f04	stp	x26, x25, [sp, #0x20]
0000000000046f08	stp	x24, x23, [sp, #0x30]
0000000000046f0c	stp	x22, x21, [sp, #0x40]
0000000000046f10	stp	x20, x19, [sp, #0x50]
0000000000046f14	stp	x29, x30, [sp, #0x60]
0000000000046f18	add	x29, sp, #0x60
0000000000046f1c	mov	x21, x2
0000000000046f20	mov	x22, x0
0000000000046f24	bl	_Kotlin_initRuntimeIfNeeded
0000000000046f28	adrp	x20, 34 ; 0x68000
0000000000046f2c	add	x20, x20, #0xa00
0000000000046f30	ldr	x24, [x20]
0000000000046f34	mov	x0, x20
0000000000046f38	blr	x24
0000000000046f3c	ldr	x8, [x0]
0000000000046f40	add	x19, x8, #0x138
0000000000046f44	ldaxr	w23, [x19]
0000000000046f48	stlxr	w8, wzr, [x19]
0000000000046f4c	cbnz	w8, 0x46f44
0000000000046f50	cmp	w23, #0x1
0000000000046f54	b.ne	0x46f70
0000000000046f58	adr	x8, #0x3b8eb
0000000000046f5c	nop
0000000000046f60	ldarb	w8, [x8]
0000000000046f64	tbz	w8, #0x0, 0x46f70
0000000000046f68	mov	x0, x19
0000000000046f6c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000046f70	mov	x25, sp
0000000000046f74	str	xzr, [sp, #0x18]
0000000000046f78	mov	x0, x20
0000000000046f7c	blr	x24
0000000000046f80	ldr	x8, [x0]
0000000000046f84	ldr	x9, [x8, #0x110]
0000000000046f88	str	x25, [x8, #0x110]
0000000000046f8c	mov	x8, #0x400000000
0000000000046f90	stp	x9, x8, [sp, #0x8]
0000000000046f94	nop
0000000000046f98	ldrsw	x26, _OBJC_IVAR_$_FRKKSetAsNSSet.setHolder
0000000000046f9c	bl	_Kotlin_initRuntimeIfNeeded
0000000000046fa0	ldr	x22, [x22, x26]
0000000000046fa4	nop
0000000000046fa8	ldr	x0, #0x1f778 ; Objc class ref: _OBJC_CLASS_$_NSNull
0000000000046fac	nop
0000000000046fb0	ldr	x1, #0x1f610 ; Objc selector ref: null
0000000000046fb4	bl	0x4dcb8 ; Objc message: +[NSNull null]
0000000000046fb8	cmp	x0, x21
0000000000046fbc	b.eq	0x46fe0
0000000000046fc0	cbz	x21, 0x46fe0
0000000000046fc4	add	x2, x25, #0x18
0000000000046fc8	nop
0000000000046fcc	ldr	x1, #0x3bacc
0000000000046fd0	mov	x0, x21
0000000000046fd4	bl	0x4dcb8 ; Objc message: -[x0 null]
0000000000046fd8	mov	x1, x0
0000000000046fdc	b	0x46fe8
0000000000046fe0	mov	x1, #0x0
0000000000046fe4	str	xzr, [sp, #0x18]
0000000000046fe8	mov	x0, x22
0000000000046fec	bl	_Kotlin_Set_contains
0000000000046ff0	mov	x21, x0
0000000000046ff4	mov	x0, x20
0000000000046ff8	blr	x24
0000000000046ffc	ldr	x8, [x0]
0000000000047000	ldr	x9, [sp, #0x8]
0000000000047004	str	x9, [x8, #0x110]
0000000000047008	ldaxr	w8, [x19]
000000000004700c	stlxr	w9, w23, [x19]
0000000000047010	cbnz	w9, 0x47008
0000000000047014	cbnz	w23, 0x47038
0000000000047018	cmp	w8, #0x1
000000000004701c	b.ne	0x47038
0000000000047020	adr	x8, #0x3b823
0000000000047024	nop
0000000000047028	ldarb	w8, [x8]
000000000004702c	tbz	w8, #0x0, 0x47038
0000000000047030	mov	x0, x19
0000000000047034	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000047038	mov	x0, x21
000000000004703c	ldp	x29, x30, [sp, #0x60]
0000000000047040	ldp	x20, x19, [sp, #0x50]
0000000000047044	ldp	x22, x21, [sp, #0x40]
0000000000047048	ldp	x24, x23, [sp, #0x30]
000000000004704c	ldp	x26, x25, [sp, #0x20]
0000000000047050	add	sp, sp, #0x70
0000000000047054	ret
0000000000047058	mov	x21, x0
000000000004705c	mov	x0, x20
0000000000047060	blr	x24
0000000000047064	ldr	x8, [x0]
0000000000047068	ldr	x9, [sp, #0x8]
000000000004706c	str	x9, [x8, #0x110]
0000000000047070	ldaxr	w8, [x19]
0000000000047074	stlxr	w9, w23, [x19]
0000000000047078	cbnz	w9, 0x47070
000000000004707c	cbnz	w23, 0x470a0
0000000000047080	cmp	w8, #0x1
0000000000047084	b.ne	0x470a0
0000000000047088	adr	x8, #0x3b7bb
000000000004708c	nop
0000000000047090	ldarb	w8, [x8]
0000000000047094	tbz	w8, #0x0, 0x470a0
0000000000047098	mov	x0, x19
000000000004709c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000470a0	mov	x0, x21
00000000000470a4	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
-[KSetAsNSSet objectEnumerator]:
00000000000470a8	sub	sp, sp, #0x70
00000000000470ac	stp	x26, x25, [sp, #0x20]
00000000000470b0	stp	x24, x23, [sp, #0x30]
00000000000470b4	stp	x22, x21, [sp, #0x40]
00000000000470b8	stp	x20, x19, [sp, #0x50]
00000000000470bc	stp	x29, x30, [sp, #0x60]
00000000000470c0	add	x29, sp, #0x60
00000000000470c4	mov	x21, x0
00000000000470c8	bl	_Kotlin_initRuntimeIfNeeded
00000000000470cc	adrp	x20, 33 ; 0x68000
00000000000470d0	add	x20, x20, #0xa00
00000000000470d4	ldr	x25, [x20]
00000000000470d8	mov	x0, x20
00000000000470dc	blr	x25
00000000000470e0	ldr	x8, [x0]
00000000000470e4	add	x19, x8, #0x138
00000000000470e8	ldaxr	w24, [x19]
00000000000470ec	stlxr	w8, wzr, [x19]
00000000000470f0	cbnz	w8, 0x470e8
00000000000470f4	cmp	w24, #0x1
00000000000470f8	b.ne	0x47114
00000000000470fc	adr	x8, #0x3b747
0000000000047100	nop
0000000000047104	ldarb	w8, [x8]
0000000000047108	tbz	w8, #0x0, 0x47114
000000000004710c	mov	x0, x19
0000000000047110	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000047114	mov	x8, sp
0000000000047118	add	x23, x8, #0x18
000000000004711c	str	xzr, [sp, #0x18]
0000000000047120	mov	x0, x20
0000000000047124	blr	x25
0000000000047128	ldr	x9, [x0]
000000000004712c	ldr	x10, [x9, #0x110]
0000000000047130	str	x8, [x9, #0x110]
0000000000047134	mov	x8, #0x400000000
0000000000047138	stp	x10, x8, [sp, #0x8]
000000000004713c	nop
0000000000047140	ldr	x22, #0x1f600 ; Objc class ref: FRKKIteratorAsNSEnumerator
0000000000047144	nop
0000000000047148	ldrsw	x26, _OBJC_IVAR_$_FRKKSetAsNSSet.setHolder
000000000004714c	bl	_Kotlin_initRuntimeIfNeeded
0000000000047150	ldr	x0, [x21, x26]
0000000000047154	mov	x1, x23
0000000000047158	bl	_Kotlin_Set_iterator
000000000004715c	mov	x2, x0
0000000000047160	nop
0000000000047164	ldr	x1, #0x1f31c ; Objc selector ref: createWithKIterator:
0000000000047168	mov	x0, x22
000000000004716c	bl	0x4dcb8 ; Objc message: +[FRKKIteratorAsNSEnumerator createWithKIterator:]
0000000000047170	mov	x21, x0
0000000000047174	mov	x0, x20
0000000000047178	blr	x25
000000000004717c	ldr	x8, [x0]
0000000000047180	ldr	x9, [sp, #0x8]
0000000000047184	str	x9, [x8, #0x110]
0000000000047188	ldaxr	w8, [x19]
000000000004718c	stlxr	w9, w24, [x19]
0000000000047190	cbnz	w9, 0x47188
0000000000047194	cbnz	w24, 0x471b8
0000000000047198	cmp	w8, #0x1
000000000004719c	b.ne	0x471b8
00000000000471a0	adr	x8, #0x3b6a3
00000000000471a4	nop
00000000000471a8	ldarb	w8, [x8]
00000000000471ac	tbz	w8, #0x0, 0x471b8
00000000000471b0	mov	x0, x19
00000000000471b4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000471b8	mov	x0, x21
00000000000471bc	ldp	x29, x30, [sp, #0x60]
00000000000471c0	ldp	x20, x19, [sp, #0x50]
00000000000471c4	ldp	x22, x21, [sp, #0x40]
00000000000471c8	ldp	x24, x23, [sp, #0x30]
00000000000471cc	ldp	x26, x25, [sp, #0x20]
00000000000471d0	add	sp, sp, #0x70
00000000000471d4	ret
00000000000471d8	mov	x21, x0
00000000000471dc	mov	x0, x20
00000000000471e0	blr	x25
00000000000471e4	ldr	x8, [x0]
00000000000471e8	ldr	x9, [sp, #0x8]
00000000000471ec	str	x9, [x8, #0x110]
00000000000471f0	ldaxr	w8, [x19]
00000000000471f4	stlxr	w9, w24, [x19]
00000000000471f8	cbnz	w9, 0x471f0
00000000000471fc	cbnz	w24, 0x47220
0000000000047200	cmp	w8, #0x1
0000000000047204	b.ne	0x47220
0000000000047208	adr	x8, #0x3b63b
000000000004720c	nop
0000000000047210	ldarb	w8, [x8]
0000000000047214	tbz	w8, #0x0, 0x47220
0000000000047218	mov	x0, x19
000000000004721c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000047220	mov	x0, x21
0000000000047224	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
__ZL15KSet_getElementP9ObjHeaderP11objc_object:
0000000000047228	sub	sp, sp, #0xc0
000000000004722c	stp	x26, x25, [sp, #0x70]
0000000000047230	stp	x24, x23, [sp, #0x80]
0000000000047234	stp	x22, x21, [sp, #0x90]
0000000000047238	stp	x20, x19, [sp, #0xa0]
000000000004723c	stp	x29, x30, [sp, #0xb0]
0000000000047240	add	x29, sp, #0xb0
0000000000047244	mov	x20, x1
0000000000047248	mov	x21, x0
000000000004724c	nop
0000000000047250	ldr	x0, #0x1f4d0 ; Objc class ref: _OBJC_CLASS_$_NSNull
0000000000047254	nop
0000000000047258	ldr	x1, #0x1f368 ; Objc selector ref: null
000000000004725c	bl	0x4dcb8 ; Objc message: +[NSNull null]
0000000000047260	cmp	x0, x20
0000000000047264	b.eq	0x472d4
0000000000047268	add	x9, sp, #0x20
000000000004726c	str	xzr, [sp, #0x38]
0000000000047270	adrp	x19, 33 ; 0x68000
0000000000047274	add	x19, x19, #0xa00
0000000000047278	ldr	x24, [x19]
000000000004727c	mov	x0, x19
0000000000047280	blr	x24
0000000000047284	ldr	x8, [x0]
0000000000047288	ldr	x10, [x8, #0x110]
000000000004728c	mov	x11, #0x400000000
0000000000047290	stp	x10, x11, [sp, #0x28]
0000000000047294	mov	x23, sp
0000000000047298	stp	x11, xzr, [sp, #0x10]
000000000004729c	str	x23, [x8, #0x110]
00000000000472a0	str	x9, [sp, #0x8]
00000000000472a4	cbz	x20, 0x472ec
00000000000472a8	add	x2, x9, #0x18
00000000000472ac	nop
00000000000472b0	ldr	x1, #0x3b7e8
00000000000472b4	mov	x0, x20
00000000000472b8	bl	0x4dcb8 ; Objc message: -[x0 null]
00000000000472bc	mov	x20, x0
00000000000472c0	mov	x0, x19
00000000000472c4	blr	x24
00000000000472c8	ldr	x8, [x0]
00000000000472cc	ldr	x9, [x8, #0x110]
00000000000472d0	b	0x472f4
00000000000472d4	mov	x0, x21
00000000000472d8	mov	x1, #0x0
00000000000472dc	bl	_Kotlin_Set_contains
00000000000472e0	cmp	w0, #0x0
00000000000472e4	csel	x8, x20, xzr, ne
00000000000472e8	b	0x47874
00000000000472ec	mov	x9, sp
00000000000472f0	str	xzr, [sp, #0x38]
00000000000472f4	movi.16b	v0, #0x0
00000000000472f8	stp	q0, q0, [sp, #0x40]
00000000000472fc	str	q0, [sp, #0x60]
0000000000047300	add	x22, sp, #0x40
0000000000047304	str	x22, [x8, #0x110]
0000000000047308	mov	x8, #0x600000000
000000000004730c	stp	x9, x8, [sp, #0x48]
0000000000047310	adr	x25, #0x3b533
0000000000047314	nop
0000000000047318	ldarb	w8, [x25]
000000000004731c	tbz	w8, #0x0, 0x47324
0000000000047320	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000047324	cbz	x21, 0x47460
0000000000047328	ldr	x8, [x21]
000000000004732c	and	x8, x8, #0xfffffffffffffffc
0000000000047330	ldr	x8, [x8]
0000000000047334	ldr	w9, [x8, #0x3c]
0000000000047338	ldr	x8, [x8, #0x40]
000000000004733c	tbnz	w9, #0x1f, 0x47380
0000000000047340	mov	w10, #0xb
0000000000047344	and	x9, x9, x10
0000000000047348	lsl	x9, x9, #4
000000000004734c	ldr	w8, [x8, x9]
0000000000047350	cmp	w8, #0xb
0000000000047354	b.ne	0x47460
0000000000047358	add	x2, x23, #0x18
000000000004735c	ldr	x8, [x21]
0000000000047360	and	x8, x8, #0xfffffffffffffffc
0000000000047364	ldr	x8, [x8]
0000000000047368	ldr	w9, [x8, #0x3c]
000000000004736c	ldr	x8, [x8, #0x40]
0000000000047370	tbnz	w9, #0x1f, 0x473d8
0000000000047374	mov	w10, #0xb
0000000000047378	and	x9, x9, x10
000000000004737c	b	0x47820
0000000000047380	neg	w10, w9
0000000000047384	mvn	w9, w9
0000000000047388	cmp	w10, #0x9
000000000004738c	b.ge	0x4741c
0000000000047390	cmp	w10, #0x2
0000000000047394	b.lt	0x47500
0000000000047398	mov	x10, #0x0
000000000004739c	mov	x11, x8
00000000000473a0	ldr	w12, [x11]
00000000000473a4	cmp	w12, #0xa
00000000000473a8	b.gt	0x47618
00000000000473ac	add	x10, x10, #0x1
00000000000473b0	add	x11, x11, #0x10
00000000000473b4	cmp	x9, x10
00000000000473b8	b.ne	0x473a0
00000000000473bc	mov	x10, x9
00000000000473c0	sxtw	x9, w10
00000000000473c4	lsl	x9, x9, #4
00000000000473c8	ldr	w8, [x8, x9]
00000000000473cc	cmp	w8, #0xb
00000000000473d0	b.ne	0x47460
00000000000473d4	b	0x47358
00000000000473d8	neg	w10, w9
00000000000473dc	mvn	w9, w9
00000000000473e0	cmp	w10, #0x9
00000000000473e4	b.ge	0x4751c
00000000000473e8	cmp	w10, #0x2
00000000000473ec	b.lt	0x47630
00000000000473f0	mov	x10, #0x0
00000000000473f4	mov	x11, x8
00000000000473f8	ldr	w12, [x11]
00000000000473fc	cmp	w12, #0xa
0000000000047400	b.gt	0x4781c
0000000000047404	add	x10, x10, #0x1
0000000000047408	add	x11, x11, #0x10
000000000004740c	cmp	x9, x10
0000000000047410	b.ne	0x473f8
0000000000047414	mov	x10, x9
0000000000047418	b	0x4781c
000000000004741c	mov	w10, #0x0
0000000000047420	add	w11, w9, w10
0000000000047424	cmp	w11, #0x0
0000000000047428	cinc	w11, w11, lt
000000000004742c	asr	w11, w11, #1
0000000000047430	sbfiz	x12, x11, #4, #32
0000000000047434	ldr	w12, [x8, x12]
0000000000047438	cmp	w12, #0xb
000000000004743c	csinc	w10, w10, w11, ge
0000000000047440	csel	w9, w9, w11, lt
0000000000047444	cmp	w10, w9
0000000000047448	b.lt	0x47420
000000000004744c	sxtw	x9, w10
0000000000047450	lsl	x9, x9, #4
0000000000047454	ldr	w8, [x8, x9]
0000000000047458	cmp	w8, #0xb
000000000004745c	b.eq	0x47358
0000000000047460	ldr	x8, [x21]
0000000000047464	and	x8, x8, #0xfffffffffffffffc
0000000000047468	ldr	x8, [x8]
000000000004746c	ldr	w9, [x8, #0x3c]
0000000000047470	ldr	x8, [x8, #0x40]
0000000000047474	tbnz	w9, #0x1f, 0x47480
0000000000047478	and	x9, x9, #0x1e
000000000004747c	b	0x47554
0000000000047480	neg	w10, w9
0000000000047484	mvn	w9, w9
0000000000047488	cmp	w10, #0x9
000000000004748c	b.ge	0x474c4
0000000000047490	cmp	w10, #0x2
0000000000047494	b.lt	0x474f8
0000000000047498	mov	x10, #0x0
000000000004749c	mov	x11, x8
00000000000474a0	ldr	w12, [x11]
00000000000474a4	cmp	w12, #0x1d
00000000000474a8	b.gt	0x47550
00000000000474ac	add	x10, x10, #0x1
00000000000474b0	add	x11, x11, #0x10
00000000000474b4	cmp	x9, x10
00000000000474b8	b.ne	0x474a0
00000000000474bc	mov	x10, x9
00000000000474c0	b	0x47550
00000000000474c4	mov	w10, #0x0
00000000000474c8	add	w11, w9, w10
00000000000474cc	cmp	w11, #0x0
00000000000474d0	cinc	w11, w11, lt
00000000000474d4	asr	w11, w11, #1
00000000000474d8	sbfiz	x12, x11, #4, #32
00000000000474dc	ldr	w12, [x8, x12]
00000000000474e0	cmp	w12, #0x1e
00000000000474e4	csinc	w10, w10, w11, ge
00000000000474e8	csel	w9, w9, w11, lt
00000000000474ec	cmp	w10, w9
00000000000474f0	b.lt	0x474c8
00000000000474f4	b	0x47550
00000000000474f8	mov	w10, #0x0
00000000000474fc	b	0x47550
0000000000047500	mov	w10, #0x0
0000000000047504	sxtw	x9, w10
0000000000047508	lsl	x9, x9, #4
000000000004750c	ldr	w8, [x8, x9]
0000000000047510	cmp	w8, #0xb
0000000000047514	b.eq	0x47358
0000000000047518	b	0x47460
000000000004751c	mov	w10, #0x0
0000000000047520	add	w11, w9, w10
0000000000047524	cmp	w11, #0x0
0000000000047528	cinc	w11, w11, lt
000000000004752c	asr	w11, w11, #1
0000000000047530	sbfiz	x12, x11, #4, #32
0000000000047534	ldr	w12, [x8, x12]
0000000000047538	cmp	w12, #0xb
000000000004753c	csinc	w10, w10, w11, ge
0000000000047540	csel	w9, w9, w11, lt
0000000000047544	cmp	w10, w9
0000000000047548	b.lt	0x47520
000000000004754c	b	0x4781c
0000000000047550	sxtw	x9, w10
0000000000047554	add	x8, x8, x9, lsl #4
0000000000047558	ldr	x8, [x8, #0x8]
000000000004755c	ldr	x8, [x8, #0x8]
0000000000047560	mov	x0, x21
0000000000047564	mov	x1, x20
0000000000047568	blr	x8
000000000004756c	tbz	w0, #0x0, 0x47814
0000000000047570	add	x1, x22, #0x18
0000000000047574	ldr	x8, [x21]
0000000000047578	and	x8, x8, #0xfffffffffffffffc
000000000004757c	ldr	x8, [x8]
0000000000047580	ldr	w9, [x8, #0x3c]
0000000000047584	ldr	x8, [x8, #0x40]
0000000000047588	tbnz	w9, #0x1f, 0x47598
000000000004758c	mov	w10, #0x31
0000000000047590	and	x9, x9, x10
0000000000047594	b	0x4763c
0000000000047598	neg	w10, w9
000000000004759c	mvn	w9, w9
00000000000475a0	cmp	w10, #0x9
00000000000475a4	b.ge	0x475dc
00000000000475a8	cmp	w10, #0x2
00000000000475ac	b.lt	0x47610
00000000000475b0	mov	x10, #0x0
00000000000475b4	mov	x11, x8
00000000000475b8	ldr	w12, [x11]
00000000000475bc	cmp	w12, #0x30
00000000000475c0	b.gt	0x47638
00000000000475c4	add	x10, x10, #0x1
00000000000475c8	add	x11, x11, #0x10
00000000000475cc	cmp	x9, x10
00000000000475d0	b.ne	0x475b8
00000000000475d4	mov	x10, x9
00000000000475d8	b	0x47638
00000000000475dc	mov	w10, #0x0
00000000000475e0	add	w11, w9, w10
00000000000475e4	cmp	w11, #0x0
00000000000475e8	cinc	w11, w11, lt
00000000000475ec	asr	w11, w11, #1
00000000000475f0	sbfiz	x12, x11, #4, #32
00000000000475f4	ldr	w12, [x8, x12]
00000000000475f8	cmp	w12, #0x31
00000000000475fc	csinc	w10, w10, w11, ge
0000000000047600	csel	w9, w9, w11, lt
0000000000047604	cmp	w10, w9
0000000000047608	b.lt	0x475e0
000000000004760c	b	0x47638
0000000000047610	mov	w10, #0x0
0000000000047614	b	0x47638
0000000000047618	sxtw	x9, w10
000000000004761c	lsl	x9, x9, #4
0000000000047620	ldr	w8, [x8, x9]
0000000000047624	cmp	w8, #0xb
0000000000047628	b.ne	0x47460
000000000004762c	b	0x47358
0000000000047630	mov	w10, #0x0
0000000000047634	b	0x4781c
0000000000047638	sxtw	x9, w10
000000000004763c	add	x8, x8, x9, lsl #4
0000000000047640	ldr	x8, [x8, #0x8]
0000000000047644	ldr	x8, [x8]
0000000000047648	mov	x0, x21
000000000004764c	blr	x8
0000000000047650	mov	x21, x0
0000000000047654	add	x22, x22, #0x20
0000000000047658	mov	w26, #0xa0
000000000004765c	b	0x47664
0000000000047660	cbz	x20, 0x47814
0000000000047664	ldr	x8, [x21]
0000000000047668	and	x8, x8, #0xfffffffffffffffc
000000000004766c	ldr	x8, [x8]
0000000000047670	ldr	w9, [x8, #0x3c]
0000000000047674	ldr	x8, [x8, #0x40]
0000000000047678	tbnz	w9, #0x1f, 0x47684
000000000004767c	and	x9, x9, x26
0000000000047680	b	0x47708
0000000000047684	neg	w10, w9
0000000000047688	mvn	w9, w9
000000000004768c	cmp	w10, #0x9
0000000000047690	b.ge	0x476c8
0000000000047694	cmp	w10, #0x2
0000000000047698	b.lt	0x476fc
000000000004769c	mov	x10, #0x0
00000000000476a0	mov	x11, x8
00000000000476a4	ldr	w12, [x11]
00000000000476a8	cmp	w12, #0x9f
00000000000476ac	b.gt	0x47704
00000000000476b0	add	x10, x10, #0x1
00000000000476b4	add	x11, x11, #0x10
00000000000476b8	cmp	x9, x10
00000000000476bc	b.ne	0x476a4
00000000000476c0	mov	x10, x9
00000000000476c4	b	0x47704
00000000000476c8	mov	w10, #0x0
00000000000476cc	add	w11, w9, w10
00000000000476d0	cmp	w11, #0x0
00000000000476d4	cinc	w11, w11, lt
00000000000476d8	asr	w11, w11, #1
00000000000476dc	sbfiz	x12, x11, #4, #32
00000000000476e0	ldr	w12, [x8, x12]
00000000000476e4	cmp	w12, #0xa0
00000000000476e8	csinc	w10, w10, w11, ge
00000000000476ec	csel	w9, w9, w11, lt
00000000000476f0	cmp	w10, w9
00000000000476f4	b.lt	0x476cc
00000000000476f8	b	0x47704
00000000000476fc	mov	w10, #0x0
0000000000047700	b	0x47704
0000000000047704	sxtw	x9, w10
0000000000047708	add	x8, x8, x9, lsl #4
000000000004770c	ldr	x8, [x8, #0x8]
0000000000047710	ldr	x8, [x8]
0000000000047714	mov	x0, x21
0000000000047718	blr	x8
000000000004771c	tbz	w0, #0x0, 0x47894
0000000000047720	ldarb	w8, [x25]
0000000000047724	tbz	w8, #0x0, 0x4772c
0000000000047728	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000004772c	ldr	x8, [x21]
0000000000047730	and	x8, x8, #0xfffffffffffffffc
0000000000047734	ldr	x8, [x8]
0000000000047738	ldr	w9, [x8, #0x3c]
000000000004773c	ldr	x8, [x8, #0x40]
0000000000047740	tbnz	w9, #0x1f, 0x4774c
0000000000047744	and	x9, x9, x26
0000000000047748	b	0x477d0
000000000004774c	neg	w10, w9
0000000000047750	mvn	w9, w9
0000000000047754	cmp	w10, #0x9
0000000000047758	b.ge	0x47790
000000000004775c	cmp	w10, #0x2
0000000000047760	b.lt	0x477c4
0000000000047764	mov	x10, #0x0
0000000000047768	mov	x11, x8
000000000004776c	ldr	w12, [x11]
0000000000047770	cmp	w12, #0x9f
0000000000047774	b.gt	0x477cc
0000000000047778	add	x10, x10, #0x1
000000000004777c	add	x11, x11, #0x10
0000000000047780	cmp	x9, x10
0000000000047784	b.ne	0x4776c
0000000000047788	mov	x10, x9
000000000004778c	b	0x477cc
0000000000047790	mov	w10, #0x0
0000000000047794	add	w11, w9, w10
0000000000047798	cmp	w11, #0x0
000000000004779c	cinc	w11, w11, lt
00000000000477a0	asr	w11, w11, #1
00000000000477a4	sbfiz	x12, x11, #4, #32
00000000000477a8	ldr	w12, [x8, x12]
00000000000477ac	cmp	w12, #0xa0
00000000000477b0	csinc	w10, w10, w11, ge
00000000000477b4	csel	w9, w9, w11, lt
00000000000477b8	cmp	w10, w9
00000000000477bc	b.lt	0x47794
00000000000477c0	b	0x477cc
00000000000477c4	mov	w10, #0x0
00000000000477c8	b	0x477cc
00000000000477cc	sxtw	x9, w10
00000000000477d0	add	x8, x8, x9, lsl #4
00000000000477d4	ldr	x8, [x8, #0x8]
00000000000477d8	ldr	x8, [x8, #0x8]
00000000000477dc	mov	x0, x21
00000000000477e0	mov	x1, x22
00000000000477e4	blr	x8
00000000000477e8	mov	x23, x0
00000000000477ec	cbz	x0, 0x47660
00000000000477f0	ldr	x8, [x23]
00000000000477f4	and	x8, x8, #0xfffffffffffffffc
00000000000477f8	ldr	x8, [x8]
00000000000477fc	ldr	x8, [x8, #0x70]
0000000000047800	mov	x0, x23
0000000000047804	mov	x1, x20
0000000000047808	blr	x8
000000000004780c	tbz	w0, #0x0, 0x47664
0000000000047810	b	0x4783c
0000000000047814	mov	x23, #0x0
0000000000047818	b	0x4783c
000000000004781c	sxtw	x9, w10
0000000000047820	add	x8, x8, x9, lsl #4
0000000000047824	ldr	x8, [x8, #0x8]
0000000000047828	ldr	x8, [x8]
000000000004782c	mov	x0, x21
0000000000047830	mov	x1, x20
0000000000047834	blr	x8
0000000000047838	mov	x23, x0
000000000004783c	str	x23, [sp, #0x18]
0000000000047840	mov	x0, x19
0000000000047844	blr	x24
0000000000047848	ldr	x8, [x0]
000000000004784c	ldr	x9, [sp, #0x48]
0000000000047850	str	x9, [x8, #0x110]
0000000000047854	mov	x0, x23
0000000000047858	bl	_Kotlin_ObjCExport_refToObjC
000000000004785c	mov	x8, x0
0000000000047860	mov	x0, x19
0000000000047864	blr	x24
0000000000047868	ldr	x9, [x0]
000000000004786c	ldr	x10, [sp, #0x28]
0000000000047870	str	x10, [x9, #0x110]
0000000000047874	mov	x0, x8
0000000000047878	ldp	x29, x30, [sp, #0xb0]
000000000004787c	ldp	x20, x19, [sp, #0xa0]
0000000000047880	ldp	x22, x21, [sp, #0x90]
0000000000047884	ldp	x24, x23, [sp, #0x80]
0000000000047888	ldp	x26, x25, [sp, #0x70]
000000000004788c	add	sp, sp, #0xc0
0000000000047890	ret
0000000000047894	mov	x0, x19
0000000000047898	blr	x24
000000000004789c	ldr	x8, [x0]
00000000000478a0	ldr	x8, [x8, #0x118]
00000000000478a4	add	x0, x8, #0x70
00000000000478a8	mov	w1, #0x38
00000000000478ac	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000478b0	adr	x8, #0xd1f0
00000000000478b4	nop
00000000000478b8	mov	x20, x0
00000000000478bc	str	x8, [x20, #0x10]!
00000000000478c0	stur	xzr, [x20, #-0x8]
00000000000478c4	str	x20, [sp, #0x68]
00000000000478c8	ldarb	w8, [x25]
00000000000478cc	tbz	w8, #0x0, 0x478d4
00000000000478d0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000478d4	adr	x1, #0x19dac
00000000000478d8	nop
00000000000478dc	mov	x0, x20
00000000000478e0	bl	"_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}"
00000000000478e4	ldarb	w8, [x25]
00000000000478e8	tbz	w8, #0x0, 0x478f0
00000000000478ec	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000478f0	mov	x0, x20
00000000000478f4	bl	_ThrowException
00000000000478f8	brk	#0x1
00000000000478fc	b	0x47900
0000000000047900	mov	x1, x0
0000000000047904	b	0x47924
0000000000047908	b	0x4790c
000000000004790c	mov	x1, x0
0000000000047910	mov	x0, x19
0000000000047914	blr	x24
0000000000047918	ldr	x8, [x0]
000000000004791c	ldr	x9, [sp, #0x48]
0000000000047920	str	x9, [x8, #0x110]
0000000000047924	mov	x0, x19
0000000000047928	blr	x24
000000000004792c	ldr	x8, [x0]
0000000000047930	ldr	x9, [sp, #0x28]
0000000000047934	str	x9, [x8, #0x110]
0000000000047938	mov	x0, x1
000000000004793c	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
+[KSetAsNSSet createRetainedWithKSet:]:
0000000000047940	stp	x22, x21, [sp, #-0x30]!
0000000000047944	stp	x20, x19, [sp, #0x10]
0000000000047948	stp	x29, x30, [sp, #0x20]
000000000004794c	add	x29, sp, #0x20
0000000000047950	mov	x19, x2
0000000000047954	nop
0000000000047958	ldr	x0, #0x1ee00 ; Objc class ref: FRKKSetAsNSSet
000000000004795c	bl	0x4dc40 ; symbol stub for: _objc_alloc
0000000000047960	nop
0000000000047964	ldr	x1, #0x1eb64 ; Objc selector ref: init
0000000000047968	bl	0x4dcb8 ; Objc message: +[FRKKSetAsNSSet init]
000000000004796c	mov	x20, x0
0000000000047970	nop
0000000000047974	ldrsw	x8, _OBJC_IVAR_$_FRKKSetAsNSSet.setHolder
0000000000047978	add	x21, x0, x8
000000000004797c	adrp	x0, 33 ; 0x68000
0000000000047980	add	x0, x0, #0xa00
0000000000047984	ldr	x8, [x0]
0000000000047988	blr	x8
000000000004798c	ldr	x22, [x0]
0000000000047990	mov	w0, #0x1
0000000000047994	mov	w1, #0x28
0000000000047998	bl	0x4db20 ; symbol stub for: _calloc
000000000004799c	ldr	x8, [x22, #0xa8]!
00000000000479a0	sub	x9, x22, #0x8
00000000000479a4	stp	x8, x22, [x0]
00000000000479a8	str	x0, [x8, #0x8]
00000000000479ac	str	x0, [x22]
00000000000479b0	ldr	x8, [x22, #0x10]
00000000000479b4	add	x8, x8, #0x1
00000000000479b8	str	x8, [x22, #0x10]
00000000000479bc	stp	x9, x0, [x0, #0x18]
00000000000479c0	str	x19, [x0, #0x10]!
00000000000479c4	stp	x19, x0, [x21]
00000000000479c8	mov	x0, x20
00000000000479cc	ldp	x29, x30, [sp, #0x20]
00000000000479d0	ldp	x20, x19, [sp, #0x10]
00000000000479d4	ldp	x22, x21, [sp], #0x30
00000000000479d8	ret
-[KotlinMutableSet init]:
00000000000479dc	sub	sp, sp, #0x80
00000000000479e0	stp	x26, x25, [sp, #0x30]
00000000000479e4	stp	x24, x23, [sp, #0x40]
00000000000479e8	stp	x22, x21, [sp, #0x50]
00000000000479ec	stp	x20, x19, [sp, #0x60]
00000000000479f0	stp	x29, x30, [sp, #0x70]
00000000000479f4	add	x29, sp, #0x70
00000000000479f8	nop
00000000000479fc	ldr	x8, #0x1edb4 ; Objc class ref: FRKMutableSet
0000000000047a00	stp	x0, x8, [sp, #0x20]
0000000000047a04	nop
0000000000047a08	ldr	x1, #0x1eac0 ; Objc selector ref: init
0000000000047a0c	add	x0, sp, #0x20
0000000000047a10	bl	0x4dcc4 ; Objc message: -[[x0 super] init]
0000000000047a14	mov	x20, x0
0000000000047a18	cbz	x0, 0x47b38
0000000000047a1c	bl	_Kotlin_initRuntimeIfNeeded
0000000000047a20	adrp	x21, 33 ; 0x68000
0000000000047a24	add	x21, x21, #0xa00
0000000000047a28	ldr	x25, [x21]
0000000000047a2c	mov	x0, x21
0000000000047a30	blr	x25
0000000000047a34	ldr	x24, [x0]
0000000000047a38	add	x19, x24, #0x138
0000000000047a3c	ldaxr	w23, [x19]
0000000000047a40	stlxr	w8, wzr, [x19]
0000000000047a44	cbnz	w8, 0x47a3c
0000000000047a48	cmp	w23, #0x1
0000000000047a4c	b.ne	0x47a68
0000000000047a50	adr	x8, #0x3adf3
0000000000047a54	nop
0000000000047a58	ldarb	w8, [x8]
0000000000047a5c	tbz	w8, #0x0, 0x47a68
0000000000047a60	mov	x0, x19
0000000000047a64	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000047a68	mov	x8, sp
0000000000047a6c	add	x1, x8, #0x18
0000000000047a70	str	xzr, [sp, #0x18]
0000000000047a74	mov	x0, x21
0000000000047a78	blr	x25
0000000000047a7c	ldr	x9, [x0]
0000000000047a80	ldr	x10, [x9, #0x110]
0000000000047a84	str	x8, [x9, #0x110]
0000000000047a88	mov	x8, #0x400000000
0000000000047a8c	stp	x10, x8, [sp, #0x8]
0000000000047a90	mov	w0, #0x8
0000000000047a94	bl	_Kotlin_MutableSet_createWithCapacity
0000000000047a98	mov	x22, x0
0000000000047a9c	nop
0000000000047aa0	ldrsw	x8, _OBJC_IVAR_$_FRKMutableSet.setHolder
0000000000047aa4	add	x26, x20, x8
0000000000047aa8	mov	x0, x21
0000000000047aac	blr	x25
0000000000047ab0	mov	x21, x0
0000000000047ab4	ldr	x25, [x0]
0000000000047ab8	mov	w0, #0x1
0000000000047abc	mov	w1, #0x28
0000000000047ac0	bl	0x4db20 ; symbol stub for: _calloc
0000000000047ac4	ldr	x8, [x25, #0xa8]!
0000000000047ac8	sub	x9, x25, #0x8
0000000000047acc	mov	x10, x0
0000000000047ad0	str	x22, [x10, #0x10]!
0000000000047ad4	str	x9, [x0, #0x18]
0000000000047ad8	stp	x8, x25, [x0]
0000000000047adc	str	x0, [x8, #0x8]
0000000000047ae0	str	x0, [x25]
0000000000047ae4	ldr	x8, [x25, #0x10]
0000000000047ae8	add	x8, x8, #0x1
0000000000047aec	str	x8, [x25, #0x10]
0000000000047af0	str	x0, [x0, #0x20]
0000000000047af4	stp	x22, x10, [x26]
0000000000047af8	ldr	x8, [x21]
0000000000047afc	ldr	x9, [sp, #0x8]
0000000000047b00	str	x9, [x8, #0x110]
0000000000047b04	cbz	x24, 0x47b38
0000000000047b08	ldaxr	w8, [x19]
0000000000047b0c	stlxr	w9, w23, [x19]
0000000000047b10	cbnz	w9, 0x47b08
0000000000047b14	cbnz	w23, 0x47b38
0000000000047b18	cmp	w8, #0x1
0000000000047b1c	b.ne	0x47b38
0000000000047b20	adr	x8, #0x3ad23
0000000000047b24	nop
0000000000047b28	ldarb	w8, [x8]
0000000000047b2c	tbz	w8, #0x0, 0x47b38
0000000000047b30	mov	x0, x19
0000000000047b34	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000047b38	mov	x0, x20
0000000000047b3c	ldp	x29, x30, [sp, #0x70]
0000000000047b40	ldp	x20, x19, [sp, #0x60]
0000000000047b44	ldp	x22, x21, [sp, #0x50]
0000000000047b48	ldp	x24, x23, [sp, #0x40]
0000000000047b4c	ldp	x26, x25, [sp, #0x30]
0000000000047b50	add	sp, sp, #0x80
0000000000047b54	ret
0000000000047b58	mov	x20, x0
0000000000047b5c	mov	x0, x21
0000000000047b60	blr	x25
0000000000047b64	ldr	x8, [x0]
0000000000047b68	ldr	x9, [sp, #0x8]
0000000000047b6c	str	x9, [x8, #0x110]
0000000000047b70	cbz	x24, 0x47ba4
0000000000047b74	ldaxr	w8, [x19]
0000000000047b78	stlxr	w9, w23, [x19]
0000000000047b7c	cbnz	w9, 0x47b74
0000000000047b80	cbnz	w23, 0x47ba4
0000000000047b84	cmp	w8, #0x1
0000000000047b88	b.ne	0x47ba4
0000000000047b8c	adr	x8, #0x3acb7
0000000000047b90	nop
0000000000047b94	ldarb	w8, [x8]
0000000000047b98	tbz	w8, #0x0, 0x47ba4
0000000000047b9c	mov	x0, x19
0000000000047ba0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000047ba4	mov	x0, x20
0000000000047ba8	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
-[KotlinMutableSet initWithCapacity:]:
0000000000047bac	sub	sp, sp, #0x80
0000000000047bb0	stp	x26, x25, [sp, #0x30]
0000000000047bb4	stp	x24, x23, [sp, #0x40]
0000000000047bb8	stp	x22, x21, [sp, #0x50]
0000000000047bbc	stp	x20, x19, [sp, #0x60]
0000000000047bc0	stp	x29, x30, [sp, #0x70]
0000000000047bc4	add	x29, sp, #0x70
0000000000047bc8	mov	x21, x2
0000000000047bcc	nop
0000000000047bd0	ldr	x8, #0x1ebe0 ; Objc class ref: FRKMutableSet
0000000000047bd4	stp	x0, x8, [sp, #0x20]
0000000000047bd8	nop
0000000000047bdc	ldr	x1, #0x1e8ec ; Objc selector ref: init
0000000000047be0	add	x0, sp, #0x20
0000000000047be4	bl	0x4dcc4 ; Objc message: -[[x0 super] init]
0000000000047be8	mov	x20, x0
0000000000047bec	cbz	x0, 0x47d14
0000000000047bf0	bl	_Kotlin_initRuntimeIfNeeded
0000000000047bf4	adrp	x22, 33 ; 0x68000
0000000000047bf8	add	x22, x22, #0xa00
0000000000047bfc	ldr	x25, [x22]
0000000000047c00	mov	x0, x22
0000000000047c04	blr	x25
0000000000047c08	ldr	x24, [x0]
0000000000047c0c	add	x19, x24, #0x138
0000000000047c10	ldaxr	w23, [x19]
0000000000047c14	stlxr	w8, wzr, [x19]
0000000000047c18	cbnz	w8, 0x47c10
0000000000047c1c	cmp	w23, #0x1
0000000000047c20	b.ne	0x47c3c
0000000000047c24	adr	x8, #0x3ac1f
0000000000047c28	nop
0000000000047c2c	ldarb	w8, [x8]
0000000000047c30	tbz	w8, #0x0, 0x47c3c
0000000000047c34	mov	x0, x19
0000000000047c38	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000047c3c	mov	x8, sp
0000000000047c40	add	x1, x8, #0x18
0000000000047c44	str	xzr, [sp, #0x18]
0000000000047c48	mov	x0, x22
0000000000047c4c	blr	x25
0000000000047c50	ldr	x9, [x0]
0000000000047c54	ldr	x10, [x9, #0x110]
0000000000047c58	str	x8, [x9, #0x110]
0000000000047c5c	mov	x8, #0x400000000
0000000000047c60	stp	x10, x8, [sp, #0x8]
0000000000047c64	mov	w8, #0x7fffffff
0000000000047c68	cmp	x21, x8
0000000000047c6c	csel	w0, w21, w8, lo
0000000000047c70	bl	_Kotlin_MutableSet_createWithCapacity
0000000000047c74	mov	x21, x0
0000000000047c78	nop
0000000000047c7c	ldrsw	x8, _OBJC_IVAR_$_FRKMutableSet.setHolder
0000000000047c80	add	x26, x20, x8
0000000000047c84	mov	x0, x22
0000000000047c88	blr	x25
0000000000047c8c	mov	x22, x0
0000000000047c90	ldr	x25, [x0]
0000000000047c94	mov	w0, #0x1
0000000000047c98	mov	w1, #0x28
0000000000047c9c	bl	0x4db20 ; symbol stub for: _calloc
0000000000047ca0	ldr	x8, [x25, #0xa8]!
0000000000047ca4	sub	x9, x25, #0x8
0000000000047ca8	mov	x10, x0
0000000000047cac	str	x21, [x10, #0x10]!
0000000000047cb0	str	x9, [x0, #0x18]
0000000000047cb4	stp	x8, x25, [x0]
0000000000047cb8	str	x0, [x8, #0x8]
0000000000047cbc	str	x0, [x25]
0000000000047cc0	ldr	x8, [x25, #0x10]
0000000000047cc4	add	x8, x8, #0x1
0000000000047cc8	str	x8, [x25, #0x10]
0000000000047ccc	str	x0, [x0, #0x20]
0000000000047cd0	stp	x21, x10, [x26]
0000000000047cd4	ldr	x8, [x22]
0000000000047cd8	ldr	x9, [sp, #0x8]
0000000000047cdc	str	x9, [x8, #0x110]
0000000000047ce0	cbz	x24, 0x47d14
0000000000047ce4	ldaxr	w8, [x19]
0000000000047ce8	stlxr	w9, w23, [x19]
0000000000047cec	cbnz	w9, 0x47ce4
0000000000047cf0	cbnz	w23, 0x47d14
0000000000047cf4	cmp	w8, #0x1
0000000000047cf8	b.ne	0x47d14
0000000000047cfc	adr	x8, #0x3ab47
0000000000047d00	nop
0000000000047d04	ldarb	w8, [x8]
0000000000047d08	tbz	w8, #0x0, 0x47d14
0000000000047d0c	mov	x0, x19
0000000000047d10	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000047d14	mov	x0, x20
0000000000047d18	ldp	x29, x30, [sp, #0x70]
0000000000047d1c	ldp	x20, x19, [sp, #0x60]
0000000000047d20	ldp	x22, x21, [sp, #0x50]
0000000000047d24	ldp	x24, x23, [sp, #0x40]
0000000000047d28	ldp	x26, x25, [sp, #0x30]
0000000000047d2c	add	sp, sp, #0x80
0000000000047d30	ret
0000000000047d34	mov	x20, x0
0000000000047d38	mov	x0, x22
0000000000047d3c	blr	x25
0000000000047d40	ldr	x8, [x0]
0000000000047d44	ldr	x9, [sp, #0x8]
0000000000047d48	str	x9, [x8, #0x110]
0000000000047d4c	cbz	x24, 0x47d80
0000000000047d50	ldaxr	w8, [x19]
0000000000047d54	stlxr	w9, w23, [x19]
0000000000047d58	cbnz	w9, 0x47d50
0000000000047d5c	cbnz	w23, 0x47d80
0000000000047d60	cmp	w8, #0x1
0000000000047d64	b.ne	0x47d80
0000000000047d68	adr	x8, #0x3aadb
0000000000047d6c	nop
0000000000047d70	ldarb	w8, [x8]
0000000000047d74	tbz	w8, #0x0, 0x47d80
0000000000047d78	mov	x0, x19
0000000000047d7c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000047d80	mov	x0, x20
0000000000047d84	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
-[KotlinMutableSet initWithObjects:count:]:
0000000000047d88	stp	x22, x21, [sp, #-0x30]!
0000000000047d8c	stp	x20, x19, [sp, #0x10]
0000000000047d90	stp	x29, x30, [sp, #0x20]
0000000000047d94	add	x29, sp, #0x20
0000000000047d98	mov	x19, x3
0000000000047d9c	mov	x20, x2
0000000000047da0	nop
0000000000047da4	ldr	x1, #0x1e74c ; Objc selector ref: initWithCapacity:
0000000000047da8	mov	x2, x3
0000000000047dac	bl	0x4dcb8 ; Objc message: -[x0 initWithCapacity:]
0000000000047db0	mov	x21, x0
0000000000047db4	cmp	x0, #0x0
0000000000047db8	ccmp	x19, #0x0, #0x4, ne
0000000000047dbc	b.eq	0x47de0
0000000000047dc0	nop
0000000000047dc4	ldr	x22, #0x1e644 ; Objc selector ref: addObject:
0000000000047dc8	ldr	x2, [x20], #0x8
0000000000047dcc	mov	x0, x21
0000000000047dd0	mov	x1, x22
0000000000047dd4	bl	0x4dcb8 ; Objc message: -[x0 addObject:]
0000000000047dd8	subs	x19, x19, #0x1
0000000000047ddc	b.ne	0x47dc8
0000000000047de0	mov	x0, x21
0000000000047de4	ldp	x29, x30, [sp, #0x20]
0000000000047de8	ldp	x20, x19, [sp, #0x10]
0000000000047dec	ldp	x22, x21, [sp], #0x30
0000000000047df0	ret
-[KotlinMutableSet dealloc]:
0000000000047df4	sub	sp, sp, #0x60
0000000000047df8	stp	x26, x25, [sp, #0x10]
0000000000047dfc	stp	x24, x23, [sp, #0x20]
0000000000047e00	stp	x22, x21, [sp, #0x30]
0000000000047e04	stp	x20, x19, [sp, #0x40]
0000000000047e08	stp	x29, x30, [sp, #0x50]
0000000000047e0c	add	x29, sp, #0x50
0000000000047e10	mov	x19, x0
0000000000047e14	nop
0000000000047e18	ldrsw	x8, _OBJC_IVAR_$_FRKMutableSet.setHolder
0000000000047e1c	add	x24, x0, x8
0000000000047e20	bl	_Kotlin_initRuntimeIfNeeded
0000000000047e24	adrp	x21, 33 ; 0x68000
0000000000047e28	add	x21, x21, #0xa00
0000000000047e2c	ldr	x25, [x21]
0000000000047e30	mov	x0, x21
0000000000047e34	blr	x25
0000000000047e38	ldr	x8, [x0]
0000000000047e3c	add	x20, x8, #0x138
0000000000047e40	ldaxr	w22, [x20]
0000000000047e44	stlxr	w8, wzr, [x20]
0000000000047e48	cbnz	w8, 0x47e40
0000000000047e4c	adr	x23, #0x3a9f7
0000000000047e50	nop
0000000000047e54	cmp	w22, #0x1
0000000000047e58	b.ne	0x47e6c
0000000000047e5c	ldarb	w8, [x23]
0000000000047e60	tbz	w8, #0x0, 0x47e6c
0000000000047e64	mov	x0, x20
0000000000047e68	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000047e6c	ldr	x8, [x24]
0000000000047e70	cbz	x8, 0x47e8c
0000000000047e74	ldr	x1, [x24, #0x8]
0000000000047e78	mov	x0, x21
0000000000047e7c	blr	x25
0000000000047e80	ldr	x8, [x0]
0000000000047e84	add	x0, x8, #0x8
0000000000047e88	bl	__ZN6kotlin2mm17StableRefRegistry19UnregisterStableRefEPNS0_10ThreadDataEPNS_16MultiSourceQueueIP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS6_EEE4NodeE
0000000000047e8c	ldaxr	w8, [x20]
0000000000047e90	stlxr	w9, w22, [x20]
0000000000047e94	cbnz	w9, 0x47e8c
0000000000047e98	cbnz	w22, 0x47eb4
0000000000047e9c	cmp	w8, #0x1
0000000000047ea0	b.ne	0x47eb4
0000000000047ea4	ldarb	w8, [x23]
0000000000047ea8	tbz	w8, #0x0, 0x47eb4
0000000000047eac	mov	x0, x20
0000000000047eb0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000047eb4	nop
0000000000047eb8	ldr	x8, #0x1e8f8 ; Objc class ref: FRKMutableSet
0000000000047ebc	stp	x19, x8, [sp]
0000000000047ec0	nop
0000000000047ec4	ldr	x1, #0x1e5c4 ; Objc selector ref: dealloc
0000000000047ec8	mov	x0, sp
0000000000047ecc	bl	0x4dcc4 ; Objc message: -[[x0 super] dealloc]
0000000000047ed0	ldp	x29, x30, [sp, #0x50]
0000000000047ed4	ldp	x20, x19, [sp, #0x40]
0000000000047ed8	ldp	x22, x21, [sp, #0x30]
0000000000047edc	ldp	x24, x23, [sp, #0x20]
0000000000047ee0	ldp	x26, x25, [sp, #0x10]
0000000000047ee4	add	sp, sp, #0x60
0000000000047ee8	ret
-[KotlinMutableSet initWithKSet:]:
0000000000047eec	sub	sp, sp, #0x40
0000000000047ef0	stp	x22, x21, [sp, #0x10]
0000000000047ef4	stp	x20, x19, [sp, #0x20]
0000000000047ef8	stp	x29, x30, [sp, #0x30]
0000000000047efc	add	x29, sp, #0x30
0000000000047f00	mov	x19, x2
0000000000047f04	nop
0000000000047f08	ldr	x8, #0x1e8a8 ; Objc class ref: FRKMutableSet
0000000000047f0c	stp	x0, x8, [sp]
0000000000047f10	nop
0000000000047f14	ldr	x1, #0x1e5b4 ; Objc selector ref: init
0000000000047f18	mov	x0, sp
0000000000047f1c	bl	0x4dcc4 ; Objc message: -[[x0 super] init]
0000000000047f20	mov	x20, x0
0000000000047f24	cbz	x0, 0x47f80
0000000000047f28	nop
0000000000047f2c	ldrsw	x8, _OBJC_IVAR_$_FRKMutableSet.setHolder
0000000000047f30	add	x21, x20, x8
0000000000047f34	adrp	x0, 33 ; 0x68000
0000000000047f38	add	x0, x0, #0xa00
0000000000047f3c	ldr	x8, [x0]
0000000000047f40	blr	x8
0000000000047f44	ldr	x22, [x0]
0000000000047f48	mov	w0, #0x1
0000000000047f4c	mov	w1, #0x28
0000000000047f50	bl	0x4db20 ; symbol stub for: _calloc
0000000000047f54	ldr	x8, [x22, #0xa8]!
0000000000047f58	sub	x9, x22, #0x8
0000000000047f5c	stp	x8, x22, [x0]
0000000000047f60	str	x0, [x8, #0x8]
0000000000047f64	str	x0, [x22]
0000000000047f68	ldr	x8, [x22, #0x10]
0000000000047f6c	add	x8, x8, #0x1
0000000000047f70	str	x8, [x22, #0x10]
0000000000047f74	stp	x9, x0, [x0, #0x18]
0000000000047f78	str	x19, [x0, #0x10]!
0000000000047f7c	stp	x19, x0, [x21]
0000000000047f80	mov	x0, x20
0000000000047f84	ldp	x29, x30, [sp, #0x30]
0000000000047f88	ldp	x20, x19, [sp, #0x20]
0000000000047f8c	ldp	x22, x21, [sp, #0x10]
0000000000047f90	add	sp, sp, #0x40
0000000000047f94	ret
-[KotlinMutableSet toKotlin:]:
0000000000047f98	stp	x22, x21, [sp, #-0x30]!
0000000000047f9c	stp	x20, x19, [sp, #0x10]
0000000000047fa0	stp	x29, x30, [sp, #0x20]
0000000000047fa4	add	x29, sp, #0x20
0000000000047fa8	mov	x19, x2
0000000000047fac	mov	x20, x0
0000000000047fb0	nop
0000000000047fb4	ldrsw	x21, _OBJC_IVAR_$_FRKMutableSet.setHolder
0000000000047fb8	bl	_Kotlin_initRuntimeIfNeeded
0000000000047fbc	ldr	x0, [x20, x21]
0000000000047fc0	str	x0, [x19]
0000000000047fc4	ldp	x29, x30, [sp, #0x20]
0000000000047fc8	ldp	x20, x19, [sp, #0x10]
0000000000047fcc	ldp	x22, x21, [sp], #0x30
0000000000047fd0	ret
-[KotlinMutableSet count]:
0000000000047fd4	stp	x22, x21, [sp, #-0x30]!
0000000000047fd8	stp	x20, x19, [sp, #0x10]
0000000000047fdc	stp	x29, x30, [sp, #0x20]
0000000000047fe0	add	x29, sp, #0x20
0000000000047fe4	mov	x20, x0
0000000000047fe8	bl	_Kotlin_initRuntimeIfNeeded
0000000000047fec	adrp	x0, 33 ; 0x68000
0000000000047ff0	add	x0, x0, #0xa00
0000000000047ff4	ldr	x8, [x0]
0000000000047ff8	blr	x8
0000000000047ffc	ldr	x8, [x0]
0000000000048000	add	x19, x8, #0x138
0000000000048004	ldaxr	w21, [x19]
0000000000048008	stlxr	w8, wzr, [x19]
000000000004800c	cbnz	w8, 0x48004
0000000000048010	cmp	w21, #0x1
0000000000048014	b.ne	0x48030
0000000000048018	adr	x8, #0x3a82b
000000000004801c	nop
0000000000048020	ldarb	w8, [x8]
0000000000048024	tbz	w8, #0x0, 0x48030
0000000000048028	mov	x0, x19
000000000004802c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000048030	nop
0000000000048034	ldrsw	x22, _OBJC_IVAR_$_FRKMutableSet.setHolder
0000000000048038	bl	_Kotlin_initRuntimeIfNeeded
000000000004803c	ldr	x0, [x20, x22]
0000000000048040	bl	_Kotlin_Collection_getSize
0000000000048044	mov	x20, x0
0000000000048048	ldaxr	w8, [x19]
000000000004804c	stlxr	w9, w21, [x19]
0000000000048050	cbnz	w9, 0x48048
0000000000048054	cbnz	w21, 0x48078
0000000000048058	cmp	w8, #0x1
000000000004805c	b.ne	0x48078
0000000000048060	adr	x8, #0x3a7e3
0000000000048064	nop
0000000000048068	ldarb	w8, [x8]
000000000004806c	tbz	w8, #0x0, 0x48078
0000000000048070	mov	x0, x19
0000000000048074	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000048078	sxtw	x0, w20
000000000004807c	ldp	x29, x30, [sp, #0x20]
0000000000048080	ldp	x20, x19, [sp, #0x10]
0000000000048084	ldp	x22, x21, [sp], #0x30
0000000000048088	ret
000000000004808c	mov	x20, x0
0000000000048090	ldaxr	w8, [x19]
0000000000048094	stlxr	w9, w21, [x19]
0000000000048098	cbnz	w9, 0x48090
000000000004809c	cbnz	w21, 0x480c0
00000000000480a0	cmp	w8, #0x1
00000000000480a4	b.ne	0x480c0
00000000000480a8	adr	x8, #0x3a79b
00000000000480ac	nop
00000000000480b0	ldarb	w8, [x8]
00000000000480b4	tbz	w8, #0x0, 0x480c0
00000000000480b8	mov	x0, x19
00000000000480bc	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000480c0	mov	x0, x20
00000000000480c4	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
-[KotlinMutableSet member:]:
00000000000480c8	stp	x24, x23, [sp, #-0x40]!
00000000000480cc	stp	x22, x21, [sp, #0x10]
00000000000480d0	stp	x20, x19, [sp, #0x20]
00000000000480d4	stp	x29, x30, [sp, #0x30]
00000000000480d8	add	x29, sp, #0x30
00000000000480dc	mov	x20, x2
00000000000480e0	mov	x21, x0
00000000000480e4	bl	_Kotlin_initRuntimeIfNeeded
00000000000480e8	adrp	x0, 32 ; 0x68000
00000000000480ec	add	x0, x0, #0xa00
00000000000480f0	ldr	x8, [x0]
00000000000480f4	blr	x8
00000000000480f8	ldr	x8, [x0]
00000000000480fc	add	x19, x8, #0x138
0000000000048100	ldaxr	w22, [x19]
0000000000048104	stlxr	w8, wzr, [x19]
0000000000048108	cbnz	w8, 0x48100
000000000004810c	cmp	w22, #0x1
0000000000048110	b.ne	0x4812c
0000000000048114	adr	x8, #0x3a72f
0000000000048118	nop
000000000004811c	ldarb	w8, [x8]
0000000000048120	tbz	w8, #0x0, 0x4812c
0000000000048124	mov	x0, x19
0000000000048128	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004812c	nop
0000000000048130	ldrsw	x23, _OBJC_IVAR_$_FRKMutableSet.setHolder
0000000000048134	bl	_Kotlin_initRuntimeIfNeeded
0000000000048138	ldr	x0, [x21, x23]
000000000004813c	mov	x1, x20
0000000000048140	bl	__ZL15KSet_getElementP9ObjHeaderP11objc_object
0000000000048144	mov	x20, x0
0000000000048148	ldaxr	w8, [x19]
000000000004814c	stlxr	w9, w22, [x19]
0000000000048150	cbnz	w9, 0x48148
0000000000048154	cbnz	w22, 0x48178
0000000000048158	cmp	w8, #0x1
000000000004815c	b.ne	0x48178
0000000000048160	adr	x8, #0x3a6e3
0000000000048164	nop
0000000000048168	ldarb	w8, [x8]
000000000004816c	tbz	w8, #0x0, 0x48178
0000000000048170	mov	x0, x19
0000000000048174	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000048178	mov	x0, x20
000000000004817c	ldp	x29, x30, [sp, #0x30]
0000000000048180	ldp	x20, x19, [sp, #0x20]
0000000000048184	ldp	x22, x21, [sp, #0x10]
0000000000048188	ldp	x24, x23, [sp], #0x40
000000000004818c	ret
0000000000048190	mov	x20, x0
0000000000048194	ldaxr	w8, [x19]
0000000000048198	stlxr	w9, w22, [x19]
000000000004819c	cbnz	w9, 0x48194
00000000000481a0	cbnz	w22, 0x481c4
00000000000481a4	cmp	w8, #0x1
00000000000481a8	b.ne	0x481c4
00000000000481ac	adr	x8, #0x3a697
00000000000481b0	nop
00000000000481b4	ldarb	w8, [x8]
00000000000481b8	tbz	w8, #0x0, 0x481c4
00000000000481bc	mov	x0, x19
00000000000481c0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000481c4	mov	x0, x20
00000000000481c8	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
-[KotlinMutableSet containsObject:]:
00000000000481cc	sub	sp, sp, #0x70
00000000000481d0	stp	x26, x25, [sp, #0x20]
00000000000481d4	stp	x24, x23, [sp, #0x30]
00000000000481d8	stp	x22, x21, [sp, #0x40]
00000000000481dc	stp	x20, x19, [sp, #0x50]
00000000000481e0	stp	x29, x30, [sp, #0x60]
00000000000481e4	add	x29, sp, #0x60
00000000000481e8	mov	x21, x2
00000000000481ec	mov	x22, x0
00000000000481f0	bl	_Kotlin_initRuntimeIfNeeded
00000000000481f4	adrp	x20, 32 ; 0x68000
00000000000481f8	add	x20, x20, #0xa00
00000000000481fc	ldr	x24, [x20]
0000000000048200	mov	x0, x20
0000000000048204	blr	x24
0000000000048208	ldr	x8, [x0]
000000000004820c	add	x19, x8, #0x138
0000000000048210	ldaxr	w23, [x19]
0000000000048214	stlxr	w8, wzr, [x19]
0000000000048218	cbnz	w8, 0x48210
000000000004821c	cmp	w23, #0x1
0000000000048220	b.ne	0x4823c
0000000000048224	adr	x8, #0x3a61f
0000000000048228	nop
000000000004822c	ldarb	w8, [x8]
0000000000048230	tbz	w8, #0x0, 0x4823c
0000000000048234	mov	x0, x19
0000000000048238	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004823c	mov	x25, sp
0000000000048240	str	xzr, [sp, #0x18]
0000000000048244	mov	x0, x20
0000000000048248	blr	x24
000000000004824c	ldr	x8, [x0]
0000000000048250	ldr	x9, [x8, #0x110]
0000000000048254	str	x25, [x8, #0x110]
0000000000048258	mov	x8, #0x400000000
000000000004825c	stp	x9, x8, [sp, #0x8]
0000000000048260	nop
0000000000048264	ldrsw	x26, _OBJC_IVAR_$_FRKMutableSet.setHolder
0000000000048268	bl	_Kotlin_initRuntimeIfNeeded
000000000004826c	ldr	x22, [x22, x26]
0000000000048270	nop
0000000000048274	ldr	x0, #0x1e4ac ; Objc class ref: _OBJC_CLASS_$_NSNull
0000000000048278	nop
000000000004827c	ldr	x1, #0x1e344 ; Objc selector ref: null
0000000000048280	bl	0x4dcb8 ; Objc message: +[NSNull null]
0000000000048284	cmp	x0, x21
0000000000048288	b.eq	0x482ac
000000000004828c	cbz	x21, 0x482ac
0000000000048290	add	x2, x25, #0x18
0000000000048294	nop
0000000000048298	ldr	x1, #0x3a800
000000000004829c	mov	x0, x21
00000000000482a0	bl	0x4dcb8 ; Objc message: -[x0 null]
00000000000482a4	mov	x1, x0
00000000000482a8	b	0x482b4
00000000000482ac	mov	x1, #0x0
00000000000482b0	str	xzr, [sp, #0x18]
00000000000482b4	mov	x0, x22
00000000000482b8	bl	_Kotlin_Set_contains
00000000000482bc	mov	x21, x0
00000000000482c0	mov	x0, x20
00000000000482c4	blr	x24
00000000000482c8	ldr	x8, [x0]
00000000000482cc	ldr	x9, [sp, #0x8]
00000000000482d0	str	x9, [x8, #0x110]
00000000000482d4	ldaxr	w8, [x19]
00000000000482d8	stlxr	w9, w23, [x19]
00000000000482dc	cbnz	w9, 0x482d4
00000000000482e0	cbnz	w23, 0x48304
00000000000482e4	cmp	w8, #0x1
00000000000482e8	b.ne	0x48304
00000000000482ec	adr	x8, #0x3a557
00000000000482f0	nop
00000000000482f4	ldarb	w8, [x8]
00000000000482f8	tbz	w8, #0x0, 0x48304
00000000000482fc	mov	x0, x19
0000000000048300	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000048304	mov	x0, x21
0000000000048308	ldp	x29, x30, [sp, #0x60]
000000000004830c	ldp	x20, x19, [sp, #0x50]
0000000000048310	ldp	x22, x21, [sp, #0x40]
0000000000048314	ldp	x24, x23, [sp, #0x30]
0000000000048318	ldp	x26, x25, [sp, #0x20]
000000000004831c	add	sp, sp, #0x70
0000000000048320	ret
0000000000048324	mov	x21, x0
0000000000048328	mov	x0, x20
000000000004832c	blr	x24
0000000000048330	ldr	x8, [x0]
0000000000048334	ldr	x9, [sp, #0x8]
0000000000048338	str	x9, [x8, #0x110]
000000000004833c	ldaxr	w8, [x19]
0000000000048340	stlxr	w9, w23, [x19]
0000000000048344	cbnz	w9, 0x4833c
0000000000048348	cbnz	w23, 0x4836c
000000000004834c	cmp	w8, #0x1
0000000000048350	b.ne	0x4836c
0000000000048354	adr	x8, #0x3a4ef
0000000000048358	nop
000000000004835c	ldarb	w8, [x8]
0000000000048360	tbz	w8, #0x0, 0x4836c
0000000000048364	mov	x0, x19
0000000000048368	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004836c	mov	x0, x21
0000000000048370	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
-[KotlinMutableSet objectEnumerator]:
0000000000048374	sub	sp, sp, #0x70
0000000000048378	stp	x26, x25, [sp, #0x20]
000000000004837c	stp	x24, x23, [sp, #0x30]
0000000000048380	stp	x22, x21, [sp, #0x40]
0000000000048384	stp	x20, x19, [sp, #0x50]
0000000000048388	stp	x29, x30, [sp, #0x60]
000000000004838c	add	x29, sp, #0x60
0000000000048390	mov	x21, x0
0000000000048394	bl	_Kotlin_initRuntimeIfNeeded
0000000000048398	adrp	x20, 32 ; 0x68000
000000000004839c	add	x20, x20, #0xa00
00000000000483a0	ldr	x25, [x20]
00000000000483a4	mov	x0, x20
00000000000483a8	blr	x25
00000000000483ac	ldr	x8, [x0]
00000000000483b0	add	x19, x8, #0x138
00000000000483b4	ldaxr	w24, [x19]
00000000000483b8	stlxr	w8, wzr, [x19]
00000000000483bc	cbnz	w8, 0x483b4
00000000000483c0	cmp	w24, #0x1
00000000000483c4	b.ne	0x483e0
00000000000483c8	adr	x8, #0x3a47b
00000000000483cc	nop
00000000000483d0	ldarb	w8, [x8]
00000000000483d4	tbz	w8, #0x0, 0x483e0
00000000000483d8	mov	x0, x19
00000000000483dc	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000483e0	mov	x8, sp
00000000000483e4	add	x23, x8, #0x18
00000000000483e8	str	xzr, [sp, #0x18]
00000000000483ec	mov	x0, x20
00000000000483f0	blr	x25
00000000000483f4	ldr	x9, [x0]
00000000000483f8	ldr	x10, [x9, #0x110]
00000000000483fc	str	x8, [x9, #0x110]
0000000000048400	mov	x8, #0x400000000
0000000000048404	stp	x10, x8, [sp, #0x8]
0000000000048408	nop
000000000004840c	ldr	x22, #0x1e334 ; Objc class ref: FRKKIteratorAsNSEnumerator
0000000000048410	nop
0000000000048414	ldrsw	x26, _OBJC_IVAR_$_FRKMutableSet.setHolder
0000000000048418	bl	_Kotlin_initRuntimeIfNeeded
000000000004841c	ldr	x0, [x21, x26]
0000000000048420	mov	x1, x23
0000000000048424	bl	_Kotlin_Set_iterator
0000000000048428	mov	x2, x0
000000000004842c	nop
0000000000048430	ldr	x1, #0x1e050 ; Objc selector ref: createWithKIterator:
0000000000048434	mov	x0, x22
0000000000048438	bl	0x4dcb8 ; Objc message: +[FRKKIteratorAsNSEnumerator createWithKIterator:]
000000000004843c	mov	x21, x0
0000000000048440	mov	x0, x20
0000000000048444	blr	x25
0000000000048448	ldr	x8, [x0]
000000000004844c	ldr	x9, [sp, #0x8]
0000000000048450	str	x9, [x8, #0x110]
0000000000048454	ldaxr	w8, [x19]
0000000000048458	stlxr	w9, w24, [x19]
000000000004845c	cbnz	w9, 0x48454
0000000000048460	cbnz	w24, 0x48484
0000000000048464	cmp	w8, #0x1
0000000000048468	b.ne	0x48484
000000000004846c	adr	x8, #0x3a3d7
0000000000048470	nop
0000000000048474	ldarb	w8, [x8]
0000000000048478	tbz	w8, #0x0, 0x48484
000000000004847c	mov	x0, x19
0000000000048480	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000048484	mov	x0, x21
0000000000048488	ldp	x29, x30, [sp, #0x60]
000000000004848c	ldp	x20, x19, [sp, #0x50]
0000000000048490	ldp	x22, x21, [sp, #0x40]
0000000000048494	ldp	x24, x23, [sp, #0x30]
0000000000048498	ldp	x26, x25, [sp, #0x20]
000000000004849c	add	sp, sp, #0x70
00000000000484a0	ret
00000000000484a4	mov	x21, x0
00000000000484a8	mov	x0, x20
00000000000484ac	blr	x25
00000000000484b0	ldr	x8, [x0]
00000000000484b4	ldr	x9, [sp, #0x8]
00000000000484b8	str	x9, [x8, #0x110]
00000000000484bc	ldaxr	w8, [x19]
00000000000484c0	stlxr	w9, w24, [x19]
00000000000484c4	cbnz	w9, 0x484bc
00000000000484c8	cbnz	w24, 0x484ec
00000000000484cc	cmp	w8, #0x1
00000000000484d0	b.ne	0x484ec
00000000000484d4	adr	x8, #0x3a36f
00000000000484d8	nop
00000000000484dc	ldarb	w8, [x8]
00000000000484e0	tbz	w8, #0x0, 0x484ec
00000000000484e4	mov	x0, x19
00000000000484e8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000484ec	mov	x0, x21
00000000000484f0	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
-[KotlinMutableSet addObject:]:
00000000000484f4	sub	sp, sp, #0x70
00000000000484f8	stp	x26, x25, [sp, #0x20]
00000000000484fc	stp	x24, x23, [sp, #0x30]
0000000000048500	stp	x22, x21, [sp, #0x40]
0000000000048504	stp	x20, x19, [sp, #0x50]
0000000000048508	stp	x29, x30, [sp, #0x60]
000000000004850c	add	x29, sp, #0x60
0000000000048510	mov	x21, x2
0000000000048514	mov	x22, x0
0000000000048518	bl	_Kotlin_initRuntimeIfNeeded
000000000004851c	adrp	x20, 32 ; 0x68000
0000000000048520	add	x20, x20, #0xa00
0000000000048524	ldr	x24, [x20]
0000000000048528	mov	x0, x20
000000000004852c	blr	x24
0000000000048530	ldr	x8, [x0]
0000000000048534	add	x19, x8, #0x138
0000000000048538	ldaxr	w23, [x19]
000000000004853c	stlxr	w8, wzr, [x19]
0000000000048540	cbnz	w8, 0x48538
0000000000048544	cmp	w23, #0x1
0000000000048548	b.ne	0x48564
000000000004854c	adr	x8, #0x3a2f7
0000000000048550	nop
0000000000048554	ldarb	w8, [x8]
0000000000048558	tbz	w8, #0x0, 0x48564
000000000004855c	mov	x0, x19
0000000000048560	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000048564	mov	x25, sp
0000000000048568	str	xzr, [sp, #0x18]
000000000004856c	mov	x0, x20
0000000000048570	blr	x24
0000000000048574	ldr	x8, [x0]
0000000000048578	ldr	x9, [x8, #0x110]
000000000004857c	str	x25, [x8, #0x110]
0000000000048580	mov	x8, #0x400000000
0000000000048584	stp	x9, x8, [sp, #0x8]
0000000000048588	nop
000000000004858c	ldrsw	x26, _OBJC_IVAR_$_FRKMutableSet.setHolder
0000000000048590	bl	_Kotlin_initRuntimeIfNeeded
0000000000048594	ldr	x22, [x22, x26]
0000000000048598	nop
000000000004859c	ldr	x0, #0x1e184 ; Objc class ref: _OBJC_CLASS_$_NSNull
00000000000485a0	nop
00000000000485a4	ldr	x1, #0x1e01c ; Objc selector ref: null
00000000000485a8	bl	0x4dcb8 ; Objc message: +[NSNull null]
00000000000485ac	cmp	x0, x21
00000000000485b0	b.eq	0x485d4
00000000000485b4	cbz	x21, 0x485d4
00000000000485b8	add	x2, x25, #0x18
00000000000485bc	nop
00000000000485c0	ldr	x1, #0x3a4d8
00000000000485c4	mov	x0, x21
00000000000485c8	bl	0x4dcb8 ; Objc message: -[x0 null]
00000000000485cc	mov	x1, x0
00000000000485d0	b	0x485dc
00000000000485d4	mov	x1, #0x0
00000000000485d8	str	xzr, [sp, #0x18]
00000000000485dc	mov	x0, x22
00000000000485e0	bl	_Kotlin_MutableCollection_addObject
00000000000485e4	mov	x0, x20
00000000000485e8	blr	x24
00000000000485ec	ldr	x8, [x0]
00000000000485f0	ldr	x9, [sp, #0x8]
00000000000485f4	str	x9, [x8, #0x110]
00000000000485f8	ldaxr	w8, [x19]
00000000000485fc	stlxr	w9, w23, [x19]
0000000000048600	cbnz	w9, 0x485f8
0000000000048604	cbnz	w23, 0x48628
0000000000048608	cmp	w8, #0x1
000000000004860c	b.ne	0x48628
0000000000048610	adr	x8, #0x3a233
0000000000048614	nop
0000000000048618	ldarb	w8, [x8]
000000000004861c	tbz	w8, #0x0, 0x48628
0000000000048620	mov	x0, x19
0000000000048624	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000048628	ldp	x29, x30, [sp, #0x60]
000000000004862c	ldp	x20, x19, [sp, #0x50]
0000000000048630	ldp	x22, x21, [sp, #0x40]
0000000000048634	ldp	x24, x23, [sp, #0x30]
0000000000048638	ldp	x26, x25, [sp, #0x20]
000000000004863c	add	sp, sp, #0x70
0000000000048640	ret
0000000000048644	mov	x21, x0
0000000000048648	mov	x0, x20
000000000004864c	blr	x24
0000000000048650	ldr	x8, [x0]
0000000000048654	ldr	x9, [sp, #0x8]
0000000000048658	str	x9, [x8, #0x110]
000000000004865c	ldaxr	w8, [x19]
0000000000048660	stlxr	w9, w23, [x19]
0000000000048664	cbnz	w9, 0x4865c
0000000000048668	cbnz	w23, 0x4868c
000000000004866c	cmp	w8, #0x1
0000000000048670	b.ne	0x4868c
0000000000048674	adr	x8, #0x3a1cf
0000000000048678	nop
000000000004867c	ldarb	w8, [x8]
0000000000048680	tbz	w8, #0x0, 0x4868c
0000000000048684	mov	x0, x19
0000000000048688	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004868c	mov	x0, x21
0000000000048690	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
-[KotlinMutableSet removeObject:]:
0000000000048694	sub	sp, sp, #0x90
0000000000048698	stp	x26, x25, [sp, #0x40]
000000000004869c	stp	x24, x23, [sp, #0x50]
00000000000486a0	stp	x22, x21, [sp, #0x60]
00000000000486a4	stp	x20, x19, [sp, #0x70]
00000000000486a8	stp	x29, x30, [sp, #0x80]
00000000000486ac	add	x29, sp, #0x80
00000000000486b0	mov	x22, x2
00000000000486b4	mov	x21, x0
00000000000486b8	bl	_Kotlin_initRuntimeIfNeeded
00000000000486bc	adrp	x20, 32 ; 0x68000
00000000000486c0	add	x20, x20, #0xa00
00000000000486c4	ldr	x24, [x20]
00000000000486c8	mov	x0, x20
00000000000486cc	blr	x24
00000000000486d0	ldr	x8, [x0]
00000000000486d4	add	x19, x8, #0x138
00000000000486d8	ldaxr	w23, [x19]
00000000000486dc	stlxr	w8, wzr, [x19]
00000000000486e0	cbnz	w8, 0x486d8
00000000000486e4	cmp	w23, #0x1
00000000000486e8	b.ne	0x48704
00000000000486ec	adr	x8, #0x3a157
00000000000486f0	nop
00000000000486f4	ldarb	w8, [x8]
00000000000486f8	tbz	w8, #0x0, 0x48704
00000000000486fc	mov	x0, x19
0000000000048700	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000048704	add	x25, sp, #0x8
0000000000048708	str	xzr, [sp, #0x20]
000000000004870c	mov	x0, x20
0000000000048710	blr	x24
0000000000048714	ldr	x8, [x0]
0000000000048718	ldr	x9, [x8, #0x110]
000000000004871c	str	x25, [x8, #0x110]
0000000000048720	mov	x8, #0x400000000
0000000000048724	stp	x9, x8, [sp, #0x10]
0000000000048728	nop
000000000004872c	ldrsw	x26, _OBJC_IVAR_$_FRKMutableSet.setHolder
0000000000048730	bl	_Kotlin_initRuntimeIfNeeded
0000000000048734	ldr	x21, [x21, x26]
0000000000048738	nop
000000000004873c	ldr	x0, #0x1dfe4 ; Objc class ref: _OBJC_CLASS_$_NSNull
0000000000048740	nop
0000000000048744	ldr	x1, #0x1de7c ; Objc selector ref: null
0000000000048748	bl	0x4dcb8 ; Objc message: +[NSNull null]
000000000004874c	cmp	x0, x22
0000000000048750	b.eq	0x48774
0000000000048754	cbz	x22, 0x48774
0000000000048758	add	x2, x25, #0x18
000000000004875c	nop
0000000000048760	ldr	x1, #0x3a338
0000000000048764	mov	x0, x22
0000000000048768	bl	0x4dcb8 ; Objc message: -[x0 null]
000000000004876c	mov	x22, x0
0000000000048770	b	0x4877c
0000000000048774	mov	x22, #0x0
0000000000048778	str	xzr, [sp, #0x20]
000000000004877c	str	xzr, [sp, #0x28]
0000000000048780	mov	x0, x20
0000000000048784	blr	x24
0000000000048788	ldr	x8, [x0]
000000000004878c	ldr	x9, [x8, #0x110]
0000000000048790	add	x10, sp, #0x28
0000000000048794	str	x10, [x8, #0x110]
0000000000048798	mov	x8, #0x300000000
000000000004879c	stp	x9, x8, [sp, #0x30]
00000000000487a0	adr	x25, #0x3a0a3
00000000000487a4	nop
00000000000487a8	ldarb	w8, [x25]
00000000000487ac	tbz	w8, #0x0, 0x487b4
00000000000487b0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000487b4	ldr	x8, [x21]
00000000000487b8	and	x8, x8, #0xfffffffffffffffc
00000000000487bc	ldr	x8, [x8]
00000000000487c0	ldr	w9, [x8, #0x3c]
00000000000487c4	ldr	x8, [x8, #0x40]
00000000000487c8	tbnz	w9, #0x1f, 0x487d8
00000000000487cc	mov	w10, #0x15
00000000000487d0	and	x9, x9, x10
00000000000487d4	b	0x4885c
00000000000487d8	neg	w10, w9
00000000000487dc	mvn	w9, w9
00000000000487e0	cmp	w10, #0x9
00000000000487e4	b.ge	0x4881c
00000000000487e8	cmp	w10, #0x2
00000000000487ec	b.lt	0x48850
00000000000487f0	mov	x10, #0x0
00000000000487f4	mov	x11, x8
00000000000487f8	ldr	w12, [x11]
00000000000487fc	cmp	w12, #0x14
0000000000048800	b.gt	0x48858
0000000000048804	add	x10, x10, #0x1
0000000000048808	add	x11, x11, #0x10
000000000004880c	cmp	x9, x10
0000000000048810	b.ne	0x487f8
0000000000048814	mov	x10, x9
0000000000048818	b	0x48858
000000000004881c	mov	w10, #0x0
0000000000048820	add	w11, w9, w10
0000000000048824	cmp	w11, #0x0
0000000000048828	cinc	w11, w11, lt
000000000004882c	asr	w11, w11, #1
0000000000048830	sbfiz	x12, x11, #4, #32
0000000000048834	ldr	w12, [x8, x12]
0000000000048838	cmp	w12, #0x15
000000000004883c	csinc	w10, w10, w11, ge
0000000000048840	csel	w9, w9, w11, lt
0000000000048844	cmp	w10, w9
0000000000048848	b.lt	0x48820
000000000004884c	b	0x48858
0000000000048850	mov	w10, #0x0
0000000000048854	b	0x48858
0000000000048858	sxtw	x9, w10
000000000004885c	add	x8, x8, x9, lsl #4
0000000000048860	ldr	x8, [x8, #0x8]
0000000000048864	ldr	x8, [x8, #0x20]
0000000000048868	mov	x0, x21
000000000004886c	mov	x1, x22
0000000000048870	blr	x8
0000000000048874	mov	x0, x20
0000000000048878	blr	x24
000000000004887c	ldr	x8, [x0]
0000000000048880	ldr	x9, [sp, #0x10]
0000000000048884	str	x9, [x8, #0x110]
0000000000048888	ldaxr	w8, [x19]
000000000004888c	stlxr	w9, w23, [x19]
0000000000048890	cbnz	w9, 0x48888
0000000000048894	cbnz	w23, 0x488b0
0000000000048898	cmp	w8, #0x1
000000000004889c	b.ne	0x488b0
00000000000488a0	ldarb	w8, [x25]
00000000000488a4	tbz	w8, #0x0, 0x488b0
00000000000488a8	mov	x0, x19
00000000000488ac	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000488b0	ldp	x29, x30, [sp, #0x80]
00000000000488b4	ldp	x20, x19, [sp, #0x70]
00000000000488b8	ldp	x22, x21, [sp, #0x60]
00000000000488bc	ldp	x24, x23, [sp, #0x50]
00000000000488c0	ldp	x26, x25, [sp, #0x40]
00000000000488c4	add	sp, sp, #0x90
00000000000488c8	ret
00000000000488cc	mov	x21, x0
00000000000488d0	mov	x0, x20
00000000000488d4	blr	x24
00000000000488d8	ldr	x8, [x0]
00000000000488dc	ldr	x9, [sp, #0x30]
00000000000488e0	str	x9, [x8, #0x110]
00000000000488e4	b	0x488f8
00000000000488e8	mov	x21, x0
00000000000488ec	mov	x0, x20
00000000000488f0	blr	x24
00000000000488f4	ldr	x8, [x0]
00000000000488f8	ldr	x9, [sp, #0x10]
00000000000488fc	str	x9, [x8, #0x110]
0000000000048900	ldaxr	w8, [x19]
0000000000048904	stlxr	w9, w23, [x19]
0000000000048908	cbnz	w9, 0x48900
000000000004890c	cbnz	w23, 0x48930
0000000000048910	cmp	w8, #0x1
0000000000048914	b.ne	0x48930
0000000000048918	adr	x8, #0x39f2b
000000000004891c	nop
0000000000048920	ldarb	w8, [x8]
0000000000048924	tbz	w8, #0x0, 0x48930
0000000000048928	mov	x0, x19
000000000004892c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000048930	mov	x0, x21
0000000000048934	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
-[KMapAsNSDictionary dealloc]:
0000000000048938	sub	sp, sp, #0x60
000000000004893c	stp	x26, x25, [sp, #0x10]
0000000000048940	stp	x24, x23, [sp, #0x20]
0000000000048944	stp	x22, x21, [sp, #0x30]
0000000000048948	stp	x20, x19, [sp, #0x40]
000000000004894c	stp	x29, x30, [sp, #0x50]
0000000000048950	add	x29, sp, #0x50
0000000000048954	mov	x19, x0
0000000000048958	nop
000000000004895c	ldrsw	x8, _OBJC_IVAR_$_FRKKMapAsNSDictionary.mapHolder
0000000000048960	add	x24, x0, x8
0000000000048964	bl	_Kotlin_initRuntimeIfNeeded
0000000000048968	adrp	x21, 32 ; 0x68000
000000000004896c	add	x21, x21, #0xa00
0000000000048970	ldr	x25, [x21]
0000000000048974	mov	x0, x21
0000000000048978	blr	x25
000000000004897c	ldr	x8, [x0]
0000000000048980	add	x20, x8, #0x138
0000000000048984	ldaxr	w22, [x20]
0000000000048988	stlxr	w8, wzr, [x20]
000000000004898c	cbnz	w8, 0x48984
0000000000048990	adr	x23, #0x39eb3
0000000000048994	nop
0000000000048998	cmp	w22, #0x1
000000000004899c	b.ne	0x489b0
00000000000489a0	ldarb	w8, [x23]
00000000000489a4	tbz	w8, #0x0, 0x489b0
00000000000489a8	mov	x0, x20
00000000000489ac	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000489b0	ldr	x8, [x24]
00000000000489b4	cbz	x8, 0x489d0
00000000000489b8	ldr	x1, [x24, #0x8]
00000000000489bc	mov	x0, x21
00000000000489c0	blr	x25
00000000000489c4	ldr	x8, [x0]
00000000000489c8	add	x0, x8, #0x8
00000000000489cc	bl	__ZN6kotlin2mm17StableRefRegistry19UnregisterStableRefEPNS0_10ThreadDataEPNS_16MultiSourceQueueIP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS6_EEE4NodeE
00000000000489d0	ldaxr	w8, [x20]
00000000000489d4	stlxr	w9, w22, [x20]
00000000000489d8	cbnz	w9, 0x489d0
00000000000489dc	cbnz	w22, 0x489f8
00000000000489e0	cmp	w8, #0x1
00000000000489e4	b.ne	0x489f8
00000000000489e8	ldarb	w8, [x23]
00000000000489ec	tbz	w8, #0x0, 0x489f8
00000000000489f0	mov	x0, x20
00000000000489f4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000489f8	nop
00000000000489fc	ldr	x8, #0x1ddbc ; Objc class ref: FRKKMapAsNSDictionary
0000000000048a00	stp	x19, x8, [sp]
0000000000048a04	nop
0000000000048a08	ldr	x1, #0x1da80 ; Objc selector ref: dealloc
0000000000048a0c	mov	x0, sp
0000000000048a10	bl	0x4dcc4 ; Objc message: -[[x0 super] dealloc]
0000000000048a14	ldp	x29, x30, [sp, #0x50]
0000000000048a18	ldp	x20, x19, [sp, #0x40]
0000000000048a1c	ldp	x22, x21, [sp, #0x30]
0000000000048a20	ldp	x24, x23, [sp, #0x20]
0000000000048a24	ldp	x26, x25, [sp, #0x10]
0000000000048a28	add	sp, sp, #0x60
0000000000048a2c	ret
-[KMapAsNSDictionary toKotlin:]:
0000000000048a30	stp	x22, x21, [sp, #-0x30]!
0000000000048a34	stp	x20, x19, [sp, #0x10]
0000000000048a38	stp	x29, x30, [sp, #0x20]
0000000000048a3c	add	x29, sp, #0x20
0000000000048a40	mov	x19, x2
0000000000048a44	mov	x20, x0
0000000000048a48	nop
0000000000048a4c	ldrsw	x21, _OBJC_IVAR_$_FRKKMapAsNSDictionary.mapHolder
0000000000048a50	bl	_Kotlin_initRuntimeIfNeeded
0000000000048a54	ldr	x0, [x20, x21]
0000000000048a58	str	x0, [x19]
0000000000048a5c	ldp	x29, x30, [sp, #0x20]
0000000000048a60	ldp	x20, x19, [sp, #0x10]
0000000000048a64	ldp	x22, x21, [sp], #0x30
0000000000048a68	ret
-[KMapAsNSDictionary count]:
0000000000048a6c	stp	x22, x21, [sp, #-0x30]!
0000000000048a70	stp	x20, x19, [sp, #0x10]
0000000000048a74	stp	x29, x30, [sp, #0x20]
0000000000048a78	add	x29, sp, #0x20
0000000000048a7c	mov	x20, x0
0000000000048a80	bl	_Kotlin_initRuntimeIfNeeded
0000000000048a84	adrp	x0, 32 ; 0x68000
0000000000048a88	add	x0, x0, #0xa00
0000000000048a8c	ldr	x8, [x0]
0000000000048a90	blr	x8
0000000000048a94	ldr	x8, [x0]
0000000000048a98	add	x19, x8, #0x138
0000000000048a9c	ldaxr	w21, [x19]
0000000000048aa0	stlxr	w8, wzr, [x19]
0000000000048aa4	cbnz	w8, 0x48a9c
0000000000048aa8	cmp	w21, #0x1
0000000000048aac	b.ne	0x48ac8
0000000000048ab0	adr	x8, #0x39d93
0000000000048ab4	nop
0000000000048ab8	ldarb	w8, [x8]
0000000000048abc	tbz	w8, #0x0, 0x48ac8
0000000000048ac0	mov	x0, x19
0000000000048ac4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000048ac8	nop
0000000000048acc	ldrsw	x22, _OBJC_IVAR_$_FRKKMapAsNSDictionary.mapHolder
0000000000048ad0	bl	_Kotlin_initRuntimeIfNeeded
0000000000048ad4	ldr	x0, [x20, x22]
0000000000048ad8	bl	_Kotlin_Map_getSize
0000000000048adc	mov	x20, x0
0000000000048ae0	ldaxr	w8, [x19]
0000000000048ae4	stlxr	w9, w21, [x19]
0000000000048ae8	cbnz	w9, 0x48ae0
0000000000048aec	cbnz	w21, 0x48b10
0000000000048af0	cmp	w8, #0x1
0000000000048af4	b.ne	0x48b10
0000000000048af8	adr	x8, #0x39d4b
0000000000048afc	nop
0000000000048b00	ldarb	w8, [x8]
0000000000048b04	tbz	w8, #0x0, 0x48b10
0000000000048b08	mov	x0, x19
0000000000048b0c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000048b10	sxtw	x0, w20
0000000000048b14	ldp	x29, x30, [sp, #0x20]
0000000000048b18	ldp	x20, x19, [sp, #0x10]
0000000000048b1c	ldp	x22, x21, [sp], #0x30
0000000000048b20	ret
0000000000048b24	mov	x20, x0
0000000000048b28	ldaxr	w8, [x19]
0000000000048b2c	stlxr	w9, w21, [x19]
0000000000048b30	cbnz	w9, 0x48b28
0000000000048b34	cbnz	w21, 0x48b58
0000000000048b38	cmp	w8, #0x1
0000000000048b3c	b.ne	0x48b58
0000000000048b40	adr	x8, #0x39d03
0000000000048b44	nop
0000000000048b48	ldarb	w8, [x8]
0000000000048b4c	tbz	w8, #0x0, 0x48b58
0000000000048b50	mov	x0, x19
0000000000048b54	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000048b58	mov	x0, x20
0000000000048b5c	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
-[KMapAsNSDictionary objectForKey:]:
0000000000048b60	stp	x24, x23, [sp, #-0x40]!
0000000000048b64	stp	x22, x21, [sp, #0x10]
0000000000048b68	stp	x20, x19, [sp, #0x20]
0000000000048b6c	stp	x29, x30, [sp, #0x30]
0000000000048b70	add	x29, sp, #0x30
0000000000048b74	mov	x20, x2
0000000000048b78	mov	x21, x0
0000000000048b7c	bl	_Kotlin_initRuntimeIfNeeded
0000000000048b80	adrp	x0, 32 ; 0x68000
0000000000048b84	add	x0, x0, #0xa00
0000000000048b88	ldr	x8, [x0]
0000000000048b8c	blr	x8
0000000000048b90	ldr	x8, [x0]
0000000000048b94	add	x19, x8, #0x138
0000000000048b98	ldaxr	w22, [x19]
0000000000048b9c	stlxr	w8, wzr, [x19]
0000000000048ba0	cbnz	w8, 0x48b98
0000000000048ba4	cmp	w22, #0x1
0000000000048ba8	b.ne	0x48bc4
0000000000048bac	adr	x8, #0x39c97
0000000000048bb0	nop
0000000000048bb4	ldarb	w8, [x8]
0000000000048bb8	tbz	w8, #0x0, 0x48bc4
0000000000048bbc	mov	x0, x19
0000000000048bc0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000048bc4	nop
0000000000048bc8	ldrsw	x23, _OBJC_IVAR_$_FRKKMapAsNSDictionary.mapHolder
0000000000048bcc	bl	_Kotlin_initRuntimeIfNeeded
0000000000048bd0	ldr	x0, [x21, x23]
0000000000048bd4	mov	x1, x20
0000000000048bd8	bl	__ZL8KMap_getP9ObjHeaderP11objc_object
0000000000048bdc	mov	x20, x0
0000000000048be0	ldaxr	w8, [x19]
0000000000048be4	stlxr	w9, w22, [x19]
0000000000048be8	cbnz	w9, 0x48be0
0000000000048bec	cbnz	w22, 0x48c10
0000000000048bf0	cmp	w8, #0x1
0000000000048bf4	b.ne	0x48c10
0000000000048bf8	adr	x8, #0x39c4b
0000000000048bfc	nop
0000000000048c00	ldarb	w8, [x8]
0000000000048c04	tbz	w8, #0x0, 0x48c10
0000000000048c08	mov	x0, x19
0000000000048c0c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000048c10	mov	x0, x20
0000000000048c14	ldp	x29, x30, [sp, #0x30]
0000000000048c18	ldp	x20, x19, [sp, #0x20]
0000000000048c1c	ldp	x22, x21, [sp, #0x10]
0000000000048c20	ldp	x24, x23, [sp], #0x40
0000000000048c24	ret
0000000000048c28	mov	x20, x0
0000000000048c2c	ldaxr	w8, [x19]
0000000000048c30	stlxr	w9, w22, [x19]
0000000000048c34	cbnz	w9, 0x48c2c
0000000000048c38	cbnz	w22, 0x48c5c
0000000000048c3c	cmp	w8, #0x1
0000000000048c40	b.ne	0x48c5c
0000000000048c44	adr	x8, #0x39bff
0000000000048c48	nop
0000000000048c4c	ldarb	w8, [x8]
0000000000048c50	tbz	w8, #0x0, 0x48c5c
0000000000048c54	mov	x0, x19
0000000000048c58	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000048c5c	mov	x0, x20
0000000000048c60	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
-[KMapAsNSDictionary keyEnumerator]:
0000000000048c64	sub	sp, sp, #0x70
0000000000048c68	stp	x26, x25, [sp, #0x20]
0000000000048c6c	stp	x24, x23, [sp, #0x30]
0000000000048c70	stp	x22, x21, [sp, #0x40]
0000000000048c74	stp	x20, x19, [sp, #0x50]
0000000000048c78	stp	x29, x30, [sp, #0x60]
0000000000048c7c	add	x29, sp, #0x60
0000000000048c80	mov	x21, x0
0000000000048c84	bl	_Kotlin_initRuntimeIfNeeded
0000000000048c88	adrp	x20, 32 ; 0x68000
0000000000048c8c	add	x20, x20, #0xa00
0000000000048c90	ldr	x25, [x20]
0000000000048c94	mov	x0, x20
0000000000048c98	blr	x25
0000000000048c9c	ldr	x8, [x0]
0000000000048ca0	add	x19, x8, #0x138
0000000000048ca4	ldaxr	w24, [x19]
0000000000048ca8	stlxr	w8, wzr, [x19]
0000000000048cac	cbnz	w8, 0x48ca4
0000000000048cb0	cmp	w24, #0x1
0000000000048cb4	b.ne	0x48cd0
0000000000048cb8	adr	x8, #0x39b8b
0000000000048cbc	nop
0000000000048cc0	ldarb	w8, [x8]
0000000000048cc4	tbz	w8, #0x0, 0x48cd0
0000000000048cc8	mov	x0, x19
0000000000048ccc	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000048cd0	mov	x8, sp
0000000000048cd4	add	x23, x8, #0x18
0000000000048cd8	str	xzr, [sp, #0x18]
0000000000048cdc	mov	x0, x20
0000000000048ce0	blr	x25
0000000000048ce4	ldr	x9, [x0]
0000000000048ce8	ldr	x10, [x9, #0x110]
0000000000048cec	str	x8, [x9, #0x110]
0000000000048cf0	mov	x8, #0x400000000
0000000000048cf4	stp	x10, x8, [sp, #0x8]
0000000000048cf8	nop
0000000000048cfc	ldr	x22, #0x1da44 ; Objc class ref: FRKKIteratorAsNSEnumerator
0000000000048d00	nop
0000000000048d04	ldrsw	x26, _OBJC_IVAR_$_FRKKMapAsNSDictionary.mapHolder
0000000000048d08	bl	_Kotlin_initRuntimeIfNeeded
0000000000048d0c	ldr	x0, [x21, x26]
0000000000048d10	mov	x1, x23
0000000000048d14	bl	_Kotlin_Map_keyIterator
0000000000048d18	mov	x2, x0
0000000000048d1c	nop
0000000000048d20	ldr	x1, #0x1d760 ; Objc selector ref: createWithKIterator:
0000000000048d24	mov	x0, x22
0000000000048d28	bl	0x4dcb8 ; Objc message: +[FRKKIteratorAsNSEnumerator createWithKIterator:]
0000000000048d2c	mov	x21, x0
0000000000048d30	mov	x0, x20
0000000000048d34	blr	x25
0000000000048d38	ldr	x8, [x0]
0000000000048d3c	ldr	x9, [sp, #0x8]
0000000000048d40	str	x9, [x8, #0x110]
0000000000048d44	ldaxr	w8, [x19]
0000000000048d48	stlxr	w9, w24, [x19]
0000000000048d4c	cbnz	w9, 0x48d44
0000000000048d50	cbnz	w24, 0x48d74
0000000000048d54	cmp	w8, #0x1
0000000000048d58	b.ne	0x48d74
0000000000048d5c	adr	x8, #0x39ae7
0000000000048d60	nop
0000000000048d64	ldarb	w8, [x8]
0000000000048d68	tbz	w8, #0x0, 0x48d74
0000000000048d6c	mov	x0, x19
0000000000048d70	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000048d74	mov	x0, x21
0000000000048d78	ldp	x29, x30, [sp, #0x60]
0000000000048d7c	ldp	x20, x19, [sp, #0x50]
0000000000048d80	ldp	x22, x21, [sp, #0x40]
0000000000048d84	ldp	x24, x23, [sp, #0x30]
0000000000048d88	ldp	x26, x25, [sp, #0x20]
0000000000048d8c	add	sp, sp, #0x70
0000000000048d90	ret
0000000000048d94	mov	x21, x0
0000000000048d98	mov	x0, x20
0000000000048d9c	blr	x25
0000000000048da0	ldr	x8, [x0]
0000000000048da4	ldr	x9, [sp, #0x8]
0000000000048da8	str	x9, [x8, #0x110]
0000000000048dac	ldaxr	w8, [x19]
0000000000048db0	stlxr	w9, w24, [x19]
0000000000048db4	cbnz	w9, 0x48dac
0000000000048db8	cbnz	w24, 0x48ddc
0000000000048dbc	cmp	w8, #0x1
0000000000048dc0	b.ne	0x48ddc
0000000000048dc4	adr	x8, #0x39a7f
0000000000048dc8	nop
0000000000048dcc	ldarb	w8, [x8]
0000000000048dd0	tbz	w8, #0x0, 0x48ddc
0000000000048dd4	mov	x0, x19
0000000000048dd8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000048ddc	mov	x0, x21
0000000000048de0	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
__ZL8KMap_getP9ObjHeaderP11objc_object:
0000000000048de4	sub	sp, sp, #0xb0
0000000000048de8	stp	x26, x25, [sp, #0x60]
0000000000048dec	stp	x24, x23, [sp, #0x70]
0000000000048df0	stp	x22, x21, [sp, #0x80]
0000000000048df4	stp	x20, x19, [sp, #0x90]
0000000000048df8	stp	x29, x30, [sp, #0xa0]
0000000000048dfc	add	x29, sp, #0xa0
0000000000048e00	mov	x22, x1
0000000000048e04	mov	x20, x0
0000000000048e08	add	x26, sp, #0x28
0000000000048e0c	str	xzr, [sp, #0x40]
0000000000048e10	adrp	x19, 32 ; 0x68000
0000000000048e14	add	x19, x19, #0xa00
0000000000048e18	ldr	x24, [x19]
0000000000048e1c	mov	x0, x19
0000000000048e20	blr	x24
0000000000048e24	ldr	x8, [x0]
0000000000048e28	ldr	x9, [x8, #0x110]
0000000000048e2c	mov	x10, #0x400000000
0000000000048e30	stp	x9, x10, [sp, #0x30]
0000000000048e34	add	x23, sp, #0x8
0000000000048e38	stp	x10, xzr, [sp, #0x18]
0000000000048e3c	str	x23, [x8, #0x110]
0000000000048e40	str	x26, [sp, #0x10]
0000000000048e44	adrp	x25, 30 ; 0x66000
0000000000048e48	ldr	x0, [x25, #0x720] ; Objc class ref: _OBJC_CLASS_$_NSNull
0000000000048e4c	nop
0000000000048e50	ldr	x21, #0x1d770 ; Objc selector ref: null
0000000000048e54	mov	x1, x21
0000000000048e58	bl	0x4dcb8 ; Objc message: +[NSNull null]
0000000000048e5c	cmp	x0, x22
0000000000048e60	ccmp	x22, #0x0, #0x4, ne
0000000000048e64	b.ne	0x48e74
0000000000048e68	mov	x22, #0x0
0000000000048e6c	str	xzr, [sp, #0x40]
0000000000048e70	b	0x48e8c
0000000000048e74	add	x2, x26, #0x18
0000000000048e78	nop
0000000000048e7c	ldr	x1, #0x39c1c
0000000000048e80	mov	x0, x22
0000000000048e84	bl	0x4dcb8 ; Objc message: -[x0 null]
0000000000048e88	mov	x22, x0
0000000000048e8c	add	x23, x23, #0x18
0000000000048e90	str	xzr, [sp, #0x48]
0000000000048e94	mov	x0, x19
0000000000048e98	blr	x24
0000000000048e9c	ldr	x8, [x0]
0000000000048ea0	ldr	x9, [x8, #0x110]
0000000000048ea4	add	x10, sp, #0x48
0000000000048ea8	str	x10, [x8, #0x110]
0000000000048eac	mov	x8, #0x300000000
0000000000048eb0	stp	x9, x8, [sp, #0x50]
0000000000048eb4	adr	x26, #0x3998f
0000000000048eb8	nop
0000000000048ebc	ldarb	w8, [x26]
0000000000048ec0	tbz	w8, #0x0, 0x48ec8
0000000000048ec4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000048ec8	ldr	x8, [x20]
0000000000048ecc	and	x8, x8, #0xfffffffffffffffc
0000000000048ed0	ldr	x8, [x8]
0000000000048ed4	ldr	w9, [x8, #0x3c]
0000000000048ed8	ldr	x8, [x8, #0x40]
0000000000048edc	tbnz	w9, #0x1f, 0x48eec
0000000000048ee0	mov	w10, #0x41
0000000000048ee4	and	x9, x9, x10
0000000000048ee8	b	0x48f70
0000000000048eec	neg	w10, w9
0000000000048ef0	mvn	w9, w9
0000000000048ef4	cmp	w10, #0x9
0000000000048ef8	b.ge	0x48f30
0000000000048efc	cmp	w10, #0x2
0000000000048f00	b.lt	0x48f64
0000000000048f04	mov	x10, #0x0
0000000000048f08	mov	x11, x8
0000000000048f0c	ldr	w12, [x11]
0000000000048f10	cmp	w12, #0x40
0000000000048f14	b.gt	0x48f6c
0000000000048f18	add	x10, x10, #0x1
0000000000048f1c	add	x11, x11, #0x10
0000000000048f20	cmp	x9, x10
0000000000048f24	b.ne	0x48f0c
0000000000048f28	mov	x10, x9
0000000000048f2c	b	0x48f6c
0000000000048f30	mov	w10, #0x0
0000000000048f34	add	w11, w9, w10
0000000000048f38	cmp	w11, #0x0
0000000000048f3c	cinc	w11, w11, lt
0000000000048f40	asr	w11, w11, #1
0000000000048f44	sbfiz	x12, x11, #4, #32
0000000000048f48	ldr	w12, [x8, x12]
0000000000048f4c	cmp	w12, #0x41
0000000000048f50	csinc	w10, w10, w11, ge
0000000000048f54	csel	w9, w9, w11, lt
0000000000048f58	cmp	w10, w9
0000000000048f5c	b.lt	0x48f34
0000000000048f60	b	0x48f6c
0000000000048f64	mov	w10, #0x0
0000000000048f68	b	0x48f6c
0000000000048f6c	sxtw	x9, w10
0000000000048f70	add	x8, x8, x9, lsl #4
0000000000048f74	ldr	x8, [x8, #0x8]
0000000000048f78	ldr	x8, [x8, #0x30]
0000000000048f7c	mov	x0, x20
0000000000048f80	mov	x1, x22
0000000000048f84	mov	x2, x23
0000000000048f88	blr	x8
0000000000048f8c	mov	x8, x0
0000000000048f90	str	x0, [sp, #0x20]
0000000000048f94	mov	x0, x19
0000000000048f98	blr	x24
0000000000048f9c	ldr	x9, [x0]
0000000000048fa0	ldr	x10, [sp, #0x50]
0000000000048fa4	str	x10, [x9, #0x110]
0000000000048fa8	cbz	x8, 0x48fb8
0000000000048fac	mov	x0, x8
0000000000048fb0	bl	_Kotlin_ObjCExport_refToObjC
0000000000048fb4	b	0x490c0
0000000000048fb8	stp	xzr, x10, [sp, #0x48]
0000000000048fbc	add	x8, sp, #0x48
0000000000048fc0	str	x8, [x9, #0x110]
0000000000048fc4	mov	x8, #0x300000000
0000000000048fc8	str	x8, [sp, #0x58]
0000000000048fcc	ldarb	w8, [x26]
0000000000048fd0	tbz	w8, #0x0, 0x48fd8
0000000000048fd4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000048fd8	ldr	x8, [x20]
0000000000048fdc	and	x8, x8, #0xfffffffffffffffc
0000000000048fe0	ldr	x8, [x8]
0000000000048fe4	ldr	w9, [x8, #0x3c]
0000000000048fe8	ldr	x8, [x8, #0x40]
0000000000048fec	tbnz	w9, #0x1f, 0x48ffc
0000000000048ff0	mov	w10, #0x41
0000000000048ff4	and	x9, x9, x10
0000000000048ff8	b	0x49080
0000000000048ffc	neg	w10, w9
0000000000049000	mvn	w9, w9
0000000000049004	cmp	w10, #0x9
0000000000049008	b.ge	0x49040
000000000004900c	cmp	w10, #0x2
0000000000049010	b.lt	0x49074
0000000000049014	mov	x10, #0x0
0000000000049018	mov	x11, x8
000000000004901c	ldr	w12, [x11]
0000000000049020	cmp	w12, #0x40
0000000000049024	b.gt	0x4907c
0000000000049028	add	x10, x10, #0x1
000000000004902c	add	x11, x11, #0x10
0000000000049030	cmp	x9, x10
0000000000049034	b.ne	0x4901c
0000000000049038	mov	x10, x9
000000000004903c	b	0x4907c
0000000000049040	mov	w10, #0x0
0000000000049044	add	w11, w9, w10
0000000000049048	cmp	w11, #0x0
000000000004904c	cinc	w11, w11, lt
0000000000049050	asr	w11, w11, #1
0000000000049054	sbfiz	x12, x11, #4, #32
0000000000049058	ldr	w12, [x8, x12]
000000000004905c	cmp	w12, #0x41
0000000000049060	csinc	w10, w10, w11, ge
0000000000049064	csel	w9, w9, w11, lt
0000000000049068	cmp	w10, w9
000000000004906c	b.lt	0x49044
0000000000049070	b	0x4907c
0000000000049074	mov	w10, #0x0
0000000000049078	b	0x4907c
000000000004907c	sxtw	x9, w10
0000000000049080	add	x8, x8, x9, lsl #4
0000000000049084	ldr	x8, [x8, #0x8]
0000000000049088	ldr	x8, [x8, #0x20]
000000000004908c	mov	x0, x20
0000000000049090	mov	x1, x22
0000000000049094	blr	x8
0000000000049098	mov	x8, x0
000000000004909c	mov	x0, x19
00000000000490a0	blr	x24
00000000000490a4	ldr	x9, [x0]
00000000000490a8	ldr	x10, [sp, #0x50]
00000000000490ac	str	x10, [x9, #0x110]
00000000000490b0	cbz	w8, 0x490f8
00000000000490b4	ldr	x0, [x25, #0x720]
00000000000490b8	mov	x1, x21
00000000000490bc	bl	0x4dcb8 ; Objc message: -[x0 null]
00000000000490c0	mov	x2, x0
00000000000490c4	mov	x0, x19
00000000000490c8	blr	x24
00000000000490cc	ldr	x8, [x0]
00000000000490d0	ldr	x9, [sp, #0x30]
00000000000490d4	str	x9, [x8, #0x110]
00000000000490d8	mov	x0, x2
00000000000490dc	ldp	x29, x30, [sp, #0xa0]
00000000000490e0	ldp	x20, x19, [sp, #0x90]
00000000000490e4	ldp	x22, x21, [sp, #0x80]
00000000000490e8	ldp	x24, x23, [sp, #0x70]
00000000000490ec	ldp	x26, x25, [sp, #0x60]
00000000000490f0	add	sp, sp, #0xb0
00000000000490f4	ret
00000000000490f8	mov	x2, #0x0
00000000000490fc	b	0x490c4
0000000000049100	b	0x49108
0000000000049104	b	0x49124
0000000000049108	mov	x1, x0
000000000004910c	mov	x0, x19
0000000000049110	blr	x24
0000000000049114	ldr	x8, [x0]
0000000000049118	ldr	x9, [sp, #0x50]
000000000004911c	str	x9, [x8, #0x110]
0000000000049120	b	0x49128
0000000000049124	mov	x1, x0
0000000000049128	mov	x0, x19
000000000004912c	blr	x24
0000000000049130	ldr	x8, [x0]
0000000000049134	ldr	x9, [sp, #0x30]
0000000000049138	str	x9, [x8, #0x110]
000000000004913c	mov	x0, x1
0000000000049140	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
+[KMapAsNSDictionary createRetainedWithKMap:]:
0000000000049144	stp	x22, x21, [sp, #-0x30]!
0000000000049148	stp	x20, x19, [sp, #0x10]
000000000004914c	stp	x29, x30, [sp, #0x20]
0000000000049150	add	x29, sp, #0x20
0000000000049154	mov	x19, x2
0000000000049158	nop
000000000004915c	ldr	x0, #0x1d604 ; Objc class ref: FRKKMapAsNSDictionary
0000000000049160	bl	0x4dc40 ; symbol stub for: _objc_alloc
0000000000049164	nop
0000000000049168	ldr	x1, #0x1d360 ; Objc selector ref: init
000000000004916c	bl	0x4dcb8 ; Objc message: +[FRKKMapAsNSDictionary init]
0000000000049170	mov	x20, x0
0000000000049174	nop
0000000000049178	ldrsw	x8, _OBJC_IVAR_$_FRKKMapAsNSDictionary.mapHolder
000000000004917c	add	x21, x0, x8
0000000000049180	adrp	x0, 31 ; 0x68000
0000000000049184	add	x0, x0, #0xa00
0000000000049188	ldr	x8, [x0]
000000000004918c	blr	x8
0000000000049190	ldr	x22, [x0]
0000000000049194	mov	w0, #0x1
0000000000049198	mov	w1, #0x28
000000000004919c	bl	0x4db20 ; symbol stub for: _calloc
00000000000491a0	ldr	x8, [x22, #0xa8]!
00000000000491a4	sub	x9, x22, #0x8
00000000000491a8	stp	x8, x22, [x0]
00000000000491ac	str	x0, [x8, #0x8]
00000000000491b0	str	x0, [x22]
00000000000491b4	ldr	x8, [x22, #0x10]
00000000000491b8	add	x8, x8, #0x1
00000000000491bc	str	x8, [x22, #0x10]
00000000000491c0	stp	x9, x0, [x0, #0x18]
00000000000491c4	str	x19, [x0, #0x10]!
00000000000491c8	stp	x19, x0, [x21]
00000000000491cc	mov	x0, x20
00000000000491d0	ldp	x29, x30, [sp, #0x20]
00000000000491d4	ldp	x20, x19, [sp, #0x10]
00000000000491d8	ldp	x22, x21, [sp], #0x30
00000000000491dc	ret
-[KotlinMutableDictionary dealloc]:
00000000000491e0	sub	sp, sp, #0x60
00000000000491e4	stp	x26, x25, [sp, #0x10]
00000000000491e8	stp	x24, x23, [sp, #0x20]
00000000000491ec	stp	x22, x21, [sp, #0x30]
00000000000491f0	stp	x20, x19, [sp, #0x40]
00000000000491f4	stp	x29, x30, [sp, #0x50]
00000000000491f8	add	x29, sp, #0x50
00000000000491fc	mov	x19, x0
0000000000049200	nop
0000000000049204	ldrsw	x8, _OBJC_IVAR_$_FRKMutableDictionary.mapHolder
0000000000049208	add	x24, x0, x8
000000000004920c	bl	_Kotlin_initRuntimeIfNeeded
0000000000049210	adrp	x21, 31 ; 0x68000
0000000000049214	add	x21, x21, #0xa00
0000000000049218	ldr	x25, [x21]
000000000004921c	mov	x0, x21
0000000000049220	blr	x25
0000000000049224	ldr	x8, [x0]
0000000000049228	add	x20, x8, #0x138
000000000004922c	ldaxr	w22, [x20]
0000000000049230	stlxr	w8, wzr, [x20]
0000000000049234	cbnz	w8, 0x4922c
0000000000049238	adr	x23, #0x3960b
000000000004923c	nop
0000000000049240	cmp	w22, #0x1
0000000000049244	b.ne	0x49258
0000000000049248	ldarb	w8, [x23]
000000000004924c	tbz	w8, #0x0, 0x49258
0000000000049250	mov	x0, x20
0000000000049254	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000049258	ldr	x8, [x24]
000000000004925c	cbz	x8, 0x49278
0000000000049260	ldr	x1, [x24, #0x8]
0000000000049264	mov	x0, x21
0000000000049268	blr	x25
000000000004926c	ldr	x8, [x0]
0000000000049270	add	x0, x8, #0x8
0000000000049274	bl	__ZN6kotlin2mm17StableRefRegistry19UnregisterStableRefEPNS0_10ThreadDataEPNS_16MultiSourceQueueIP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS6_EEE4NodeE
0000000000049278	ldaxr	w8, [x20]
000000000004927c	stlxr	w9, w22, [x20]
0000000000049280	cbnz	w9, 0x49278
0000000000049284	cbnz	w22, 0x492a0
0000000000049288	cmp	w8, #0x1
000000000004928c	b.ne	0x492a0
0000000000049290	ldarb	w8, [x23]
0000000000049294	tbz	w8, #0x0, 0x492a0
0000000000049298	mov	x0, x20
000000000004929c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000492a0	nop
00000000000492a4	ldr	x8, #0x1d51c ; Objc class ref: FRKMutableDictionary
00000000000492a8	stp	x19, x8, [sp]
00000000000492ac	nop
00000000000492b0	ldr	x1, #0x1d1d8 ; Objc selector ref: dealloc
00000000000492b4	mov	x0, sp
00000000000492b8	bl	0x4dcc4 ; Objc message: -[[x0 super] dealloc]
00000000000492bc	ldp	x29, x30, [sp, #0x50]
00000000000492c0	ldp	x20, x19, [sp, #0x40]
00000000000492c4	ldp	x22, x21, [sp, #0x30]
00000000000492c8	ldp	x24, x23, [sp, #0x20]
00000000000492cc	ldp	x26, x25, [sp, #0x10]
00000000000492d0	add	sp, sp, #0x60
00000000000492d4	ret
-[KotlinMutableDictionary init]:
00000000000492d8	sub	sp, sp, #0x80
00000000000492dc	stp	x26, x25, [sp, #0x30]
00000000000492e0	stp	x24, x23, [sp, #0x40]
00000000000492e4	stp	x22, x21, [sp, #0x50]
00000000000492e8	stp	x20, x19, [sp, #0x60]
00000000000492ec	stp	x29, x30, [sp, #0x70]
00000000000492f0	add	x29, sp, #0x70
00000000000492f4	nop
00000000000492f8	ldr	x8, #0x1d4c8 ; Objc class ref: FRKMutableDictionary
00000000000492fc	stp	x0, x8, [sp, #0x20]
0000000000049300	nop
0000000000049304	ldr	x1, #0x1d1c4 ; Objc selector ref: init
0000000000049308	add	x0, sp, #0x20
000000000004930c	bl	0x4dcc4 ; Objc message: -[[x0 super] init]
0000000000049310	mov	x20, x0
0000000000049314	cbz	x0, 0x49434
0000000000049318	bl	_Kotlin_initRuntimeIfNeeded
000000000004931c	adrp	x21, 31 ; 0x68000
0000000000049320	add	x21, x21, #0xa00
0000000000049324	ldr	x25, [x21]
0000000000049328	mov	x0, x21
000000000004932c	blr	x25
0000000000049330	ldr	x24, [x0]
0000000000049334	add	x19, x24, #0x138
0000000000049338	ldaxr	w23, [x19]
000000000004933c	stlxr	w8, wzr, [x19]
0000000000049340	cbnz	w8, 0x49338
0000000000049344	cmp	w23, #0x1
0000000000049348	b.ne	0x49364
000000000004934c	adr	x8, #0x394f7
0000000000049350	nop
0000000000049354	ldarb	w8, [x8]
0000000000049358	tbz	w8, #0x0, 0x49364
000000000004935c	mov	x0, x19
0000000000049360	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000049364	mov	x8, sp
0000000000049368	add	x1, x8, #0x18
000000000004936c	str	xzr, [sp, #0x18]
0000000000049370	mov	x0, x21
0000000000049374	blr	x25
0000000000049378	ldr	x9, [x0]
000000000004937c	ldr	x10, [x9, #0x110]
0000000000049380	str	x8, [x9, #0x110]
0000000000049384	mov	x8, #0x400000000
0000000000049388	stp	x10, x8, [sp, #0x8]
000000000004938c	mov	w0, #0x8
0000000000049390	bl	_Kotlin_MutableMap_createWithCapacity
0000000000049394	mov	x22, x0
0000000000049398	nop
000000000004939c	ldrsw	x8, _OBJC_IVAR_$_FRKMutableDictionary.mapHolder
00000000000493a0	add	x26, x20, x8
00000000000493a4	mov	x0, x21
00000000000493a8	blr	x25
00000000000493ac	mov	x21, x0
00000000000493b0	ldr	x25, [x0]
00000000000493b4	mov	w0, #0x1
00000000000493b8	mov	w1, #0x28
00000000000493bc	bl	0x4db20 ; symbol stub for: _calloc
00000000000493c0	ldr	x8, [x25, #0xa8]!
00000000000493c4	sub	x9, x25, #0x8
00000000000493c8	mov	x10, x0
00000000000493cc	str	x22, [x10, #0x10]!
00000000000493d0	str	x9, [x0, #0x18]
00000000000493d4	stp	x8, x25, [x0]
00000000000493d8	str	x0, [x8, #0x8]
00000000000493dc	str	x0, [x25]
00000000000493e0	ldr	x8, [x25, #0x10]
00000000000493e4	add	x8, x8, #0x1
00000000000493e8	str	x8, [x25, #0x10]
00000000000493ec	str	x0, [x0, #0x20]
00000000000493f0	stp	x22, x10, [x26]
00000000000493f4	ldr	x8, [x21]
00000000000493f8	ldr	x9, [sp, #0x8]
00000000000493fc	str	x9, [x8, #0x110]
0000000000049400	cbz	x24, 0x49434
0000000000049404	ldaxr	w8, [x19]
0000000000049408	stlxr	w9, w23, [x19]
000000000004940c	cbnz	w9, 0x49404
0000000000049410	cbnz	w23, 0x49434
0000000000049414	cmp	w8, #0x1
0000000000049418	b.ne	0x49434
000000000004941c	adr	x8, #0x39427
0000000000049420	nop
0000000000049424	ldarb	w8, [x8]
0000000000049428	tbz	w8, #0x0, 0x49434
000000000004942c	mov	x0, x19
0000000000049430	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000049434	mov	x0, x20
0000000000049438	ldp	x29, x30, [sp, #0x70]
000000000004943c	ldp	x20, x19, [sp, #0x60]
0000000000049440	ldp	x22, x21, [sp, #0x50]
0000000000049444	ldp	x24, x23, [sp, #0x40]
0000000000049448	ldp	x26, x25, [sp, #0x30]
000000000004944c	add	sp, sp, #0x80
0000000000049450	ret
0000000000049454	mov	x20, x0
0000000000049458	mov	x0, x21
000000000004945c	blr	x25
0000000000049460	ldr	x8, [x0]
0000000000049464	ldr	x9, [sp, #0x8]
0000000000049468	str	x9, [x8, #0x110]
000000000004946c	cbz	x24, 0x494a0
0000000000049470	ldaxr	w8, [x19]
0000000000049474	stlxr	w9, w23, [x19]
0000000000049478	cbnz	w9, 0x49470
000000000004947c	cbnz	w23, 0x494a0
0000000000049480	cmp	w8, #0x1
0000000000049484	b.ne	0x494a0
0000000000049488	adr	x8, #0x393bb
000000000004948c	nop
0000000000049490	ldarb	w8, [x8]
0000000000049494	tbz	w8, #0x0, 0x494a0
0000000000049498	mov	x0, x19
000000000004949c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000494a0	mov	x0, x20
00000000000494a4	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
-[KotlinMutableDictionary initWithCapacity:]:
00000000000494a8	sub	sp, sp, #0x80
00000000000494ac	stp	x26, x25, [sp, #0x30]
00000000000494b0	stp	x24, x23, [sp, #0x40]
00000000000494b4	stp	x22, x21, [sp, #0x50]
00000000000494b8	stp	x20, x19, [sp, #0x60]
00000000000494bc	stp	x29, x30, [sp, #0x70]
00000000000494c0	add	x29, sp, #0x70
00000000000494c4	mov	x21, x2
00000000000494c8	nop
00000000000494cc	ldr	x8, #0x1d2f4 ; Objc class ref: FRKMutableDictionary
00000000000494d0	stp	x0, x8, [sp, #0x20]
00000000000494d4	nop
00000000000494d8	ldr	x1, #0x1cff0 ; Objc selector ref: init
00000000000494dc	add	x0, sp, #0x20
00000000000494e0	bl	0x4dcc4 ; Objc message: -[[x0 super] init]
00000000000494e4	mov	x20, x0
00000000000494e8	cbz	x0, 0x49610
00000000000494ec	bl	_Kotlin_initRuntimeIfNeeded
00000000000494f0	adrp	x22, 31 ; 0x68000
00000000000494f4	add	x22, x22, #0xa00
00000000000494f8	ldr	x25, [x22]
00000000000494fc	mov	x0, x22
0000000000049500	blr	x25
0000000000049504	ldr	x24, [x0]
0000000000049508	add	x19, x24, #0x138
000000000004950c	ldaxr	w23, [x19]
0000000000049510	stlxr	w8, wzr, [x19]
0000000000049514	cbnz	w8, 0x4950c
0000000000049518	cmp	w23, #0x1
000000000004951c	b.ne	0x49538
0000000000049520	adr	x8, #0x39323
0000000000049524	nop
0000000000049528	ldarb	w8, [x8]
000000000004952c	tbz	w8, #0x0, 0x49538
0000000000049530	mov	x0, x19
0000000000049534	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000049538	mov	x8, sp
000000000004953c	add	x1, x8, #0x18
0000000000049540	str	xzr, [sp, #0x18]
0000000000049544	mov	x0, x22
0000000000049548	blr	x25
000000000004954c	ldr	x9, [x0]
0000000000049550	ldr	x10, [x9, #0x110]
0000000000049554	str	x8, [x9, #0x110]
0000000000049558	mov	x8, #0x400000000
000000000004955c	stp	x10, x8, [sp, #0x8]
0000000000049560	mov	w8, #0x7fffffff
0000000000049564	cmp	x21, x8
0000000000049568	csel	w0, w21, w8, lo
000000000004956c	bl	_Kotlin_MutableMap_createWithCapacity
0000000000049570	mov	x21, x0
0000000000049574	nop
0000000000049578	ldrsw	x8, _OBJC_IVAR_$_FRKMutableDictionary.mapHolder
000000000004957c	add	x26, x20, x8
0000000000049580	mov	x0, x22
0000000000049584	blr	x25
0000000000049588	mov	x22, x0
000000000004958c	ldr	x25, [x0]
0000000000049590	mov	w0, #0x1
0000000000049594	mov	w1, #0x28
0000000000049598	bl	0x4db20 ; symbol stub for: _calloc
000000000004959c	ldr	x8, [x25, #0xa8]!
00000000000495a0	sub	x9, x25, #0x8
00000000000495a4	mov	x10, x0
00000000000495a8	str	x21, [x10, #0x10]!
00000000000495ac	str	x9, [x0, #0x18]
00000000000495b0	stp	x8, x25, [x0]
00000000000495b4	str	x0, [x8, #0x8]
00000000000495b8	str	x0, [x25]
00000000000495bc	ldr	x8, [x25, #0x10]
00000000000495c0	add	x8, x8, #0x1
00000000000495c4	str	x8, [x25, #0x10]
00000000000495c8	str	x0, [x0, #0x20]
00000000000495cc	stp	x21, x10, [x26]
00000000000495d0	ldr	x8, [x22]
00000000000495d4	ldr	x9, [sp, #0x8]
00000000000495d8	str	x9, [x8, #0x110]
00000000000495dc	cbz	x24, 0x49610
00000000000495e0	ldaxr	w8, [x19]
00000000000495e4	stlxr	w9, w23, [x19]
00000000000495e8	cbnz	w9, 0x495e0
00000000000495ec	cbnz	w23, 0x49610
00000000000495f0	cmp	w8, #0x1
00000000000495f4	b.ne	0x49610
00000000000495f8	adr	x8, #0x3924b
00000000000495fc	nop
0000000000049600	ldarb	w8, [x8]
0000000000049604	tbz	w8, #0x0, 0x49610
0000000000049608	mov	x0, x19
000000000004960c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000049610	mov	x0, x20
0000000000049614	ldp	x29, x30, [sp, #0x70]
0000000000049618	ldp	x20, x19, [sp, #0x60]
000000000004961c	ldp	x22, x21, [sp, #0x50]
0000000000049620	ldp	x24, x23, [sp, #0x40]
0000000000049624	ldp	x26, x25, [sp, #0x30]
0000000000049628	add	sp, sp, #0x80
000000000004962c	ret
0000000000049630	mov	x20, x0
0000000000049634	mov	x0, x22
0000000000049638	blr	x25
000000000004963c	ldr	x8, [x0]
0000000000049640	ldr	x9, [sp, #0x8]
0000000000049644	str	x9, [x8, #0x110]
0000000000049648	cbz	x24, 0x4967c
000000000004964c	ldaxr	w8, [x19]
0000000000049650	stlxr	w9, w23, [x19]
0000000000049654	cbnz	w9, 0x4964c
0000000000049658	cbnz	w23, 0x4967c
000000000004965c	cmp	w8, #0x1
0000000000049660	b.ne	0x4967c
0000000000049664	adr	x8, #0x391df
0000000000049668	nop
000000000004966c	ldarb	w8, [x8]
0000000000049670	tbz	w8, #0x0, 0x4967c
0000000000049674	mov	x0, x19
0000000000049678	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004967c	mov	x0, x20
0000000000049680	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
-[KotlinMutableDictionary initWithKMap:]:
0000000000049684	sub	sp, sp, #0x40
0000000000049688	stp	x22, x21, [sp, #0x10]
000000000004968c	stp	x20, x19, [sp, #0x20]
0000000000049690	stp	x29, x30, [sp, #0x30]
0000000000049694	add	x29, sp, #0x30
0000000000049698	mov	x19, x2
000000000004969c	nop
00000000000496a0	ldr	x8, #0x1d120 ; Objc class ref: FRKMutableDictionary
00000000000496a4	stp	x0, x8, [sp]
00000000000496a8	nop
00000000000496ac	ldr	x1, #0x1ce1c ; Objc selector ref: init
00000000000496b0	mov	x0, sp
00000000000496b4	bl	0x4dcc4 ; Objc message: -[[x0 super] init]
00000000000496b8	mov	x20, x0
00000000000496bc	cbz	x0, 0x49718
00000000000496c0	nop
00000000000496c4	ldrsw	x8, _OBJC_IVAR_$_FRKMutableDictionary.mapHolder
00000000000496c8	add	x21, x20, x8
00000000000496cc	adrp	x0, 31 ; 0x68000
00000000000496d0	add	x0, x0, #0xa00
00000000000496d4	ldr	x8, [x0]
00000000000496d8	blr	x8
00000000000496dc	ldr	x22, [x0]
00000000000496e0	mov	w0, #0x1
00000000000496e4	mov	w1, #0x28
00000000000496e8	bl	0x4db20 ; symbol stub for: _calloc
00000000000496ec	ldr	x8, [x22, #0xa8]!
00000000000496f0	sub	x9, x22, #0x8
00000000000496f4	stp	x8, x22, [x0]
00000000000496f8	str	x0, [x8, #0x8]
00000000000496fc	str	x0, [x22]
0000000000049700	ldr	x8, [x22, #0x10]
0000000000049704	add	x8, x8, #0x1
0000000000049708	str	x8, [x22, #0x10]
000000000004970c	stp	x9, x0, [x0, #0x18]
0000000000049710	str	x19, [x0, #0x10]!
0000000000049714	stp	x19, x0, [x21]
0000000000049718	mov	x0, x20
000000000004971c	ldp	x29, x30, [sp, #0x30]
0000000000049720	ldp	x20, x19, [sp, #0x20]
0000000000049724	ldp	x22, x21, [sp, #0x10]
0000000000049728	add	sp, sp, #0x40
000000000004972c	ret
-[KotlinMutableDictionary toKotlin:]:
0000000000049730	stp	x22, x21, [sp, #-0x30]!
0000000000049734	stp	x20, x19, [sp, #0x10]
0000000000049738	stp	x29, x30, [sp, #0x20]
000000000004973c	add	x29, sp, #0x20
0000000000049740	mov	x19, x2
0000000000049744	mov	x20, x0
0000000000049748	nop
000000000004974c	ldrsw	x21, _OBJC_IVAR_$_FRKMutableDictionary.mapHolder
0000000000049750	bl	_Kotlin_initRuntimeIfNeeded
0000000000049754	ldr	x0, [x20, x21]
0000000000049758	str	x0, [x19]
000000000004975c	ldp	x29, x30, [sp, #0x20]
0000000000049760	ldp	x20, x19, [sp, #0x10]
0000000000049764	ldp	x22, x21, [sp], #0x30
0000000000049768	ret
-[KotlinMutableDictionary count]:
000000000004976c	stp	x22, x21, [sp, #-0x30]!
0000000000049770	stp	x20, x19, [sp, #0x10]
0000000000049774	stp	x29, x30, [sp, #0x20]
0000000000049778	add	x29, sp, #0x20
000000000004977c	mov	x20, x0
0000000000049780	bl	_Kotlin_initRuntimeIfNeeded
0000000000049784	adrp	x0, 31 ; 0x68000
0000000000049788	add	x0, x0, #0xa00
000000000004978c	ldr	x8, [x0]
0000000000049790	blr	x8
0000000000049794	ldr	x8, [x0]
0000000000049798	add	x19, x8, #0x138
000000000004979c	ldaxr	w21, [x19]
00000000000497a0	stlxr	w8, wzr, [x19]
00000000000497a4	cbnz	w8, 0x4979c
00000000000497a8	cmp	w21, #0x1
00000000000497ac	b.ne	0x497c8
00000000000497b0	adr	x8, #0x39093
00000000000497b4	nop
00000000000497b8	ldarb	w8, [x8]
00000000000497bc	tbz	w8, #0x0, 0x497c8
00000000000497c0	mov	x0, x19
00000000000497c4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000497c8	nop
00000000000497cc	ldrsw	x22, _OBJC_IVAR_$_FRKMutableDictionary.mapHolder
00000000000497d0	bl	_Kotlin_initRuntimeIfNeeded
00000000000497d4	ldr	x0, [x20, x22]
00000000000497d8	bl	_Kotlin_Map_getSize
00000000000497dc	mov	x20, x0
00000000000497e0	ldaxr	w8, [x19]
00000000000497e4	stlxr	w9, w21, [x19]
00000000000497e8	cbnz	w9, 0x497e0
00000000000497ec	cbnz	w21, 0x49810
00000000000497f0	cmp	w8, #0x1
00000000000497f4	b.ne	0x49810
00000000000497f8	adr	x8, #0x3904b
00000000000497fc	nop
0000000000049800	ldarb	w8, [x8]
0000000000049804	tbz	w8, #0x0, 0x49810
0000000000049808	mov	x0, x19
000000000004980c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000049810	sxtw	x0, w20
0000000000049814	ldp	x29, x30, [sp, #0x20]
0000000000049818	ldp	x20, x19, [sp, #0x10]
000000000004981c	ldp	x22, x21, [sp], #0x30
0000000000049820	ret
0000000000049824	mov	x20, x0
0000000000049828	ldaxr	w8, [x19]
000000000004982c	stlxr	w9, w21, [x19]
0000000000049830	cbnz	w9, 0x49828
0000000000049834	cbnz	w21, 0x49858
0000000000049838	cmp	w8, #0x1
000000000004983c	b.ne	0x49858
0000000000049840	adr	x8, #0x39003
0000000000049844	nop
0000000000049848	ldarb	w8, [x8]
000000000004984c	tbz	w8, #0x0, 0x49858
0000000000049850	mov	x0, x19
0000000000049854	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000049858	mov	x0, x20
000000000004985c	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
-[KotlinMutableDictionary objectForKey:]:
0000000000049860	stp	x24, x23, [sp, #-0x40]!
0000000000049864	stp	x22, x21, [sp, #0x10]
0000000000049868	stp	x20, x19, [sp, #0x20]
000000000004986c	stp	x29, x30, [sp, #0x30]
0000000000049870	add	x29, sp, #0x30
0000000000049874	mov	x20, x2
0000000000049878	mov	x21, x0
000000000004987c	bl	_Kotlin_initRuntimeIfNeeded
0000000000049880	adrp	x0, 31 ; 0x68000
0000000000049884	add	x0, x0, #0xa00
0000000000049888	ldr	x8, [x0]
000000000004988c	blr	x8
0000000000049890	ldr	x8, [x0]
0000000000049894	add	x19, x8, #0x138
0000000000049898	ldaxr	w22, [x19]
000000000004989c	stlxr	w8, wzr, [x19]
00000000000498a0	cbnz	w8, 0x49898
00000000000498a4	cmp	w22, #0x1
00000000000498a8	b.ne	0x498c4
00000000000498ac	adr	x8, #0x38f97
00000000000498b0	nop
00000000000498b4	ldarb	w8, [x8]
00000000000498b8	tbz	w8, #0x0, 0x498c4
00000000000498bc	mov	x0, x19
00000000000498c0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000498c4	nop
00000000000498c8	ldrsw	x23, _OBJC_IVAR_$_FRKMutableDictionary.mapHolder
00000000000498cc	bl	_Kotlin_initRuntimeIfNeeded
00000000000498d0	ldr	x0, [x21, x23]
00000000000498d4	mov	x1, x20
00000000000498d8	bl	__ZL8KMap_getP9ObjHeaderP11objc_object
00000000000498dc	mov	x20, x0
00000000000498e0	ldaxr	w8, [x19]
00000000000498e4	stlxr	w9, w22, [x19]
00000000000498e8	cbnz	w9, 0x498e0
00000000000498ec	cbnz	w22, 0x49910
00000000000498f0	cmp	w8, #0x1
00000000000498f4	b.ne	0x49910
00000000000498f8	adr	x8, #0x38f4b
00000000000498fc	nop
0000000000049900	ldarb	w8, [x8]
0000000000049904	tbz	w8, #0x0, 0x49910
0000000000049908	mov	x0, x19
000000000004990c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000049910	mov	x0, x20
0000000000049914	ldp	x29, x30, [sp, #0x30]
0000000000049918	ldp	x20, x19, [sp, #0x20]
000000000004991c	ldp	x22, x21, [sp, #0x10]
0000000000049920	ldp	x24, x23, [sp], #0x40
0000000000049924	ret
0000000000049928	mov	x20, x0
000000000004992c	ldaxr	w8, [x19]
0000000000049930	stlxr	w9, w22, [x19]
0000000000049934	cbnz	w9, 0x4992c
0000000000049938	cbnz	w22, 0x4995c
000000000004993c	cmp	w8, #0x1
0000000000049940	b.ne	0x4995c
0000000000049944	adr	x8, #0x38eff
0000000000049948	nop
000000000004994c	ldarb	w8, [x8]
0000000000049950	tbz	w8, #0x0, 0x4995c
0000000000049954	mov	x0, x19
0000000000049958	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004995c	mov	x0, x20
0000000000049960	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
-[KotlinMutableDictionary keyEnumerator]:
0000000000049964	sub	sp, sp, #0x70
0000000000049968	stp	x26, x25, [sp, #0x20]
000000000004996c	stp	x24, x23, [sp, #0x30]
0000000000049970	stp	x22, x21, [sp, #0x40]
0000000000049974	stp	x20, x19, [sp, #0x50]
0000000000049978	stp	x29, x30, [sp, #0x60]
000000000004997c	add	x29, sp, #0x60
0000000000049980	mov	x21, x0
0000000000049984	bl	_Kotlin_initRuntimeIfNeeded
0000000000049988	adrp	x20, 31 ; 0x68000
000000000004998c	add	x20, x20, #0xa00
0000000000049990	ldr	x25, [x20]
0000000000049994	mov	x0, x20
0000000000049998	blr	x25
000000000004999c	ldr	x8, [x0]
00000000000499a0	add	x19, x8, #0x138
00000000000499a4	ldaxr	w24, [x19]
00000000000499a8	stlxr	w8, wzr, [x19]
00000000000499ac	cbnz	w8, 0x499a4
00000000000499b0	cmp	w24, #0x1
00000000000499b4	b.ne	0x499d0
00000000000499b8	adr	x8, #0x38e8b
00000000000499bc	nop
00000000000499c0	ldarb	w8, [x8]
00000000000499c4	tbz	w8, #0x0, 0x499d0
00000000000499c8	mov	x0, x19
00000000000499cc	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000499d0	mov	x8, sp
00000000000499d4	add	x23, x8, #0x18
00000000000499d8	str	xzr, [sp, #0x18]
00000000000499dc	mov	x0, x20
00000000000499e0	blr	x25
00000000000499e4	ldr	x9, [x0]
00000000000499e8	ldr	x10, [x9, #0x110]
00000000000499ec	str	x8, [x9, #0x110]
00000000000499f0	mov	x8, #0x400000000
00000000000499f4	stp	x10, x8, [sp, #0x8]
00000000000499f8	nop
00000000000499fc	ldr	x22, #0x1cd44 ; Objc class ref: FRKKIteratorAsNSEnumerator
0000000000049a00	nop
0000000000049a04	ldrsw	x26, _OBJC_IVAR_$_FRKMutableDictionary.mapHolder
0000000000049a08	bl	_Kotlin_initRuntimeIfNeeded
0000000000049a0c	ldr	x0, [x21, x26]
0000000000049a10	mov	x1, x23
0000000000049a14	bl	_Kotlin_Map_keyIterator
0000000000049a18	mov	x2, x0
0000000000049a1c	nop
0000000000049a20	ldr	x1, #0x1ca60 ; Objc selector ref: createWithKIterator:
0000000000049a24	mov	x0, x22
0000000000049a28	bl	0x4dcb8 ; Objc message: +[FRKKIteratorAsNSEnumerator createWithKIterator:]
0000000000049a2c	mov	x21, x0
0000000000049a30	mov	x0, x20
0000000000049a34	blr	x25
0000000000049a38	ldr	x8, [x0]
0000000000049a3c	ldr	x9, [sp, #0x8]
0000000000049a40	str	x9, [x8, #0x110]
0000000000049a44	ldaxr	w8, [x19]
0000000000049a48	stlxr	w9, w24, [x19]
0000000000049a4c	cbnz	w9, 0x49a44
0000000000049a50	cbnz	w24, 0x49a74
0000000000049a54	cmp	w8, #0x1
0000000000049a58	b.ne	0x49a74
0000000000049a5c	adr	x8, #0x38de7
0000000000049a60	nop
0000000000049a64	ldarb	w8, [x8]
0000000000049a68	tbz	w8, #0x0, 0x49a74
0000000000049a6c	mov	x0, x19
0000000000049a70	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000049a74	mov	x0, x21
0000000000049a78	ldp	x29, x30, [sp, #0x60]
0000000000049a7c	ldp	x20, x19, [sp, #0x50]
0000000000049a80	ldp	x22, x21, [sp, #0x40]
0000000000049a84	ldp	x24, x23, [sp, #0x30]
0000000000049a88	ldp	x26, x25, [sp, #0x20]
0000000000049a8c	add	sp, sp, #0x70
0000000000049a90	ret
0000000000049a94	mov	x21, x0
0000000000049a98	mov	x0, x20
0000000000049a9c	blr	x25
0000000000049aa0	ldr	x8, [x0]
0000000000049aa4	ldr	x9, [sp, #0x8]
0000000000049aa8	str	x9, [x8, #0x110]
0000000000049aac	ldaxr	w8, [x19]
0000000000049ab0	stlxr	w9, w24, [x19]
0000000000049ab4	cbnz	w9, 0x49aac
0000000000049ab8	cbnz	w24, 0x49adc
0000000000049abc	cmp	w8, #0x1
0000000000049ac0	b.ne	0x49adc
0000000000049ac4	adr	x8, #0x38d7f
0000000000049ac8	nop
0000000000049acc	ldarb	w8, [x8]
0000000000049ad0	tbz	w8, #0x0, 0x49adc
0000000000049ad4	mov	x0, x19
0000000000049ad8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000049adc	mov	x0, x21
0000000000049ae0	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
-[KotlinMutableDictionary setObject:forKey:]:
0000000000049ae4	sub	sp, sp, #0xc0
0000000000049ae8	stp	x28, x27, [sp, #0x60]
0000000000049aec	stp	x26, x25, [sp, #0x70]
0000000000049af0	stp	x24, x23, [sp, #0x80]
0000000000049af4	stp	x22, x21, [sp, #0x90]
0000000000049af8	stp	x20, x19, [sp, #0xa0]
0000000000049afc	stp	x29, x30, [sp, #0xb0]
0000000000049b00	add	x29, sp, #0xb0
0000000000049b04	mov	x24, x2
0000000000049b08	mov	x23, x0
0000000000049b0c	nop
0000000000049b10	ldr	x1, #0x1c938 ; Objc selector ref: copyWithZone:
0000000000049b14	mov	x0, x3
0000000000049b18	mov	x2, #0x0
0000000000049b1c	bl	0x4dcb8 ; Objc message: -[x0 copyWithZone:]
0000000000049b20	mov	x20, x0
0000000000049b24	bl	_Kotlin_initRuntimeIfNeeded
0000000000049b28	adrp	x21, 31 ; 0x68000
0000000000049b2c	add	x21, x21, #0xa00
0000000000049b30	ldr	x27, [x21]
0000000000049b34	mov	x0, x21
0000000000049b38	blr	x27
0000000000049b3c	ldr	x8, [x0]
0000000000049b40	add	x19, x8, #0x138
0000000000049b44	ldaxr	w26, [x19]
0000000000049b48	stlxr	w8, wzr, [x19]
0000000000049b4c	cbnz	w8, 0x49b44
0000000000049b50	cmp	w26, #0x1
0000000000049b54	b.ne	0x49b70
0000000000049b58	adr	x8, #0x38ceb
0000000000049b5c	nop
0000000000049b60	ldarb	w8, [x8]
0000000000049b64	tbz	w8, #0x0, 0x49b70
0000000000049b68	mov	x0, x19
0000000000049b6c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000049b70	add	x22, sp, #0x20
0000000000049b74	str	xzr, [sp, #0x38]
0000000000049b78	mov	x0, x21
0000000000049b7c	blr	x27
0000000000049b80	ldr	x8, [x0]
0000000000049b84	ldr	x9, [x8, #0x110]
0000000000049b88	mov	x10, #0x400000000
0000000000049b8c	stp	x9, x10, [sp, #0x28]
0000000000049b90	mov	x28, sp
0000000000049b94	stp	x10, xzr, [sp, #0x10]
0000000000049b98	str	x28, [x8, #0x110]
0000000000049b9c	str	x22, [sp, #0x8]
0000000000049ba0	adrp	x21, 29 ; 0x66000
0000000000049ba4	ldr	x0, [x21, #0x720] ; Objc class ref: _OBJC_CLASS_$_NSNull
0000000000049ba8	nop
0000000000049bac	ldr	x25, #0x1ca14 ; Objc selector ref: null
0000000000049bb0	mov	x1, x25
0000000000049bb4	bl	0x4dcb8 ; Objc message: +[NSNull null]
0000000000049bb8	cmp	x20, x0
0000000000049bbc	b.eq	0x49be0
0000000000049bc0	cbz	x20, 0x49be0
0000000000049bc4	add	x2, x22, #0x18
0000000000049bc8	nop
0000000000049bcc	ldr	x1, #0x38ecc
0000000000049bd0	mov	x0, x20
0000000000049bd4	bl	0x4dcb8 ; Objc message: -[x0 null]
0000000000049bd8	mov	x22, x0
0000000000049bdc	b	0x49be8
0000000000049be0	mov	x22, #0x0
0000000000049be4	str	xzr, [sp, #0x38]
0000000000049be8	ldr	x0, [x21, #0x720]
0000000000049bec	mov	x1, x25
0000000000049bf0	bl	0x4dcb8 ; Objc message: -[x0 null]
0000000000049bf4	cmp	x0, x24
0000000000049bf8	b.eq	0x49c1c
0000000000049bfc	cbz	x24, 0x49c1c
0000000000049c00	add	x2, x28, #0x18
0000000000049c04	nop
0000000000049c08	ldr	x1, #0x38e90
0000000000049c0c	mov	x0, x24
0000000000049c10	bl	0x4dcb8 ; Objc message: -[x0 null]
0000000000049c14	mov	x24, x0
0000000000049c18	b	0x49c24
0000000000049c1c	mov	x24, #0x0
0000000000049c20	str	xzr, [sp, #0x18]
0000000000049c24	nop
0000000000049c28	ldrsw	x21, _OBJC_IVAR_$_FRKMutableDictionary.mapHolder
0000000000049c2c	bl	_Kotlin_initRuntimeIfNeeded
0000000000049c30	ldr	x23, [x23, x21]
0000000000049c34	movi.16b	v0, #0x0
0000000000049c38	stp	q0, q0, [sp, #0x40]
0000000000049c3c	add	x8, sp, #0x40
0000000000049c40	add	x25, x8, #0x18
0000000000049c44	adrp	x21, 31 ; 0x68000
0000000000049c48	add	x21, x21, #0xa00
0000000000049c4c	mov	x0, x21
0000000000049c50	blr	x27
0000000000049c54	ldr	x9, [x0]
0000000000049c58	ldr	x10, [x9, #0x110]
0000000000049c5c	str	x8, [x9, #0x110]
0000000000049c60	mov	x8, #0x400000000
0000000000049c64	stp	x10, x8, [sp, #0x48]
0000000000049c68	adr	x28, #0x38bdb
0000000000049c6c	nop
0000000000049c70	ldarb	w8, [x28]
0000000000049c74	tbz	w8, #0x0, 0x49c7c
0000000000049c78	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000049c7c	ldr	x8, [x23]
0000000000049c80	and	x8, x8, #0xfffffffffffffffc
0000000000049c84	ldr	x8, [x8]
0000000000049c88	ldr	w9, [x8, #0x3c]
0000000000049c8c	ldr	x8, [x8, #0x40]
0000000000049c90	tbnz	w9, #0x1f, 0x49ca0
0000000000049c94	mov	w10, #0xb0
0000000000049c98	and	x9, x9, x10
0000000000049c9c	b	0x49d24
0000000000049ca0	neg	w10, w9
0000000000049ca4	mvn	w9, w9
0000000000049ca8	cmp	w10, #0x9
0000000000049cac	b.ge	0x49ce4
0000000000049cb0	cmp	w10, #0x2
0000000000049cb4	b.lt	0x49d18
0000000000049cb8	mov	x10, #0x0
0000000000049cbc	mov	x11, x8
0000000000049cc0	ldr	w12, [x11]
0000000000049cc4	cmp	w12, #0xaf
0000000000049cc8	b.gt	0x49d20
0000000000049ccc	add	x10, x10, #0x1
0000000000049cd0	add	x11, x11, #0x10
0000000000049cd4	cmp	x9, x10
0000000000049cd8	b.ne	0x49cc0
0000000000049cdc	mov	x10, x9
0000000000049ce0	b	0x49d20
0000000000049ce4	mov	w10, #0x0
0000000000049ce8	add	w11, w9, w10
0000000000049cec	cmp	w11, #0x0
0000000000049cf0	cinc	w11, w11, lt
0000000000049cf4	asr	w11, w11, #1
0000000000049cf8	sbfiz	x12, x11, #4, #32
0000000000049cfc	ldr	w12, [x8, x12]
0000000000049d00	cmp	w12, #0xb0
0000000000049d04	csinc	w10, w10, w11, ge
0000000000049d08	csel	w9, w9, w11, lt
0000000000049d0c	cmp	w10, w9
0000000000049d10	b.lt	0x49ce8
0000000000049d14	b	0x49d20
0000000000049d18	mov	w10, #0x0
0000000000049d1c	b	0x49d20
0000000000049d20	sxtw	x9, w10
0000000000049d24	add	x8, x8, x9, lsl #4
0000000000049d28	ldr	x8, [x8, #0x8]
0000000000049d2c	ldr	x8, [x8, #0x20]
0000000000049d30	mov	x0, x23
0000000000049d34	mov	x1, x22
0000000000049d38	mov	x2, x24
0000000000049d3c	mov	x3, x25
0000000000049d40	blr	x8
0000000000049d44	mov	x0, x21
0000000000049d48	blr	x27
0000000000049d4c	ldr	x8, [x0]
0000000000049d50	ldr	x9, [sp, #0x28]
0000000000049d54	str	x9, [x8, #0x110]
0000000000049d58	ldaxr	w8, [x19]
0000000000049d5c	stlxr	w9, w26, [x19]
0000000000049d60	cbnz	w9, 0x49d58
0000000000049d64	cbnz	w26, 0x49d80
0000000000049d68	cmp	w8, #0x1
0000000000049d6c	b.ne	0x49d80
0000000000049d70	ldarb	w8, [x28]
0000000000049d74	tbz	w8, #0x0, 0x49d80
0000000000049d78	mov	x0, x19
0000000000049d7c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000049d80	mov	x0, x20
0000000000049d84	bl	0x4dcdc ; symbol stub for: _objc_release
0000000000049d88	ldp	x29, x30, [sp, #0xb0]
0000000000049d8c	ldp	x20, x19, [sp, #0xa0]
0000000000049d90	ldp	x22, x21, [sp, #0x90]
0000000000049d94	ldp	x24, x23, [sp, #0x80]
0000000000049d98	ldp	x26, x25, [sp, #0x70]
0000000000049d9c	ldp	x28, x27, [sp, #0x60]
0000000000049da0	add	sp, sp, #0xc0
0000000000049da4	ret
0000000000049da8	mov	x20, x0
0000000000049dac	mov	x0, x21
0000000000049db0	blr	x27
0000000000049db4	ldr	x8, [x0]
0000000000049db8	ldr	x9, [sp, #0x48]
0000000000049dbc	str	x9, [x8, #0x110]
0000000000049dc0	b	0x49dcc
0000000000049dc4	b	0x49dc8
0000000000049dc8	mov	x20, x0
0000000000049dcc	adrp	x0, 31 ; 0x68000
0000000000049dd0	add	x0, x0, #0xa00
0000000000049dd4	blr	x27
0000000000049dd8	ldr	x8, [x0]
0000000000049ddc	ldr	x9, [sp, #0x28]
0000000000049de0	str	x9, [x8, #0x110]
0000000000049de4	ldaxr	w8, [x19]
0000000000049de8	stlxr	w9, w26, [x19]
0000000000049dec	cbnz	w9, 0x49de4
0000000000049df0	cbnz	w26, 0x49e14
0000000000049df4	cmp	w8, #0x1
0000000000049df8	b.ne	0x49e14
0000000000049dfc	adr	x8, #0x38a47
0000000000049e00	nop
0000000000049e04	ldarb	w8, [x8]
0000000000049e08	tbz	w8, #0x0, 0x49e14
0000000000049e0c	mov	x0, x19
0000000000049e10	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000049e14	mov	x0, x20
0000000000049e18	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
-[KotlinMutableDictionary removeObjectForKey:]:
0000000000049e1c	sub	sp, sp, #0x90
0000000000049e20	stp	x26, x25, [sp, #0x40]
0000000000049e24	stp	x24, x23, [sp, #0x50]
0000000000049e28	stp	x22, x21, [sp, #0x60]
0000000000049e2c	stp	x20, x19, [sp, #0x70]
0000000000049e30	stp	x29, x30, [sp, #0x80]
0000000000049e34	add	x29, sp, #0x80
0000000000049e38	mov	x21, x2
0000000000049e3c	mov	x22, x0
0000000000049e40	bl	_Kotlin_initRuntimeIfNeeded
0000000000049e44	adrp	x20, 31 ; 0x68000
0000000000049e48	add	x20, x20, #0xa00
0000000000049e4c	ldr	x25, [x20]
0000000000049e50	mov	x0, x20
0000000000049e54	blr	x25
0000000000049e58	ldr	x8, [x0]
0000000000049e5c	add	x19, x8, #0x138
0000000000049e60	ldaxr	w24, [x19]
0000000000049e64	stlxr	w8, wzr, [x19]
0000000000049e68	cbnz	w8, 0x49e60
0000000000049e6c	cmp	w24, #0x1
0000000000049e70	b.ne	0x49e8c
0000000000049e74	adr	x8, #0x389cf
0000000000049e78	nop
0000000000049e7c	ldarb	w8, [x8]
0000000000049e80	tbz	w8, #0x0, 0x49e8c
0000000000049e84	mov	x0, x19
0000000000049e88	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000049e8c	mov	x23, sp
0000000000049e90	str	xzr, [sp, #0x18]
0000000000049e94	mov	x0, x20
0000000000049e98	blr	x25
0000000000049e9c	ldr	x8, [x0]
0000000000049ea0	ldr	x9, [x8, #0x110]
0000000000049ea4	str	x23, [x8, #0x110]
0000000000049ea8	mov	x8, #0x400000000
0000000000049eac	stp	x9, x8, [sp, #0x8]
0000000000049eb0	nop
0000000000049eb4	ldr	x0, #0x1c86c ; Objc class ref: _OBJC_CLASS_$_NSNull
0000000000049eb8	nop
0000000000049ebc	ldr	x1, #0x1c704 ; Objc selector ref: null
0000000000049ec0	bl	0x4dcb8 ; Objc message: +[NSNull null]
0000000000049ec4	cmp	x0, x21
0000000000049ec8	ccmp	x21, #0x0, #0x4, ne
0000000000049ecc	b.ne	0x49edc
0000000000049ed0	mov	x21, #0x0
0000000000049ed4	str	xzr, [sp, #0x18]
0000000000049ed8	b	0x49ef4
0000000000049edc	add	x2, x23, #0x18
0000000000049ee0	nop
0000000000049ee4	ldr	x1, #0x38bb4
0000000000049ee8	mov	x0, x21
0000000000049eec	bl	0x4dcb8 ; Objc message: -[x0 null]
0000000000049ef0	mov	x21, x0
0000000000049ef4	nop
0000000000049ef8	ldrsw	x23, _OBJC_IVAR_$_FRKMutableDictionary.mapHolder
0000000000049efc	bl	_Kotlin_initRuntimeIfNeeded
0000000000049f00	ldr	x22, [x22, x23]
0000000000049f04	movi.16b	v0, #0x0
0000000000049f08	stp	q0, q0, [sp, #0x20]
0000000000049f0c	add	x8, sp, #0x20
0000000000049f10	add	x23, x8, #0x18
0000000000049f14	mov	x0, x20
0000000000049f18	blr	x25
0000000000049f1c	ldr	x9, [x0]
0000000000049f20	ldr	x10, [x9, #0x110]
0000000000049f24	str	x8, [x9, #0x110]
0000000000049f28	mov	x8, #0x400000000
0000000000049f2c	stp	x10, x8, [sp, #0x28]
0000000000049f30	adr	x26, #0x38913
0000000000049f34	nop
0000000000049f38	ldarb	w8, [x26]
0000000000049f3c	tbz	w8, #0x0, 0x49f44
0000000000049f40	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000049f44	ldr	x8, [x22]
0000000000049f48	and	x8, x8, #0xfffffffffffffffc
0000000000049f4c	ldr	x8, [x8]
0000000000049f50	ldr	w9, [x8, #0x3c]
0000000000049f54	ldr	x8, [x8, #0x40]
0000000000049f58	tbnz	w9, #0x1f, 0x49f68
0000000000049f5c	mov	w10, #0xb0
0000000000049f60	and	x9, x9, x10
0000000000049f64	b	0x49fec
0000000000049f68	neg	w10, w9
0000000000049f6c	mvn	w9, w9
0000000000049f70	cmp	w10, #0x9
0000000000049f74	b.ge	0x49fac
0000000000049f78	cmp	w10, #0x2
0000000000049f7c	b.lt	0x49fe0
0000000000049f80	mov	x10, #0x0
0000000000049f84	mov	x11, x8
0000000000049f88	ldr	w12, [x11]
0000000000049f8c	cmp	w12, #0xaf
0000000000049f90	b.gt	0x49fe8
0000000000049f94	add	x10, x10, #0x1
0000000000049f98	add	x11, x11, #0x10
0000000000049f9c	cmp	x9, x10
0000000000049fa0	b.ne	0x49f88
0000000000049fa4	mov	x10, x9
0000000000049fa8	b	0x49fe8
0000000000049fac	mov	w10, #0x0
0000000000049fb0	add	w11, w9, w10
0000000000049fb4	cmp	w11, #0x0
0000000000049fb8	cinc	w11, w11, lt
0000000000049fbc	asr	w11, w11, #1
0000000000049fc0	sbfiz	x12, x11, #4, #32
0000000000049fc4	ldr	w12, [x8, x12]
0000000000049fc8	cmp	w12, #0xb0
0000000000049fcc	csinc	w10, w10, w11, ge
0000000000049fd0	csel	w9, w9, w11, lt
0000000000049fd4	cmp	w10, w9
0000000000049fd8	b.lt	0x49fb0
0000000000049fdc	b	0x49fe8
0000000000049fe0	mov	w10, #0x0
0000000000049fe4	b	0x49fe8
0000000000049fe8	sxtw	x9, w10
0000000000049fec	add	x8, x8, x9, lsl #4
0000000000049ff0	ldr	x8, [x8, #0x8]
0000000000049ff4	ldr	x8, [x8, #0x30]
0000000000049ff8	mov	x0, x22
0000000000049ffc	mov	x1, x21
000000000004a000	mov	x2, x23
000000000004a004	blr	x8
000000000004a008	mov	x0, x20
000000000004a00c	blr	x25
000000000004a010	ldr	x8, [x0]
000000000004a014	ldr	x9, [sp, #0x8]
000000000004a018	str	x9, [x8, #0x110]
000000000004a01c	ldaxr	w8, [x19]
000000000004a020	stlxr	w9, w24, [x19]
000000000004a024	cbnz	w9, 0x4a01c
000000000004a028	cbnz	w24, 0x4a044
000000000004a02c	cmp	w8, #0x1
000000000004a030	b.ne	0x4a044
000000000004a034	ldarb	w8, [x26]
000000000004a038	tbz	w8, #0x0, 0x4a044
000000000004a03c	mov	x0, x19
000000000004a040	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004a044	ldp	x29, x30, [sp, #0x80]
000000000004a048	ldp	x20, x19, [sp, #0x70]
000000000004a04c	ldp	x22, x21, [sp, #0x60]
000000000004a050	ldp	x24, x23, [sp, #0x50]
000000000004a054	ldp	x26, x25, [sp, #0x40]
000000000004a058	add	sp, sp, #0x90
000000000004a05c	ret
000000000004a060	mov	x21, x0
000000000004a064	mov	x0, x20
000000000004a068	blr	x25
000000000004a06c	ldr	x8, [x0]
000000000004a070	ldr	x9, [sp, #0x28]
000000000004a074	str	x9, [x8, #0x110]
000000000004a078	b	0x4a08c
000000000004a07c	mov	x21, x0
000000000004a080	mov	x0, x20
000000000004a084	blr	x25
000000000004a088	ldr	x8, [x0]
000000000004a08c	ldr	x9, [sp, #0x8]
000000000004a090	str	x9, [x8, #0x110]
000000000004a094	ldaxr	w8, [x19]
000000000004a098	stlxr	w9, w24, [x19]
000000000004a09c	cbnz	w9, 0x4a094
000000000004a0a0	cbnz	w24, 0x4a0c4
000000000004a0a4	cmp	w8, #0x1
000000000004a0a8	b.ne	0x4a0c4
000000000004a0ac	adr	x8, #0x38797
000000000004a0b0	nop
000000000004a0b4	ldarb	w8, [x8]
000000000004a0b8	tbz	w8, #0x0, 0x4a0c4
000000000004a0bc	mov	x0, x19
000000000004a0c0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004a0c4	mov	x0, x21
000000000004a0c8	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
-[KotlinUShort getValue:]:
000000000004a0cc	nop
000000000004a0d0	ldrsw	x8, _OBJC_IVAR_$_FRKUShort.value_
000000000004a0d4	ldrh	w8, [x0, x8]
000000000004a0d8	strh	w8, [x2]
000000000004a0dc	ret
-[KotlinUShort initWithUnsignedShort:]:
000000000004a0e0	sub	sp, sp, #0x30
000000000004a0e4	stp	x20, x19, [sp, #0x10]
000000000004a0e8	stp	x29, x30, [sp, #0x20]
000000000004a0ec	add	x29, sp, #0x20
000000000004a0f0	mov	x19, x2
000000000004a0f4	nop
000000000004a0f8	ldr	x8, #0x1c728 ; Objc class ref: FRKUShort
000000000004a0fc	stp	x0, x8, [sp]
000000000004a100	nop
000000000004a104	ldr	x1, #0x1c3c4 ; Objc selector ref: init
000000000004a108	mov	x0, sp
000000000004a10c	bl	0x4dcc4 ; Objc message: -[[x0 super] init]
000000000004a110	nop
000000000004a114	ldrsw	x8, _OBJC_IVAR_$_FRKUShort.value_
000000000004a118	strh	w19, [x0, x8]
000000000004a11c	ldp	x29, x30, [sp, #0x20]
000000000004a120	ldp	x20, x19, [sp, #0x10]
000000000004a124	add	sp, sp, #0x30
000000000004a128	ret
-[KotlinUShort initWithInteger:]:
000000000004a12c	sub	sp, sp, #0x30
000000000004a130	stp	x20, x19, [sp, #0x10]
000000000004a134	stp	x29, x30, [sp, #0x20]
000000000004a138	add	x29, sp, #0x20
000000000004a13c	mov	x19, x2
000000000004a140	nop
000000000004a144	ldr	x8, #0x1c6dc ; Objc class ref: FRKUShort
000000000004a148	stp	x0, x8, [sp]
000000000004a14c	nop
000000000004a150	ldr	x1, #0x1c378 ; Objc selector ref: init
000000000004a154	mov	x0, sp
000000000004a158	bl	0x4dcc4 ; Objc message: -[[x0 super] init]
000000000004a15c	nop
000000000004a160	ldrsw	x8, _OBJC_IVAR_$_FRKUShort.value_
000000000004a164	strh	w19, [x0, x8]
000000000004a168	ldp	x29, x30, [sp, #0x20]
000000000004a16c	ldp	x20, x19, [sp, #0x10]
000000000004a170	add	sp, sp, #0x30
000000000004a174	ret
-[KotlinUShort unsignedShortValue]:
000000000004a178	nop
000000000004a17c	ldrsw	x8, _OBJC_IVAR_$_FRKUShort.value_
000000000004a180	ldrh	w0, [x0, x8]
000000000004a184	ret
-[KotlinUShort objCType]:
000000000004a188	adr	x0, #0x8b1b ; literal pool for: "S"
000000000004a18c	nop
000000000004a190	ret
-[KotlinUShort toKotlin:]:
000000000004a194	mov	x1, x2
000000000004a198	nop
000000000004a19c	ldrsw	x8, _OBJC_IVAR_$_FRKUShort.value_
000000000004a1a0	ldrh	w0, [x0, x8]
000000000004a1a4	b	_Kotlin_boxUShort
-[KotlinULong getValue:]:
000000000004a1a8	nop
000000000004a1ac	ldrsw	x8, _OBJC_IVAR_$_FRKULong.value_
000000000004a1b0	ldr	x8, [x0, x8]
000000000004a1b4	str	x8, [x2]
000000000004a1b8	ret
-[KotlinULong initWithUnsignedLongLong:]:
000000000004a1bc	sub	sp, sp, #0x30
000000000004a1c0	stp	x20, x19, [sp, #0x10]
000000000004a1c4	stp	x29, x30, [sp, #0x20]
000000000004a1c8	add	x29, sp, #0x20
000000000004a1cc	mov	x19, x2
000000000004a1d0	nop
000000000004a1d4	ldr	x8, #0x1c65c ; Objc class ref: FRKULong
000000000004a1d8	stp	x0, x8, [sp]
000000000004a1dc	nop
000000000004a1e0	ldr	x1, #0x1c2e8 ; Objc selector ref: init
000000000004a1e4	mov	x0, sp
000000000004a1e8	bl	0x4dcc4 ; Objc message: -[[x0 super] init]
000000000004a1ec	nop
000000000004a1f0	ldrsw	x8, _OBJC_IVAR_$_FRKULong.value_
000000000004a1f4	str	x19, [x0, x8]
000000000004a1f8	ldp	x29, x30, [sp, #0x20]
000000000004a1fc	ldp	x20, x19, [sp, #0x10]
000000000004a200	add	sp, sp, #0x30
000000000004a204	ret
-[KotlinULong initWithInteger:]:
000000000004a208	sub	sp, sp, #0x30
000000000004a20c	stp	x20, x19, [sp, #0x10]
000000000004a210	stp	x29, x30, [sp, #0x20]
000000000004a214	add	x29, sp, #0x20
000000000004a218	mov	x19, x2
000000000004a21c	nop
000000000004a220	ldr	x8, #0x1c610 ; Objc class ref: FRKULong
000000000004a224	stp	x0, x8, [sp]
000000000004a228	nop
000000000004a22c	ldr	x1, #0x1c29c ; Objc selector ref: init
000000000004a230	mov	x0, sp
000000000004a234	bl	0x4dcc4 ; Objc message: -[[x0 super] init]
000000000004a238	nop
000000000004a23c	ldrsw	x8, _OBJC_IVAR_$_FRKULong.value_
000000000004a240	str	x19, [x0, x8]
000000000004a244	ldp	x29, x30, [sp, #0x20]
000000000004a248	ldp	x20, x19, [sp, #0x10]
000000000004a24c	add	sp, sp, #0x30
000000000004a250	ret
-[KotlinULong unsignedLongLongValue]:
000000000004a254	nop
000000000004a258	ldrsw	x8, _OBJC_IVAR_$_FRKULong.value_
000000000004a25c	ldr	x0, [x0, x8]
000000000004a260	ret
-[KotlinULong objCType]:
000000000004a264	adr	x0, #0x8a41 ; literal pool for: "Q"
000000000004a268	nop
000000000004a26c	ret
-[KotlinULong toKotlin:]:
000000000004a270	mov	x1, x2
000000000004a274	nop
000000000004a278	ldrsw	x8, _OBJC_IVAR_$_FRKULong.value_
000000000004a27c	ldr	x0, [x0, x8]
000000000004a280	b	_Kotlin_boxULong
-[KotlinUInt getValue:]:
000000000004a284	nop
000000000004a288	ldrsw	x8, _OBJC_IVAR_$_FRKUInt.value_
000000000004a28c	ldr	w8, [x0, x8]
000000000004a290	str	w8, [x2]
000000000004a294	ret
-[KotlinUInt initWithUnsignedInt:]:
000000000004a298	sub	sp, sp, #0x30
000000000004a29c	stp	x20, x19, [sp, #0x10]
000000000004a2a0	stp	x29, x30, [sp, #0x20]
000000000004a2a4	add	x29, sp, #0x20
000000000004a2a8	mov	x19, x2
000000000004a2ac	nop
000000000004a2b0	ldr	x8, #0x1c578 ; Objc class ref: FRKUInt
000000000004a2b4	stp	x0, x8, [sp]
000000000004a2b8	nop
000000000004a2bc	ldr	x1, #0x1c20c ; Objc selector ref: init
000000000004a2c0	mov	x0, sp
000000000004a2c4	bl	0x4dcc4 ; Objc message: -[[x0 super] init]
000000000004a2c8	nop
000000000004a2cc	ldrsw	x8, _OBJC_IVAR_$_FRKUInt.value_
000000000004a2d0	str	w19, [x0, x8]
000000000004a2d4	ldp	x29, x30, [sp, #0x20]
000000000004a2d8	ldp	x20, x19, [sp, #0x10]
000000000004a2dc	add	sp, sp, #0x30
000000000004a2e0	ret
-[KotlinUInt initWithInteger:]:
000000000004a2e4	sub	sp, sp, #0x30
000000000004a2e8	stp	x20, x19, [sp, #0x10]
000000000004a2ec	stp	x29, x30, [sp, #0x20]
000000000004a2f0	add	x29, sp, #0x20
000000000004a2f4	mov	x19, x2
000000000004a2f8	nop
000000000004a2fc	ldr	x8, #0x1c52c ; Objc class ref: FRKUInt
000000000004a300	stp	x0, x8, [sp]
000000000004a304	nop
000000000004a308	ldr	x1, #0x1c1c0 ; Objc selector ref: init
000000000004a30c	mov	x0, sp
000000000004a310	bl	0x4dcc4 ; Objc message: -[[x0 super] init]
000000000004a314	nop
000000000004a318	ldrsw	x8, _OBJC_IVAR_$_FRKUInt.value_
000000000004a31c	str	w19, [x0, x8]
000000000004a320	ldp	x29, x30, [sp, #0x20]
000000000004a324	ldp	x20, x19, [sp, #0x10]
000000000004a328	add	sp, sp, #0x30
000000000004a32c	ret
-[KotlinUInt unsignedIntValue]:
000000000004a330	nop
000000000004a334	ldrsw	x8, _OBJC_IVAR_$_FRKUInt.value_
000000000004a338	ldr	w0, [x0, x8]
000000000004a33c	ret
-[KotlinUInt objCType]:
000000000004a340	adr	x0, #0x8967 ; literal pool for: "I"
000000000004a344	nop
000000000004a348	ret
-[KotlinUInt toKotlin:]:
000000000004a34c	mov	x1, x2
000000000004a350	nop
000000000004a354	ldrsw	x8, _OBJC_IVAR_$_FRKUInt.value_
000000000004a358	ldr	w0, [x0, x8]
000000000004a35c	b	_Kotlin_boxUInt
-[KotlinUByte getValue:]:
000000000004a360	nop
000000000004a364	ldrsw	x8, _OBJC_IVAR_$_FRKUByte.value_
000000000004a368	ldrb	w8, [x0, x8]
000000000004a36c	strb	w8, [x2]
000000000004a370	ret
-[KotlinUByte initWithUnsignedChar:]:
000000000004a374	sub	sp, sp, #0x30
000000000004a378	stp	x20, x19, [sp, #0x10]
000000000004a37c	stp	x29, x30, [sp, #0x20]
000000000004a380	add	x29, sp, #0x20
000000000004a384	mov	x19, x2
000000000004a388	nop
000000000004a38c	ldr	x8, #0x1c48c ; Objc class ref: FRKUByte
000000000004a390	stp	x0, x8, [sp]
000000000004a394	nop
000000000004a398	ldr	x1, #0x1c130 ; Objc selector ref: init
000000000004a39c	mov	x0, sp
000000000004a3a0	bl	0x4dcc4 ; Objc message: -[[x0 super] init]
000000000004a3a4	nop
000000000004a3a8	ldrsw	x8, _OBJC_IVAR_$_FRKUByte.value_
000000000004a3ac	strb	w19, [x0, x8]
000000000004a3b0	ldp	x29, x30, [sp, #0x20]
000000000004a3b4	ldp	x20, x19, [sp, #0x10]
000000000004a3b8	add	sp, sp, #0x30
000000000004a3bc	ret
-[KotlinUByte initWithInteger:]:
000000000004a3c0	sub	sp, sp, #0x30
000000000004a3c4	stp	x20, x19, [sp, #0x10]
000000000004a3c8	stp	x29, x30, [sp, #0x20]
000000000004a3cc	add	x29, sp, #0x20
000000000004a3d0	mov	x19, x2
000000000004a3d4	nop
000000000004a3d8	ldr	x8, #0x1c440 ; Objc class ref: FRKUByte
000000000004a3dc	stp	x0, x8, [sp]
000000000004a3e0	nop
000000000004a3e4	ldr	x1, #0x1c0e4 ; Objc selector ref: init
000000000004a3e8	mov	x0, sp
000000000004a3ec	bl	0x4dcc4 ; Objc message: -[[x0 super] init]
000000000004a3f0	nop
000000000004a3f4	ldrsw	x8, _OBJC_IVAR_$_FRKUByte.value_
000000000004a3f8	strb	w19, [x0, x8]
000000000004a3fc	ldp	x29, x30, [sp, #0x20]
000000000004a400	ldp	x20, x19, [sp, #0x10]
000000000004a404	add	sp, sp, #0x30
000000000004a408	ret
-[KotlinUByte unsignedCharValue]:
000000000004a40c	nop
000000000004a410	ldrsw	x8, _OBJC_IVAR_$_FRKUByte.value_
000000000004a414	ldrb	w0, [x0, x8]
000000000004a418	ret
-[KotlinUByte objCType]:
000000000004a41c	adr	x0, #0x888d ; literal pool for: "C"
000000000004a420	nop
000000000004a424	ret
-[KotlinUByte toKotlin:]:
000000000004a428	mov	x1, x2
000000000004a42c	nop
000000000004a430	ldrsw	x8, _OBJC_IVAR_$_FRKUByte.value_
000000000004a434	ldrb	w0, [x0, x8]
000000000004a438	b	_Kotlin_boxUByte
-[KotlinShort getValue:]:
000000000004a43c	nop
000000000004a440	ldrsw	x8, _OBJC_IVAR_$_FRKShort.value_
000000000004a444	ldrh	w8, [x0, x8]
000000000004a448	strh	w8, [x2]
000000000004a44c	ret
-[KotlinShort initWithShort:]:
000000000004a450	sub	sp, sp, #0x30
000000000004a454	stp	x20, x19, [sp, #0x10]
000000000004a458	stp	x29, x30, [sp, #0x20]
000000000004a45c	add	x29, sp, #0x20
000000000004a460	mov	x19, x2
000000000004a464	nop
000000000004a468	ldr	x8, #0x1c398 ; Objc class ref: FRKShort
000000000004a46c	stp	x0, x8, [sp]
000000000004a470	nop
000000000004a474	ldr	x1, #0x1c054 ; Objc selector ref: init
000000000004a478	mov	x0, sp
000000000004a47c	bl	0x4dcc4 ; Objc message: -[[x0 super] init]
000000000004a480	nop
000000000004a484	ldrsw	x8, _OBJC_IVAR_$_FRKShort.value_
000000000004a488	strh	w19, [x0, x8]
000000000004a48c	ldp	x29, x30, [sp, #0x20]
000000000004a490	ldp	x20, x19, [sp, #0x10]
000000000004a494	add	sp, sp, #0x30
000000000004a498	ret
-[KotlinShort initWithInteger:]:
000000000004a49c	sub	sp, sp, #0x30
000000000004a4a0	stp	x20, x19, [sp, #0x10]
000000000004a4a4	stp	x29, x30, [sp, #0x20]
000000000004a4a8	add	x29, sp, #0x20
000000000004a4ac	mov	x19, x2
000000000004a4b0	nop
000000000004a4b4	ldr	x8, #0x1c34c ; Objc class ref: FRKShort
000000000004a4b8	stp	x0, x8, [sp]
000000000004a4bc	nop
000000000004a4c0	ldr	x1, #0x1c008 ; Objc selector ref: init
000000000004a4c4	mov	x0, sp
000000000004a4c8	bl	0x4dcc4 ; Objc message: -[[x0 super] init]
000000000004a4cc	nop
000000000004a4d0	ldrsw	x8, _OBJC_IVAR_$_FRKShort.value_
000000000004a4d4	strh	w19, [x0, x8]
000000000004a4d8	ldp	x29, x30, [sp, #0x20]
000000000004a4dc	ldp	x20, x19, [sp, #0x10]
000000000004a4e0	add	sp, sp, #0x30
000000000004a4e4	ret
-[KotlinShort shortValue]:
000000000004a4e8	nop
000000000004a4ec	ldrsw	x8, _OBJC_IVAR_$_FRKShort.value_
000000000004a4f0	ldrsh	w0, [x0, x8]
000000000004a4f4	ret
-[KotlinShort objCType]:
000000000004a4f8	adr	x0, #0x87b3 ; literal pool for: "s"
000000000004a4fc	nop
000000000004a500	ret
-[KotlinShort toKotlin:]:
000000000004a504	mov	x1, x2
000000000004a508	nop
000000000004a50c	ldrsw	x8, _OBJC_IVAR_$_FRKShort.value_
000000000004a510	ldrsh	w0, [x0, x8]
000000000004a514	b	_Kotlin_boxShort
-[KotlinNumber initWithBool:]:
000000000004a518	stp	x29, x30, [sp, #-0x10]!
000000000004a51c	mov	x29, sp
000000000004a520	bl	__ZL29incorrectNumberInitializationP12KotlinNumberP13objc_selector
-[KotlinNumber initWithChar:]:
000000000004a524	stp	x29, x30, [sp, #-0x10]!
000000000004a528	mov	x29, sp
000000000004a52c	bl	__ZL29incorrectNumberInitializationP12KotlinNumberP13objc_selector
-[KotlinNumber initWithShort:]:
000000000004a530	stp	x29, x30, [sp, #-0x10]!
000000000004a534	mov	x29, sp
000000000004a538	bl	__ZL29incorrectNumberInitializationP12KotlinNumberP13objc_selector
-[KotlinNumber initWithInt:]:
000000000004a53c	stp	x29, x30, [sp, #-0x10]!
000000000004a540	mov	x29, sp
000000000004a544	bl	__ZL29incorrectNumberInitializationP12KotlinNumberP13objc_selector
-[KotlinNumber initWithInteger:]:
000000000004a548	stp	x29, x30, [sp, #-0x10]!
000000000004a54c	mov	x29, sp
000000000004a550	bl	__ZL29incorrectNumberInitializationP12KotlinNumberP13objc_selector
-[KotlinNumber initWithLong:]:
000000000004a554	stp	x29, x30, [sp, #-0x10]!
000000000004a558	mov	x29, sp
000000000004a55c	bl	__ZL29incorrectNumberInitializationP12KotlinNumberP13objc_selector
-[KotlinNumber initWithLongLong:]:
000000000004a560	stp	x29, x30, [sp, #-0x10]!
000000000004a564	mov	x29, sp
000000000004a568	bl	__ZL29incorrectNumberInitializationP12KotlinNumberP13objc_selector
-[KotlinNumber initWithUnsignedChar:]:
000000000004a56c	stp	x29, x30, [sp, #-0x10]!
000000000004a570	mov	x29, sp
000000000004a574	bl	__ZL29incorrectNumberInitializationP12KotlinNumberP13objc_selector
-[KotlinNumber initWithUnsignedShort:]:
000000000004a578	stp	x29, x30, [sp, #-0x10]!
000000000004a57c	mov	x29, sp
000000000004a580	bl	__ZL29incorrectNumberInitializationP12KotlinNumberP13objc_selector
-[KotlinNumber initWithUnsignedInt:]:
000000000004a584	stp	x29, x30, [sp, #-0x10]!
000000000004a588	mov	x29, sp
000000000004a58c	bl	__ZL29incorrectNumberInitializationP12KotlinNumberP13objc_selector
-[KotlinNumber initWithUnsignedInteger:]:
000000000004a590	stp	x29, x30, [sp, #-0x10]!
000000000004a594	mov	x29, sp
000000000004a598	bl	__ZL29incorrectNumberInitializationP12KotlinNumberP13objc_selector
-[KotlinNumber initWithUnsignedLong:]:
000000000004a59c	stp	x29, x30, [sp, #-0x10]!
000000000004a5a0	mov	x29, sp
000000000004a5a4	bl	__ZL29incorrectNumberInitializationP12KotlinNumberP13objc_selector
-[KotlinNumber initWithUnsignedLongLong:]:
000000000004a5a8	stp	x29, x30, [sp, #-0x10]!
000000000004a5ac	mov	x29, sp
000000000004a5b0	bl	__ZL29incorrectNumberInitializationP12KotlinNumberP13objc_selector
-[KotlinNumber initWithFloat:]:
000000000004a5b4	stp	x29, x30, [sp, #-0x10]!
000000000004a5b8	mov	x29, sp
000000000004a5bc	bl	__ZL29incorrectNumberInitializationP12KotlinNumberP13objc_selector
-[KotlinNumber initWithDouble:]:
000000000004a5c0	stp	x29, x30, [sp, #-0x10]!
000000000004a5c4	mov	x29, sp
000000000004a5c8	bl	__ZL29incorrectNumberInitializationP12KotlinNumberP13objc_selector
__ZL29incorrectNumberInitializationP12KotlinNumberP13objc_selector:
000000000004a5cc	sub	sp, sp, #0x40
000000000004a5d0	stp	x22, x21, [sp, #0x10]
000000000004a5d4	stp	x20, x19, [sp, #0x20]
000000000004a5d8	stp	x29, x30, [sp, #0x30]
000000000004a5dc	add	x29, sp, #0x30
000000000004a5e0	mov	x19, x1
000000000004a5e4	nop
000000000004a5e8	ldr	x20, #0x1c118 ; Objc class ref: _OBJC_CLASS_$_NSException
000000000004a5ec	nop
000000000004a5f0	ldr	x8, #0x9a18 ; literal pool symbol address: _NSGenericException
000000000004a5f4	ldr	x21, [x8]
000000000004a5f8	nop
000000000004a5fc	ldr	x1, #0x1be34 ; Objc selector ref: class
000000000004a600	bl	0x4dcb8 ; Objc message: +[NSException class]
000000000004a604	bl	0x4d8bc ; symbol stub for: _NSStringFromClass
000000000004a608	mov	x22, x0
000000000004a60c	mov	x0, x19
000000000004a610	bl	0x4de2c ; symbol stub for: _sel_getName
000000000004a614	nop
000000000004a618	ldr	x1, #0x1bfe8 ; Objc selector ref: raise:format:
000000000004a61c	stp	x22, x0, [sp]
000000000004a620	adr	x3, #0x19450 ; Objc cfstring ref: @"bad cfstring ref"
000000000004a624	nop
000000000004a628	mov	x0, x20
000000000004a62c	mov	x2, x21
000000000004a630	bl	0x4dcb8 ; Objc message: -[x0 raise:format:]
000000000004a634	bl	0x4dae4 ; symbol stub for: _abort
-[KotlinLong getValue:]:
000000000004a638	nop
000000000004a63c	ldrsw	x8, _OBJC_IVAR_$_FRKLong.value_
000000000004a640	ldr	x8, [x0, x8]
000000000004a644	str	x8, [x2]
000000000004a648	ret
-[KotlinLong initWithLongLong:]:
000000000004a64c	sub	sp, sp, #0x30
000000000004a650	stp	x20, x19, [sp, #0x10]
000000000004a654	stp	x29, x30, [sp, #0x20]
000000000004a658	add	x29, sp, #0x20
000000000004a65c	mov	x19, x2
000000000004a660	nop
000000000004a664	ldr	x8, #0x1c1ac ; Objc class ref: FRKLong
000000000004a668	stp	x0, x8, [sp]
000000000004a66c	nop
000000000004a670	ldr	x1, #0x1be58 ; Objc selector ref: init
000000000004a674	mov	x0, sp
000000000004a678	bl	0x4dcc4 ; Objc message: -[[x0 super] init]
000000000004a67c	nop
000000000004a680	ldrsw	x8, _OBJC_IVAR_$_FRKLong.value_
000000000004a684	str	x19, [x0, x8]
000000000004a688	ldp	x29, x30, [sp, #0x20]
000000000004a68c	ldp	x20, x19, [sp, #0x10]
000000000004a690	add	sp, sp, #0x30
000000000004a694	ret
-[KotlinLong initWithInteger:]:
000000000004a698	sub	sp, sp, #0x30
000000000004a69c	stp	x20, x19, [sp, #0x10]
000000000004a6a0	stp	x29, x30, [sp, #0x20]
000000000004a6a4	add	x29, sp, #0x20
000000000004a6a8	mov	x19, x2
000000000004a6ac	nop
000000000004a6b0	ldr	x8, #0x1c160 ; Objc class ref: FRKLong
000000000004a6b4	stp	x0, x8, [sp]
000000000004a6b8	nop
000000000004a6bc	ldr	x1, #0x1be0c ; Objc selector ref: init
000000000004a6c0	mov	x0, sp
000000000004a6c4	bl	0x4dcc4 ; Objc message: -[[x0 super] init]
000000000004a6c8	nop
000000000004a6cc	ldrsw	x8, _OBJC_IVAR_$_FRKLong.value_
000000000004a6d0	str	x19, [x0, x8]
000000000004a6d4	ldp	x29, x30, [sp, #0x20]
000000000004a6d8	ldp	x20, x19, [sp, #0x10]
000000000004a6dc	add	sp, sp, #0x30
000000000004a6e0	ret
-[KotlinLong longLongValue]:
000000000004a6e4	nop
000000000004a6e8	ldrsw	x8, _OBJC_IVAR_$_FRKLong.value_
000000000004a6ec	ldr	x0, [x0, x8]
000000000004a6f0	ret
-[KotlinLong objCType]:
000000000004a6f4	adr	x0, #0x85f9 ; literal pool for: "q"
000000000004a6f8	nop
000000000004a6fc	ret
-[KotlinLong toKotlin:]:
000000000004a700	mov	x1, x2
000000000004a704	nop
000000000004a708	ldrsw	x8, _OBJC_IVAR_$_FRKLong.value_
000000000004a70c	ldr	x0, [x0, x8]
000000000004a710	b	_Kotlin_boxLong
-[KotlinInt getValue:]:
000000000004a714	nop
000000000004a718	ldrsw	x8, _OBJC_IVAR_$_FRKInt.value_
000000000004a71c	ldr	w8, [x0, x8]
000000000004a720	str	w8, [x2]
000000000004a724	ret
-[KotlinInt initWithInt:]:
000000000004a728	sub	sp, sp, #0x30
000000000004a72c	stp	x20, x19, [sp, #0x10]
000000000004a730	stp	x29, x30, [sp, #0x20]
000000000004a734	add	x29, sp, #0x20
000000000004a738	mov	x19, x2
000000000004a73c	nop
000000000004a740	ldr	x8, #0x1c0c8 ; Objc class ref: FRKInt
000000000004a744	stp	x0, x8, [sp]
000000000004a748	nop
000000000004a74c	ldr	x1, #0x1bd7c ; Objc selector ref: init
000000000004a750	mov	x0, sp
000000000004a754	bl	0x4dcc4 ; Objc message: -[[x0 super] init]
000000000004a758	nop
000000000004a75c	ldrsw	x8, _OBJC_IVAR_$_FRKInt.value_
000000000004a760	str	w19, [x0, x8]
000000000004a764	ldp	x29, x30, [sp, #0x20]
000000000004a768	ldp	x20, x19, [sp, #0x10]
000000000004a76c	add	sp, sp, #0x30
000000000004a770	ret
-[KotlinInt initWithInteger:]:
000000000004a774	sub	sp, sp, #0x30
000000000004a778	stp	x20, x19, [sp, #0x10]
000000000004a77c	stp	x29, x30, [sp, #0x20]
000000000004a780	add	x29, sp, #0x20
000000000004a784	mov	x19, x2
000000000004a788	nop
000000000004a78c	ldr	x8, #0x1c07c ; Objc class ref: FRKInt
000000000004a790	stp	x0, x8, [sp]
000000000004a794	nop
000000000004a798	ldr	x1, #0x1bd30 ; Objc selector ref: init
000000000004a79c	mov	x0, sp
000000000004a7a0	bl	0x4dcc4 ; Objc message: -[[x0 super] init]
000000000004a7a4	nop
000000000004a7a8	ldrsw	x8, _OBJC_IVAR_$_FRKInt.value_
000000000004a7ac	str	w19, [x0, x8]
000000000004a7b0	ldp	x29, x30, [sp, #0x20]
000000000004a7b4	ldp	x20, x19, [sp, #0x10]
000000000004a7b8	add	sp, sp, #0x30
000000000004a7bc	ret
-[KotlinInt intValue]:
000000000004a7c0	nop
000000000004a7c4	ldrsw	x8, _OBJC_IVAR_$_FRKInt.value_
000000000004a7c8	ldr	w0, [x0, x8]
000000000004a7cc	ret
-[KotlinInt objCType]:
000000000004a7d0	adr	x0, #0x851f ; literal pool for: "i"
000000000004a7d4	nop
000000000004a7d8	ret
-[KotlinInt toKotlin:]:
000000000004a7dc	sub	sp, sp, #0x50
000000000004a7e0	stp	x22, x21, [sp, #0x20]
000000000004a7e4	stp	x20, x19, [sp, #0x30]
000000000004a7e8	stp	x29, x30, [sp, #0x40]
000000000004a7ec	add	x29, sp, #0x40
000000000004a7f0	mov	x19, x2
000000000004a7f4	nop
000000000004a7f8	ldrsw	x8, _OBJC_IVAR_$_FRKInt.value_
000000000004a7fc	ldr	w21, [x0, x8]
000000000004a800	str	xzr, [sp, #0x8]
000000000004a804	adrp	x20, 30 ; 0x68000
000000000004a808	add	x20, x20, #0xa00
000000000004a80c	ldr	x22, [x20]
000000000004a810	mov	x0, x20
000000000004a814	blr	x22
000000000004a818	ldr	x8, [x0]
000000000004a81c	ldr	x9, [x8, #0x110]
000000000004a820	add	x10, sp, #0x8
000000000004a824	str	x10, [x8, #0x110]
000000000004a828	mov	x8, #0x300000000
000000000004a82c	stp	x9, x8, [sp, #0x10]
000000000004a830	adr	x8, #0x38013
000000000004a834	nop
000000000004a838	ldarb	w8, [x8]
000000000004a83c	tbz	w8, #0x0, 0x4a844
000000000004a840	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000004a844	mov	x0, x21
000000000004a848	mov	x1, x19
000000000004a84c	bl	"_kfun:kotlin#<Int-box>(kotlin.Int){}kotlin.Any"
000000000004a850	mov	x8, x0
000000000004a854	str	x0, [x19]
000000000004a858	mov	x0, x20
000000000004a85c	blr	x22
000000000004a860	ldr	x9, [x0]
000000000004a864	ldr	x10, [sp, #0x10]
000000000004a868	str	x10, [x9, #0x110]
000000000004a86c	mov	x0, x8
000000000004a870	ldp	x29, x30, [sp, #0x40]
000000000004a874	ldp	x20, x19, [sp, #0x30]
000000000004a878	ldp	x22, x21, [sp, #0x20]
000000000004a87c	add	sp, sp, #0x50
000000000004a880	ret
-[KotlinFloat getValue:]:
000000000004a884	nop
000000000004a888	ldrsw	x8, _OBJC_IVAR_$_FRKFloat.value_
000000000004a88c	ldr	w8, [x0, x8]
000000000004a890	str	w8, [x2]
000000000004a894	ret
-[KotlinFloat initWithFloat:]:
000000000004a898	sub	sp, sp, #0x30
000000000004a89c	stp	d9, d8, [sp, #0x10]
000000000004a8a0	stp	x29, x30, [sp, #0x20]
000000000004a8a4	add	x29, sp, #0x20
000000000004a8a8	fmov	s8, s0
000000000004a8ac	nop
000000000004a8b0	ldr	x8, #0x1bf38 ; Objc class ref: FRKFloat
000000000004a8b4	stp	x0, x8, [sp]
000000000004a8b8	nop
000000000004a8bc	ldr	x1, #0x1bc0c ; Objc selector ref: init
000000000004a8c0	mov	x0, sp
000000000004a8c4	bl	0x4dcc4 ; Objc message: -[[x0 super] init]
000000000004a8c8	nop
000000000004a8cc	ldrsw	x8, _OBJC_IVAR_$_FRKFloat.value_
000000000004a8d0	str	s8, [x0, x8]
000000000004a8d4	ldp	x29, x30, [sp, #0x20]
000000000004a8d8	ldp	d9, d8, [sp, #0x10]
000000000004a8dc	add	sp, sp, #0x30
000000000004a8e0	ret
-[KotlinFloat initWithInteger:]:
000000000004a8e4	sub	sp, sp, #0x30
000000000004a8e8	stp	x20, x19, [sp, #0x10]
000000000004a8ec	stp	x29, x30, [sp, #0x20]
000000000004a8f0	add	x29, sp, #0x20
000000000004a8f4	mov	x19, x2
000000000004a8f8	nop
000000000004a8fc	ldr	x8, #0x1beec ; Objc class ref: FRKFloat
000000000004a900	stp	x0, x8, [sp]
000000000004a904	nop
000000000004a908	ldr	x1, #0x1bbc0 ; Objc selector ref: init
000000000004a90c	mov	x0, sp
000000000004a910	bl	0x4dcc4 ; Objc message: -[[x0 super] init]
000000000004a914	scvtf	s0, x19
000000000004a918	nop
000000000004a91c	ldrsw	x8, _OBJC_IVAR_$_FRKFloat.value_
000000000004a920	str	s0, [x0, x8]
000000000004a924	ldp	x29, x30, [sp, #0x20]
000000000004a928	ldp	x20, x19, [sp, #0x10]
000000000004a92c	add	sp, sp, #0x30
000000000004a930	ret
-[KotlinFloat initWithDouble:]:
000000000004a934	sub	sp, sp, #0x30
000000000004a938	stp	d9, d8, [sp, #0x10]
000000000004a93c	stp	x29, x30, [sp, #0x20]
000000000004a940	add	x29, sp, #0x20
000000000004a944	fmov	d8, d0
000000000004a948	nop
000000000004a94c	ldr	x8, #0x1be9c ; Objc class ref: FRKFloat
000000000004a950	stp	x0, x8, [sp]
000000000004a954	nop
000000000004a958	ldr	x1, #0x1bb70 ; Objc selector ref: init
000000000004a95c	mov	x0, sp
000000000004a960	bl	0x4dcc4 ; Objc message: -[[x0 super] init]
000000000004a964	fcvt	s0, d8
000000000004a968	nop
000000000004a96c	ldrsw	x8, _OBJC_IVAR_$_FRKFloat.value_
000000000004a970	str	s0, [x0, x8]
000000000004a974	ldp	x29, x30, [sp, #0x20]
000000000004a978	ldp	d9, d8, [sp, #0x10]
000000000004a97c	add	sp, sp, #0x30
000000000004a980	ret
-[KotlinFloat floatValue]:
000000000004a984	nop
000000000004a988	ldrsw	x8, _OBJC_IVAR_$_FRKFloat.value_
000000000004a98c	ldr	s0, [x0, x8]
000000000004a990	ret
-[KotlinFloat objCType]:
000000000004a994	adr	x0, #0x835d ; literal pool for: "f"
000000000004a998	nop
000000000004a99c	ret
-[KotlinFloat toKotlin:]:
000000000004a9a0	nop
000000000004a9a4	ldrsw	x8, _OBJC_IVAR_$_FRKFloat.value_
000000000004a9a8	ldr	s0, [x0, x8]
000000000004a9ac	mov	x0, x2
000000000004a9b0	b	_Kotlin_boxFloat
-[KotlinDouble getValue:]:
000000000004a9b4	nop
000000000004a9b8	ldrsw	x8, _OBJC_IVAR_$_FRKDouble.value_
000000000004a9bc	ldr	x8, [x0, x8]
000000000004a9c0	str	x8, [x2]
000000000004a9c4	ret
-[KotlinDouble initWithDouble:]:
000000000004a9c8	sub	sp, sp, #0x30
000000000004a9cc	stp	d9, d8, [sp, #0x10]
000000000004a9d0	stp	x29, x30, [sp, #0x20]
000000000004a9d4	add	x29, sp, #0x20
000000000004a9d8	fmov	d8, d0
000000000004a9dc	nop
000000000004a9e0	ldr	x8, #0x1be10 ; Objc class ref: FRKDouble
000000000004a9e4	stp	x0, x8, [sp]
000000000004a9e8	nop
000000000004a9ec	ldr	x1, #0x1badc ; Objc selector ref: init
000000000004a9f0	mov	x0, sp
000000000004a9f4	bl	0x4dcc4 ; Objc message: -[[x0 super] init]
000000000004a9f8	nop
000000000004a9fc	ldrsw	x8, _OBJC_IVAR_$_FRKDouble.value_
000000000004aa00	str	d8, [x0, x8]
000000000004aa04	ldp	x29, x30, [sp, #0x20]
000000000004aa08	ldp	d9, d8, [sp, #0x10]
000000000004aa0c	add	sp, sp, #0x30
000000000004aa10	ret
-[KotlinDouble initWithInteger:]:
000000000004aa14	sub	sp, sp, #0x30
000000000004aa18	stp	x20, x19, [sp, #0x10]
000000000004aa1c	stp	x29, x30, [sp, #0x20]
000000000004aa20	add	x29, sp, #0x20
000000000004aa24	mov	x19, x2
000000000004aa28	nop
000000000004aa2c	ldr	x8, #0x1bdc4 ; Objc class ref: FRKDouble
000000000004aa30	stp	x0, x8, [sp]
000000000004aa34	nop
000000000004aa38	ldr	x1, #0x1ba90 ; Objc selector ref: init
000000000004aa3c	mov	x0, sp
000000000004aa40	bl	0x4dcc4 ; Objc message: -[[x0 super] init]
000000000004aa44	scvtf	d0, x19
000000000004aa48	nop
000000000004aa4c	ldrsw	x8, _OBJC_IVAR_$_FRKDouble.value_
000000000004aa50	str	d0, [x0, x8]
000000000004aa54	ldp	x29, x30, [sp, #0x20]
000000000004aa58	ldp	x20, x19, [sp, #0x10]
000000000004aa5c	add	sp, sp, #0x30
000000000004aa60	ret
-[KotlinDouble doubleValue]:
000000000004aa64	nop
000000000004aa68	ldrsw	x8, _OBJC_IVAR_$_FRKDouble.value_
000000000004aa6c	ldr	d0, [x0, x8]
000000000004aa70	ret
-[KotlinDouble objCType]:
000000000004aa74	adr	x0, #0x827f ; literal pool for: "d"
000000000004aa78	nop
000000000004aa7c	ret
-[KotlinDouble toKotlin:]:
000000000004aa80	nop
000000000004aa84	ldrsw	x8, _OBJC_IVAR_$_FRKDouble.value_
000000000004aa88	ldr	d0, [x0, x8]
000000000004aa8c	mov	x0, x2
000000000004aa90	b	_Kotlin_boxDouble
-[KotlinByte getValue:]:
000000000004aa94	nop
000000000004aa98	ldrsw	x8, _OBJC_IVAR_$_FRKByte.value_
000000000004aa9c	ldrb	w8, [x0, x8]
000000000004aaa0	strb	w8, [x2]
000000000004aaa4	ret
-[KotlinByte initWithChar:]:
000000000004aaa8	sub	sp, sp, #0x30
000000000004aaac	stp	x20, x19, [sp, #0x10]
000000000004aab0	stp	x29, x30, [sp, #0x20]
000000000004aab4	add	x29, sp, #0x20
000000000004aab8	mov	x19, x2
000000000004aabc	nop
000000000004aac0	ldr	x8, #0x1bd38 ; Objc class ref: FRKByte
000000000004aac4	stp	x0, x8, [sp]
000000000004aac8	nop
000000000004aacc	ldr	x1, #0x1b9fc ; Objc selector ref: init
000000000004aad0	mov	x0, sp
000000000004aad4	bl	0x4dcc4 ; Objc message: -[[x0 super] init]
000000000004aad8	nop
000000000004aadc	ldrsw	x8, _OBJC_IVAR_$_FRKByte.value_
000000000004aae0	strb	w19, [x0, x8]
000000000004aae4	ldp	x29, x30, [sp, #0x20]
000000000004aae8	ldp	x20, x19, [sp, #0x10]
000000000004aaec	add	sp, sp, #0x30
000000000004aaf0	ret
-[KotlinByte initWithInteger:]:
000000000004aaf4	sub	sp, sp, #0x30
000000000004aaf8	stp	x20, x19, [sp, #0x10]
000000000004aafc	stp	x29, x30, [sp, #0x20]
000000000004ab00	add	x29, sp, #0x20
000000000004ab04	mov	x19, x2
000000000004ab08	nop
000000000004ab0c	ldr	x8, #0x1bcec ; Objc class ref: FRKByte
000000000004ab10	stp	x0, x8, [sp]
000000000004ab14	nop
000000000004ab18	ldr	x1, #0x1b9b0 ; Objc selector ref: init
000000000004ab1c	mov	x0, sp
000000000004ab20	bl	0x4dcc4 ; Objc message: -[[x0 super] init]
000000000004ab24	nop
000000000004ab28	ldrsw	x8, _OBJC_IVAR_$_FRKByte.value_
000000000004ab2c	strb	w19, [x0, x8]
000000000004ab30	ldp	x29, x30, [sp, #0x20]
000000000004ab34	ldp	x20, x19, [sp, #0x10]
000000000004ab38	add	sp, sp, #0x30
000000000004ab3c	ret
-[KotlinByte charValue]:
000000000004ab40	nop
000000000004ab44	ldrsw	x8, _OBJC_IVAR_$_FRKByte.value_
000000000004ab48	ldrsb	w0, [x0, x8]
000000000004ab4c	ret
-[KotlinByte objCType]:
000000000004ab50	adr	x0, #0x81a5 ; literal pool for: "c"
000000000004ab54	nop
000000000004ab58	ret
-[KotlinByte toKotlin:]:
000000000004ab5c	mov	x1, x2
000000000004ab60	nop
000000000004ab64	ldrsw	x8, _OBJC_IVAR_$_FRKByte.value_
000000000004ab68	ldrsb	w0, [x0, x8]
000000000004ab6c	b	_Kotlin_boxByte
-[KotlinBoolean getValue:]:
000000000004ab70	nop
000000000004ab74	ldrsw	x8, _OBJC_IVAR_$_FRKBoolean.value_
000000000004ab78	ldrb	w8, [x0, x8]
000000000004ab7c	strb	w8, [x2]
000000000004ab80	ret
-[KotlinBoolean initWithBool:]:
000000000004ab84	sub	sp, sp, #0x30
000000000004ab88	stp	x20, x19, [sp, #0x10]
000000000004ab8c	stp	x29, x30, [sp, #0x20]
000000000004ab90	add	x29, sp, #0x20
000000000004ab94	mov	x19, x2
000000000004ab98	nop
000000000004ab9c	ldr	x8, #0x1bc44 ; Objc class ref: FRKBoolean
000000000004aba0	stp	x0, x8, [sp]
000000000004aba4	nop
000000000004aba8	ldr	x1, #0x1b920 ; Objc selector ref: init
000000000004abac	mov	x0, sp
000000000004abb0	bl	0x4dcc4 ; Objc message: -[[x0 super] init]
000000000004abb4	nop
000000000004abb8	ldrsw	x8, _OBJC_IVAR_$_FRKBoolean.value_
000000000004abbc	strb	w19, [x0, x8]
000000000004abc0	ldp	x29, x30, [sp, #0x20]
000000000004abc4	ldp	x20, x19, [sp, #0x10]
000000000004abc8	add	sp, sp, #0x30
000000000004abcc	ret
-[KotlinBoolean boolValue]:
000000000004abd0	nop
000000000004abd4	ldrsw	x8, _OBJC_IVAR_$_FRKBoolean.value_
000000000004abd8	ldrb	w0, [x0, x8]
000000000004abdc	ret
-[KotlinBoolean charValue]:
000000000004abe0	nop
000000000004abe4	ldrsw	x8, _OBJC_IVAR_$_FRKBoolean.value_
000000000004abe8	ldrsb	w0, [x0, x8]
000000000004abec	ret
-[KotlinBoolean objCType]:
000000000004abf0	adr	x0, #0x8105 ; literal pool for: "c"
000000000004abf4	nop
000000000004abf8	ret
-[KotlinBoolean toKotlin:]:
000000000004abfc	sub	sp, sp, #0x50
000000000004ac00	stp	x22, x21, [sp, #0x20]
000000000004ac04	stp	x20, x19, [sp, #0x30]
000000000004ac08	stp	x29, x30, [sp, #0x40]
000000000004ac0c	add	x29, sp, #0x40
000000000004ac10	mov	x19, x2
000000000004ac14	nop
000000000004ac18	ldrsw	x8, _OBJC_IVAR_$_FRKBoolean.value_
000000000004ac1c	ldrb	w22, [x0, x8]
000000000004ac20	str	xzr, [sp, #0x8]
000000000004ac24	adrp	x20, 30 ; 0x68000
000000000004ac28	add	x20, x20, #0xa00
000000000004ac2c	ldr	x21, [x20]
000000000004ac30	mov	x0, x20
000000000004ac34	blr	x21
000000000004ac38	ldr	x8, [x0]
000000000004ac3c	ldr	x9, [x8, #0x110]
000000000004ac40	add	x10, sp, #0x8
000000000004ac44	str	x10, [x8, #0x110]
000000000004ac48	mov	x8, #0x300000000
000000000004ac4c	stp	x9, x8, [sp, #0x10]
000000000004ac50	adr	x8, #0x37bf3
000000000004ac54	nop
000000000004ac58	ldarb	w8, [x8]
000000000004ac5c	tbz	w8, #0x0, 0x4ac64
000000000004ac60	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000004ac64	cmp	w22, #0x0
000000000004ac68	cset	w0, ne
000000000004ac6c	mov	x1, x19
000000000004ac70	bl	"_kfun:kotlin#<Boolean-box>(kotlin.Boolean){}kotlin.Any"
000000000004ac74	mov	x8, x0
000000000004ac78	str	x0, [x19]
000000000004ac7c	mov	x0, x20
000000000004ac80	blr	x21
000000000004ac84	ldr	x9, [x0]
000000000004ac88	ldr	x10, [sp, #0x10]
000000000004ac8c	str	x10, [x9, #0x110]
000000000004ac90	mov	x0, x8
000000000004ac94	ldp	x29, x30, [sp, #0x40]
000000000004ac98	ldp	x20, x19, [sp, #0x30]
000000000004ac9c	ldp	x22, x21, [sp, #0x20]
000000000004aca0	add	sp, sp, #0x50
000000000004aca4	ret
+[KotlinUShort numberWithUnsignedShort:]:
000000000004aca8	stp	x20, x19, [sp, #-0x20]!
000000000004acac	stp	x29, x30, [sp, #0x10]
000000000004acb0	add	x29, sp, #0x10
000000000004acb4	mov	x19, x2
000000000004acb8	nop
000000000004acbc	ldr	x1, #0x1b8f4 ; Objc selector ref: new
000000000004acc0	bl	0x4dcb8 ; Objc message: -[x0 new]
000000000004acc4	bl	0x4dc58 ; symbol stub for: _objc_autorelease
000000000004acc8	nop
000000000004accc	ldrsw	x8, _OBJC_IVAR_$_FRKUShort.value_
000000000004acd0	strh	w19, [x0, x8]
000000000004acd4	ldp	x29, x30, [sp, #0x10]
000000000004acd8	ldp	x20, x19, [sp], #0x20
000000000004acdc	ret
+[KotlinULong numberWithUnsignedLongLong:]:
000000000004ace0	stp	x20, x19, [sp, #-0x20]!
000000000004ace4	stp	x29, x30, [sp, #0x10]
000000000004ace8	add	x29, sp, #0x10
000000000004acec	mov	x19, x2
000000000004acf0	nop
000000000004acf4	ldr	x1, #0x1b8bc ; Objc selector ref: new
000000000004acf8	bl	0x4dcb8 ; Objc message: -[x0 new]
000000000004acfc	bl	0x4dc58 ; symbol stub for: _objc_autorelease
000000000004ad00	nop
000000000004ad04	ldrsw	x8, _OBJC_IVAR_$_FRKULong.value_
000000000004ad08	str	x19, [x0, x8]
000000000004ad0c	ldp	x29, x30, [sp, #0x10]
000000000004ad10	ldp	x20, x19, [sp], #0x20
000000000004ad14	ret
+[KotlinUInt numberWithUnsignedInt:]:
000000000004ad18	stp	x20, x19, [sp, #-0x20]!
000000000004ad1c	stp	x29, x30, [sp, #0x10]
000000000004ad20	add	x29, sp, #0x10
000000000004ad24	mov	x19, x2
000000000004ad28	nop
000000000004ad2c	ldr	x1, #0x1b884 ; Objc selector ref: new
000000000004ad30	bl	0x4dcb8 ; Objc message: -[x0 new]
000000000004ad34	bl	0x4dc58 ; symbol stub for: _objc_autorelease
000000000004ad38	nop
000000000004ad3c	ldrsw	x8, _OBJC_IVAR_$_FRKUInt.value_
000000000004ad40	str	w19, [x0, x8]
000000000004ad44	ldp	x29, x30, [sp, #0x10]
000000000004ad48	ldp	x20, x19, [sp], #0x20
000000000004ad4c	ret
+[KotlinUByte numberWithUnsignedChar:]:
000000000004ad50	stp	x20, x19, [sp, #-0x20]!
000000000004ad54	stp	x29, x30, [sp, #0x10]
000000000004ad58	add	x29, sp, #0x10
000000000004ad5c	mov	x19, x2
000000000004ad60	nop
000000000004ad64	ldr	x1, #0x1b84c ; Objc selector ref: new
000000000004ad68	bl	0x4dcb8 ; Objc message: -[x0 new]
000000000004ad6c	bl	0x4dc58 ; symbol stub for: _objc_autorelease
000000000004ad70	nop
000000000004ad74	ldrsw	x8, _OBJC_IVAR_$_FRKUByte.value_
000000000004ad78	strb	w19, [x0, x8]
000000000004ad7c	ldp	x29, x30, [sp, #0x10]
000000000004ad80	ldp	x20, x19, [sp], #0x20
000000000004ad84	ret
+[KotlinShort numberWithShort:]:
000000000004ad88	stp	x20, x19, [sp, #-0x20]!
000000000004ad8c	stp	x29, x30, [sp, #0x10]
000000000004ad90	add	x29, sp, #0x10
000000000004ad94	mov	x19, x2
000000000004ad98	nop
000000000004ad9c	ldr	x1, #0x1b814 ; Objc selector ref: new
000000000004ada0	bl	0x4dcb8 ; Objc message: -[x0 new]
000000000004ada4	bl	0x4dc58 ; symbol stub for: _objc_autorelease
000000000004ada8	nop
000000000004adac	ldrsw	x8, _OBJC_IVAR_$_FRKShort.value_
000000000004adb0	strh	w19, [x0, x8]
000000000004adb4	ldp	x29, x30, [sp, #0x10]
000000000004adb8	ldp	x20, x19, [sp], #0x20
000000000004adbc	ret
+[KotlinNumber numberWithBool:]:
000000000004adc0	stp	x29, x30, [sp, #-0x10]!
000000000004adc4	mov	x29, sp
000000000004adc8	bl	__ZL22incorrectNumberFactoryP10objc_classP13objc_selector
+[KotlinNumber numberWithChar:]:
000000000004adcc	stp	x29, x30, [sp, #-0x10]!
000000000004add0	mov	x29, sp
000000000004add4	bl	__ZL22incorrectNumberFactoryP10objc_classP13objc_selector
+[KotlinNumber numberWithShort:]:
000000000004add8	stp	x29, x30, [sp, #-0x10]!
000000000004addc	mov	x29, sp
000000000004ade0	bl	__ZL22incorrectNumberFactoryP10objc_classP13objc_selector
+[KotlinNumber numberWithInt:]:
000000000004ade4	stp	x29, x30, [sp, #-0x10]!
000000000004ade8	mov	x29, sp
000000000004adec	bl	__ZL22incorrectNumberFactoryP10objc_classP13objc_selector
+[KotlinNumber numberWithInteger:]:
000000000004adf0	stp	x29, x30, [sp, #-0x10]!
000000000004adf4	mov	x29, sp
000000000004adf8	bl	__ZL22incorrectNumberFactoryP10objc_classP13objc_selector
+[KotlinNumber numberWithLong:]:
000000000004adfc	stp	x29, x30, [sp, #-0x10]!
000000000004ae00	mov	x29, sp
000000000004ae04	bl	__ZL22incorrectNumberFactoryP10objc_classP13objc_selector
+[KotlinNumber numberWithLongLong:]:
000000000004ae08	stp	x29, x30, [sp, #-0x10]!
000000000004ae0c	mov	x29, sp
000000000004ae10	bl	__ZL22incorrectNumberFactoryP10objc_classP13objc_selector
+[KotlinNumber numberWithUnsignedChar:]:
000000000004ae14	stp	x29, x30, [sp, #-0x10]!
000000000004ae18	mov	x29, sp
000000000004ae1c	bl	__ZL22incorrectNumberFactoryP10objc_classP13objc_selector
+[KotlinNumber numberWithUnsignedShort:]:
000000000004ae20	stp	x29, x30, [sp, #-0x10]!
000000000004ae24	mov	x29, sp
000000000004ae28	bl	__ZL22incorrectNumberFactoryP10objc_classP13objc_selector
+[KotlinNumber numberWithUnsignedInt:]:
000000000004ae2c	stp	x29, x30, [sp, #-0x10]!
000000000004ae30	mov	x29, sp
000000000004ae34	bl	__ZL22incorrectNumberFactoryP10objc_classP13objc_selector
+[KotlinNumber numberWithUnsignedLong:]:
000000000004ae38	stp	x29, x30, [sp, #-0x10]!
000000000004ae3c	mov	x29, sp
000000000004ae40	bl	__ZL22incorrectNumberFactoryP10objc_classP13objc_selector
+[KotlinNumber numberWithUnsignedInteger:]:
000000000004ae44	stp	x29, x30, [sp, #-0x10]!
000000000004ae48	mov	x29, sp
000000000004ae4c	bl	__ZL22incorrectNumberFactoryP10objc_classP13objc_selector
+[KotlinNumber numberWithUnsignedLongLong:]:
000000000004ae50	stp	x29, x30, [sp, #-0x10]!
000000000004ae54	mov	x29, sp
000000000004ae58	bl	__ZL22incorrectNumberFactoryP10objc_classP13objc_selector
+[KotlinNumber numberWithFloat:]:
000000000004ae5c	stp	x29, x30, [sp, #-0x10]!
000000000004ae60	mov	x29, sp
000000000004ae64	bl	__ZL22incorrectNumberFactoryP10objc_classP13objc_selector
+[KotlinNumber numberWithDouble:]:
000000000004ae68	stp	x29, x30, [sp, #-0x10]!
000000000004ae6c	mov	x29, sp
000000000004ae70	bl	__ZL22incorrectNumberFactoryP10objc_classP13objc_selector
__ZL22incorrectNumberFactoryP10objc_classP13objc_selector:
000000000004ae74	sub	sp, sp, #0x40
000000000004ae78	stp	x22, x21, [sp, #0x10]
000000000004ae7c	stp	x20, x19, [sp, #0x20]
000000000004ae80	stp	x29, x30, [sp, #0x30]
000000000004ae84	add	x29, sp, #0x30
000000000004ae88	mov	x19, x1
000000000004ae8c	nop
000000000004ae90	ldr	x20, #0x1b870 ; Objc class ref: _OBJC_CLASS_$_NSException
000000000004ae94	nop
000000000004ae98	ldr	x8, #0x9170 ; literal pool symbol address: _NSGenericException
000000000004ae9c	ldr	x21, [x8]
000000000004aea0	bl	0x4d8bc ; symbol stub for: _NSStringFromClass
000000000004aea4	mov	x22, x0
000000000004aea8	mov	x0, x19
000000000004aeac	bl	0x4de2c ; symbol stub for: _sel_getName
000000000004aeb0	nop
000000000004aeb4	ldr	x1, #0x1b74c ; Objc selector ref: raise:format:
000000000004aeb8	stp	x22, x0, [sp]
000000000004aebc	adr	x3, #0x18bd4 ; Objc cfstring ref: @"bad cfstring ref"
000000000004aec0	nop
000000000004aec4	mov	x0, x20
000000000004aec8	mov	x2, x21
000000000004aecc	bl	0x4dcb8 ; Objc message: +[NSException raise:format:]
000000000004aed0	bl	0x4dae4 ; symbol stub for: _abort
+[KotlinLong numberWithLongLong:]:
000000000004aed4	stp	x20, x19, [sp, #-0x20]!
000000000004aed8	stp	x29, x30, [sp, #0x10]
000000000004aedc	add	x29, sp, #0x10
000000000004aee0	mov	x19, x2
000000000004aee4	nop
000000000004aee8	ldr	x1, #0x1b6c8 ; Objc selector ref: new
000000000004aeec	bl	0x4dcb8 ; Objc message: -[x0 new]
000000000004aef0	bl	0x4dc58 ; symbol stub for: _objc_autorelease
000000000004aef4	nop
000000000004aef8	ldrsw	x8, _OBJC_IVAR_$_FRKLong.value_
000000000004aefc	str	x19, [x0, x8]
000000000004af00	ldp	x29, x30, [sp, #0x10]
000000000004af04	ldp	x20, x19, [sp], #0x20
000000000004af08	ret
+[KotlinInt numberWithInt:]:
000000000004af0c	stp	x20, x19, [sp, #-0x20]!
000000000004af10	stp	x29, x30, [sp, #0x10]
000000000004af14	add	x29, sp, #0x10
000000000004af18	mov	x19, x2
000000000004af1c	nop
000000000004af20	ldr	x1, #0x1b690 ; Objc selector ref: new
000000000004af24	bl	0x4dcb8 ; Objc message: -[x0 new]
000000000004af28	bl	0x4dc58 ; symbol stub for: _objc_autorelease
000000000004af2c	nop
000000000004af30	ldrsw	x8, _OBJC_IVAR_$_FRKInt.value_
000000000004af34	str	w19, [x0, x8]
000000000004af38	ldp	x29, x30, [sp, #0x10]
000000000004af3c	ldp	x20, x19, [sp], #0x20
000000000004af40	ret
+[KotlinFloat numberWithFloat:]:
000000000004af44	stp	d9, d8, [sp, #-0x20]!
000000000004af48	stp	x29, x30, [sp, #0x10]
000000000004af4c	add	x29, sp, #0x10
000000000004af50	fmov	s8, s0
000000000004af54	nop
000000000004af58	ldr	x1, #0x1b658 ; Objc selector ref: new
000000000004af5c	bl	0x4dcb8 ; Objc message: -[x0 new]
000000000004af60	bl	0x4dc58 ; symbol stub for: _objc_autorelease
000000000004af64	nop
000000000004af68	ldrsw	x8, _OBJC_IVAR_$_FRKFloat.value_
000000000004af6c	str	s8, [x0, x8]
000000000004af70	ldp	x29, x30, [sp, #0x10]
000000000004af74	ldp	d9, d8, [sp], #0x20
000000000004af78	ret
+[KotlinDouble numberWithDouble:]:
000000000004af7c	stp	d9, d8, [sp, #-0x20]!
000000000004af80	stp	x29, x30, [sp, #0x10]
000000000004af84	add	x29, sp, #0x10
000000000004af88	fmov	d8, d0
000000000004af8c	nop
000000000004af90	ldr	x1, #0x1b620 ; Objc selector ref: new
000000000004af94	bl	0x4dcb8 ; Objc message: -[x0 new]
000000000004af98	bl	0x4dc58 ; symbol stub for: _objc_autorelease
000000000004af9c	nop
000000000004afa0	ldrsw	x8, _OBJC_IVAR_$_FRKDouble.value_
000000000004afa4	str	d8, [x0, x8]
000000000004afa8	ldp	x29, x30, [sp, #0x10]
000000000004afac	ldp	d9, d8, [sp], #0x20
000000000004afb0	ret
+[KotlinByte numberWithChar:]:
000000000004afb4	stp	x20, x19, [sp, #-0x20]!
000000000004afb8	stp	x29, x30, [sp, #0x10]
000000000004afbc	add	x29, sp, #0x10
000000000004afc0	mov	x19, x2
000000000004afc4	nop
000000000004afc8	ldr	x1, #0x1b5e8 ; Objc selector ref: new
000000000004afcc	bl	0x4dcb8 ; Objc message: -[x0 new]
000000000004afd0	bl	0x4dc58 ; symbol stub for: _objc_autorelease
000000000004afd4	nop
000000000004afd8	ldrsw	x8, _OBJC_IVAR_$_FRKByte.value_
000000000004afdc	strb	w19, [x0, x8]
000000000004afe0	ldp	x29, x30, [sp, #0x10]
000000000004afe4	ldp	x20, x19, [sp], #0x20
000000000004afe8	ret
+[KotlinBoolean numberWithBool:]:
000000000004afec	stp	x20, x19, [sp, #-0x20]!
000000000004aff0	stp	x29, x30, [sp, #0x10]
000000000004aff4	add	x29, sp, #0x10
000000000004aff8	mov	x19, x2
000000000004affc	nop
000000000004b000	ldr	x1, #0x1b5b0 ; Objc selector ref: new
000000000004b004	bl	0x4dcb8 ; Objc message: -[x0 new]
000000000004b008	bl	0x4dc58 ; symbol stub for: _objc_autorelease
000000000004b00c	nop
000000000004b010	ldrsw	x8, _OBJC_IVAR_$_FRKBoolean.value_
000000000004b014	strb	w19, [x0, x8]
000000000004b018	ldp	x29, x30, [sp, #0x10]
000000000004b01c	ldp	x20, x19, [sp], #0x20
000000000004b020	ret
-[KotlinObjectHolder initWithRef:]:
000000000004b024	sub	sp, sp, #0x40
000000000004b028	stp	x22, x21, [sp, #0x10]
000000000004b02c	stp	x20, x19, [sp, #0x20]
000000000004b030	stp	x29, x30, [sp, #0x30]
000000000004b034	add	x29, sp, #0x30
000000000004b038	mov	x19, x2
000000000004b03c	nop
000000000004b040	ldr	x8, #0x1b798 ; Objc class ref: FRKKotlinObjectHolder
000000000004b044	stp	x0, x8, [sp]
000000000004b048	nop
000000000004b04c	ldr	x1, #0x1b47c ; Objc selector ref: init
000000000004b050	mov	x0, sp
000000000004b054	bl	0x4dcc4 ; Objc message: -[[x0 super] init]
000000000004b058	mov	x20, x0
000000000004b05c	cbz	x0, 0x4b0ac
000000000004b060	adrp	x0, 29 ; 0x68000
000000000004b064	add	x0, x0, #0xa00
000000000004b068	ldr	x8, [x0]
000000000004b06c	blr	x8
000000000004b070	ldr	x21, [x0]
000000000004b074	mov	w0, #0x1
000000000004b078	mov	w1, #0x28
000000000004b07c	bl	0x4db20 ; symbol stub for: _calloc
000000000004b080	ldr	x8, [x21, #0xa8]!
000000000004b084	sub	x9, x21, #0x8
000000000004b088	stp	x8, x21, [x0]
000000000004b08c	str	x0, [x8, #0x8]
000000000004b090	str	x0, [x21]
000000000004b094	ldr	x8, [x21, #0x10]
000000000004b098	add	x8, x8, #0x1
000000000004b09c	str	x8, [x21, #0x10]
000000000004b0a0	stp	x9, x0, [x0, #0x18]
000000000004b0a4	str	x19, [x0, #0x10]!
000000000004b0a8	stp	x19, x0, [x20, #0x8]
000000000004b0ac	mov	x0, x20
000000000004b0b0	ldp	x29, x30, [sp, #0x30]
000000000004b0b4	ldp	x20, x19, [sp, #0x20]
000000000004b0b8	ldp	x22, x21, [sp, #0x10]
000000000004b0bc	add	sp, sp, #0x40
000000000004b0c0	ret
-[KotlinObjectHolder ref]:
000000000004b0c4	stp	x20, x19, [sp, #-0x20]!
000000000004b0c8	stp	x29, x30, [sp, #0x10]
000000000004b0cc	add	x29, sp, #0x10
000000000004b0d0	mov	x19, x0
000000000004b0d4	bl	_Kotlin_initRuntimeIfNeeded
000000000004b0d8	ldr	x0, [x19, #0x8]
000000000004b0dc	ldp	x29, x30, [sp, #0x10]
000000000004b0e0	ldp	x20, x19, [sp], #0x20
000000000004b0e4	ret
-[KotlinObjectHolder dealloc]:
000000000004b0e8	sub	sp, sp, #0x50
000000000004b0ec	stp	x24, x23, [sp, #0x10]
000000000004b0f0	stp	x22, x21, [sp, #0x20]
000000000004b0f4	stp	x20, x19, [sp, #0x30]
000000000004b0f8	stp	x29, x30, [sp, #0x40]
000000000004b0fc	add	x29, sp, #0x40
000000000004b100	mov	x19, x0
000000000004b104	bl	_Kotlin_initRuntimeIfNeeded
000000000004b108	adrp	x21, 29 ; 0x68000
000000000004b10c	add	x21, x21, #0xa00
000000000004b110	ldr	x24, [x21]
000000000004b114	mov	x0, x21
000000000004b118	blr	x24
000000000004b11c	ldr	x8, [x0]
000000000004b120	add	x20, x8, #0x138
000000000004b124	ldaxr	w22, [x20]
000000000004b128	stlxr	w8, wzr, [x20]
000000000004b12c	cbnz	w8, 0x4b124
000000000004b130	adr	x23, #0x37713
000000000004b134	nop
000000000004b138	cmp	w22, #0x1
000000000004b13c	b.ne	0x4b150
000000000004b140	ldarb	w8, [x23]
000000000004b144	tbz	w8, #0x0, 0x4b150
000000000004b148	mov	x0, x20
000000000004b14c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004b150	ldr	x8, [x19, #0x8]
000000000004b154	cbz	x8, 0x4b170
000000000004b158	ldr	x1, [x19, #0x10]
000000000004b15c	mov	x0, x21
000000000004b160	blr	x24
000000000004b164	ldr	x8, [x0]
000000000004b168	add	x0, x8, #0x8
000000000004b16c	bl	__ZN6kotlin2mm17StableRefRegistry19UnregisterStableRefEPNS0_10ThreadDataEPNS_16MultiSourceQueueIP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS6_EEE4NodeE
000000000004b170	ldaxr	w8, [x20]
000000000004b174	stlxr	w9, w22, [x20]
000000000004b178	cbnz	w9, 0x4b170
000000000004b17c	cbnz	w22, 0x4b198
000000000004b180	cmp	w8, #0x1
000000000004b184	b.ne	0x4b198
000000000004b188	ldarb	w8, [x23]
000000000004b18c	tbz	w8, #0x0, 0x4b198
000000000004b190	mov	x0, x20
000000000004b194	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004b198	nop
000000000004b19c	ldr	x8, #0x1b63c ; Objc class ref: FRKKotlinObjectHolder
000000000004b1a0	stp	x19, x8, [sp]
000000000004b1a4	nop
000000000004b1a8	ldr	x1, #0x1b2e0 ; Objc selector ref: dealloc
000000000004b1ac	mov	x0, sp
000000000004b1b0	bl	0x4dcc4 ; Objc message: -[[x0 super] dealloc]
000000000004b1b4	ldp	x29, x30, [sp, #0x40]
000000000004b1b8	ldp	x20, x19, [sp, #0x30]
000000000004b1bc	ldp	x22, x21, [sp, #0x20]
000000000004b1c0	ldp	x24, x23, [sp, #0x10]
000000000004b1c4	add	sp, sp, #0x50
000000000004b1c8	ret
-[KotlinObjCWeakReference releaseAsAssociatedObject:]:
000000000004b1cc	cmp	w2, #0x1
000000000004b1d0	b.hi	0x4b1fc
000000000004b1d4	stp	x20, x19, [sp, #-0x20]!
000000000004b1d8	stp	x29, x30, [sp, #0x10]
000000000004b1dc	add	x29, sp, #0x10
000000000004b1e0	mov	x19, x0
000000000004b1e4	add	x0, x0, #0x8
000000000004b1e8	bl	0x4dc70 ; symbol stub for: _objc_destroyWeak
000000000004b1ec	mov	x0, x19
000000000004b1f0	ldp	x29, x30, [sp, #0x10]
000000000004b1f4	ldp	x20, x19, [sp], #0x20
000000000004b1f8	b	0x4dcdc ; symbol stub for: _objc_release
000000000004b1fc	ret
-[KotlinBase toKotlin:]:
000000000004b200	stp	x20, x19, [sp, #-0x20]!
000000000004b204	stp	x29, x30, [sp, #0x10]
000000000004b208	add	x29, sp, #0x10
000000000004b20c	mov	x19, x2
000000000004b210	mov	x20, x0
000000000004b214	bl	_Kotlin_initRuntimeIfNeeded
000000000004b218	ldr	x0, [x20, #0x8]
000000000004b21c	str	x0, [x19]
000000000004b220	ldp	x29, x30, [sp, #0x10]
000000000004b224	ldp	x20, x19, [sp], #0x20
000000000004b228	ret
-[KotlinBase retain]:
000000000004b22c	sub	sp, sp, #0x50
000000000004b230	stp	x24, x23, [sp, #0x10]
000000000004b234	stp	x22, x21, [sp, #0x20]
000000000004b238	stp	x20, x19, [sp, #0x30]
000000000004b23c	stp	x29, x30, [sp, #0x40]
000000000004b240	add	x29, sp, #0x40
000000000004b244	mov	x19, x0
000000000004b248	ldrb	w8, [x0, #0x20]
000000000004b24c	cbz	w8, 0x4b270
000000000004b250	nop
000000000004b254	ldr	x8, #0x1b57c ; Objc class ref: FRKBase
000000000004b258	stp	x19, x8, [sp]
000000000004b25c	nop
000000000004b260	ldr	x1, #0x1b3d8 ; Objc selector ref: retain
000000000004b264	mov	x0, sp
000000000004b268	bl	0x4dcc4 ; Objc message: -[[x0 super] retain]
000000000004b26c	b	0x4b288
000000000004b270	add	x8, x19, #0x18
000000000004b274	ldaxr	w9, [x8]
000000000004b278	add	w10, w9, #0x1
000000000004b27c	stlxr	w11, w10, [x8]
000000000004b280	cbnz	w11, 0x4b274
000000000004b284	cbz	w9, 0x4b2a4
000000000004b288	mov	x0, x19
000000000004b28c	ldp	x29, x30, [sp, #0x40]
000000000004b290	ldp	x20, x19, [sp, #0x30]
000000000004b294	ldp	x22, x21, [sp, #0x20]
000000000004b298	ldp	x24, x23, [sp, #0x10]
000000000004b29c	add	sp, sp, #0x50
000000000004b2a0	ret
000000000004b2a4	ldr	x8, [x19, #0x8]
000000000004b2a8	cbz	x8, 0x4b288
000000000004b2ac	bl	_Kotlin_initRuntimeIfNeeded
000000000004b2b0	adrp	x21, 29 ; 0x68000
000000000004b2b4	add	x21, x21, #0xa00
000000000004b2b8	ldr	x23, [x21]
000000000004b2bc	mov	x0, x21
000000000004b2c0	blr	x23
000000000004b2c4	ldr	x8, [x0]
000000000004b2c8	add	x20, x8, #0x138
000000000004b2cc	ldaxr	w22, [x20]
000000000004b2d0	stlxr	w8, wzr, [x20]
000000000004b2d4	cbnz	w8, 0x4b2cc
000000000004b2d8	cmp	w22, #0x1
000000000004b2dc	b.ne	0x4b2f8
000000000004b2e0	adr	x8, #0x37563
000000000004b2e4	nop
000000000004b2e8	ldarb	w8, [x8]
000000000004b2ec	tbz	w8, #0x0, 0x4b2f8
000000000004b2f0	mov	x0, x20
000000000004b2f4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004b2f8	bl	_Kotlin_initRuntimeIfNeeded
000000000004b2fc	ldr	x24, [x19, #0x8]
000000000004b300	mov	x0, x21
000000000004b304	blr	x23
000000000004b308	ldr	x21, [x0]
000000000004b30c	mov	w0, #0x1
000000000004b310	mov	w1, #0x28
000000000004b314	bl	0x4db20 ; symbol stub for: _calloc
000000000004b318	ldr	x8, [x21, #0xa8]!
000000000004b31c	sub	x9, x21, #0x8
000000000004b320	stp	x8, x21, [x0]
000000000004b324	str	x0, [x8, #0x8]
000000000004b328	str	x0, [x21]
000000000004b32c	ldr	x8, [x21, #0x10]
000000000004b330	add	x8, x8, #0x1
000000000004b334	str	x8, [x21, #0x10]
000000000004b338	stp	x9, x0, [x0, #0x18]
000000000004b33c	str	x24, [x0, #0x10]!
000000000004b340	str	x0, [x19, #0x10]
000000000004b344	ldaxr	w8, [x20]
000000000004b348	stlxr	w9, w22, [x20]
000000000004b34c	cbnz	w9, 0x4b344
000000000004b350	cbnz	w22, 0x4b288
000000000004b354	cmp	w8, #0x1
000000000004b358	b.ne	0x4b288
000000000004b35c	adr	x8, #0x374e7
000000000004b360	nop
000000000004b364	ldarb	w8, [x8]
000000000004b368	tbz	w8, #0x0, 0x4b288
000000000004b36c	mov	x0, x20
000000000004b370	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004b374	b	0x4b288
-[KotlinBase _tryRetain]:
000000000004b378	sub	sp, sp, #0x90
000000000004b37c	stp	x28, x27, [sp, #0x30]
000000000004b380	stp	x26, x25, [sp, #0x40]
000000000004b384	stp	x24, x23, [sp, #0x50]
000000000004b388	stp	x22, x21, [sp, #0x60]
000000000004b38c	stp	x20, x19, [sp, #0x70]
000000000004b390	stp	x29, x30, [sp, #0x80]
000000000004b394	add	x29, sp, #0x80
000000000004b398	mov	x21, x0
000000000004b39c	ldrb	w8, [x0, #0x20]
000000000004b3a0	cbz	w8, 0x4b3e8
000000000004b3a4	nop
000000000004b3a8	ldr	x8, #0x1b428 ; Objc class ref: FRKBase
000000000004b3ac	stp	x21, x8, [sp]
000000000004b3b0	nop
000000000004b3b4	ldr	x1, #0x1b04c ; Objc selector ref: _tryRetain
000000000004b3b8	mov	x0, sp
000000000004b3bc	bl	0x4dcc4 ; Objc message: -[[x0 super] _tryRetain]
000000000004b3c0	mov	x20, x0
000000000004b3c4	mov	x0, x20
000000000004b3c8	ldp	x29, x30, [sp, #0x80]
000000000004b3cc	ldp	x20, x19, [sp, #0x70]
000000000004b3d0	ldp	x22, x21, [sp, #0x60]
000000000004b3d4	ldp	x24, x23, [sp, #0x50]
000000000004b3d8	ldp	x26, x25, [sp, #0x40]
000000000004b3dc	ldp	x28, x27, [sp, #0x30]
000000000004b3e0	add	sp, sp, #0x90
000000000004b3e4	ret
000000000004b3e8	bl	_Kotlin_initRuntimeIfNeeded
000000000004b3ec	adrp	x20, 29 ; 0x68000
000000000004b3f0	add	x20, x20, #0xa00
000000000004b3f4	ldr	x24, [x20]
000000000004b3f8	mov	x0, x20
000000000004b3fc	blr	x24
000000000004b400	ldr	x8, [x0]
000000000004b404	add	x19, x8, #0x138
000000000004b408	ldaxr	w23, [x19]
000000000004b40c	stlxr	w8, wzr, [x19]
000000000004b410	cbnz	w8, 0x4b408
000000000004b414	cmp	w23, #0x1
000000000004b418	b.ne	0x4b434
000000000004b41c	adr	x8, #0x37427
000000000004b420	nop
000000000004b424	ldarb	w8, [x8]
000000000004b428	tbz	w8, #0x0, 0x4b434
000000000004b42c	mov	x0, x19
000000000004b430	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004b434	ldr	x8, [x21, #0x8]
000000000004b438	cbz	x8, 0x4b494
000000000004b43c	mov	x0, x20
000000000004b440	blr	x24
000000000004b444	ldr	x9, [x0]
000000000004b448	ldr	x10, [x9, #0x110]
000000000004b44c	add	x11, sp, #0x10
000000000004b450	str	x11, [x9, #0x110]
000000000004b454	mov	x9, #0x400000000
000000000004b458	stp	x10, x9, [sp, #0x18]
000000000004b45c	str	x8, [sp, #0x28]
000000000004b460	add	x8, x21, #0x18
000000000004b464	ldaxr	w9, [x8]
000000000004b468	add	w10, w9, #0x1
000000000004b46c	stlxr	w11, w10, [x8]
000000000004b470	cbnz	w11, 0x4b464
000000000004b474	cbz	w9, 0x4b4cc
000000000004b478	mov	x0, x20
000000000004b47c	blr	x24
000000000004b480	ldr	x8, [x0]
000000000004b484	ldr	x9, [sp, #0x18]
000000000004b488	str	x9, [x8, #0x110]
000000000004b48c	mov	w20, #0x1
000000000004b490	b	0x4b498
000000000004b494	mov	w20, #0x0
000000000004b498	ldaxr	w8, [x19]
000000000004b49c	stlxr	w9, w23, [x19]
000000000004b4a0	cbnz	w9, 0x4b498
000000000004b4a4	cbnz	w23, 0x4b3c4
000000000004b4a8	cmp	w8, #0x1
000000000004b4ac	b.ne	0x4b3c4
000000000004b4b0	adr	x8, #0x37393
000000000004b4b4	nop
000000000004b4b8	ldarb	w8, [x8]
000000000004b4bc	tbz	w8, #0x0, 0x4b3c4
000000000004b4c0	mov	x0, x19
000000000004b4c4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004b4c8	b	0x4b3c4
000000000004b4cc	ldr	x8, [x21, #0x8]
000000000004b4d0	cbz	x8, 0x4b478
000000000004b4d4	bl	_Kotlin_initRuntimeIfNeeded
000000000004b4d8	mov	x0, x20
000000000004b4dc	blr	x24
000000000004b4e0	ldr	x8, [x0]
000000000004b4e4	add	x22, x8, #0x138
000000000004b4e8	ldaxr	w25, [x22]
000000000004b4ec	stlxr	w8, wzr, [x22]
000000000004b4f0	cbnz	w8, 0x4b4e8
000000000004b4f4	cmp	w25, #0x1
000000000004b4f8	b.ne	0x4b514
000000000004b4fc	adr	x8, #0x37347
000000000004b500	nop
000000000004b504	ldarb	w8, [x8]
000000000004b508	tbz	w8, #0x0, 0x4b514
000000000004b50c	mov	x0, x22
000000000004b510	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004b514	ldr	x26, [x21, #0x8]
000000000004b518	mov	x0, x20
000000000004b51c	blr	x24
000000000004b520	ldr	x27, [x0]
000000000004b524	mov	w0, #0x1
000000000004b528	mov	w1, #0x28
000000000004b52c	bl	0x4db20 ; symbol stub for: _calloc
000000000004b530	ldr	x8, [x27, #0xa8]!
000000000004b534	sub	x9, x27, #0x8
000000000004b538	mov	x10, x0
000000000004b53c	str	x26, [x10, #0x10]!
000000000004b540	str	x9, [x0, #0x18]
000000000004b544	stp	x8, x27, [x0]
000000000004b548	str	x0, [x8, #0x8]
000000000004b54c	str	x0, [x27]
000000000004b550	ldr	x8, [x27, #0x10]
000000000004b554	add	x8, x8, #0x1
000000000004b558	str	x8, [x27, #0x10]
000000000004b55c	str	x0, [x0, #0x20]
000000000004b560	str	x10, [x21, #0x10]
000000000004b564	ldaxr	w8, [x22]
000000000004b568	stlxr	w9, w25, [x22]
000000000004b56c	cbnz	w9, 0x4b564
000000000004b570	cbnz	w25, 0x4b478
000000000004b574	cmp	w8, #0x1
000000000004b578	b.ne	0x4b478
000000000004b57c	adr	x8, #0x372c7
000000000004b580	nop
000000000004b584	ldarb	w8, [x8]
000000000004b588	tbz	w8, #0x0, 0x4b478
000000000004b58c	mov	x0, x22
000000000004b590	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004b594	b	0x4b478
-[KotlinBase release]:
000000000004b598	sub	sp, sp, #0x20
000000000004b59c	stp	x29, x30, [sp, #0x10]
000000000004b5a0	add	x29, sp, #0x10
000000000004b5a4	ldrb	w8, [x0, #0x20]
000000000004b5a8	cbz	w8, 0x4b5d4
000000000004b5ac	nop
000000000004b5b0	ldr	x8, #0x1b220 ; Objc class ref: FRKBase
000000000004b5b4	stp	x0, x8, [sp]
000000000004b5b8	nop
000000000004b5bc	ldr	x1, #0x1b05c ; Objc selector ref: release
000000000004b5c0	mov	x0, sp
000000000004b5c4	bl	0x4dcc4 ; Objc message: -[[x0 super] release]
000000000004b5c8	ldp	x29, x30, [sp, #0x10]
000000000004b5cc	add	sp, sp, #0x20
000000000004b5d0	ret
000000000004b5d4	add	x0, x0, #0x8
000000000004b5d8	ldp	x29, x30, [sp, #0x10]
000000000004b5dc	add	sp, sp, #0x20
000000000004b5e0	b	__ZN27BackRefFromAssociatedObject10releaseRefEv
-[KotlinBase releaseAsAssociatedObject:]:
000000000004b5e4	sub	sp, sp, #0x20
000000000004b5e8	stp	x29, x30, [sp, #0x10]
000000000004b5ec	add	x29, sp, #0x10
000000000004b5f0	cbz	w2, 0x4b600
000000000004b5f4	str	xzr, [x0, #0x8]
000000000004b5f8	cmp	w2, #0x1
000000000004b5fc	b.ne	0x4b61c
000000000004b600	nop
000000000004b604	ldr	x8, #0x1b1cc ; Objc class ref: FRKBase
000000000004b608	stp	x0, x8, [sp]
000000000004b60c	nop
000000000004b610	ldr	x1, #0x1b008 ; Objc selector ref: release
000000000004b614	mov	x0, sp
000000000004b618	bl	0x4dcc4 ; Objc message: -[[x0 super] release]
000000000004b61c	ldp	x29, x30, [sp, #0x10]
000000000004b620	add	sp, sp, #0x20
000000000004b624	ret
-[KotlinBase copyWithZone:]:
000000000004b628	b	0x4dce8 ; symbol stub for: _objc_retain
+[KotlinBase load]:
000000000004b62c	nop
000000000004b630	ldr	x8, #0x374e0
000000000004b634	cmn	x8, #0x1
000000000004b638	b.ne	0x4b640
000000000004b63c	ret
000000000004b640	adr	x0, #0x374d0
000000000004b644	nop
000000000004b648	adr	x1, #0x18308
000000000004b64c	nop
000000000004b650	b	0x4db80 ; symbol stub for: _dispatch_once
+[KotlinBase initialize]:
000000000004b654	sub	sp, sp, #0x70
000000000004b658	stp	x28, x27, [sp, #0x10]
000000000004b65c	stp	x26, x25, [sp, #0x20]
000000000004b660	stp	x24, x23, [sp, #0x30]
000000000004b664	stp	x22, x21, [sp, #0x40]
000000000004b668	stp	x20, x19, [sp, #0x50]
000000000004b66c	stp	x29, x30, [sp, #0x60]
000000000004b670	add	x29, sp, #0x60
000000000004b674	mov	x19, x0
000000000004b678	nop
000000000004b67c	ldr	x0, #0x1b0fc ; Objc class ref: FRKBase
000000000004b680	nop
000000000004b684	ldr	x1, #0x1adac ; Objc selector ref: class
000000000004b688	bl	0x4dcb8 ; Objc message: +[FRKBase class]
000000000004b68c	cmp	x0, x19
000000000004b690	b.ne	0x4b6b4
000000000004b694	nop
000000000004b698	ldr	x8, #0x37478
000000000004b69c	cmn	x8, #0x1
000000000004b6a0	b.ne	0x4b978
000000000004b6a4	nop
000000000004b6a8	ldr	x8, #0x37418
000000000004b6ac	cmn	x8, #0x1
000000000004b6b0	b.ne	0x4b99c
000000000004b6b4	mov	x0, x19
000000000004b6b8	bl	0x4db68 ; symbol stub for: _class_getName
000000000004b6bc	mov	x20, x0
000000000004b6c0	mov	w22, #0x0
000000000004b6c4	mov	w21, #0x1
000000000004b6c8	adr	x23, #0x16c18
000000000004b6cc	nop
000000000004b6d0	b	0x4b6e0
000000000004b6d4	sub	w21, w25, #0x1
000000000004b6d8	cmp	w21, w22
000000000004b6dc	b.lt	0x4b714
000000000004b6e0	add	w8, w21, w22
000000000004b6e4	cmp	w8, #0x0
000000000004b6e8	cinc	w8, w8, lt
000000000004b6ec	asr	w25, w8, #1
000000000004b6f0	ldr	x24, [x23, w25, uxtw #3]
000000000004b6f4	ldr	x1, [x24, #0x28]
000000000004b6f8	mov	x0, x20
000000000004b6fc	bl	0x4de5c ; symbol stub for: _strcmp
000000000004b700	tbnz	w0, #0x1f, 0x4b6d4
000000000004b704	cbz	w0, 0x4b738
000000000004b708	add	w22, w25, #0x1
000000000004b70c	cmp	w21, w22
000000000004b710	b.ge	0x4b6e0
000000000004b714	mov	x0, x19
000000000004b718	ldp	x29, x30, [sp, #0x60]
000000000004b71c	ldp	x20, x19, [sp, #0x50]
000000000004b720	ldp	x22, x21, [sp, #0x40]
000000000004b724	ldp	x24, x23, [sp, #0x30]
000000000004b728	ldp	x26, x25, [sp, #0x20]
000000000004b72c	ldp	x28, x27, [sp, #0x10]
000000000004b730	add	sp, sp, #0x70
000000000004b734	b	__ZL19getOrCreateTypeInfoP10objc_class
000000000004b738	adrp	x8, 29 ; 0x68000
000000000004b73c	add	x8, x8, #0xa00
000000000004b740	ldr	x9, [x8]
000000000004b744	mov	x0, x8
000000000004b748	blr	x9
000000000004b74c	ldr	x22, [x0]
000000000004b750	cbz	x22, 0x4b774
000000000004b754	add	x10, x22, #0x138
000000000004b758	mov	w11, #0x1
000000000004b75c	ldaxr	w21, [x10]
000000000004b760	stlxr	w12, w11, [x10]
000000000004b764	cbnz	w12, 0x4b75c
000000000004b768	ldr	x23, [x24]
000000000004b76c	cbnz	x23, 0x4b780
000000000004b770	b	0x4b820
000000000004b774	mov	w21, #0x1
000000000004b778	ldr	x23, [x24]
000000000004b77c	cbz	x23, 0x4b820
000000000004b780	str	x23, [sp, #0x8]
000000000004b784	mov	x0, x8
000000000004b788	blr	x9
000000000004b78c	ldr	x25, [x0]
000000000004b790	cbz	x25, 0x4b7ac
000000000004b794	add	x8, x25, #0x138
000000000004b798	mov	w9, #0x1
000000000004b79c	ldaxr	w20, [x8]
000000000004b7a0	stlxr	w10, w9, [x8]
000000000004b7a4	cbnz	w10, 0x4b79c
000000000004b7a8	b	0x4b7b0
000000000004b7ac	mov	w20, #0x1
000000000004b7b0	nop
000000000004b7b4	ldr	x0, #0x1af54 ; Objc class ref: _OBJC_CLASS_$_NSValue
000000000004b7b8	bl	0x4dc40 ; symbol stub for: _objc_alloc
000000000004b7bc	nop
000000000004b7c0	ldr	x1, #0x1ad20 ; Objc selector ref: initWithBytes:objCType:
000000000004b7c4	adr	x3, #0x725a ; literal pool for: "^v"
000000000004b7c8	nop
000000000004b7cc	add	x2, sp, #0x8
000000000004b7d0	bl	0x4dcb8 ; Objc message: +[NSValue initWithBytes:objCType:]
000000000004b7d4	mov	x2, x0
000000000004b7d8	adr	x1, #0x37072
000000000004b7dc	nop
000000000004b7e0	mov	x0, x19
000000000004b7e4	mov	x3, #0x0
000000000004b7e8	bl	0x4dd0c ; symbol stub for: _objc_setAssociatedObject
000000000004b7ec	cbz	x25, 0x4b820
000000000004b7f0	add	x0, x25, #0x138
000000000004b7f4	ldaxr	w8, [x0]
000000000004b7f8	stlxr	w9, w20, [x0]
000000000004b7fc	cbnz	w9, 0x4b7f4
000000000004b800	cbnz	w20, 0x4b820
000000000004b804	cmp	w8, #0x1
000000000004b808	b.ne	0x4b820
000000000004b80c	adr	x8, #0x37037
000000000004b810	nop
000000000004b814	ldarb	w8, [x8]
000000000004b818	tbz	w8, #0x0, 0x4b820
000000000004b81c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004b820	ldr	w8, [x24, #0x38]
000000000004b824	cmp	w8, #0x1
000000000004b828	b.lt	0x4b868
000000000004b82c	mov	x20, #0x0
000000000004b830	mov	x25, #0x0
000000000004b834	ldr	x26, [x24, #0x30]
000000000004b838	ldr	x0, [x26, x20]
000000000004b83c	bl	0x4de38 ; symbol stub for: _sel_registerName
000000000004b840	mov	x1, x0
000000000004b844	add	x8, x26, x20
000000000004b848	ldp	x3, x2, [x8, #0x8]
000000000004b84c	mov	x0, x19
000000000004b850	bl	0x4db2c ; symbol stub for: _class_addMethod
000000000004b854	add	x25, x25, #0x1
000000000004b858	ldrsw	x8, [x24, #0x38]
000000000004b85c	add	x20, x20, #0x18
000000000004b860	cmp	x25, x8
000000000004b864	b.lt	0x4b834
000000000004b868	ldr	w8, [x24, #0x48]
000000000004b86c	cmp	w8, #0x1
000000000004b870	b.lt	0x4b8b8
000000000004b874	mov	x25, #0x0
000000000004b878	mov	x26, #0x0
000000000004b87c	ldr	x27, [x24, #0x40]
000000000004b880	ldr	x0, [x27, x25]
000000000004b884	bl	0x4de38 ; symbol stub for: _sel_registerName
000000000004b888	mov	x20, x0
000000000004b88c	mov	x0, x19
000000000004b890	bl	0x4dd24 ; symbol stub for: _object_getClass
000000000004b894	add	x8, x27, x25
000000000004b898	ldp	x3, x2, [x8, #0x8]
000000000004b89c	mov	x1, x20
000000000004b8a0	bl	0x4db2c ; symbol stub for: _class_addMethod
000000000004b8a4	add	x26, x26, #0x1
000000000004b8a8	ldrsw	x8, [x24, #0x48]
000000000004b8ac	add	x25, x25, #0x18
000000000004b8b0	cmp	x26, x8
000000000004b8b4	b.lt	0x4b87c
000000000004b8b8	cbz	x23, 0x4b924
000000000004b8bc	ldr	w8, [x23, #0x38]
000000000004b8c0	cmp	w8, #0x1
000000000004b8c4	b.lt	0x4b924
000000000004b8c8	mov	x24, #0x0
000000000004b8cc	b	0x4b8e0
000000000004b8d0	add	x24, x24, #0x1
000000000004b8d4	ldrsw	x8, [x23, #0x38]
000000000004b8d8	cmp	x24, x8
000000000004b8dc	b.ge	0x4b924
000000000004b8e0	ldr	x8, [x23, #0x30]
000000000004b8e4	ldr	x8, [x8, x24, lsl #3]
000000000004b8e8	ldr	x8, [x8, #0x60]
000000000004b8ec	ldr	x8, [x8, #0x10]
000000000004b8f0	cbz	x8, 0x4b8d0
000000000004b8f4	ldr	x0, [x8, #0x28]
000000000004b8f8	bl	0x4dca0 ; symbol stub for: _objc_getProtocol
000000000004b8fc	mov	x20, x0
000000000004b900	cbz	x0, 0x4b8d0
000000000004b904	mov	x0, x19
000000000004b908	mov	x1, x20
000000000004b90c	bl	0x4db38 ; symbol stub for: _class_addProtocol
000000000004b910	mov	x0, x19
000000000004b914	bl	0x4dd24 ; symbol stub for: _object_getClass
000000000004b918	mov	x1, x20
000000000004b91c	bl	0x4db38 ; symbol stub for: _class_addProtocol
000000000004b920	b	0x4b8d0
000000000004b924	cbz	x22, 0x4b958
000000000004b928	add	x0, x22, #0x138
000000000004b92c	ldaxr	w8, [x0]
000000000004b930	stlxr	w9, w21, [x0]
000000000004b934	cbnz	w9, 0x4b92c
000000000004b938	cbnz	w21, 0x4b958
000000000004b93c	cmp	w8, #0x1
000000000004b940	b.ne	0x4b958
000000000004b944	adr	x8, #0x36eff
000000000004b948	nop
000000000004b94c	ldarb	w8, [x8]
000000000004b950	tbz	w8, #0x0, 0x4b958
000000000004b954	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004b958	ldp	x29, x30, [sp, #0x60]
000000000004b95c	ldp	x20, x19, [sp, #0x50]
000000000004b960	ldp	x22, x21, [sp, #0x40]
000000000004b964	ldp	x24, x23, [sp, #0x30]
000000000004b968	ldp	x26, x25, [sp, #0x20]
000000000004b96c	ldp	x28, x27, [sp, #0x10]
000000000004b970	add	sp, sp, #0x70
000000000004b974	ret
000000000004b978	adr	x0, #0x37198
000000000004b97c	nop
000000000004b980	adr	x1, #0x17fd0
000000000004b984	nop
000000000004b988	bl	0x4db80 ; symbol stub for: _dispatch_once
000000000004b98c	nop
000000000004b990	ldr	x8, #0x37130
000000000004b994	cmn	x8, #0x1
000000000004b998	b.eq	0x4b6b4
000000000004b99c	adr	x0, #0x37124
000000000004b9a0	nop
000000000004b9a4	adr	x1, #0x17f4c
000000000004b9a8	nop
000000000004b9ac	bl	0x4db80 ; symbol stub for: _dispatch_once
000000000004b9b0	b	0x4b6b4
000000000004b9b4	mov	x19, x0
000000000004b9b8	cbz	x25, 0x4b9fc
000000000004b9bc	add	x0, x25, #0x138
000000000004b9c0	ldaxr	w8, [x0]
000000000004b9c4	stlxr	w9, w20, [x0]
000000000004b9c8	cbnz	w9, 0x4b9c0
000000000004b9cc	cbnz	w20, 0x4b9fc
000000000004b9d0	cmp	w8, #0x1
000000000004b9d4	b.ne	0x4b9fc
000000000004b9d8	adr	x8, #0x36e6b
000000000004b9dc	nop
000000000004b9e0	ldarb	w8, [x8]
000000000004b9e4	tbz	w8, #0x0, 0x4b9fc
000000000004b9e8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004b9ec	b	0x4b9fc
000000000004b9f0	b	0x4b9f8
000000000004b9f4	b	0x4b9f8
000000000004b9f8	mov	x19, x0
000000000004b9fc	cbnz	x22, 0x4ba08
000000000004ba00	mov	x0, x19
000000000004ba04	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
000000000004ba08	add	x0, x22, #0x138
000000000004ba0c	ldaxr	w8, [x0]
000000000004ba10	stlxr	w9, w21, [x0]
000000000004ba14	cbnz	w9, 0x4ba0c
000000000004ba18	cbnz	w21, 0x4ba00
000000000004ba1c	cmp	w8, #0x1
000000000004ba20	b.ne	0x4ba00
000000000004ba24	adr	x8, #0x36e1f
000000000004ba28	nop
000000000004ba2c	ldarb	w8, [x8]
000000000004ba30	tbz	w8, #0x0, 0x4ba00
000000000004ba34	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004ba38	mov	x0, x19
000000000004ba3c	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
+[KotlinBase allocWithZone:]:
000000000004ba40	sub	sp, sp, #0xa0
000000000004ba44	stp	x28, x27, [sp, #0x40]
000000000004ba48	stp	x26, x25, [sp, #0x50]
000000000004ba4c	stp	x24, x23, [sp, #0x60]
000000000004ba50	stp	x22, x21, [sp, #0x70]
000000000004ba54	stp	x20, x19, [sp, #0x80]
000000000004ba58	stp	x29, x30, [sp, #0x90]
000000000004ba5c	add	x29, sp, #0x90
000000000004ba60	mov	x20, x2
000000000004ba64	mov	x22, x0
000000000004ba68	bl	_Kotlin_initRuntimeIfNeeded
000000000004ba6c	adrp	x21, 29 ; 0x68000
000000000004ba70	add	x21, x21, #0xa00
000000000004ba74	ldr	x27, [x21]
000000000004ba78	mov	x0, x21
000000000004ba7c	blr	x27
000000000004ba80	ldr	x26, [x0]
000000000004ba84	add	x19, x26, #0x138
000000000004ba88	ldaxr	w25, [x19]
000000000004ba8c	stlxr	w8, wzr, [x19]
000000000004ba90	cbnz	w8, 0x4ba88
000000000004ba94	cmp	w25, #0x1
000000000004ba98	b.ne	0x4bab4
000000000004ba9c	adr	x8, #0x36da7
000000000004baa0	nop
000000000004baa4	ldarb	w8, [x8]
000000000004baa8	tbz	w8, #0x0, 0x4bab4
000000000004baac	mov	x0, x19
000000000004bab0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004bab4	nop
000000000004bab8	ldr	x8, #0x1ad10 ; Objc class ref: FRKBase
000000000004babc	stp	x22, x8, [sp, #0x30]
000000000004bac0	nop
000000000004bac4	ldr	x1, #0x1a954 ; Objc selector ref: allocWithZone:
000000000004bac8	add	x0, sp, #0x30
000000000004bacc	mov	x2, x20
000000000004bad0	bl	0x4dcc4 ; Objc message: -[[x0 super] allocWithZone:]
000000000004bad4	mov	x20, x0
000000000004bad8	adr	x1, #0x36d72
000000000004badc	nop
000000000004bae0	mov	x0, x22
000000000004bae4	bl	0x4dc88 ; symbol stub for: _objc_getAssociatedObject
000000000004bae8	nop
000000000004baec	ldr	x1, #0x1ab0c ; Objc selector ref: pointerValue
000000000004baf0	bl	0x4dcb8 ; Objc message: -[x0 pointerValue]
000000000004baf4	mov	x23, x0
000000000004baf8	cbnz	x0, 0x4bb38
000000000004bafc	nop
000000000004bb00	ldr	x24, #0x1ac00 ; Objc class ref: _OBJC_CLASS_$_NSException
000000000004bb04	mov	x0, x22
000000000004bb08	bl	0x4dd24 ; symbol stub for: _object_getClass
000000000004bb0c	bl	0x4db68 ; symbol stub for: _class_getName
000000000004bb10	nop
000000000004bb14	ldr	x8, #0x84f4 ; literal pool symbol address: _NSGenericException
000000000004bb18	ldr	x2, [x8]
000000000004bb1c	nop
000000000004bb20	ldr	x1, #0x1aae0 ; Objc selector ref: raise:format:
000000000004bb24	str	x0, [sp]
000000000004bb28	adr	x3, #0x17f88 ; Objc cfstring ref: @"bad cfstring ref"
000000000004bb2c	nop
000000000004bb30	mov	x0, x24
000000000004bb34	bl	0x4dcb8 ; Objc message: +[NSException raise:format:]
000000000004bb38	ldr	w8, [x23, #0x14]
000000000004bb3c	tbz	w8, #0x1f, 0x4bb80
000000000004bb40	nop
000000000004bb44	ldr	x24, #0x1abbc ; Objc class ref: _OBJC_CLASS_$_NSException
000000000004bb48	mov	x0, x22
000000000004bb4c	bl	0x4dd24 ; symbol stub for: _object_getClass
000000000004bb50	bl	0x4db68 ; symbol stub for: _class_getName
000000000004bb54	nop
000000000004bb58	ldr	x8, #0x84b0 ; literal pool symbol address: _NSGenericException
000000000004bb5c	ldr	x2, [x8]
000000000004bb60	nop
000000000004bb64	ldr	x1, #0x1aa9c ; Objc selector ref: raise:format:
000000000004bb68	str	x0, [sp]
000000000004bb6c	adr	x3, #0x17f64 ; Objc cfstring ref: @"bad cfstring ref"
000000000004bb70	nop
000000000004bb74	mov	x0, x24
000000000004bb78	bl	0x4dcb8 ; Objc message: +[NSException raise:format:]
000000000004bb7c	ldr	w8, [x23, #0x14]
000000000004bb80	str	xzr, [sp, #0x28]
000000000004bb84	mov	x0, x21
000000000004bb88	blr	x27
000000000004bb8c	ldr	x9, [x0]
000000000004bb90	add	x10, sp, #0x10
000000000004bb94	ldp	x11, x12, [x9, #0x110]
000000000004bb98	str	x10, [x9, #0x110]
000000000004bb9c	mov	x9, #0x400000000
000000000004bba0	stp	x11, x9, [sp, #0x18]
000000000004bba4	sxtw	x8, w8
000000000004bba8	add	x8, x8, #0xf
000000000004bbac	and	x1, x8, #0xfffffffffffffff8
000000000004bbb0	add	x0, x12, #0x70
000000000004bbb4	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000004bbb8	str	x23, [x0, #0x10]!
000000000004bbbc	stur	xzr, [x0, #-0x8]
000000000004bbc0	str	x0, [sp, #0x28]
000000000004bbc4	ldar	x8, [x0]
000000000004bbc8	and	x8, x8, #0xfffffffffffffffc
000000000004bbcc	ldr	x9, [x8]
000000000004bbd0	cmp	x9, x8
000000000004bbd4	csel	x8, xzr, x8, eq
000000000004bbd8	cbnz	x8, 0x4bbe4
000000000004bbdc	bl	__ZN6kotlin2mm15ExtraObjectData7InstallEP9ObjHeader
000000000004bbe0	mov	x8, x0
000000000004bbe4	add	x8, x8, #0x10
000000000004bbe8	stlr	x20, [x8]
000000000004bbec	ldr	x22, [sp, #0x28]
000000000004bbf0	str	x22, [x20, #0x8]
000000000004bbf4	mov	x0, x21
000000000004bbf8	blr	x27
000000000004bbfc	ldr	x21, [x0]
000000000004bc00	mov	w23, #0x1
000000000004bc04	mov	w0, #0x1
000000000004bc08	mov	w1, #0x28
000000000004bc0c	bl	0x4db20 ; symbol stub for: _calloc
000000000004bc10	ldr	x8, [x21, #0xa8]!
000000000004bc14	sub	x9, x21, #0x8
000000000004bc18	mov	x10, x0
000000000004bc1c	str	x22, [x10, #0x10]!
000000000004bc20	str	x9, [x0, #0x18]
000000000004bc24	stp	x8, x21, [x0]
000000000004bc28	str	x0, [x8, #0x8]
000000000004bc2c	str	x0, [x21]
000000000004bc30	ldr	x8, [x21, #0x10]
000000000004bc34	add	x8, x8, #0x1
000000000004bc38	str	x8, [x21, #0x10]
000000000004bc3c	str	x0, [x0, #0x20]
000000000004bc40	str	x10, [x20, #0x10]
000000000004bc44	str	w23, [x20, #0x18]
000000000004bc48	strb	wzr, [x20, #0x20]
000000000004bc4c	ldr	x8, [sp, #0x18]
000000000004bc50	str	x8, [x21, #0x68]
000000000004bc54	cbz	x26, 0x4bc88
000000000004bc58	ldaxr	w8, [x19]
000000000004bc5c	stlxr	w9, w25, [x19]
000000000004bc60	cbnz	w9, 0x4bc58
000000000004bc64	cbnz	w25, 0x4bc88
000000000004bc68	cmp	w8, #0x1
000000000004bc6c	b.ne	0x4bc88
000000000004bc70	adr	x8, #0x36bd3
000000000004bc74	nop
000000000004bc78	ldarb	w8, [x8]
000000000004bc7c	tbz	w8, #0x0, 0x4bc88
000000000004bc80	mov	x0, x19
000000000004bc84	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004bc88	mov	x0, x20
000000000004bc8c	ldp	x29, x30, [sp, #0x90]
000000000004bc90	ldp	x20, x19, [sp, #0x80]
000000000004bc94	ldp	x22, x21, [sp, #0x70]
000000000004bc98	ldp	x24, x23, [sp, #0x60]
000000000004bc9c	ldp	x26, x25, [sp, #0x50]
000000000004bca0	ldp	x28, x27, [sp, #0x40]
000000000004bca4	add	sp, sp, #0xa0
000000000004bca8	ret
000000000004bcac	b	0x4bcb0
000000000004bcb0	mov	x20, x0
000000000004bcb4	cbz	x26, 0x4bce8
000000000004bcb8	ldaxr	w8, [x19]
000000000004bcbc	stlxr	w9, w25, [x19]
000000000004bcc0	cbnz	w9, 0x4bcb8
000000000004bcc4	cbnz	w25, 0x4bce8
000000000004bcc8	cmp	w8, #0x1
000000000004bccc	b.ne	0x4bce8
000000000004bcd0	adr	x8, #0x36b73
000000000004bcd4	nop
000000000004bcd8	ldarb	w8, [x8]
000000000004bcdc	tbz	w8, #0x0, 0x4bce8
000000000004bce0	mov	x0, x19
000000000004bce4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004bce8	mov	x0, x20
000000000004bcec	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
+[KotlinBase createRetainedWrapper:]:
000000000004bcf0	sub	sp, sp, #0x60
000000000004bcf4	stp	x26, x25, [sp, #0x10]
000000000004bcf8	stp	x24, x23, [sp, #0x20]
000000000004bcfc	stp	x22, x21, [sp, #0x30]
000000000004bd00	stp	x20, x19, [sp, #0x40]
000000000004bd04	stp	x29, x30, [sp, #0x50]
000000000004bd08	add	x29, sp, #0x50
000000000004bd0c	mov	x21, x2
000000000004bd10	nop
000000000004bd14	ldr	x8, #0x1aab4 ; Objc class ref: FRKBase
000000000004bd18	stp	x0, x8, [sp]
000000000004bd1c	nop
000000000004bd20	ldr	x1, #0x1a6f8 ; Objc selector ref: allocWithZone:
000000000004bd24	mov	x0, sp
000000000004bd28	mov	x2, #0x0
000000000004bd2c	bl	0x4dcc4 ; Objc message: -[[x0 super] allocWithZone:]
000000000004bd30	mov	x19, x0
000000000004bd34	mov	x20, x0
000000000004bd38	str	x21, [x20, #0x8]!
000000000004bd3c	adrp	x22, 29 ; 0x68000
000000000004bd40	add	x22, x22, #0xa00
000000000004bd44	ldr	x23, [x22]
000000000004bd48	mov	x0, x22
000000000004bd4c	blr	x23
000000000004bd50	ldr	x24, [x0]
000000000004bd54	mov	w25, #0x1
000000000004bd58	mov	w0, #0x1
000000000004bd5c	mov	w1, #0x28
000000000004bd60	bl	0x4db20 ; symbol stub for: _calloc
000000000004bd64	ldr	x8, [x24, #0xa8]!
000000000004bd68	sub	x9, x24, #0x8
000000000004bd6c	stp	x8, x24, [x0]
000000000004bd70	str	x0, [x8, #0x8]
000000000004bd74	str	x0, [x24]
000000000004bd78	ldr	x8, [x24, #0x10]
000000000004bd7c	add	x8, x8, #0x1
000000000004bd80	str	x8, [x24, #0x10]
000000000004bd84	stp	x9, x0, [x0, #0x18]
000000000004bd88	str	x21, [x0, #0x10]!
000000000004bd8c	str	x0, [x19, #0x10]
000000000004bd90	str	w25, [x19, #0x18]
000000000004bd94	ldr	x8, [x21]
000000000004bd98	and	w8, w8, #0x1
000000000004bd9c	strb	w8, [x19, #0x20]
000000000004bda0	ldr	x8, [x21]
000000000004bda4	tbnz	w8, #0x0, 0x4be70
000000000004bda8	ldar	x8, [x21]
000000000004bdac	and	x8, x8, #0xfffffffffffffffc
000000000004bdb0	ldr	x9, [x8]
000000000004bdb4	cmp	x9, x8
000000000004bdb8	csel	x0, xzr, x8, eq
000000000004bdbc	cbnz	x0, 0x4bdc8
000000000004bdc0	mov	x0, x21
000000000004bdc4	bl	__ZN6kotlin2mm15ExtraObjectData7InstallEP9ObjHeader
000000000004bdc8	add	x8, x0, #0x10
000000000004bdcc	ldaxr	x21, [x8]
000000000004bdd0	cbnz	x21, 0x4bde8
000000000004bdd4	stlxr	w9, x19, [x8]
000000000004bdd8	cbnz	w9, 0x4bdcc
000000000004bddc	mov	w8, #0x1
000000000004bde0	tbz	w8, #0x0, 0x4bdf4
000000000004bde4	b	0x4be70
000000000004bde8	mov	w8, #0x0
000000000004bdec	clrex
000000000004bdf0	tbnz	w8, #0x0, 0x4be70
000000000004bdf4	mov	x0, x22
000000000004bdf8	blr	x23
000000000004bdfc	ldr	x24, [x0]
000000000004be00	add	x22, x24, #0x138
000000000004be04	mov	w8, #0x1
000000000004be08	ldaxr	w23, [x22]
000000000004be0c	stlxr	w9, w8, [x22]
000000000004be10	cbnz	w9, 0x4be08
000000000004be14	mov	x0, x20
000000000004be18	bl	__ZN27BackRefFromAssociatedObject10releaseRefEv
000000000004be1c	nop
000000000004be20	ldr	x1, #0x1a5c8 ; Objc selector ref: FRK_releaseAsAssociatedObject:
000000000004be24	mov	x0, x19
000000000004be28	mov	w2, #0x1
000000000004be2c	bl	0x4dcb8 ; Objc message: -[x0 FRK_releaseAsAssociatedObject:]
000000000004be30	cbz	x24, 0x4be64
000000000004be34	ldaxr	w8, [x22]
000000000004be38	stlxr	w9, w23, [x22]
000000000004be3c	cbnz	w9, 0x4be34
000000000004be40	cbnz	w23, 0x4be64
000000000004be44	cmp	w8, #0x1
000000000004be48	b.ne	0x4be64
000000000004be4c	adr	x8, #0x369f7
000000000004be50	nop
000000000004be54	ldarb	w8, [x8]
000000000004be58	tbz	w8, #0x0, 0x4be64
000000000004be5c	mov	x0, x22
000000000004be60	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004be64	mov	x0, x21
000000000004be68	bl	0x4dce8 ; symbol stub for: _objc_retain
000000000004be6c	mov	x19, x0
000000000004be70	mov	x0, x19
000000000004be74	ldp	x29, x30, [sp, #0x50]
000000000004be78	ldp	x20, x19, [sp, #0x40]
000000000004be7c	ldp	x22, x21, [sp, #0x30]
000000000004be80	ldp	x24, x23, [sp, #0x20]
000000000004be84	ldp	x26, x25, [sp, #0x10]
000000000004be88	add	sp, sp, #0x60
000000000004be8c	ret
000000000004be90	mov	x19, x0
000000000004be94	cbz	x24, 0x4bec8
000000000004be98	ldaxr	w8, [x22]
000000000004be9c	stlxr	w9, w23, [x22]
000000000004bea0	cbnz	w9, 0x4be98
000000000004bea4	cbnz	w23, 0x4bec8
000000000004bea8	cmp	w8, #0x1
000000000004beac	b.ne	0x4bec8
000000000004beb0	adr	x8, #0x36993
000000000004beb4	nop
000000000004beb8	ldarb	w8, [x8]
000000000004bebc	tbz	w8, #0x0, 0x4bec8
000000000004bec0	mov	x0, x22
000000000004bec4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004bec8	mov	x0, x19
000000000004becc	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
____ZL15injectToRuntimev_block_invoke:
000000000004bed0	stp	x29, x30, [sp, #-0x10]!
000000000004bed4	mov	x29, sp
000000000004bed8	nop
000000000004bedc	ldr	x8, #0x36bbc
000000000004bee0	cbnz	x8, 0x4bf18
000000000004bee4	nop
000000000004bee8	ldr	x8, #0x1a508 ; Objc selector ref: FRK_toKotlin:
000000000004beec	adr	x9, #0x36bac
000000000004bef0	nop
000000000004bef4	str	x8, [x9]
000000000004bef8	ldr	x8, [x9, #0x8]
000000000004befc	cbnz	x8, 0x4bf18
000000000004bf00	nop
000000000004bf04	ldr	x8, #0x1a4e4 ; Objc selector ref: FRK_releaseAsAssociatedObject:
000000000004bf08	adrp	x9, 55 ; 0x82000
000000000004bf0c	str	x8, [x9, #0xaa0]
000000000004bf10	ldp	x29, x30, [sp], #0x10
000000000004bf14	ret
000000000004bf18	adr	x2, #0x6e9f ; literal pool for: "runtime injected twice; https://youtrack.jetbrains.com/issue/KT-42254 might be related"
000000000004bf1c	nop
000000000004bf20	mov	w0, #0x0
000000000004bf24	bl	__ZN6kotlin8internal24RuntimeAssertFailedPanicEbPKcS2_z
-[NSString(NSStringToKotlin) toKotlin:]:
000000000004bf28	mov	x1, x2
000000000004bf2c	b	_Kotlin_Interop_CreateKStringFromNSString
-[NSObject(NSObjectToKotlin) toKotlin:]:
000000000004bf30	stp	x22, x21, [sp, #-0x30]!
000000000004bf34	stp	x20, x19, [sp, #0x10]
000000000004bf38	stp	x29, x30, [sp, #0x20]
000000000004bf3c	add	x29, sp, #0x20
000000000004bf40	mov	x21, x2
000000000004bf44	mov	x19, x0
000000000004bf48	bl	0x4dd24 ; symbol stub for: _object_getClass
000000000004bf4c	bl	__ZL19getOrCreateTypeInfoP10objc_class
000000000004bf50	mov	x22, x0
000000000004bf54	mov	x0, x19
000000000004bf58	bl	0x4dce8 ; symbol stub for: _objc_retain
000000000004bf5c	mov	x19, x0
000000000004bf60	adrp	x0, 29 ; 0x68000
000000000004bf64	add	x0, x0, #0xa00
000000000004bf68	ldr	x8, [x0]
000000000004bf6c	blr	x8
000000000004bf70	ldr	x8, [x0]
000000000004bf74	ldr	x8, [x8, #0x118]
000000000004bf78	ldrsw	x9, [x22, #0x14]
000000000004bf7c	add	x9, x9, #0xf
000000000004bf80	and	x1, x9, #0xfffffffffffffff8
000000000004bf84	add	x0, x8, #0x70
000000000004bf88	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000004bf8c	mov	x20, x0
000000000004bf90	str	x22, [x20, #0x10]!
000000000004bf94	stur	xzr, [x20, #-0x8]
000000000004bf98	str	x20, [x21]
000000000004bf9c	ldar	x8, [x20]
000000000004bfa0	and	x8, x8, #0xfffffffffffffffc
000000000004bfa4	ldr	x9, [x8]
000000000004bfa8	cmp	x9, x8
000000000004bfac	csel	x0, xzr, x8, eq
000000000004bfb0	cbnz	x0, 0x4bfbc
000000000004bfb4	mov	x0, x20
000000000004bfb8	bl	__ZN6kotlin2mm15ExtraObjectData7InstallEP9ObjHeader
000000000004bfbc	add	x8, x0, #0x10
000000000004bfc0	stlr	x19, [x8]
000000000004bfc4	mov	x0, x20
000000000004bfc8	ldp	x29, x30, [sp, #0x20]
000000000004bfcc	ldp	x20, x19, [sp, #0x10]
000000000004bfd0	ldp	x22, x21, [sp], #0x30
000000000004bfd4	ret
-[NSObject(NSObjectToKotlin) releaseAsAssociatedObject:]:
000000000004bfd8	cmp	w2, #0x1
000000000004bfdc	b.hi	0x4bfe4
000000000004bfe0	b	0x4dcdc ; symbol stub for: _objc_release
000000000004bfe4	ret
-[NSNumber(NSNumberToKotlin) toKotlin:]:
000000000004bfe8	sub	sp, sp, #0x50
000000000004bfec	stp	x22, x21, [sp, #0x20]
000000000004bff0	stp	x20, x19, [sp, #0x30]
000000000004bff4	stp	x29, x30, [sp, #0x40]
000000000004bff8	add	x29, sp, #0x40
000000000004bffc	mov	x19, x2
000000000004c000	mov	x20, x0
000000000004c004	nop
000000000004c008	ldr	x1, #0x1a5c8 ; Objc selector ref: objCType
000000000004c00c	bl	0x4dcb8 ; Objc message: -[x0 objCType]
000000000004c010	ldrsb	w8, [x0]
000000000004c014	sub	w8, w8, #0x43
000000000004c018	cmp	w8, #0x30
000000000004c01c	b.hi	0x4c060
000000000004c020	adr	x9, #0x263c
000000000004c024	nop
000000000004c028	adr	x10, #0x10
000000000004c02c	ldrb	w11, [x9, x8]
000000000004c030	add	x10, x10, x11, lsl #2
000000000004c034	br	x10
000000000004c038	nop
000000000004c03c	ldr	x1, #0x1a634 ; Objc selector ref: unsignedCharValue
000000000004c040	mov	x0, x20
000000000004c044	bl	0x4dcb8 ; Objc message: -[x0 unsignedCharValue]
000000000004c048	mov	x1, x19
000000000004c04c	ldp	x29, x30, [sp, #0x40]
000000000004c050	ldp	x20, x19, [sp, #0x30]
000000000004c054	ldp	x22, x21, [sp, #0x20]
000000000004c058	add	sp, sp, #0x50
000000000004c05c	b	_Kotlin_boxUByte
000000000004c060	mov	x0, x20
000000000004c064	bl	0x4dd24 ; symbol stub for: _object_getClass
000000000004c068	bl	__ZL19getOrCreateTypeInfoP10objc_class
000000000004c06c	mov	x22, x0
000000000004c070	mov	x0, x20
000000000004c074	bl	0x4dce8 ; symbol stub for: _objc_retain
000000000004c078	mov	x20, x0
000000000004c07c	adrp	x0, 28 ; 0x68000
000000000004c080	add	x0, x0, #0xa00
000000000004c084	ldr	x8, [x0]
000000000004c088	blr	x8
000000000004c08c	ldr	x8, [x0]
000000000004c090	ldr	x8, [x8, #0x118]
000000000004c094	ldrsw	x9, [x22, #0x14]
000000000004c098	add	x9, x9, #0xf
000000000004c09c	and	x1, x9, #0xfffffffffffffff8
000000000004c0a0	add	x0, x8, #0x70
000000000004c0a4	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000004c0a8	mov	x21, x0
000000000004c0ac	str	x22, [x21, #0x10]!
000000000004c0b0	stur	xzr, [x21, #-0x8]
000000000004c0b4	str	x21, [x19]
000000000004c0b8	ldar	x8, [x21]
000000000004c0bc	and	x8, x8, #0xfffffffffffffffc
000000000004c0c0	ldr	x9, [x8]
000000000004c0c4	cmp	x9, x8
000000000004c0c8	csel	x0, xzr, x8, eq
000000000004c0cc	cbnz	x0, 0x4c0d8
000000000004c0d0	mov	x0, x21
000000000004c0d4	bl	__ZN6kotlin2mm15ExtraObjectData7InstallEP9ObjHeader
000000000004c0d8	add	x8, x0, #0x10
000000000004c0dc	stlr	x20, [x8]
000000000004c0e0	mov	x0, x21
000000000004c0e4	ldp	x29, x30, [sp, #0x40]
000000000004c0e8	ldp	x20, x19, [sp, #0x30]
000000000004c0ec	ldp	x22, x21, [sp, #0x20]
000000000004c0f0	add	sp, sp, #0x50
000000000004c0f4	ret
000000000004c0f8	nop
000000000004c0fc	ldr	x1, #0x1a57c ; Objc selector ref: unsignedIntValue
000000000004c100	mov	x0, x20
000000000004c104	bl	0x4dcb8 ; Objc message: -[x0 unsignedIntValue]
000000000004c108	mov	x1, x19
000000000004c10c	ldp	x29, x30, [sp, #0x40]
000000000004c110	ldp	x20, x19, [sp, #0x30]
000000000004c114	ldp	x22, x21, [sp, #0x20]
000000000004c118	add	sp, sp, #0x50
000000000004c11c	b	_Kotlin_boxUInt
000000000004c120	nop
000000000004c124	ldr	x1, #0x1a55c ; Objc selector ref: unsignedLongLongValue
000000000004c128	mov	x0, x20
000000000004c12c	bl	0x4dcb8 ; Objc message: -[x0 unsignedLongLongValue]
000000000004c130	mov	x1, x19
000000000004c134	ldp	x29, x30, [sp, #0x40]
000000000004c138	ldp	x20, x19, [sp, #0x30]
000000000004c13c	ldp	x22, x21, [sp, #0x20]
000000000004c140	add	sp, sp, #0x50
000000000004c144	b	_Kotlin_boxULong
000000000004c148	nop
000000000004c14c	ldr	x1, #0x1a53c ; Objc selector ref: unsignedShortValue
000000000004c150	mov	x0, x20
000000000004c154	bl	0x4dcb8 ; Objc message: -[x0 unsignedShortValue]
000000000004c158	mov	x1, x19
000000000004c15c	ldp	x29, x30, [sp, #0x40]
000000000004c160	ldp	x20, x19, [sp, #0x30]
000000000004c164	ldp	x22, x21, [sp, #0x20]
000000000004c168	add	sp, sp, #0x50
000000000004c16c	b	_Kotlin_boxUShort
000000000004c170	nop
000000000004c174	ldr	x1, #0x1a2b4 ; Objc selector ref: charValue
000000000004c178	mov	x0, x20
000000000004c17c	bl	0x4dcb8 ; Objc message: -[x0 charValue]
000000000004c180	mov	x1, x19
000000000004c184	ldp	x29, x30, [sp, #0x40]
000000000004c188	ldp	x20, x19, [sp, #0x30]
000000000004c18c	ldp	x22, x21, [sp, #0x20]
000000000004c190	add	sp, sp, #0x50
000000000004c194	b	_Kotlin_boxByte
000000000004c198	nop
000000000004c19c	ldr	x1, #0x1a304 ; Objc selector ref: doubleValue
000000000004c1a0	mov	x0, x20
000000000004c1a4	bl	0x4dcb8 ; Objc message: -[x0 doubleValue]
000000000004c1a8	mov	x0, x19
000000000004c1ac	ldp	x29, x30, [sp, #0x40]
000000000004c1b0	ldp	x20, x19, [sp, #0x30]
000000000004c1b4	ldp	x22, x21, [sp, #0x20]
000000000004c1b8	add	sp, sp, #0x50
000000000004c1bc	b	_Kotlin_boxDouble
000000000004c1c0	nop
000000000004c1c4	ldr	x1, #0x1a2ec ; Objc selector ref: floatValue
000000000004c1c8	mov	x0, x20
000000000004c1cc	bl	0x4dcb8 ; Objc message: -[x0 floatValue]
000000000004c1d0	mov	x0, x19
000000000004c1d4	ldp	x29, x30, [sp, #0x40]
000000000004c1d8	ldp	x20, x19, [sp, #0x30]
000000000004c1dc	ldp	x22, x21, [sp, #0x20]
000000000004c1e0	add	sp, sp, #0x50
000000000004c1e4	b	_Kotlin_boxFloat
000000000004c1e8	nop
000000000004c1ec	ldr	x1, #0x1a37c ; Objc selector ref: intValue
000000000004c1f0	mov	x0, x20
000000000004c1f4	bl	0x4dcb8 ; Objc message: -[x0 intValue]
000000000004c1f8	mov	x21, x0
000000000004c1fc	str	xzr, [sp, #0x8]
000000000004c200	adrp	x20, 28 ; 0x68000
000000000004c204	add	x20, x20, #0xa00
000000000004c208	ldr	x22, [x20]
000000000004c20c	mov	x0, x20
000000000004c210	blr	x22
000000000004c214	ldr	x8, [x0]
000000000004c218	ldr	x9, [x8, #0x110]
000000000004c21c	add	x10, sp, #0x8
000000000004c220	str	x10, [x8, #0x110]
000000000004c224	mov	x8, #0x300000000
000000000004c228	stp	x9, x8, [sp, #0x10]
000000000004c22c	adr	x8, #0x36617
000000000004c230	nop
000000000004c234	ldarb	w8, [x8]
000000000004c238	tbz	w8, #0x0, 0x4c240
000000000004c23c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000004c240	mov	x0, x21
000000000004c244	mov	x1, x19
000000000004c248	bl	"_kfun:kotlin#<Int-box>(kotlin.Int){}kotlin.Any"
000000000004c24c	mov	x21, x0
000000000004c250	str	x0, [x19]
000000000004c254	mov	x0, x20
000000000004c258	blr	x22
000000000004c25c	ldr	x8, [x0]
000000000004c260	ldr	x9, [sp, #0x10]
000000000004c264	str	x9, [x8, #0x110]
000000000004c268	mov	x0, x21
000000000004c26c	ldp	x29, x30, [sp, #0x40]
000000000004c270	ldp	x20, x19, [sp, #0x30]
000000000004c274	ldp	x22, x21, [sp, #0x20]
000000000004c278	add	sp, sp, #0x50
000000000004c27c	ret
000000000004c280	nop
000000000004c284	ldr	x1, #0x1a30c ; Objc selector ref: longLongValue
000000000004c288	mov	x0, x20
000000000004c28c	bl	0x4dcb8 ; Objc message: -[x0 longLongValue]
000000000004c290	mov	x1, x19
000000000004c294	ldp	x29, x30, [sp, #0x40]
000000000004c298	ldp	x20, x19, [sp, #0x30]
000000000004c29c	ldp	x22, x21, [sp, #0x20]
000000000004c2a0	add	sp, sp, #0x50
000000000004c2a4	b	_Kotlin_boxLong
000000000004c2a8	nop
000000000004c2ac	ldr	x1, #0x1a39c ; Objc selector ref: shortValue
000000000004c2b0	mov	x0, x20
000000000004c2b4	bl	0x4dcb8 ; Objc message: -[x0 shortValue]
000000000004c2b8	mov	x1, x19
000000000004c2bc	ldp	x29, x30, [sp, #0x40]
000000000004c2c0	ldp	x20, x19, [sp, #0x30]
000000000004c2c4	ldp	x22, x21, [sp, #0x20]
000000000004c2c8	add	sp, sp, #0x50
000000000004c2cc	b	_Kotlin_boxShort
-[NSDecimalNumber(NSDecimalNumberToKotlin) toKotlin:]:
000000000004c2d0	stp	x22, x21, [sp, #-0x30]!
000000000004c2d4	stp	x20, x19, [sp, #0x10]
000000000004c2d8	stp	x29, x30, [sp, #0x20]
000000000004c2dc	add	x29, sp, #0x20
000000000004c2e0	mov	x21, x2
000000000004c2e4	mov	x19, x0
000000000004c2e8	bl	0x4dd24 ; symbol stub for: _object_getClass
000000000004c2ec	bl	__ZL19getOrCreateTypeInfoP10objc_class
000000000004c2f0	mov	x22, x0
000000000004c2f4	mov	x0, x19
000000000004c2f8	bl	0x4dce8 ; symbol stub for: _objc_retain
000000000004c2fc	mov	x19, x0
000000000004c300	adrp	x0, 28 ; 0x68000
000000000004c304	add	x0, x0, #0xa00
000000000004c308	ldr	x8, [x0]
000000000004c30c	blr	x8
000000000004c310	ldr	x8, [x0]
000000000004c314	ldr	x8, [x8, #0x118]
000000000004c318	ldrsw	x9, [x22, #0x14]
000000000004c31c	add	x9, x9, #0xf
000000000004c320	and	x1, x9, #0xfffffffffffffff8
000000000004c324	add	x0, x8, #0x70
000000000004c328	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000004c32c	mov	x20, x0
000000000004c330	str	x22, [x20, #0x10]!
000000000004c334	stur	xzr, [x20, #-0x8]
000000000004c338	str	x20, [x21]
000000000004c33c	ldar	x8, [x20]
000000000004c340	and	x8, x8, #0xfffffffffffffffc
000000000004c344	ldr	x9, [x8]
000000000004c348	cmp	x9, x8
000000000004c34c	csel	x0, xzr, x8, eq
000000000004c350	cbnz	x0, 0x4c35c
000000000004c354	mov	x0, x20
000000000004c358	bl	__ZN6kotlin2mm15ExtraObjectData7InstallEP9ObjHeader
000000000004c35c	add	x8, x0, #0x10
000000000004c360	stlr	x19, [x8]
000000000004c364	mov	x0, x20
000000000004c368	ldp	x29, x30, [sp, #0x20]
000000000004c36c	ldp	x20, x19, [sp, #0x10]
000000000004c370	ldp	x22, x21, [sp], #0x30
000000000004c374	ret
-[NSSet(NSSetToKotlin) toKotlin:]:
000000000004c378	sub	sp, sp, #0x50
000000000004c37c	stp	x22, x21, [sp, #0x20]
000000000004c380	stp	x20, x19, [sp, #0x30]
000000000004c384	stp	x29, x30, [sp, #0x40]
000000000004c388	add	x29, sp, #0x40
000000000004c38c	mov	x20, x2
000000000004c390	bl	0x4dce8 ; symbol stub for: _objc_retain
000000000004c394	mov	x19, x0
000000000004c398	bl	_Kotlin_initRuntimeIfNeeded
000000000004c39c	str	xzr, [sp, #0x8]
000000000004c3a0	adrp	x21, 28 ; 0x68000
000000000004c3a4	add	x21, x21, #0xa00
000000000004c3a8	ldr	x22, [x21]
000000000004c3ac	mov	x0, x21
000000000004c3b0	blr	x22
000000000004c3b4	ldr	x8, [x0]
000000000004c3b8	ldr	x9, [x8, #0x110]
000000000004c3bc	add	x10, sp, #0x8
000000000004c3c0	str	x10, [x8, #0x110]
000000000004c3c4	mov	x8, #0x300000000
000000000004c3c8	stp	x9, x8, [sp, #0x10]
000000000004c3cc	adr	x8, #0x36477
000000000004c3d0	nop
000000000004c3d4	ldarb	w8, [x8]
000000000004c3d8	tbz	w8, #0x0, 0x4c3e0
000000000004c3dc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000004c3e0	mov	x0, x21
000000000004c3e4	blr	x22
000000000004c3e8	mov	x22, x0
000000000004c3ec	ldr	x8, [x0]
000000000004c3f0	ldr	x8, [x8, #0x118]
000000000004c3f4	add	x0, x8, #0x70
000000000004c3f8	mov	w1, #0x10
000000000004c3fc	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000004c400	mov	x21, x0
000000000004c404	adr	x8, #0xa2cc
000000000004c408	nop
000000000004c40c	str	x8, [x21, #0x10]!
000000000004c410	stur	xzr, [x21, #-0x8]
000000000004c414	str	x21, [x20]
000000000004c418	ldr	x8, [x22]
000000000004c41c	ldr	x9, [sp, #0x10]
000000000004c420	str	x9, [x8, #0x110]
000000000004c424	ldar	x8, [x21]
000000000004c428	and	x8, x8, #0xfffffffffffffffc
000000000004c42c	ldr	x9, [x8]
000000000004c430	cmp	x9, x8
000000000004c434	csel	x0, xzr, x8, eq
000000000004c438	cbnz	x0, 0x4c444
000000000004c43c	mov	x0, x21
000000000004c440	bl	__ZN6kotlin2mm15ExtraObjectData7InstallEP9ObjHeader
000000000004c444	add	x8, x0, #0x10
000000000004c448	stlr	x19, [x8]
000000000004c44c	mov	x0, x21
000000000004c450	ldp	x29, x30, [sp, #0x40]
000000000004c454	ldp	x20, x19, [sp, #0x30]
000000000004c458	ldp	x22, x21, [sp, #0x20]
000000000004c45c	add	sp, sp, #0x50
000000000004c460	ret
-[NSSet(NSSetToKotlin) releaseAsAssociatedObject:]:
000000000004c464	cmp	w2, #0x1
000000000004c468	b.hi	0x4c470
000000000004c46c	b	0x4dcdc ; symbol stub for: _objc_release
000000000004c470	ret
-[NSMutableArray(NSArrayToKotlin) toKotlin:]:
000000000004c474	sub	sp, sp, #0x50
000000000004c478	stp	x22, x21, [sp, #0x20]
000000000004c47c	stp	x20, x19, [sp, #0x30]
000000000004c480	stp	x29, x30, [sp, #0x40]
000000000004c484	add	x29, sp, #0x40
000000000004c488	mov	x20, x2
000000000004c48c	bl	0x4dce8 ; symbol stub for: _objc_retain
000000000004c490	mov	x19, x0
000000000004c494	bl	_Kotlin_initRuntimeIfNeeded
000000000004c498	str	xzr, [sp, #0x8]
000000000004c49c	adrp	x21, 28 ; 0x68000
000000000004c4a0	add	x21, x21, #0xa00
000000000004c4a4	ldr	x22, [x21]
000000000004c4a8	mov	x0, x21
000000000004c4ac	blr	x22
000000000004c4b0	ldr	x8, [x0]
000000000004c4b4	ldr	x9, [x8, #0x110]
000000000004c4b8	add	x10, sp, #0x8
000000000004c4bc	str	x10, [x8, #0x110]
000000000004c4c0	mov	x8, #0x300000000
000000000004c4c4	stp	x9, x8, [sp, #0x10]
000000000004c4c8	adr	x8, #0x3637b
000000000004c4cc	nop
000000000004c4d0	ldarb	w8, [x8]
000000000004c4d4	tbz	w8, #0x0, 0x4c4dc
000000000004c4d8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000004c4dc	mov	x0, x21
000000000004c4e0	blr	x22
000000000004c4e4	mov	x22, x0
000000000004c4e8	ldr	x8, [x0]
000000000004c4ec	ldr	x8, [x8, #0x118]
000000000004c4f0	add	x0, x8, #0x70
000000000004c4f4	mov	w1, #0x18
000000000004c4f8	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000004c4fc	mov	x21, x0
000000000004c500	adr	x8, #0xa080
000000000004c504	nop
000000000004c508	str	x8, [x21, #0x10]!
000000000004c50c	stur	xzr, [x21, #-0x8]
000000000004c510	str	x21, [x20]
000000000004c514	ldr	x8, [x22]
000000000004c518	ldr	x9, [sp, #0x10]
000000000004c51c	str	x9, [x8, #0x110]
000000000004c520	ldar	x8, [x21]
000000000004c524	and	x8, x8, #0xfffffffffffffffc
000000000004c528	ldr	x9, [x8]
000000000004c52c	cmp	x9, x8
000000000004c530	csel	x0, xzr, x8, eq
000000000004c534	cbnz	x0, 0x4c540
000000000004c538	mov	x0, x21
000000000004c53c	bl	__ZN6kotlin2mm15ExtraObjectData7InstallEP9ObjHeader
000000000004c540	add	x8, x0, #0x10
000000000004c544	stlr	x19, [x8]
000000000004c548	mov	x0, x21
000000000004c54c	ldp	x29, x30, [sp, #0x40]
000000000004c550	ldp	x20, x19, [sp, #0x30]
000000000004c554	ldp	x22, x21, [sp, #0x20]
000000000004c558	add	sp, sp, #0x50
000000000004c55c	ret
-[NSMutableArray(NSArrayToKotlin) releaseAsAssociatedObject:]:
000000000004c560	cmp	w2, #0x1
000000000004c564	b.hi	0x4c56c
000000000004c568	b	0x4dcdc ; symbol stub for: _objc_release
000000000004c56c	ret
-[NSEnumerator(NSEnumeratorAsAssociatedObject) releaseAsAssociatedObject:]:
000000000004c570	cmp	w2, #0x1
000000000004c574	b.hi	0x4c57c
000000000004c578	b	0x4dcdc ; symbol stub for: _objc_release
000000000004c57c	ret
-[NSDictionary(NSDictionaryToKotlin) toKotlin:]:
000000000004c580	sub	sp, sp, #0x50
000000000004c584	stp	x22, x21, [sp, #0x20]
000000000004c588	stp	x20, x19, [sp, #0x30]
000000000004c58c	stp	x29, x30, [sp, #0x40]
000000000004c590	add	x29, sp, #0x40
000000000004c594	mov	x20, x2
000000000004c598	bl	0x4dce8 ; symbol stub for: _objc_retain
000000000004c59c	mov	x19, x0
000000000004c5a0	bl	_Kotlin_initRuntimeIfNeeded
000000000004c5a4	str	xzr, [sp, #0x8]
000000000004c5a8	adrp	x21, 28 ; 0x68000
000000000004c5ac	add	x21, x21, #0xa00
000000000004c5b0	ldr	x22, [x21]
000000000004c5b4	mov	x0, x21
000000000004c5b8	blr	x22
000000000004c5bc	ldr	x8, [x0]
000000000004c5c0	ldr	x9, [x8, #0x110]
000000000004c5c4	add	x10, sp, #0x8
000000000004c5c8	str	x10, [x8, #0x110]
000000000004c5cc	mov	x8, #0x300000000
000000000004c5d0	stp	x9, x8, [sp, #0x10]
000000000004c5d4	adr	x8, #0x3626f
000000000004c5d8	nop
000000000004c5dc	ldarb	w8, [x8]
000000000004c5e0	tbz	w8, #0x0, 0x4c5e8
000000000004c5e4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000004c5e8	mov	x0, x21
000000000004c5ec	blr	x22
000000000004c5f0	mov	x22, x0
000000000004c5f4	ldr	x8, [x0]
000000000004c5f8	ldr	x8, [x8, #0x118]
000000000004c5fc	add	x0, x8, #0x70
000000000004c600	mov	w1, #0x10
000000000004c604	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000004c608	mov	x21, x0
000000000004c60c	adr	x8, #0xa184
000000000004c610	nop
000000000004c614	str	x8, [x21, #0x10]!
000000000004c618	stur	xzr, [x21, #-0x8]
000000000004c61c	str	x21, [x20]
000000000004c620	ldr	x8, [x22]
000000000004c624	ldr	x9, [sp, #0x10]
000000000004c628	str	x9, [x8, #0x110]
000000000004c62c	ldar	x8, [x21]
000000000004c630	and	x8, x8, #0xfffffffffffffffc
000000000004c634	ldr	x9, [x8]
000000000004c638	cmp	x9, x8
000000000004c63c	csel	x0, xzr, x8, eq
000000000004c640	cbnz	x0, 0x4c64c
000000000004c644	mov	x0, x21
000000000004c648	bl	__ZN6kotlin2mm15ExtraObjectData7InstallEP9ObjHeader
000000000004c64c	add	x8, x0, #0x10
000000000004c650	stlr	x19, [x8]
000000000004c654	mov	x0, x21
000000000004c658	ldp	x29, x30, [sp, #0x40]
000000000004c65c	ldp	x20, x19, [sp, #0x30]
000000000004c660	ldp	x22, x21, [sp, #0x20]
000000000004c664	add	sp, sp, #0x50
000000000004c668	ret
-[NSDictionary(NSDictionaryToKotlin) releaseAsAssociatedObject:]:
000000000004c66c	cmp	w2, #0x1
000000000004c670	b.hi	0x4c678
000000000004c674	b	0x4dcdc ; symbol stub for: _objc_release
000000000004c678	ret
-[NSArray(NSArrayToKotlin) toKotlin:]:
000000000004c67c	sub	sp, sp, #0x50
000000000004c680	stp	x22, x21, [sp, #0x20]
000000000004c684	stp	x20, x19, [sp, #0x30]
000000000004c688	stp	x29, x30, [sp, #0x40]
000000000004c68c	add	x29, sp, #0x40
000000000004c690	mov	x20, x2
000000000004c694	bl	0x4dce8 ; symbol stub for: _objc_retain
000000000004c698	mov	x19, x0
000000000004c69c	bl	_Kotlin_initRuntimeIfNeeded
000000000004c6a0	str	xzr, [sp, #0x8]
000000000004c6a4	adrp	x21, 28 ; 0x68000
000000000004c6a8	add	x21, x21, #0xa00
000000000004c6ac	ldr	x22, [x21]
000000000004c6b0	mov	x0, x21
000000000004c6b4	blr	x22
000000000004c6b8	ldr	x8, [x0]
000000000004c6bc	ldr	x9, [x8, #0x110]
000000000004c6c0	add	x10, sp, #0x8
000000000004c6c4	str	x10, [x8, #0x110]
000000000004c6c8	mov	x8, #0x300000000
000000000004c6cc	stp	x9, x8, [sp, #0x10]
000000000004c6d0	adr	x8, #0x36173
000000000004c6d4	nop
000000000004c6d8	ldarb	w8, [x8]
000000000004c6dc	tbz	w8, #0x0, 0x4c6e4
000000000004c6e0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000004c6e4	mov	x0, x21
000000000004c6e8	blr	x22
000000000004c6ec	mov	x22, x0
000000000004c6f0	ldr	x8, [x0]
000000000004c6f4	ldr	x8, [x8, #0x118]
000000000004c6f8	add	x0, x8, #0x70
000000000004c6fc	mov	w1, #0x10
000000000004c700	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000004c704	mov	x21, x0
000000000004c708	adr	x8, #0x9d88
000000000004c70c	nop
000000000004c710	str	x8, [x21, #0x10]!
000000000004c714	stur	xzr, [x21, #-0x8]
000000000004c718	str	x21, [x20]
000000000004c71c	ldr	x8, [x22]
000000000004c720	ldr	x9, [sp, #0x10]
000000000004c724	str	x9, [x8, #0x110]
000000000004c728	ldar	x8, [x21]
000000000004c72c	and	x8, x8, #0xfffffffffffffffc
000000000004c730	ldr	x9, [x8]
000000000004c734	cmp	x9, x8
000000000004c738	csel	x0, xzr, x8, eq
000000000004c73c	cbnz	x0, 0x4c748
000000000004c740	mov	x0, x21
000000000004c744	bl	__ZN6kotlin2mm15ExtraObjectData7InstallEP9ObjHeader
000000000004c748	add	x8, x0, #0x10
000000000004c74c	stlr	x19, [x8]
000000000004c750	mov	x0, x21
000000000004c754	ldp	x29, x30, [sp, #0x40]
000000000004c758	ldp	x20, x19, [sp, #0x30]
000000000004c75c	ldp	x22, x21, [sp, #0x20]
000000000004c760	add	sp, sp, #0x50
000000000004c764	ret
-[NSArray(NSArrayToKotlin) releaseAsAssociatedObject:]:
000000000004c768	cmp	w2, #0x1
000000000004c76c	b.hi	0x4c774
000000000004c770	b	0x4dcdc ; symbol stub for: _objc_release
000000000004c774	ret
__ZL15injectToRuntimev:
000000000004c778	stp	x29, x30, [sp, #-0x10]!
000000000004c77c	mov	x29, sp
000000000004c780	nop
000000000004c784	ldr	x8, #0x36364
000000000004c788	cbnz	x8, 0x4c7f8
000000000004c78c	adr	x8, #0x3635c
000000000004c790	nop
000000000004c794	adr	x9, #0x74
000000000004c798	nop
000000000004c79c	str	x9, [x8]
000000000004c7a0	ldr	x8, [x8, #0x8]
000000000004c7a4	cbnz	x8, 0x4c7f8
000000000004c7a8	adr	x8, #0x36348
000000000004c7ac	nop
000000000004c7b0	adr	x9, #0x98
000000000004c7b4	nop
000000000004c7b8	str	x9, [x8]
000000000004c7bc	ldr	x8, [x8, #0x8]
000000000004c7c0	cbnz	x8, 0x4c7f8
000000000004c7c4	adr	x8, #0x36334
000000000004c7c8	nop
000000000004c7cc	adr	x9, #0x90
000000000004c7d0	nop
000000000004c7d4	str	x9, [x8]
000000000004c7d8	ldr	x8, [x8, #0x8]
000000000004c7dc	cbnz	x8, 0x4c7f8
000000000004c7e0	adrp	x8, 54 ; 0x82000
000000000004c7e4	adr	x9, #0x22c
000000000004c7e8	nop
000000000004c7ec	str	x9, [x8, #0xb00]
000000000004c7f0	ldp	x29, x30, [sp], #0x10
000000000004c7f4	ret
000000000004c7f8	adr	x2, #0x6616 ; literal pool for: "runtime injected twice"
000000000004c7fc	nop
000000000004c800	mov	w0, #0x0
000000000004c804	bl	__ZN6kotlin8internal24RuntimeAssertFailedPanicEbPKcS2_z
__ZL39Kotlin_Interop_createKotlinObjectHolderP9ObjHeader:
000000000004c808	cbz	x0, 0x4c844
000000000004c80c	stp	x20, x19, [sp, #-0x20]!
000000000004c810	stp	x29, x30, [sp, #0x10]
000000000004c814	add	x29, sp, #0x10
000000000004c818	mov	x19, x0
000000000004c81c	nop
000000000004c820	ldr	x0, #0x19f60 ; Objc class ref: FRKKotlinObjectHolder
000000000004c824	bl	0x4dc40 ; symbol stub for: _objc_alloc
000000000004c828	nop
000000000004c82c	ldr	x1, #0x19d04 ; Objc selector ref: initWithRef:
000000000004c830	mov	x2, x19
000000000004c834	bl	0x4dcb8 ; Objc message: +[FRKKotlinObjectHolder initWithRef:]
000000000004c838	ldp	x29, x30, [sp, #0x10]
000000000004c83c	ldp	x20, x19, [sp], #0x20
000000000004c840	b	0x4dc58 ; symbol stub for: _objc_autorelease
000000000004c844	ret
__ZL39Kotlin_Interop_unwrapKotlinObjectHolderP11objc_object:
000000000004c848	cbz	x0, 0x4c858
000000000004c84c	nop
000000000004c850	ldr	x1, #0x19dc0 ; Objc selector ref: ref
000000000004c854	b	0x4dcb8 ; Objc message: -[x0 ref]
000000000004c858	ret
__ZL34Konan_ObjCInterop_getWeakReferenceP9ObjHeaderPS0_:
000000000004c85c	stp	x26, x25, [sp, #-0x50]!
000000000004c860	stp	x24, x23, [sp, #0x10]
000000000004c864	stp	x22, x21, [sp, #0x20]
000000000004c868	stp	x20, x19, [sp, #0x30]
000000000004c86c	stp	x29, x30, [sp, #0x40]
000000000004c870	add	x29, sp, #0x40
000000000004c874	mov	x20, x1
000000000004c878	ldar	x8, [x0]
000000000004c87c	and	x8, x8, #0xfffffffffffffffc
000000000004c880	ldr	x9, [x8]
000000000004c884	cmp	x8, #0x0
000000000004c888	ccmp	x9, x8, #0x4, ne
000000000004c88c	b.ne	0x4c898
000000000004c890	mov	x8, #0x0
000000000004c894	b	0x4c8a0
000000000004c898	add	x8, x8, #0x10
000000000004c89c	ldar	x8, [x8]
000000000004c8a0	add	x8, x8, #0x8
000000000004c8a4	adrp	x21, 28 ; 0x68000
000000000004c8a8	add	x21, x21, #0xa00
000000000004c8ac	ldr	x24, [x21]
000000000004c8b0	mov	x0, x21
000000000004c8b4	blr	x24
000000000004c8b8	ldr	x25, [x0]
000000000004c8bc	add	x19, x25, #0x138
000000000004c8c0	mov	w9, #0x1
000000000004c8c4	ldaxr	w23, [x19]
000000000004c8c8	stlxr	w10, w9, [x19]
000000000004c8cc	cbnz	w10, 0x4c8c4
000000000004c8d0	mov	x0, x8
000000000004c8d4	bl	0x4dcac ; symbol stub for: _objc_loadWeakRetained
000000000004c8d8	mov	x22, x0
000000000004c8dc	cbz	x25, 0x4c910
000000000004c8e0	ldaxr	w8, [x19]
000000000004c8e4	stlxr	w9, w23, [x19]
000000000004c8e8	cbnz	w9, 0x4c8e0
000000000004c8ec	cbnz	w23, 0x4c910
000000000004c8f0	cmp	w8, #0x1
000000000004c8f4	b.ne	0x4c910
000000000004c8f8	adr	x8, #0x35f4b
000000000004c8fc	nop
000000000004c900	ldarb	w8, [x8]
000000000004c904	tbz	w8, #0x0, 0x4c910
000000000004c908	mov	x0, x19
000000000004c90c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004c910	cbz	x22, 0x4c930
000000000004c914	nop
000000000004c918	ldr	x1, #0x36180
000000000004c91c	mov	x0, x22
000000000004c920	mov	x2, x20
000000000004c924	bl	0x4dcb8 ; Objc message: -[x0 ref]
000000000004c928	mov	x23, x0
000000000004c92c	b	0x4c938
000000000004c930	mov	x23, #0x0
000000000004c934	str	xzr, [x20]
000000000004c938	mov	x0, x21
000000000004c93c	blr	x24
000000000004c940	ldr	x24, [x0]
000000000004c944	add	x19, x24, #0x138
000000000004c948	mov	w8, #0x1
000000000004c94c	ldaxr	w21, [x19]
000000000004c950	stlxr	w9, w8, [x19]
000000000004c954	cbnz	w9, 0x4c94c
000000000004c958	mov	x0, x22
000000000004c95c	bl	0x4dcdc ; symbol stub for: _objc_release
000000000004c960	cbz	x24, 0x4c994
000000000004c964	ldaxr	w8, [x19]
000000000004c968	stlxr	w9, w21, [x19]
000000000004c96c	cbnz	w9, 0x4c964
000000000004c970	cbnz	w21, 0x4c994
000000000004c974	cmp	w8, #0x1
000000000004c978	b.ne	0x4c994
000000000004c97c	adr	x8, #0x35ec7
000000000004c980	nop
000000000004c984	ldarb	w8, [x8]
000000000004c988	tbz	w8, #0x0, 0x4c994
000000000004c98c	mov	x0, x19
000000000004c990	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004c994	mov	x0, x23
000000000004c998	ldp	x29, x30, [sp, #0x40]
000000000004c99c	ldp	x20, x19, [sp, #0x30]
000000000004c9a0	ldp	x22, x21, [sp, #0x20]
000000000004c9a4	ldp	x24, x23, [sp, #0x10]
000000000004c9a8	ldp	x26, x25, [sp], #0x50
000000000004c9ac	ret
000000000004c9b0	bl	___clang_call_terminate
000000000004c9b4	mov	x20, x0
000000000004c9b8	cbz	x24, 0x4ca08
000000000004c9bc	ldaxr	w8, [x19]
000000000004c9c0	stlxr	w9, w21, [x19]
000000000004c9c4	cbnz	w9, 0x4c9bc
000000000004c9c8	cbz	w21, 0x4c9e8
000000000004c9cc	b	0x4ca08
000000000004c9d0	mov	x20, x0
000000000004c9d4	cbz	x25, 0x4ca08
000000000004c9d8	ldaxr	w8, [x19]
000000000004c9dc	stlxr	w9, w23, [x19]
000000000004c9e0	cbnz	w9, 0x4c9d8
000000000004c9e4	cbnz	w23, 0x4ca08
000000000004c9e8	cmp	w8, #0x1
000000000004c9ec	b.ne	0x4ca08
000000000004c9f0	adr	x8, #0x35e53
000000000004c9f4	nop
000000000004c9f8	ldarb	w8, [x8]
000000000004c9fc	tbz	w8, #0x0, 0x4ca08
000000000004ca00	mov	x0, x19
000000000004ca04	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004ca08	mov	x0, x20
000000000004ca0c	bl	0x4d8e0 ; symbol stub for: __Unwind_Resume
__ZL35Konan_ObjCInterop_initWeakReferenceP9ObjHeaderP11objc_object:
000000000004ca10	stp	x22, x21, [sp, #-0x30]!
000000000004ca14	stp	x20, x19, [sp, #0x10]
000000000004ca18	stp	x29, x30, [sp, #0x20]
000000000004ca1c	add	x29, sp, #0x20
000000000004ca20	mov	x21, x1
000000000004ca24	mov	x19, x0
000000000004ca28	nop
000000000004ca2c	ldr	x0, #0x19d5c ; Objc class ref: FRKKotlinObjCWeakReference
000000000004ca30	nop
000000000004ca34	ldr	x1, #0x19b7c ; Objc selector ref: new
000000000004ca38	bl	0x4dcb8 ; Objc message: +[FRKKotlinObjCWeakReference new]
000000000004ca3c	mov	x20, x0
000000000004ca40	add	x0, x0, #0x8
000000000004ca44	mov	x1, x21
000000000004ca48	bl	0x4dd18 ; symbol stub for: _objc_storeWeak
000000000004ca4c	ldar	x8, [x19]
000000000004ca50	and	x8, x8, #0xfffffffffffffffc
000000000004ca54	ldr	x9, [x8]
000000000004ca58	cmp	x9, x8
000000000004ca5c	csel	x0, xzr, x8, eq
000000000004ca60	cbz	x0, 0x4ca7c
000000000004ca64	add	x8, x0, #0x10
000000000004ca68	stlr	x20, [x8]
000000000004ca6c	ldp	x29, x30, [sp, #0x20]
000000000004ca70	ldp	x20, x19, [sp, #0x10]
000000000004ca74	ldp	x22, x21, [sp], #0x30
000000000004ca78	ret
000000000004ca7c	mov	x0, x19
000000000004ca80	bl	__ZN6kotlin2mm15ExtraObjectData7InstallEP9ObjHeader
000000000004ca84	add	x8, x0, #0x10
000000000004ca88	stlr	x20, [x8]
000000000004ca8c	ldp	x29, x30, [sp, #0x20]
000000000004ca90	ldp	x20, x19, [sp, #0x10]
000000000004ca94	ldp	x22, x21, [sp], #0x30
000000000004ca98	ret
_Kotlin_Interop_CreateRetainedNSArrayFromKList:
000000000004ca9c	mov	x2, x0
000000000004caa0	nop
000000000004caa4	ldr	x0, #0x19ca4 ; Objc class ref: FRKKListAsNSArray
000000000004caa8	nop
000000000004caac	ldr	x1, #0x199b4 ; Objc selector ref: createRetainedWithKList:
000000000004cab0	b	0x4dcb8 ; Objc message: +[FRKKListAsNSArray createRetainedWithKList:]
_Kotlin_Interop_CreateRetainedNSMutableArrayFromKList:
000000000004cab4	mov	x2, x0
000000000004cab8	nop
000000000004cabc	ldr	x0, #0x19c94 ; Objc class ref: FRKKMutableListAsNSMutableArray
000000000004cac0	nop
000000000004cac4	ldr	x1, #0x1999c ; Objc selector ref: createRetainedWithKList:
000000000004cac8	b	0x4dcb8 ; Objc message: +[FRKKMutableListAsNSMutableArray createRetainedWithKList:]
_Kotlin_Interop_CreateRetainedNSSetFromKSet:
000000000004cacc	mov	x2, x0
000000000004cad0	nop
000000000004cad4	ldr	x0, #0x19c84 ; Objc class ref: FRKKSetAsNSSet
000000000004cad8	nop
000000000004cadc	ldr	x1, #0x19994 ; Objc selector ref: createRetainedWithKSet:
000000000004cae0	b	0x4dcb8 ; Objc message: +[FRKKSetAsNSSet createRetainedWithKSet:]
_Kotlin_Interop_CreateRetainedKotlinMutableSetFromKSet:
000000000004cae4	stp	x20, x19, [sp, #-0x20]!
000000000004cae8	stp	x29, x30, [sp, #0x10]
000000000004caec	add	x29, sp, #0x10
000000000004caf0	mov	x19, x0
000000000004caf4	nop
000000000004caf8	ldr	x0, #0x19c70 ; Objc class ref: FRKMutableSet
000000000004cafc	bl	0x4dc40 ; symbol stub for: _objc_alloc
000000000004cb00	nop
000000000004cb04	ldr	x1, #0x19a1c ; Objc selector ref: initWithKSet:
000000000004cb08	mov	x2, x19
000000000004cb0c	ldp	x29, x30, [sp, #0x10]
000000000004cb10	ldp	x20, x19, [sp], #0x20
000000000004cb14	b	0x4dcb8 ; Objc message: +[FRKMutableSet initWithKSet:]
_Kotlin_Interop_CreateRetainedNSDictionaryFromKMap:
000000000004cb18	mov	x2, x0
000000000004cb1c	nop
000000000004cb20	ldr	x0, #0x19c40 ; Objc class ref: FRKKMapAsNSDictionary
000000000004cb24	nop
000000000004cb28	ldr	x1, #0x19940 ; Objc selector ref: createRetainedWithKMap:
000000000004cb2c	b	0x4dcb8 ; Objc message: +[FRKKMapAsNSDictionary createRetainedWithKMap:]
_Kotlin_Interop_CreateRetainedKotlinMutableDictionaryFromKMap:
000000000004cb30	stp	x20, x19, [sp, #-0x20]!
000000000004cb34	stp	x29, x30, [sp, #0x10]
000000000004cb38	add	x29, sp, #0x10
000000000004cb3c	mov	x19, x0
000000000004cb40	nop
000000000004cb44	ldr	x0, #0x19c2c ; Objc class ref: FRKMutableDictionary
000000000004cb48	bl	0x4dc40 ; symbol stub for: _objc_alloc
000000000004cb4c	nop
000000000004cb50	ldr	x1, #0x199c8 ; Objc selector ref: initWithKMap:
000000000004cb54	mov	x2, x19
000000000004cb58	ldp	x29, x30, [sp, #0x10]
000000000004cb5c	ldp	x20, x19, [sp], #0x20
000000000004cb60	b	0x4dcb8 ; Objc message: +[FRKMutableDictionary initWithKMap:]
_OUTLINED_FUNCTION_0:
000000000004cb64	ldr	x0, [x0]
000000000004cb68	b	0x4dba4 ; symbol stub for: _free
__GLOBAL__sub_I_CallsChecker.cpp:
000000000004cb6c	stp	x22, x21, [sp, #-0x30]!
000000000004cb70	stp	x20, x19, [sp, #0x10]
000000000004cb74	stp	x29, x30, [sp, #0x20]
000000000004cb78	add	x29, sp, #0x20
000000000004cb7c	adr	x8, #0x1cd64
000000000004cb80	nop
000000000004cb84	movi.16b	v0, #0x0
000000000004cb88	stp	q0, q0, [x8]
000000000004cb8c	mov	w9, #0x3f800000
000000000004cb90	str	w9, [x8, #0x20]
000000000004cb94	add	x19, x8, #0x28
000000000004cb98	mov	x0, x19
000000000004cb9c	mov	w1, #0xec0
000000000004cba0	bl	0x4db14 ; symbol stub for: _bzero
000000000004cba4	mov	x21, #0x0
000000000004cba8	adr	x22, #0x157f8
000000000004cbac	nop
000000000004cbb0	ldr	x20, [x22, x21]
000000000004cbb4	mov	x0, x20
000000000004cbb8	bl	0x4de74 ; symbol stub for: _strlen
000000000004cbbc	stp	x20, x0, [x19], #0x10
000000000004cbc0	add	x21, x21, #0x8
000000000004cbc4	cmp	x21, #0x760
000000000004cbc8	b.ne	0x4cbb0
000000000004cbcc	adr	x0, #0x1cd3c
000000000004cbd0	nop
000000000004cbd4	add	x1, x0, #0xec0
000000000004cbd8	ldp	x29, x30, [sp, #0x20]
000000000004cbdc	ldp	x20, x19, [sp, #0x10]
000000000004cbe0	ldp	x22, x21, [sp], #0x30
000000000004cbe4	b	__ZNSt3__16__sortIRNS_6__lessINS_17basic_string_viewIcNS_11char_traitsIcEEEES5_EEPS5_EEvT0_S9_T_
__GLOBAL__sub_I_GlobalData.cpp:
000000000004cbe8	sub	sp, sp, #0x120
000000000004cbec	stp	x28, x27, [sp, #0xc0]
000000000004cbf0	stp	x26, x25, [sp, #0xd0]
000000000004cbf4	stp	x24, x23, [sp, #0xe0]
000000000004cbf8	stp	x22, x21, [sp, #0xf0]
000000000004cbfc	stp	x20, x19, [sp, #0x100]
000000000004cc00	stp	x29, x30, [sp, #0x110]
000000000004cc04	add	x29, sp, #0x110
000000000004cc08	adr	x8, #0x35f28
000000000004cc0c	nop
000000000004cc10	stp	xzr, xzr, [x8]
000000000004cc14	add	x0, x8, #0x10
000000000004cc18	bl	0x4d964 ; symbol stub for: __ZNSt3__115recursive_mutexC1Ev
000000000004cc1c	adr	x25, #0x35f64
000000000004cc20	nop
000000000004cc24	str	wzr, [x25]
000000000004cc28	mov	w24, #0xb1bb
000000000004cc2c	movk	w24, #0x3cb0, lsl #16
000000000004cc30	mov	w23, #0xaba7
000000000004cc34	movk	w23, #0x32aa, lsl #16
000000000004cc38	add	x8, x25, #0x10
000000000004cc3c	stp	xzr, x8, [x25, #0x8]
000000000004cc40	stp	x8, xzr, [x25, #0x18]
000000000004cc44	add	x8, x25, #0x28
000000000004cc48	stp	x8, x8, [x25, #0x28]
000000000004cc4c	str	xzr, [x25, #0x38]
000000000004cc50	strb	wzr, [x25, #0x40]
000000000004cc54	add	x8, x25, #0x48
000000000004cc58	stp	x8, x8, [x25, #0x48]
000000000004cc5c	add	x8, x25, #0x60
000000000004cc60	stp	xzr, x8, [x25, #0x58]
000000000004cc64	stp	x8, xzr, [x25, #0x68]
000000000004cc68	strb	wzr, [x25, #0x78]
000000000004cc6c	add	x8, x25, #0x80
000000000004cc70	stp	x8, x8, [x25, #0x80]
000000000004cc74	add	x8, x25, #0x98
000000000004cc78	stp	xzr, x8, [x25, #0x90]
000000000004cc7c	stp	x8, xzr, [x25, #0xa0]
000000000004cc80	strb	wzr, [x25, #0xb0]
000000000004cc84	mov	w19, #0x1
000000000004cc88	mov	w0, #0x1
000000000004cc8c	mov	w1, #0x238
000000000004cc90	bl	0x4db20 ; symbol stub for: _calloc
000000000004cc94	mov	x20, x0
000000000004cc98	str	xzr, [x0, #0x10]
000000000004cc9c	movi.16b	v0, #0x0
000000000004cca0	stur	q0, [x0, #0x18]
000000000004cca4	mov	w8, #0x86a0
000000000004cca8	movk	w8, #0x1, lsl #16
000000000004ccac	mov	x9, x0
000000000004ccb0	str	w8, [x9, #0x30]!
000000000004ccb4	add	x8, x0, #0x8
000000000004ccb8	strb	wzr, [x0, #0x28]
000000000004ccbc	mov	w10, #0x2800
000000000004ccc0	str	x10, [x0, #0x38]
000000000004ccc4	strb	w19, [x0, #0x40]
000000000004ccc8	nop
000000000004cccc	ldr	q0, 0x4e570
000000000004ccd0	stur	q0, [x0, #0x48]
000000000004ccd4	mov	x10, #0x3fe0000000000000
000000000004ccd8	str	x10, [x0, #0x58]
000000000004ccdc	nop
000000000004cce0	ldr	q0, 0x4e580
000000000004cce4	str	q0, [x0, #0x60]
000000000004cce8	mov	x28, x0
000000000004ccec	str	x8, [x28, #0x98]!
000000000004ccf0	str	x9, [x0, #0xa0]
000000000004ccf4	add	x27, x0, #0xb0
000000000004ccf8	nop
000000000004ccfc	ldr	q0, 0x4e590
000000000004cd00	stur	q0, [x0, #0xa8]
000000000004cd04	movi.16b	v0, #0x0
000000000004cd08	stur	q0, [x0, #0xb8]
000000000004cd0c	stur	q0, [x0, #0xc8]
000000000004cd10	stur	q0, [x0, #0xd8]
000000000004cd14	stur	q0, [x0, #0xe8]
000000000004cd18	stp	x27, x24, [x0, #0xf8]
000000000004cd1c	add	x8, x0, #0x108
000000000004cd20	stp	q0, q0, [x8]
000000000004cd24	str	q0, [x8, #0x20]
000000000004cd28	stp	x27, x24, [x0, #0x138]
000000000004cd2c	add	x8, x0, #0x148
000000000004cd30	stp	q0, q0, [x8]
000000000004cd34	str	q0, [x8, #0x20]
000000000004cd38	stp	x27, x24, [x0, #0x178]
000000000004cd3c	add	x8, x0, #0x188
000000000004cd40	stp	q0, q0, [x8, #0x10]
000000000004cd44	str	q0, [x8]
000000000004cd48	stp	x27, x24, [x0, #0x1b8]
000000000004cd4c	add	x8, x0, #0x1c8
000000000004cd50	stp	q0, q0, [x8]
000000000004cd54	stur	q0, [x8, #0x19]
000000000004cd58	mov	w0, #0x1
000000000004cd5c	mov	w1, #0x180
000000000004cd60	bl	0x4db20 ; symbol stub for: _calloc
000000000004cd64	str	xzr, [x0, #0x10]
000000000004cd68	movi.16b	v0, #0x0
000000000004cd6c	stur	q0, [x0, #0x18]
000000000004cd70	str	x24, [x0, #0x28]
000000000004cd74	stp	q0, q0, [x0, #0x30]
000000000004cd78	stp	xzr, x23, [x0, #0x50]
000000000004cd7c	stp	q0, q0, [x0, #0x60]
000000000004cd80	str	q0, [x0, #0x80]
000000000004cd84	str	xzr, [x0, #0x90]
000000000004cd88	adr	x8, #0x15e60
000000000004cd8c	nop
000000000004cd90	mov	x9, x0
000000000004cd94	str	x8, [x9, #0x98]!
000000000004cd98	str	x9, [x0, #0xb0]
000000000004cd9c	str	x28, [x0, #0xa0]
000000000004cda0	strb	w19, [x0, #0xc1]
000000000004cda4	str	x23, [x0, #0xc8]
000000000004cda8	stp	q0, q0, [x0, #0xe0]
000000000004cdac	str	q0, [x0, #0xd0]
000000000004cdb0	stp	xzr, x24, [x0, #0x100]
000000000004cdb4	add	x8, x0, #0x110
000000000004cdb8	stp	q0, q0, [x0, #0x110]
000000000004cdbc	stur	q0, [x8, #0x19]
000000000004cdc0	str	x23, [x0, #0x140]
000000000004cdc4	add	x8, x0, #0x148
000000000004cdc8	stp	q0, q0, [x8]
000000000004cdcc	str	q0, [x8, #0x20]
000000000004cdd0	str	xzr, [x8, #0x30]
000000000004cdd4	str	x0, [x20, #0x200]
000000000004cdd8	add	x8, x20, #0x208
000000000004cddc	str	q0, [x8]
000000000004cde0	movi.16b	v0, #0x0
000000000004cde4	ldr	x8, [x20, #0x208]
000000000004cde8	and	x8, x8, #0x1
000000000004cdec	str	x8, [x20, #0x208]
000000000004cdf0	add	x8, x20, #0x218
000000000004cdf4	str	xzr, [x8, #0x10]
000000000004cdf8	str	q0, [x8]
000000000004cdfc	ldr	x19, [x20, #0xa0]
000000000004ce00	adr	x8, #0x15e40
000000000004ce04	nop
000000000004ce08	stp	x8, x28, [sp, #0x10]
000000000004ce0c	add	x8, sp, #0x10
000000000004ce10	str	x8, [sp, #0x28]
000000000004ce14	add	x21, x19, #0x48
000000000004ce18	ldr	x0, [x19, #0x60]
000000000004ce1c	str	xzr, [x19, #0x60]
000000000004ce20	cmp	x21, x0
000000000004ce24	b.eq	0x4ce38
000000000004ce28	cbz	x0, 0x4ce44
000000000004ce2c	ldr	x8, [x0]
000000000004ce30	ldr	x8, [x8, #0x28]
000000000004ce34	b	0x4ce40
000000000004ce38	ldr	x8, [x0]
000000000004ce3c	ldr	x8, [x8, #0x20]
000000000004ce40	blr	x8
000000000004ce44	ldr	x0, [sp, #0x28]
000000000004ce48	cbz	x0, 0x4ce64
000000000004ce4c	add	x8, sp, #0x10
000000000004ce50	cmp	x8, x0
000000000004ce54	b.eq	0x4ce9c
000000000004ce58	str	x0, [x19, #0x60]
000000000004ce5c	str	xzr, [sp, #0x28]
000000000004ce60	b	0x4ceb8
000000000004ce64	str	xzr, [x19, #0x60]
000000000004ce68	mov	x22, #0x0
000000000004ce6c	str	xzr, [sp, #0x48]
000000000004ce70	mov	w0, #0x1
000000000004ce74	mov	w1, #0xf8
000000000004ce78	bl	0x4db20 ; symbol stub for: _calloc
000000000004ce7c	mov	x21, x0
000000000004ce80	cbz	x22, 0x4ceec
000000000004ce84	add	x8, sp, #0x30
000000000004ce88	cmp	x8, x22
000000000004ce8c	b.eq	0x4cefc
000000000004ce90	add	x8, x8, #0x18
000000000004ce94	str	x22, [sp, #0x68]
000000000004ce98	b	0x4cef4
000000000004ce9c	str	x21, [x19, #0x60]
000000000004cea0	ldr	x8, [x0]
000000000004cea4	ldr	x8, [x8, #0x18]
000000000004cea8	mov	x1, x21
000000000004ceac	blr	x8
000000000004ceb0	ldr	x0, [x19, #0x60]
000000000004ceb4	cbz	x0, 0x4ce68
000000000004ceb8	add	x8, sp, #0x30
000000000004cebc	cmp	x21, x0
000000000004cec0	b.eq	0x4d080
000000000004cec4	ldr	x8, [x0]
000000000004cec8	ldr	x8, [x8, #0x10]
000000000004cecc	blr	x8
000000000004ced0	mov	x22, x0
000000000004ced4	str	x0, [sp, #0x48]
000000000004ced8	mov	w0, #0x1
000000000004cedc	mov	w1, #0xf8
000000000004cee0	bl	0x4db20 ; symbol stub for: _calloc
000000000004cee4	mov	x21, x0
000000000004cee8	cbnz	x22, 0x4ce84
000000000004ceec	add	x8, sp, #0x50
000000000004cef0	add	x8, x8, #0x18
000000000004cef4	str	xzr, [x8]
000000000004cef8	b	0x4cf18
000000000004cefc	add	x8, sp, #0x50
000000000004cf00	str	x8, [sp, #0x68]
000000000004cf04	ldr	x8, [x22]
000000000004cf08	ldr	x8, [x8, #0x18]
000000000004cf0c	add	x1, sp, #0x50
000000000004cf10	mov	x0, x22
000000000004cf14	blr	x8
000000000004cf18	adr	x8, #0x15438
000000000004cf1c	nop
000000000004cf20	stp	x8, x19, [x21]
000000000004cf24	stp	x25, x19, [x21, #0x10]
000000000004cf28	stp	xzr, xzr, [x21, #0x20]
000000000004cf2c	str	x19, [x21, #0x30]
000000000004cf30	bl	0x4d9dc ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
000000000004cf34	str	x0, [x21, #0x38]
000000000004cf38	ldr	x0, [sp, #0x68]
000000000004cf3c	cbz	x0, 0x4cf58
000000000004cf40	add	x8, sp, #0x50
000000000004cf44	cmp	x8, x0
000000000004cf48	b.eq	0x4cf64
000000000004cf4c	add	x8, x8, #0x18
000000000004cf50	str	x0, [x21, #0x58]
000000000004cf54	b	0x4cf5c
000000000004cf58	add	x8, x21, #0x58
000000000004cf5c	str	xzr, [x8]
000000000004cf60	b	0x4cf78
000000000004cf64	add	x1, x21, #0x40
000000000004cf68	str	x1, [x21, #0x58]
000000000004cf6c	ldr	x8, [x0]
000000000004cf70	ldr	x8, [x8, #0x18]
000000000004cf74	blr	x8
000000000004cf78	ldr	x8, [x21, #0x8]
000000000004cf7c	add	x8, x8, #0x18
000000000004cf80	ldar	x8, [x8]
000000000004cf84	mov	x22, x21
000000000004cf88	str	x23, [x22, #0x60]!
000000000004cf8c	movi.16b	v0, #0x0
000000000004cf90	stur	q0, [x22, #0x8]
000000000004cf94	stur	q0, [x22, #0x18]
000000000004cf98	stur	q0, [x22, #0x28]
000000000004cf9c	str	xzr, [x22, #0x38]
000000000004cfa0	mov	x23, x22
000000000004cfa4	str	x24, [x23, #0x40]!
000000000004cfa8	stur	q0, [x22, #0x48]
000000000004cfac	stur	q0, [x22, #0x58]
000000000004cfb0	str	xzr, [x22, #0x68]
000000000004cfb4	mov	w9, #0x1
000000000004cfb8	strb	w9, [x22, #0x70]
000000000004cfbc	mov	w9, #0x3e8
000000000004cfc0	mul	x10, x8, x9
000000000004cfc4	smulh	x9, x8, x9
000000000004cfc8	cmp	x9, x10, asr #63
000000000004cfcc	asr	x8, x8, #63
000000000004cfd0	eor	x8, x8, #0x7fffffffffffffff
000000000004cfd4	csel	x8, x8, x10, ne
000000000004cfd8	str	x8, [x22, #0x78]
000000000004cfdc	bl	0x4d9dc ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
000000000004cfe0	ldr	x8, [x22, #0x78]
000000000004cfe4	adds	x8, x0, x8
000000000004cfe8	asr	x9, x8, #63
000000000004cfec	eor	x9, x9, #0x8000000000000000
000000000004cff0	csel	x8, x9, x8, vs
000000000004cff4	str	x8, [x22, #0x80]
000000000004cff8	strb	wzr, [x22, #0x88]
000000000004cffc	movi.16b	v0, #0x0
000000000004d000	stp	q0, q0, [sp, #0x70]
000000000004d004	adr	x1, #0x4052 ; literal pool for: "GC Timer thread"
000000000004d008	nop
000000000004d00c	add	x0, sp, #0x70
000000000004d010	mov	w2, #0xf
000000000004d014	bl	__ZNSt3__18optionalINS_12basic_stringIcNS_11char_traitsIcEEN6kotlin11std_support9allocatorIcEEEEEaSIRNS_17basic_string_viewIcS3_EEvEERS9_OT_
000000000004d018	mov	w0, #0x8
000000000004d01c	bl	0x4da60 ; symbol stub for: __Znwm
000000000004d020	mov	x25, x0
000000000004d024	bl	0x4d934 ; symbol stub for: __ZNSt3__115__thread_structC1Ev
000000000004d028	mov	w0, #0x50
000000000004d02c	bl	0x4da60 ; symbol stub for: __Znwm
000000000004d030	mov	x24, x0
000000000004d034	sturb	wzr, [x29, #-0x80]
000000000004d038	sturb	wzr, [x29, #-0x68]
000000000004d03c	ldrb	w8, [sp, #0x88]
000000000004d040	cbz	w8, 0x4d060
000000000004d044	ldrsb	w8, [sp, #0x87]
000000000004d048	tbnz	w8, #0x1f, 0x4d068
000000000004d04c	ldr	q0, [sp, #0x70]
000000000004d050	stur	q0, [x29, #-0x80]
000000000004d054	ldr	x8, [sp, #0x80]
000000000004d058	stur	x8, [x29, #-0x70]
000000000004d05c	b	0x4d0e8
000000000004d060	mov	w8, #0x1
000000000004d064	b	0x4d0f4
000000000004d068	ldp	x1, x26, [sp, #0x70]
000000000004d06c	cmp	x26, #0x16
000000000004d070	b.hi	0x4d0b0
000000000004d074	sub	x0, x29, #0x80
000000000004d078	sturb	w26, [x29, #-0x69]
000000000004d07c	b	0x4d0e0
000000000004d080	str	x8, [sp, #0x48]
000000000004d084	ldr	x8, [x0]
000000000004d088	ldr	x8, [x8, #0x18]
000000000004d08c	add	x1, sp, #0x30
000000000004d090	blr	x8
000000000004d094	ldr	x22, [sp, #0x48]
000000000004d098	mov	w0, #0x1
000000000004d09c	mov	w1, #0xf8
000000000004d0a0	bl	0x4db20 ; symbol stub for: _calloc
000000000004d0a4	mov	x21, x0
000000000004d0a8	cbnz	x22, 0x4ce84
000000000004d0ac	b	0x4ceec
000000000004d0b0	stp	x1, x27, [sp]
000000000004d0b4	cmn	x26, #0x10
000000000004d0b8	b.hs	0x4d3cc
000000000004d0bc	add	x8, x26, #0x10
000000000004d0c0	and	x27, x8, #0xfffffffffffffff0
000000000004d0c4	mov	x0, x27
000000000004d0c8	mov	w1, #0x1
000000000004d0cc	bl	0x4db20 ; symbol stub for: _calloc
000000000004d0d0	orr	x8, x27, #0x8000000000000000
000000000004d0d4	stp	x26, x8, [x29, #-0x78]
000000000004d0d8	stur	x0, [x29, #-0x80]
000000000004d0dc	ldp	x1, x27, [sp]
000000000004d0e0	add	x2, x26, #0x1
000000000004d0e4	bl	0x4dbec ; symbol stub for: _memcpy
000000000004d0e8	mov	w8, #0x0
000000000004d0ec	mov	w9, #0x1
000000000004d0f0	sturb	w9, [x29, #-0x68]
000000000004d0f4	add	x0, x21, #0xf0
000000000004d0f8	adr	x9, #-0x261d0
000000000004d0fc	nop
000000000004d100	stp	x25, x9, [x24]
000000000004d104	mov	x25, x24
000000000004d108	strb	wzr, [x25, #0x10]!
000000000004d10c	strb	wzr, [x24, #0x28]
000000000004d110	tbnz	w8, #0x0, 0x4d134
000000000004d114	ldur	q0, [x29, #-0x80]
000000000004d118	str	q0, [x25]
000000000004d11c	ldur	x8, [x29, #-0x70]
000000000004d120	str	x8, [x25, #0x10]
000000000004d124	stp	xzr, xzr, [x29, #-0x78]
000000000004d128	stur	xzr, [x29, #-0x80]
000000000004d12c	mov	w8, #0x1
000000000004d130	strb	w8, [x24, #0x28]
000000000004d134	adr	x8, #-0x264dc
000000000004d138	nop
000000000004d13c	movi.16b	v0, #0x0
000000000004d140	mov.d	v0[0], x8
000000000004d144	str	q0, [x24, #0x30]
000000000004d148	stp	x22, x21, [x24, #0x40]
000000000004d14c	adr	x2, #-0x261c0
000000000004d150	nop
000000000004d154	mov	x1, #0x0
000000000004d158	mov	x3, x24
000000000004d15c	bl	0x4dd78 ; symbol stub for: _pthread_create
000000000004d160	cbnz	w0, 0x4d3a8
000000000004d164	ldrb	w8, [sp, #0x88]
000000000004d168	cbz	w8, 0x4d17c
000000000004d16c	ldrsb	w8, [sp, #0x87]
000000000004d170	tbz	w8, #0x1f, 0x4d17c
000000000004d174	ldr	x0, [sp, #0x70]
000000000004d178	bl	0x4dba4 ; symbol stub for: _free
000000000004d17c	ldr	x0, [sp, #0x68]
000000000004d180	add	x8, sp, #0x50
000000000004d184	cmp	x8, x0
000000000004d188	b.eq	0x4d19c
000000000004d18c	cbz	x0, 0x4d1a8
000000000004d190	ldr	x8, [x0]
000000000004d194	ldr	x8, [x8, #0x28]
000000000004d198	b	0x4d1a4
000000000004d19c	ldr	x8, [x0]
000000000004d1a0	ldr	x8, [x8, #0x20]
000000000004d1a4	blr	x8
000000000004d1a8	ldr	x22, [x19, #0x40]
000000000004d1ac	str	x21, [x19, #0x40]
000000000004d1b0	cbz	x22, 0x4d1cc
000000000004d1b4	ldr	x8, [x22]
000000000004d1b8	ldr	x8, [x8]
000000000004d1bc	mov	x0, x22
000000000004d1c0	blr	x8
000000000004d1c4	mov	x0, x22
000000000004d1c8	bl	0x4dba4 ; symbol stub for: _free
000000000004d1cc	ldr	x0, [sp, #0x48]
000000000004d1d0	add	x8, sp, #0x30
000000000004d1d4	cmp	x8, x0
000000000004d1d8	b.eq	0x4d1ec
000000000004d1dc	cbz	x0, 0x4d1f8
000000000004d1e0	ldr	x8, [x0]
000000000004d1e4	ldr	x8, [x8, #0x28]
000000000004d1e8	b	0x4d1f4
000000000004d1ec	ldr	x8, [x0]
000000000004d1f0	ldr	x8, [x8, #0x20]
000000000004d1f4	blr	x8
000000000004d1f8	ldr	x0, [sp, #0x28]
000000000004d1fc	add	x8, sp, #0x10
000000000004d200	cmp	x8, x0
000000000004d204	b.eq	0x4d218
000000000004d208	cbz	x0, 0x4d224
000000000004d20c	ldr	x8, [x0]
000000000004d210	ldr	x8, [x8, #0x28]
000000000004d214	b	0x4d220
000000000004d218	ldr	x8, [x0]
000000000004d21c	ldr	x8, [x8, #0x20]
000000000004d220	blr	x8
000000000004d224	movi.16b	v0, #0x0
000000000004d228	stp	q0, q0, [sp, #0x70]
000000000004d22c	adr	x1, #0x4eb1 ; literal pool for: "GC thread"
000000000004d230	nop
000000000004d234	add	x0, sp, #0x70
000000000004d238	mov	w2, #0x9
000000000004d23c	bl	__ZNSt3__18optionalINS_12basic_stringIcNS_11char_traitsIcEEN6kotlin11std_support9allocatorIcEEEEEaSIRNS_17basic_string_viewIcS3_EEvEERS9_OT_
000000000004d240	add	x21, x20, #0x1f8
000000000004d244	mov	w0, #0x8
000000000004d248	bl	0x4da60 ; symbol stub for: __Znwm
000000000004d24c	mov	x24, x0
000000000004d250	bl	0x4d934 ; symbol stub for: __ZNSt3__115__thread_structC1Ev
000000000004d254	mov	w0, #0x38
000000000004d258	bl	0x4da60 ; symbol stub for: __Znwm
000000000004d25c	mov	x23, x0
000000000004d260	sturb	wzr, [x29, #-0x80]
000000000004d264	sturb	wzr, [x29, #-0x68]
000000000004d268	ldrb	w8, [sp, #0x88]
000000000004d26c	cbz	w8, 0x4d28c
000000000004d270	ldrsb	w8, [sp, #0x87]
000000000004d274	tbnz	w8, #0x1f, 0x4d294
000000000004d278	ldr	q0, [sp, #0x70]
000000000004d27c	stur	q0, [x29, #-0x80]
000000000004d280	ldr	x8, [sp, #0x80]
000000000004d284	stur	x8, [x29, #-0x70]
000000000004d288	b	0x4d2e0
000000000004d28c	mov	w8, #0x1
000000000004d290	b	0x4d2ec
000000000004d294	ldp	x22, x19, [sp, #0x70]
000000000004d298	cmp	x19, #0x16
000000000004d29c	b.hi	0x4d2ac
000000000004d2a0	sub	x0, x29, #0x80
000000000004d2a4	sturb	w19, [x29, #-0x69]
000000000004d2a8	b	0x4d2d4
000000000004d2ac	cmn	x19, #0x10
000000000004d2b0	b.hs	0x4d3d8
000000000004d2b4	add	x8, x19, #0x10
000000000004d2b8	and	x25, x8, #0xfffffffffffffff0
000000000004d2bc	mov	x0, x25
000000000004d2c0	mov	w1, #0x1
000000000004d2c4	bl	0x4db20 ; symbol stub for: _calloc
000000000004d2c8	orr	x8, x25, #0x8000000000000000
000000000004d2cc	stp	x19, x8, [x29, #-0x78]
000000000004d2d0	stur	x0, [x29, #-0x80]
000000000004d2d4	add	x2, x19, #0x1
000000000004d2d8	mov	x1, x22
000000000004d2dc	bl	0x4dbec ; symbol stub for: _memcpy
000000000004d2e0	mov	w8, #0x0
000000000004d2e4	mov	w9, #0x1
000000000004d2e8	sturb	w9, [x29, #-0x68]
000000000004d2ec	adr	x9, #-0x22b28
000000000004d2f0	nop
000000000004d2f4	stp	x24, x9, [x23]
000000000004d2f8	mov	x19, x23
000000000004d2fc	strb	wzr, [x19, #0x10]!
000000000004d300	strb	wzr, [x23, #0x28]
000000000004d304	tbnz	w8, #0x0, 0x4d328
000000000004d308	ldur	q0, [x29, #-0x80]
000000000004d30c	str	q0, [x19]
000000000004d310	ldur	x8, [x29, #-0x70]
000000000004d314	str	x8, [x19, #0x10]
000000000004d318	stp	xzr, xzr, [x29, #-0x78]
000000000004d31c	stur	xzr, [x29, #-0x80]
000000000004d320	mov	w8, #0x1
000000000004d324	strb	w8, [x23, #0x28]
000000000004d328	str	x28, [x23, #0x30]
000000000004d32c	adr	x2, #-0x22018
000000000004d330	nop
000000000004d334	add	x0, sp, #0x50
000000000004d338	mov	x1, #0x0
000000000004d33c	mov	x3, x23
000000000004d340	bl	0x4dd78 ; symbol stub for: _pthread_create
000000000004d344	cbnz	w0, 0x4d3b8
000000000004d348	ldr	x8, [x21]
000000000004d34c	cbnz	x8, 0x4d3c8
000000000004d350	ldr	x8, [sp, #0x50]
000000000004d354	str	x8, [x21]
000000000004d358	str	xzr, [sp, #0x50]
000000000004d35c	add	x0, sp, #0x50
000000000004d360	bl	0x4da00 ; symbol stub for: __ZNSt3__16threadD1Ev
000000000004d364	ldrb	w8, [sp, #0x88]
000000000004d368	cbz	w8, 0x4d37c
000000000004d36c	ldrsb	w8, [sp, #0x87]
000000000004d370	tbz	w8, #0x1f, 0x4d37c
000000000004d374	ldr	x0, [sp, #0x70]
000000000004d378	bl	0x4dba4 ; symbol stub for: _free
000000000004d37c	str	wzr, [x20, #0x230]
000000000004d380	adrp	x8, 53 ; 0x82000
000000000004d384	str	x20, [x8, #0xc38]
000000000004d388	ldp	x29, x30, [sp, #0x110]
000000000004d38c	ldp	x20, x19, [sp, #0x100]
000000000004d390	ldp	x22, x21, [sp, #0xf0]
000000000004d394	ldp	x24, x23, [sp, #0xe0]
000000000004d398	ldp	x26, x25, [sp, #0xd0]
000000000004d39c	ldp	x28, x27, [sp, #0xc0]
000000000004d3a0	add	sp, sp, #0x120
000000000004d3a4	ret
000000000004d3a8	adr	x1, #0x4d56 ; literal pool for: "thread constructor failed"
000000000004d3ac	nop
000000000004d3b0	bl	0x4d9ac ; symbol stub for: __ZNSt3__120__throw_system_errorEiPKc
000000000004d3b4	b	0x4d3e0
000000000004d3b8	adr	x1, #0x4d46 ; literal pool for: "thread constructor failed"
000000000004d3bc	nop
000000000004d3c0	bl	0x4d9ac ; symbol stub for: __ZNSt3__120__throw_system_errorEiPKc
000000000004d3c4	b	0x4d3e0
000000000004d3c8	bl	0x4da48 ; symbol stub for: __ZSt9terminatev
000000000004d3cc	sub	x0, x29, #0x80
000000000004d3d0	bl	0x4d8f8 ; symbol stub for: __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv
000000000004d3d4	b	0x4d3e0
000000000004d3d8	sub	x0, x29, #0x80
000000000004d3dc	bl	0x4d8f8 ; symbol stub for: __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv
000000000004d3e0	brk	#0x1
000000000004d3e4	mov	x19, x0
000000000004d3e8	ldurb	w8, [x29, #-0x68]
000000000004d3ec	cbz	w8, 0x4d414
000000000004d3f0	sub	x0, x29, #0x80
000000000004d3f4	bl	__ZN6kotlin2gc22ConcurrentMarkAndSweepC2ERNS_2mm13ObjectFactoryIS1_EERNS0_11GCSchedulerE.cold.1
000000000004d3f8	mov	x0, x19
000000000004d3fc	bl	___clang_call_terminate
000000000004d400	mov	x19, x0
000000000004d404	ldurb	w8, [x29, #-0x68]
000000000004d408	cbz	w8, 0x4d414
000000000004d40c	sub	x0, x29, #0x80
000000000004d410	bl	__ZNSt3__16threadC2IPFvN6kotlin12ScopedThread10attributesEOMNS2_13RepeatedTimerINS2_12steady_clockEEEDoFvOZNS2_2gc8internal24GCSchedulerDataWithTimerIS6_EC1ERNS8_17GCSchedulerConfigENS_8functionIFvvEEEEUlvE_EOPS7_SI_EJRKS4_SK_SM_SH_EvEEOT_DpOT0_.cold.1
000000000004d414	mov	x0, x19
000000000004d418	bl	___clang_call_terminate
000000000004d41c	bl	___clang_call_terminate
000000000004d420	bl	___clang_call_terminate
000000000004d424	bl	___clang_call_terminate
000000000004d428	bl	___clang_call_terminate
000000000004d42c	mov	x25, x27
000000000004d430	mov	x22, x0
000000000004d434	mov	x0, x24
000000000004d438	bl	0x4d940 ; symbol stub for: __ZNSt3__115__thread_structD1Ev
000000000004d43c	b	0x4d4c8
000000000004d440	mov	x25, x27
000000000004d444	mov	x22, x0
000000000004d448	b	0x4d4c8
000000000004d44c	mov	x25, x27
000000000004d450	mov	x22, x0
000000000004d454	b	0x4d4d0
000000000004d458	bl	___clang_call_terminate
000000000004d45c	mov	x19, x0
000000000004d460	mov	x0, x25
000000000004d464	bl	0x4d940 ; symbol stub for: __ZNSt3__115__thread_structD1Ev
000000000004d468	b	0x4d688
000000000004d46c	mov	x19, x0
000000000004d470	b	0x4d688
000000000004d474	mov	x19, x0
000000000004d478	b	0x4d690
000000000004d47c	bl	___clang_call_terminate
000000000004d480	mov	x19, x0
000000000004d484	bl	__ZNSt3__110unique_ptrIN6kotlin14SingleLockListINS1_2mm10ThreadDataENS_15recursive_mutexENS1_11std_support9allocatorIS4_EEE4NodeENS6_17allocator_deleterISA_NS7_ISA_EEEEED1Ev
000000000004d488	mov	x0, x19
000000000004d48c	bl	___clang_call_terminate
000000000004d490	mov	x25, x27
000000000004d494	mov	x22, x0
000000000004d498	ldrb	w8, [x23, #0x28]
000000000004d49c	cbz	w8, 0x4d4b0
000000000004d4a0	ldrsb	w8, [x23, #0x27]
000000000004d4a4	tbz	w8, #0x1f, 0x4d4b0
000000000004d4a8	ldr	x0, [x19]
000000000004d4ac	bl	0x4dba4 ; symbol stub for: _free
000000000004d4b0	ldr	x0, [x23]
000000000004d4b4	str	xzr, [x23]
000000000004d4b8	cbz	x0, 0x4d4c4
000000000004d4bc	bl	0x4d940 ; symbol stub for: __ZNSt3__115__thread_structD1Ev
000000000004d4c0	bl	0x4da54 ; symbol stub for: __ZdlPv
000000000004d4c4	mov	x24, x23
000000000004d4c8	mov	x0, x24
000000000004d4cc	bl	0x4da54 ; symbol stub for: __ZdlPv
000000000004d4d0	ldrb	w8, [sp, #0x88]
000000000004d4d4	cbz	w8, 0x4d4e8
000000000004d4d8	ldrsb	w8, [sp, #0x87]
000000000004d4dc	tbz	w8, #0x1f, 0x4d4e8
000000000004d4e0	ldr	x0, [sp, #0x70]
000000000004d4e4	bl	0x4dba4 ; symbol stub for: _free
000000000004d4e8	ldr	x23, [x20, #0x200]
000000000004d4ec	str	xzr, [x20, #0x200]
000000000004d4f0	cbnz	x23, 0x4d50c
000000000004d4f4	mov	x0, x21
000000000004d4f8	bl	__ZN6kotlin12ScopedThreadD1Ev
000000000004d4fc	mov	x0, x25
000000000004d500	bl	__ZN13GCStateHolderD1Ev
000000000004d504	mov	x0, x22
000000000004d508	bl	___clang_call_terminate
000000000004d50c	add	x20, x23, #0x58
000000000004d510	mov	x0, x20
000000000004d514	bl	0x4d9b8 ; symbol stub for: __ZNSt3__15mutex4lockEv
000000000004d518	ldr	x8, [x23]
000000000004d51c	cbnz	x8, 0x4d55c
000000000004d520	mov	x0, x20
000000000004d524	bl	0x4d9c4 ; symbol stub for: __ZNSt3__15mutex6unlockEv
000000000004d528	add	x0, x23, #0x140
000000000004d52c	bl	0x4d9d0 ; symbol stub for: __ZNSt3__15mutexD1Ev
000000000004d530	add	x0, x23, #0x108
000000000004d534	bl	0x4d994 ; symbol stub for: __ZNSt3__118condition_variableD1Ev
000000000004d538	add	x0, x23, #0xc8
000000000004d53c	bl	0x4d9d0 ; symbol stub for: __ZNSt3__15mutexD1Ev
000000000004d540	add	x8, x23, #0x98
000000000004d544	ldr	x0, [x23, #0xb0]
000000000004d548	cmp	x8, x0
000000000004d54c	b.ne	0x4d5a0
000000000004d550	ldr	x8, [x0]
000000000004d554	ldr	x8, [x8, #0x20]
000000000004d558	b	0x4d5ac
000000000004d55c	mov	w8, #0x1
000000000004d560	strb	w8, [x23, #0xc0]
000000000004d564	add	x24, x23, #0x28
000000000004d568	mov	x0, x24
000000000004d56c	bl	0x4d970 ; symbol stub for: __ZNSt3__118condition_variable10notify_allEv
000000000004d570	mov	x0, x20
000000000004d574	bl	0x4d9c4 ; symbol stub for: __ZNSt3__15mutex6unlockEv
000000000004d578	mov	x0, x23
000000000004d57c	bl	0x4d9f4 ; symbol stub for: __ZNSt3__16thread4joinEv
000000000004d580	strb	wzr, [x23, #0xc0]
000000000004d584	mov	x0, x20
000000000004d588	bl	0x4d9b8 ; symbol stub for: __ZNSt3__15mutex4lockEv
000000000004d58c	mov	w8, #0x1
000000000004d590	strb	w8, [x23, #0xc1]
000000000004d594	mov	x0, x24
000000000004d598	bl	0x4d970 ; symbol stub for: __ZNSt3__118condition_variable10notify_allEv
000000000004d59c	b	0x4d520
000000000004d5a0	cbz	x0, 0x4d5b0
000000000004d5a4	ldr	x8, [x0]
000000000004d5a8	ldr	x8, [x8, #0x28]
000000000004d5ac	blr	x8
000000000004d5b0	mov	x0, x20
000000000004d5b4	bl	0x4d9d0 ; symbol stub for: __ZNSt3__15mutexD1Ev
000000000004d5b8	add	x0, x23, #0x28
000000000004d5bc	bl	0x4d994 ; symbol stub for: __ZNSt3__118condition_variableD1Ev
000000000004d5c0	ldr	x0, [x23, #0x10]
000000000004d5c4	str	xzr, [x23, #0x10]
000000000004d5c8	cbnz	x0, 0x4d5d4
000000000004d5cc	str	xzr, [x23, #0x10]
000000000004d5d0	b	0x4d600
000000000004d5d4	ldr	x19, [x0]
000000000004d5d8	str	xzr, [x0]
000000000004d5dc	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE4NodeD2Ev
000000000004d5e0	bl	_mi_free
000000000004d5e4	mov	x0, x19
000000000004d5e8	cbnz	x19, 0x4d5d4
000000000004d5ec	ldr	x0, [x23, #0x10]
000000000004d5f0	str	xzr, [x23, #0x10]
000000000004d5f4	cbz	x0, 0x4d600
000000000004d5f8	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE4NodeD2Ev
000000000004d5fc	bl	_mi_free
000000000004d600	ldr	x8, [x23]
000000000004d604	cbz	x8, 0x4d610
000000000004d608	mov	x0, x23
000000000004d60c	bl	0x4d9f4 ; symbol stub for: __ZNSt3__16thread4joinEv
000000000004d610	mov	x0, x23
000000000004d614	bl	0x4da00 ; symbol stub for: __ZNSt3__16threadD1Ev
000000000004d618	bl	0x4dba4 ; symbol stub for: _free
000000000004d61c	mov	x0, x21
000000000004d620	bl	__ZN6kotlin12ScopedThreadD1Ev
000000000004d624	mov	x0, x25
000000000004d628	bl	__ZN13GCStateHolderD1Ev
000000000004d62c	mov	x0, x22
000000000004d630	bl	___clang_call_terminate
000000000004d634	bl	___clang_call_terminate
000000000004d638	mov	x19, x0
000000000004d63c	mov	x0, x23
000000000004d640	bl	0x4da00 ; symbol stub for: __ZNSt3__16threadD1Ev
000000000004d644	mov	x0, x19
000000000004d648	bl	___clang_call_terminate
000000000004d64c	bl	___clang_call_terminate
000000000004d650	bl	___clang_call_terminate
000000000004d654	mov	x19, x0
000000000004d658	ldrb	w8, [x24, #0x28]
000000000004d65c	cbz	w8, 0x4d670
000000000004d660	ldrsb	w8, [x24, #0x27]
000000000004d664	tbz	w8, #0x1f, 0x4d670
000000000004d668	ldr	x0, [x25]
000000000004d66c	bl	0x4dba4 ; symbol stub for: _free
000000000004d670	ldr	x0, [x24]
000000000004d674	str	xzr, [x24]
000000000004d678	cbz	x0, 0x4d684
000000000004d67c	bl	0x4d940 ; symbol stub for: __ZNSt3__115__thread_structD1Ev
000000000004d680	bl	0x4da54 ; symbol stub for: __ZdlPv
000000000004d684	mov	x25, x24
000000000004d688	mov	x0, x25
000000000004d68c	bl	0x4da54 ; symbol stub for: __ZdlPv
000000000004d690	ldrb	w8, [sp, #0x88]
000000000004d694	cbz	w8, 0x4d6a0
000000000004d698	add	x0, sp, #0x70
000000000004d69c	bl	__ZN6kotlin13RepeatedTimerINS_12steady_clockEEC2IxNSt3__15ratioILl1ELl1000000EEEZNS_2gc8internal24GCSchedulerDataWithTimerIS1_EC1ERNS7_17GCSchedulerConfigENS4_8functionIFvvEEEEUlvE_EENS4_17basic_string_viewIcNS4_11char_traitsIcEEEENS4_6chrono8durationIT_T0_EEOT1_.cold.1
000000000004d6a0	mov	x0, x23
000000000004d6a4	bl	0x4d994 ; symbol stub for: __ZNSt3__118condition_variableD1Ev
000000000004d6a8	mov	x0, x22
000000000004d6ac	bl	0x4d9d0 ; symbol stub for: __ZNSt3__15mutexD1Ev
000000000004d6b0	mov	x0, x19
000000000004d6b4	bl	___clang_call_terminate
__ZN6kotlin13RepeatedTimerINS_12steady_clockEEC2IxNSt3__15ratioILl1ELl1000000EEEZNS_2gc8internal24GCSchedulerDataWithTimerIS1_EC1ERNS7_17GCSchedulerConfigENS4_8functionIFvvEEEEUlvE_EENS4_17basic_string_viewIcNS4_11char_traitsIcEEEENS4_6chrono8durationIT_T0_EEOT1_.cold.1:
000000000004d6b8	ldrsb	w8, [x0, #0x17]
000000000004d6bc	tbnz	w8, #0x1f, 0x4d6c4
000000000004d6c0	ret
000000000004d6c4	b	_OUTLINED_FUNCTION_0
__ZNSt3__16threadC2IPFvN6kotlin12ScopedThread10attributesEOMNS2_13RepeatedTimerINS2_12steady_clockEEEDoFvOZNS2_2gc8internal24GCSchedulerDataWithTimerIS6_EC1ERNS8_17GCSchedulerConfigENS_8functionIFvvEEEEUlvE_EOPS7_SI_EJRKS4_SK_SM_SH_EvEEOT_DpOT0_.cold.1:
000000000004d6c8	ldrsb	w8, [x0, #0x17]
000000000004d6cc	tbnz	w8, #0x1f, 0x4d6d4
000000000004d6d0	ret
000000000004d6d4	b	_OUTLINED_FUNCTION_0
__ZN6kotlin2gc22ConcurrentMarkAndSweepC2ERNS_2mm13ObjectFactoryIS1_EERNS0_11GCSchedulerE.cold.1:
000000000004d6d8	ldrsb	w8, [x0, #0x17]
000000000004d6dc	tbnz	w8, #0x1f, 0x4d6e4
000000000004d6e0	ret
000000000004d6e4	b	_OUTLINED_FUNCTION_0
__ZN6kotlin2gc18FinalizerProcessor26StartFinalizerThreadIfNoneEv.cold.1:
000000000004d6e8	ldrsb	w8, [x0, #0x17]
000000000004d6ec	tbnz	w8, #0x1f, 0x4d6f4
000000000004d6f0	ret
000000000004d6f4	b	_OUTLINED_FUNCTION_0
__ZN6kotlin12ScopedThread3RunIZNS_2gc18FinalizerProcessor26StartFinalizerThreadIfNoneEvE3$_0JEEENSt3__113invoke_resultIT_JDpT0_EE4typeENS0_10attributesEOS7_DpOS8_.cold.1:
000000000004d6f8	stp	x24, x23, [sp, #-0x40]!
000000000004d6fc	stp	x22, x21, [sp, #0x10]
000000000004d700	stp	x20, x19, [sp, #0x20]
000000000004d704	stp	x29, x30, [sp, #0x30]
000000000004d708	add	x29, sp, #0x30
000000000004d70c	mov	x21, x2
000000000004d710	mov	x20, x1
000000000004d714	mov	x19, x0
000000000004d718	str	xzr, [x2]
000000000004d71c	cbz	x3, 0x4d758
000000000004d720	mov	x22, x3
000000000004d724	ldr	x23, [x22]
000000000004d728	str	xzr, [x22]
000000000004d72c	mov	x0, x22
000000000004d730	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE4NodeD2Ev
000000000004d734	bl	_mi_free
000000000004d738	mov	x22, x23
000000000004d73c	cbnz	x23, 0x4d724
000000000004d740	ldr	x0, [x21]
000000000004d744	str	xzr, [x21]
000000000004d748	cbz	x0, 0x4d75c
000000000004d74c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE4NodeD2Ev
000000000004d750	bl	_mi_free
000000000004d754	b	0x4d75c
000000000004d758	str	xzr, [x21]
000000000004d75c	ldrb	w8, [x20]
000000000004d760	cbz	w8, 0x4d77c
000000000004d764	ldr	x0, [x19]
000000000004d768	ldp	x29, x30, [sp, #0x30]
000000000004d76c	ldp	x20, x19, [sp, #0x20]
000000000004d770	ldp	x22, x21, [sp, #0x10]
000000000004d774	ldp	x24, x23, [sp], #0x40
000000000004d778	b	0x4d9c4 ; symbol stub for: __ZNSt3__15mutex6unlockEv
000000000004d77c	ldp	x29, x30, [sp, #0x30]
000000000004d780	ldp	x20, x19, [sp, #0x20]
000000000004d784	ldp	x22, x21, [sp, #0x10]
000000000004d788	ldp	x24, x23, [sp], #0x40
000000000004d78c	ret
__ZN12_GLOBAL__N_18theStateEv.cold.1:
000000000004d790	stp	x24, x23, [sp, #-0x40]!
000000000004d794	stp	x22, x21, [sp, #0x10]
000000000004d798	stp	x20, x19, [sp, #0x20]
000000000004d79c	stp	x29, x30, [sp, #0x30]
000000000004d7a0	add	x29, sp, #0x30
000000000004d7a4	mov	x19, x3
000000000004d7a8	mov	x21, x2
000000000004d7ac	mov	x22, x1
000000000004d7b0	mov	x20, x0
000000000004d7b4	ldr	x0, [x0, #0xd0]
000000000004d7b8	cbz	x0, 0x4d7cc
000000000004d7bc	ldr	x23, [x0]
000000000004d7c0	bl	0x4dba4 ; symbol stub for: _free
000000000004d7c4	mov	x0, x23
000000000004d7c8	cbnz	x23, 0x4d7bc
000000000004d7cc	ldr	x0, [x22]
000000000004d7d0	str	xzr, [x22]
000000000004d7d4	bl	0x4dba4 ; symbol stub for: _free
000000000004d7d8	ldr	x0, [x20, #0xa8]
000000000004d7dc	cbz	x0, 0x4d7f0
000000000004d7e0	ldr	x22, [x0]
000000000004d7e4	bl	0x4dba4 ; symbol stub for: _free
000000000004d7e8	mov	x0, x22
000000000004d7ec	cbnz	x22, 0x4d7e0
000000000004d7f0	ldr	x0, [x21]
000000000004d7f4	str	xzr, [x21]
000000000004d7f8	bl	0x4dba4 ; symbol stub for: _free
000000000004d7fc	ldr	x0, [x20, #0x80]
000000000004d800	cbz	x0, 0x4d814
000000000004d804	ldr	x20, [x0]
000000000004d808	bl	0x4dba4 ; symbol stub for: _free
000000000004d80c	mov	x0, x20
000000000004d810	cbnz	x20, 0x4d804
000000000004d814	ldr	x0, [x19]
000000000004d818	str	xzr, [x19]
000000000004d81c	ldp	x29, x30, [sp, #0x30]
000000000004d820	ldp	x20, x19, [sp, #0x20]
000000000004d824	ldp	x22, x21, [sp, #0x10]
000000000004d828	ldp	x24, x23, [sp], #0x40
000000000004d82c	b	0x4dba4 ; symbol stub for: _free
_Kotlin_getStackTraceStrings.cold.1:
000000000004d830	stp	x22, x21, [sp, #-0x30]!
000000000004d834	stp	x20, x19, [sp, #0x10]
000000000004d838	stp	x29, x30, [sp, #0x20]
000000000004d83c	add	x29, sp, #0x20
000000000004d840	mov	x19, x1
000000000004d844	mov	x20, x0
000000000004d848	ldr	x8, [x1]
000000000004d84c	cmp	x8, x0
000000000004d850	b.eq	0x4d880
000000000004d854	mov	x21, x2
000000000004d858	sub	x22, x8, #0x18
000000000004d85c	ldursb	w9, [x8, #-0x1]
000000000004d860	tbz	w9, #0x1f, 0x4d86c
000000000004d864	ldur	x0, [x8, #-0x18]
000000000004d868	bl	0x4dba4 ; symbol stub for: _free
000000000004d86c	mov	x8, x22
000000000004d870	cmp	x22, x20
000000000004d874	b.ne	0x4d858
000000000004d878	ldr	x0, [x21]
000000000004d87c	b	0x4d884
000000000004d880	mov	x0, x20
000000000004d884	str	x20, [x19]
000000000004d888	ldp	x29, x30, [sp, #0x20]
000000000004d88c	ldp	x20, x19, [sp, #0x10]
000000000004d890	ldp	x22, x21, [sp], #0x30
000000000004d894	b	0x4dba4 ; symbol stub for: _free
