../../../SkantzBinaries/Native/ReverseComplementNative:
(__TEXT,__text) section
_$s23ReverseComplementNativeAAC9transFrom33_7341E755E43D82421753CA7418E11504LLSSvpfi:
000000000000582c	adr	x8, #0x23d4 ; literal pool for: "ACGTUMRWSYKVHDBN"
0000000000005830	nop
0000000000005834	sub	x8, x8, #0x20
0000000000005838	orr	x1, x8, #0x8000000000000000
000000000000583c	mov	x0, #0x10
0000000000005840	movk	x0, #0xd000, lsl #48
0000000000005844	ret
_$s23ReverseComplementNativeAAC7transTo33_7341E755E43D82421753CA7418E11504LLSSvpfi:
0000000000005848	adr	x8, #0x23d8 ; literal pool for: "TGCAAKYWSRMBDHVN"
000000000000584c	nop
0000000000005850	sub	x8, x8, #0x20
0000000000005854	orr	x1, x8, #0x8000000000000000
0000000000005858	mov	x0, #0x10
000000000000585c	movk	x0, #0xd000, lsl #48
0000000000005860	ret
_$s23ReverseComplementNativeAAC8transMap33_7341E755E43D82421753CA7418E11504LLSays5UInt8VGvpfi:
0000000000005864	stp	x20, x19, [sp, #-0x20]!
0000000000005868	stp	x29, x30, [sp, #0x10]
000000000000586c	add	x29, sp, #0x10
0000000000005870	nop
0000000000005874	ldr	x1, #0x2814 ; literal pool symbol address: _$ss5UInt8VN
0000000000005878	mov	w19, #0x80
000000000000587c	mov	w0, #0x80
0000000000005880	bl	0x77fc ; symbol stub for: _$sSa28_allocateBufferUninitialized15minimumCapacitys06_ArrayB0VyxGSi_tFZ
0000000000005884	str	x19, [x0, #0x10]
0000000000005888	movi.16b	v0, #0x0
000000000000588c	stp	q0, q0, [x0, #0x20]
0000000000005890	stp	q0, q0, [x0, #0x40]
0000000000005894	stp	q0, q0, [x0, #0x60]
0000000000005898	stp	q0, q0, [x0, #0x80]
000000000000589c	ldp	x29, x30, [sp, #0x10]
00000000000058a0	ldp	x20, x19, [sp], #0x20
00000000000058a4	ret
_$s23ReverseComplementNativeAACABycfC:
00000000000058a8	stp	x20, x19, [sp, #-0x20]!
00000000000058ac	stp	x29, x30, [sp, #0x10]
00000000000058b0	add	x29, sp, #0x10
00000000000058b4	mov	x0, x20
00000000000058b8	mov	w1, #0x88
00000000000058bc	mov	w2, #0x7
00000000000058c0	bl	0x78b0 ; symbol stub for: _swift_allocObject
00000000000058c4	mov	x20, x0
00000000000058c8	bl	_$s23ReverseComplementNativeAACABycfc
00000000000058cc	mov	x0, x20
00000000000058d0	ldp	x29, x30, [sp, #0x10]
00000000000058d4	ldp	x20, x19, [sp], #0x20
00000000000058d8	ret
_$s23ReverseComplementNativeAACABycfc:
00000000000058dc	sub	sp, sp, #0xa0
00000000000058e0	stp	x28, x27, [sp, #0x40]
00000000000058e4	stp	x26, x25, [sp, #0x50]
00000000000058e8	stp	x24, x23, [sp, #0x60]
00000000000058ec	stp	x22, x21, [sp, #0x70]
00000000000058f0	stp	x20, x19, [sp, #0x80]
00000000000058f4	stp	x29, x30, [sp, #0x90]
00000000000058f8	add	x29, sp, #0x90
00000000000058fc	mov	x8, #0x10
0000000000005900	movk	x8, #0xd000, lsl #48
0000000000005904	adr	x9, #0x22fc ; literal pool for: "ACGTUMRWSYKVHDBN"
0000000000005908	nop
000000000000590c	sub	x9, x9, #0x20
0000000000005910	orr	x9, x9, #0x8000000000000000
0000000000005914	stp	x8, x9, [x20, #0x10]
0000000000005918	adr	x9, #0x2308 ; literal pool for: "TGCAAKYWSRMBDHVN"
000000000000591c	nop
0000000000005920	sub	x9, x9, #0x20
0000000000005924	orr	x9, x9, #0x8000000000000000
0000000000005928	stp	x8, x9, [x20, #0x20]
000000000000592c	nop
0000000000005930	ldr	x21, #0x2758 ; literal pool symbol address: _$ss5UInt8VN
0000000000005934	mov	w19, #0x80
0000000000005938	mov	w0, #0x80
000000000000593c	mov	x1, x21
0000000000005940	bl	0x77fc ; symbol stub for: _$sSa28_allocateBufferUninitialized15minimumCapacitys06_ArrayB0VyxGSi_tFZ
0000000000005944	str	x19, [x0, #0x10]
0000000000005948	movi.16b	v0, #0x0
000000000000594c	stp	q0, q0, [x0, #0x20]
0000000000005950	stp	q0, q0, [x0, #0x40]
0000000000005954	stp	q0, q0, [x0, #0x60]
0000000000005958	stp	q0, q0, [x0, #0x80]
000000000000595c	mov	x19, x20
0000000000005960	str	x0, [x19, #0x30]!
0000000000005964	mov	w23, #0x10000
0000000000005968	mov	w0, #0x10000
000000000000596c	mov	x1, x21
0000000000005970	bl	0x77fc ; symbol stub for: _$sSa28_allocateBufferUninitialized15minimumCapacitys06_ArrayB0VyxGSi_tFZ
0000000000005974	mov	x22, x0
0000000000005978	str	x23, [x0, #0x10]
000000000000597c	add	x0, x0, #0x20
0000000000005980	mov	w1, #0x10000
0000000000005984	bl	0x7814 ; symbol stub for: _bzero
0000000000005988	str	x22, [x19, #0x8]
000000000000598c	movi.16b	v0, #0x0
0000000000005990	stp	q0, q0, [x19, #0x10]
0000000000005994	str	xzr, [x19, #0x30]
0000000000005998	mov	w24, #0x100000
000000000000599c	mov	w0, #0x100000
00000000000059a0	mov	x1, x21
00000000000059a4	bl	0x77fc ; symbol stub for: _$sSa28_allocateBufferUninitialized15minimumCapacitys06_ArrayB0VyxGSi_tFZ
00000000000059a8	mov	x22, x0
00000000000059ac	str	x24, [x0, #0x10]
00000000000059b0	add	x0, x0, #0x20
00000000000059b4	mov	w1, #0x100000
00000000000059b8	bl	0x7814 ; symbol stub for: _bzero
00000000000059bc	stp	x22, xzr, [x19, #0x38]
00000000000059c0	mov	w0, #0x10000
00000000000059c4	mov	x1, x21
00000000000059c8	bl	0x77fc ; symbol stub for: _$sSa28_allocateBufferUninitialized15minimumCapacitys06_ArrayB0VyxGSi_tFZ
00000000000059cc	mov	x21, x0
00000000000059d0	str	x23, [x0, #0x10]
00000000000059d4	add	x0, x0, #0x20
00000000000059d8	mov	w1, #0x10000
00000000000059dc	bl	0x7814 ; symbol stub for: _bzero
00000000000059e0	stp	x21, xzr, [x19, #0x48]
00000000000059e4	add	x1, sp, #0x20
00000000000059e8	mov	x0, x19
00000000000059ec	mov	x2, #0x0
00000000000059f0	mov	x3, #0x0
00000000000059f4	bl	0x78bc ; symbol stub for: _swift_beginAccess
00000000000059f8	ldr	x8, [x19]
00000000000059fc	ldr	x22, [x8, #0x10]
0000000000005a00	cbz	x22, 0x5a6c
0000000000005a04	add	x1, sp, #0x8
0000000000005a08	mov	x0, x19
0000000000005a0c	mov	w2, #0x21
0000000000005a10	mov	x3, #0x0
0000000000005a14	bl	0x78bc ; symbol stub for: _swift_beginAccess
0000000000005a18	ldr	x21, [x19]
0000000000005a1c	mov	x0, x21
0000000000005a20	bl	0x7934 ; symbol stub for: _swift_isUniquelyReferenced_nonNull_native
0000000000005a24	str	x21, [x19]
0000000000005a28	tbz	w0, #0x0, 0x5e50
0000000000005a2c	mov	x8, #0x0
0000000000005a30	cmp	x8, #0x100
0000000000005a34	b.eq	0x5e48
0000000000005a38	str	x21, [x19]
0000000000005a3c	ldr	x9, [x21, #0x10]
0000000000005a40	cmp	x8, x9
0000000000005a44	b.hs	0x5e34
0000000000005a48	add	x9, x21, x8
0000000000005a4c	strb	w8, [x9, #0x20]
0000000000005a50	add	x9, x8, #0x1
0000000000005a54	ldr	x21, [x19]
0000000000005a58	mov	x8, x9
0000000000005a5c	cmp	x22, x9
0000000000005a60	b.ne	0x5a30
0000000000005a64	add	x0, sp, #0x8
0000000000005a68	bl	0x7904 ; symbol stub for: _swift_endAccess
0000000000005a6c	ldp	x0, x1, [x20, #0x10]
0000000000005a70	bl	0x77cc ; symbol stub for: _$sSS5countSivg
0000000000005a74	tbnz	x0, #0x3f, 0x5e4c
0000000000005a78	mov	x21, x0
0000000000005a7c	cbz	x0, 0x5e10
0000000000005a80	mov	x22, #0x0
0000000000005a84	cmp	x21, x22
0000000000005a88	b.eq	0x5e38
0000000000005a8c	ldp	x23, x25, [x20, #0x10]
0000000000005a90	mov	x0, x25
0000000000005a94	bl	0x78d4 ; symbol stub for: _swift_bridgeObjectRetain
0000000000005a98	mov	w0, #0xf
0000000000005a9c	mov	x1, x22
0000000000005aa0	mov	x2, x23
0000000000005aa4	mov	x3, x25
0000000000005aa8	bl	0x77d8 ; symbol stub for: _$sSS5index_8offsetBySS5IndexVAD_SitF
0000000000005aac	mov	x1, x23
0000000000005ab0	mov	x2, x25
0000000000005ab4	bl	0x77f0 ; symbol stub for: _$sSSySJSS5IndexVcig
0000000000005ab8	mov	x24, x0
0000000000005abc	mov	x23, x1
0000000000005ac0	mov	x0, x25
0000000000005ac4	bl	0x78c8 ; symbol stub for: _swift_bridgeObjectRelease
0000000000005ac8	mov	x0, x24
0000000000005acc	mov	x1, x23
0000000000005ad0	bl	0x77b4 ; symbol stub for: _$sSJ10lowercasedSSyF
0000000000005ad4	mov	x26, x1
0000000000005ad8	ubfx	x8, x1, #56, #4
0000000000005adc	and	x9, x0, #0xffffffffffff
0000000000005ae0	tst	x1, #0x2000000000000000
0000000000005ae4	csel	x8, x9, x8, eq
0000000000005ae8	cbz	x8, 0x5b10
0000000000005aec	mov	x25, x0
0000000000005af0	tbnz	x26, #0x3c, 0x5bb0
0000000000005af4	tbnz	x26, #0x3d, 0x5b1c
0000000000005af8	tbz	x25, #0x3c, 0x5dd0
0000000000005afc	and	x8, x26, #0xfffffffffffffff
0000000000005b00	add	x0, x8, #0x20
0000000000005b04	mov	w27, #0x0
0000000000005b08	ldrb	w25, [x0]
0000000000005b0c	b	0x5b20
0000000000005b10	mov	w25, #0x0
0000000000005b14	mov	w27, #0x1
0000000000005b18	b	0x5b20
0000000000005b1c	mov	w27, #0x0
0000000000005b20	mov	x0, x26
0000000000005b24	bl	0x78c8 ; symbol stub for: _swift_bridgeObjectRelease
0000000000005b28	tbnz	w27, #0x0, 0x5e60
0000000000005b2c	ldp	x26, x27, [x20, #0x20]
0000000000005b30	mov	x0, x27
0000000000005b34	bl	0x78d4 ; symbol stub for: _swift_bridgeObjectRetain
0000000000005b38	mov	w0, #0xf
0000000000005b3c	mov	x1, x22
0000000000005b40	mov	x2, x26
0000000000005b44	mov	x3, x27
0000000000005b48	bl	0x77d8 ; symbol stub for: _$sSS5index_8offsetBySS5IndexVAD_SitF
0000000000005b4c	mov	x28, x0
0000000000005b50	mov	x0, x27
0000000000005b54	bl	0x78c8 ; symbol stub for: _swift_bridgeObjectRelease
0000000000005b58	mov	x0, x28
0000000000005b5c	mov	x1, x26
0000000000005b60	mov	x2, x27
0000000000005b64	bl	0x77f0 ; symbol stub for: _$sSSySJSS5IndexVcig
0000000000005b68	mov	x27, x1
0000000000005b6c	ubfx	x8, x1, #56, #4
0000000000005b70	and	x9, x0, #0xffffffffffff
0000000000005b74	tst	x1, #0x2000000000000000
0000000000005b78	csel	x8, x9, x8, eq
0000000000005b7c	cbz	x8, 0x5ba4
0000000000005b80	mov	x26, x0
0000000000005b84	tbnz	x27, #0x3c, 0x5bcc
0000000000005b88	tbnz	x27, #0x3d, 0x5be0
0000000000005b8c	tbz	x26, #0x3c, 0x5de0
0000000000005b90	and	x8, x27, #0xfffffffffffffff
0000000000005b94	add	x0, x8, #0x20
0000000000005b98	mov	w28, #0x0
0000000000005b9c	ldrb	w26, [x0]
0000000000005ba0	b	0x5be4
0000000000005ba4	mov	w26, #0x0
0000000000005ba8	mov	w28, #0x1
0000000000005bac	b	0x5be4
0000000000005bb0	mov	w0, #0xf
0000000000005bb4	mov	x1, x25
0000000000005bb8	mov	x2, x26
0000000000005bbc	bl	0x77e4 ; symbol stub for: _$sSS8UTF8ViewV17_foreignSubscript8positions5UInt8VSS5IndexV_tF
0000000000005bc0	mov	x25, x0
0000000000005bc4	mov	w27, #0x0
0000000000005bc8	b	0x5b20
0000000000005bcc	mov	w0, #0xf
0000000000005bd0	mov	x1, x26
0000000000005bd4	mov	x2, x27
0000000000005bd8	bl	0x77e4 ; symbol stub for: _$sSS8UTF8ViewV17_foreignSubscript8positions5UInt8VSS5IndexV_tF
0000000000005bdc	mov	x26, x0
0000000000005be0	mov	w28, #0x0
0000000000005be4	mov	x0, x27
0000000000005be8	bl	0x78c8 ; symbol stub for: _swift_bridgeObjectRelease
0000000000005bec	tbnz	w28, #0x0, 0x5e64
0000000000005bf0	add	x1, sp, #0x8
0000000000005bf4	mov	x0, x19
0000000000005bf8	mov	w2, #0x21
0000000000005bfc	mov	x3, #0x0
0000000000005c00	bl	0x78bc ; symbol stub for: _swift_beginAccess
0000000000005c04	ldr	x27, [x19]
0000000000005c08	mov	x0, x27
0000000000005c0c	bl	0x7934 ; symbol stub for: _swift_isUniquelyReferenced_nonNull_native
0000000000005c10	str	x27, [x19]
0000000000005c14	tbz	w0, #0x0, 0x5d6c
0000000000005c18	and	x8, x25, #0xff
0000000000005c1c	ldr	x9, [x27, #0x10]
0000000000005c20	cmp	x9, x8
0000000000005c24	b.ls	0x5e3c
0000000000005c28	add	x8, x27, x8
0000000000005c2c	strb	w26, [x8, #0x20]
0000000000005c30	add	x0, sp, #0x8
0000000000005c34	bl	0x7904 ; symbol stub for: _swift_endAccess
0000000000005c38	ubfx	x8, x23, #56, #4
0000000000005c3c	and	x9, x24, #0xffffffffffff
0000000000005c40	tst	x23, #0x2000000000000000
0000000000005c44	csel	x8, x9, x8, eq
0000000000005c48	cbz	x8, 0x5c70
0000000000005c4c	tbnz	x23, #0x3c, 0x5d94
0000000000005c50	tbnz	x23, #0x3d, 0x5c80
0000000000005c54	tbz	x24, #0x3c, 0x5df0
0000000000005c58	and	x8, x23, #0xfffffffffffffff
0000000000005c5c	add	x0, x8, #0x20
0000000000005c60	mov	w8, #0x0
0000000000005c64	ldrb	w25, [x0]
0000000000005c68	tbz	w8, #0x0, 0x5c8c
0000000000005c6c	b	0x5e6c
0000000000005c70	mov	w25, #0x0
0000000000005c74	mov	w8, #0x1
0000000000005c78	tbz	w8, #0x0, 0x5c8c
0000000000005c7c	b	0x5e6c
0000000000005c80	mov	w8, #0x0
0000000000005c84	mov	x25, x24
0000000000005c88	tbnz	w8, #0x0, 0x5e6c
0000000000005c8c	mov	x0, x24
0000000000005c90	mov	x1, x23
0000000000005c94	bl	0x77b4 ; symbol stub for: _$sSJ10lowercasedSSyF
0000000000005c98	mov	x24, x1
0000000000005c9c	ubfx	x8, x1, #56, #4
0000000000005ca0	and	x9, x0, #0xffffffffffff
0000000000005ca4	tst	x1, #0x2000000000000000
0000000000005ca8	csel	x8, x9, x8, eq
0000000000005cac	cbz	x8, 0x5cd4
0000000000005cb0	mov	x26, x0
0000000000005cb4	tbnz	x24, #0x3c, 0x5db4
0000000000005cb8	tbnz	x24, #0x3d, 0x5ce0
0000000000005cbc	tbz	x26, #0x3c, 0x5e00
0000000000005cc0	and	x8, x24, #0xfffffffffffffff
0000000000005cc4	add	x0, x8, #0x20
0000000000005cc8	mov	w27, #0x0
0000000000005ccc	ldrb	w26, [x0]
0000000000005cd0	b	0x5ce4
0000000000005cd4	mov	w26, #0x0
0000000000005cd8	mov	w27, #0x1
0000000000005cdc	b	0x5ce4
0000000000005ce0	mov	w27, #0x0
0000000000005ce4	mov	x0, x24
0000000000005ce8	bl	0x78c8 ; symbol stub for: _swift_bridgeObjectRelease
0000000000005cec	tbnz	w27, #0x0, 0x5e68
0000000000005cf0	and	x8, x26, #0xff
0000000000005cf4	ldr	x9, [x19]
0000000000005cf8	ldr	x10, [x9, #0x10]
0000000000005cfc	cmp	x10, x8
0000000000005d00	b.ls	0x5e40
0000000000005d04	add	x8, x9, x8
0000000000005d08	ldrb	w26, [x8, #0x20]
0000000000005d0c	add	x1, sp, #0x8
0000000000005d10	mov	x0, x19
0000000000005d14	mov	w2, #0x21
0000000000005d18	mov	x3, #0x0
0000000000005d1c	bl	0x78bc ; symbol stub for: _swift_beginAccess
0000000000005d20	ldr	x24, [x19]
0000000000005d24	mov	x0, x24
0000000000005d28	bl	0x7934 ; symbol stub for: _swift_isUniquelyReferenced_nonNull_native
0000000000005d2c	str	x24, [x19]
0000000000005d30	tbz	w0, #0x0, 0x5d80
0000000000005d34	and	x8, x25, #0xff
0000000000005d38	ldr	x9, [x24, #0x10]
0000000000005d3c	cmp	x9, x8
0000000000005d40	b.ls	0x5e44
0000000000005d44	add	x22, x22, #0x1
0000000000005d48	add	x8, x24, x8
0000000000005d4c	strb	w26, [x8, #0x20]
0000000000005d50	add	x0, sp, #0x8
0000000000005d54	bl	0x7904 ; symbol stub for: _swift_endAccess
0000000000005d58	mov	x0, x23
0000000000005d5c	bl	0x78c8 ; symbol stub for: _swift_bridgeObjectRelease
0000000000005d60	cmp	x21, x22
0000000000005d64	b.ne	0x5a84
0000000000005d68	b	0x5e10
0000000000005d6c	mov	x0, x27
0000000000005d70	bl	_$ss12_ArrayBufferV20_consumeAndCreateNewAByxGyFs5UInt8V_Tg5
0000000000005d74	mov	x27, x0
0000000000005d78	str	x0, [x19]
0000000000005d7c	b	0x5c18
0000000000005d80	mov	x0, x24
0000000000005d84	bl	_$ss12_ArrayBufferV20_consumeAndCreateNewAByxGyFs5UInt8V_Tg5
0000000000005d88	mov	x24, x0
0000000000005d8c	str	x0, [x19]
0000000000005d90	b	0x5d34
0000000000005d94	mov	w0, #0xf
0000000000005d98	mov	x1, x24
0000000000005d9c	mov	x2, x23
0000000000005da0	bl	0x77e4 ; symbol stub for: _$sSS8UTF8ViewV17_foreignSubscript8positions5UInt8VSS5IndexV_tF
0000000000005da4	mov	x25, x0
0000000000005da8	mov	w8, #0x0
0000000000005dac	tbz	w8, #0x0, 0x5c8c
0000000000005db0	b	0x5e6c
0000000000005db4	mov	w0, #0xf
0000000000005db8	mov	x1, x26
0000000000005dbc	mov	x2, x24
0000000000005dc0	bl	0x77e4 ; symbol stub for: _$sSS8UTF8ViewV17_foreignSubscript8positions5UInt8VSS5IndexV_tF
0000000000005dc4	mov	x26, x0
0000000000005dc8	mov	w27, #0x0
0000000000005dcc	b	0x5ce4
0000000000005dd0	mov	x0, x25
0000000000005dd4	mov	x1, x26
0000000000005dd8	bl	0x7808 ; symbol stub for: _$ss13_StringObjectV10sharedUTF8SRys5UInt8VGvg
0000000000005ddc	b	0x5b04
0000000000005de0	mov	x0, x26
0000000000005de4	mov	x1, x27
0000000000005de8	bl	0x7808 ; symbol stub for: _$ss13_StringObjectV10sharedUTF8SRys5UInt8VGvg
0000000000005dec	b	0x5b98
0000000000005df0	mov	x0, x24
0000000000005df4	mov	x1, x23
0000000000005df8	bl	0x7808 ; symbol stub for: _$ss13_StringObjectV10sharedUTF8SRys5UInt8VGvg
0000000000005dfc	b	0x5c60
0000000000005e00	mov	x0, x26
0000000000005e04	mov	x1, x24
0000000000005e08	bl	0x7808 ; symbol stub for: _$ss13_StringObjectV10sharedUTF8SRys5UInt8VGvg
0000000000005e0c	b	0x5cc8
0000000000005e10	mov	x0, x20
0000000000005e14	ldp	x29, x30, [sp, #0x90]
0000000000005e18	ldp	x20, x19, [sp, #0x80]
0000000000005e1c	ldp	x22, x21, [sp, #0x70]
0000000000005e20	ldp	x24, x23, [sp, #0x60]
0000000000005e24	ldp	x26, x25, [sp, #0x50]
0000000000005e28	ldp	x28, x27, [sp, #0x40]
0000000000005e2c	add	sp, sp, #0xa0
0000000000005e30	ret
0000000000005e34	brk	#0x1
0000000000005e38	brk	#0x1
0000000000005e3c	brk	#0x1
0000000000005e40	brk	#0x1
0000000000005e44	brk	#0x1
0000000000005e48	brk	#0x1
0000000000005e4c	brk	#0x1
0000000000005e50	mov	x0, x21
0000000000005e54	bl	_$ss12_ArrayBufferV20_consumeAndCreateNewAByxGyFs5UInt8V_Tg5
0000000000005e58	mov	x21, x0
0000000000005e5c	b	0x5a2c
0000000000005e60	brk	#0x1
0000000000005e64	brk	#0x1
0000000000005e68	brk	#0x1
0000000000005e6c	brk	#0x1
_$s23ReverseComplementNativeAAC3pos33_7341E755E43D82421753CA7418E11504LLSivpfi:
0000000000005e70	mov	x0, #0x0
0000000000005e74	ret
_$s23ReverseComplementNativeAAC5limit33_7341E755E43D82421753CA7418E11504LLSivpfi:
0000000000005e78	mov	x0, #0x0
0000000000005e7c	ret
_$s23ReverseComplementNativeAAC5start33_7341E755E43D82421753CA7418E11504LLSivpfi:
0000000000005e80	mov	x0, #0x0
0000000000005e84	ret
_$s23ReverseComplementNativeAAC3end33_7341E755E43D82421753CA7418E11504LLSivpfi:
0000000000005e88	mov	x0, #0x0
0000000000005e8c	ret
_$s23ReverseComplementNativeAAC10LINE_WIDTH33_7341E755E43D82421753CA7418E11504LLSivpfi:
0000000000005e90	mov	x0, #0x0
0000000000005e94	ret
_$s23ReverseComplementNativeAAC4data33_7341E755E43D82421753CA7418E11504LLSays5UInt8VGvpfi:
0000000000005e98	stp	x20, x19, [sp, #-0x20]!
0000000000005e9c	stp	x29, x30, [sp, #0x10]
0000000000005ea0	add	x29, sp, #0x10
0000000000005ea4	nop
0000000000005ea8	ldr	x1, #0x21e0 ; literal pool symbol address: _$ss5UInt8VN
0000000000005eac	mov	w20, #0x100000
0000000000005eb0	mov	w0, #0x100000
0000000000005eb4	bl	0x77fc ; symbol stub for: _$sSa28_allocateBufferUninitialized15minimumCapacitys06_ArrayB0VyxGSi_tFZ
0000000000005eb8	mov	x19, x0
0000000000005ebc	str	x20, [x0, #0x10]
0000000000005ec0	add	x0, x0, #0x20
0000000000005ec4	mov	w1, #0x100000
0000000000005ec8	bl	0x7814 ; symbol stub for: _bzero
0000000000005ecc	mov	x0, x19
0000000000005ed0	ldp	x29, x30, [sp, #0x10]
0000000000005ed4	ldp	x20, x19, [sp], #0x20
0000000000005ed8	ret
_$s23ReverseComplementNativeAAC4size33_7341E755E43D82421753CA7418E11504LLSivpfi:
0000000000005edc	mov	x0, #0x0
0000000000005ee0	ret
_$s23ReverseComplementNativeAAC12outputBuffer33_7341E755E43D82421753CA7418E11504LLSays5UInt8VGvpfi:
0000000000005ee4	stp	x20, x19, [sp, #-0x20]!
0000000000005ee8	stp	x29, x30, [sp, #0x10]
0000000000005eec	add	x29, sp, #0x10
0000000000005ef0	nop
0000000000005ef4	ldr	x1, #0x2194 ; literal pool symbol address: _$ss5UInt8VN
0000000000005ef8	mov	w20, #0x10000
0000000000005efc	mov	w0, #0x10000
0000000000005f00	bl	0x77fc ; symbol stub for: _$sSa28_allocateBufferUninitialized15minimumCapacitys06_ArrayB0VyxGSi_tFZ
0000000000005f04	mov	x19, x0
0000000000005f08	str	x20, [x0, #0x10]
0000000000005f0c	add	x0, x0, #0x20
0000000000005f10	mov	w1, #0x10000
0000000000005f14	bl	0x7814 ; symbol stub for: _bzero
0000000000005f18	mov	x0, x19
0000000000005f1c	ldp	x29, x30, [sp, #0x10]
0000000000005f20	ldp	x20, x19, [sp], #0x20
0000000000005f24	ret
_$s23ReverseComplementNativeAAC9outputPos33_7341E755E43D82421753CA7418E11504LLSivpfi:
0000000000005f28	mov	x0, #0x0
0000000000005f2c	ret
_$s23ReverseComplementNativeAAC8nextLine33_7341E755E43D82421753CA7418E11504LLSbyF:
0000000000005f30	sub	sp, sp, #0xa0
0000000000005f34	stp	x28, x27, [sp, #0x40]
0000000000005f38	stp	x26, x25, [sp, #0x50]
0000000000005f3c	stp	x24, x23, [sp, #0x60]
0000000000005f40	stp	x22, x21, [sp, #0x70]
0000000000005f44	stp	x20, x19, [sp, #0x80]
0000000000005f48	stp	x29, x30, [sp, #0x90]
0000000000005f4c	add	x29, sp, #0x90
0000000000005f50	mov	x19, x20
0000000000005f54	add	x20, x20, #0x38
0000000000005f58	add	x1, sp, #0x20
0000000000005f5c	mov	x0, x20
0000000000005f60	mov	x2, #0x0
0000000000005f64	mov	x3, #0x0
0000000000005f68	bl	0x78bc ; symbol stub for: _swift_beginAccess
0000000000005f6c	ldp	x21, x8, [x19, #0x40]
0000000000005f70	cmp	x8, x21
0000000000005f74	b.lt	0x6280
0000000000005f78	mov	x26, #-0x1
0000000000005f7c	b	0x5f94
0000000000005f80	str	x8, [x19, #0x48]
0000000000005f84	ldr	x9, [x19, #0x40]
0000000000005f88	mov	x21, x9
0000000000005f8c	cmp	x8, x9
0000000000005f90	b.lt	0x6280
0000000000005f94	subs	x9, x21, x8
0000000000005f98	b.eq	0x5fe0
0000000000005f9c	mov	x12, #0x0
0000000000005fa0	add	x11, x21, x12
0000000000005fa4	cmp	x11, x8
0000000000005fa8	b.ge	0x6268
0000000000005fac	tbnz	x21, #0x3f, 0x626c
0000000000005fb0	ldr	x10, [x20]
0000000000005fb4	ldr	x13, [x10, #0x10]
0000000000005fb8	cmp	x11, x13
0000000000005fbc	b.ge	0x6270
0000000000005fc0	add	x11, x10, x21
0000000000005fc4	add	x11, x11, x12
0000000000005fc8	ldrb	w11, [x11, #0x20]
0000000000005fcc	cmp	w11, #0xa
0000000000005fd0	b.eq	0x616c
0000000000005fd4	add	x12, x12, #0x1
0000000000005fd8	cmn	x9, x12
0000000000005fdc	b.ne	0x5fa0
0000000000005fe0	str	x26, [x19, #0x58]
0000000000005fe4	cmp	x21, #0x1
0000000000005fe8	b.lt	0x60e0
0000000000005fec	cmp	x21, x8
0000000000005ff0	b.ge	0x60e0
0000000000005ff4	subs	x22, x8, x21
0000000000005ff8	b.vs	0x6290
0000000000005ffc	str	x22, [x19, #0x48]
0000000000006000	tbnz	x22, #0x3f, 0x6294
0000000000006004	adds	x27, x22, x21
0000000000006008	b.vs	0x6298
000000000000600c	subs	x24, x27, x21
0000000000006010	b.lt	0x629c
0000000000006014	ldr	x23, [x20]
0000000000006018	ldr	x8, [x23, #0x10]
000000000000601c	cmp	x8, x21
0000000000006020	ccmp	x8, x27, #0x8, ge
0000000000006024	b.lt	0x62a0
0000000000006028	tbnz	x27, #0x3f, 0x62a4
000000000000602c	add	x1, sp, #0x8
0000000000006030	mov	x0, x20
0000000000006034	mov	w2, #0x21
0000000000006038	mov	x3, #0x0
000000000000603c	bl	0x78bc ; symbol stub for: _swift_beginAccess
0000000000006040	ldr	x25, [x20]
0000000000006044	ldr	x8, [x25, #0x10]
0000000000006048	cmp	x8, x22
000000000000604c	b.lt	0x62a8
0000000000006050	subs	x9, x24, x22
0000000000006054	b.vs	0x62ac
0000000000006058	adds	x28, x8, x9
000000000000605c	b.vs	0x62b0
0000000000006060	mov	x0, x23
0000000000006064	mov	w1, #0x2
0000000000006068	bl	0x78e0 ; symbol stub for: _swift_bridgeObjectRetain_n
000000000000606c	mov	x0, x25
0000000000006070	bl	0x7934 ; symbol stub for: _swift_isUniquelyReferenced_nonNull_native
0000000000006074	str	x25, [x20]
0000000000006078	cbz	w0, 0x6088
000000000000607c	ldr	x8, [x25, #0x18]
0000000000006080	cmp	x28, x8, lsr #1
0000000000006084	b.le	0x60a4
0000000000006088	ldr	x8, [x25, #0x10]
000000000000608c	cmp	x8, x28
0000000000006090	csel	x1, x28, x8, lt
0000000000006094	mov	w2, #0x1
0000000000006098	mov	x3, x25
000000000000609c	bl	_$ss12_ArrayBufferV20_consumeAndCreateNew14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFs5UInt8V_Tg5
00000000000060a0	str	x0, [x20]
00000000000060a4	add	x4, x23, #0x20
00000000000060a8	mov	w6, #0x1
00000000000060ac	bfi	x6, x27, #1, #63
00000000000060b0	mov	x0, #0x0
00000000000060b4	mov	x1, x22
00000000000060b8	mov	x2, x24
00000000000060bc	mov	x3, x23
00000000000060c0	mov	x5, x21
00000000000060c4	bl	_$ss20_ArrayBufferProtocolPsE15replaceSubrange_4with10elementsOfySnySiG_Siqd__ntSlRd__7ElementQyd__AGRtzlFs01_aB0Vys5UInt8VG_s0A5SliceVyAMGTg5
00000000000060c8	add	x0, sp, #0x8
00000000000060cc	bl	0x7904 ; symbol stub for: _swift_endAccess
00000000000060d0	mov	x0, x23
00000000000060d4	bl	0x78c8 ; symbol stub for: _swift_bridgeObjectRelease
00000000000060d8	ldr	x23, [x19, #0x48]
00000000000060dc	b	0x60e8
00000000000060e0	mov	x23, #0x0
00000000000060e4	str	xzr, [x19, #0x48]
00000000000060e8	str	xzr, [x19, #0x40]
00000000000060ec	ldr	x8, [x19, #0x38]
00000000000060f0	ldr	x8, [x8, #0x10]
00000000000060f4	subs	x21, x8, x23
00000000000060f8	b.vs	0x6284
00000000000060fc	add	x1, sp, #0x8
0000000000006100	mov	x0, x20
0000000000006104	mov	w2, #0x21
0000000000006108	mov	x3, #0x0
000000000000610c	bl	0x78bc ; symbol stub for: _swift_beginAccess
0000000000006110	ldr	x22, [x20]
0000000000006114	mov	x0, x22
0000000000006118	bl	0x7934 ; symbol stub for: _swift_isUniquelyReferenced_nonNull_native
000000000000611c	str	x22, [x20]
0000000000006120	tbz	w0, #0x0, 0x6224
0000000000006124	tbnz	x23, #0x3f, 0x6238
0000000000006128	ldr	x8, [x22, #0x10]
000000000000612c	cmp	x23, x8
0000000000006130	b.ge	0x6288
0000000000006134	add	x8, x22, x23
0000000000006138	add	x1, x8, #0x20
000000000000613c	mov	w0, #0x0
0000000000006140	mov	x2, x21
0000000000006144	bl	0x78a4 ; symbol stub for: _read
0000000000006148	mov	x21, x0
000000000000614c	add	x0, sp, #0x8
0000000000006150	bl	0x7904 ; symbol stub for: _swift_endAccess
0000000000006154	cmp	x21, #0x1
0000000000006158	b.lt	0x6244
000000000000615c	ldr	x8, [x19, #0x48]
0000000000006160	adds	x8, x8, x21
0000000000006164	b.vc	0x5f80
0000000000006168	b	0x628c
000000000000616c	add	x11, x21, x12
0000000000006170	stp	x21, x11, [x19, #0x50]
0000000000006174	add	x9, x11, #0x1
0000000000006178	str	x9, [x19, #0x40]
000000000000617c	subs	x13, x11, #0x1
0000000000006180	b.lt	0x62b4
0000000000006184	ldr	x14, [x10, #0x10]
0000000000006188	cmp	x11, x14
000000000000618c	b.gt	0x62b8
0000000000006190	tbnz	wzr, #0x0, 0x62bc
0000000000006194	add	x14, x10, x21
0000000000006198	add	x12, x14, x12
000000000000619c	ldrb	w12, [x12, #0x1f]
00000000000061a0	cmp	w12, #0x72
00000000000061a4	b.ne	0x61b0
00000000000061a8	str	x13, [x19, #0x58]
00000000000061ac	mov	x11, x13
00000000000061b0	ldr	x12, [x10, #0x10]
00000000000061b4	cmp	x21, x12
00000000000061b8	b.ge	0x6274
00000000000061bc	add	x12, x10, #0x20
00000000000061c0	ldrb	w13, [x12, x21]
00000000000061c4	cmp	w13, #0x20
00000000000061c8	b.ne	0x61e4
00000000000061cc	add	x21, x21, #0x1
00000000000061d0	str	x21, [x19, #0x50]
00000000000061d4	ldr	x13, [x10, #0x10]
00000000000061d8	cmp	x21, x13
00000000000061dc	b.lt	0x61c0
00000000000061e0	b	0x6274
00000000000061e4	cmp	x21, x11
00000000000061e8	b.ge	0x5f88
00000000000061ec	add	x12, x10, #0x1f
00000000000061f0	subs	x13, x11, #0x1
00000000000061f4	b.lt	0x6278
00000000000061f8	ldr	x14, [x10, #0x10]
00000000000061fc	cmp	x11, x14
0000000000006200	b.gt	0x627c
0000000000006204	ldrb	w11, [x12, x11]
0000000000006208	cmp	w11, #0x20
000000000000620c	b.ne	0x623c
0000000000006210	str	x13, [x19, #0x58]
0000000000006214	mov	x11, x13
0000000000006218	cmp	x21, x13
000000000000621c	b.lt	0x61f0
0000000000006220	b	0x5f88
0000000000006224	mov	x0, x22
0000000000006228	bl	_$ss12_ArrayBufferV20_consumeAndCreateNewAByxGyFs5UInt8V_Tg5
000000000000622c	mov	x22, x0
0000000000006230	str	x0, [x20]
0000000000006234	tbz	x23, #0x3f, 0x6128
0000000000006238	brk	#0x1
000000000000623c	mov	w0, #0x1
0000000000006240	b	0x6248
0000000000006244	mov	w0, #0x0
0000000000006248	ldp	x29, x30, [sp, #0x90]
000000000000624c	ldp	x20, x19, [sp, #0x80]
0000000000006250	ldp	x22, x21, [sp, #0x70]
0000000000006254	ldp	x24, x23, [sp, #0x60]
0000000000006258	ldp	x26, x25, [sp, #0x50]
000000000000625c	ldp	x28, x27, [sp, #0x40]
0000000000006260	add	sp, sp, #0xa0
0000000000006264	ret
0000000000006268	brk	#0x1
000000000000626c	brk	#0x1
0000000000006270	brk	#0x1
0000000000006274	brk	#0x1
0000000000006278	brk	#0x1
000000000000627c	brk	#0x1
0000000000006280	brk	#0x1
0000000000006284	brk	#0x1
0000000000006288	brk	#0x1
000000000000628c	brk	#0x1
0000000000006290	brk	#0x1
0000000000006294	brk	#0x1
0000000000006298	brk	#0x1
000000000000629c	brk	#0x1
00000000000062a0	brk	#0x1
00000000000062a4	brk	#0x1
00000000000062a8	brk	#0x1
00000000000062ac	brk	#0x1
00000000000062b0	brk	#0x1
00000000000062b4	brk	#0x1
00000000000062b8	brk	#0x1
00000000000062bc	brk	#0x1
_$s23ReverseComplementNativeAAC12prepareWrite33_7341E755E43D82421753CA7418E11504LL3lenySi_tF:
00000000000062c0	sub	sp, sp, #0x60
00000000000062c4	stp	x24, x23, [sp, #0x20]
00000000000062c8	stp	x22, x21, [sp, #0x30]
00000000000062cc	stp	x20, x19, [sp, #0x40]
00000000000062d0	stp	x29, x30, [sp, #0x50]
00000000000062d4	add	x29, sp, #0x50
00000000000062d8	ldr	x23, [x20, #0x80]
00000000000062dc	adds	x21, x23, x0
00000000000062e0	b.vs	0x63c0
00000000000062e4	add	x0, x20, #0x78
00000000000062e8	add	x1, sp, #0x8
00000000000062ec	mov	x2, #0x0
00000000000062f0	mov	x3, #0x0
00000000000062f4	bl	0x78bc ; symbol stub for: _swift_beginAccess
00000000000062f8	ldr	x19, [x20, #0x78]
00000000000062fc	ldr	x8, [x19, #0x10]
0000000000006300	cmp	x8, x21
0000000000006304	b.ge	0x63a8
0000000000006308	tbnz	x23, #0x3f, 0x63c4
000000000000630c	cmp	x8, x23
0000000000006310	b.lt	0x63c8
0000000000006314	add	x21, x19, #0x20
0000000000006318	mov	w22, #0x1
000000000000631c	bfi	x22, x23, #1, #63
0000000000006320	mov	x0, x19
0000000000006324	bl	0x78d4 ; symbol stub for: _swift_bridgeObjectRetain
0000000000006328	mov	x1, x21
000000000000632c	mov	x2, #0x0
0000000000006330	mov	x3, x22
0000000000006334	bl	_$s10Foundation4DataVyACxcSTRzs5UInt8V7ElementRtzlufCs10ArraySliceVyAEG_Tg5Tf4gd_n
0000000000006338	mov	x21, x0
000000000000633c	mov	x22, x1
0000000000006340	mov	x0, x19
0000000000006344	bl	0x78c8 ; symbol stub for: _swift_bridgeObjectRelease
0000000000006348	nop
000000000000634c	ldr	x0, #0x5efc ; Objc class ref: bad class ref
0000000000006350	bl	0x785c ; symbol stub for: _objc_opt_self
0000000000006354	nop
0000000000006358	ldr	x1, #0x5ee0
000000000000635c	bl	0x7850 ; Objc message: _objc_msgSend
0000000000006360	mov	x29, x29
0000000000006364	bl	0x7898 ; symbol stub for: _objc_retainAutoreleasedReturnValue
0000000000006368	mov	x19, x0
000000000000636c	mov	x0, x21
0000000000006370	mov	x1, x22
0000000000006374	bl	0x779c ; symbol stub for: _$s10Foundation4DataV19_bridgeToObjectiveCSo6NSDataCyF
0000000000006378	mov	x23, x0
000000000000637c	nop
0000000000006380	ldr	x1, #0x5ec0
0000000000006384	mov	x0, x19
0000000000006388	mov	x2, x23
000000000000638c	bl	0x7850 ; Objc message: _objc_msgSend
0000000000006390	mov	x0, x21
0000000000006394	mov	x1, x22
0000000000006398	bl	_$s10Foundation4DataV15_RepresentationOWOe
000000000000639c	bl	0x7868 ; symbol stub for: _objc_release_x19
00000000000063a0	bl	0x7874 ; symbol stub for: _objc_release_x23
00000000000063a4	str	xzr, [x20, #0x80]
00000000000063a8	ldp	x29, x30, [sp, #0x50]
00000000000063ac	ldp	x20, x19, [sp, #0x40]
00000000000063b0	ldp	x22, x21, [sp, #0x30]
00000000000063b4	ldp	x24, x23, [sp, #0x20]
00000000000063b8	add	sp, sp, #0x60
00000000000063bc	ret
00000000000063c0	brk	#0x1
00000000000063c4	brk	#0x1
00000000000063c8	brk	#0x1
_$s23ReverseComplementNativeAAC5write33_7341E755E43D82421753CA7418E11504LL3buf3off3lenySays5UInt8VG_S2itF:
00000000000063cc	sub	sp, sp, #0x70
00000000000063d0	stp	x26, x25, [sp, #0x20]
00000000000063d4	stp	x24, x23, [sp, #0x30]
00000000000063d8	stp	x22, x21, [sp, #0x40]
00000000000063dc	stp	x20, x19, [sp, #0x50]
00000000000063e0	stp	x29, x30, [sp, #0x60]
00000000000063e4	add	x29, sp, #0x60
00000000000063e8	mov	x19, x20
00000000000063ec	mov	x21, x2
00000000000063f0	mov	x22, x1
00000000000063f4	mov	x23, x0
00000000000063f8	mov	x0, x2
00000000000063fc	bl	_$s23ReverseComplementNativeAAC12prepareWrite33_7341E755E43D82421753CA7418E11504LL3lenySi_tF
0000000000006400	adds	x8, x22, x21
0000000000006404	b.vs	0x64b0
0000000000006408	cmp	x8, x22
000000000000640c	b.lt	0x64b4
0000000000006410	tbnz	x22, #0x3f, 0x64b8
0000000000006414	ldr	x9, [x23, #0x10]
0000000000006418	cmp	x9, x22
000000000000641c	b.lt	0x64bc
0000000000006420	cmp	x9, x8
0000000000006424	b.lt	0x64bc
0000000000006428	tbnz	x8, #0x3f, 0x64c0
000000000000642c	add	x20, x23, #0x20
0000000000006430	mov	w24, #0x1
0000000000006434	bfi	x24, x8, #1, #63
0000000000006438	ldr	x25, [x19, #0x80]
000000000000643c	add	x26, x19, #0x78
0000000000006440	add	x1, sp, #0x8
0000000000006444	mov	x0, x26
0000000000006448	mov	w2, #0x21
000000000000644c	mov	x3, #0x0
0000000000006450	bl	0x78bc ; symbol stub for: _swift_beginAccess
0000000000006454	mov	x0, x23
0000000000006458	bl	0x78d4 ; symbol stub for: _swift_bridgeObjectRetain
000000000000645c	mov	x0, x25
0000000000006460	mov	x1, x25
0000000000006464	mov	x2, x23
0000000000006468	mov	x3, x20
000000000000646c	mov	x4, x22
0000000000006470	mov	x5, x24
0000000000006474	mov	x20, x26
0000000000006478	bl	_$sSa15replaceSubrange_4withySnySiG_qd__nt7ElementQyd__RszSlRd__lFs5UInt8V_s10ArraySliceVyAGGTg5
000000000000647c	add	x0, sp, #0x8
0000000000006480	bl	0x7904 ; symbol stub for: _swift_endAccess
0000000000006484	ldr	x8, [x19, #0x80]
0000000000006488	adds	x8, x8, x21
000000000000648c	b.vs	0x64c4
0000000000006490	str	x8, [x19, #0x80]
0000000000006494	ldp	x29, x30, [sp, #0x60]
0000000000006498	ldp	x20, x19, [sp, #0x50]
000000000000649c	ldp	x22, x21, [sp, #0x40]
00000000000064a0	ldp	x24, x23, [sp, #0x30]
00000000000064a4	ldp	x26, x25, [sp, #0x20]
00000000000064a8	add	sp, sp, #0x70
00000000000064ac	ret
00000000000064b0	brk	#0x1
00000000000064b4	brk	#0x1
00000000000064b8	brk	#0x1
00000000000064bc	brk	#0x1
00000000000064c0	brk	#0x1
00000000000064c4	brk	#0x1
_$s23ReverseComplementNativeAAC10finishData33_7341E755E43D82421753CA7418E11504LLyyF:
00000000000064c8	sub	sp, sp, #0xc0
00000000000064cc	stp	x28, x27, [sp, #0x60]
00000000000064d0	stp	x26, x25, [sp, #0x70]
00000000000064d4	stp	x24, x23, [sp, #0x80]
00000000000064d8	stp	x22, x21, [sp, #0x90]
00000000000064dc	stp	x20, x19, [sp, #0xa0]
00000000000064e0	stp	x29, x30, [sp, #0xb0]
00000000000064e4	add	x29, sp, #0xb0
00000000000064e8	mov	x19, x20
00000000000064ec	add	x21, x20, #0x78
00000000000064f0	add	x1, sp, #0x40
00000000000064f4	mov	x0, x21
00000000000064f8	mov	x2, #0x0
00000000000064fc	mov	x3, #0x0
0000000000006500	bl	0x78bc ; symbol stub for: _swift_beginAccess
0000000000006504	ldr	x8, [x20, #0x70]
0000000000006508	cmp	x8, #0x1
000000000000650c	b.lt	0x6890
0000000000006510	add	x22, x19, #0x68
0000000000006514	mov	w25, #0xa
0000000000006518	ldr	x9, [x19, #0x60]
000000000000651c	cmp	x8, x9
0000000000006520	csel	x23, x8, x9, lt
0000000000006524	adds	x8, x23, #0x1
0000000000006528	b.vs	0x68d4
000000000000652c	ldr	x27, [x19, #0x80]
0000000000006530	adds	x8, x27, x8
0000000000006534	b.vs	0x68d8
0000000000006538	ldr	x26, [x21]
000000000000653c	ldr	x9, [x26, #0x10]
0000000000006540	cmp	x9, x8
0000000000006544	b.ge	0x6738
0000000000006548	tbnz	x27, #0x3f, 0x68e8
000000000000654c	cmp	x9, x27
0000000000006550	b.lt	0x68ec
0000000000006554	add	x28, x26, #0x20
0000000000006558	mov	w24, #0x1
000000000000655c	bfi	x24, x27, #1, #63
0000000000006560	adr	x0, #0x5f50
0000000000006564	nop
0000000000006568	bl	___swift_instantiateConcreteTypeFromMangledName
000000000000656c	mov	x20, x0
0000000000006570	str	x0, [sp, #0x18]
0000000000006574	bl	_$ss10ArraySliceVys5UInt8VGAByxG10Foundation15ContiguousBytesAgDRszlWl
0000000000006578	str	x0, [sp, #0x20]
000000000000657c	adr	x0, #0x1c3c
0000000000006580	nop
0000000000006584	mov	w1, #0x30
0000000000006588	mov	w2, #0x7
000000000000658c	bl	0x78b0 ; symbol stub for: _swift_allocObject
0000000000006590	str	x0, [sp]
0000000000006594	stp	x26, x28, [x0, #0x10]
0000000000006598	stp	xzr, x24, [x0, #0x20]
000000000000659c	mov	x0, sp
00000000000065a0	mov	x1, x20
00000000000065a4	bl	___swift_project_boxed_opaque_existential_1
00000000000065a8	ldp	x8, x9, [x0, #0x10]
00000000000065ac	lsr	x9, x9, #1
00000000000065b0	subs	x27, x9, x8
00000000000065b4	b.vs	0x68f0
00000000000065b8	cbz	x27, 0x662c
00000000000065bc	ldr	x28, [x0, #0x8]
00000000000065c0	add	x20, x28, x8
00000000000065c4	adr	x0, #0x5efc
00000000000065c8	nop
00000000000065cc	bl	___swift_instantiateConcreteTypeFromMangledName
00000000000065d0	cmp	x27, #0xe
00000000000065d4	b.le	0x6644
00000000000065d8	mov	w8, #0x7fffffff
00000000000065dc	cmp	x27, x8
00000000000065e0	b.ge	0x666c
00000000000065e4	cmp	x28, #0x0
00000000000065e8	csel	x27, xzr, x27, eq
00000000000065ec	mov	x0, #0x0
00000000000065f0	bl	0x7784 ; symbol stub for: _$s10Foundation13__DataStorageCMa
00000000000065f4	ldr	w1, [x0, #0x30]
00000000000065f8	ldrh	w2, [x0, #0x34]
00000000000065fc	bl	0x78b0 ; symbol stub for: _swift_allocObject
0000000000006600	mov	x28, x0
0000000000006604	mov	x0, x26
0000000000006608	mov	w1, #0x2
000000000000660c	bl	0x78e0 ; symbol stub for: _swift_bridgeObjectRetain_n
0000000000006610	mov	x0, x20
0000000000006614	mov	x1, x27
0000000000006618	mov	x20, x28
000000000000661c	bl	0x7778 ; symbol stub for: _$s10Foundation13__DataStorageC5bytes6lengthACSVSg_Sitcfc
0000000000006620	lsl	x20, x27, #32
0000000000006624	orr	x27, x0, #0x4000000000000000
0000000000006628	b	0x66c4
000000000000662c	mov	x0, x26
0000000000006630	mov	w1, #0x2
0000000000006634	bl	0x78e0 ; symbol stub for: _swift_bridgeObjectRetain_n
0000000000006638	mov	x20, #0x0
000000000000663c	mov	x27, #-0x4000000000000000
0000000000006640	b	0x66c4
0000000000006644	add	x27, x20, x27
0000000000006648	mov	x0, x26
000000000000664c	mov	w1, #0x2
0000000000006650	bl	0x78e0 ; symbol stub for: _swift_bridgeObjectRetain_n
0000000000006654	mov	x0, x20
0000000000006658	mov	x1, x27
000000000000665c	bl	_$s10Foundation4DataV06InlineB0VyAESWcfCTf4nd_n
0000000000006660	mov	x20, x0
0000000000006664	and	x27, x1, #0xffffffffffffff
0000000000006668	b	0x66c4
000000000000666c	mov	x0, #0x0
0000000000006670	bl	0x7784 ; symbol stub for: _$s10Foundation13__DataStorageCMa
0000000000006674	ldr	w1, [x0, #0x30]
0000000000006678	ldrh	w2, [x0, #0x34]
000000000000667c	bl	0x78b0 ; symbol stub for: _swift_allocObject
0000000000006680	mov	x28, x0
0000000000006684	mov	x0, x26
0000000000006688	mov	w1, #0x2
000000000000668c	bl	0x78e0 ; symbol stub for: _swift_bridgeObjectRetain_n
0000000000006690	mov	x0, x20
0000000000006694	mov	x1, x27
0000000000006698	mov	x20, x28
000000000000669c	bl	0x7778 ; symbol stub for: _$s10Foundation13__DataStorageC5bytes6lengthACSVSg_Sitcfc
00000000000066a0	mov	x28, x0
00000000000066a4	mov	x0, #0x0
00000000000066a8	bl	0x7790 ; symbol stub for: _$s10Foundation4DataV14RangeReferenceCMa
00000000000066ac	mov	w1, #0x20
00000000000066b0	mov	w2, #0x7
00000000000066b4	bl	0x78b0 ; symbol stub for: _swift_allocObject
00000000000066b8	mov	x20, x0
00000000000066bc	stp	xzr, x27, [x0, #0x10]
00000000000066c0	orr	x27, x28, #0x8000000000000000
00000000000066c4	mov	x0, sp
00000000000066c8	bl	___swift_destroy_boxed_opaque_existential_1
00000000000066cc	mov	x0, x26
00000000000066d0	bl	0x78c8 ; symbol stub for: _swift_bridgeObjectRelease
00000000000066d4	nop
00000000000066d8	ldr	x0, #0x5b70 ; Objc class ref: bad class ref
00000000000066dc	bl	0x785c ; symbol stub for: _objc_opt_self
00000000000066e0	nop
00000000000066e4	ldr	x1, #0x5b54
00000000000066e8	bl	0x7850 ; Objc message: _objc_msgSend
00000000000066ec	mov	x29, x29
00000000000066f0	bl	0x7898 ; symbol stub for: _objc_retainAutoreleasedReturnValue
00000000000066f4	mov	x26, x0
00000000000066f8	mov	x0, x20
00000000000066fc	mov	x1, x27
0000000000006700	bl	0x779c ; symbol stub for: _$s10Foundation4DataV19_bridgeToObjectiveCSo6NSDataCyF
0000000000006704	mov	x28, x0
0000000000006708	nop
000000000000670c	ldr	x1, #0x5b34
0000000000006710	mov	x0, x26
0000000000006714	mov	x2, x28
0000000000006718	bl	0x7850 ; Objc message: _objc_msgSend
000000000000671c	mov	x0, x20
0000000000006720	mov	x1, x27
0000000000006724	bl	_$s10Foundation4DataV15_RepresentationOWOe
0000000000006728	bl	0x7880 ; symbol stub for: _objc_release_x26
000000000000672c	bl	0x788c ; symbol stub for: _objc_release_x28
0000000000006730	mov	x27, #0x0
0000000000006734	str	xzr, [x19, #0x80]
0000000000006738	tbnz	x23, #0x3f, 0x68dc
000000000000673c	cbz	x23, 0x680c
0000000000006740	add	x1, sp, #0x28
0000000000006744	mov	x0, x22
0000000000006748	mov	x2, #0x0
000000000000674c	mov	x3, #0x0
0000000000006750	bl	0x78bc ; symbol stub for: _swift_beginAccess
0000000000006754	ldr	x8, [x19, #0x70]
0000000000006758	subs	x8, x8, #0x1
000000000000675c	b.vs	0x68b8
0000000000006760	tbnz	x8, #0x3f, 0x68bc
0000000000006764	ldr	x9, [x22]
0000000000006768	ldr	x10, [x9, #0x10]
000000000000676c	cmp	x8, x10
0000000000006770	b.ge	0x68c0
0000000000006774	add	x8, x9, x8
0000000000006778	ldrb	w26, [x8, #0x20]
000000000000677c	ldr	x27, [x19, #0x80]
0000000000006780	mov	x1, sp
0000000000006784	mov	x0, x21
0000000000006788	mov	w2, #0x21
000000000000678c	mov	x3, #0x0
0000000000006790	bl	0x78bc ; symbol stub for: _swift_beginAccess
0000000000006794	ldr	x20, [x19, #0x78]
0000000000006798	mov	x0, x20
000000000000679c	bl	0x7934 ; symbol stub for: _swift_isUniquelyReferenced_nonNull_native
00000000000067a0	str	x20, [x19, #0x78]
00000000000067a4	tbz	w0, #0x0, 0x67f4
00000000000067a8	tbnz	x27, #0x3f, 0x68c4
00000000000067ac	ldr	x8, [x20, #0x10]
00000000000067b0	cmp	x27, x8
00000000000067b4	b.ge	0x68c8
00000000000067b8	add	x8, x20, x27
00000000000067bc	strb	w26, [x8, #0x20]
00000000000067c0	mov	x0, sp
00000000000067c4	bl	0x7904 ; symbol stub for: _swift_endAccess
00000000000067c8	ldr	x8, [x19, #0x80]
00000000000067cc	adds	x27, x8, #0x1
00000000000067d0	b.vs	0x68cc
00000000000067d4	str	x27, [x19, #0x80]
00000000000067d8	ldr	x8, [x19, #0x70]
00000000000067dc	subs	x8, x8, #0x1
00000000000067e0	b.vs	0x68d0
00000000000067e4	str	x8, [x19, #0x70]
00000000000067e8	subs	x23, x23, #0x1
00000000000067ec	b.ne	0x6758
00000000000067f0	b	0x680c
00000000000067f4	mov	x0, x20
00000000000067f8	bl	_$ss12_ArrayBufferV20_consumeAndCreateNewAByxGyFs5UInt8V_Tg5
00000000000067fc	mov	x20, x0
0000000000006800	str	x0, [x21]
0000000000006804	tbz	x27, #0x3f, 0x67ac
0000000000006808	b	0x68c4
000000000000680c	tbnz	wzr, #0x0, 0x68f4
0000000000006810	mov	x1, sp
0000000000006814	mov	x0, x21
0000000000006818	mov	w2, #0x21
000000000000681c	mov	x3, #0x0
0000000000006820	bl	0x78bc ; symbol stub for: _swift_beginAccess
0000000000006824	ldr	x20, [x21]
0000000000006828	mov	x0, x20
000000000000682c	bl	0x7934 ; symbol stub for: _swift_isUniquelyReferenced_nonNull_native
0000000000006830	str	x20, [x21]
0000000000006834	tbz	w0, #0x0, 0x6878
0000000000006838	tbnz	x27, #0x3f, 0x688c
000000000000683c	ldr	x8, [x20, #0x10]
0000000000006840	cmp	x27, x8
0000000000006844	b.ge	0x68e0
0000000000006848	add	x8, x20, x27
000000000000684c	strb	w25, [x8, #0x20]
0000000000006850	mov	x0, sp
0000000000006854	bl	0x7904 ; symbol stub for: _swift_endAccess
0000000000006858	ldr	x8, [x19, #0x80]
000000000000685c	adds	x8, x8, #0x1
0000000000006860	b.vs	0x68e4
0000000000006864	str	x8, [x19, #0x80]
0000000000006868	ldr	x8, [x19, #0x70]
000000000000686c	cmp	x8, #0x0
0000000000006870	b.gt	0x6518
0000000000006874	b	0x6890
0000000000006878	mov	x0, x20
000000000000687c	bl	_$ss12_ArrayBufferV20_consumeAndCreateNewAByxGyFs5UInt8V_Tg5
0000000000006880	mov	x20, x0
0000000000006884	str	x0, [x21]
0000000000006888	tbz	x27, #0x3f, 0x683c
000000000000688c	brk	#0x1
0000000000006890	str	xzr, [x19, #0x60]
0000000000006894	str	xzr, [x19, #0x70]
0000000000006898	ldp	x29, x30, [sp, #0xb0]
000000000000689c	ldp	x20, x19, [sp, #0xa0]
00000000000068a0	ldp	x22, x21, [sp, #0x90]
00000000000068a4	ldp	x24, x23, [sp, #0x80]
00000000000068a8	ldp	x26, x25, [sp, #0x70]
00000000000068ac	ldp	x28, x27, [sp, #0x60]
00000000000068b0	add	sp, sp, #0xc0
00000000000068b4	ret
00000000000068b8	brk	#0x1
00000000000068bc	brk	#0x1
00000000000068c0	brk	#0x1
00000000000068c4	brk	#0x1
00000000000068c8	brk	#0x1
00000000000068cc	brk	#0x1
00000000000068d0	brk	#0x1
00000000000068d4	brk	#0x1
00000000000068d8	brk	#0x1
00000000000068dc	brk	#0x1
00000000000068e0	brk	#0x1
00000000000068e4	brk	#0x1
00000000000068e8	brk	#0x1
00000000000068ec	brk	#0x1
00000000000068f0	brk	#0x1
00000000000068f4	brk	#0x1
_$s23ReverseComplementNativeAAC10appendLine33_7341E755E43D82421753CA7418E11504LLyyF:
00000000000068f8	sub	sp, sp, #0xc0
00000000000068fc	stp	x28, x27, [sp, #0x60]
0000000000006900	stp	x26, x25, [sp, #0x70]
0000000000006904	stp	x24, x23, [sp, #0x80]
0000000000006908	stp	x22, x21, [sp, #0x90]
000000000000690c	stp	x20, x19, [sp, #0xa0]
0000000000006910	stp	x29, x30, [sp, #0xb0]
0000000000006914	add	x29, sp, #0xb0
0000000000006918	ldp	x9, x8, [x20, #0x50]
000000000000691c	subs	x8, x8, x9
0000000000006920	b.vs	0x6b70
0000000000006924	mov	x19, x20
0000000000006928	ldr	x9, [x20, #0x60]
000000000000692c	cbnz	x9, 0x6934
0000000000006930	str	x8, [x19, #0x60]
0000000000006934	ldr	x9, [x19, #0x70]
0000000000006938	adds	x22, x9, x8
000000000000693c	b.vs	0x6b74
0000000000006940	add	x20, x19, #0x68
0000000000006944	add	x1, sp, #0x48
0000000000006948	mov	x0, x20
000000000000694c	mov	w2, #0x1
0000000000006950	mov	x3, #0x0
0000000000006954	bl	0x78bc ; symbol stub for: _swift_beginAccess
0000000000006958	ldr	x21, [x19, #0x68]
000000000000695c	ldr	x8, [x21, #0x10]
0000000000006960	cmp	x8, x22
0000000000006964	b.ge	0x6a28
0000000000006968	adds	x22, x8, x8
000000000000696c	b.vs	0x6b7c
0000000000006970	tbnz	x22, #0x3f, 0x6b80
0000000000006974	mov	x0, x21
0000000000006978	bl	0x78d4 ; symbol stub for: _swift_bridgeObjectRetain
000000000000697c	cbz	x22, 0x69ac
0000000000006980	nop
0000000000006984	ldr	x1, #0x1704 ; literal pool symbol address: _$ss5UInt8VN
0000000000006988	mov	x0, x22
000000000000698c	bl	0x77fc ; symbol stub for: _$sSa28_allocateBufferUninitialized15minimumCapacitys06_ArrayB0VyxGSi_tFZ
0000000000006990	mov	x23, x0
0000000000006994	str	x22, [x0, #0x10]
0000000000006998	add	x0, x0, #0x20
000000000000699c	mov	x1, x22
00000000000069a0	bl	0x7814 ; symbol stub for: _bzero
00000000000069a4	ldr	x0, [x20]
00000000000069a8	b	0x69b8
00000000000069ac	nop
00000000000069b0	ldr	x23, #0x16e0 ; literal pool symbol address: __swiftEmptyArrayStorage
00000000000069b4	mov	x0, x21
00000000000069b8	str	x23, [x19, #0x68]
00000000000069bc	bl	0x78c8 ; symbol stub for: _swift_bridgeObjectRelease
00000000000069c0	ldr	x8, [x19, #0x70]
00000000000069c4	tbnz	x8, #0x3f, 0x6b84
00000000000069c8	ldr	x9, [x21, #0x10]
00000000000069cc	cmp	x9, x8
00000000000069d0	b.lt	0x6b88
00000000000069d4	add	x22, x21, #0x20
00000000000069d8	mov	w23, #0x1
00000000000069dc	bfi	x23, x8, #1, #63
00000000000069e0	add	x1, sp, #0x30
00000000000069e4	mov	x0, x20
00000000000069e8	mov	w2, #0x21
00000000000069ec	mov	x3, #0x0
00000000000069f0	bl	0x78bc ; symbol stub for: _swift_beginAccess
00000000000069f4	mov	x0, x21
00000000000069f8	bl	0x78d4 ; symbol stub for: _swift_bridgeObjectRetain
00000000000069fc	mov	x0, #0x0
0000000000006a00	mov	x1, #0x0
0000000000006a04	mov	x2, x21
0000000000006a08	mov	x3, x22
0000000000006a0c	mov	x4, #0x0
0000000000006a10	mov	x5, x23
0000000000006a14	bl	_$sSa15replaceSubrange_4withySnySiG_qd__nt7ElementQyd__RszSlRd__lFs5UInt8V_s10ArraySliceVyAGGTg5
0000000000006a18	add	x0, sp, #0x30
0000000000006a1c	bl	0x7904 ; symbol stub for: _swift_endAccess
0000000000006a20	mov	x0, x21
0000000000006a24	bl	0x78c8 ; symbol stub for: _swift_bridgeObjectRelease
0000000000006a28	ldp	x25, x26, [x19, #0x50]
0000000000006a2c	cmp	x26, x25
0000000000006a30	b.lt	0x6b78
0000000000006a34	cmp	x25, x26
0000000000006a38	b.ne	0x6a5c
0000000000006a3c	ldp	x29, x30, [sp, #0xb0]
0000000000006a40	ldp	x20, x19, [sp, #0xa0]
0000000000006a44	ldp	x22, x21, [sp, #0x90]
0000000000006a48	ldp	x24, x23, [sp, #0x80]
0000000000006a4c	ldp	x26, x25, [sp, #0x70]
0000000000006a50	ldp	x28, x27, [sp, #0x60]
0000000000006a54	add	sp, sp, #0xc0
0000000000006a58	ret
0000000000006a5c	cmp	x25, x26
0000000000006a60	b.ge	0x6b8c
0000000000006a64	add	x21, x19, #0x38
0000000000006a68	add	x22, x19, #0x30
0000000000006a6c	add	x1, sp, #0x30
0000000000006a70	mov	x0, x21
0000000000006a74	mov	x2, #0x0
0000000000006a78	mov	x3, #0x0
0000000000006a7c	bl	0x78bc ; symbol stub for: _swift_beginAccess
0000000000006a80	add	x1, sp, #0x18
0000000000006a84	mov	x0, x22
0000000000006a88	mov	x2, #0x0
0000000000006a8c	mov	x3, #0x0
0000000000006a90	bl	0x78bc ; symbol stub for: _swift_beginAccess
0000000000006a94	ldr	x27, [x19, #0x70]
0000000000006a98	tbnz	x25, #0x3f, 0x6b5c
0000000000006a9c	ldr	x8, [x21]
0000000000006aa0	ldr	x9, [x8, #0x10]
0000000000006aa4	cmp	x25, x9
0000000000006aa8	b.ge	0x6b60
0000000000006aac	add	x8, x8, x25
0000000000006ab0	ldrb	w8, [x8, #0x20]
0000000000006ab4	ldr	x23, [x22]
0000000000006ab8	ldr	x9, [x23, #0x10]
0000000000006abc	cmp	x9, x8
0000000000006ac0	b.ls	0x6b64
0000000000006ac4	add	x8, x23, x8
0000000000006ac8	ldrb	w28, [x8, #0x20]
0000000000006acc	mov	x1, sp
0000000000006ad0	mov	x0, x20
0000000000006ad4	mov	w2, #0x21
0000000000006ad8	mov	x3, #0x0
0000000000006adc	bl	0x78bc ; symbol stub for: _swift_beginAccess
0000000000006ae0	ldr	x24, [x20]
0000000000006ae4	mov	x0, x23
0000000000006ae8	bl	0x78d4 ; symbol stub for: _swift_bridgeObjectRetain
0000000000006aec	mov	x0, x24
0000000000006af0	bl	0x7934 ; symbol stub for: _swift_isUniquelyReferenced_nonNull_native
0000000000006af4	str	x24, [x20]
0000000000006af8	tbz	w0, #0x0, 0x6b44
0000000000006afc	tbnz	x27, #0x3f, 0x6b58
0000000000006b00	ldr	x8, [x24, #0x10]
0000000000006b04	cmp	x27, x8
0000000000006b08	b.ge	0x6b68
0000000000006b0c	add	x8, x24, x27
0000000000006b10	strb	w28, [x8, #0x20]
0000000000006b14	mov	x0, sp
0000000000006b18	bl	0x7904 ; symbol stub for: _swift_endAccess
0000000000006b1c	mov	x0, x23
0000000000006b20	bl	0x78c8 ; symbol stub for: _swift_bridgeObjectRelease
0000000000006b24	ldr	x8, [x19, #0x70]
0000000000006b28	adds	x27, x8, #0x1
0000000000006b2c	b.vs	0x6b6c
0000000000006b30	add	x25, x25, #0x1
0000000000006b34	str	x27, [x19, #0x70]
0000000000006b38	cmp	x26, x25
0000000000006b3c	b.ne	0x6a98
0000000000006b40	b	0x6a3c
0000000000006b44	mov	x0, x24
0000000000006b48	bl	_$ss12_ArrayBufferV20_consumeAndCreateNewAByxGyFs5UInt8V_Tg5
0000000000006b4c	mov	x24, x0
0000000000006b50	str	x0, [x20]
0000000000006b54	tbz	x27, #0x3f, 0x6b00
0000000000006b58	brk	#0x1
0000000000006b5c	brk	#0x1
0000000000006b60	brk	#0x1
0000000000006b64	brk	#0x1
0000000000006b68	brk	#0x1
0000000000006b6c	brk	#0x1
0000000000006b70	brk	#0x1
0000000000006b74	brk	#0x1
0000000000006b78	brk	#0x1
0000000000006b7c	brk	#0x1
0000000000006b80	brk	#0x1
0000000000006b84	brk	#0x1
0000000000006b88	brk	#0x1
0000000000006b8c	brk	#0x1
_$s23ReverseComplementNativeAAC5solve33_7341E755E43D82421753CA7418E11504LLyyF:
0000000000006b90	sub	sp, sp, #0x70
0000000000006b94	stp	x24, x23, [sp, #0x30]
0000000000006b98	stp	x22, x21, [sp, #0x40]
0000000000006b9c	stp	x20, x19, [sp, #0x50]
0000000000006ba0	stp	x29, x30, [sp, #0x60]
0000000000006ba4	add	x29, sp, #0x60
0000000000006ba8	str	xzr, [x20, #0x80]
0000000000006bac	str	xzr, [x20, #0x60]
0000000000006bb0	str	xzr, [x20, #0x70]
0000000000006bb4	stp	xzr, xzr, [x20, #0x40]
0000000000006bb8	bl	_$s23ReverseComplementNativeAAC8nextLine33_7341E755E43D82421753CA7418E11504LLSbyF
0000000000006bbc	tbz	w0, #0x0, 0x6c60
0000000000006bc0	add	x0, x20, #0x38
0000000000006bc4	mov	x1, sp
0000000000006bc8	mov	x2, #0x0
0000000000006bcc	mov	x3, #0x0
0000000000006bd0	bl	0x78bc ; symbol stub for: _swift_beginAccess
0000000000006bd4	b	0x6be4
0000000000006bd8	bl	_$s23ReverseComplementNativeAAC10appendLine33_7341E755E43D82421753CA7418E11504LLyyF
0000000000006bdc	bl	_$s23ReverseComplementNativeAAC8nextLine33_7341E755E43D82421753CA7418E11504LLSbyF
0000000000006be0	tbz	w0, #0x0, 0x6c60
0000000000006be4	ldr	x8, [x20, #0x50]
0000000000006be8	tbnz	x8, #0x3f, 0x6d48
0000000000006bec	ldr	x9, [x20, #0x38]
0000000000006bf0	ldr	x10, [x9, #0x10]
0000000000006bf4	cmp	x8, x10
0000000000006bf8	b.ge	0x6d4c
0000000000006bfc	add	x8, x9, x8
0000000000006c00	ldrb	w19, [x8, #0x20]
0000000000006c04	mov	w0, #0x3e
0000000000006c08	mov	x1, #-0x1f00000000000000
0000000000006c0c	bl	0x77c0 ; symbol stub for: _$sSS11utf8CStrings15ContiguousArrayVys4Int8VGvg
0000000000006c10	ldr	x21, [x0, #0x10]
0000000000006c14	bl	0x7940 ; symbol stub for: _swift_release
0000000000006c18	cbz	x21, 0x6d50
0000000000006c1c	cmp	w19, #0x3e
0000000000006c20	b.ne	0x6bd8
0000000000006c24	bl	_$s23ReverseComplementNativeAAC10finishData33_7341E755E43D82421753CA7418E11504LLyyF
0000000000006c28	ldr	x19, [x20, #0x50]
0000000000006c2c	ldr	x8, [x20, #0x40]
0000000000006c30	subs	x21, x8, x19
0000000000006c34	b.vs	0x6d54
0000000000006c38	ldr	x22, [x20, #0x38]
0000000000006c3c	mov	x0, x22
0000000000006c40	bl	0x78d4 ; symbol stub for: _swift_bridgeObjectRetain
0000000000006c44	mov	x1, x19
0000000000006c48	mov	x2, x21
0000000000006c4c	bl	_$s23ReverseComplementNativeAAC5write33_7341E755E43D82421753CA7418E11504LL3buf3off3lenySays5UInt8VG_S2itF
0000000000006c50	mov	x0, x22
0000000000006c54	bl	0x78c8 ; symbol stub for: _swift_bridgeObjectRelease
0000000000006c58	bl	_$s23ReverseComplementNativeAAC8nextLine33_7341E755E43D82421753CA7418E11504LLSbyF
0000000000006c5c	tbnz	w0, #0x0, 0x6be4
0000000000006c60	bl	_$s23ReverseComplementNativeAAC10finishData33_7341E755E43D82421753CA7418E11504LLyyF
0000000000006c64	ldr	x23, [x20, #0x80]
0000000000006c68	cmp	x23, #0x1
0000000000006c6c	b.lt	0x6d28
0000000000006c70	add	x0, x20, #0x78
0000000000006c74	add	x1, sp, #0x18
0000000000006c78	mov	x2, #0x0
0000000000006c7c	mov	x3, #0x0
0000000000006c80	bl	0x78bc ; symbol stub for: _swift_beginAccess
0000000000006c84	ldr	x19, [x20, #0x78]
0000000000006c88	ldr	x8, [x19, #0x10]
0000000000006c8c	cmp	x8, x23
0000000000006c90	b.lt	0x6d58
0000000000006c94	add	x21, x19, #0x20
0000000000006c98	mov	w22, #0x1
0000000000006c9c	bfi	x22, x23, #1, #63
0000000000006ca0	mov	x0, x19
0000000000006ca4	bl	0x78d4 ; symbol stub for: _swift_bridgeObjectRetain
0000000000006ca8	mov	x1, x21
0000000000006cac	mov	x2, #0x0
0000000000006cb0	mov	x3, x22
0000000000006cb4	bl	_$s10Foundation4DataVyACxcSTRzs5UInt8V7ElementRtzlufCs10ArraySliceVyAEG_Tg5Tf4gd_n
0000000000006cb8	mov	x21, x0
0000000000006cbc	mov	x22, x1
0000000000006cc0	mov	x0, x19
0000000000006cc4	bl	0x78c8 ; symbol stub for: _swift_bridgeObjectRelease
0000000000006cc8	nop
0000000000006ccc	ldr	x0, #0x557c ; Objc class ref: bad class ref
0000000000006cd0	bl	0x785c ; symbol stub for: _objc_opt_self
0000000000006cd4	nop
0000000000006cd8	ldr	x1, #0x5560
0000000000006cdc	bl	0x7850 ; Objc message: _objc_msgSend
0000000000006ce0	mov	x29, x29
0000000000006ce4	bl	0x7898 ; symbol stub for: _objc_retainAutoreleasedReturnValue
0000000000006ce8	mov	x19, x0
0000000000006cec	mov	x0, x21
0000000000006cf0	mov	x1, x22
0000000000006cf4	bl	0x779c ; symbol stub for: _$s10Foundation4DataV19_bridgeToObjectiveCSo6NSDataCyF
0000000000006cf8	mov	x23, x0
0000000000006cfc	nop
0000000000006d00	ldr	x1, #0x5540
0000000000006d04	mov	x0, x19
0000000000006d08	mov	x2, x23
0000000000006d0c	bl	0x7850 ; Objc message: _objc_msgSend
0000000000006d10	mov	x0, x21
0000000000006d14	mov	x1, x22
0000000000006d18	bl	_$s10Foundation4DataV15_RepresentationOWOe
0000000000006d1c	bl	0x7868 ; symbol stub for: _objc_release_x19
0000000000006d20	bl	0x7874 ; symbol stub for: _objc_release_x23
0000000000006d24	str	xzr, [x20, #0x80]
0000000000006d28	bl	0x77a8 ; symbol stub for: _$s6Darwin6stdoutSpySo7__sFILEVGvg
0000000000006d2c	bl	0x7820 ; symbol stub for: _fflush
0000000000006d30	ldp	x29, x30, [sp, #0x60]
0000000000006d34	ldp	x20, x19, [sp, #0x50]
0000000000006d38	ldp	x22, x21, [sp, #0x40]
0000000000006d3c	ldp	x24, x23, [sp, #0x30]
0000000000006d40	add	sp, sp, #0x70
0000000000006d44	ret
0000000000006d48	brk	#0x1
0000000000006d4c	brk	#0x1
0000000000006d50	brk	#0x1
0000000000006d54	brk	#0x1
0000000000006d58	brk	#0x1
_$s23ReverseComplementNativeAAC12runBenchmark1nySi_tF:
0000000000006d5c	b	_$s23ReverseComplementNativeAAC5solve33_7341E755E43D82421753CA7418E11504LLyyF
_$s23ReverseComplementNativeAACfd:
0000000000006d60	stp	x29, x30, [sp, #-0x10]!
0000000000006d64	mov	x29, sp
0000000000006d68	ldr	x0, [x20, #0x18]
0000000000006d6c	bl	0x78c8 ; symbol stub for: _swift_bridgeObjectRelease
0000000000006d70	ldr	x0, [x20, #0x28]
0000000000006d74	bl	0x78c8 ; symbol stub for: _swift_bridgeObjectRelease
0000000000006d78	ldr	x0, [x20, #0x30]
0000000000006d7c	bl	0x78c8 ; symbol stub for: _swift_bridgeObjectRelease
0000000000006d80	ldr	x0, [x20, #0x38]
0000000000006d84	bl	0x78c8 ; symbol stub for: _swift_bridgeObjectRelease
0000000000006d88	ldr	x0, [x20, #0x68]
0000000000006d8c	bl	0x78c8 ; symbol stub for: _swift_bridgeObjectRelease
0000000000006d90	ldr	x0, [x20, #0x78]
0000000000006d94	bl	0x78c8 ; symbol stub for: _swift_bridgeObjectRelease
0000000000006d98	mov	x0, x20
0000000000006d9c	ldp	x29, x30, [sp], #0x10
0000000000006da0	ret
_$s23ReverseComplementNativeAACfD:
0000000000006da4	stp	x29, x30, [sp, #-0x10]!
0000000000006da8	mov	x29, sp
0000000000006dac	ldr	x0, [x20, #0x18]
0000000000006db0	bl	0x78c8 ; symbol stub for: _swift_bridgeObjectRelease
0000000000006db4	ldr	x0, [x20, #0x28]
0000000000006db8	bl	0x78c8 ; symbol stub for: _swift_bridgeObjectRelease
0000000000006dbc	ldr	x0, [x20, #0x30]
0000000000006dc0	bl	0x78c8 ; symbol stub for: _swift_bridgeObjectRelease
0000000000006dc4	ldr	x0, [x20, #0x38]
0000000000006dc8	bl	0x78c8 ; symbol stub for: _swift_bridgeObjectRelease
0000000000006dcc	ldr	x0, [x20, #0x68]
0000000000006dd0	bl	0x78c8 ; symbol stub for: _swift_bridgeObjectRelease
0000000000006dd4	ldr	x0, [x20, #0x78]
0000000000006dd8	bl	0x78c8 ; symbol stub for: _swift_bridgeObjectRelease
0000000000006ddc	mov	x0, x20
0000000000006de0	mov	w1, #0x88
0000000000006de4	mov	w2, #0x7
0000000000006de8	ldp	x29, x30, [sp], #0x10
0000000000006dec	b	0x78ec ; symbol stub for: _swift_deallocClassInstance
_$ss12_ArrayBufferV20_consumeAndCreateNewAByxGyFs5UInt8V_Tg5:
0000000000006df0	mov	x3, x0
0000000000006df4	ldr	x1, [x0, #0x10]
0000000000006df8	mov	w0, #0x0
0000000000006dfc	mov	w2, #0x0
0000000000006e00	b	_$ss12_ArrayBufferV20_consumeAndCreateNew14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFs5UInt8V_Tg5
_$s23ReverseComplementNativeAACMa:
0000000000006e04	stp	x29, x30, [sp, #-0x10]!
0000000000006e08	adr	x0, #0x5480
0000000000006e0c	nop
0000000000006e10	bl	0x785c ; symbol stub for: _objc_opt_self
0000000000006e14	mov	x1, #0x0
0000000000006e18	ldp	x29, x30, [sp], #0x10
0000000000006e1c	ret
_$ss12_ArrayBufferV20_consumeAndCreateNew14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFs5UInt8V_Tg5:
0000000000006e20	stp	x22, x21, [sp, #-0x30]!
0000000000006e24	stp	x20, x19, [sp, #0x10]
0000000000006e28	stp	x29, x30, [sp, #0x20]
0000000000006e2c	add	x29, sp, #0x20
0000000000006e30	mov	x19, x3
0000000000006e34	mov	x20, x0
0000000000006e38	tbz	w2, #0x0, 0x6e60
0000000000006e3c	ldr	x8, [x19, #0x18]
0000000000006e40	lsr	x8, x8, #1
0000000000006e44	cmp	x8, x1
0000000000006e48	b.ge	0x6e64
0000000000006e4c	adds	x8, x8, x8
0000000000006e50	b.vs	0x6ef4
0000000000006e54	cmp	x8, x1
0000000000006e58	csel	x8, x1, x8, lt
0000000000006e5c	b	0x6e64
0000000000006e60	mov	x8, x1
0000000000006e64	ldr	x21, [x19, #0x10]
0000000000006e68	cmp	x8, x21
0000000000006e6c	csel	x22, x21, x8, lt
0000000000006e70	cbz	x22, 0x6eb0
0000000000006e74	adr	x0, #0x5634
0000000000006e78	nop
0000000000006e7c	bl	___swift_instantiateConcreteTypeFromMangledName
0000000000006e80	add	x1, x22, #0x20
0000000000006e84	mov	w2, #0x7
0000000000006e88	bl	0x78b0 ; symbol stub for: _swift_allocObject
0000000000006e8c	mov	x22, x0
0000000000006e90	bl	0x794c ; symbol stub for: _swift_retain
0000000000006e94	bl	__swift_stdlib_malloc_size
0000000000006e98	lsl	x8, x0, #1
0000000000006e9c	sub	x8, x8, #0x40
0000000000006ea0	stp	x21, x8, [x22, #0x10]
0000000000006ea4	mov	x0, x22
0000000000006ea8	bl	0x7940 ; symbol stub for: _swift_release
0000000000006eac	b	0x6eb8
0000000000006eb0	nop
0000000000006eb4	ldr	x22, #0x11dc ; literal pool symbol address: __swiftEmptyArrayStorage
0000000000006eb8	add	x0, x22, #0x20
0000000000006ebc	add	x1, x19, #0x20
0000000000006ec0	mov	x2, x21
0000000000006ec4	tbz	w20, #0x0, 0x6ed4
0000000000006ec8	bl	0x7844 ; symbol stub for: _memmove
0000000000006ecc	str	xzr, [x19, #0x10]
0000000000006ed0	b	0x6ed8
0000000000006ed4	bl	0x7838 ; symbol stub for: _memcpy
0000000000006ed8	mov	x0, x19
0000000000006edc	bl	0x78c8 ; symbol stub for: _swift_bridgeObjectRelease
0000000000006ee0	mov	x0, x22
0000000000006ee4	ldp	x29, x30, [sp, #0x20]
0000000000006ee8	ldp	x20, x19, [sp, #0x10]
0000000000006eec	ldp	x22, x21, [sp], #0x30
0000000000006ef0	ret
0000000000006ef4	brk	#0x1
_$sSa15replaceSubrange_4withySnySiG_qd__nt7ElementQyd__RszSlRd__lFs5UInt8V_s10ArraySliceVyAGGTg5:
0000000000006ef8	stp	x28, x27, [sp, #-0x60]!
0000000000006efc	stp	x26, x25, [sp, #0x10]
0000000000006f00	stp	x24, x23, [sp, #0x20]
0000000000006f04	stp	x22, x21, [sp, #0x30]
0000000000006f08	stp	x20, x19, [sp, #0x40]
0000000000006f0c	stp	x29, x30, [sp, #0x50]
0000000000006f10	add	x29, sp, #0x50
0000000000006f14	tbnz	x0, #0x3f, 0x6fd4
0000000000006f18	mov	x24, x1
0000000000006f1c	ldr	x26, [x20]
0000000000006f20	ldr	x8, [x26, #0x10]
0000000000006f24	cmp	x8, x1
0000000000006f28	b.lt	0x6fd8
0000000000006f2c	mov	x25, x0
0000000000006f30	subs	x9, x24, x0
0000000000006f34	b.vs	0x6fdc
0000000000006f38	mov	x19, x5
0000000000006f3c	mov	x21, x4
0000000000006f40	lsr	x10, x5, #1
0000000000006f44	subs	x27, x10, x4
0000000000006f48	b.vs	0x6fe0
0000000000006f4c	subs	x9, x27, x9
0000000000006f50	b.vs	0x6fe4
0000000000006f54	adds	x28, x8, x9
0000000000006f58	b.vs	0x6fe8
0000000000006f5c	mov	x22, x3
0000000000006f60	mov	x23, x2
0000000000006f64	mov	x0, x26
0000000000006f68	bl	0x7934 ; symbol stub for: _swift_isUniquelyReferenced_nonNull_native
0000000000006f6c	str	x26, [x20]
0000000000006f70	cbz	w0, 0x6f80
0000000000006f74	ldr	x8, [x26, #0x18]
0000000000006f78	cmp	x28, x8, lsr #1
0000000000006f7c	b.le	0x6f9c
0000000000006f80	ldr	x8, [x26, #0x10]
0000000000006f84	cmp	x8, x28
0000000000006f88	csel	x1, x28, x8, lt
0000000000006f8c	mov	w2, #0x1
0000000000006f90	mov	x3, x26
0000000000006f94	bl	_$ss12_ArrayBufferV20_consumeAndCreateNew14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFs5UInt8V_Tg5
0000000000006f98	str	x0, [x20]
0000000000006f9c	mov	x0, x25
0000000000006fa0	mov	x1, x24
0000000000006fa4	mov	x2, x27
0000000000006fa8	mov	x3, x23
0000000000006fac	mov	x4, x22
0000000000006fb0	mov	x5, x21
0000000000006fb4	mov	x6, x19
0000000000006fb8	ldp	x29, x30, [sp, #0x50]
0000000000006fbc	ldp	x20, x19, [sp, #0x40]
0000000000006fc0	ldp	x22, x21, [sp, #0x30]
0000000000006fc4	ldp	x24, x23, [sp, #0x20]
0000000000006fc8	ldp	x26, x25, [sp, #0x10]
0000000000006fcc	ldp	x28, x27, [sp], #0x60
0000000000006fd0	b	_$ss20_ArrayBufferProtocolPsE15replaceSubrange_4with10elementsOfySnySiG_Siqd__ntSlRd__7ElementQyd__AGRtzlFs01_aB0Vys5UInt8VG_s0A5SliceVyAMGTg5
0000000000006fd4	brk	#0x1
0000000000006fd8	brk	#0x1
0000000000006fdc	brk	#0x1
0000000000006fe0	brk	#0x1
0000000000006fe4	brk	#0x1
0000000000006fe8	brk	#0x1
_$ss20_ArrayBufferProtocolPsE15replaceSubrange_4with10elementsOfySnySiG_Siqd__ntSlRd__7ElementQyd__AGRtzlFs01_aB0Vys5UInt8VG_s0A5SliceVyAMGTg5:
0000000000006fec	sub	sp, sp, #0x70
0000000000006ff0	stp	x28, x27, [sp, #0x10]
0000000000006ff4	stp	x26, x25, [sp, #0x20]
0000000000006ff8	stp	x24, x23, [sp, #0x30]
0000000000006ffc	stp	x22, x21, [sp, #0x40]
0000000000007000	stp	x20, x19, [sp, #0x50]
0000000000007004	stp	x29, x30, [sp, #0x60]
0000000000007008	add	x29, sp, #0x60
000000000000700c	subs	x8, x1, x0
0000000000007010	b.vs	0x72d0
0000000000007014	subs	x19, x2, x8
0000000000007018	b.vs	0x72d4
000000000000701c	mov	x28, x5
0000000000007020	mov	x21, x4
0000000000007024	mov	x23, x1
0000000000007028	mov	x24, x0
000000000000702c	ldr	x20, [x20]
0000000000007030	ldr	x8, [x20, #0x10]
0000000000007034	cbz	x19, 0x7044
0000000000007038	adds	x9, x8, x19
000000000000703c	b.vs	0x72e0
0000000000007040	str	x9, [x20, #0x10]
0000000000007044	adds	x22, x23, x19
0000000000007048	b.vs	0x72d8
000000000000704c	subs	x25, x8, x23
0000000000007050	b.vs	0x72dc
0000000000007054	add	x8, x20, #0x20
0000000000007058	add	x26, x8, x23
000000000000705c	add	x27, x26, x19
0000000000007060	cmp	x19, #0x1
0000000000007064	b.lt	0x7118
0000000000007068	stp	x3, x6, [sp]
000000000000706c	mov	x0, x27
0000000000007070	mov	x1, x26
0000000000007074	mov	x2, x25
0000000000007078	bl	0x7844 ; symbol stub for: _memmove
000000000000707c	mov	x8, x28
0000000000007080	cmp	x24, x23
0000000000007084	b.eq	0x7250
0000000000007088	cmp	x23, x24
000000000000708c	b.lt	0x72ec
0000000000007090	cmp	x24, x23
0000000000007094	b.ge	0x72f0
0000000000007098	ldr	x8, [sp, #0x8]
000000000000709c	lsr	x9, x8, #1
00000000000070a0	mvn	x8, x24
00000000000070a4	add	x10, x8, x23
00000000000070a8	cmp	x28, x9
00000000000070ac	csel	x8, x28, x9, gt
00000000000070b0	sub	x8, x8, x28
00000000000070b4	cmp	x10, x8
00000000000070b8	csel	x8, x10, x8, lo
00000000000070bc	add	x8, x8, #0x1
00000000000070c0	cmp	x8, #0x10
00000000000070c4	b.ls	0x7110
00000000000070c8	add	x11, x20, #0x20
00000000000070cc	add	x13, x11, x24
00000000000070d0	cmp	x28, x9
00000000000070d4	csel	x12, x28, x9, gt
00000000000070d8	sub	x12, x12, x28
00000000000070dc	cmp	x10, x12
00000000000070e0	csel	x12, x10, x12, lo
00000000000070e4	add	x10, x21, x28
00000000000070e8	add	x14, x12, x28
00000000000070ec	add	x14, x14, x21
00000000000070f0	add	x14, x14, #0x1
00000000000070f4	cmp	x13, x14
00000000000070f8	b.hs	0x71f0
00000000000070fc	add	x12, x12, x24
0000000000007100	add	x11, x12, x11
0000000000007104	add	x11, x11, #0x1
0000000000007108	cmp	x10, x11
000000000000710c	b.hs	0x71f0
0000000000007110	mov	x8, x28
0000000000007114	b	0x7228
0000000000007118	tbnz	x2, #0x3f, 0x72e8
000000000000711c	cbz	x2, 0x714c
0000000000007120	lsr	x9, x6, #1
0000000000007124	cmp	x28, x9
0000000000007128	b.ge	0x72c8
000000000000712c	ldrb	w10, [x21, x28]
0000000000007130	strb	w10, [x8, x24]
0000000000007134	cmn	x24, #0x1
0000000000007138	b.vs	0x72cc
000000000000713c	add	x28, x28, #0x1
0000000000007140	add	x24, x24, #0x1
0000000000007144	subs	x2, x2, #0x1
0000000000007148	b.ne	0x7124
000000000000714c	mov	x0, x3
0000000000007150	bl	0x7958 ; symbol stub for: _swift_unknownObjectRelease
0000000000007154	cbz	x19, 0x71a8
0000000000007158	negs	x19, x19
000000000000715c	b.vs	0x72f8
0000000000007160	mov	x0, x27
0000000000007164	cmp	x19, x25
0000000000007168	b.ge	0x71c8
000000000000716c	mov	x1, x26
0000000000007170	mov	x2, x19
0000000000007174	bl	0x7838 ; symbol stub for: _memcpy
0000000000007178	subs	x2, x25, x19
000000000000717c	b.vs	0x72fc
0000000000007180	add	x1, x26, x19
0000000000007184	mov	x0, x26
0000000000007188	ldp	x29, x30, [sp, #0x60]
000000000000718c	ldp	x20, x19, [sp, #0x50]
0000000000007190	ldp	x22, x21, [sp, #0x40]
0000000000007194	ldp	x24, x23, [sp, #0x30]
0000000000007198	ldp	x26, x25, [sp, #0x20]
000000000000719c	ldp	x28, x27, [sp, #0x10]
00000000000071a0	add	sp, sp, #0x70
00000000000071a4	b	0x7844 ; symbol stub for: _memmove
00000000000071a8	ldp	x29, x30, [sp, #0x60]
00000000000071ac	ldp	x20, x19, [sp, #0x50]
00000000000071b0	ldp	x22, x21, [sp, #0x40]
00000000000071b4	ldp	x24, x23, [sp, #0x30]
00000000000071b8	ldp	x26, x25, [sp, #0x20]
00000000000071bc	ldp	x28, x27, [sp, #0x10]
00000000000071c0	add	sp, sp, #0x70
00000000000071c4	ret
00000000000071c8	mov	x1, x26
00000000000071cc	mov	x2, x25
00000000000071d0	ldp	x29, x30, [sp, #0x60]
00000000000071d4	ldp	x20, x19, [sp, #0x50]
00000000000071d8	ldp	x22, x21, [sp, #0x40]
00000000000071dc	ldp	x24, x23, [sp, #0x30]
00000000000071e0	ldp	x26, x25, [sp, #0x20]
00000000000071e4	ldp	x28, x27, [sp, #0x10]
00000000000071e8	add	sp, sp, #0x70
00000000000071ec	b	0x7838 ; symbol stub for: _memcpy
00000000000071f0	and	x11, x8, #0xf
00000000000071f4	tst	x8, #0xf
00000000000071f8	mov	w12, #0x10
00000000000071fc	csel	x11, x12, x11, eq
0000000000007200	sub	x11, x8, x11
0000000000007204	add	x12, x11, x24
0000000000007208	add	x8, x11, x28
000000000000720c	add	x13, x20, x24
0000000000007210	add	x13, x13, #0x20
0000000000007214	ldr	q0, [x10], #0x10
0000000000007218	str	q0, [x13], #0x10
000000000000721c	subs	x11, x11, #0x10
0000000000007220	b.ne	0x7214
0000000000007224	mov	x24, x12
0000000000007228	add	x10, x20, x24
000000000000722c	add	x10, x10, #0x20
0000000000007230	sub	x11, x23, x24
0000000000007234	cmp	x8, x9
0000000000007238	b.ge	0x72c0
000000000000723c	ldrb	w12, [x21, x8]
0000000000007240	strb	w12, [x10], #0x1
0000000000007244	add	x8, x8, #0x1
0000000000007248	subs	x11, x11, #0x1
000000000000724c	b.ne	0x7234
0000000000007250	cmp	x22, x23
0000000000007254	b.lt	0x72e4
0000000000007258	b.eq	0x729c
000000000000725c	cmp	x22, x23
0000000000007260	b.le	0x72f4
0000000000007264	ldr	x9, [sp, #0x8]
0000000000007268	lsr	x9, x9, #1
000000000000726c	add	x10, x20, x23
0000000000007270	add	x10, x10, #0x20
0000000000007274	mov	x11, x8
0000000000007278	cmp	x8, x28
000000000000727c	b.lt	0x72c4
0000000000007280	cmp	x11, x9
0000000000007284	b.ge	0x72c4
0000000000007288	ldrb	w12, [x21, x11]
000000000000728c	strb	w12, [x10], #0x1
0000000000007290	add	x11, x11, #0x1
0000000000007294	subs	x19, x19, #0x1
0000000000007298	b.ne	0x7278
000000000000729c	ldr	x0, [sp]
00000000000072a0	ldp	x29, x30, [sp, #0x60]
00000000000072a4	ldp	x20, x19, [sp, #0x50]
00000000000072a8	ldp	x22, x21, [sp, #0x40]
00000000000072ac	ldp	x24, x23, [sp, #0x30]
00000000000072b0	ldp	x26, x25, [sp, #0x20]
00000000000072b4	ldp	x28, x27, [sp, #0x10]
00000000000072b8	add	sp, sp, #0x70
00000000000072bc	b	0x7958 ; symbol stub for: _swift_unknownObjectRelease
00000000000072c0	brk	#0x1
00000000000072c4	brk	#0x1
00000000000072c8	brk	#0x1
00000000000072cc	brk	#0x1
00000000000072d0	brk	#0x1
00000000000072d4	brk	#0x1
00000000000072d8	brk	#0x1
00000000000072dc	brk	#0x1
00000000000072e0	brk	#0x1
00000000000072e4	brk	#0x1
00000000000072e8	brk	#0x1
00000000000072ec	brk	#0x1
00000000000072f0	brk	#0x1
00000000000072f4	brk	#0x1
00000000000072f8	brk	#0x1
00000000000072fc	brk	#0x1
___swift_instantiateConcreteTypeFromMangledName:
0000000000007300	stp	x20, x19, [sp, #-0x20]!
0000000000007304	stp	x29, x30, [sp, #0x10]
0000000000007308	mov	x19, x0
000000000000730c	ldr	x0, [x0]
0000000000007310	tbnz	x0, #0x3f, 0x7320
0000000000007314	ldp	x29, x30, [sp, #0x10]
0000000000007318	ldp	x20, x19, [sp], #0x20
000000000000731c	ret
0000000000007320	neg	x1, x0, asr #32
0000000000007324	add	x0, x19, w0, sxtw
0000000000007328	mov	x2, #0x0
000000000000732c	mov	x3, #0x0
0000000000007330	bl	0x7910 ; symbol stub for: _swift_getTypeByMangledNameInContext
0000000000007334	str	x0, [x19]
0000000000007338	b	0x7314
__swift_stdlib_malloc_size:
000000000000733c	b	0x782c ; symbol stub for: _malloc_size
_$s10Foundation4DataV06InlineB0VyAESWcfCTf4nd_n:
0000000000007340	sub	x2, x1, x0
0000000000007344	cmp	x0, #0x0
0000000000007348	csel	x11, xzr, x2, eq
000000000000734c	cmp	x11, #0xff
0000000000007350	b.gt	0x746c
0000000000007354	sub	sp, sp, #0x20
0000000000007358	stp	x29, x30, [sp, #0x10]
000000000000735c	add	x29, sp, #0x10
0000000000007360	mov	x8, x0
0000000000007364	mov	x9, #0x0
0000000000007368	stur	xzr, [sp, #0x6]
000000000000736c	str	xzr, [sp]
0000000000007370	strb	w11, [sp, #0xe]
0000000000007374	mov	x12, #0x0
0000000000007378	mov	x14, #0x0
000000000000737c	mov	x13, #0x0
0000000000007380	mov	x15, #0x0
0000000000007384	mov	x1, #0x0
0000000000007388	mov	x16, #0x0
000000000000738c	mov	x17, #0x0
0000000000007390	mov	x0, #0x0
0000000000007394	mov	x3, #0x0
0000000000007398	mov	x4, #0x0
000000000000739c	mov	x5, #0x0
00000000000073a0	mov	x6, #0x0
00000000000073a4	mov	x10, #0x0
00000000000073a8	cbz	x8, 0x7428
00000000000073ac	cbz	x2, 0x7428
00000000000073b0	mov	x0, sp
00000000000073b4	mov	x1, x8
00000000000073b8	bl	0x7838 ; symbol stub for: _memcpy
00000000000073bc	ldrb	w10, [sp]
00000000000073c0	ldrb	w8, [sp, #0x1]
00000000000073c4	ldrb	w9, [sp, #0x9]
00000000000073c8	ldrb	w11, [sp, #0xa]
00000000000073cc	lsl	x15, x9, #8
00000000000073d0	lsl	x13, x11, #16
00000000000073d4	ldrb	w11, [sp, #0x5]
00000000000073d8	ldrb	w17, [sp, #0x6]
00000000000073dc	ldrb	w9, [sp, #0xb]
00000000000073e0	ldrb	w12, [sp, #0xc]
00000000000073e4	ldrb	w16, [sp, #0xd]
00000000000073e8	lsl	x14, x9, #24
00000000000073ec	lsl	x12, x12, #32
00000000000073f0	lsl	x9, x16, #40
00000000000073f4	ldrb	w16, [sp, #0x7]
00000000000073f8	lsl	x16, x16, #56
00000000000073fc	lsl	x17, x17, #48
0000000000007400	lsl	x0, x11, #40
0000000000007404	ldrb	w11, [sp, #0x3]
0000000000007408	ldrb	w1, [sp, #0x4]
000000000000740c	lsl	x3, x1, #32
0000000000007410	lsl	x4, x11, #24
0000000000007414	ldrb	w11, [sp, #0x2]
0000000000007418	ldrb	w1, [sp, #0x8]
000000000000741c	lsl	x5, x11, #16
0000000000007420	lsl	x6, x8, #8
0000000000007424	ldrb	w11, [sp, #0xe]
0000000000007428	orr	x8, x15, x1
000000000000742c	orr	x8, x8, x13
0000000000007430	orr	x8, x8, x14
0000000000007434	orr	x8, x8, x12
0000000000007438	and	w11, w11, #0xff
000000000000743c	orr	x1, x8, x9
0000000000007440	bfi	x1, x11, #48, #8
0000000000007444	orr	x8, x6, x10
0000000000007448	orr	x8, x8, x5
000000000000744c	orr	x8, x8, x4
0000000000007450	orr	x8, x8, x3
0000000000007454	orr	x8, x8, x0
0000000000007458	orr	x8, x8, x17
000000000000745c	orr	x0, x8, x16
0000000000007460	ldp	x29, x30, [sp, #0x10]
0000000000007464	add	sp, sp, #0x20
0000000000007468	ret
000000000000746c	brk	#0x1
_$s10Foundation4DataV10LargeSliceVyAESWcfCTf4nd_n:
0000000000007470	stp	x20, x19, [sp, #-0x20]!
0000000000007474	stp	x29, x30, [sp, #0x10]
0000000000007478	add	x29, sp, #0x10
000000000000747c	mov	x20, x0
0000000000007480	sub	x8, x1, x0
0000000000007484	cmp	x0, #0x0
0000000000007488	csel	x19, xzr, x8, eq
000000000000748c	mov	x0, #0x0
0000000000007490	bl	0x7784 ; symbol stub for: _$s10Foundation13__DataStorageCMa
0000000000007494	ldr	w1, [x0, #0x30]
0000000000007498	ldrh	w2, [x0, #0x34]
000000000000749c	bl	0x78b0 ; symbol stub for: _swift_allocObject
00000000000074a0	mov	x2, x0
00000000000074a4	mov	x0, x20
00000000000074a8	mov	x1, x19
00000000000074ac	mov	x20, x2
00000000000074b0	bl	0x7778 ; symbol stub for: _$s10Foundation13__DataStorageC5bytes6lengthACSVSg_Sitcfc
00000000000074b4	tbnz	x19, #0x3f, 0x74e4
00000000000074b8	mov	x20, x0
00000000000074bc	mov	x0, #0x0
00000000000074c0	bl	0x7790 ; symbol stub for: _$s10Foundation4DataV14RangeReferenceCMa
00000000000074c4	mov	w1, #0x20
00000000000074c8	mov	w2, #0x7
00000000000074cc	bl	0x78b0 ; symbol stub for: _swift_allocObject
00000000000074d0	stp	xzr, x19, [x0, #0x10]
00000000000074d4	mov	x1, x20
00000000000074d8	ldp	x29, x30, [sp, #0x10]
00000000000074dc	ldp	x20, x19, [sp], #0x20
00000000000074e0	ret
00000000000074e4	brk	#0x1
_$ss10ArraySliceVys5UInt8VGAByxG10Foundation15ContiguousBytesAgDRszlWl:
00000000000074e8	stp	x29, x30, [sp, #-0x10]!
00000000000074ec	nop
00000000000074f0	ldr	x0, #0x4fc8
00000000000074f4	cbz	x0, 0x7500
00000000000074f8	ldp	x29, x30, [sp], #0x10
00000000000074fc	ret
0000000000007500	adr	x0, #0x4fb0
0000000000007504	nop
0000000000007508	bl	___swift_instantiateConcreteTypeFromMangledNameAbstract
000000000000750c	mov	x1, x0
0000000000007510	nop
0000000000007514	ldr	x0, #0xb54 ; literal pool symbol address: _$ss10ArraySliceVyxG10Foundation15ContiguousBytesADs5UInt8VRszlMc
0000000000007518	bl	0x7928 ; symbol stub for: _swift_getWitnessTable
000000000000751c	adr	x8, #0x4f9c
0000000000007520	nop
0000000000007524	stlr	x0, [x8]
0000000000007528	ldp	x29, x30, [sp], #0x10
000000000000752c	ret
___swift_instantiateConcreteTypeFromMangledNameAbstract:
0000000000007530	stp	x20, x19, [sp, #-0x20]!
0000000000007534	stp	x29, x30, [sp, #0x10]
0000000000007538	mov	x19, x0
000000000000753c	ldr	x0, [x0]
0000000000007540	tbnz	x0, #0x3f, 0x7550
0000000000007544	ldp	x29, x30, [sp, #0x10]
0000000000007548	ldp	x20, x19, [sp], #0x20
000000000000754c	ret
0000000000007550	neg	x2, x0, asr #32
0000000000007554	add	x1, x19, w0, sxtw
0000000000007558	mov	w0, #0xff
000000000000755c	mov	x3, #0x0
0000000000007560	mov	x4, #0x0
0000000000007564	bl	0x791c ; symbol stub for: _swift_getTypeByMangledNameInContextInMetadataState
0000000000007568	str	x0, [x19]
000000000000756c	b	0x7544
0000000000007570	stp	x29, x30, [sp, #-0x10]!
0000000000007574	mov	x29, sp
0000000000007578	ldr	x0, [x20, #0x10]
000000000000757c	bl	0x7958 ; symbol stub for: _swift_unknownObjectRelease
0000000000007580	mov	x0, x20
0000000000007584	mov	w1, #0x30
0000000000007588	mov	w2, #0x7
000000000000758c	ldp	x29, x30, [sp], #0x10
0000000000007590	b	0x78f8 ; symbol stub for: _swift_deallocObject
___swift_project_boxed_opaque_existential_1:
0000000000007594	ldur	x8, [x1, #-0x8]
0000000000007598	ldr	w8, [x8, #0x50]
000000000000759c	tbz	w8, #0x11, 0x75b4
00000000000075a0	ldr	x9, [x0]
00000000000075a4	and	x8, x8, #0xff
00000000000075a8	add	x10, x8, #0x10
00000000000075ac	bic	x8, x10, x8
00000000000075b0	add	x0, x9, x8
00000000000075b4	ret
___swift_destroy_boxed_opaque_existential_1:
00000000000075b8	ldr	x1, [x0, #0x18]
00000000000075bc	ldur	x8, [x1, #-0x8]
00000000000075c0	ldrb	w9, [x8, #0x52]
00000000000075c4	tbnz	w9, #0x1, 0x75d0
00000000000075c8	ldr	x2, [x8, #0x8]
00000000000075cc	br	x2
00000000000075d0	ldr	x0, [x0]
00000000000075d4	b	0x7940 ; symbol stub for: _swift_release
_$s10Foundation4DataV15_RepresentationOWOe:
00000000000075d8	stp	x20, x19, [sp, #-0x20]!
00000000000075dc	stp	x29, x30, [sp, #0x10]
00000000000075e0	add	x29, sp, #0x10
00000000000075e4	mov	x19, x1
00000000000075e8	lsr	x8, x1, #62
00000000000075ec	cmp	w8, #0x1
00000000000075f0	b.eq	0x7600
00000000000075f4	cmp	w8, #0x2
00000000000075f8	b.ne	0x7610
00000000000075fc	bl	0x7940 ; symbol stub for: _swift_release
0000000000007600	and	x0, x19, #0x3fffffffffffffff
0000000000007604	ldp	x29, x30, [sp, #0x10]
0000000000007608	ldp	x20, x19, [sp], #0x20
000000000000760c	b	0x7940 ; symbol stub for: _swift_release
0000000000007610	ldp	x29, x30, [sp, #0x10]
0000000000007614	ldp	x20, x19, [sp], #0x20
0000000000007618	ret
_$s10Foundation4DataVyACxcSTRzs5UInt8V7ElementRtzlufCs10ArraySliceVyAEG_Tg5Tf4gd_n:
000000000000761c	sub	sp, sp, #0x70
0000000000007620	stp	x24, x23, [sp, #0x30]
0000000000007624	stp	x22, x21, [sp, #0x40]
0000000000007628	stp	x20, x19, [sp, #0x50]
000000000000762c	stp	x29, x30, [sp, #0x60]
0000000000007630	add	x29, sp, #0x60
0000000000007634	mov	x19, x3
0000000000007638	mov	x21, x2
000000000000763c	mov	x22, x1
0000000000007640	mov	x20, x0
0000000000007644	adr	x0, #0x4e6c
0000000000007648	nop
000000000000764c	bl	___swift_instantiateConcreteTypeFromMangledName
0000000000007650	mov	x23, x0
0000000000007654	str	x0, [sp, #0x20]
0000000000007658	bl	_$ss10ArraySliceVys5UInt8VGAByxG10Foundation15ContiguousBytesAgDRszlWl
000000000000765c	str	x0, [sp, #0x28]
0000000000007660	adr	x0, #0xb58
0000000000007664	nop
0000000000007668	mov	w1, #0x30
000000000000766c	mov	w2, #0x7
0000000000007670	bl	0x78b0 ; symbol stub for: _swift_allocObject
0000000000007674	str	x0, [sp, #0x8]
0000000000007678	stp	x20, x22, [x0, #0x10]
000000000000767c	stp	x21, x19, [x0, #0x20]
0000000000007680	add	x0, sp, #0x8
0000000000007684	mov	x1, x23
0000000000007688	bl	___swift_project_boxed_opaque_existential_1
000000000000768c	ldp	x21, x8, [x0, #0x10]
0000000000007690	lsr	x8, x8, #1
0000000000007694	subs	x19, x8, x21
0000000000007698	b.vs	0x7770
000000000000769c	ldr	x22, [x0, #0x8]
00000000000076a0	mov	x0, x20
00000000000076a4	bl	0x7964 ; symbol stub for: _swift_unknownObjectRetain
00000000000076a8	cmp	x22, #0x0
00000000000076ac	ccmp	x19, #0x0, #0x4, ne
00000000000076b0	b.ne	0x76c0
00000000000076b4	mov	x19, #0x0
00000000000076b8	mov	x20, #-0x4000000000000000
00000000000076bc	b	0x7748
00000000000076c0	add	x20, x22, x21
00000000000076c4	add	x21, x20, x19
00000000000076c8	adr	x0, #0x4df8
00000000000076cc	nop
00000000000076d0	bl	___swift_instantiateConcreteTypeFromMangledName
00000000000076d4	cmp	x19, #0xe
00000000000076d8	b.le	0x771c
00000000000076dc	mov	w8, #0x7fffffff
00000000000076e0	cmp	x19, x8
00000000000076e4	b.ge	0x7734
00000000000076e8	mov	x0, #0x0
00000000000076ec	bl	0x7784 ; symbol stub for: _$s10Foundation13__DataStorageCMa
00000000000076f0	ldr	w1, [x0, #0x30]
00000000000076f4	ldrh	w2, [x0, #0x34]
00000000000076f8	bl	0x78b0 ; symbol stub for: _swift_allocObject
00000000000076fc	mov	x2, x0
0000000000007700	mov	x0, x20
0000000000007704	mov	x1, x19
0000000000007708	mov	x20, x2
000000000000770c	bl	0x7778 ; symbol stub for: _$s10Foundation13__DataStorageC5bytes6lengthACSVSg_Sitcfc
0000000000007710	lsl	x19, x19, #32
0000000000007714	orr	x20, x0, #0x4000000000000000
0000000000007718	b	0x7748
000000000000771c	mov	x0, x20
0000000000007720	mov	x1, x21
0000000000007724	bl	_$s10Foundation4DataV06InlineB0VyAESWcfCTf4nd_n
0000000000007728	mov	x19, x0
000000000000772c	and	x20, x1, #0xffffffffffffff
0000000000007730	b	0x7748
0000000000007734	mov	x0, x20
0000000000007738	mov	x1, x21
000000000000773c	bl	_$s10Foundation4DataV10LargeSliceVyAESWcfCTf4nd_n
0000000000007740	mov	x19, x0
0000000000007744	orr	x20, x1, #0x8000000000000000
0000000000007748	add	x0, sp, #0x8
000000000000774c	bl	___swift_destroy_boxed_opaque_existential_1
0000000000007750	mov	x0, x19
0000000000007754	mov	x1, x20
0000000000007758	ldp	x29, x30, [sp, #0x60]
000000000000775c	ldp	x20, x19, [sp, #0x50]
0000000000007760	ldp	x22, x21, [sp, #0x40]
0000000000007764	ldp	x24, x23, [sp, #0x30]
0000000000007768	add	sp, sp, #0x70
000000000000776c	ret
0000000000007770	brk	#0x1
_$s23ReverseComplementNativeAAC6buffer33_7341E755E43D82421753CA7418E11504LLSays5UInt8VGvpfi:
0000000000007774	b	_$s23ReverseComplementNativeAAC12outputBuffer33_7341E755E43D82421753CA7418E11504LLSays5UInt8VGvpfi
