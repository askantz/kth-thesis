../../../SkantzBinaries/Native/FastaNative:
(__TEXT,__text) section
_$s11FastaNativeAACABycfC:
0000000000005484	stp	x20, x19, [sp, #-0x20]!
0000000000005488	stp	x29, x30, [sp, #0x10]
000000000000548c	add	x29, sp, #0x10
0000000000005490	mov	x0, x20
0000000000005494	mov	w1, #0x60
0000000000005498	mov	w2, #0x7
000000000000549c	bl	0x7858 ; symbol stub for: _swift_allocObject
00000000000054a0	mov	x19, x0
00000000000054a4	nop
00000000000054a8	ldr	q0, 0x7970
00000000000054ac	nop
00000000000054b0	ldr	q1, 0x7980
00000000000054b4	stp	q0, q1, [x0, #0x10]
00000000000054b8	nop
00000000000054bc	ldr	q0, 0x7990
00000000000054c0	str	q0, [x0, #0x30]
00000000000054c4	mov	x8, #0x11f
00000000000054c8	movk	x8, #0xd000, lsl #48
00000000000054cc	adr	x9, #0x2624 ; literal pool for: "GGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGGGAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGACCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAATACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCAGCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGGAGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCCAGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAA"
00000000000054d0	nop
00000000000054d4	sub	x9, x9, #0x20
00000000000054d8	orr	x9, x9, #0x8000000000000000
00000000000054dc	stp	x8, x9, [x0, #0x40]
00000000000054e0	adr	x0, #0x6ff0
00000000000054e4	nop
00000000000054e8	bl	___swift_instantiateConcreteTypeFromMangledName
00000000000054ec	mov	x20, x0
00000000000054f0	adr	x1, #0x6ce8
00000000000054f4	nop
00000000000054f8	bl	0x78e8 ; symbol stub for: _swift_initStaticObject
00000000000054fc	str	x0, [x19, #0x50]
0000000000005500	adr	x1, #0x6df0
0000000000005504	nop
0000000000005508	mov	x0, x20
000000000000550c	bl	0x78e8 ; symbol stub for: _swift_initStaticObject
0000000000005510	str	x0, [x19, #0x58]
0000000000005514	mov	x0, x19
0000000000005518	ldp	x29, x30, [sp, #0x10]
000000000000551c	ldp	x20, x19, [sp], #0x20
0000000000005520	ret
_$s11FastaNativeAACABycfc:
0000000000005524	stp	x20, x19, [sp, #-0x20]!
0000000000005528	stp	x29, x30, [sp, #0x10]
000000000000552c	add	x29, sp, #0x10
0000000000005530	nop
0000000000005534	ldr	q0, 0x7970
0000000000005538	nop
000000000000553c	ldr	q1, 0x7980
0000000000005540	stp	q0, q1, [x20, #0x10]
0000000000005544	nop
0000000000005548	ldr	q0, 0x7990
000000000000554c	str	q0, [x20, #0x30]
0000000000005550	mov	x8, #0x11f
0000000000005554	movk	x8, #0xd000, lsl #48
0000000000005558	adr	x9, #0x2598 ; literal pool for: "GGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGGGAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGACCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAATACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCAGCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGGAGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCCAGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAA"
000000000000555c	nop
0000000000005560	sub	x9, x9, #0x20
0000000000005564	orr	x9, x9, #0x8000000000000000
0000000000005568	stp	x8, x9, [x20, #0x40]
000000000000556c	adr	x0, #0x6f64
0000000000005570	nop
0000000000005574	bl	___swift_instantiateConcreteTypeFromMangledName
0000000000005578	mov	x19, x0
000000000000557c	adr	x1, #0x6c5c
0000000000005580	nop
0000000000005584	bl	0x78e8 ; symbol stub for: _swift_initStaticObject
0000000000005588	str	x0, [x20, #0x50]
000000000000558c	adr	x1, #0x6d64
0000000000005590	nop
0000000000005594	mov	x0, x19
0000000000005598	bl	0x78e8 ; symbol stub for: _swift_initStaticObject
000000000000559c	str	x0, [x20, #0x58]
00000000000055a0	mov	x0, x20
00000000000055a4	ldp	x29, x30, [sp, #0x10]
00000000000055a8	ldp	x20, x19, [sp], #0x20
00000000000055ac	ret
___swift_instantiateConcreteTypeFromMangledName:
00000000000055b0	stp	x20, x19, [sp, #-0x20]!
00000000000055b4	stp	x29, x30, [sp, #0x10]
00000000000055b8	mov	x19, x0
00000000000055bc	ldr	x0, [x0]
00000000000055c0	tbnz	x0, #0x3f, 0x55d0
00000000000055c4	ldp	x29, x30, [sp, #0x10]
00000000000055c8	ldp	x20, x19, [sp], #0x20
00000000000055cc	ret
00000000000055d0	neg	x1, x0, asr #32
00000000000055d4	add	x0, x19, w0, sxtw
00000000000055d8	mov	x2, #0x0
00000000000055dc	mov	x3, #0x0
00000000000055e0	bl	0x78c4 ; symbol stub for: _swift_getTypeByMangledNameInContext
00000000000055e4	str	x0, [x19]
00000000000055e8	b	0x55c4
_$s11FastaNativeAAC2IMSivpfi:
00000000000055ec	mov	w0, #0x22c0
00000000000055f0	movk	w0, #0x2, lsl #16
00000000000055f4	ret
_$s11FastaNativeAAC2IASivpfi:
00000000000055f8	mov	w0, #0xf25
00000000000055fc	ret
_$s11FastaNativeAAC2ICSivpfi:
0000000000005600	mov	w0, #0x7385
0000000000005604	ret
_$s11FastaNativeAAC4seedSivpfi:
0000000000005608	mov	w0, #0x2a
000000000000560c	ret
_$s11FastaNativeAAC10bufferSizeSivpfi:
0000000000005610	mov	w0, #0xf400
0000000000005614	ret
_$s11FastaNativeAAC5widthSivpfi:
0000000000005618	mov	w0, #0x3c
000000000000561c	ret
_$s11FastaNativeAAC9aluStringSSvpfi:
0000000000005620	adr	x8, #0x24d0 ; literal pool for: "GGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGGGAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGACCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAATACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCAGCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGGAGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCCAGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAA"
0000000000005624	nop
0000000000005628	sub	x8, x8, #0x20
000000000000562c	orr	x1, x8, #0x8000000000000000
0000000000005630	mov	x0, #0x11f
0000000000005634	movk	x0, #0xd000, lsl #48
0000000000005638	ret
_$s11FastaNativeAAC3iubSayAB9AminoAcidVGvpfi:
000000000000563c	stp	x29, x30, [sp, #-0x10]!
0000000000005640	mov	x29, sp
0000000000005644	adr	x0, #0x6e8c
0000000000005648	nop
000000000000564c	bl	___swift_instantiateConcreteTypeFromMangledName
0000000000005650	adr	x1, #0x6d08
0000000000005654	nop
0000000000005658	ldp	x29, x30, [sp], #0x10
000000000000565c	b	0x78e8 ; symbol stub for: _swift_initStaticObject
_$s11FastaNativeAAC11homosapiensSayAB9AminoAcidVGvpfi:
0000000000005660	stp	x29, x30, [sp, #-0x10]!
0000000000005664	mov	x29, sp
0000000000005668	adr	x0, #0x6e68
000000000000566c	nop
0000000000005670	bl	___swift_instantiateConcreteTypeFromMangledName
0000000000005674	adr	x1, #0x6dfc
0000000000005678	nop
000000000000567c	ldp	x29, x30, [sp], #0x10
0000000000005680	b	0x78e8 ; symbol stub for: _swift_initStaticObject
_$s11FastaNativeAAC06randomA02id4desc4acid_ySS_SSSayAB9AminoAcidVGzSitF:
0000000000005684	sub	sp, sp, #0xd0
0000000000005688	stp	d9, d8, [sp, #0x60]
000000000000568c	stp	x28, x27, [sp, #0x70]
0000000000005690	stp	x26, x25, [sp, #0x80]
0000000000005694	stp	x24, x23, [sp, #0x90]
0000000000005698	stp	x22, x21, [sp, #0xa0]
000000000000569c	stp	x20, x19, [sp, #0xb0]
00000000000056a0	stp	x29, x30, [sp, #0xc0]
00000000000056a4	add	x29, sp, #0xc0
00000000000056a8	str	x20, [sp, #0x18]
00000000000056ac	mov	x22, x5
00000000000056b0	mov	x23, x4
00000000000056b4	mov	x19, x3
00000000000056b8	mov	x24, x2
00000000000056bc	mov	x25, x1
00000000000056c0	mov	x26, x0
00000000000056c4	ldr	x20, [x4]
00000000000056c8	ldr	x8, [x20, #0x10]
00000000000056cc	subs	x21, x8, #0x1
00000000000056d0	b.eq	0x5718
00000000000056d4	cbz	x8, 0x5f1c
00000000000056d8	mov	x0, x20
00000000000056dc	bl	0x78f4 ; symbol stub for: _swift_isUniquelyReferenced_nonNull_native
00000000000056e0	tbz	w0, #0x0, 0x5f28
00000000000056e4	mov	x8, #0x0
00000000000056e8	add	x9, x20, #0x30
00000000000056ec	ldr	x10, [x20, #0x10]
00000000000056f0	cmp	x8, x10
00000000000056f4	b.hs	0x5ed4
00000000000056f8	ldur	d0, [x9, #-0x10]
00000000000056fc	ldr	d1, [x9]
0000000000005700	fadd	d0, d0, d1
0000000000005704	str	d0, [x9], #0x10
0000000000005708	add	x8, x8, #0x1
000000000000570c	cmp	x21, x8
0000000000005710	b.ne	0x56ec
0000000000005714	str	x20, [x23]
0000000000005718	nop
000000000000571c	ldr	x1, #0x2974 ; literal pool symbol address: _$ss5UInt8VN
0000000000005720	mov	w20, #0xf400
0000000000005724	mov	w0, #0xf400
0000000000005728	bl	0x778c ; symbol stub for: _$sSa28_allocateBufferUninitialized15minimumCapacitys06_ArrayB0VyxGSi_tFZ
000000000000572c	mov	x21, x0
0000000000005730	str	x20, [x0, #0x10]
0000000000005734	add	x0, x0, #0x20
0000000000005738	mov	w1, #0xa
000000000000573c	mov	w2, #0xf400
0000000000005740	bl	0x77d4 ; symbol stub for: _memset
0000000000005744	mov	w8, #0x3e
0000000000005748	mov	x9, #-0x1f00000000000000
000000000000574c	stp	x8, x9, [sp, #0x38]
0000000000005750	add	x20, sp, #0x38
0000000000005754	mov	x0, x26
0000000000005758	mov	x1, x25
000000000000575c	bl	0x7768 ; symbol stub for: _$sSS6appendyySSF
0000000000005760	ldp	x8, x25, [sp, #0x38]
0000000000005764	stp	x8, x25, [sp, #0x38]
0000000000005768	mov	x0, x25
000000000000576c	bl	0x7888 ; symbol stub for: _swift_bridgeObjectRetain
0000000000005770	add	x20, sp, #0x38
0000000000005774	mov	w0, #0x20
0000000000005778	mov	x1, #-0x1f00000000000000
000000000000577c	bl	0x7768 ; symbol stub for: _$sSS6appendyySSF
0000000000005780	ldp	x20, x26, [sp, #0x38]
0000000000005784	mov	x0, x25
0000000000005788	bl	0x7870 ; symbol stub for: _swift_bridgeObjectRelease
000000000000578c	stp	x20, x26, [sp, #0x38]
0000000000005790	mov	x0, x26
0000000000005794	bl	0x7888 ; symbol stub for: _swift_bridgeObjectRetain
0000000000005798	add	x20, sp, #0x38
000000000000579c	mov	x0, x24
00000000000057a0	mov	x1, x19
00000000000057a4	bl	0x7768 ; symbol stub for: _$sSS6appendyySSF
00000000000057a8	ldp	x20, x19, [sp, #0x38]
00000000000057ac	mov	x0, x26
00000000000057b0	bl	0x7870 ; symbol stub for: _swift_bridgeObjectRelease
00000000000057b4	stp	x20, x19, [sp, #0x38]
00000000000057b8	mov	x0, x19
00000000000057bc	bl	0x7888 ; symbol stub for: _swift_bridgeObjectRetain
00000000000057c0	add	x20, sp, #0x38
00000000000057c4	mov	w0, #0xa
00000000000057c8	mov	x1, #-0x1f00000000000000
00000000000057cc	bl	0x7768 ; symbol stub for: _$sSS6appendyySSF
00000000000057d0	mov	x24, x22
00000000000057d4	ldp	x20, x22, [sp, #0x38]
00000000000057d8	mov	x0, x19
00000000000057dc	bl	0x7870 ; symbol stub for: _swift_bridgeObjectRelease
00000000000057e0	stp	x20, x22, [sp, #0x38]
00000000000057e4	mov	x22, x24
00000000000057e8	nop
00000000000057ec	ldr	x1, #0x284c ; literal pool symbol address: _$sSSN
00000000000057f0	nop
00000000000057f4	ldr	x2, #0x2854 ; literal pool symbol address: _$sSSs25LosslessStringConvertiblesWP
00000000000057f8	nop
00000000000057fc	ldr	x3, #0x2844 ; literal pool symbol address: _$sSSSTsWP
0000000000005800	add	x0, sp, #0x38
0000000000005804	bl	0x7780 ; symbol stub for: _$sSSySSxcs25LosslessStringConvertibleRzSTRzSJ7ElementSTRtzlufC
0000000000005808	mov	x26, x1
000000000000580c	bl	_$ss32_copyCollectionToContiguousArrayys0dE0Vy7ElementQzGxSlRzlFSS8UTF8ViewV_Tgq5
0000000000005810	mov	x24, x0
0000000000005814	ldr	x8, [x0, #0x10]
0000000000005818	add	x1, x0, #0x20
000000000000581c	mov	w3, #0x1
0000000000005820	bfi	x3, x8, #1, #63
0000000000005824	mov	x2, #0x0
0000000000005828	bl	_$s10Foundation4DataVyACxcSTRzs5UInt8V7ElementRtzlufCs10ArraySliceVyAEG_Tg5Tf4gd_n
000000000000582c	mov	x19, x0
0000000000005830	mov	x20, x1
0000000000005834	nop
0000000000005838	ldr	x0, #0x6990 ; Objc class ref: bad class ref
000000000000583c	bl	0x77ec ; symbol stub for: _objc_opt_self
0000000000005840	nop
0000000000005844	ldr	x1, #0x6974
0000000000005848	str	x0, [sp, #0x20]
000000000000584c	bl	0x77e0 ; Objc message: _objc_msgSend
0000000000005850	mov	x29, x29
0000000000005854	bl	0x784c ; symbol stub for: _objc_retainAutoreleasedReturnValue
0000000000005858	mov	x25, x0
000000000000585c	mov	x0, x19
0000000000005860	mov	x1, x20
0000000000005864	bl	0x7750 ; symbol stub for: _$s10Foundation4DataV19_bridgeToObjectiveCSo6NSDataCyF
0000000000005868	mov	x27, x0
000000000000586c	nop
0000000000005870	ldr	x1, #0x6950
0000000000005874	mov	x0, x25
0000000000005878	mov	x2, x27
000000000000587c	bl	0x77e0 ; Objc message: _objc_msgSend
0000000000005880	bl	0x7828 ; symbol stub for: _objc_release_x25
0000000000005884	bl	0x7834 ; symbol stub for: _objc_release_x27
0000000000005888	mov	x0, x19
000000000000588c	mov	x1, x20
0000000000005890	bl	_$s10Foundation4DataV15_RepresentationOWOe
0000000000005894	cmp	x22, #0x1
0000000000005898	b.lt	0x5dc8
000000000000589c	stp	x26, x24, [sp]
00000000000058a0	mov	x20, #0x0
00000000000058a4	mov	w26, #0x3c
00000000000058a8	mov	w27, #0xf25
00000000000058ac	mov	w25, #0x7385
00000000000058b0	nop
00000000000058b4	ldr	d8, 0x79a0
00000000000058b8	mov	x28, #0x0
00000000000058bc	cmp	x22, #0x3c
00000000000058c0	str	x22, [sp, #0x10]
00000000000058c4	csel	x22, x22, x26, lt
00000000000058c8	ldr	x8, [sp, #0x18]
00000000000058cc	ldr	x26, [x8, #0x28]
00000000000058d0	b	0x58e4
00000000000058d4	cmp	x28, x22
00000000000058d8	b.eq	0x5bc4
00000000000058dc	cmp	x28, x22
00000000000058e0	b.eq	0x5ed0
00000000000058e4	mul	x8, x26, x27
00000000000058e8	smulh	x9, x26, x27
00000000000058ec	cmp	x9, x8, asr #63
00000000000058f0	b.ne	0x5ebc
00000000000058f4	adds	x8, x8, x25
00000000000058f8	b.vs	0x5ec0
00000000000058fc	mov	x9, #0xbe91
0000000000005900	movk	x9, #0xfd6c, lsl #16
0000000000005904	movk	x9, #0xad01, lsl #32
0000000000005908	movk	x9, #0x3bee, lsl #48
000000000000590c	smulh	x9, x8, x9
0000000000005910	asr	x10, x9, #15
0000000000005914	add	x9, x10, x9, lsr #63
0000000000005918	mov	w10, #0x22c0
000000000000591c	movk	w10, #0x2, lsl #16
0000000000005920	msub	x26, x9, x10, x8
0000000000005924	ldr	x8, [x23]
0000000000005928	ldr	x9, [x8, #0x10]
000000000000592c	cbz	x9, 0x599c
0000000000005930	mov	x11, #0x0
0000000000005934	scvtf	d0, x26
0000000000005938	fmul	d0, d0, d8
000000000000593c	sub	x10, x9, #0x1
0000000000005940	add	x12, x8, #0x20
0000000000005944	subs	x13, x10, x11
0000000000005948	b.vs	0x5e00
000000000000594c	cmp	x13, #0x0
0000000000005950	cinc	x13, x13, lt
0000000000005954	adds	x13, x11, x13, asr #1
0000000000005958	b.vs	0x5e04
000000000000595c	cmp	x13, x9
0000000000005960	b.hs	0x5e08
0000000000005964	lsl	x14, x13, #4
0000000000005968	ldr	d1, [x12, x14]
000000000000596c	sub	x14, x13, #0x1
0000000000005970	fcmp	d0, d1
0000000000005974	csel	x10, x10, x14, hi
0000000000005978	csinc	x11, x11, x13, ls
000000000000597c	cmp	x10, x11
0000000000005980	b.ge	0x5944
0000000000005984	cmn	x10, #0x1
0000000000005988	b.lt	0x5f14
000000000000598c	add	x10, x10, #0x1
0000000000005990	cmp	x10, x9
0000000000005994	b.lt	0x59a8
0000000000005998	b	0x5ec4
000000000000599c	mov	x10, #0x0
00000000000059a0	cmp	x10, x9
00000000000059a4	b.ge	0x5ec4
00000000000059a8	add	x8, x8, x10, lsl #4
00000000000059ac	ldrb	w19, [x8, #0x28]
00000000000059b0	mov	x0, x21
00000000000059b4	bl	0x78f4 ; symbol stub for: _swift_isUniquelyReferenced_nonNull_native
00000000000059b8	tbz	w0, #0x0, 0x5bb0
00000000000059bc	tbnz	x20, #0x3f, 0x5ec8
00000000000059c0	ldr	x8, [x21, #0x10]
00000000000059c4	cmp	x20, x8
00000000000059c8	b.ge	0x5ecc
00000000000059cc	add	x28, x28, #0x1
00000000000059d0	add	x24, x21, #0x20
00000000000059d4	strb	w19, [x24, x20]
00000000000059d8	add	x20, x20, #0x1
00000000000059dc	ldr	x8, [x21, #0x10]
00000000000059e0	cmp	x20, x8
00000000000059e4	b.ne	0x58d4
00000000000059e8	mov	w25, #0x1
00000000000059ec	bfi	x25, x20, #1, #63
00000000000059f0	adr	x0, #0x6c38
00000000000059f4	nop
00000000000059f8	bl	___swift_instantiateConcreteTypeFromMangledName
00000000000059fc	mov	x19, x0
0000000000005a00	str	x0, [sp, #0x50]
0000000000005a04	bl	_$ss10ArraySliceVys5UInt8VGAByxG10Foundation15ContiguousBytesAgDRszlWl
0000000000005a08	str	x0, [sp, #0x58]
0000000000005a0c	adr	x0, #0x2844
0000000000005a10	nop
0000000000005a14	mov	w1, #0x30
0000000000005a18	mov	w2, #0x7
0000000000005a1c	bl	0x7858 ; symbol stub for: _swift_allocObject
0000000000005a20	str	x0, [sp, #0x38]
0000000000005a24	stp	x21, x24, [x0, #0x10]
0000000000005a28	stp	xzr, x25, [x0, #0x20]
0000000000005a2c	add	x0, sp, #0x38
0000000000005a30	mov	x1, x19
0000000000005a34	bl	___swift_project_boxed_opaque_existential_1
0000000000005a38	ldp	x8, x9, [x0, #0x10]
0000000000005a3c	lsr	x9, x9, #1
0000000000005a40	subs	x25, x9, x8
0000000000005a44	b.vs	0x5f18
0000000000005a48	cbz	x25, 0x5ab4
0000000000005a4c	ldr	x9, [x0, #0x8]
0000000000005a50	add	x19, x9, x8
0000000000005a54	adr	x0, #0x6be4
0000000000005a58	nop
0000000000005a5c	bl	___swift_instantiateConcreteTypeFromMangledName
0000000000005a60	cmp	x25, #0xe
0000000000005a64	b.le	0x5acc
0000000000005a68	mov	x0, #0x0
0000000000005a6c	bl	0x7738 ; symbol stub for: _$s10Foundation13__DataStorageCMa
0000000000005a70	ldr	w1, [x0, #0x30]
0000000000005a74	ldrh	w2, [x0, #0x34]
0000000000005a78	bl	0x7858 ; symbol stub for: _swift_allocObject
0000000000005a7c	mov	x20, x0
0000000000005a80	mov	x0, x21
0000000000005a84	mov	w1, #0x2
0000000000005a88	bl	0x7894 ; symbol stub for: _swift_bridgeObjectRetain_n
0000000000005a8c	mov	x0, x19
0000000000005a90	mov	x1, x25
0000000000005a94	bl	0x772c ; symbol stub for: _$s10Foundation13__DataStorageC5bytes6lengthACSVSg_Sitcfc
0000000000005a98	mov	x20, x0
0000000000005a9c	mov	w8, #0x7fffffff
0000000000005aa0	cmp	x25, x8
0000000000005aa4	b.ge	0x5b18
0000000000005aa8	lsl	x19, x25, #32
0000000000005aac	orr	x20, x20, #0x4000000000000000
0000000000005ab0	b	0x5b38
0000000000005ab4	mov	x0, x21
0000000000005ab8	mov	w1, #0x2
0000000000005abc	bl	0x7894 ; symbol stub for: _swift_bridgeObjectRetain_n
0000000000005ac0	mov	x19, #0x0
0000000000005ac4	mov	x20, #-0x4000000000000000
0000000000005ac8	b	0x5b38
0000000000005acc	stur	xzr, [sp, #0x2e]
0000000000005ad0	str	xzr, [sp, #0x28]
0000000000005ad4	strb	w25, [sp, #0x36]
0000000000005ad8	add	x0, sp, #0x28
0000000000005adc	mov	x1, x19
0000000000005ae0	mov	x2, x25
0000000000005ae4	bl	0x77bc ; symbol stub for: _memcpy
0000000000005ae8	ldrb	w8, [sp, #0x34]
0000000000005aec	ldrb	w9, [sp, #0x35]
0000000000005af0	ldrb	w10, [sp, #0x36]
0000000000005af4	ldr	x19, [sp, #0x28]
0000000000005af8	ldr	w20, [sp, #0x30]
0000000000005afc	bfi	x20, x8, #32, #8
0000000000005b00	bfi	x20, x9, #40, #8
0000000000005b04	bfi	x20, x10, #48, #8
0000000000005b08	mov	x0, x21
0000000000005b0c	mov	w1, #0x2
0000000000005b10	bl	0x7894 ; symbol stub for: _swift_bridgeObjectRetain_n
0000000000005b14	b	0x5b38
0000000000005b18	mov	x0, #0x0
0000000000005b1c	bl	0x7744 ; symbol stub for: _$s10Foundation4DataV14RangeReferenceCMa
0000000000005b20	mov	w1, #0x20
0000000000005b24	mov	w2, #0x7
0000000000005b28	bl	0x7858 ; symbol stub for: _swift_allocObject
0000000000005b2c	mov	x19, x0
0000000000005b30	stp	xzr, x25, [x0, #0x10]
0000000000005b34	orr	x20, x20, #0x8000000000000000
0000000000005b38	add	x0, sp, #0x38
0000000000005b3c	bl	___swift_destroy_boxed_opaque_existential_1
0000000000005b40	nop
0000000000005b44	ldr	x1, #0x6674
0000000000005b48	ldr	x0, [sp, #0x20]
0000000000005b4c	bl	0x77e0 ; Objc message: _objc_msgSend
0000000000005b50	mov	x29, x29
0000000000005b54	bl	0x784c ; symbol stub for: _objc_retainAutoreleasedReturnValue
0000000000005b58	mov	x25, x0
0000000000005b5c	mov	x0, x19
0000000000005b60	mov	x1, x20
0000000000005b64	bl	0x7750 ; symbol stub for: _$s10Foundation4DataV19_bridgeToObjectiveCSo6NSDataCyF
0000000000005b68	mov	x24, x0
0000000000005b6c	nop
0000000000005b70	ldr	x1, #0x6650
0000000000005b74	mov	x0, x25
0000000000005b78	mov	x2, x24
0000000000005b7c	bl	0x77e0 ; Objc message: _objc_msgSend
0000000000005b80	bl	0x7828 ; symbol stub for: _objc_release_x25
0000000000005b84	bl	0x781c ; symbol stub for: _objc_release_x24
0000000000005b88	mov	x0, x19
0000000000005b8c	mov	x1, x20
0000000000005b90	bl	_$s10Foundation4DataV15_RepresentationOWOe
0000000000005b94	mov	x0, x21
0000000000005b98	bl	0x7870 ; symbol stub for: _swift_bridgeObjectRelease
0000000000005b9c	mov	x20, #0x0
0000000000005ba0	cmp	x28, x22
0000000000005ba4	mov	w25, #0x7385
0000000000005ba8	b.ne	0x58dc
0000000000005bac	b	0x5bc4
0000000000005bb0	mov	x0, x21
0000000000005bb4	bl	_$ss12_ArrayBufferV20_consumeAndCreateNewAByxGyFs5UInt8V_Tg5
0000000000005bb8	mov	x21, x0
0000000000005bbc	tbz	x20, #0x3f, 0x59c0
0000000000005bc0	b	0x5ec8
0000000000005bc4	ldr	x8, [sp, #0x18]
0000000000005bc8	str	x26, [x8, #0x28]
0000000000005bcc	mov	x0, x21
0000000000005bd0	bl	0x78f4 ; symbol stub for: _swift_isUniquelyReferenced_nonNull_native
0000000000005bd4	tbz	w0, #0x0, 0x5db8
0000000000005bd8	mov	w26, #0x3c
0000000000005bdc	ldr	x8, [x21, #0x10]
0000000000005be0	cmp	x20, x8
0000000000005be4	b.ge	0x5f20
0000000000005be8	add	x28, x21, #0x20
0000000000005bec	mov	w8, #0xa
0000000000005bf0	strb	w8, [x28, x20]
0000000000005bf4	add	x20, x20, #0x1
0000000000005bf8	ldr	x8, [x21, #0x10]
0000000000005bfc	cmp	x20, x8
0000000000005c00	b.ne	0x5da0
0000000000005c04	mov	w19, #0x1
0000000000005c08	bfi	x19, x20, #1, #63
0000000000005c0c	adr	x0, #0x6a1c
0000000000005c10	nop
0000000000005c14	bl	___swift_instantiateConcreteTypeFromMangledName
0000000000005c18	mov	x20, x0
0000000000005c1c	str	x0, [sp, #0x50]
0000000000005c20	bl	_$ss10ArraySliceVys5UInt8VGAByxG10Foundation15ContiguousBytesAgDRszlWl
0000000000005c24	str	x0, [sp, #0x58]
0000000000005c28	adr	x0, #0x2628
0000000000005c2c	nop
0000000000005c30	mov	w1, #0x30
0000000000005c34	mov	w2, #0x7
0000000000005c38	bl	0x7858 ; symbol stub for: _swift_allocObject
0000000000005c3c	str	x0, [sp, #0x38]
0000000000005c40	stp	x21, x28, [x0, #0x10]
0000000000005c44	stp	xzr, x19, [x0, #0x20]
0000000000005c48	add	x0, sp, #0x38
0000000000005c4c	mov	x1, x20
0000000000005c50	bl	___swift_project_boxed_opaque_existential_1
0000000000005c54	ldp	x8, x9, [x0, #0x10]
0000000000005c58	lsr	x9, x9, #1
0000000000005c5c	subs	x25, x9, x8
0000000000005c60	b.vs	0x5f38
0000000000005c64	cbz	x25, 0x5cd4
0000000000005c68	ldr	x9, [x0, #0x8]
0000000000005c6c	add	x20, x9, x8
0000000000005c70	adr	x0, #0x69c8
0000000000005c74	nop
0000000000005c78	bl	___swift_instantiateConcreteTypeFromMangledName
0000000000005c7c	cmp	x25, #0xe
0000000000005c80	b.le	0x5cec
0000000000005c84	mov	x0, #0x0
0000000000005c88	bl	0x7738 ; symbol stub for: _$s10Foundation13__DataStorageCMa
0000000000005c8c	ldr	w1, [x0, #0x30]
0000000000005c90	ldrh	w2, [x0, #0x34]
0000000000005c94	bl	0x7858 ; symbol stub for: _swift_allocObject
0000000000005c98	mov	x19, x0
0000000000005c9c	mov	x0, x21
0000000000005ca0	mov	w1, #0x2
0000000000005ca4	bl	0x7894 ; symbol stub for: _swift_bridgeObjectRetain_n
0000000000005ca8	mov	x0, x20
0000000000005cac	mov	x1, x25
0000000000005cb0	mov	x20, x19
0000000000005cb4	bl	0x772c ; symbol stub for: _$s10Foundation13__DataStorageC5bytes6lengthACSVSg_Sitcfc
0000000000005cb8	mov	x19, x0
0000000000005cbc	mov	w8, #0x7fffffff
0000000000005cc0	cmp	x25, x8
0000000000005cc4	b.ge	0x5d14
0000000000005cc8	lsl	x20, x25, #32
0000000000005ccc	orr	x25, x19, #0x4000000000000000
0000000000005cd0	b	0x5d34
0000000000005cd4	mov	x0, x21
0000000000005cd8	mov	w1, #0x2
0000000000005cdc	bl	0x7894 ; symbol stub for: _swift_bridgeObjectRetain_n
0000000000005ce0	mov	x20, #0x0
0000000000005ce4	mov	x25, #-0x4000000000000000
0000000000005ce8	b	0x5d34
0000000000005cec	add	x19, x20, x25
0000000000005cf0	mov	x0, x21
0000000000005cf4	mov	w1, #0x2
0000000000005cf8	bl	0x7894 ; symbol stub for: _swift_bridgeObjectRetain_n
0000000000005cfc	mov	x0, x20
0000000000005d00	mov	x1, x19
0000000000005d04	bl	_$s10Foundation4DataV06InlineB0VyAESWcfCTf4nd_n
0000000000005d08	mov	x20, x0
0000000000005d0c	and	x25, x1, #0xffffffffffffff
0000000000005d10	b	0x5d34
0000000000005d14	mov	x0, #0x0
0000000000005d18	bl	0x7744 ; symbol stub for: _$s10Foundation4DataV14RangeReferenceCMa
0000000000005d1c	mov	w1, #0x20
0000000000005d20	mov	w2, #0x7
0000000000005d24	bl	0x7858 ; symbol stub for: _swift_allocObject
0000000000005d28	mov	x20, x0
0000000000005d2c	stp	xzr, x25, [x0, #0x10]
0000000000005d30	orr	x25, x19, #0x8000000000000000
0000000000005d34	add	x0, sp, #0x38
0000000000005d38	bl	___swift_destroy_boxed_opaque_existential_1
0000000000005d3c	nop
0000000000005d40	ldr	x1, #0x6478
0000000000005d44	ldr	x0, [sp, #0x20]
0000000000005d48	bl	0x77e0 ; Objc message: _objc_msgSend
0000000000005d4c	mov	x29, x29
0000000000005d50	bl	0x784c ; symbol stub for: _objc_retainAutoreleasedReturnValue
0000000000005d54	mov	x24, x0
0000000000005d58	mov	x0, x20
0000000000005d5c	mov	x1, x25
0000000000005d60	bl	0x7750 ; symbol stub for: _$s10Foundation4DataV19_bridgeToObjectiveCSo6NSDataCyF
0000000000005d64	mov	x19, x0
0000000000005d68	nop
0000000000005d6c	ldr	x1, #0x6454
0000000000005d70	mov	x0, x24
0000000000005d74	mov	x2, x19
0000000000005d78	bl	0x77e0 ; Objc message: _objc_msgSend
0000000000005d7c	bl	0x781c ; symbol stub for: _objc_release_x24
0000000000005d80	bl	0x77f8 ; symbol stub for: _objc_release_x19
0000000000005d84	mov	x0, x20
0000000000005d88	mov	x1, x25
0000000000005d8c	bl	_$s10Foundation4DataV15_RepresentationOWOe
0000000000005d90	mov	x0, x21
0000000000005d94	bl	0x7870 ; symbol stub for: _swift_bridgeObjectRelease
0000000000005d98	mov	x20, #0x0
0000000000005d9c	mov	w25, #0x7385
0000000000005da0	ldr	x8, [sp, #0x10]
0000000000005da4	subs	x22, x8, x22
0000000000005da8	b.vs	0x5f24
0000000000005dac	cmp	x22, #0x0
0000000000005db0	b.gt	0x58b8
0000000000005db4	b	0x5e0c
0000000000005db8	mov	x0, x21
0000000000005dbc	bl	_$ss12_ArrayBufferV20_consumeAndCreateNewAByxGyFs5UInt8V_Tg5
0000000000005dc0	mov	x21, x0
0000000000005dc4	b	0x5bd8
0000000000005dc8	mov	x0, x26
0000000000005dcc	bl	0x7870 ; symbol stub for: _swift_bridgeObjectRelease
0000000000005dd0	mov	x0, x21
0000000000005dd4	bl	0x7870 ; symbol stub for: _swift_bridgeObjectRelease
0000000000005dd8	mov	x0, x24
0000000000005ddc	ldp	x29, x30, [sp, #0xc0]
0000000000005de0	ldp	x20, x19, [sp, #0xb0]
0000000000005de4	ldp	x22, x21, [sp, #0xa0]
0000000000005de8	ldp	x24, x23, [sp, #0x90]
0000000000005dec	ldp	x26, x25, [sp, #0x80]
0000000000005df0	ldp	x28, x27, [sp, #0x70]
0000000000005df4	ldp	d9, d8, [sp, #0x60]
0000000000005df8	add	sp, sp, #0xd0
0000000000005dfc	b	0x7900 ; symbol stub for: _swift_release
0000000000005e00	brk	#0x1
0000000000005e04	brk	#0x1
0000000000005e08	brk	#0x1
0000000000005e0c	cmp	x20, #0x0
0000000000005e10	b.le	0x5ed8
0000000000005e14	ldr	x8, [x21, #0x10]
0000000000005e18	cmp	x8, x20
0000000000005e1c	ldp	x25, x24, [sp]
0000000000005e20	b.lt	0x5f3c
0000000000005e24	mov	w19, #0x1
0000000000005e28	bfi	x19, x20, #1, #63
0000000000005e2c	mov	x0, x21
0000000000005e30	bl	0x7888 ; symbol stub for: _swift_bridgeObjectRetain
0000000000005e34	mov	x1, x28
0000000000005e38	mov	x2, #0x0
0000000000005e3c	mov	x3, x19
0000000000005e40	bl	_$s10Foundation4DataVyACxcSTRzs5UInt8V7ElementRtzlufCs10ArraySliceVyAEG_Tg5Tf4gd_n
0000000000005e44	mov	x19, x0
0000000000005e48	mov	x20, x1
0000000000005e4c	nop
0000000000005e50	ldr	x1, #0x6368
0000000000005e54	ldr	x0, [sp, #0x20]
0000000000005e58	bl	0x77e0 ; Objc message: _objc_msgSend
0000000000005e5c	mov	x29, x29
0000000000005e60	bl	0x784c ; symbol stub for: _objc_retainAutoreleasedReturnValue
0000000000005e64	mov	x22, x0
0000000000005e68	mov	x0, x19
0000000000005e6c	mov	x1, x20
0000000000005e70	bl	0x7750 ; symbol stub for: _$s10Foundation4DataV19_bridgeToObjectiveCSo6NSDataCyF
0000000000005e74	mov	x23, x0
0000000000005e78	nop
0000000000005e7c	ldr	x1, #0x6344
0000000000005e80	mov	x0, x22
0000000000005e84	mov	x2, x23
0000000000005e88	bl	0x77e0 ; Objc message: _objc_msgSend
0000000000005e8c	bl	0x7804 ; symbol stub for: _objc_release_x22
0000000000005e90	bl	0x7810 ; symbol stub for: _objc_release_x23
0000000000005e94	mov	x0, x19
0000000000005e98	mov	x1, x20
0000000000005e9c	bl	_$s10Foundation4DataV15_RepresentationOWOe
0000000000005ea0	mov	x0, x25
0000000000005ea4	bl	0x7870 ; symbol stub for: _swift_bridgeObjectRelease
0000000000005ea8	mov	x0, x21
0000000000005eac	mov	w1, #0x2
0000000000005eb0	bl	0x787c ; symbol stub for: _swift_bridgeObjectRelease_n
0000000000005eb4	mov	x0, x24
0000000000005eb8	b	0x5eec
0000000000005ebc	brk	#0x1
0000000000005ec0	brk	#0x1
0000000000005ec4	brk	#0x1
0000000000005ec8	brk	#0x1
0000000000005ecc	brk	#0x1
0000000000005ed0	brk	#0x1
0000000000005ed4	brk	#0x1
0000000000005ed8	ldr	x0, [sp]
0000000000005edc	bl	0x7870 ; symbol stub for: _swift_bridgeObjectRelease
0000000000005ee0	mov	x0, x21
0000000000005ee4	bl	0x7870 ; symbol stub for: _swift_bridgeObjectRelease
0000000000005ee8	ldr	x0, [sp, #0x8]
0000000000005eec	bl	0x7900 ; symbol stub for: _swift_release
0000000000005ef0	ldp	x29, x30, [sp, #0xc0]
0000000000005ef4	ldp	x20, x19, [sp, #0xb0]
0000000000005ef8	ldp	x22, x21, [sp, #0xa0]
0000000000005efc	ldp	x24, x23, [sp, #0x90]
0000000000005f00	ldp	x26, x25, [sp, #0x80]
0000000000005f04	ldp	x28, x27, [sp, #0x70]
0000000000005f08	ldp	d9, d8, [sp, #0x60]
0000000000005f0c	add	sp, sp, #0xd0
0000000000005f10	ret
0000000000005f14	brk	#0x1
0000000000005f18	brk	#0x1
0000000000005f1c	brk	#0x1
0000000000005f20	brk	#0x1
0000000000005f24	brk	#0x1
0000000000005f28	mov	x0, x20
0000000000005f2c	bl	_$ss12_ArrayBufferV20_consumeAndCreateNewAByxGyF11FastaNativeAEC9AminoAcidV_Tg5
0000000000005f30	mov	x20, x0
0000000000005f34	b	0x56e4
0000000000005f38	brk	#0x1
0000000000005f3c	brk	#0x1
_$s11FastaNativeAAC12runBenchmark1nySi_tF:
0000000000005f40	sub	sp, sp, #0x80
0000000000005f44	stp	x28, x27, [sp, #0x20]
0000000000005f48	stp	x26, x25, [sp, #0x30]
0000000000005f4c	stp	x24, x23, [sp, #0x40]
0000000000005f50	stp	x22, x21, [sp, #0x50]
0000000000005f54	stp	x20, x19, [sp, #0x60]
0000000000005f58	stp	x29, x30, [sp, #0x70]
0000000000005f5c	add	x29, sp, #0x70
0000000000005f60	mov	x19, x20
0000000000005f64	mov	x21, x0
0000000000005f68	ldp	x0, x1, [x20, #0x40]
0000000000005f6c	bl	0x775c ; symbol stub for: _$sSS11utf8CStrings15ContiguousArrayVys4Int8VGvg
0000000000005f70	mov	x23, x0
0000000000005f74	ldr	x24, [x0, #0x10]
0000000000005f78	cbz	x24, 0x6024
0000000000005f7c	str	x21, [sp]
0000000000005f80	nop
0000000000005f84	ldr	x8, #0x2114 ; literal pool symbol address: __swiftEmptyArrayStorage
0000000000005f88	str	x8, [sp, #0x8]
0000000000005f8c	add	x20, sp, #0x8
0000000000005f90	mov	w0, #0x0
0000000000005f94	mov	x1, x24
0000000000005f98	mov	w2, #0x0
0000000000005f9c	bl	_$ss15ContiguousArrayV16_createNewBuffer14bufferIsUnique15minimumCapacity13growForAppendySb_SiSbtFs5UInt8V_Tg5
0000000000005fa0	add	x26, x23, #0x20
0000000000005fa4	ldr	x27, [x23, #0x10]
0000000000005fa8	ldr	x22, [sp, #0x8]
0000000000005fac	cbz	x27, 0x619c
0000000000005fb0	ldrsb	w28, [x26]
0000000000005fb4	tbnz	w28, #0x1f, 0x61a0
0000000000005fb8	str	x22, [sp, #0x8]
0000000000005fbc	ldp	x21, x8, [x22, #0x10]
0000000000005fc0	add	x25, x21, #0x1
0000000000005fc4	cmp	x21, x8, lsr #1
0000000000005fc8	b.hs	0x5fec
0000000000005fcc	str	x25, [x22, #0x10]
0000000000005fd0	add	x8, x22, x21
0000000000005fd4	strb	w28, [x8, #0x20]
0000000000005fd8	sub	x27, x27, #0x1
0000000000005fdc	add	x26, x26, #0x1
0000000000005fe0	subs	x24, x24, #0x1
0000000000005fe4	b.ne	0x5fac
0000000000005fe8	b	0x600c
0000000000005fec	cmp	x8, #0x1
0000000000005ff0	cset	w0, hi
0000000000005ff4	add	x20, sp, #0x8
0000000000005ff8	mov	x1, x25
0000000000005ffc	mov	w2, #0x1
0000000000006000	bl	_$ss15ContiguousArrayV16_createNewBuffer14bufferIsUnique15minimumCapacity13growForAppendySb_SiSbtFs5UInt8V_Tg5
0000000000006004	ldr	x22, [sp, #0x8]
0000000000006008	b	0x5fcc
000000000000600c	mov	x0, x23
0000000000006010	bl	0x7900 ; symbol stub for: _swift_release
0000000000006014	ldr	x21, [sp]
0000000000006018	ldr	x8, [x22, #0x10]
000000000000601c	cbnz	x8, 0x603c
0000000000006020	b	0x6058
0000000000006024	mov	x0, x23
0000000000006028	bl	0x7900 ; symbol stub for: _swift_release
000000000000602c	nop
0000000000006030	ldr	x22, #0x2068 ; literal pool symbol address: __swiftEmptyArrayStorage
0000000000006034	ldr	x8, [x22, #0x10]
0000000000006038	cbz	x8, 0x6058
000000000000603c	mov	x0, x22
0000000000006040	bl	0x78f4 ; symbol stub for: _swift_isUniquelyReferenced_nonNull_native
0000000000006044	tbz	w0, #0x0, 0x61b0
0000000000006048	ldr	x8, [x22, #0x10]
000000000000604c	cbz	x8, 0x61c4
0000000000006050	sub	x8, x8, #0x1
0000000000006054	str	x8, [x22, #0x10]
0000000000006058	adds	x20, x21, x21
000000000000605c	b.vs	0x61a4
0000000000006060	mov	x24, #0x10
0000000000006064	movk	x24, #0xd000, lsl #48
0000000000006068	mov	x0, x22
000000000000606c	bl	0x7888 ; symbol stub for: _swift_bridgeObjectRetain
0000000000006070	adr	x8, #0x1ba0 ; literal pool for: "Homo sapiens alu"
0000000000006074	nop
0000000000006078	sub	x8, x8, #0x20
000000000000607c	orr	x3, x8, #0x8000000000000000
0000000000006080	mov	w0, #0x4e4f
0000000000006084	movk	w0, #0x45, lsl #16
0000000000006088	mov	x1, #-0x1d00000000000000
000000000000608c	mov	x2, #0x10
0000000000006090	movk	x2, #0xd000, lsl #48
0000000000006094	mov	x4, x22
0000000000006098	mov	x5, x20
000000000000609c	bl	_$s11FastaNativeAAC06repeatA02id4desc4gene1nySS_SSSays5UInt8VGSitFTf4nnnnd_n
00000000000060a0	mov	x0, x22
00000000000060a4	bl	0x7870 ; symbol stub for: _swift_bridgeObjectRelease
00000000000060a8	mov	w8, #0x3
00000000000060ac	smulh	x8, x21, x8
00000000000060b0	add	x20, x21, x21, lsl #1
00000000000060b4	cmp	x8, x20, asr #63
00000000000060b8	b.ne	0x61a8
00000000000060bc	add	x23, x19, #0x50
00000000000060c0	add	x1, sp, #0x8
00000000000060c4	mov	x0, x23
00000000000060c8	mov	w2, #0x21
00000000000060cc	mov	x3, #0x0
00000000000060d0	bl	0x7864 ; symbol stub for: _swift_beginAccess
00000000000060d4	add	x2, x24, #0x3
00000000000060d8	adr	x8, #0x1b58 ; literal pool for: "IUB ambiguity codes"
00000000000060dc	nop
00000000000060e0	sub	x8, x8, #0x20
00000000000060e4	orr	x3, x8, #0x8000000000000000
00000000000060e8	mov	w0, #0x5754
00000000000060ec	movk	w0, #0x4f, lsl #16
00000000000060f0	mov	x1, #-0x1d00000000000000
00000000000060f4	mov	x4, x23
00000000000060f8	mov	x5, x20
00000000000060fc	mov	x20, x19
0000000000006100	bl	_$s11FastaNativeAAC06randomA02id4desc4acid_ySS_SSSayAB9AminoAcidVGzSitF
0000000000006104	add	x0, sp, #0x8
0000000000006108	bl	0x78b8 ; symbol stub for: _swift_endAccess
000000000000610c	mov	w8, #0x5
0000000000006110	smulh	x8, x21, x8
0000000000006114	add	x20, x21, x21, lsl #2
0000000000006118	cmp	x8, x20, asr #63
000000000000611c	b.ne	0x61ac
0000000000006120	add	x21, x19, #0x58
0000000000006124	add	x1, sp, #0x8
0000000000006128	mov	x0, x21
000000000000612c	mov	w2, #0x21
0000000000006130	mov	x3, #0x0
0000000000006134	bl	0x7864 ; symbol stub for: _swift_beginAccess
0000000000006138	add	x2, x24, #0x6
000000000000613c	adr	x8, #0x1b14 ; literal pool for: "Homo sapiens frequency"
0000000000006140	nop
0000000000006144	sub	x8, x8, #0x20
0000000000006148	orr	x3, x8, #0x8000000000000000
000000000000614c	mov	x0, #0x4854
0000000000006150	movk	x0, #0x4552, lsl #16
0000000000006154	movk	x0, #0x45, lsl #32
0000000000006158	mov	x1, #-0x1b00000000000000
000000000000615c	mov	x4, x21
0000000000006160	mov	x5, x20
0000000000006164	mov	x20, x19
0000000000006168	bl	_$s11FastaNativeAAC06randomA02id4desc4acid_ySS_SSSayAB9AminoAcidVGzSitF
000000000000616c	add	x0, sp, #0x8
0000000000006170	bl	0x78b8 ; symbol stub for: _swift_endAccess
0000000000006174	mov	x0, x22
0000000000006178	bl	0x7870 ; symbol stub for: _swift_bridgeObjectRelease
000000000000617c	ldp	x29, x30, [sp, #0x70]
0000000000006180	ldp	x20, x19, [sp, #0x60]
0000000000006184	ldp	x22, x21, [sp, #0x50]
0000000000006188	ldp	x24, x23, [sp, #0x40]
000000000000618c	ldp	x26, x25, [sp, #0x30]
0000000000006190	ldp	x28, x27, [sp, #0x20]
0000000000006194	add	sp, sp, #0x80
0000000000006198	ret
000000000000619c	brk	#0x1
00000000000061a0	brk	#0x1
00000000000061a4	brk	#0x1
00000000000061a8	brk	#0x1
00000000000061ac	brk	#0x1
00000000000061b0	mov	x0, x22
00000000000061b4	bl	_$ss12_ArrayBufferV20_consumeAndCreateNewAByxGyFs5UInt8V_Tg5
00000000000061b8	mov	x22, x0
00000000000061bc	ldr	x8, [x22, #0x10]
00000000000061c0	cbnz	x8, 0x6050
00000000000061c4	brk	#0x1
_$s11FastaNativeAACfd:
00000000000061c8	stp	x29, x30, [sp, #-0x10]!
00000000000061cc	mov	x29, sp
00000000000061d0	ldr	x0, [x20, #0x48]
00000000000061d4	bl	0x7870 ; symbol stub for: _swift_bridgeObjectRelease
00000000000061d8	ldr	x0, [x20, #0x50]
00000000000061dc	bl	0x7870 ; symbol stub for: _swift_bridgeObjectRelease
00000000000061e0	ldr	x0, [x20, #0x58]
00000000000061e4	bl	0x7870 ; symbol stub for: _swift_bridgeObjectRelease
00000000000061e8	mov	x0, x20
00000000000061ec	ldp	x29, x30, [sp], #0x10
00000000000061f0	ret
_$s11FastaNativeAACfD:
00000000000061f4	stp	x29, x30, [sp, #-0x10]!
00000000000061f8	mov	x29, sp
00000000000061fc	ldr	x0, [x20, #0x48]
0000000000006200	bl	0x7870 ; symbol stub for: _swift_bridgeObjectRelease
0000000000006204	ldr	x0, [x20, #0x50]
0000000000006208	bl	0x7870 ; symbol stub for: _swift_bridgeObjectRelease
000000000000620c	ldr	x0, [x20, #0x58]
0000000000006210	bl	0x7870 ; symbol stub for: _swift_bridgeObjectRelease
0000000000006214	mov	x0, x20
0000000000006218	mov	w1, #0x60
000000000000621c	mov	w2, #0x7
0000000000006220	ldp	x29, x30, [sp], #0x10
0000000000006224	b	0x78a0 ; symbol stub for: _swift_deallocClassInstance
_$sSa6append10contentsOfyqd__n_t7ElementQyd__RszSTRd__lFs5UInt8V_SayAFGTg5:
0000000000006228	stp	x24, x23, [sp, #-0x40]!
000000000000622c	stp	x22, x21, [sp, #0x10]
0000000000006230	stp	x20, x19, [sp, #0x20]
0000000000006234	stp	x29, x30, [sp, #0x30]
0000000000006238	add	x29, sp, #0x30
000000000000623c	ldr	x22, [x0, #0x10]
0000000000006240	ldr	x21, [x20]
0000000000006244	ldr	x8, [x21, #0x10]
0000000000006248	adds	x23, x8, x22
000000000000624c	b.vs	0x62e8
0000000000006250	mov	x19, x0
0000000000006254	mov	x0, x21
0000000000006258	bl	0x78f4 ; symbol stub for: _swift_isUniquelyReferenced_nonNull_native
000000000000625c	str	x21, [x20]
0000000000006260	cbz	w0, 0x6278
0000000000006264	ldr	x8, [x21, #0x18]
0000000000006268	cmp	x23, x8, lsr #1
000000000000626c	b.gt	0x6278
0000000000006270	cbnz	x22, 0x629c
0000000000006274	b	0x62d0
0000000000006278	ldr	x8, [x21, #0x10]
000000000000627c	cmp	x8, x23
0000000000006280	csel	x1, x23, x8, lt
0000000000006284	mov	w2, #0x1
0000000000006288	mov	x3, x21
000000000000628c	bl	_$ss12_ArrayBufferV20_consumeAndCreateNew14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFs5UInt8V_Tg5
0000000000006290	mov	x21, x0
0000000000006294	str	x0, [x20]
0000000000006298	cbz	x22, 0x62d0
000000000000629c	ldp	x20, x8, [x21, #0x10]
00000000000062a0	lsr	x8, x8, #1
00000000000062a4	sub	x8, x8, x20
00000000000062a8	cmp	x8, x22
00000000000062ac	b.lt	0x62ec
00000000000062b0	add	x8, x21, x20
00000000000062b4	add	x0, x8, #0x20
00000000000062b8	add	x1, x19, #0x20
00000000000062bc	mov	x2, x22
00000000000062c0	bl	0x77bc ; symbol stub for: _memcpy
00000000000062c4	adds	x8, x20, x22
00000000000062c8	b.vs	0x62f0
00000000000062cc	str	x8, [x21, #0x10]
00000000000062d0	mov	x0, x19
00000000000062d4	ldp	x29, x30, [sp, #0x30]
00000000000062d8	ldp	x20, x19, [sp, #0x20]
00000000000062dc	ldp	x22, x21, [sp, #0x10]
00000000000062e0	ldp	x24, x23, [sp], #0x40
00000000000062e4	b	0x7870 ; symbol stub for: _swift_bridgeObjectRelease
00000000000062e8	brk	#0x1
00000000000062ec	brk	#0x1
00000000000062f0	brk	#0x1
_$ss12_ArrayBufferV20_consumeAndCreateNewAByxGyFs5UInt8V_Tg5:
00000000000062f4	mov	x3, x0
00000000000062f8	ldr	x1, [x0, #0x10]
00000000000062fc	mov	w0, #0x0
0000000000006300	mov	w2, #0x0
0000000000006304	b	_$ss12_ArrayBufferV20_consumeAndCreateNew14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFs5UInt8V_Tg5
_$ss12_ArrayBufferV20_consumeAndCreateNewAByxGyF11FastaNativeAEC9AminoAcidV_Tg5:
0000000000006308	mov	x3, x0
000000000000630c	ldr	x1, [x0, #0x10]
0000000000006310	mov	w0, #0x0
0000000000006314	mov	w2, #0x0
0000000000006318	b	_$ss12_ArrayBufferV20_consumeAndCreateNew14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtF11FastaNativeAHC9AminoAcidV_Tg5
_$ss12_ArrayBufferV20_consumeAndCreateNew14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFs5UInt8V_Tg5:
000000000000631c	stp	x22, x21, [sp, #-0x30]!
0000000000006320	stp	x20, x19, [sp, #0x10]
0000000000006324	stp	x29, x30, [sp, #0x20]
0000000000006328	add	x29, sp, #0x20
000000000000632c	mov	x19, x3
0000000000006330	mov	x20, x0
0000000000006334	tbz	w2, #0x0, 0x635c
0000000000006338	ldr	x8, [x19, #0x18]
000000000000633c	lsr	x8, x8, #1
0000000000006340	cmp	x8, x1
0000000000006344	b.ge	0x6360
0000000000006348	adds	x8, x8, x8
000000000000634c	b.vs	0x63f0
0000000000006350	cmp	x8, x1
0000000000006354	csel	x8, x1, x8, lt
0000000000006358	b	0x6360
000000000000635c	mov	x8, x1
0000000000006360	ldr	x21, [x19, #0x10]
0000000000006364	cmp	x8, x21
0000000000006368	csel	x22, x21, x8, lt
000000000000636c	cbz	x22, 0x63ac
0000000000006370	adr	x0, #0x62d0
0000000000006374	nop
0000000000006378	bl	___swift_instantiateConcreteTypeFromMangledName
000000000000637c	add	x1, x22, #0x20
0000000000006380	mov	w2, #0x7
0000000000006384	bl	0x7858 ; symbol stub for: _swift_allocObject
0000000000006388	mov	x22, x0
000000000000638c	bl	0x790c ; symbol stub for: _swift_retain
0000000000006390	bl	__swift_stdlib_malloc_size
0000000000006394	lsl	x8, x0, #1
0000000000006398	sub	x8, x8, #0x40
000000000000639c	stp	x21, x8, [x22, #0x10]
00000000000063a0	mov	x0, x22
00000000000063a4	bl	0x7900 ; symbol stub for: _swift_release
00000000000063a8	b	0x63b4
00000000000063ac	nop
00000000000063b0	ldr	x22, #0x1ce8 ; literal pool symbol address: __swiftEmptyArrayStorage
00000000000063b4	add	x0, x22, #0x20
00000000000063b8	add	x1, x19, #0x20
00000000000063bc	mov	x2, x21
00000000000063c0	tbz	w20, #0x0, 0x63d0
00000000000063c4	bl	0x77c8 ; symbol stub for: _memmove
00000000000063c8	str	xzr, [x19, #0x10]
00000000000063cc	b	0x63d4
00000000000063d0	bl	0x77bc ; symbol stub for: _memcpy
00000000000063d4	mov	x0, x19
00000000000063d8	bl	0x7870 ; symbol stub for: _swift_bridgeObjectRelease
00000000000063dc	mov	x0, x22
00000000000063e0	ldp	x29, x30, [sp, #0x20]
00000000000063e4	ldp	x20, x19, [sp, #0x10]
00000000000063e8	ldp	x22, x21, [sp], #0x30
00000000000063ec	ret
00000000000063f0	brk	#0x1
_$ss12_ArrayBufferV20_consumeAndCreateNew14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtF11FastaNativeAHC9AminoAcidV_Tg5:
00000000000063f4	stp	x22, x21, [sp, #-0x30]!
00000000000063f8	stp	x20, x19, [sp, #0x10]
00000000000063fc	stp	x29, x30, [sp, #0x20]
0000000000006400	add	x29, sp, #0x20
0000000000006404	mov	x19, x3
0000000000006408	mov	x20, x0
000000000000640c	tbz	w2, #0x0, 0x6434
0000000000006410	ldr	x8, [x19, #0x18]
0000000000006414	lsr	x8, x8, #1
0000000000006418	cmp	x8, x1
000000000000641c	b.ge	0x6438
0000000000006420	adds	x8, x8, x8
0000000000006424	b.vs	0x64dc
0000000000006428	cmp	x8, x1
000000000000642c	csel	x8, x1, x8, lt
0000000000006430	b	0x6438
0000000000006434	mov	x8, x1
0000000000006438	ldr	x22, [x19, #0x10]
000000000000643c	cmp	x8, x22
0000000000006440	csel	x21, x22, x8, lt
0000000000006444	cbz	x21, 0x6498
0000000000006448	adr	x0, #0x6088
000000000000644c	nop
0000000000006450	bl	___swift_instantiateConcreteTypeFromMangledName
0000000000006454	lsl	x8, x21, #4
0000000000006458	add	x1, x8, #0x20
000000000000645c	mov	w2, #0x7
0000000000006460	bl	0x7858 ; symbol stub for: _swift_allocObject
0000000000006464	mov	x21, x0
0000000000006468	bl	0x790c ; symbol stub for: _swift_retain
000000000000646c	bl	__swift_stdlib_malloc_size
0000000000006470	sub	x8, x0, #0x20
0000000000006474	sub	x9, x0, #0x11
0000000000006478	cmp	x8, #0x0
000000000000647c	csel	x8, x9, x8, lt
0000000000006480	asr	x8, x8, #4
0000000000006484	lsl	x8, x8, #1
0000000000006488	stp	x22, x8, [x21, #0x10]
000000000000648c	mov	x0, x21
0000000000006490	bl	0x7900 ; symbol stub for: _swift_release
0000000000006494	b	0x64a0
0000000000006498	nop
000000000000649c	ldr	x21, #0x1bfc ; literal pool symbol address: __swiftEmptyArrayStorage
00000000000064a0	add	x0, x21, #0x20
00000000000064a4	add	x1, x19, #0x20
00000000000064a8	lsl	x2, x22, #4
00000000000064ac	tbz	w20, #0x0, 0x64bc
00000000000064b0	bl	0x77c8 ; symbol stub for: _memmove
00000000000064b4	str	xzr, [x19, #0x10]
00000000000064b8	b	0x64c0
00000000000064bc	bl	0x77bc ; symbol stub for: _memcpy
00000000000064c0	mov	x0, x19
00000000000064c4	bl	0x7870 ; symbol stub for: _swift_bridgeObjectRelease
00000000000064c8	mov	x0, x21
00000000000064cc	ldp	x29, x30, [sp, #0x20]
00000000000064d0	ldp	x20, x19, [sp, #0x10]
00000000000064d4	ldp	x22, x21, [sp], #0x30
00000000000064d8	ret
00000000000064dc	brk	#0x1
_$ss20_ArrayBufferProtocolPsE15replaceSubrange_4with10elementsOfySnySiG_Siqd__ntSlRd__7ElementQyd__AGRtzlFs01_aB0Vys5UInt8VG_s0A5SliceVyAMGTg5:
00000000000064e0	sub	sp, sp, #0x70
00000000000064e4	stp	x28, x27, [sp, #0x10]
00000000000064e8	stp	x26, x25, [sp, #0x20]
00000000000064ec	stp	x24, x23, [sp, #0x30]
00000000000064f0	stp	x22, x21, [sp, #0x40]
00000000000064f4	stp	x20, x19, [sp, #0x50]
00000000000064f8	stp	x29, x30, [sp, #0x60]
00000000000064fc	add	x29, sp, #0x60
0000000000006500	subs	x8, x1, x0
0000000000006504	b.vs	0x67c4
0000000000006508	subs	x19, x2, x8
000000000000650c	b.vs	0x67c8
0000000000006510	mov	x28, x5
0000000000006514	mov	x21, x4
0000000000006518	mov	x23, x1
000000000000651c	mov	x24, x0
0000000000006520	ldr	x20, [x20]
0000000000006524	ldr	x8, [x20, #0x10]
0000000000006528	cbz	x19, 0x6538
000000000000652c	adds	x9, x8, x19
0000000000006530	b.vs	0x67d4
0000000000006534	str	x9, [x20, #0x10]
0000000000006538	adds	x22, x23, x19
000000000000653c	b.vs	0x67cc
0000000000006540	subs	x25, x8, x23
0000000000006544	b.vs	0x67d0
0000000000006548	add	x8, x20, #0x20
000000000000654c	add	x26, x8, x23
0000000000006550	add	x27, x26, x19
0000000000006554	cmp	x19, #0x1
0000000000006558	b.lt	0x660c
000000000000655c	stp	x3, x6, [sp]
0000000000006560	mov	x0, x27
0000000000006564	mov	x1, x26
0000000000006568	mov	x2, x25
000000000000656c	bl	0x77c8 ; symbol stub for: _memmove
0000000000006570	mov	x8, x28
0000000000006574	cmp	x24, x23
0000000000006578	b.eq	0x6744
000000000000657c	cmp	x23, x24
0000000000006580	b.lt	0x67e0
0000000000006584	cmp	x24, x23
0000000000006588	b.ge	0x67e4
000000000000658c	ldr	x8, [sp, #0x8]
0000000000006590	lsr	x9, x8, #1
0000000000006594	mvn	x8, x24
0000000000006598	add	x10, x8, x23
000000000000659c	cmp	x28, x9
00000000000065a0	csel	x8, x28, x9, gt
00000000000065a4	sub	x8, x8, x28
00000000000065a8	cmp	x10, x8
00000000000065ac	csel	x8, x10, x8, lo
00000000000065b0	add	x8, x8, #0x1
00000000000065b4	cmp	x8, #0x10
00000000000065b8	b.ls	0x6604
00000000000065bc	add	x11, x20, #0x20
00000000000065c0	add	x13, x11, x24
00000000000065c4	cmp	x28, x9
00000000000065c8	csel	x12, x28, x9, gt
00000000000065cc	sub	x12, x12, x28
00000000000065d0	cmp	x10, x12
00000000000065d4	csel	x12, x10, x12, lo
00000000000065d8	add	x10, x21, x28
00000000000065dc	add	x14, x12, x28
00000000000065e0	add	x14, x14, x21
00000000000065e4	add	x14, x14, #0x1
00000000000065e8	cmp	x13, x14
00000000000065ec	b.hs	0x66e4
00000000000065f0	add	x12, x12, x24
00000000000065f4	add	x11, x12, x11
00000000000065f8	add	x11, x11, #0x1
00000000000065fc	cmp	x10, x11
0000000000006600	b.hs	0x66e4
0000000000006604	mov	x8, x28
0000000000006608	b	0x671c
000000000000660c	tbnz	x2, #0x3f, 0x67dc
0000000000006610	cbz	x2, 0x6640
0000000000006614	lsr	x9, x6, #1
0000000000006618	cmp	x28, x9
000000000000661c	b.ge	0x67bc
0000000000006620	ldrb	w10, [x21, x28]
0000000000006624	strb	w10, [x8, x24]
0000000000006628	cmn	x24, #0x1
000000000000662c	b.vs	0x67c0
0000000000006630	add	x28, x28, #0x1
0000000000006634	add	x24, x24, #0x1
0000000000006638	subs	x2, x2, #0x1
000000000000663c	b.ne	0x6618
0000000000006640	mov	x0, x3
0000000000006644	bl	0x7918 ; symbol stub for: _swift_unknownObjectRelease
0000000000006648	cbz	x19, 0x669c
000000000000664c	negs	x19, x19
0000000000006650	b.vs	0x67ec
0000000000006654	mov	x0, x27
0000000000006658	cmp	x19, x25
000000000000665c	b.ge	0x66bc
0000000000006660	mov	x1, x26
0000000000006664	mov	x2, x19
0000000000006668	bl	0x77bc ; symbol stub for: _memcpy
000000000000666c	subs	x2, x25, x19
0000000000006670	b.vs	0x67f0
0000000000006674	add	x1, x26, x19
0000000000006678	mov	x0, x26
000000000000667c	ldp	x29, x30, [sp, #0x60]
0000000000006680	ldp	x20, x19, [sp, #0x50]
0000000000006684	ldp	x22, x21, [sp, #0x40]
0000000000006688	ldp	x24, x23, [sp, #0x30]
000000000000668c	ldp	x26, x25, [sp, #0x20]
0000000000006690	ldp	x28, x27, [sp, #0x10]
0000000000006694	add	sp, sp, #0x70
0000000000006698	b	0x77c8 ; symbol stub for: _memmove
000000000000669c	ldp	x29, x30, [sp, #0x60]
00000000000066a0	ldp	x20, x19, [sp, #0x50]
00000000000066a4	ldp	x22, x21, [sp, #0x40]
00000000000066a8	ldp	x24, x23, [sp, #0x30]
00000000000066ac	ldp	x26, x25, [sp, #0x20]
00000000000066b0	ldp	x28, x27, [sp, #0x10]
00000000000066b4	add	sp, sp, #0x70
00000000000066b8	ret
00000000000066bc	mov	x1, x26
00000000000066c0	mov	x2, x25
00000000000066c4	ldp	x29, x30, [sp, #0x60]
00000000000066c8	ldp	x20, x19, [sp, #0x50]
00000000000066cc	ldp	x22, x21, [sp, #0x40]
00000000000066d0	ldp	x24, x23, [sp, #0x30]
00000000000066d4	ldp	x26, x25, [sp, #0x20]
00000000000066d8	ldp	x28, x27, [sp, #0x10]
00000000000066dc	add	sp, sp, #0x70
00000000000066e0	b	0x77bc ; symbol stub for: _memcpy
00000000000066e4	and	x11, x8, #0xf
00000000000066e8	tst	x8, #0xf
00000000000066ec	mov	w12, #0x10
00000000000066f0	csel	x11, x12, x11, eq
00000000000066f4	sub	x11, x8, x11
00000000000066f8	add	x12, x11, x24
00000000000066fc	add	x8, x11, x28
0000000000006700	add	x13, x20, x24
0000000000006704	add	x13, x13, #0x20
0000000000006708	ldr	q0, [x10], #0x10
000000000000670c	str	q0, [x13], #0x10
0000000000006710	subs	x11, x11, #0x10
0000000000006714	b.ne	0x6708
0000000000006718	mov	x24, x12
000000000000671c	add	x10, x20, x24
0000000000006720	add	x10, x10, #0x20
0000000000006724	sub	x11, x23, x24
0000000000006728	cmp	x8, x9
000000000000672c	b.ge	0x67b4
0000000000006730	ldrb	w12, [x21, x8]
0000000000006734	strb	w12, [x10], #0x1
0000000000006738	add	x8, x8, #0x1
000000000000673c	subs	x11, x11, #0x1
0000000000006740	b.ne	0x6728
0000000000006744	cmp	x22, x23
0000000000006748	b.lt	0x67d8
000000000000674c	b.eq	0x6790
0000000000006750	cmp	x22, x23
0000000000006754	b.le	0x67e8
0000000000006758	ldr	x9, [sp, #0x8]
000000000000675c	lsr	x9, x9, #1
0000000000006760	add	x10, x20, x23
0000000000006764	add	x10, x10, #0x20
0000000000006768	mov	x11, x8
000000000000676c	cmp	x8, x28
0000000000006770	b.lt	0x67b8
0000000000006774	cmp	x11, x9
0000000000006778	b.ge	0x67b8
000000000000677c	ldrb	w12, [x21, x11]
0000000000006780	strb	w12, [x10], #0x1
0000000000006784	add	x11, x11, #0x1
0000000000006788	subs	x19, x19, #0x1
000000000000678c	b.ne	0x676c
0000000000006790	ldr	x0, [sp]
0000000000006794	ldp	x29, x30, [sp, #0x60]
0000000000006798	ldp	x20, x19, [sp, #0x50]
000000000000679c	ldp	x22, x21, [sp, #0x40]
00000000000067a0	ldp	x24, x23, [sp, #0x30]
00000000000067a4	ldp	x26, x25, [sp, #0x20]
00000000000067a8	ldp	x28, x27, [sp, #0x10]
00000000000067ac	add	sp, sp, #0x70
00000000000067b0	b	0x7918 ; symbol stub for: _swift_unknownObjectRelease
00000000000067b4	brk	#0x1
00000000000067b8	brk	#0x1
00000000000067bc	brk	#0x1
00000000000067c0	brk	#0x1
00000000000067c4	brk	#0x1
00000000000067c8	brk	#0x1
00000000000067cc	brk	#0x1
00000000000067d0	brk	#0x1
00000000000067d4	brk	#0x1
00000000000067d8	brk	#0x1
00000000000067dc	brk	#0x1
00000000000067e0	brk	#0x1
00000000000067e4	brk	#0x1
00000000000067e8	brk	#0x1
00000000000067ec	brk	#0x1
00000000000067f0	brk	#0x1
_$ss15ContiguousArrayV16_createNewBuffer14bufferIsUnique15minimumCapacity13growForAppendySb_SiSbtFs5UInt8V_Tg5:
00000000000067f4	stp	x24, x23, [sp, #-0x40]!
00000000000067f8	stp	x22, x21, [sp, #0x10]
00000000000067fc	stp	x20, x19, [sp, #0x20]
0000000000006800	stp	x29, x30, [sp, #0x30]
0000000000006804	add	x29, sp, #0x30
0000000000006808	mov	x19, x2
000000000000680c	mov	x21, x1
0000000000006810	mov	x22, x0
0000000000006814	ldr	x23, [x20]
0000000000006818	mov	x0, x23
000000000000681c	bl	0x790c ; symbol stub for: _swift_retain
0000000000006820	mov	x0, x22
0000000000006824	mov	x1, x21
0000000000006828	mov	x2, x19
000000000000682c	mov	x3, x23
0000000000006830	bl	_$ss22_ContiguousArrayBufferV20_consumeAndCreateNew14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFs5UInt8V_Tg5
0000000000006834	str	x0, [x20]
0000000000006838	mov	x0, x23
000000000000683c	ldp	x29, x30, [sp, #0x30]
0000000000006840	ldp	x20, x19, [sp, #0x20]
0000000000006844	ldp	x22, x21, [sp, #0x10]
0000000000006848	ldp	x24, x23, [sp], #0x40
000000000000684c	b	0x7900 ; symbol stub for: _swift_release
_$ss22_ContiguousArrayBufferV20_consumeAndCreateNew14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFs5UInt8V_Tg5:
0000000000006850	stp	x22, x21, [sp, #-0x30]!
0000000000006854	stp	x20, x19, [sp, #0x10]
0000000000006858	stp	x29, x30, [sp, #0x20]
000000000000685c	add	x29, sp, #0x20
0000000000006860	mov	x19, x3
0000000000006864	mov	x20, x0
0000000000006868	tbz	w2, #0x0, 0x6890
000000000000686c	ldr	x8, [x19, #0x18]
0000000000006870	lsr	x8, x8, #1
0000000000006874	cmp	x8, x1
0000000000006878	b.ge	0x6894
000000000000687c	adds	x8, x8, x8
0000000000006880	b.vs	0x6924
0000000000006884	cmp	x8, x1
0000000000006888	csel	x8, x1, x8, lt
000000000000688c	b	0x6894
0000000000006890	mov	x8, x1
0000000000006894	ldr	x21, [x19, #0x10]
0000000000006898	cmp	x8, x21
000000000000689c	csel	x22, x21, x8, lt
00000000000068a0	cbz	x22, 0x68e0
00000000000068a4	adr	x0, #0x5d9c
00000000000068a8	nop
00000000000068ac	bl	___swift_instantiateConcreteTypeFromMangledName
00000000000068b0	add	x1, x22, #0x20
00000000000068b4	mov	w2, #0x7
00000000000068b8	bl	0x7858 ; symbol stub for: _swift_allocObject
00000000000068bc	mov	x22, x0
00000000000068c0	bl	0x790c ; symbol stub for: _swift_retain
00000000000068c4	bl	__swift_stdlib_malloc_size
00000000000068c8	lsl	x8, x0, #1
00000000000068cc	sub	x8, x8, #0x40
00000000000068d0	stp	x21, x8, [x22, #0x10]
00000000000068d4	mov	x0, x22
00000000000068d8	bl	0x7900 ; symbol stub for: _swift_release
00000000000068dc	b	0x68e8
00000000000068e0	nop
00000000000068e4	ldr	x22, #0x17b4 ; literal pool symbol address: __swiftEmptyArrayStorage
00000000000068e8	add	x0, x22, #0x20
00000000000068ec	add	x1, x19, #0x20
00000000000068f0	mov	x2, x21
00000000000068f4	tbz	w20, #0x0, 0x6904
00000000000068f8	bl	0x77c8 ; symbol stub for: _memmove
00000000000068fc	str	xzr, [x19, #0x10]
0000000000006900	b	0x6908
0000000000006904	bl	0x77bc ; symbol stub for: _memcpy
0000000000006908	mov	x0, x19
000000000000690c	bl	0x7900 ; symbol stub for: _swift_release
0000000000006910	mov	x0, x22
0000000000006914	ldp	x29, x30, [sp, #0x20]
0000000000006918	ldp	x20, x19, [sp, #0x10]
000000000000691c	ldp	x22, x21, [sp], #0x30
0000000000006920	ret
0000000000006924	brk	#0x1
_$ss32_copyCollectionToContiguousArrayys0dE0Vy7ElementQzGxSlRzlFSS8UTF8ViewV_Tgq5:
0000000000006928	sub	sp, sp, #0x50
000000000000692c	stp	x24, x23, [sp, #0x10]
0000000000006930	stp	x22, x21, [sp, #0x20]
0000000000006934	stp	x20, x19, [sp, #0x30]
0000000000006938	stp	x29, x30, [sp, #0x40]
000000000000693c	add	x29, sp, #0x40
0000000000006940	mov	x23, x1
0000000000006944	mov	x22, x0
0000000000006948	ubfx	x20, x1, #56, #4
000000000000694c	tbnz	x1, #0x3c, 0x6a20
0000000000006950	and	x8, x22, #0xffffffffffff
0000000000006954	tst	x23, #0x2000000000000000
0000000000006958	csel	x19, x8, x20, eq
000000000000695c	cbz	x19, 0x6a34
0000000000006960	cmp	x19, #0x1
0000000000006964	b.lt	0x69cc
0000000000006968	adr	x0, #0x5cd8
000000000000696c	nop
0000000000006970	bl	___swift_instantiateConcreteTypeFromMangledName
0000000000006974	add	x1, x19, #0x20
0000000000006978	mov	w2, #0x7
000000000000697c	bl	0x7858 ; symbol stub for: _swift_allocObject
0000000000006980	mov	x21, x0
0000000000006984	bl	0x790c ; symbol stub for: _swift_retain
0000000000006988	bl	__swift_stdlib_malloc_size
000000000000698c	lsl	x8, x0, #1
0000000000006990	sub	x8, x8, #0x40
0000000000006994	stp	x19, x8, [x21, #0x10]
0000000000006998	mov	x0, x21
000000000000699c	bl	0x7900 ; symbol stub for: _swift_release
00000000000069a0	add	x0, x21, #0x20
00000000000069a4	tbnz	x23, #0x3c, 0x69dc
00000000000069a8	tbnz	x23, #0x3d, 0x69f8
00000000000069ac	tbz	x22, #0x3c, 0x6a58
00000000000069b0	and	x8, x23, #0xfffffffffffffff
00000000000069b4	add	x8, x8, #0x20
00000000000069b8	and	x20, x22, #0xffffffffffff
00000000000069bc	cmp	x19, x20
00000000000069c0	b.lt	0x6a7c
00000000000069c4	mov	x1, x8
00000000000069c8	b	0x6a0c
00000000000069cc	nop
00000000000069d0	ldr	x21, #0x16c8 ; literal pool symbol address: __swiftEmptyArrayStorage
00000000000069d4	add	x0, x21, #0x20
00000000000069d8	tbz	x23, #0x3c, 0x69a8
00000000000069dc	mov	x1, x19
00000000000069e0	mov	x2, x22
00000000000069e4	mov	x3, x23
00000000000069e8	bl	0x7798 ; symbol stub for: _$ss11_StringGutsV16_foreignCopyUTF84intoSiSgSrys5UInt8VG_tF
00000000000069ec	tbnz	w1, #0x0, 0x6a7c
00000000000069f0	mov	x20, x0
00000000000069f4	b	0x6a14
00000000000069f8	and	x8, x23, #0xffffffffffffff
00000000000069fc	stp	x22, x8, [sp]
0000000000006a00	cmp	x19, x20
0000000000006a04	b.lt	0x6a7c
0000000000006a08	mov	x1, sp
0000000000006a0c	mov	x2, x20
0000000000006a10	bl	0x77bc ; symbol stub for: _memcpy
0000000000006a14	cmp	x20, x19
0000000000006a18	b.eq	0x6a3c
0000000000006a1c	brk	#0x1
0000000000006a20	mov	x0, x22
0000000000006a24	mov	x1, x23
0000000000006a28	bl	0x7774 ; symbol stub for: _$sSS8UTF8ViewV13_foreignCountSiyF
0000000000006a2c	mov	x19, x0
0000000000006a30	cbnz	x19, 0x6960
0000000000006a34	nop
0000000000006a38	ldr	x21, #0x1660 ; literal pool symbol address: __swiftEmptyArrayStorage
0000000000006a3c	mov	x0, x21
0000000000006a40	ldp	x29, x30, [sp, #0x40]
0000000000006a44	ldp	x20, x19, [sp, #0x30]
0000000000006a48	ldp	x22, x21, [sp, #0x20]
0000000000006a4c	ldp	x24, x23, [sp, #0x10]
0000000000006a50	add	sp, sp, #0x50
0000000000006a54	ret
0000000000006a58	mov	x20, x0
0000000000006a5c	mov	x0, x22
0000000000006a60	mov	x1, x23
0000000000006a64	bl	0x77a4 ; symbol stub for: _$ss13_StringObjectV10sharedUTF8SRys5UInt8VGvg
0000000000006a68	mov	x8, x0
0000000000006a6c	mov	x0, x20
0000000000006a70	mov	x20, x1
0000000000006a74	cmp	x19, x20
0000000000006a78	b.ge	0x69c4
0000000000006a7c	brk	#0x1
_$s10Foundation4DataV06InlineB0VyAESWcfCTf4nd_n:
0000000000006a80	sub	x2, x1, x0
0000000000006a84	cmp	x0, #0x0
0000000000006a88	csel	x11, xzr, x2, eq
0000000000006a8c	cmp	x11, #0xff
0000000000006a90	b.gt	0x6bac
0000000000006a94	sub	sp, sp, #0x20
0000000000006a98	stp	x29, x30, [sp, #0x10]
0000000000006a9c	add	x29, sp, #0x10
0000000000006aa0	mov	x8, x0
0000000000006aa4	mov	x9, #0x0
0000000000006aa8	stur	xzr, [sp, #0x6]
0000000000006aac	str	xzr, [sp]
0000000000006ab0	strb	w11, [sp, #0xe]
0000000000006ab4	mov	x12, #0x0
0000000000006ab8	mov	x14, #0x0
0000000000006abc	mov	x13, #0x0
0000000000006ac0	mov	x15, #0x0
0000000000006ac4	mov	x1, #0x0
0000000000006ac8	mov	x16, #0x0
0000000000006acc	mov	x17, #0x0
0000000000006ad0	mov	x0, #0x0
0000000000006ad4	mov	x3, #0x0
0000000000006ad8	mov	x4, #0x0
0000000000006adc	mov	x5, #0x0
0000000000006ae0	mov	x6, #0x0
0000000000006ae4	mov	x10, #0x0
0000000000006ae8	cbz	x8, 0x6b68
0000000000006aec	cbz	x2, 0x6b68
0000000000006af0	mov	x0, sp
0000000000006af4	mov	x1, x8
0000000000006af8	bl	0x77bc ; symbol stub for: _memcpy
0000000000006afc	ldrb	w10, [sp]
0000000000006b00	ldrb	w8, [sp, #0x1]
0000000000006b04	ldrb	w9, [sp, #0x9]
0000000000006b08	ldrb	w11, [sp, #0xa]
0000000000006b0c	lsl	x15, x9, #8
0000000000006b10	lsl	x13, x11, #16
0000000000006b14	ldrb	w11, [sp, #0x5]
0000000000006b18	ldrb	w17, [sp, #0x6]
0000000000006b1c	ldrb	w9, [sp, #0xb]
0000000000006b20	ldrb	w12, [sp, #0xc]
0000000000006b24	ldrb	w16, [sp, #0xd]
0000000000006b28	lsl	x14, x9, #24
0000000000006b2c	lsl	x12, x12, #32
0000000000006b30	lsl	x9, x16, #40
0000000000006b34	ldrb	w16, [sp, #0x7]
0000000000006b38	lsl	x16, x16, #56
0000000000006b3c	lsl	x17, x17, #48
0000000000006b40	lsl	x0, x11, #40
0000000000006b44	ldrb	w11, [sp, #0x3]
0000000000006b48	ldrb	w1, [sp, #0x4]
0000000000006b4c	lsl	x3, x1, #32
0000000000006b50	lsl	x4, x11, #24
0000000000006b54	ldrb	w11, [sp, #0x2]
0000000000006b58	ldrb	w1, [sp, #0x8]
0000000000006b5c	lsl	x5, x11, #16
0000000000006b60	lsl	x6, x8, #8
0000000000006b64	ldrb	w11, [sp, #0xe]
0000000000006b68	orr	x8, x15, x1
0000000000006b6c	orr	x8, x8, x13
0000000000006b70	orr	x8, x8, x14
0000000000006b74	orr	x8, x8, x12
0000000000006b78	and	w11, w11, #0xff
0000000000006b7c	orr	x1, x8, x9
0000000000006b80	bfi	x1, x11, #48, #8
0000000000006b84	orr	x8, x6, x10
0000000000006b88	orr	x8, x8, x5
0000000000006b8c	orr	x8, x8, x4
0000000000006b90	orr	x8, x8, x3
0000000000006b94	orr	x8, x8, x0
0000000000006b98	orr	x8, x8, x17
0000000000006b9c	orr	x0, x8, x16
0000000000006ba0	ldp	x29, x30, [sp, #0x10]
0000000000006ba4	add	sp, sp, #0x20
0000000000006ba8	ret
0000000000006bac	brk	#0x1
_$s10Foundation4DataV10LargeSliceVyAESWcfCTf4nd_n:
0000000000006bb0	stp	x20, x19, [sp, #-0x20]!
0000000000006bb4	stp	x29, x30, [sp, #0x10]
0000000000006bb8	add	x29, sp, #0x10
0000000000006bbc	mov	x20, x0
0000000000006bc0	sub	x8, x1, x0
0000000000006bc4	cmp	x0, #0x0
0000000000006bc8	csel	x19, xzr, x8, eq
0000000000006bcc	mov	x0, #0x0
0000000000006bd0	bl	0x7738 ; symbol stub for: _$s10Foundation13__DataStorageCMa
0000000000006bd4	ldr	w1, [x0, #0x30]
0000000000006bd8	ldrh	w2, [x0, #0x34]
0000000000006bdc	bl	0x7858 ; symbol stub for: _swift_allocObject
0000000000006be0	mov	x2, x0
0000000000006be4	mov	x0, x20
0000000000006be8	mov	x1, x19
0000000000006bec	mov	x20, x2
0000000000006bf0	bl	0x772c ; symbol stub for: _$s10Foundation13__DataStorageC5bytes6lengthACSVSg_Sitcfc
0000000000006bf4	tbnz	x19, #0x3f, 0x6c24
0000000000006bf8	mov	x20, x0
0000000000006bfc	mov	x0, #0x0
0000000000006c00	bl	0x7744 ; symbol stub for: _$s10Foundation4DataV14RangeReferenceCMa
0000000000006c04	mov	w1, #0x20
0000000000006c08	mov	w2, #0x7
0000000000006c0c	bl	0x7858 ; symbol stub for: _swift_allocObject
0000000000006c10	stp	xzr, x19, [x0, #0x10]
0000000000006c14	mov	x1, x20
0000000000006c18	ldp	x29, x30, [sp, #0x10]
0000000000006c1c	ldp	x20, x19, [sp], #0x20
0000000000006c20	ret
0000000000006c24	brk	#0x1
_$s10Foundation4DataVyACxcSTRzs5UInt8V7ElementRtzlufCs10ArraySliceVyAEG_Tg5Tf4gd_n:
0000000000006c28	sub	sp, sp, #0x70
0000000000006c2c	stp	x24, x23, [sp, #0x30]
0000000000006c30	stp	x22, x21, [sp, #0x40]
0000000000006c34	stp	x20, x19, [sp, #0x50]
0000000000006c38	stp	x29, x30, [sp, #0x60]
0000000000006c3c	add	x29, sp, #0x60
0000000000006c40	mov	x19, x3
0000000000006c44	mov	x21, x2
0000000000006c48	mov	x22, x1
0000000000006c4c	mov	x20, x0
0000000000006c50	adr	x0, #0x59d8
0000000000006c54	nop
0000000000006c58	bl	___swift_instantiateConcreteTypeFromMangledName
0000000000006c5c	mov	x23, x0
0000000000006c60	str	x0, [sp, #0x20]
0000000000006c64	bl	_$ss10ArraySliceVys5UInt8VGAByxG10Foundation15ContiguousBytesAgDRszlWl
0000000000006c68	str	x0, [sp, #0x28]
0000000000006c6c	adr	x0, #0x15e4
0000000000006c70	nop
0000000000006c74	mov	w1, #0x30
0000000000006c78	mov	w2, #0x7
0000000000006c7c	bl	0x7858 ; symbol stub for: _swift_allocObject
0000000000006c80	str	x0, [sp, #0x8]
0000000000006c84	stp	x20, x22, [x0, #0x10]
0000000000006c88	stp	x21, x19, [x0, #0x20]
0000000000006c8c	add	x0, sp, #0x8
0000000000006c90	mov	x1, x23
0000000000006c94	bl	___swift_project_boxed_opaque_existential_1
0000000000006c98	ldp	x21, x8, [x0, #0x10]
0000000000006c9c	lsr	x8, x8, #1
0000000000006ca0	subs	x19, x8, x21
0000000000006ca4	b.vs	0x6d7c
0000000000006ca8	ldr	x22, [x0, #0x8]
0000000000006cac	mov	x0, x20
0000000000006cb0	bl	0x7924 ; symbol stub for: _swift_unknownObjectRetain
0000000000006cb4	cmp	x22, #0x0
0000000000006cb8	ccmp	x19, #0x0, #0x4, ne
0000000000006cbc	b.ne	0x6ccc
0000000000006cc0	mov	x19, #0x0
0000000000006cc4	mov	x20, #-0x4000000000000000
0000000000006cc8	b	0x6d54
0000000000006ccc	add	x20, x22, x21
0000000000006cd0	add	x21, x20, x19
0000000000006cd4	adr	x0, #0x5964
0000000000006cd8	nop
0000000000006cdc	bl	___swift_instantiateConcreteTypeFromMangledName
0000000000006ce0	cmp	x19, #0xe
0000000000006ce4	b.le	0x6d28
0000000000006ce8	mov	w8, #0x7fffffff
0000000000006cec	cmp	x19, x8
0000000000006cf0	b.ge	0x6d40
0000000000006cf4	mov	x0, #0x0
0000000000006cf8	bl	0x7738 ; symbol stub for: _$s10Foundation13__DataStorageCMa
0000000000006cfc	ldr	w1, [x0, #0x30]
0000000000006d00	ldrh	w2, [x0, #0x34]
0000000000006d04	bl	0x7858 ; symbol stub for: _swift_allocObject
0000000000006d08	mov	x2, x0
0000000000006d0c	mov	x0, x20
0000000000006d10	mov	x1, x19
0000000000006d14	mov	x20, x2
0000000000006d18	bl	0x772c ; symbol stub for: _$s10Foundation13__DataStorageC5bytes6lengthACSVSg_Sitcfc
0000000000006d1c	lsl	x19, x19, #32
0000000000006d20	orr	x20, x0, #0x4000000000000000
0000000000006d24	b	0x6d54
0000000000006d28	mov	x0, x20
0000000000006d2c	mov	x1, x21
0000000000006d30	bl	_$s10Foundation4DataV06InlineB0VyAESWcfCTf4nd_n
0000000000006d34	mov	x19, x0
0000000000006d38	and	x20, x1, #0xffffffffffffff
0000000000006d3c	b	0x6d54
0000000000006d40	mov	x0, x20
0000000000006d44	mov	x1, x21
0000000000006d48	bl	_$s10Foundation4DataV10LargeSliceVyAESWcfCTf4nd_n
0000000000006d4c	mov	x19, x0
0000000000006d50	orr	x20, x1, #0x8000000000000000
0000000000006d54	add	x0, sp, #0x8
0000000000006d58	bl	___swift_destroy_boxed_opaque_existential_1
0000000000006d5c	mov	x0, x19
0000000000006d60	mov	x1, x20
0000000000006d64	ldp	x29, x30, [sp, #0x60]
0000000000006d68	ldp	x20, x19, [sp, #0x50]
0000000000006d6c	ldp	x22, x21, [sp, #0x40]
0000000000006d70	ldp	x24, x23, [sp, #0x30]
0000000000006d74	add	sp, sp, #0x70
0000000000006d78	ret
0000000000006d7c	brk	#0x1
_$s11FastaNativeAAC06repeatA02id4desc4gene1nySS_SSSays5UInt8VGSitFTf4nnnnd_n:
0000000000006d80	sub	sp, sp, #0xc0
0000000000006d84	stp	x28, x27, [sp, #0x60]
0000000000006d88	stp	x26, x25, [sp, #0x70]
0000000000006d8c	stp	x24, x23, [sp, #0x80]
0000000000006d90	stp	x22, x21, [sp, #0x90]
0000000000006d94	stp	x20, x19, [sp, #0xa0]
0000000000006d98	stp	x29, x30, [sp, #0xb0]
0000000000006d9c	add	x29, sp, #0xb0
0000000000006da0	mov	x25, x5
0000000000006da4	mov	x19, x4
0000000000006da8	mov	x22, x3
0000000000006dac	mov	x23, x2
0000000000006db0	mov	x24, x1
0000000000006db4	mov	x27, x0
0000000000006db8	str	x4, [sp, #0x30]
0000000000006dbc	mov	x0, x4
0000000000006dc0	mov	w1, #0x2
0000000000006dc4	bl	0x7894 ; symbol stub for: _swift_bridgeObjectRetain_n
0000000000006dc8	add	x20, sp, #0x30
0000000000006dcc	mov	x0, x19
0000000000006dd0	bl	_$sSa6append10contentsOfyqd__n_t7ElementQyd__RszSTRd__lFs5UInt8V_SayAFGTg5
0000000000006dd4	ldr	x28, [sp, #0x30]
0000000000006dd8	nop
0000000000006ddc	ldr	x1, #0x12b4 ; literal pool symbol address: _$ss5UInt8VN
0000000000006de0	mov	w20, #0xf400
0000000000006de4	mov	w0, #0xf400
0000000000006de8	bl	0x778c ; symbol stub for: _$sSa28_allocateBufferUninitialized15minimumCapacitys06_ArrayB0VyxGSi_tFZ
0000000000006dec	mov	x21, x0
0000000000006df0	str	x20, [x0, #0x10]
0000000000006df4	add	x0, x0, #0x20
0000000000006df8	mov	w1, #0xa
0000000000006dfc	mov	w2, #0xf400
0000000000006e00	bl	0x77d4 ; symbol stub for: _memset
0000000000006e04	str	x21, [sp, #0x58]
0000000000006e08	mov	w8, #0x3e
0000000000006e0c	mov	x9, #-0x1f00000000000000
0000000000006e10	stp	x8, x9, [sp, #0x30]
0000000000006e14	add	x20, sp, #0x30
0000000000006e18	mov	x0, x27
0000000000006e1c	mov	x1, x24
0000000000006e20	bl	0x7768 ; symbol stub for: _$sSS6appendyySSF
0000000000006e24	ldp	x8, x24, [sp, #0x30]
0000000000006e28	stp	x8, x24, [sp, #0x30]
0000000000006e2c	mov	x0, x24
0000000000006e30	bl	0x7888 ; symbol stub for: _swift_bridgeObjectRetain
0000000000006e34	add	x20, sp, #0x30
0000000000006e38	mov	w0, #0x20
0000000000006e3c	mov	x1, #-0x1f00000000000000
0000000000006e40	bl	0x7768 ; symbol stub for: _$sSS6appendyySSF
0000000000006e44	ldp	x20, x27, [sp, #0x30]
0000000000006e48	mov	x0, x24
0000000000006e4c	bl	0x7870 ; symbol stub for: _swift_bridgeObjectRelease
0000000000006e50	stp	x20, x27, [sp, #0x30]
0000000000006e54	mov	x0, x27
0000000000006e58	bl	0x7888 ; symbol stub for: _swift_bridgeObjectRetain
0000000000006e5c	add	x20, sp, #0x30
0000000000006e60	mov	x0, x23
0000000000006e64	mov	x1, x22
0000000000006e68	bl	0x7768 ; symbol stub for: _$sSS6appendyySSF
0000000000006e6c	ldp	x20, x22, [sp, #0x30]
0000000000006e70	mov	x0, x27
0000000000006e74	bl	0x7870 ; symbol stub for: _swift_bridgeObjectRelease
0000000000006e78	stp	x20, x22, [sp, #0x30]
0000000000006e7c	mov	x0, x22
0000000000006e80	bl	0x7888 ; symbol stub for: _swift_bridgeObjectRetain
0000000000006e84	add	x20, sp, #0x30
0000000000006e88	mov	w0, #0xa
0000000000006e8c	mov	x1, #-0x1f00000000000000
0000000000006e90	bl	0x7768 ; symbol stub for: _$sSS6appendyySSF
0000000000006e94	ldp	x20, x23, [sp, #0x30]
0000000000006e98	mov	x0, x22
0000000000006e9c	bl	0x7870 ; symbol stub for: _swift_bridgeObjectRelease
0000000000006ea0	stp	x20, x23, [sp, #0x30]
0000000000006ea4	nop
0000000000006ea8	ldr	x1, #0x1190 ; literal pool symbol address: _$sSSN
0000000000006eac	nop
0000000000006eb0	ldr	x2, #0x1198 ; literal pool symbol address: _$sSSs25LosslessStringConvertiblesWP
0000000000006eb4	nop
0000000000006eb8	ldr	x3, #0x1188 ; literal pool symbol address: _$sSSSTsWP
0000000000006ebc	add	x0, sp, #0x30
0000000000006ec0	bl	0x7780 ; symbol stub for: _$sSSySSxcs25LosslessStringConvertibleRzSTRzSJ7ElementSTRtzlufC
0000000000006ec4	str	x1, [sp, #0x10]
0000000000006ec8	bl	_$ss32_copyCollectionToContiguousArrayys0dE0Vy7ElementQzGxSlRzlFSS8UTF8ViewV_Tgq5
0000000000006ecc	mov	x26, x0
0000000000006ed0	ldr	x8, [x0, #0x10]
0000000000006ed4	add	x1, x0, #0x20
0000000000006ed8	mov	w3, #0x1
0000000000006edc	bfi	x3, x8, #1, #63
0000000000006ee0	mov	x2, #0x0
0000000000006ee4	bl	_$s10Foundation4DataVyACxcSTRzs5UInt8V7ElementRtzlufCs10ArraySliceVyAEG_Tg5Tf4gd_n
0000000000006ee8	mov	x20, x0
0000000000006eec	mov	x22, x1
0000000000006ef0	nop
0000000000006ef4	ldr	x0, #0x52d4 ; Objc class ref: bad class ref
0000000000006ef8	bl	0x77ec ; symbol stub for: _objc_opt_self
0000000000006efc	nop
0000000000006f00	ldr	x1, #0x52b8
0000000000006f04	str	x0, [sp, #0x18]
0000000000006f08	bl	0x77e0 ; Objc message: _objc_msgSend
0000000000006f0c	mov	x29, x29
0000000000006f10	bl	0x784c ; symbol stub for: _objc_retainAutoreleasedReturnValue
0000000000006f14	mov	x23, x0
0000000000006f18	mov	x0, x20
0000000000006f1c	mov	x1, x22
0000000000006f20	bl	0x7750 ; symbol stub for: _$s10Foundation4DataV19_bridgeToObjectiveCSo6NSDataCyF
0000000000006f24	mov	x27, x0
0000000000006f28	nop
0000000000006f2c	ldr	x1, #0x5294
0000000000006f30	mov	x0, x23
0000000000006f34	mov	x2, x27
0000000000006f38	bl	0x77e0 ; Objc message: _objc_msgSend
0000000000006f3c	bl	0x7810 ; symbol stub for: _objc_release_x23
0000000000006f40	bl	0x7834 ; symbol stub for: _objc_release_x27
0000000000006f44	mov	x0, x20
0000000000006f48	mov	x1, x22
0000000000006f4c	bl	_$s10Foundation4DataV15_RepresentationOWOe
0000000000006f50	cmp	x25, #0x1
0000000000006f54	b.lt	0x7368
0000000000006f58	str	x26, [sp, #0x8]
0000000000006f5c	mov	x26, #0x0
0000000000006f60	mov	x23, #0x0
0000000000006f64	ldr	x24, [x19, #0x10]
0000000000006f68	add	x8, x28, #0x20
0000000000006f6c	stp	x8, x28, [sp, #0x20]
0000000000006f70	mov	w19, #0x3c
0000000000006f74	adds	x9, x23, x19
0000000000006f78	b.vs	0x74f4
0000000000006f7c	ldr	x8, [x21, #0x10]
0000000000006f80	cmp	x8, x9
0000000000006f84	b.ge	0x7170
0000000000006f88	tbnz	x23, #0x3f, 0x7534
0000000000006f8c	cmp	x8, x23
0000000000006f90	b.lt	0x7538
0000000000006f94	add	x22, x21, #0x20
0000000000006f98	mov	w27, #0x1
0000000000006f9c	bfi	x27, x23, #1, #63
0000000000006fa0	adr	x0, #0x5688
0000000000006fa4	nop
0000000000006fa8	bl	___swift_instantiateConcreteTypeFromMangledName
0000000000006fac	mov	x20, x0
0000000000006fb0	str	x0, [sp, #0x48]
0000000000006fb4	bl	_$ss10ArraySliceVys5UInt8VGAByxG10Foundation15ContiguousBytesAgDRszlWl
0000000000006fb8	str	x0, [sp, #0x50]
0000000000006fbc	adr	x0, #0x1294
0000000000006fc0	nop
0000000000006fc4	mov	w1, #0x30
0000000000006fc8	mov	w2, #0x7
0000000000006fcc	bl	0x7858 ; symbol stub for: _swift_allocObject
0000000000006fd0	str	x0, [sp, #0x30]
0000000000006fd4	stp	x21, x22, [x0, #0x10]
0000000000006fd8	stp	xzr, x27, [x0, #0x20]
0000000000006fdc	add	x0, sp, #0x30
0000000000006fe0	mov	x1, x20
0000000000006fe4	bl	___swift_project_boxed_opaque_existential_1
0000000000006fe8	ldp	x8, x9, [x0, #0x10]
0000000000006fec	lsr	x9, x9, #1
0000000000006ff0	subs	x23, x9, x8
0000000000006ff4	b.vs	0x753c
0000000000006ff8	cbz	x23, 0x706c
0000000000006ffc	ldr	x22, [x0, #0x8]
0000000000007000	add	x20, x22, x8
0000000000007004	adr	x0, #0x5634
0000000000007008	nop
000000000000700c	bl	___swift_instantiateConcreteTypeFromMangledName
0000000000007010	cmp	x23, #0xe
0000000000007014	b.le	0x7084
0000000000007018	mov	w8, #0x7fffffff
000000000000701c	cmp	x23, x8
0000000000007020	b.ge	0x70ac
0000000000007024	cmp	x22, #0x0
0000000000007028	csel	x23, xzr, x23, eq
000000000000702c	mov	x0, #0x0
0000000000007030	bl	0x7738 ; symbol stub for: _$s10Foundation13__DataStorageCMa
0000000000007034	ldr	w1, [x0, #0x30]
0000000000007038	ldrh	w2, [x0, #0x34]
000000000000703c	bl	0x7858 ; symbol stub for: _swift_allocObject
0000000000007040	mov	x27, x0
0000000000007044	mov	x0, x21
0000000000007048	mov	w1, #0x2
000000000000704c	bl	0x7894 ; symbol stub for: _swift_bridgeObjectRetain_n
0000000000007050	mov	x0, x20
0000000000007054	mov	x1, x23
0000000000007058	mov	x20, x27
000000000000705c	bl	0x772c ; symbol stub for: _$s10Foundation13__DataStorageC5bytes6lengthACSVSg_Sitcfc
0000000000007060	lsl	x20, x23, #32
0000000000007064	orr	x23, x0, #0x4000000000000000
0000000000007068	b	0x7104
000000000000706c	mov	x0, x21
0000000000007070	mov	w1, #0x2
0000000000007074	bl	0x7894 ; symbol stub for: _swift_bridgeObjectRetain_n
0000000000007078	mov	x20, #0x0
000000000000707c	mov	x23, #-0x4000000000000000
0000000000007080	b	0x7104
0000000000007084	add	x23, x20, x23
0000000000007088	mov	x0, x21
000000000000708c	mov	w1, #0x2
0000000000007090	bl	0x7894 ; symbol stub for: _swift_bridgeObjectRetain_n
0000000000007094	mov	x0, x20
0000000000007098	mov	x1, x23
000000000000709c	bl	_$s10Foundation4DataV06InlineB0VyAESWcfCTf4nd_n
00000000000070a0	mov	x20, x0
00000000000070a4	and	x23, x1, #0xffffffffffffff
00000000000070a8	b	0x7104
00000000000070ac	mov	x0, #0x0
00000000000070b0	bl	0x7738 ; symbol stub for: _$s10Foundation13__DataStorageCMa
00000000000070b4	ldr	w1, [x0, #0x30]
00000000000070b8	ldrh	w2, [x0, #0x34]
00000000000070bc	bl	0x7858 ; symbol stub for: _swift_allocObject
00000000000070c0	mov	x27, x0
00000000000070c4	mov	x0, x21
00000000000070c8	mov	w1, #0x2
00000000000070cc	bl	0x7894 ; symbol stub for: _swift_bridgeObjectRetain_n
00000000000070d0	mov	x0, x20
00000000000070d4	mov	x1, x23
00000000000070d8	mov	x20, x27
00000000000070dc	bl	0x772c ; symbol stub for: _$s10Foundation13__DataStorageC5bytes6lengthACSVSg_Sitcfc
00000000000070e0	mov	x27, x0
00000000000070e4	mov	x0, #0x0
00000000000070e8	bl	0x7744 ; symbol stub for: _$s10Foundation4DataV14RangeReferenceCMa
00000000000070ec	mov	w1, #0x20
00000000000070f0	mov	w2, #0x7
00000000000070f4	bl	0x7858 ; symbol stub for: _swift_allocObject
00000000000070f8	mov	x20, x0
00000000000070fc	stp	xzr, x23, [x0, #0x10]
0000000000007100	orr	x23, x27, #0x8000000000000000
0000000000007104	add	x0, sp, #0x30
0000000000007108	bl	___swift_destroy_boxed_opaque_existential_1
000000000000710c	nop
0000000000007110	ldr	x1, #0x50a8
0000000000007114	ldr	x0, [sp, #0x18]
0000000000007118	bl	0x77e0 ; Objc message: _objc_msgSend
000000000000711c	mov	x29, x29
0000000000007120	bl	0x784c ; symbol stub for: _objc_retainAutoreleasedReturnValue
0000000000007124	mov	x27, x0
0000000000007128	mov	x0, x20
000000000000712c	mov	x1, x23
0000000000007130	bl	0x7750 ; symbol stub for: _$s10Foundation4DataV19_bridgeToObjectiveCSo6NSDataCyF
0000000000007134	mov	x28, x0
0000000000007138	nop
000000000000713c	ldr	x1, #0x5084
0000000000007140	mov	x0, x27
0000000000007144	mov	x2, x28
0000000000007148	bl	0x77e0 ; Objc message: _objc_msgSend
000000000000714c	bl	0x7834 ; symbol stub for: _objc_release_x27
0000000000007150	bl	0x7840 ; symbol stub for: _objc_release_x28
0000000000007154	mov	x0, x20
0000000000007158	mov	x1, x23
000000000000715c	bl	_$s10Foundation4DataV15_RepresentationOWOe
0000000000007160	mov	x0, x21
0000000000007164	bl	0x7870 ; symbol stub for: _swift_bridgeObjectRelease
0000000000007168	mov	x23, #0x0
000000000000716c	ldr	x28, [sp, #0x28]
0000000000007170	adds	x8, x26, x19
0000000000007174	b.vs	0x74f8
0000000000007178	cmp	x24, x8
000000000000717c	b.ge	0x718c
0000000000007180	cbz	x24, 0x7540
0000000000007184	sdiv	x8, x26, x24
0000000000007188	msub	x26, x8, x24, x26
000000000000718c	cmp	x25, x19
0000000000007190	csel	x19, x25, x19, lt
0000000000007194	adds	x27, x23, x19
0000000000007198	b.vs	0x74fc
000000000000719c	adds	x22, x26, x19
00000000000071a0	b.vs	0x7500
00000000000071a4	subs	x8, x27, x23
00000000000071a8	b.lt	0x7504
00000000000071ac	cmp	x22, x26
00000000000071b0	b.lt	0x7504
00000000000071b4	ldr	x9, [x28, #0x10]
00000000000071b8	cmp	x9, x26
00000000000071bc	b.lt	0x7508
00000000000071c0	cmp	x9, x22
00000000000071c4	b.lt	0x7508
00000000000071c8	tbnz	x23, #0x3f, 0x750c
00000000000071cc	ldr	x9, [x21, #0x10]
00000000000071d0	cmp	x9, x23
00000000000071d4	b.lt	0x7510
00000000000071d8	cmp	x9, x27
00000000000071dc	b.lt	0x7510
00000000000071e0	tbnz	x27, #0x3f, 0x7514
00000000000071e4	add	x10, x21, x23
00000000000071e8	add	x11, x10, #0x20
00000000000071ec	ldr	x10, [sp, #0x20]
00000000000071f0	add	x12, x10, x26
00000000000071f4	and	x10, x22, #0x7fffffffffffffff
00000000000071f8	cmp	x11, x12
00000000000071fc	b.eq	0x72d0
0000000000007200	subs	x28, x10, x26
0000000000007204	b.vs	0x7528
0000000000007208	subs	x8, x28, x8
000000000000720c	b.vs	0x752c
0000000000007210	adds	x20, x9, x8
0000000000007214	b.vs	0x7530
0000000000007218	ldr	x0, [sp, #0x28]
000000000000721c	bl	0x7888 ; symbol stub for: _swift_bridgeObjectRetain
0000000000007220	mov	x0, x21
0000000000007224	bl	0x78f4 ; symbol stub for: _swift_isUniquelyReferenced_nonNull_native
0000000000007228	cbz	w0, 0x7238
000000000000722c	ldr	x8, [x21, #0x18]
0000000000007230	cmp	x20, x8, lsr #1
0000000000007234	b.le	0x7254
0000000000007238	ldr	x8, [x21, #0x10]
000000000000723c	cmp	x8, x20
0000000000007240	csel	x1, x20, x8, lt
0000000000007244	mov	w2, #0x1
0000000000007248	mov	x3, x21
000000000000724c	bl	_$ss12_ArrayBufferV20_consumeAndCreateNew14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFs5UInt8V_Tg5
0000000000007250	str	x0, [sp, #0x58]
0000000000007254	mov	w6, #0x1
0000000000007258	bfi	x6, x22, #1, #63
000000000000725c	add	x20, sp, #0x58
0000000000007260	mov	x0, x23
0000000000007264	mov	x1, x27
0000000000007268	mov	x2, x28
000000000000726c	ldp	x4, x28, [sp, #0x20]
0000000000007270	mov	x3, x28
0000000000007274	mov	x5, x26
0000000000007278	bl	_$ss20_ArrayBufferProtocolPsE15replaceSubrange_4with10elementsOfySnySiG_Siqd__ntSlRd__7ElementQyd__AGRtzlFs01_aB0Vys5UInt8VG_s0A5SliceVyAMGTg5
000000000000727c	ldr	x21, [sp, #0x58]
0000000000007280	mov	x0, x21
0000000000007284	bl	0x78f4 ; symbol stub for: _swift_isUniquelyReferenced_nonNull_native
0000000000007288	tbz	w0, #0x0, 0x72ec
000000000000728c	ldr	x8, [x21, #0x10]
0000000000007290	cmp	x27, x8
0000000000007294	b.ge	0x7518
0000000000007298	add	x20, x21, #0x20
000000000000729c	mov	w8, #0xa
00000000000072a0	strb	w8, [x20, x27]
00000000000072a4	str	x21, [sp, #0x58]
00000000000072a8	adds	x8, x19, #0x1
00000000000072ac	b.vs	0x751c
00000000000072b0	adds	x23, x23, x8
00000000000072b4	b.vs	0x7520
00000000000072b8	subs	x25, x25, x19
00000000000072bc	b.vs	0x7524
00000000000072c0	mov	x26, x22
00000000000072c4	cmp	x25, #0x0
00000000000072c8	b.gt	0x6f74
00000000000072cc	b	0x72fc
00000000000072d0	cmp	x10, x26
00000000000072d4	b.lt	0x7544
00000000000072d8	cmp	x23, x26
00000000000072dc	b.ne	0x7200
00000000000072e0	cmp	x27, x10
00000000000072e4	b.eq	0x7280
00000000000072e8	b	0x7200
00000000000072ec	mov	x0, x21
00000000000072f0	bl	_$ss12_ArrayBufferV20_consumeAndCreateNewAByxGyFs5UInt8V_Tg5
00000000000072f4	mov	x21, x0
00000000000072f8	b	0x728c
00000000000072fc	cmp	x23, #0x1
0000000000007300	b.lt	0x7370
0000000000007304	ldr	x8, [x21, #0x10]
0000000000007308	cmp	x23, x8
000000000000730c	ldr	x26, [sp, #0x8]
0000000000007310	b.ge	0x7374
0000000000007314	mov	w8, #0xa
0000000000007318	strb	w8, [x20, x23]
000000000000731c	ldr	x8, [x21, #0x10]
0000000000007320	cmp	x8, x23
0000000000007324	b.lt	0x7560
0000000000007328	mov	w22, #0x1
000000000000732c	bfi	x22, x23, #1, #63
0000000000007330	mov	x0, x21
0000000000007334	bl	0x7888 ; symbol stub for: _swift_bridgeObjectRetain
0000000000007338	mov	x1, x20
000000000000733c	mov	x2, #0x0
0000000000007340	mov	x3, x22
0000000000007344	bl	_$s10Foundation4DataVyACxcSTRzs5UInt8V7ElementRtzlufCs10ArraySliceVyAEG_Tg5Tf4gd_n
0000000000007348	mov	x20, x0
000000000000734c	mov	x22, x1
0000000000007350	nop
0000000000007354	ldr	x1, #0x4e64
0000000000007358	ldr	x0, [sp, #0x18]
000000000000735c	bl	0x77e0 ; Objc message: _objc_msgSend
0000000000007360	mov	x29, x29
0000000000007364	b	0x745c
0000000000007368	mov	x23, #0x0
000000000000736c	b	0x7374
0000000000007370	ldr	x26, [sp, #0x8]
0000000000007374	ldr	x8, [x21, #0x10]
0000000000007378	cmp	x23, x8
000000000000737c	b.ne	0x74b4
0000000000007380	add	x20, x21, #0x20
0000000000007384	mov	w22, #0x1
0000000000007388	bfi	x22, x23, #1, #63
000000000000738c	mov	x0, x21
0000000000007390	bl	0x7888 ; symbol stub for: _swift_bridgeObjectRetain
0000000000007394	mov	x1, x20
0000000000007398	mov	x2, #0x0
000000000000739c	mov	x3, x22
00000000000073a0	bl	_$s10Foundation4DataVyACxcSTRzs5UInt8V7ElementRtzlufCs10ArraySliceVyAEG_Tg5Tf4gd_n
00000000000073a4	mov	x20, x0
00000000000073a8	mov	x22, x1
00000000000073ac	nop
00000000000073b0	ldr	x1, #0x4e08
00000000000073b4	ldr	x0, [sp, #0x18]
00000000000073b8	bl	0x77e0 ; Objc message: _objc_msgSend
00000000000073bc	mov	x29, x29
00000000000073c0	bl	0x784c ; symbol stub for: _objc_retainAutoreleasedReturnValue
00000000000073c4	mov	x23, x0
00000000000073c8	mov	x0, x20
00000000000073cc	mov	x1, x22
00000000000073d0	bl	0x7750 ; symbol stub for: _$s10Foundation4DataV19_bridgeToObjectiveCSo6NSDataCyF
00000000000073d4	mov	x25, x0
00000000000073d8	nop
00000000000073dc	ldr	x1, #0x4de4
00000000000073e0	mov	x0, x23
00000000000073e4	mov	x2, x25
00000000000073e8	bl	0x77e0 ; Objc message: _objc_msgSend
00000000000073ec	bl	0x7810 ; symbol stub for: _objc_release_x23
00000000000073f0	bl	0x7828 ; symbol stub for: _objc_release_x25
00000000000073f4	mov	x0, x20
00000000000073f8	mov	x1, x22
00000000000073fc	bl	_$s10Foundation4DataV15_RepresentationOWOe
0000000000007400	mov	x0, x21
0000000000007404	bl	0x7870 ; symbol stub for: _swift_bridgeObjectRelease
0000000000007408	mov	x0, x21
000000000000740c	bl	0x78f4 ; symbol stub for: _swift_isUniquelyReferenced_nonNull_native
0000000000007410	tbz	w0, #0x0, 0x7548
0000000000007414	ldr	x8, [x21, #0x10]
0000000000007418	cbz	x8, 0x755c
000000000000741c	mov	w8, #0xa
0000000000007420	mov	x20, x21
0000000000007424	strb	w8, [x20, #0x20]!
0000000000007428	mov	x0, x21
000000000000742c	bl	0x7888 ; symbol stub for: _swift_bridgeObjectRetain
0000000000007430	mov	x1, x20
0000000000007434	mov	x2, #0x0
0000000000007438	mov	w3, #0x3
000000000000743c	bl	_$s10Foundation4DataVyACxcSTRzs5UInt8V7ElementRtzlufCs10ArraySliceVyAEG_Tg5Tf4gd_n
0000000000007440	mov	x20, x0
0000000000007444	mov	x22, x1
0000000000007448	nop
000000000000744c	ldr	x1, #0x4d6c
0000000000007450	ldr	x0, [sp, #0x18]
0000000000007454	bl	0x77e0 ; Objc message: _objc_msgSend
0000000000007458	mov	x29, x29
000000000000745c	bl	0x784c ; symbol stub for: _objc_retainAutoreleasedReturnValue
0000000000007460	mov	x23, x0
0000000000007464	mov	x0, x20
0000000000007468	mov	x1, x22
000000000000746c	bl	0x7750 ; symbol stub for: _$s10Foundation4DataV19_bridgeToObjectiveCSo6NSDataCyF
0000000000007470	mov	x24, x0
0000000000007474	nop
0000000000007478	ldr	x1, #0x4d48
000000000000747c	mov	x0, x23
0000000000007480	mov	x2, x24
0000000000007484	bl	0x77e0 ; Objc message: _objc_msgSend
0000000000007488	bl	0x7810 ; symbol stub for: _objc_release_x23
000000000000748c	bl	0x781c ; symbol stub for: _objc_release_x24
0000000000007490	mov	x0, x20
0000000000007494	mov	x1, x22
0000000000007498	bl	_$s10Foundation4DataV15_RepresentationOWOe
000000000000749c	ldr	x0, [sp, #0x10]
00000000000074a0	bl	0x7870 ; symbol stub for: _swift_bridgeObjectRelease
00000000000074a4	mov	x0, x28
00000000000074a8	bl	0x7870 ; symbol stub for: _swift_bridgeObjectRelease
00000000000074ac	mov	x0, x21
00000000000074b0	b	0x74c0
00000000000074b4	ldr	x0, [sp, #0x10]
00000000000074b8	bl	0x7870 ; symbol stub for: _swift_bridgeObjectRelease
00000000000074bc	mov	x0, x28
00000000000074c0	bl	0x7870 ; symbol stub for: _swift_bridgeObjectRelease
00000000000074c4	mov	x0, x21
00000000000074c8	bl	0x7870 ; symbol stub for: _swift_bridgeObjectRelease
00000000000074cc	mov	x0, x26
00000000000074d0	bl	0x7900 ; symbol stub for: _swift_release
00000000000074d4	ldp	x29, x30, [sp, #0xb0]
00000000000074d8	ldp	x20, x19, [sp, #0xa0]
00000000000074dc	ldp	x22, x21, [sp, #0x90]
00000000000074e0	ldp	x24, x23, [sp, #0x80]
00000000000074e4	ldp	x26, x25, [sp, #0x70]
00000000000074e8	ldp	x28, x27, [sp, #0x60]
00000000000074ec	add	sp, sp, #0xc0
00000000000074f0	ret
00000000000074f4	brk	#0x1
00000000000074f8	brk	#0x1
00000000000074fc	brk	#0x1
0000000000007500	brk	#0x1
0000000000007504	brk	#0x1
0000000000007508	brk	#0x1
000000000000750c	brk	#0x1
0000000000007510	brk	#0x1
0000000000007514	brk	#0x1
0000000000007518	brk	#0x1
000000000000751c	brk	#0x1
0000000000007520	brk	#0x1
0000000000007524	brk	#0x1
0000000000007528	brk	#0x1
000000000000752c	brk	#0x1
0000000000007530	brk	#0x1
0000000000007534	brk	#0x1
0000000000007538	brk	#0x1
000000000000753c	brk	#0x1
0000000000007540	brk	#0x1
0000000000007544	brk	#0x1
0000000000007548	mov	x0, x21
000000000000754c	bl	_$ss12_ArrayBufferV20_consumeAndCreateNewAByxGyFs5UInt8V_Tg5
0000000000007550	mov	x21, x0
0000000000007554	ldr	x8, [x21, #0x10]
0000000000007558	cbnz	x8, 0x741c
000000000000755c	brk	#0x1
0000000000007560	brk	#0x1
_$s11FastaNativeAACMa:
0000000000007564	stp	x29, x30, [sp, #-0x10]!
0000000000007568	adr	x0, #0x4fa8
000000000000756c	nop
0000000000007570	bl	0x77ec ; symbol stub for: _objc_opt_self
0000000000007574	mov	x1, #0x0
0000000000007578	ldp	x29, x30, [sp], #0x10
000000000000757c	ret
___swift_memcpy9_8:
0000000000007580	ldr	x8, [x1]
0000000000007584	ldrb	w9, [x1, #0x8]
0000000000007588	strb	w9, [x0, #0x8]
000000000000758c	str	x8, [x0]
0000000000007590	ret
___swift_noop_void_return:
0000000000007594	ret
_$s11FastaNativeAAC9AminoAcidVwet:
0000000000007598	cbz	w1, 0x75b0
000000000000759c	ldrb	w8, [x0, #0x9]
00000000000075a0	cbz	w8, 0x75b0
00000000000075a4	ldr	w8, [x0]
00000000000075a8	add	w0, w8, #0x1
00000000000075ac	ret
00000000000075b0	mov	w0, #0x0
00000000000075b4	ret
_$s11FastaNativeAAC9AminoAcidVwst:
00000000000075b8	cbz	w1, 0x75d4
00000000000075bc	sub	w8, w1, #0x1
00000000000075c0	strb	wzr, [x0, #0x8]
00000000000075c4	str	x8, [x0]
00000000000075c8	cbz	w2, 0x75e0
00000000000075cc	mov	w8, #0x1
00000000000075d0	b	0x75dc
00000000000075d4	cbz	w2, 0x75e0
00000000000075d8	mov	w8, #0x0
00000000000075dc	strb	w8, [x0, #0x9]
00000000000075e0	ret
_$s11FastaNativeAAC9AminoAcidVMa:
00000000000075e4	adr	x0, #0xc44
00000000000075e8	nop
00000000000075ec	mov	x1, #0x0
00000000000075f0	ret
_$s10Foundation4DataV15_RepresentationOWOe:
00000000000075f4	stp	x20, x19, [sp, #-0x20]!
00000000000075f8	stp	x29, x30, [sp, #0x10]
00000000000075fc	add	x29, sp, #0x10
0000000000007600	mov	x19, x1
0000000000007604	lsr	x8, x1, #62
0000000000007608	cmp	w8, #0x1
000000000000760c	b.eq	0x761c
0000000000007610	cmp	w8, #0x2
0000000000007614	b.ne	0x762c
0000000000007618	bl	0x7900 ; symbol stub for: _swift_release
000000000000761c	and	x0, x19, #0x3fffffffffffffff
0000000000007620	ldp	x29, x30, [sp, #0x10]
0000000000007624	ldp	x20, x19, [sp], #0x20
0000000000007628	b	0x7900 ; symbol stub for: _swift_release
000000000000762c	ldp	x29, x30, [sp, #0x10]
0000000000007630	ldp	x20, x19, [sp], #0x20
0000000000007634	ret
_$ss10ArraySliceVys5UInt8VGAByxG10Foundation15ContiguousBytesAgDRszlWl:
0000000000007638	stp	x29, x30, [sp, #-0x10]!
000000000000763c	nop
0000000000007640	ldr	x0, #0x4ff0
0000000000007644	cbz	x0, 0x7650
0000000000007648	ldp	x29, x30, [sp], #0x10
000000000000764c	ret
0000000000007650	adr	x0, #0x4fd8
0000000000007654	nop
0000000000007658	bl	___swift_instantiateConcreteTypeFromMangledNameAbstract
000000000000765c	mov	x1, x0
0000000000007660	nop
0000000000007664	ldr	x0, #0xa04 ; literal pool symbol address: _$ss10ArraySliceVyxG10Foundation15ContiguousBytesADs5UInt8VRszlMc
0000000000007668	bl	0x78dc ; symbol stub for: _swift_getWitnessTable
000000000000766c	adr	x8, #0x4fc4
0000000000007670	nop
0000000000007674	stlr	x0, [x8]
0000000000007678	ldp	x29, x30, [sp], #0x10
000000000000767c	ret
___swift_instantiateConcreteTypeFromMangledNameAbstract:
0000000000007680	stp	x20, x19, [sp, #-0x20]!
0000000000007684	stp	x29, x30, [sp, #0x10]
0000000000007688	mov	x19, x0
000000000000768c	ldr	x0, [x0]
0000000000007690	tbnz	x0, #0x3f, 0x76a0
0000000000007694	ldp	x29, x30, [sp, #0x10]
0000000000007698	ldp	x20, x19, [sp], #0x20
000000000000769c	ret
00000000000076a0	neg	x2, x0, asr #32
00000000000076a4	add	x1, x19, w0, sxtw
00000000000076a8	mov	w0, #0xff
00000000000076ac	mov	x3, #0x0
00000000000076b0	mov	x4, #0x0
00000000000076b4	bl	0x78d0 ; symbol stub for: _swift_getTypeByMangledNameInContextInMetadataState
00000000000076b8	str	x0, [x19]
00000000000076bc	b	0x7694
00000000000076c0	stp	x29, x30, [sp, #-0x10]!
00000000000076c4	mov	x29, sp
00000000000076c8	ldr	x0, [x20, #0x10]
00000000000076cc	bl	0x7918 ; symbol stub for: _swift_unknownObjectRelease
00000000000076d0	mov	x0, x20
00000000000076d4	mov	w1, #0x30
00000000000076d8	mov	w2, #0x7
00000000000076dc	ldp	x29, x30, [sp], #0x10
00000000000076e0	b	0x78ac ; symbol stub for: _swift_deallocObject
___swift_project_boxed_opaque_existential_1:
00000000000076e4	ldur	x8, [x1, #-0x8]
00000000000076e8	ldr	w8, [x8, #0x50]
00000000000076ec	tbz	w8, #0x11, 0x7704
00000000000076f0	ldr	x9, [x0]
00000000000076f4	and	x8, x8, #0xff
00000000000076f8	add	x10, x8, #0x10
00000000000076fc	bic	x8, x10, x8
0000000000007700	add	x0, x9, x8
0000000000007704	ret
___swift_destroy_boxed_opaque_existential_1:
0000000000007708	ldr	x1, [x0, #0x18]
000000000000770c	ldur	x8, [x1, #-0x8]
0000000000007710	ldrb	w9, [x8, #0x52]
0000000000007714	tbnz	w9, #0x1, 0x7720
0000000000007718	ldr	x2, [x8, #0x8]
000000000000771c	br	x2
0000000000007720	ldr	x0, [x0]
0000000000007724	b	0x7900 ; symbol stub for: _swift_release
__swift_stdlib_malloc_size:
0000000000007728	b	0x77b0 ; symbol stub for: _malloc_size
